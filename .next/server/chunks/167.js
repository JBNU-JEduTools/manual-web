"use strict";
exports.id = 167;
exports.ids = [167];
exports.modules = {

/***/ 7702:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {


// EXPORTS
__webpack_require__.d(__webpack_exports__, {
  "H": () => (/* binding */ allBusinessDashboards)
});

;// CONCATENATED MODULE: ./.contentlayer/generated/BusinessDashboard/business-dashboard__how-to__conversation-based-pricing.mdx.json
const business_dashboard_how_to_conversation_based_pricing_mdx_namespaceObject = JSON.parse('{"id":"conversation-based-pricing","section":"How To","title":"Conversation-Based Pricing","prev":"how-to-use-analytics","next":"release-notes-version","body":{"raw":"\\nStarting February 1, 2022, WhatsApp will switch from a notification-based pricing model to a conversation-based pricing\\nmodel. Businesses will no longer be charged for sent notifications, instead, they will be charged per conversation. See\\nhow it works below for more information.\\n\\n## Terms & Definitions\\n\\n<Table>\\n  <TableBody>\\n    <TableBodyRow>\\n      <TableBodyCell>Conversation</TableBodyCell>\\n      <TableBodyCell>\\n        A session that occurs between businesses and users within 1x24 hours. Conversation via WhatsApp can be initiated\\n        by both businesses and users.\\n      </TableBodyCell>\\n    </TableBodyRow>\\n    <TableBodyRow>\\n      <TableBodyCell>User-Initiated Conversation</TableBodyCell>\\n      <TableBodyCell>\\n        A conversation initiated by a user to a business. This session starts when the business responds to the first\\n        message from a customer within 1x24 hours, either using an automated chatbot or an agent manually via the\\n        omnichannel dashboard. If the business replies to messages more than 1x24 hours from the user\'s first message,\\n        then the session will be considered a Business Initiated Conversation.\\n      </TableBodyCell>\\n    </TableBodyRow>\\n    <TableBodyRow>\\n      <TableBodyCell>Business-Initiated Conversation</TableBodyCell>\\n      <TableBodyCell>\\n        A conversation initiated by a business to a user, usually in the form of a notification template message\\n        (formerly known as a Template Message) or a message used to follow up on a User-Initiated Conversation that has\\n        lasted more than 1x24 hours. This session will be open for 1x24 hours starting from the first message sent by\\n        the business, and in that session, the business is only charged for one session even if it sends more than one\\n        message template.\\n      </TableBodyCell>\\n    </TableBodyRow>\\n    <TableBodyRow>\\n      <TableBodyCell>Kata Business Dashboard</TableBodyCell>\\n      <TableBodyCell>\\n        Product of Kata.ai for WhatsApp Business Platform management (formerly called WhatsApp Business API/WABA).\\n        Businesses can register, purchase credit independently, as well as perform uses such as number verification,\\n        submission and sending of template messages, and monitoring usage of purchased credits.\\n      </TableBodyCell>\\n    </TableBodyRow>\\n    <TableBodyRow>\\n      <TableBodyCell>Credit</TableBodyCell>\\n      <TableBodyCell>\\n        Represents the right to a number of conversations that are paid in advance, in the form of pulses in the amount\\n        of Rupiah currency, which can be reduced by the unit price of User-Initiated Conversations and/or\\n        Business-Initiated Conversations.\\n      </TableBodyCell>\\n    </TableBodyRow>\\n    <TableBodyRow>\\n      <TableBodyCell>Top-Up Credit</TableBodyCell>\\n      <TableBodyCell>a system of adding credit in bulk or wholesale paid in advance.</TableBodyCell>\\n    </TableBodyRow>\\n    <TableBodyRow>\\n      <TableBodyCell>Top-Up Pricing Tier</TableBodyCell>\\n      <TableBodyCell>\\n        Fee structuring system for top-up credit, where purchases with a larger value will get a bigger discount.\\n      </TableBodyCell>\\n    </TableBodyRow>\\n  </TableBody>\\n</Table>\\n\\n## How It Works\\n\\nWhatsApp Business API conversations fall into two different priced categories:\\n\\n1. **User-initiated**, such as customer service and general inquiries (Inbound).\\n2. **Business-initiated**, such as notifications and notifications (Outbound).\\n\\nAll conversations or “Conversations” are measured in 24-hour increments, also known as “Sessions”, which start each time\\nthe first message is delivered by the business. The first message can be a response to a user question or a\\nbusiness-initiated message template that is being delivered.\\n\\nCharges for conversations are based on the end user\'s phone number. Rates for business-initiated and user-initiated\\nconversations vary by market (country or region). See Rates for specific pricing information.\\n\\nThe first 1,000 conversations each month will be free, so your business can start building experiences your customers\\nwill love before they have to pay. In addition, conversations will not be charged when a user sends a message to a\\nbusiness using the call-to-action button on an Ad that clicks into WhatsApp or a Facebook Page CTA.\\n\\n## Scenarios\\n\\n<div className=\\"info\\">\\n  <img className=\\"borderless\\" src=\\"/assets/images/icon-info.svg\\" />\\n  <p>\\n    Disclaimer: This scenario is based on The Official Facebook documentation. The complete scenario can be found\\n    <a href=\\"https://developers.facebook.com/docs/whatsapp/pricing/conversationpricing\\" target=\\"_blank\\">\\n      here\\n    </a>\\n  </p>\\n</div>\\n\\nFor the following scenarios, we will use a user named Anne Budianto, a Commercial Air (airline) customer, and Kicks (an\\nonline shoe retailer).\\n\\nAnne prefers to use WhatsApp to message businesses as it is the fastest way to get the support and information she\\nneeds. Commercial Air and Kicks know that many of their customers prefer to connect via WhatsApp, so they are ready to\\nanswer questions or send important updates via message.\\n\\n#### 1. User-Initiated Conversation (UIC)\\n\\n<FigureImage\\n  src=\\"/assets/images/products/business-dashboard/based-pricing/table-1.webp\\"\\n  alt=\\"based-pricing-table-1.webp\\"\\n  caption={{ title: \'Figure 1.a\', description: \'Illustrated Scenario 1\' }}\\n  naturalHeight={304}\\n  naturalWidth={299}\\n/>\\n\\n**Scenario 1: User/customer service or general support questions in one 24-hour conversation session.**\\n\\n1. Our user, Anne Budianto, messaged Commercial Air with a question about an upcoming reservation. When a Commercial Air\\n   reply message is sent, a 24-hour conversation session will start.\\n2. In this scenario, all additional messages are free within a 24-hour session. This encourages Commercial Air to follow\\n   up with support questions in a timely manner while giving users the ability to exchange as many messages as needed to\\n   resolve issues in a 24-hour session.\\n3. If Commercial Air continues to exchange messages with Anne after the initial 24-hour conversation session has ended,\\n   they will be charged for the new conversation. They will also be asked to send a message template to start a new\\n   conversation if it has been more than 24 hours since Anne\'s last message, which will be charged as a\\n   business-initiated conversation.\\n   In this scenario, Anne gets the info she needs about her reservation and Commercial Air pays for a single user-initiated\\n   conversation.\\n\\nCost: **IDR 320**, for 1 UIC\\n\\n<FigureImage\\n  src=\\"/assets/images/products/business-dashboard/based-pricing/table-2.webp\\"\\n  alt=\\"based-pricing-table-2.webp\\"\\n  caption={{ title: \'Figure 1.b\', description: \'Illustrated Scenario 2\' }}\\n  naturalHeight={304}\\n  naturalWidth={299}\\n/>\\n\\n**Scenario 2: A user/customer-initiated conversation that leads to two conversations with a Message Template.**\\n\\n1. Anne wanted to check on an order she had made with Kicks, an online shoe retailer. He did it at 13:13.\\n2. Kicks have a bot set up to reply to basic order inquiries and respond to Anne with delivery details at 13:13.\\n3. As a follow-up the next day, the Kicks bot notified Anne that her order had shipped at 3:45 p.m.\\n   In this scenario, Kicks pays for one user-initiated conversation and one business-initiated conversation.\\n   Cost: **IDR 820**, for 1 UIC & 1 BIC\\n\\n#### 2. Business-Initiated Conversation (UIC)\\n\\n<FigureImage\\n  src=\\"/assets/images/products/business-dashboard/based-pricing/table-3.webp\\"\\n  alt=\\"based-pricing-table-3.webp\\"\\n  caption={{ title: \'Figure 2.a\', description: \'Illustrated Scenario 3\' }}\\n  naturalHeight={250}\\n  naturalWidth={299}\\n/>\\n\\n**Scenario 3: Business initiates sending notification messages using Message Templates.**\\n\\n1. When a flight is delayed or its status changes, Commercial Air notifies customers who have chosen to receive notifications using message templates.\\n2. Two message templates sent in one 24-hour conversation session result in one business-initiated conversation fee.\\n   In this scenario, Commercial Air wants to inform Anne that her flight is delayed by 30 minutes.\\n   Commercial Air will charge for one business-initiated conversation for sending these two message templates to Anne in a 24-hour conversation session.\\n   Cost: **IDR 500**, for 1 BIC\\n\\n<FigureImage\\n  src=\\"/assets/images/products/business-dashboard/based-pricing/table-4.webp\\"\\n  alt=\\"based-pricing-table-4.webp\\"\\n  caption={{ title: \'Figure 2.b\', description: \'Illustrated Scenario 4\' }}\\n  naturalHeight={272}\\n  naturalWidth={299}\\n/>\\n\\n**Scenario 4: The business initiates a conversation that leads to a two-way conversation with the user/customer.**\\n\\n1. When a customer places a new order from Kicks, the online retailer sends a text message to confirm the order has been received and asks the customer if they would like to receive a notification when the order is shipped.\\n2. The customer selects Yes and chooses to receive additional order notifications.\\n   In this scenario, Kicks pays for one conversation initiated by the business.\\n\\nIf the user replies more than 24 hours after sending the initial business message and is followed by a business reply, it will result in a new conversation initiated by the user.\\n\\nCost:<br/>\\na. **IDR 500**, for 1 BIC, if the user does not reply to the message.<br/>\\nb. **IDR 500**, for 1 BIC, if the user replies within 1x24 hours.<br/>\\nc. **IDR 820**, for 1 BIC & 1 UIC, if the user replies after 1x24 hours.<br/>\\n\\nThese are four common conversation scenarios between businesses and users. If you still have questions regarding the\\ncomparison of the scenarios above, not limited to other possibilities that can occur between business and user\\nconversations, please contact the Kata.ai team to discuss it further.\\n\\n## Pricing\\n\\nThe pricing scheme continues to use the credit system with a top-up in bulk. Imagine buying a prepaid cell phone number that will be reduced by Business-Initiated Conversation and/or User-Initiated Conversation according to the number of conversations initiated by businesses and users.\\n\\nDon\'t worry because no major changes have occurred. We only convert credit purchases that previously used the number of messages to be sent, into Rupiah currency values ​​that can be used for the existing types of conversations. The tiering system still applies, the more credits you buy, the bigger the discount you get.\\n\\nTo accommodate changes in pricing schemes that occur, said the Business Dashboard to be updated to make it easier to use and monitor credit and the amount of usage. The latest update will be released on February 1, 2022, along with the price changes of the WhatsApp Business API.\\n\\n#### 1. IDR, for Indonesian Numbers Only\\n\\n<Table>\\n  <TableHead>\\n    <TableHeadRow>\\n      <TableHeadCell>Conversation Type</TableHeadCell>\\n      <TableHeadCell>Price, IDR (per Conversation)</TableHeadCell>\\n    </TableHeadRow>\\n  </TableHead>\\n  <TableBody>\\n    <TableBodyRow>\\n      <TableBodyCell>Business-Initiated Conversation</TableBodyCell>\\n      <TableBodyCell>IDR 500</TableBodyCell>\\n    </TableBodyRow>\\n    <TableBodyRow>\\n      <TableBodyCell>User-Initiated Conversation</TableBodyCell>\\n      <TableBodyCell>IDR 320</TableBodyCell>\\n    </TableBodyRow>\\n  </TableBody>\\n</Table>\\n\\n<Table>\\n  <TableHead>\\n    <TableBodyRow>\\n      <TableHeadCell>Top-Up Credit (IDR)</TableHeadCell>\\n      <TableHeadCell>Discount (%)</TableHeadCell>\\n      <TableHeadCell>Discount (IDR)</TableHeadCell>\\n      <TableHeadCell>Final Price (IDR)</TableHeadCell>\\n    </TableBodyRow>\\n  </TableHead>\\n  <TableBody>\\n    <TableBodyRow>\\n      <TableBodyCell>IDR 5,000,000</TableBodyCell>\\n      <TableBodyCell>2.00%</TableBodyCell>\\n      <TableBodyCell>IDR 100,000</TableBodyCell>\\n      <TableBodyCell>IDR 4,900,000</TableBodyCell>\\n    </TableBodyRow>\\n    <TableBodyRow>\\n      <TableBodyCell>IDR 20,000,000</TableBodyCell>\\n      <TableBodyCell>3.00%</TableBodyCell>\\n      <TableBodyCell>IDR 600,000</TableBodyCell>\\n      <TableBodyCell>IDR 19,400,000</TableBodyCell>\\n    </TableBodyRow>\\n    <TableBodyRow>\\n      <TableBodyCell>IDR 50,000,000</TableBodyCell>\\n      <TableBodyCell>4.00%</TableBodyCell>\\n      <TableBodyCell>IDR 2,000,000</TableBodyCell>\\n      <TableBodyCell>IDR 48,000,000</TableBodyCell>\\n    </TableBodyRow>\\n    <TableBodyRow>\\n      <TableBodyCell>IDR 100,000,000</TableBodyCell>\\n      <TableBodyCell>5.00%</TableBodyCell>\\n      <TableBodyCell>IDR 5,000,000</TableBodyCell>\\n      <TableBodyCell>IDR 95,000,000</TableBodyCell>\\n    </TableBodyRow>\\n  </TableBody>\\n</Table>\\n\\n#### 2. IDR, for Non-Indonesian Numbers\\n\\nPrices for credit deductions from and for non-Indonesian numbers can be seen on: <a href=\\"https://developers.facebook.com/docs/whatsapp/pricing/conversationpricing#cost-per-conversation-in-idr\\" target=\\"_blank\\"><span>http</span>s://developers.facebook.com/docs/whatsapp/pricing/conversationpricing#cost-per-conversation-in-idr</a> with a small round-up to the next dollar, plus an additional BSP Fee of **+IDR 50** for both types of messages on WhatsApp, namely User-Initiated Conversation and Business-Initiated Conversation.\\n\\nExample:\\n\\na. User-Initiated Conversation from Germany number<br/>\\nCost: IDR 1,169.20<br/>\\nRound-up: IDR 1,170<br/>\\nBSP Fee of IDR 50 = **IDR 1,220**\\n\\nb. Business-Initiated Conversation sent to a German number<br/>\\nCost: IDR 1,948.66<br/>\\nRound-up: IDR 1,949<br/>\\nBSP Fee of IDR 50 = **IDR 1,999**\\n\\n**<u>Final Price for Non-Indonesian Countries:</u>**\\n\\n<Table>\\n  <TableHead>\\n    <TableBodyRow>\\n      <TableHeadCell>Country</TableHeadCell>\\n      <TableHeadCell>User-Initiated Conversation (IDR)</TableHeadCell>\\n      <TableHeadCell>Business-Initiated Conversation (IDR)</TableHeadCell>\\n    </TableBodyRow>\\n  </TableHead>\\n  <TableBody>\\n    <TableBodyRow>\\n      <TableBodyCell>Argentina</TableBodyCell>\\n      <TableBodyCell>IDR 501</TableBodyCell>\\n      <TableBodyCell>IDR 801</TableBodyCell>\\n    </TableBodyRow>\\n    <TableBodyRow>\\n      <TableBodyCell>Brazil</TableBodyCell>\\n      <TableBodyCell>IDR 479</TableBodyCell>\\n      <TableBodyCell>IDR 764</TableBodyCell>\\n    </TableBodyRow>\\n    <TableBodyRow>\\n      <TableBodyCell>Chile</TableBodyCell>\\n      <TableBodyCell>IDR 699</TableBodyCell>\\n      <TableBodyCell>IDR 1,131</TableBodyCell>\\n    </TableBodyRow>\\n    <TableBodyRow>\\n      <TableBodyCell>Colombia</TableBodyCell>\\n      <TableBodyCell>IDR 136</TableBodyCell>\\n      <TableBodyCell>IDR 193</TableBodyCell>\\n    </TableBodyRow>\\n    <TableBodyRow>\\n      <TableBodyCell>Egypt</TableBodyCell>\\n      <TableBodyCell>IDR 969</TableBodyCell>\\n      <TableBodyCell>IDR 1,582</TableBodyCell>\\n    </TableBodyRow>\\n    <TableBodyRow>\\n      <TableBodyCell>France</TableBodyCell>\\n      <TableBodyCell>IDR 1,277</TableBodyCell>\\n      <TableBodyCell>IDR 2,095</TableBodyCell>\\n    </TableBodyRow>\\n    <TableBodyRow>\\n      <TableBodyCell>Germany</TableBodyCell>\\n      <TableBodyCell>IDR 1,220</TableBodyCell>\\n      <TableBodyCell>IDR 1,999</TableBodyCell>\\n    </TableBodyRow>\\n    <TableBodyRow>\\n      <TableBodyCell>India</TableBodyCell>\\n      <TableBodyCell>IDR 107</TableBodyCell>\\n      <TableBodyCell>IDR 145</TableBodyCell>\\n    </TableBodyRow>\\n    <TableBodyRow>\\n      <TableBodyCell>Israel</TableBodyCell>\\n      <TableBodyCell>IDR 307</TableBodyCell>\\n      <TableBodyCell>IDR 479</TableBodyCell>\\n    </TableBodyRow>\\n    <TableBodyRow>\\n      <TableBodyCell>Italy</TableBodyCell>\\n      <TableBodyCell>IDR 601</TableBodyCell>\\n      <TableBodyCell>IDR 968</TableBodyCell>\\n    </TableBodyRow>\\n    <TableBodyRow>\\n      <TableBodyCell>Malaysia</TableBodyCell>\\n      <TableBodyCell>IDR 364</TableBodyCell>\\n      <TableBodyCell>IDR 1,095</TableBodyCell>\\n    </TableBodyRow>\\n    <TableBodyRow>\\n      <TableBodyCell>Mexico</TableBodyCell>\\n      <TableBodyCell>IDR 200</TableBodyCell>\\n      <TableBodyCell>IDR 548</TableBodyCell>\\n    </TableBodyRow>\\n    <TableBodyRow>\\n      <TableBodyCell>Netherlands</TableBodyCell>\\n      <TableBodyCell>IDR 1,322</TableBodyCell>\\n      <TableBodyCell>IDR 2,170</TableBodyCell>\\n    </TableBodyRow>\\n    <TableBodyRow>\\n      <TableBodyCell>Nigeria</TableBodyCell>\\n      <TableBodyCell>IDR 493</TableBodyCell>\\n      <TableBodyCell>IDR 788</TableBodyCell>\\n    </TableBodyRow>\\n    <TableBodyRow>\\n      <TableBodyCell>Pakistan</TableBodyCell>\\n      <TableBodyCell>IDR 253</TableBodyCell>\\n      <TableBodyCell>IDR 726</TableBodyCell>\\n    </TableBodyRow>\\n    <TableBodyRow>\\n      <TableBodyCell>Peru</TableBodyCell>\\n      <TableBodyCell>IDR 307</TableBodyCell>\\n      <TableBodyCell>IDR 904</TableBodyCell>\\n    </TableBodyRow>\\n    <TableBodyRow>\\n      <TableBodyCell>Russia</TableBodyCell>\\n      <TableBodyCell>IDR 618</TableBodyCell>\\n      <TableBodyCell>IDR 997</TableBodyCell>\\n    </TableBodyRow>\\n    <TableBodyRow>\\n      <TableBodyCell>Saudi Arabia</TableBodyCell>\\n      <TableBodyCell>IDR 329</TableBodyCell>\\n      <TableBodyCell>IDR 514</TableBodyCell>\\n    </TableBodyRow>\\n    <TableBodyRow>\\n      <TableBodyCell>South Africa</TableBodyCell>\\n      <TableBodyCell>IDR 291</TableBodyCell>\\n      <TableBodyCell>IDR 451</TableBodyCell>\\n    </TableBodyRow>\\n    <TableBodyRow>\\n      <TableBodyCell>Spain</TableBodyCell>\\n      <TableBodyCell>IDR 577</TableBodyCell>\\n      <TableBodyCell>IDR 928</TableBodyCell>\\n    </TableBodyRow>\\n    <TableBodyRow>\\n      <TableBodyCell>Turkey</TableBodyCell>\\n      <TableBodyCell>IDR 93</TableBodyCell>\\n      <TableBodyCell>IDR 193</TableBodyCell>\\n    </TableBodyRow>\\n    <TableBodyRow>\\n      <TableBodyCell>United Arab Emirates</TableBodyCell>\\n      <TableBodyCell>IDR 321</TableBodyCell>\\n      <TableBodyCell>IDR 502</TableBodyCell>\\n    </TableBodyRow>\\n    <TableBodyRow>\\n      <TableBodyCell>United Kingdom</TableBodyCell>\\n      <TableBodyCell>IDR 604</TableBodyCell>\\n      <TableBodyCell>IDR 974</TableBodyCell>\\n    </TableBodyRow>\\n    <TableBodyRow>\\n      <TableBodyCell>North America*</TableBodyCell>\\n      <TableBodyCell>IDR 176</TableBodyCell>\\n      <TableBodyCell>IDR 260</TableBodyCell>\\n    </TableBodyRow>\\n    <TableBodyRow>\\n      <TableBodyCell>Rest of Africa*</TableBodyCell>\\n      <TableBodyCell>IDR 568</TableBodyCell>\\n      <TableBodyCell>IDR 1,775</TableBodyCell>\\n    </TableBodyRow>\\n    <TableBodyRow>\\n      <TableBodyCell>Rest of Asia Pacific*</TableBodyCell>\\n      <TableBodyCell>IDR 370</TableBodyCell>\\n      <TableBodyCell>IDR 1,114</TableBodyCell>\\n    </TableBodyRow>\\n    <TableBodyRow>\\n      <TableBodyCell>Rest of Central &amp; Eastern Europe*</TableBodyCell>\\n      <TableBodyCell>IDR 408</TableBodyCell>\\n      <TableBodyCell>IDR 1,242</TableBodyCell>\\n    </TableBodyRow>\\n    <TableBodyRow>\\n      <TableBodyCell>Rest of Latin America*</TableBodyCell>\\n      <TableBodyCell>IDR 655</TableBodyCell>\\n      <TableBodyCell>IDR 1,058</TableBodyCell>\\n    </TableBodyRow>\\n    <TableBodyRow>\\n      <TableBodyCell>Rest of Middle East*</TableBodyCell>\\n      <TableBodyCell>IDR 362</TableBodyCell>\\n      <TableBodyCell>IDR 1,088</TableBodyCell>\\n    </TableBodyRow>\\n    <TableBodyRow>\\n      <TableBodyCell>Rest of Western Europe*</TableBodyCell>\\n      <TableBodyCell>IDR 617</TableBodyCell>\\n      <TableBodyCell>IDR 1,940</TableBodyCell>\\n    </TableBodyRow>\\n    <TableBodyRow>\\n      <TableBodyCell>Other*</TableBodyCell>\\n      <TableBodyCell>IDR 257</TableBodyCell>\\n      <TableBodyCell>IDR 740</TableBodyCell>\\n    </TableBodyRow>\\n  </TableBody>\\n</Table>\\n\\n**<u> \\\\* Rest of Non-Indonesian Country Groups:</u>**\\n\\n<Table>\\n  <TableBody>\\n    <TableBodyRow>\\n      <TableBodyCell>\\n        <b>North America:</b>\\n        <br />\\n        Canada\\n        <br />\\n        United States\\n        <br />\\n        <br />\\n      </TableBodyCell>\\n      <TableBodyCell>\\n        <b>Rest of Asia Pacific:</b>\\n        <br />\\n        Afghanistan\\n        <br />\\n        Australia\\n        <br />\\n        Bangladesh\\n        <br />\\n        Cambodia\\n        <br />\\n        China\\n        <br />\\n        Hong Kong\\n        <br />\\n        Japan\\n        <br />\\n        Laos\\n        <br />\\n        Mongolia\\n        <br />\\n        Nepal\\n        <br />\\n        New Zealand\\n        <br />\\n        Papua New Guinea\\n        <br />\\n        Philippines\\n        <br />\\n        Singapore\\n        <br />\\n        Sri Lanka\\n        <br />\\n        Taiwan\\n        <br />\\n        Tajikistan\\n        <br />\\n        Thailand\\n        <br />\\n        Turkmenistan\\n        <br />\\n        Uzbekistan\\n        <br />\\n        Vietnam\\n      </TableBodyCell>\\n      <TableBodyCell>\\n        <b>Rest of Latin America:</b>\\n        <br />\\n        Bolivia\\n        <br />\\n        Costa Rica\\n        <br />\\n        Dominican Republic\\n        <br />\\n        Ecuador\\n        <br />\\n        El Salvador\\n        <br />\\n        Guatemala\\n        <br />\\n        Haiti\\n        <br />\\n        Honduras\\n        <br />\\n        Jamaica\\n        <br />\\n        Nicaragua\\n        <br />\\n        Panama\\n        <br />\\n        Paraguay\\n        <br />\\n        Puerto Rico\\n        <br />\\n        Uruguay\\n        <br />\\n        Venezuela\\n      </TableBodyCell>\\n    </TableBodyRow>\\n    <TableBodyRow>\\n      <TableBodyCell>\\n        <b>Rest of Africa:</b>\\n        <br />\\n        Algeria\\n        <br />\\n        Angola\\n        <br />\\n        Benin\\n        <br />\\n        Botswana\\n        <br />\\n        Burkina Faso\\n        <br />\\n        Burundi\\n        <br />\\n        Cameroon\\n        <br />\\n        Chad\\n        <br />\\n        Congo\\n        <br />\\n        Eritrea\\n        <br />\\n        Ethiopia\\n        <br />\\n        Gabon\\n        <br />\\n        Gambia\\n        <br />\\n        Ghana\\n        <br />\\n        Guinea-Bissau\\n        <br />\\n        Ivory Coast\\n        <br />\\n        Kenya\\n        <br />\\n        Lesotho\\n        <br />\\n        Liberia\\n        <br />\\n        Libya\\n        <br />\\n        Madagascar\\n        <br />\\n        Malawi\\n        <br />\\n        Mali\\n        <br />\\n        Mauritania\\n        <br />\\n        Morocco\\n        <br />\\n        Mozambique\\n        <br />\\n        Namibia\\n        <br />\\n        Niger\\n        <br />\\n        Rwanda\\n        <br />\\n        Senegal\\n        <br />\\n        Sierra Leone\\n        <br />\\n        Somalia\\n        <br />\\n        South Sudan\\n        <br />\\n        Sudan\\n        <br />\\n        Swaziland\\n        <br />\\n        Tanzania\\n        <br />\\n        Togo\\n        <br />\\n        Tunisia\\n        <br />\\n        Uganda\\n        <br />\\n        Zambia\\n        <br />\\n      </TableBodyCell>\\n      <TableBodyCell>\\n        \\n        <b>Rest of Central & Eastern Europe:</b>\\n        <br />\\n        Albania\\n        <br />\\n        Armenia\\n        <br />\\n        Azerbaijan\\n        <br />\\n        Belarus\\n        <br />\\n        Bulgaria\\n        <br />\\n        Croatia\\n        <br />\\n        Czech Republic\\n        <br />\\n        Georgia\\n        <br />\\n        Greece\\n        <br />\\n        Hungary\\n        <br />\\n        Latvia\\n        <br />\\n        Lithuania\\n        <br />\\n        Macedonia\\n        <br />\\n        Moldova\\n        <br />\\n        Poland\\n        <br />\\n        Romania\\n        <br />\\n        Serbia\\n        <br />\\n        Slovakia\\n        <br />\\n        Slovenia\\n        <br />\\n        Ukraine\\n      </TableBodyCell>\\n      <TableBodyCell>\\n        <b>Rest of Middle East:</b>\\n        <br />\\n        Bahrain\\n        <br />\\n        Iraq\\n        <br />\\n        Jordan\\n        <br />\\n        Kuwait\\n        <br />\\n        Lebanon\\n        <br />\\n        Oman\\n        <br />\\n        Qatar\\n        <br />\\n        Yemen\\n        <br />\\n        <br />\\n        <b>Rest of Western Europe:</b>\\n        <br />\\n        Austria\\n        <br />\\n        Belgium\\n        <br />\\n        Denmark\\n        <br />\\n        Finland\\n        <br />\\n        Ireland\\n        <br />\\n        Norway\\n        <br />\\n        Portugal\\n        <br />\\n        Sweden\\n        <br />\\n        Switzerland\\n        <br />\\n        <br />\\n        <b>Other:</b>\\n        <br />\\n        All other countries not listed\\n        <br />\\n        in the above regions or\\n        <br />\\n        specifically listed in the above tables\\n        <br />\\n      </TableBodyCell>\\n    </TableBodyRow>\\n\\n  </TableBody>\\n</Table>\\n\\n## Credit Carry Over Policy\\n\\nFor loyal Kata.ai customers and our partners who still have a credit balance from purchases before replacement and price negotiations. Credit from your business can be converted and can still be valid until the expiration limit of the top-up purchase in the previous period.\\n\\nExample:\\nRemaining credit 100,000 Template Message \\\\* IDR 400 (old price) = **IDR 40,000,000** remaining credit that can be converted into conversations.\\nRemaining credit IDR 40,000,000 / IDR 500 (new price) = **80,000** Total Business-Initiated Conversation\\nRemaining credit IDR 40,000,000 / IDR 320 (new price) = **125,000** Total User-Initiated Conversation\\n\\nThe deduction for Business-Initiated Conversation and User-Initiated Conversation will use the new prices listed in point 1 above.\\n\\nFor other topics that have not been discussed in this notification letter or for further questions regarding this price plan change, please contact your consultant for further clarification or contact sales@kata.ai\\n","code":"var Component=(()=>{var R=Object.create;var b=Object.defineProperty;var v=Object.getOwnPropertyDescriptor;var w=Object.getOwnPropertyNames;var D=Object.getPrototypeOf,y=Object.prototype.hasOwnProperty;var m=s=>b(s,\\"__esModule\\",{value:!0});var C=(s,a)=>()=>(a||s((a={exports:{}}).exports,a),a.exports),A=(s,a)=>{for(var o in a)b(s,o,{get:a[o],enumerable:!0})},g=(s,a,o,n)=>{if(a&&typeof a==\\"object\\"||typeof a==\\"function\\")for(let t of w(a))!y.call(s,t)&&(o||t!==\\"default\\")&&b(s,t,{get:()=>a[t],enumerable:!(n=v(a,t))||n.enumerable});return s},T=(s,a)=>g(m(b(s!=null?R(D(s)):{},\\"default\\",!a&&s&&s.__esModule?{get:()=>s.default,enumerable:!0}:{value:s,enumerable:!0})),s),k=(s=>(a,o)=>s&&s.get(a)||(o=g(m({}),a,1),s&&s.set(a,o),o))(typeof WeakMap!=\\"undefined\\"?new WeakMap:0);var I=C((U,f)=>{f.exports=_jsx_runtime});var x={};A(x,{default:()=>S,frontmatter:()=>B});var e=T(I()),B={prev:\\"how-to-use-analytics\\",next:\\"release-notes-version\\",id:\\"conversation-based-pricing\\",title:\\"Conversation-Based Pricing\\",section:\\"How To\\"};function N(s={}){let{wrapper:a}=s.components||{};return a?(0,e.jsx)(a,Object.assign({},s,{children:(0,e.jsx)(o,{})})):o();function o(){let n=Object.assign({p:\\"p\\",h2:\\"h2\\",a:\\"a\\",span:\\"span\\",ol:\\"ol\\",li:\\"li\\",strong:\\"strong\\",h4:\\"h4\\"},s.components),{Table:t,TableBody:d,TableBodyRow:r,TableBodyCell:i,FigureImage:h,TableHead:p,TableHeadRow:u,TableHeadCell:c}=n;return h||l(\\"FigureImage\\",!0),t||l(\\"Table\\",!0),d||l(\\"TableBody\\",!0),i||l(\\"TableBodyCell\\",!0),r||l(\\"TableBodyRow\\",!0),p||l(\\"TableHead\\",!0),c||l(\\"TableHeadCell\\",!0),u||l(\\"TableHeadRow\\",!0),(0,e.jsxs)(e.Fragment,{children:[(0,e.jsx)(n.p,{children:`Starting February 1, 2022, WhatsApp will switch from a notification-based pricing model to a conversation-based pricing\\nmodel. Businesses will no longer be charged for sent notifications, instead, they will be charged per conversation. See\\nhow it works below for more information.`}),`\\n`,(0,e.jsxs)(n.h2,{id:\\"terms--definitions\\",children:[(0,e.jsx)(n.a,{className:\\"anchor\\",href:\\"#terms--definitions\\",children:(0,e.jsx)(n.span,{className:\\"icon icon-link\\"})}),\\"Terms & Definitions\\"]}),`\\n`,(0,e.jsx)(t,{children:(0,e.jsxs)(d,{children:[(0,e.jsxs)(r,{children:[(0,e.jsx)(i,{children:\\"Conversation\\"}),(0,e.jsx)(i,{children:(0,e.jsx)(n.p,{children:`A session that occurs between businesses and users within 1x24 hours. Conversation via WhatsApp can be initiated\\nby both businesses and users.`})})]}),(0,e.jsxs)(r,{children:[(0,e.jsx)(i,{children:\\"User-Initiated Conversation\\"}),(0,e.jsx)(i,{children:(0,e.jsx)(n.p,{children:`A conversation initiated by a user to a business. This session starts when the business responds to the first\\nmessage from a customer within 1x24 hours, either using an automated chatbot or an agent manually via the\\nomnichannel dashboard. If the business replies to messages more than 1x24 hours from the user\'s first message,\\nthen the session will be considered a Business Initiated Conversation.`})})]}),(0,e.jsxs)(r,{children:[(0,e.jsx)(i,{children:\\"Business-Initiated Conversation\\"}),(0,e.jsx)(i,{children:(0,e.jsx)(n.p,{children:`A conversation initiated by a business to a user, usually in the form of a notification template message\\n(formerly known as a Template Message) or a message used to follow up on a User-Initiated Conversation that has\\nlasted more than 1x24 hours. This session will be open for 1x24 hours starting from the first message sent by\\nthe business, and in that session, the business is only charged for one session even if it sends more than one\\nmessage template.`})})]}),(0,e.jsxs)(r,{children:[(0,e.jsx)(i,{children:\\"Kata Business Dashboard\\"}),(0,e.jsx)(i,{children:(0,e.jsx)(n.p,{children:`Product of Kata.ai for WhatsApp Business Platform management (formerly called WhatsApp Business API/WABA).\\nBusinesses can register, purchase credit independently, as well as perform uses such as number verification,\\nsubmission and sending of template messages, and monitoring usage of purchased credits.`})})]}),(0,e.jsxs)(r,{children:[(0,e.jsx)(i,{children:\\"Credit\\"}),(0,e.jsx)(i,{children:(0,e.jsx)(n.p,{children:`Represents the right to a number of conversations that are paid in advance, in the form of pulses in the amount\\nof Rupiah currency, which can be reduced by the unit price of User-Initiated Conversations and/or\\nBusiness-Initiated Conversations.`})})]}),(0,e.jsxs)(r,{children:[(0,e.jsx)(i,{children:\\"Top-Up Credit\\"}),`\\n`,(0,e.jsx)(i,{children:\\"a system of adding credit in bulk or wholesale paid in advance.\\"})]}),(0,e.jsxs)(r,{children:[(0,e.jsx)(i,{children:\\"Top-Up Pricing Tier\\"}),(0,e.jsx)(i,{children:(0,e.jsx)(n.p,{children:\\"Fee structuring system for top-up credit, where purchases with a larger value will get a bigger discount.\\"})})]})]})}),`\\n`,(0,e.jsxs)(n.h2,{id:\\"how-it-works\\",children:[(0,e.jsx)(n.a,{className:\\"anchor\\",href:\\"#how-it-works\\",children:(0,e.jsx)(n.span,{className:\\"icon icon-link\\"})}),\\"How It Works\\"]}),`\\n`,(0,e.jsx)(n.p,{children:\\"WhatsApp Business API conversations fall into two different priced categories:\\"}),`\\n`,(0,e.jsxs)(n.ol,{children:[`\\n`,(0,e.jsxs)(n.li,{children:[(0,e.jsx)(n.strong,{children:\\"User-initiated\\"}),\\", such as customer service and general inquiries (Inbound).\\"]}),`\\n`,(0,e.jsxs)(n.li,{children:[(0,e.jsx)(n.strong,{children:\\"Business-initiated\\"}),\\", such as notifications and notifications (Outbound).\\"]}),`\\n`]}),`\\n`,(0,e.jsx)(n.p,{children:`All conversations or \\\\u201CConversations\\\\u201D are measured in 24-hour increments, also known as \\\\u201CSessions\\\\u201D, which start each time\\nthe first message is delivered by the business. The first message can be a response to a user question or a\\nbusiness-initiated message template that is being delivered.`}),`\\n`,(0,e.jsx)(n.p,{children:`Charges for conversations are based on the end user\'s phone number. Rates for business-initiated and user-initiated\\nconversations vary by market (country or region). See Rates for specific pricing information.`}),`\\n`,(0,e.jsx)(n.p,{children:`The first 1,000 conversations each month will be free, so your business can start building experiences your customers\\nwill love before they have to pay. In addition, conversations will not be charged when a user sends a message to a\\nbusiness using the call-to-action button on an Ad that clicks into WhatsApp or a Facebook Page CTA.`}),`\\n`,(0,e.jsxs)(n.h2,{id:\\"scenarios\\",children:[(0,e.jsx)(n.a,{className:\\"anchor\\",href:\\"#scenarios\\",children:(0,e.jsx)(n.span,{className:\\"icon icon-link\\"})}),\\"Scenarios\\"]}),`\\n`,(0,e.jsxs)(\\"div\\",{className:\\"info\\",children:[(0,e.jsx)(\\"img\\",{className:\\"borderless\\",src:\\"/assets/images/icon-info.svg\\"}),(0,e.jsxs)(\\"p\\",{children:[(0,e.jsx)(n.p,{children:\\"Disclaimer: This scenario is based on The Official Facebook documentation. The complete scenario can be found\\"}),(0,e.jsx)(\\"a\\",{href:\\"https://developers.facebook.com/docs/whatsapp/pricing/conversationpricing\\",target:\\"_blank\\",children:(0,e.jsx)(n.p,{children:\\"here\\"})})]})]}),`\\n`,(0,e.jsx)(n.p,{children:`For the following scenarios, we will use a user named Anne Budianto, a Commercial Air (airline) customer, and Kicks (an\\nonline shoe retailer).`}),`\\n`,(0,e.jsx)(n.p,{children:`Anne prefers to use WhatsApp to message businesses as it is the fastest way to get the support and information she\\nneeds. Commercial Air and Kicks know that many of their customers prefer to connect via WhatsApp, so they are ready to\\nanswer questions or send important updates via message.`}),`\\n`,(0,e.jsxs)(n.h4,{id:\\"1-user-initiated-conversation-uic\\",children:[(0,e.jsx)(n.a,{className:\\"anchor\\",href:\\"#1-user-initiated-conversation-uic\\",children:(0,e.jsx)(n.span,{className:\\"icon icon-link\\"})}),\\"1. User-Initiated Conversation (UIC)\\"]}),`\\n`,(0,e.jsx)(h,{src:\\"/assets/images/products/business-dashboard/based-pricing/table-1.webp\\",alt:\\"based-pricing-table-1.webp\\",caption:{title:\\"Figure 1.a\\",description:\\"Illustrated Scenario 1\\"},naturalHeight:304,naturalWidth:299}),`\\n`,(0,e.jsx)(n.p,{children:(0,e.jsx)(n.strong,{children:\\"Scenario 1: User/customer service or general support questions in one 24-hour conversation session.\\"})}),`\\n`,(0,e.jsxs)(n.ol,{children:[`\\n`,(0,e.jsx)(n.li,{children:`Our user, Anne Budianto, messaged Commercial Air with a question about an upcoming reservation. When a Commercial Air\\nreply message is sent, a 24-hour conversation session will start.`}),`\\n`,(0,e.jsx)(n.li,{children:`In this scenario, all additional messages are free within a 24-hour session. This encourages Commercial Air to follow\\nup with support questions in a timely manner while giving users the ability to exchange as many messages as needed to\\nresolve issues in a 24-hour session.`}),`\\n`,(0,e.jsx)(n.li,{children:`If Commercial Air continues to exchange messages with Anne after the initial 24-hour conversation session has ended,\\nthey will be charged for the new conversation. They will also be asked to send a message template to start a new\\nconversation if it has been more than 24 hours since Anne\'s last message, which will be charged as a\\nbusiness-initiated conversation.\\nIn this scenario, Anne gets the info she needs about her reservation and Commercial Air pays for a single user-initiated\\nconversation.`}),`\\n`]}),`\\n`,(0,e.jsxs)(n.p,{children:[\\"Cost: \\",(0,e.jsx)(n.strong,{children:\\"IDR 320\\"}),\\", for 1 UIC\\"]}),`\\n`,(0,e.jsx)(h,{src:\\"/assets/images/products/business-dashboard/based-pricing/table-2.webp\\",alt:\\"based-pricing-table-2.webp\\",caption:{title:\\"Figure 1.b\\",description:\\"Illustrated Scenario 2\\"},naturalHeight:304,naturalWidth:299}),`\\n`,(0,e.jsx)(n.p,{children:(0,e.jsx)(n.strong,{children:\\"Scenario 2: A user/customer-initiated conversation that leads to two conversations with a Message Template.\\"})}),`\\n`,(0,e.jsxs)(n.ol,{children:[`\\n`,(0,e.jsx)(n.li,{children:\\"Anne wanted to check on an order she had made with Kicks, an online shoe retailer. He did it at 13:13.\\"}),`\\n`,(0,e.jsx)(n.li,{children:\\"Kicks have a bot set up to reply to basic order inquiries and respond to Anne with delivery details at 13:13.\\"}),`\\n`,(0,e.jsxs)(n.li,{children:[`As a follow-up the next day, the Kicks bot notified Anne that her order had shipped at 3:45 p.m.\\nIn this scenario, Kicks pays for one user-initiated conversation and one business-initiated conversation.\\nCost: `,(0,e.jsx)(n.strong,{children:\\"IDR 820\\"}),\\", for 1 UIC & 1 BIC\\"]}),`\\n`]}),`\\n`,(0,e.jsxs)(n.h4,{id:\\"2-business-initiated-conversation-uic\\",children:[(0,e.jsx)(n.a,{className:\\"anchor\\",href:\\"#2-business-initiated-conversation-uic\\",children:(0,e.jsx)(n.span,{className:\\"icon icon-link\\"})}),\\"2. Business-Initiated Conversation (UIC)\\"]}),`\\n`,(0,e.jsx)(h,{src:\\"/assets/images/products/business-dashboard/based-pricing/table-3.webp\\",alt:\\"based-pricing-table-3.webp\\",caption:{title:\\"Figure 2.a\\",description:\\"Illustrated Scenario 3\\"},naturalHeight:250,naturalWidth:299}),`\\n`,(0,e.jsx)(n.p,{children:(0,e.jsx)(n.strong,{children:\\"Scenario 3: Business initiates sending notification messages using Message Templates.\\"})}),`\\n`,(0,e.jsxs)(n.ol,{children:[`\\n`,(0,e.jsx)(n.li,{children:\\"When a flight is delayed or its status changes, Commercial Air notifies customers who have chosen to receive notifications using message templates.\\"}),`\\n`,(0,e.jsxs)(n.li,{children:[`Two message templates sent in one 24-hour conversation session result in one business-initiated conversation fee.\\nIn this scenario, Commercial Air wants to inform Anne that her flight is delayed by 30 minutes.\\nCommercial Air will charge for one business-initiated conversation for sending these two message templates to Anne in a 24-hour conversation session.\\nCost: `,(0,e.jsx)(n.strong,{children:\\"IDR 500\\"}),\\", for 1 BIC\\"]}),`\\n`]}),`\\n`,(0,e.jsx)(h,{src:\\"/assets/images/products/business-dashboard/based-pricing/table-4.webp\\",alt:\\"based-pricing-table-4.webp\\",caption:{title:\\"Figure 2.b\\",description:\\"Illustrated Scenario 4\\"},naturalHeight:272,naturalWidth:299}),`\\n`,(0,e.jsx)(n.p,{children:(0,e.jsx)(n.strong,{children:\\"Scenario 4: The business initiates a conversation that leads to a two-way conversation with the user/customer.\\"})}),`\\n`,(0,e.jsxs)(n.ol,{children:[`\\n`,(0,e.jsx)(n.li,{children:\\"When a customer places a new order from Kicks, the online retailer sends a text message to confirm the order has been received and asks the customer if they would like to receive a notification when the order is shipped.\\"}),`\\n`,(0,e.jsx)(n.li,{children:`The customer selects Yes and chooses to receive additional order notifications.\\nIn this scenario, Kicks pays for one conversation initiated by the business.`}),`\\n`]}),`\\n`,(0,e.jsx)(n.p,{children:\\"If the user replies more than 24 hours after sending the initial business message and is followed by a business reply, it will result in a new conversation initiated by the user.\\"}),`\\n`,(0,e.jsxs)(n.p,{children:[\\"Cost:\\",(0,e.jsx)(\\"br\\",{}),`\\na. `,(0,e.jsx)(n.strong,{children:\\"IDR 500\\"}),\\", for 1 BIC, if the user does not reply to the message.\\",(0,e.jsx)(\\"br\\",{}),`\\nb. `,(0,e.jsx)(n.strong,{children:\\"IDR 500\\"}),\\", for 1 BIC, if the user replies within 1x24 hours.\\",(0,e.jsx)(\\"br\\",{}),`\\nc. `,(0,e.jsx)(n.strong,{children:\\"IDR 820\\"}),\\", for 1 BIC & 1 UIC, if the user replies after 1x24 hours.\\",(0,e.jsx)(\\"br\\",{})]}),`\\n`,(0,e.jsx)(n.p,{children:`These are four common conversation scenarios between businesses and users. If you still have questions regarding the\\ncomparison of the scenarios above, not limited to other possibilities that can occur between business and user\\nconversations, please contact the Kata.ai team to discuss it further.`}),`\\n`,(0,e.jsxs)(n.h2,{id:\\"pricing\\",children:[(0,e.jsx)(n.a,{className:\\"anchor\\",href:\\"#pricing\\",children:(0,e.jsx)(n.span,{className:\\"icon icon-link\\"})}),\\"Pricing\\"]}),`\\n`,(0,e.jsx)(n.p,{children:\\"The pricing scheme continues to use the credit system with a top-up in bulk. Imagine buying a prepaid cell phone number that will be reduced by Business-Initiated Conversation and/or User-Initiated Conversation according to the number of conversations initiated by businesses and users.\\"}),`\\n`,(0,e.jsx)(n.p,{children:\\"Don\'t worry because no major changes have occurred. We only convert credit purchases that previously used the number of messages to be sent, into Rupiah currency values \\\\u200B\\\\u200Bthat can be used for the existing types of conversations. The tiering system still applies, the more credits you buy, the bigger the discount you get.\\"}),`\\n`,(0,e.jsx)(n.p,{children:\\"To accommodate changes in pricing schemes that occur, said the Business Dashboard to be updated to make it easier to use and monitor credit and the amount of usage. The latest update will be released on February 1, 2022, along with the price changes of the WhatsApp Business API.\\"}),`\\n`,(0,e.jsxs)(n.h4,{id:\\"1-idr-for-indonesian-numbers-only\\",children:[(0,e.jsx)(n.a,{className:\\"anchor\\",href:\\"#1-idr-for-indonesian-numbers-only\\",children:(0,e.jsx)(n.span,{className:\\"icon icon-link\\"})}),\\"1. IDR, for Indonesian Numbers Only\\"]}),`\\n`,(0,e.jsxs)(t,{children:[(0,e.jsx)(p,{children:(0,e.jsxs)(u,{children:[(0,e.jsx)(c,{children:\\"Conversation Type\\"}),`\\n`,(0,e.jsx)(c,{children:\\"Price, IDR (per Conversation)\\"})]})}),(0,e.jsxs)(d,{children:[(0,e.jsxs)(r,{children:[(0,e.jsx)(i,{children:\\"Business-Initiated Conversation\\"}),`\\n`,(0,e.jsx)(i,{children:\\"IDR 500\\"})]}),(0,e.jsxs)(r,{children:[(0,e.jsx)(i,{children:\\"User-Initiated Conversation\\"}),`\\n`,(0,e.jsx)(i,{children:\\"IDR 320\\"})]})]})]}),`\\n`,(0,e.jsxs)(t,{children:[(0,e.jsx)(p,{children:(0,e.jsxs)(r,{children:[(0,e.jsx)(c,{children:\\"Top-Up Credit (IDR)\\"}),`\\n`,(0,e.jsx)(c,{children:\\"Discount (%)\\"}),`\\n`,(0,e.jsx)(c,{children:\\"Discount (IDR)\\"}),`\\n`,(0,e.jsx)(c,{children:\\"Final Price (IDR)\\"})]})}),(0,e.jsxs)(d,{children:[(0,e.jsxs)(r,{children:[(0,e.jsx)(i,{children:\\"IDR 5,000,000\\"}),`\\n`,(0,e.jsx)(i,{children:\\"2.00%\\"}),`\\n`,(0,e.jsx)(i,{children:\\"IDR 100,000\\"}),`\\n`,(0,e.jsx)(i,{children:\\"IDR 4,900,000\\"})]}),(0,e.jsxs)(r,{children:[(0,e.jsx)(i,{children:\\"IDR 20,000,000\\"}),`\\n`,(0,e.jsx)(i,{children:\\"3.00%\\"}),`\\n`,(0,e.jsx)(i,{children:\\"IDR 600,000\\"}),`\\n`,(0,e.jsx)(i,{children:\\"IDR 19,400,000\\"})]}),(0,e.jsxs)(r,{children:[(0,e.jsx)(i,{children:\\"IDR 50,000,000\\"}),`\\n`,(0,e.jsx)(i,{children:\\"4.00%\\"}),`\\n`,(0,e.jsx)(i,{children:\\"IDR 2,000,000\\"}),`\\n`,(0,e.jsx)(i,{children:\\"IDR 48,000,000\\"})]}),(0,e.jsxs)(r,{children:[(0,e.jsx)(i,{children:\\"IDR 100,000,000\\"}),`\\n`,(0,e.jsx)(i,{children:\\"5.00%\\"}),`\\n`,(0,e.jsx)(i,{children:\\"IDR 5,000,000\\"}),`\\n`,(0,e.jsx)(i,{children:\\"IDR 95,000,000\\"})]})]})]}),`\\n`,(0,e.jsxs)(n.h4,{id:\\"2-idr-for-non-indonesian-numbers\\",children:[(0,e.jsx)(n.a,{className:\\"anchor\\",href:\\"#2-idr-for-non-indonesian-numbers\\",children:(0,e.jsx)(n.span,{className:\\"icon icon-link\\"})}),\\"2. IDR, for Non-Indonesian Numbers\\"]}),`\\n`,(0,e.jsxs)(n.p,{children:[\\"Prices for credit deductions from and for non-Indonesian numbers can be seen on: \\",(0,e.jsxs)(\\"a\\",{href:\\"https://developers.facebook.com/docs/whatsapp/pricing/conversationpricing#cost-per-conversation-in-idr\\",target:\\"_blank\\",children:[(0,e.jsx)(\\"span\\",{children:\\"http\\"}),\\"s://developers.facebook.com/docs/whatsapp/pricing/conversationpricing#cost-per-conversation-in-idr\\"]}),\\" with a small round-up to the next dollar, plus an additional BSP Fee of \\",(0,e.jsx)(n.strong,{children:\\"+IDR 50\\"}),\\" for both types of messages on WhatsApp, namely User-Initiated Conversation and Business-Initiated Conversation.\\"]}),`\\n`,(0,e.jsx)(n.p,{children:\\"Example:\\"}),`\\n`,(0,e.jsxs)(n.p,{children:[\\"a. User-Initiated Conversation from Germany number\\",(0,e.jsx)(\\"br\\",{}),`\\nCost: IDR 1,169.20`,(0,e.jsx)(\\"br\\",{}),`\\nRound-up: IDR 1,170`,(0,e.jsx)(\\"br\\",{}),`\\nBSP Fee of IDR 50 = `,(0,e.jsx)(n.strong,{children:\\"IDR 1,220\\"})]}),`\\n`,(0,e.jsxs)(n.p,{children:[\\"b. Business-Initiated Conversation sent to a German number\\",(0,e.jsx)(\\"br\\",{}),`\\nCost: IDR 1,948.66`,(0,e.jsx)(\\"br\\",{}),`\\nRound-up: IDR 1,949`,(0,e.jsx)(\\"br\\",{}),`\\nBSP Fee of IDR 50 = `,(0,e.jsx)(n.strong,{children:\\"IDR 1,999\\"})]}),`\\n`,(0,e.jsx)(n.p,{children:(0,e.jsx)(n.strong,{children:(0,e.jsx)(\\"u\\",{children:\\"Final Price for Non-Indonesian Countries:\\"})})}),`\\n`,(0,e.jsxs)(t,{children:[(0,e.jsx)(p,{children:(0,e.jsxs)(r,{children:[(0,e.jsx)(c,{children:\\"Country\\"}),`\\n`,(0,e.jsx)(c,{children:\\"User-Initiated Conversation (IDR)\\"}),`\\n`,(0,e.jsx)(c,{children:\\"Business-Initiated Conversation (IDR)\\"})]})}),(0,e.jsxs)(d,{children:[(0,e.jsxs)(r,{children:[(0,e.jsx)(i,{children:\\"Argentina\\"}),`\\n`,(0,e.jsx)(i,{children:\\"IDR 501\\"}),`\\n`,(0,e.jsx)(i,{children:\\"IDR 801\\"})]}),(0,e.jsxs)(r,{children:[(0,e.jsx)(i,{children:\\"Brazil\\"}),`\\n`,(0,e.jsx)(i,{children:\\"IDR 479\\"}),`\\n`,(0,e.jsx)(i,{children:\\"IDR 764\\"})]}),(0,e.jsxs)(r,{children:[(0,e.jsx)(i,{children:\\"Chile\\"}),`\\n`,(0,e.jsx)(i,{children:\\"IDR 699\\"}),`\\n`,(0,e.jsx)(i,{children:\\"IDR 1,131\\"})]}),(0,e.jsxs)(r,{children:[(0,e.jsx)(i,{children:\\"Colombia\\"}),`\\n`,(0,e.jsx)(i,{children:\\"IDR 136\\"}),`\\n`,(0,e.jsx)(i,{children:\\"IDR 193\\"})]}),(0,e.jsxs)(r,{children:[(0,e.jsx)(i,{children:\\"Egypt\\"}),`\\n`,(0,e.jsx)(i,{children:\\"IDR 969\\"}),`\\n`,(0,e.jsx)(i,{children:\\"IDR 1,582\\"})]}),(0,e.jsxs)(r,{children:[(0,e.jsx)(i,{children:\\"France\\"}),`\\n`,(0,e.jsx)(i,{children:\\"IDR 1,277\\"}),`\\n`,(0,e.jsx)(i,{children:\\"IDR 2,095\\"})]}),(0,e.jsxs)(r,{children:[(0,e.jsx)(i,{children:\\"Germany\\"}),`\\n`,(0,e.jsx)(i,{children:\\"IDR 1,220\\"}),`\\n`,(0,e.jsx)(i,{children:\\"IDR 1,999\\"})]}),(0,e.jsxs)(r,{children:[(0,e.jsx)(i,{children:\\"India\\"}),`\\n`,(0,e.jsx)(i,{children:\\"IDR 107\\"}),`\\n`,(0,e.jsx)(i,{children:\\"IDR 145\\"})]}),(0,e.jsxs)(r,{children:[(0,e.jsx)(i,{children:\\"Israel\\"}),`\\n`,(0,e.jsx)(i,{children:\\"IDR 307\\"}),`\\n`,(0,e.jsx)(i,{children:\\"IDR 479\\"})]}),(0,e.jsxs)(r,{children:[(0,e.jsx)(i,{children:\\"Italy\\"}),`\\n`,(0,e.jsx)(i,{children:\\"IDR 601\\"}),`\\n`,(0,e.jsx)(i,{children:\\"IDR 968\\"})]}),(0,e.jsxs)(r,{children:[(0,e.jsx)(i,{children:\\"Malaysia\\"}),`\\n`,(0,e.jsx)(i,{children:\\"IDR 364\\"}),`\\n`,(0,e.jsx)(i,{children:\\"IDR 1,095\\"})]}),(0,e.jsxs)(r,{children:[(0,e.jsx)(i,{children:\\"Mexico\\"}),`\\n`,(0,e.jsx)(i,{children:\\"IDR 200\\"}),`\\n`,(0,e.jsx)(i,{children:\\"IDR 548\\"})]}),(0,e.jsxs)(r,{children:[(0,e.jsx)(i,{children:\\"Netherlands\\"}),`\\n`,(0,e.jsx)(i,{children:\\"IDR 1,322\\"}),`\\n`,(0,e.jsx)(i,{children:\\"IDR 2,170\\"})]}),(0,e.jsxs)(r,{children:[(0,e.jsx)(i,{children:\\"Nigeria\\"}),`\\n`,(0,e.jsx)(i,{children:\\"IDR 493\\"}),`\\n`,(0,e.jsx)(i,{children:\\"IDR 788\\"})]}),(0,e.jsxs)(r,{children:[(0,e.jsx)(i,{children:\\"Pakistan\\"}),`\\n`,(0,e.jsx)(i,{children:\\"IDR 253\\"}),`\\n`,(0,e.jsx)(i,{children:\\"IDR 726\\"})]}),(0,e.jsxs)(r,{children:[(0,e.jsx)(i,{children:\\"Peru\\"}),`\\n`,(0,e.jsx)(i,{children:\\"IDR 307\\"}),`\\n`,(0,e.jsx)(i,{children:\\"IDR 904\\"})]}),(0,e.jsxs)(r,{children:[(0,e.jsx)(i,{children:\\"Russia\\"}),`\\n`,(0,e.jsx)(i,{children:\\"IDR 618\\"}),`\\n`,(0,e.jsx)(i,{children:\\"IDR 997\\"})]}),(0,e.jsxs)(r,{children:[(0,e.jsx)(i,{children:\\"Saudi Arabia\\"}),`\\n`,(0,e.jsx)(i,{children:\\"IDR 329\\"}),`\\n`,(0,e.jsx)(i,{children:\\"IDR 514\\"})]}),(0,e.jsxs)(r,{children:[(0,e.jsx)(i,{children:\\"South Africa\\"}),`\\n`,(0,e.jsx)(i,{children:\\"IDR 291\\"}),`\\n`,(0,e.jsx)(i,{children:\\"IDR 451\\"})]}),(0,e.jsxs)(r,{children:[(0,e.jsx)(i,{children:\\"Spain\\"}),`\\n`,(0,e.jsx)(i,{children:\\"IDR 577\\"}),`\\n`,(0,e.jsx)(i,{children:\\"IDR 928\\"})]}),(0,e.jsxs)(r,{children:[(0,e.jsx)(i,{children:\\"Turkey\\"}),`\\n`,(0,e.jsx)(i,{children:\\"IDR 93\\"}),`\\n`,(0,e.jsx)(i,{children:\\"IDR 193\\"})]}),(0,e.jsxs)(r,{children:[(0,e.jsx)(i,{children:\\"United Arab Emirates\\"}),`\\n`,(0,e.jsx)(i,{children:\\"IDR 321\\"}),`\\n`,(0,e.jsx)(i,{children:\\"IDR 502\\"})]}),(0,e.jsxs)(r,{children:[(0,e.jsx)(i,{children:\\"United Kingdom\\"}),`\\n`,(0,e.jsx)(i,{children:\\"IDR 604\\"}),`\\n`,(0,e.jsx)(i,{children:\\"IDR 974\\"})]}),(0,e.jsxs)(r,{children:[(0,e.jsx)(i,{children:\\"North America*\\"}),`\\n`,(0,e.jsx)(i,{children:\\"IDR 176\\"}),`\\n`,(0,e.jsx)(i,{children:\\"IDR 260\\"})]}),(0,e.jsxs)(r,{children:[(0,e.jsx)(i,{children:\\"Rest of Africa*\\"}),`\\n`,(0,e.jsx)(i,{children:\\"IDR 568\\"}),`\\n`,(0,e.jsx)(i,{children:\\"IDR 1,775\\"})]}),(0,e.jsxs)(r,{children:[(0,e.jsx)(i,{children:\\"Rest of Asia Pacific*\\"}),`\\n`,(0,e.jsx)(i,{children:\\"IDR 370\\"}),`\\n`,(0,e.jsx)(i,{children:\\"IDR 1,114\\"})]}),(0,e.jsxs)(r,{children:[(0,e.jsx)(i,{children:\\"Rest of Central & Eastern Europe*\\"}),`\\n`,(0,e.jsx)(i,{children:\\"IDR 408\\"}),`\\n`,(0,e.jsx)(i,{children:\\"IDR 1,242\\"})]}),(0,e.jsxs)(r,{children:[(0,e.jsx)(i,{children:\\"Rest of Latin America*\\"}),`\\n`,(0,e.jsx)(i,{children:\\"IDR 655\\"}),`\\n`,(0,e.jsx)(i,{children:\\"IDR 1,058\\"})]}),(0,e.jsxs)(r,{children:[(0,e.jsx)(i,{children:\\"Rest of Middle East*\\"}),`\\n`,(0,e.jsx)(i,{children:\\"IDR 362\\"}),`\\n`,(0,e.jsx)(i,{children:\\"IDR 1,088\\"})]}),(0,e.jsxs)(r,{children:[(0,e.jsx)(i,{children:\\"Rest of Western Europe*\\"}),`\\n`,(0,e.jsx)(i,{children:\\"IDR 617\\"}),`\\n`,(0,e.jsx)(i,{children:\\"IDR 1,940\\"})]}),(0,e.jsxs)(r,{children:[(0,e.jsx)(i,{children:\\"Other*\\"}),`\\n`,(0,e.jsx)(i,{children:\\"IDR 257\\"}),`\\n`,(0,e.jsx)(i,{children:\\"IDR 740\\"})]})]})]}),`\\n`,(0,e.jsx)(n.p,{children:(0,e.jsx)(n.strong,{children:(0,e.jsx)(\\"u\\",{children:\\" * Rest of Non-Indonesian Country Groups:\\"})})}),`\\n`,(0,e.jsx)(t,{children:(0,e.jsxs)(d,{children:[(0,e.jsxs)(r,{children:[(0,e.jsxs)(i,{children:[(0,e.jsx)(\\"b\\",{children:\\"North America:\\"}),(0,e.jsx)(\\"br\\",{}),(0,e.jsx)(n.p,{children:\\"Canada\\"}),(0,e.jsx)(\\"br\\",{}),(0,e.jsx)(n.p,{children:\\"United States\\"}),(0,e.jsx)(\\"br\\",{}),(0,e.jsx)(\\"br\\",{})]}),(0,e.jsxs)(i,{children:[(0,e.jsx)(\\"b\\",{children:\\"Rest of Asia Pacific:\\"}),(0,e.jsx)(\\"br\\",{}),(0,e.jsx)(n.p,{children:\\"Afghanistan\\"}),(0,e.jsx)(\\"br\\",{}),(0,e.jsx)(n.p,{children:\\"Australia\\"}),(0,e.jsx)(\\"br\\",{}),(0,e.jsx)(n.p,{children:\\"Bangladesh\\"}),(0,e.jsx)(\\"br\\",{}),(0,e.jsx)(n.p,{children:\\"Cambodia\\"}),(0,e.jsx)(\\"br\\",{}),(0,e.jsx)(n.p,{children:\\"China\\"}),(0,e.jsx)(\\"br\\",{}),(0,e.jsx)(n.p,{children:\\"Hong Kong\\"}),(0,e.jsx)(\\"br\\",{}),(0,e.jsx)(n.p,{children:\\"Japan\\"}),(0,e.jsx)(\\"br\\",{}),(0,e.jsx)(n.p,{children:\\"Laos\\"}),(0,e.jsx)(\\"br\\",{}),(0,e.jsx)(n.p,{children:\\"Mongolia\\"}),(0,e.jsx)(\\"br\\",{}),(0,e.jsx)(n.p,{children:\\"Nepal\\"}),(0,e.jsx)(\\"br\\",{}),(0,e.jsx)(n.p,{children:\\"New Zealand\\"}),(0,e.jsx)(\\"br\\",{}),(0,e.jsx)(n.p,{children:\\"Papua New Guinea\\"}),(0,e.jsx)(\\"br\\",{}),(0,e.jsx)(n.p,{children:\\"Philippines\\"}),(0,e.jsx)(\\"br\\",{}),(0,e.jsx)(n.p,{children:\\"Singapore\\"}),(0,e.jsx)(\\"br\\",{}),(0,e.jsx)(n.p,{children:\\"Sri Lanka\\"}),(0,e.jsx)(\\"br\\",{}),(0,e.jsx)(n.p,{children:\\"Taiwan\\"}),(0,e.jsx)(\\"br\\",{}),(0,e.jsx)(n.p,{children:\\"Tajikistan\\"}),(0,e.jsx)(\\"br\\",{}),(0,e.jsx)(n.p,{children:\\"Thailand\\"}),(0,e.jsx)(\\"br\\",{}),(0,e.jsx)(n.p,{children:\\"Turkmenistan\\"}),(0,e.jsx)(\\"br\\",{}),(0,e.jsx)(n.p,{children:\\"Uzbekistan\\"}),(0,e.jsx)(\\"br\\",{}),(0,e.jsx)(n.p,{children:\\"Vietnam\\"})]}),(0,e.jsxs)(i,{children:[(0,e.jsx)(\\"b\\",{children:\\"Rest of Latin America:\\"}),(0,e.jsx)(\\"br\\",{}),(0,e.jsx)(n.p,{children:\\"Bolivia\\"}),(0,e.jsx)(\\"br\\",{}),(0,e.jsx)(n.p,{children:\\"Costa Rica\\"}),(0,e.jsx)(\\"br\\",{}),(0,e.jsx)(n.p,{children:\\"Dominican Republic\\"}),(0,e.jsx)(\\"br\\",{}),(0,e.jsx)(n.p,{children:\\"Ecuador\\"}),(0,e.jsx)(\\"br\\",{}),(0,e.jsx)(n.p,{children:\\"El Salvador\\"}),(0,e.jsx)(\\"br\\",{}),(0,e.jsx)(n.p,{children:\\"Guatemala\\"}),(0,e.jsx)(\\"br\\",{}),(0,e.jsx)(n.p,{children:\\"Haiti\\"}),(0,e.jsx)(\\"br\\",{}),(0,e.jsx)(n.p,{children:\\"Honduras\\"}),(0,e.jsx)(\\"br\\",{}),(0,e.jsx)(n.p,{children:\\"Jamaica\\"}),(0,e.jsx)(\\"br\\",{}),(0,e.jsx)(n.p,{children:\\"Nicaragua\\"}),(0,e.jsx)(\\"br\\",{}),(0,e.jsx)(n.p,{children:\\"Panama\\"}),(0,e.jsx)(\\"br\\",{}),(0,e.jsx)(n.p,{children:\\"Paraguay\\"}),(0,e.jsx)(\\"br\\",{}),(0,e.jsx)(n.p,{children:\\"Puerto Rico\\"}),(0,e.jsx)(\\"br\\",{}),(0,e.jsx)(n.p,{children:\\"Uruguay\\"}),(0,e.jsx)(\\"br\\",{}),(0,e.jsx)(n.p,{children:\\"Venezuela\\"})]})]}),(0,e.jsxs)(r,{children:[(0,e.jsxs)(i,{children:[(0,e.jsx)(\\"b\\",{children:\\"Rest of Africa:\\"}),(0,e.jsx)(\\"br\\",{}),(0,e.jsx)(n.p,{children:\\"Algeria\\"}),(0,e.jsx)(\\"br\\",{}),(0,e.jsx)(n.p,{children:\\"Angola\\"}),(0,e.jsx)(\\"br\\",{}),(0,e.jsx)(n.p,{children:\\"Benin\\"}),(0,e.jsx)(\\"br\\",{}),(0,e.jsx)(n.p,{children:\\"Botswana\\"}),(0,e.jsx)(\\"br\\",{}),(0,e.jsx)(n.p,{children:\\"Burkina Faso\\"}),(0,e.jsx)(\\"br\\",{}),(0,e.jsx)(n.p,{children:\\"Burundi\\"}),(0,e.jsx)(\\"br\\",{}),(0,e.jsx)(n.p,{children:\\"Cameroon\\"}),(0,e.jsx)(\\"br\\",{}),(0,e.jsx)(n.p,{children:\\"Chad\\"}),(0,e.jsx)(\\"br\\",{}),(0,e.jsx)(n.p,{children:\\"Congo\\"}),(0,e.jsx)(\\"br\\",{}),(0,e.jsx)(n.p,{children:\\"Eritrea\\"}),(0,e.jsx)(\\"br\\",{}),(0,e.jsx)(n.p,{children:\\"Ethiopia\\"}),(0,e.jsx)(\\"br\\",{}),(0,e.jsx)(n.p,{children:\\"Gabon\\"}),(0,e.jsx)(\\"br\\",{}),(0,e.jsx)(n.p,{children:\\"Gambia\\"}),(0,e.jsx)(\\"br\\",{}),(0,e.jsx)(n.p,{children:\\"Ghana\\"}),(0,e.jsx)(\\"br\\",{}),(0,e.jsx)(n.p,{children:\\"Guinea-Bissau\\"}),(0,e.jsx)(\\"br\\",{}),(0,e.jsx)(n.p,{children:\\"Ivory Coast\\"}),(0,e.jsx)(\\"br\\",{}),(0,e.jsx)(n.p,{children:\\"Kenya\\"}),(0,e.jsx)(\\"br\\",{}),(0,e.jsx)(n.p,{children:\\"Lesotho\\"}),(0,e.jsx)(\\"br\\",{}),(0,e.jsx)(n.p,{children:\\"Liberia\\"}),(0,e.jsx)(\\"br\\",{}),(0,e.jsx)(n.p,{children:\\"Libya\\"}),(0,e.jsx)(\\"br\\",{}),(0,e.jsx)(n.p,{children:\\"Madagascar\\"}),(0,e.jsx)(\\"br\\",{}),(0,e.jsx)(n.p,{children:\\"Malawi\\"}),(0,e.jsx)(\\"br\\",{}),(0,e.jsx)(n.p,{children:\\"Mali\\"}),(0,e.jsx)(\\"br\\",{}),(0,e.jsx)(n.p,{children:\\"Mauritania\\"}),(0,e.jsx)(\\"br\\",{}),(0,e.jsx)(n.p,{children:\\"Morocco\\"}),(0,e.jsx)(\\"br\\",{}),(0,e.jsx)(n.p,{children:\\"Mozambique\\"}),(0,e.jsx)(\\"br\\",{}),(0,e.jsx)(n.p,{children:\\"Namibia\\"}),(0,e.jsx)(\\"br\\",{}),(0,e.jsx)(n.p,{children:\\"Niger\\"}),(0,e.jsx)(\\"br\\",{}),(0,e.jsx)(n.p,{children:\\"Rwanda\\"}),(0,e.jsx)(\\"br\\",{}),(0,e.jsx)(n.p,{children:\\"Senegal\\"}),(0,e.jsx)(\\"br\\",{}),(0,e.jsx)(n.p,{children:\\"Sierra Leone\\"}),(0,e.jsx)(\\"br\\",{}),(0,e.jsx)(n.p,{children:\\"Somalia\\"}),(0,e.jsx)(\\"br\\",{}),(0,e.jsx)(n.p,{children:\\"South Sudan\\"}),(0,e.jsx)(\\"br\\",{}),(0,e.jsx)(n.p,{children:\\"Sudan\\"}),(0,e.jsx)(\\"br\\",{}),(0,e.jsx)(n.p,{children:\\"Swaziland\\"}),(0,e.jsx)(\\"br\\",{}),(0,e.jsx)(n.p,{children:\\"Tanzania\\"}),(0,e.jsx)(\\"br\\",{}),(0,e.jsx)(n.p,{children:\\"Togo\\"}),(0,e.jsx)(\\"br\\",{}),(0,e.jsx)(n.p,{children:\\"Tunisia\\"}),(0,e.jsx)(\\"br\\",{}),(0,e.jsx)(n.p,{children:\\"Uganda\\"}),(0,e.jsx)(\\"br\\",{}),(0,e.jsx)(n.p,{children:\\"Zambia\\"}),(0,e.jsx)(\\"br\\",{})]}),(0,e.jsxs)(i,{children:[(0,e.jsx)(\\"b\\",{children:\\"Rest of Central & Eastern Europe:\\"}),(0,e.jsx)(\\"br\\",{}),(0,e.jsx)(n.p,{children:\\"Albania\\"}),(0,e.jsx)(\\"br\\",{}),(0,e.jsx)(n.p,{children:\\"Armenia\\"}),(0,e.jsx)(\\"br\\",{}),(0,e.jsx)(n.p,{children:\\"Azerbaijan\\"}),(0,e.jsx)(\\"br\\",{}),(0,e.jsx)(n.p,{children:\\"Belarus\\"}),(0,e.jsx)(\\"br\\",{}),(0,e.jsx)(n.p,{children:\\"Bulgaria\\"}),(0,e.jsx)(\\"br\\",{}),(0,e.jsx)(n.p,{children:\\"Croatia\\"}),(0,e.jsx)(\\"br\\",{}),(0,e.jsx)(n.p,{children:\\"Czech Republic\\"}),(0,e.jsx)(\\"br\\",{}),(0,e.jsx)(n.p,{children:\\"Georgia\\"}),(0,e.jsx)(\\"br\\",{}),(0,e.jsx)(n.p,{children:\\"Greece\\"}),(0,e.jsx)(\\"br\\",{}),(0,e.jsx)(n.p,{children:\\"Hungary\\"}),(0,e.jsx)(\\"br\\",{}),(0,e.jsx)(n.p,{children:\\"Latvia\\"}),(0,e.jsx)(\\"br\\",{}),(0,e.jsx)(n.p,{children:\\"Lithuania\\"}),(0,e.jsx)(\\"br\\",{}),(0,e.jsx)(n.p,{children:\\"Macedonia\\"}),(0,e.jsx)(\\"br\\",{}),(0,e.jsx)(n.p,{children:\\"Moldova\\"}),(0,e.jsx)(\\"br\\",{}),(0,e.jsx)(n.p,{children:\\"Poland\\"}),(0,e.jsx)(\\"br\\",{}),(0,e.jsx)(n.p,{children:\\"Romania\\"}),(0,e.jsx)(\\"br\\",{}),(0,e.jsx)(n.p,{children:\\"Serbia\\"}),(0,e.jsx)(\\"br\\",{}),(0,e.jsx)(n.p,{children:\\"Slovakia\\"}),(0,e.jsx)(\\"br\\",{}),(0,e.jsx)(n.p,{children:\\"Slovenia\\"}),(0,e.jsx)(\\"br\\",{}),(0,e.jsx)(n.p,{children:\\"Ukraine\\"})]}),(0,e.jsxs)(i,{children:[(0,e.jsx)(\\"b\\",{children:\\"Rest of Middle East:\\"}),(0,e.jsx)(\\"br\\",{}),(0,e.jsx)(n.p,{children:\\"Bahrain\\"}),(0,e.jsx)(\\"br\\",{}),(0,e.jsx)(n.p,{children:\\"Iraq\\"}),(0,e.jsx)(\\"br\\",{}),(0,e.jsx)(n.p,{children:\\"Jordan\\"}),(0,e.jsx)(\\"br\\",{}),(0,e.jsx)(n.p,{children:\\"Kuwait\\"}),(0,e.jsx)(\\"br\\",{}),(0,e.jsx)(n.p,{children:\\"Lebanon\\"}),(0,e.jsx)(\\"br\\",{}),(0,e.jsx)(n.p,{children:\\"Oman\\"}),(0,e.jsx)(\\"br\\",{}),(0,e.jsx)(n.p,{children:\\"Qatar\\"}),(0,e.jsx)(\\"br\\",{}),(0,e.jsx)(n.p,{children:\\"Yemen\\"}),(0,e.jsx)(\\"br\\",{}),(0,e.jsx)(\\"br\\",{}),(0,e.jsx)(\\"b\\",{children:\\"Rest of Western Europe:\\"}),(0,e.jsx)(\\"br\\",{}),(0,e.jsx)(n.p,{children:\\"Austria\\"}),(0,e.jsx)(\\"br\\",{}),(0,e.jsx)(n.p,{children:\\"Belgium\\"}),(0,e.jsx)(\\"br\\",{}),(0,e.jsx)(n.p,{children:\\"Denmark\\"}),(0,e.jsx)(\\"br\\",{}),(0,e.jsx)(n.p,{children:\\"Finland\\"}),(0,e.jsx)(\\"br\\",{}),(0,e.jsx)(n.p,{children:\\"Ireland\\"}),(0,e.jsx)(\\"br\\",{}),(0,e.jsx)(n.p,{children:\\"Norway\\"}),(0,e.jsx)(\\"br\\",{}),(0,e.jsx)(n.p,{children:\\"Portugal\\"}),(0,e.jsx)(\\"br\\",{}),(0,e.jsx)(n.p,{children:\\"Sweden\\"}),(0,e.jsx)(\\"br\\",{}),(0,e.jsx)(n.p,{children:\\"Switzerland\\"}),(0,e.jsx)(\\"br\\",{}),(0,e.jsx)(\\"br\\",{}),(0,e.jsx)(\\"b\\",{children:\\"Other:\\"}),(0,e.jsx)(\\"br\\",{}),(0,e.jsx)(n.p,{children:\\"All other countries not listed\\"}),(0,e.jsx)(\\"br\\",{}),(0,e.jsx)(n.p,{children:\\"in the above regions or\\"}),(0,e.jsx)(\\"br\\",{}),(0,e.jsx)(n.p,{children:\\"specifically listed in the above tables\\"}),(0,e.jsx)(\\"br\\",{})]})]})]})}),`\\n`,(0,e.jsxs)(n.h2,{id:\\"credit-carry-over-policy\\",children:[(0,e.jsx)(n.a,{className:\\"anchor\\",href:\\"#credit-carry-over-policy\\",children:(0,e.jsx)(n.span,{className:\\"icon icon-link\\"})}),\\"Credit Carry Over Policy\\"]}),`\\n`,(0,e.jsx)(n.p,{children:\\"For loyal Kata.ai customers and our partners who still have a credit balance from purchases before replacement and price negotiations. Credit from your business can be converted and can still be valid until the expiration limit of the top-up purchase in the previous period.\\"}),`\\n`,(0,e.jsxs)(n.p,{children:[`Example:\\nRemaining credit 100,000 Template Message * IDR 400 (old price) = `,(0,e.jsx)(n.strong,{children:\\"IDR 40,000,000\\"}),` remaining credit that can be converted into conversations.\\nRemaining credit IDR 40,000,000 / IDR 500 (new price) = `,(0,e.jsx)(n.strong,{children:\\"80,000\\"}),` Total Business-Initiated Conversation\\nRemaining credit IDR 40,000,000 / IDR 320 (new price) = `,(0,e.jsx)(n.strong,{children:\\"125,000\\"}),\\" Total User-Initiated Conversation\\"]}),`\\n`,(0,e.jsx)(n.p,{children:\\"The deduction for Business-Initiated Conversation and User-Initiated Conversation will use the new prices listed in point 1 above.\\"}),`\\n`,(0,e.jsxs)(n.p,{children:[\\"For other topics that have not been discussed in this notification letter or for further questions regarding this price plan change, please contact your consultant for further clarification or contact \\",(0,e.jsx)(n.a,{href:\\"mailto:sales@kata.ai\\",children:\\"sales@kata.ai\\"})]})]})}}var S=N;function l(s,a){throw new Error(\\"Expected \\"+(a?\\"component\\":\\"object\\")+\\" `\\"+s+\\"` to be defined: you likely forgot to import, pass, or provide it.\\")}return k(x);})();\\n;return Component;"},"_id":"business-dashboard/how-to/conversation-based-pricing.mdx","_raw":{"sourceFilePath":"business-dashboard/how-to/conversation-based-pricing.mdx","sourceFileName":"conversation-based-pricing.mdx","sourceFileDir":"business-dashboard/how-to","contentType":"mdx","flattenedPath":"business-dashboard/how-to/conversation-based-pricing"},"type":"BusinessDashboard","slug":["how-to","conversation-based-pricing"],"excerpt":"\\nStarting February 1, 2022, WhatsApp will switch from a notification-based pricing model to a conversation-based pricing\\nmodel. Businesses will no longer be charged for sent notifications, instead, they will be charged per conversation"}');
;// CONCATENATED MODULE: ./.contentlayer/generated/BusinessDashboard/business-dashboard__how-to__get-started.mdx.json
const business_dashboard_how_to_get_started_mdx_namespaceObject = JSON.parse('{"id":"get-started","section":"How To","title":"Get Started with WhatsApp Business Dashboard","prev":"introduction-about","next":"how-to-use-trial","body":{"raw":"\\nWatch the video tutorial below on how to sign up and log in to your Business Dashboard, as well as on how to register your WhatsApp Business Account.\\n\\n<YoutubeEmbedWrapper>\\n  <YoutubeEmbed id=\\"jNTAPD5cou0\\" params=\\"v=jNTAPD5cou0\\" title=\\"Get Started with WhatsApp Business Dashboard\\" />\\n</YoutubeEmbedWrapper>\\n\\n### Sign Up for WhatsApp Business Dashboard\\n\\n<FigureImage\\n  src=\\"/assets/images/products/business-dashboard/image-get-started-1.webp\\"\\n  alt=\\"Signup page\\"\\n  caption={{ title: \'Figure 1.\', description: \'Business Dashboard signup page\' }}\\n  naturalHeight={1467}\\n  naturalWidth={2816}\\n/>\\n\\nCreate your account to start using WhatsApp Business Dashboard\\n\\n1. Go to Kata.ai business dashboard site at [https://business.kata.ai/](https://business.kata.ai/)\\n\\n2. Click the **Sign Up** link at the bottom page to create an account.\\n\\n3. Fill in your details and create a password. Once you have filled in all your details, click the **Sign Up** button. A verification email will be sent to your registered email address.\\n\\n4. Complete your registration by clicking the verification button on the email sent to your inbox.\\n\\n### Log in to WhatsApp Business Dashboard\\n\\n<FigureImage\\n  src=\\"/assets/images/products/business-dashboard/image-get-started-2.webp\\"\\n  alt=\\"Login page with filled credential\\"\\n  caption={{ title: \'Figure 2.\', description: \'Business Dashboard login page\' }}\\n  naturalHeight={3000}\\n  naturalWidth={5760}\\n/>\\n\\n1. Open [https://business.kata.ai/](https://business.kata.ai/) on your browser. Fill in your **Email** and **Password**. Click the checkbox to verify the captcha, and click on the **Login** button.\\n\\n2. When the login is successful, you will be directed to the **Get Started** page to register your WhatsApp business account.\\n\\n### Register Your WhatsApp Business Account\\n\\n<FigureImage\\n  src=\\"/assets/images/products/business-dashboard/image-get-started-3.webp\\"\\n  alt=\\"Onboarding process 03-01\\"\\n  caption={{ title: \'Figure 3.\', description: \'Business Dashboard onboarding page\' }}\\n  naturalHeight={1467}\\n  naturalWidth={2816}\\n/>\\n\\n1. After your first **Login**, you will see the **Get Started** page, which points out the steps to register for a WhatsApp business account. Click **Next**.\\n\\n2. On step 1 of 3, we make sure you have a Facebook account as it is required by WhatsApp. If you don’t have a Facebook account, click the **create one** link and follow the steps. If you already have one, tick the checkbox and click **Next**. <br/>To register your WhatsApp Business Account, you also have to have access to your company\'s Facebook Business Manager. If your company does not have a Facebook Business Manager account yet, the next steps will direct you to create one.\\n\\n3. On step 2 of 3, you will find information on the type of phone number eligible for a WhatsApp business account. Once you have read and understood the information, tick the checkbox and click **Next**.\\n\\n4. On the next page (step 3 of 3), click the **Create your WhatsApp channel** button and follow the registration steps from Facebook.\\n\\n<FigureImage\\n  src=\\"/assets/images/products/business-dashboard/image-get-started-4.webp\\"\\n  alt=\\"Embedded Sign Up 03-05-1\\"\\n  caption={{ title: \'Figure 4.\', description: \'WhatsApp account registration step from Facebook\' }}\\n  naturalHeight={1467}\\n  naturalWidth={2816}\\n/>\\n\\n5. Once you have completed the registration process, your request will be reviewed by Facebook for approval. Once your account is approved, you will be notified through your email and all of the WhatsApp Dashboard features will be unlocked. You can also start using the registered number to send messages after it is approved. <br/>While waiting for your account’s approval, you can send a trial message using our trial experience feature without requiring approval or payment.\\n\\n<FigureImage\\n  src=\\"/assets/images/products/business-dashboard/image-get-started-5.webp\\"\\n  alt=\\"Embedded Sign Up 04-01\\"\\n  caption={{ title: \'Figure 5.\', description: \'WhatsApp account registration status\' }}\\n  naturalHeight={1468}\\n  naturalWidth={2816}\\n/>\\n","code":"var Component=(()=>{var g=Object.create;var r=Object.defineProperty;var b=Object.getOwnPropertyDescriptor;var m=Object.getOwnPropertyNames;var f=Object.getPrototypeOf,y=Object.prototype.hasOwnProperty;var h=n=>r(n,\\"__esModule\\",{value:!0});var w=(n,s)=>()=>(s||n((s={exports:{}}).exports,s),s.exports),k=(n,s)=>{for(var a in s)r(n,a,{get:s[a],enumerable:!0})},d=(n,s,a,t)=>{if(s&&typeof s==\\"object\\"||typeof s==\\"function\\")for(let i of m(s))!y.call(n,i)&&(a||i!==\\"default\\")&&r(n,i,{get:()=>s[i],enumerable:!(t=b(s,i))||t.enumerable});return n},W=(n,s)=>d(h(r(n!=null?g(f(n)):{},\\"default\\",!s&&n&&n.__esModule?{get:()=>n.default,enumerable:!0}:{value:n,enumerable:!0})),n),A=(n=>(s,a)=>n&&n.get(s)||(a=d(h({}),s,1),n&&n.set(s,a),a))(typeof WeakMap!=\\"undefined\\"?new WeakMap:0);var p=w((N,u)=>{u.exports=_jsx_runtime});var B={};k(B,{default:()=>F,frontmatter:()=>v});var e=W(p()),v={id:\\"get-started\\",prev:\\"introduction-about\\",next:\\"how-to-use-trial\\",title:\\"Get Started with WhatsApp Business Dashboard\\",section:\\"How To\\"};function x(n={}){let{wrapper:s}=n.components||{};return s?(0,e.jsx)(s,Object.assign({},n,{children:(0,e.jsx)(a,{})})):a();function a(){let t=Object.assign({p:\\"p\\",h3:\\"h3\\",a:\\"a\\",span:\\"span\\",ol:\\"ol\\",li:\\"li\\",strong:\\"strong\\"},n.components),{YoutubeEmbedWrapper:i,YoutubeEmbed:l,FigureImage:o}=t;return o||c(\\"FigureImage\\",!0),l||c(\\"YoutubeEmbed\\",!0),i||c(\\"YoutubeEmbedWrapper\\",!0),(0,e.jsxs)(e.Fragment,{children:[(0,e.jsx)(t.p,{children:\\"Watch the video tutorial below on how to sign up and log in to your Business Dashboard, as well as on how to register your WhatsApp Business Account.\\"}),`\\n`,(0,e.jsx)(i,{children:(0,e.jsx)(l,{id:\\"jNTAPD5cou0\\",params:\\"v=jNTAPD5cou0\\",title:\\"Get Started with WhatsApp Business Dashboard\\"})}),`\\n`,(0,e.jsxs)(t.h3,{id:\\"sign-up-for-whatsapp-business-dashboard\\",children:[(0,e.jsx)(t.a,{className:\\"anchor\\",href:\\"#sign-up-for-whatsapp-business-dashboard\\",children:(0,e.jsx)(t.span,{className:\\"icon icon-link\\"})}),\\"Sign Up for WhatsApp Business Dashboard\\"]}),`\\n`,(0,e.jsx)(o,{src:\\"/assets/images/products/business-dashboard/image-get-started-1.webp\\",alt:\\"Signup page\\",caption:{title:\\"Figure 1.\\",description:\\"Business Dashboard signup page\\"},naturalHeight:1467,naturalWidth:2816}),`\\n`,(0,e.jsx)(t.p,{children:\\"Create your account to start using WhatsApp Business Dashboard\\"}),`\\n`,(0,e.jsxs)(t.ol,{children:[`\\n`,(0,e.jsxs)(t.li,{children:[`\\n`,(0,e.jsxs)(t.p,{children:[\\"Go to Kata.ai business dashboard site at \\",(0,e.jsx)(t.a,{href:\\"https://business.kata.ai/\\",children:\\"https://business.kata.ai/\\"})]}),`\\n`]}),`\\n`,(0,e.jsxs)(t.li,{children:[`\\n`,(0,e.jsxs)(t.p,{children:[\\"Click the \\",(0,e.jsx)(t.strong,{children:\\"Sign Up\\"}),\\" link at the bottom page to create an account.\\"]}),`\\n`]}),`\\n`,(0,e.jsxs)(t.li,{children:[`\\n`,(0,e.jsxs)(t.p,{children:[\\"Fill in your details and create a password. Once you have filled in all your details, click the \\",(0,e.jsx)(t.strong,{children:\\"Sign Up\\"}),\\" button. A verification email will be sent to your registered email address.\\"]}),`\\n`]}),`\\n`,(0,e.jsxs)(t.li,{children:[`\\n`,(0,e.jsx)(t.p,{children:\\"Complete your registration by clicking the verification button on the email sent to your inbox.\\"}),`\\n`]}),`\\n`]}),`\\n`,(0,e.jsxs)(t.h3,{id:\\"log-in-to-whatsapp-business-dashboard\\",children:[(0,e.jsx)(t.a,{className:\\"anchor\\",href:\\"#log-in-to-whatsapp-business-dashboard\\",children:(0,e.jsx)(t.span,{className:\\"icon icon-link\\"})}),\\"Log in to WhatsApp Business Dashboard\\"]}),`\\n`,(0,e.jsx)(o,{src:\\"/assets/images/products/business-dashboard/image-get-started-2.webp\\",alt:\\"Login page with filled credential\\",caption:{title:\\"Figure 2.\\",description:\\"Business Dashboard login page\\"},naturalHeight:3e3,naturalWidth:5760}),`\\n`,(0,e.jsxs)(t.ol,{children:[`\\n`,(0,e.jsxs)(t.li,{children:[`\\n`,(0,e.jsxs)(t.p,{children:[\\"Open \\",(0,e.jsx)(t.a,{href:\\"https://business.kata.ai/\\",children:\\"https://business.kata.ai/\\"}),\\" on your browser. Fill in your \\",(0,e.jsx)(t.strong,{children:\\"Email\\"}),\\" and \\",(0,e.jsx)(t.strong,{children:\\"Password\\"}),\\". Click the checkbox to verify the captcha, and click on the \\",(0,e.jsx)(t.strong,{children:\\"Login\\"}),\\" button.\\"]}),`\\n`]}),`\\n`,(0,e.jsxs)(t.li,{children:[`\\n`,(0,e.jsxs)(t.p,{children:[\\"When the login is successful, you will be directed to the \\",(0,e.jsx)(t.strong,{children:\\"Get Started\\"}),\\" page to register your WhatsApp business account.\\"]}),`\\n`]}),`\\n`]}),`\\n`,(0,e.jsxs)(t.h3,{id:\\"register-your-whatsapp-business-account\\",children:[(0,e.jsx)(t.a,{className:\\"anchor\\",href:\\"#register-your-whatsapp-business-account\\",children:(0,e.jsx)(t.span,{className:\\"icon icon-link\\"})}),\\"Register Your WhatsApp Business Account\\"]}),`\\n`,(0,e.jsx)(o,{src:\\"/assets/images/products/business-dashboard/image-get-started-3.webp\\",alt:\\"Onboarding process 03-01\\",caption:{title:\\"Figure 3.\\",description:\\"Business Dashboard onboarding page\\"},naturalHeight:1467,naturalWidth:2816}),`\\n`,(0,e.jsxs)(t.ol,{children:[`\\n`,(0,e.jsxs)(t.li,{children:[`\\n`,(0,e.jsxs)(t.p,{children:[\\"After your first \\",(0,e.jsx)(t.strong,{children:\\"Login\\"}),\\", you will see the \\",(0,e.jsx)(t.strong,{children:\\"Get Started\\"}),\\" page, which points out the steps to register for a WhatsApp business account. Click \\",(0,e.jsx)(t.strong,{children:\\"Next\\"}),\\".\\"]}),`\\n`]}),`\\n`,(0,e.jsxs)(t.li,{children:[`\\n`,(0,e.jsxs)(t.p,{children:[\\"On step 1 of 3, we make sure you have a Facebook account as it is required by WhatsApp. If you don\\\\u2019t have a Facebook account, click the \\",(0,e.jsx)(t.strong,{children:\\"create one\\"}),\\" link and follow the steps. If you already have one, tick the checkbox and click \\",(0,e.jsx)(t.strong,{children:\\"Next\\"}),\\". \\",(0,e.jsx)(\\"br\\",{}),\\"To register your WhatsApp Business Account, you also have to have access to your company\'s Facebook Business Manager. If your company does not have a Facebook Business Manager account yet, the next steps will direct you to create one.\\"]}),`\\n`]}),`\\n`,(0,e.jsxs)(t.li,{children:[`\\n`,(0,e.jsxs)(t.p,{children:[\\"On step 2 of 3, you will find information on the type of phone number eligible for a WhatsApp business account. Once you have read and understood the information, tick the checkbox and click \\",(0,e.jsx)(t.strong,{children:\\"Next\\"}),\\".\\"]}),`\\n`]}),`\\n`,(0,e.jsxs)(t.li,{children:[`\\n`,(0,e.jsxs)(t.p,{children:[\\"On the next page (step 3 of 3), click the \\",(0,e.jsx)(t.strong,{children:\\"Create your WhatsApp channel\\"}),\\" button and follow the registration steps from Facebook.\\"]}),`\\n`]}),`\\n`]}),`\\n`,(0,e.jsx)(o,{src:\\"/assets/images/products/business-dashboard/image-get-started-4.webp\\",alt:\\"Embedded Sign Up 03-05-1\\",caption:{title:\\"Figure 4.\\",description:\\"WhatsApp account registration step from Facebook\\"},naturalHeight:1467,naturalWidth:2816}),`\\n`,(0,e.jsxs)(t.ol,{start:\\"5\\",children:[`\\n`,(0,e.jsxs)(t.li,{children:[\\"Once you have completed the registration process, your request will be reviewed by Facebook for approval. Once your account is approved, you will be notified through your email and all of the WhatsApp Dashboard features will be unlocked. You can also start using the registered number to send messages after it is approved. \\",(0,e.jsx)(\\"br\\",{}),\\"While waiting for your account\\\\u2019s approval, you can send a trial message using our trial experience feature without requiring approval or payment.\\"]}),`\\n`]}),`\\n`,(0,e.jsx)(o,{src:\\"/assets/images/products/business-dashboard/image-get-started-5.webp\\",alt:\\"Embedded Sign Up 04-01\\",caption:{title:\\"Figure 5.\\",description:\\"WhatsApp account registration status\\"},naturalHeight:1468,naturalWidth:2816})]})}}var F=x;function c(n,s){throw new Error(\\"Expected \\"+(s?\\"component\\":\\"object\\")+\\" `\\"+n+\\"` to be defined: you likely forgot to import, pass, or provide it.\\")}return A(B);})();\\n;return Component;"},"_id":"business-dashboard/how-to/get-started.mdx","_raw":{"sourceFilePath":"business-dashboard/how-to/get-started.mdx","sourceFileName":"get-started.mdx","sourceFileDir":"business-dashboard/how-to","contentType":"mdx","flattenedPath":"business-dashboard/how-to/get-started"},"type":"BusinessDashboard","slug":["how-to","get-started"],"excerpt":"\\nWatch the video tutorial below on how to sign up and log in to your Business Dashboard, as well as on how to register your WhatsApp Business Account.\\n\\n\\n  \\n\\n\\n### Sign Up for WhatsApp Business Dashboard\\n\\n"}');
;// CONCATENATED MODULE: ./.contentlayer/generated/BusinessDashboard/business-dashboard__how-to__how-to-register.mdx.json
const business_dashboard_how_to_how_to_register_mdx_namespaceObject = JSON.parse('{"id":"how-to-register","section":"How To","title":"How to Register a New WhatsApp Number","prev":"how-to-use-trial","next":"manage-wa-credit","body":{"raw":"\\n### Introduction\\n\\nIn WhatsApp Business Dashboard, you can connect multiple WhatsApp accounts to the dashboard.\\n\\n### How to use\\n\\n1. To connect a new phone number, Go to the **WhatsApp Numbers** page by clicking from the left side navigation.\\n\\n2. Click the **+ New Phone Number** button and follow the registration steps from Facebook.\\n\\n3. Once you have completed the registration process, your request will be reviewed by Facebook for approval. You can only use the registered number to send messages after it is approved. You will be notified through your email once your account is approved. Alternatively, see the WhatsApp number status on the data table on the **WhatsApp Numbers** page.\\n\\n<FigureImage\\n  src=\\"/assets/images/products/business-dashboard/image-how-to-register-1.webp\\"\\n  alt=\\"WhatsApp number table that shows different statuses\\"\\n  caption={{\\n    title: \'Figure 1.\',\\n    description:\\n      \'WhatsApp Numbers page. You can add a new phone number and see the list of WhatsApp numbers that are registered to your Business Dashboard acount with the details.\',\\n  }}\\n  naturalHeight={1464}\\n  naturalWidth={2816}\\n/>\\n\\n#### WhatsApp Number Status\\n\\nFor every registered WhatsApp number, you will see a status on the WhatsApp Numbers page. Here’s what the status means:\\n\\n<Table className=\\"bordered\\">\\n  <TableBody>\\n    <TableBodyRow>\\n      <TableBodyCell>Trial</TableBodyCell>\\n      <TableBodyCell>\\n        You have successfully registered a new WhatsApp number to your WhatsApp Business Account (WABA) for the first\\n        time and waiting for verification from Facebook. You can send a sample message with the trial experience\\n        feature.\\n      </TableBodyCell>\\n    </TableBodyRow>\\n    <TableBodyRow>\\n      <TableBodyCell>New Request</TableBodyCell>\\n      <TableBodyCell>\\n        You have successfully registered another new WhatsApp number and waiting for verification from Facebook.\\n      </TableBodyCell>\\n    </TableBodyRow>\\n    <TableBodyRow>\\n      <TableBodyCell>Connected</TableBodyCell>\\n      <TableBodyCell>\\n        Your WhatsApp number is verified by Facebook and waiting for two-factor verification from Kata.ai.\\n      </TableBodyCell>\\n    </TableBodyRow>\\n    <TableBodyRow>\\n      <TableBodyCell>Business Account</TableBodyCell>\\n      <TableBodyCell>\\n        Your WhatsApp number is verified by Facebook and Kata.ai and can be used to create and broadcast messages.\\n      </TableBodyCell>\\n    </TableBodyRow>\\n    <TableBodyRow>\\n      <TableBodyCell>Official Account</TableBodyCell>\\n      <TableBodyCell>Your WhatsApp number is upgraded from a business account to an official account.</TableBodyCell>\\n    </TableBodyRow>\\n    <TableBodyRow>\\n      <TableBodyCell>Rejected</TableBodyCell>\\n      <TableBodyCell>\\n        Your request for connecting a new phone number has been rejected by WhatsApp. In this case, the following may be\\n        the case:\\n        <ul>\\n          <li>Your number has been registered to WhatsApp</li>\\n          <li>Your number has expired</li>\\n          <li>\\n            Your display name does not comply with\\n            <a href=\\"https://developers.facebook.com/docs/whatsapp/guides/display-name\\">guidelines</a> from Facebook\\n          </li>\\n        </ul>\\n      </TableBodyCell>\\n    </TableBodyRow>\\n  </TableBody>\\n</Table>\\n","code":"var Component=(()=>{var f=Object.create;var h=Object.defineProperty;var g=Object.getOwnPropertyDescriptor;var w=Object.getOwnPropertyNames;var y=Object.getPrototypeOf,A=Object.prototype.hasOwnProperty;var u=t=>h(t,\\"__esModule\\",{value:!0});var W=(t,r)=>()=>(r||t((r={exports:{}}).exports,r),r.exports),v=(t,r)=>{for(var o in r)h(t,o,{get:r[o],enumerable:!0})},p=(t,r,o,n)=>{if(r&&typeof r==\\"object\\"||typeof r==\\"function\\")for(let i of w(r))!A.call(t,i)&&(o||i!==\\"default\\")&&h(t,i,{get:()=>r[i],enumerable:!(n=g(r,i))||n.enumerable});return t},N=(t,r)=>p(u(h(t!=null?f(y(t)):{},\\"default\\",!r&&t&&t.__esModule?{get:()=>t.default,enumerable:!0}:{value:t,enumerable:!0})),t),k=(t=>(r,o)=>t&&t.get(r)||(o=p(u({}),r,1),t&&t.set(r,o),o))(typeof WeakMap!=\\"undefined\\"?new WeakMap:0);var b=W((j,m)=>{m.exports=_jsx_runtime});var B={};v(B,{default:()=>Y,frontmatter:()=>x});var e=N(b()),x={id:\\"how-to-register\\",prev:\\"how-to-use-trial\\",next:\\"manage-wa-credit\\",title:\\"How to Register a New WhatsApp Number\\",section:\\"How To\\"};function F(t={}){let{wrapper:r}=t.components||{};return r?(0,e.jsx)(r,Object.assign({},t,{children:(0,e.jsx)(o,{})})):o();function o(){let n=Object.assign({h3:\\"h3\\",a:\\"a\\",span:\\"span\\",p:\\"p\\",ol:\\"ol\\",li:\\"li\\",strong:\\"strong\\",h4:\\"h4\\"},t.components),{FigureImage:i,Table:l,TableBody:d,TableBodyRow:s,TableBodyCell:a}=n;return i||c(\\"FigureImage\\",!0),l||c(\\"Table\\",!0),d||c(\\"TableBody\\",!0),a||c(\\"TableBodyCell\\",!0),s||c(\\"TableBodyRow\\",!0),(0,e.jsxs)(e.Fragment,{children:[(0,e.jsxs)(n.h3,{id:\\"introduction\\",children:[(0,e.jsx)(n.a,{className:\\"anchor\\",href:\\"#introduction\\",children:(0,e.jsx)(n.span,{className:\\"icon icon-link\\"})}),\\"Introduction\\"]}),`\\n`,(0,e.jsx)(n.p,{children:\\"In WhatsApp Business Dashboard, you can connect multiple WhatsApp accounts to the dashboard.\\"}),`\\n`,(0,e.jsxs)(n.h3,{id:\\"how-to-use\\",children:[(0,e.jsx)(n.a,{className:\\"anchor\\",href:\\"#how-to-use\\",children:(0,e.jsx)(n.span,{className:\\"icon icon-link\\"})}),\\"How to use\\"]}),`\\n`,(0,e.jsxs)(n.ol,{children:[`\\n`,(0,e.jsxs)(n.li,{children:[`\\n`,(0,e.jsxs)(n.p,{children:[\\"To connect a new phone number, Go to the \\",(0,e.jsx)(n.strong,{children:\\"WhatsApp Numbers\\"}),\\" page by clicking from the left side navigation.\\"]}),`\\n`]}),`\\n`,(0,e.jsxs)(n.li,{children:[`\\n`,(0,e.jsxs)(n.p,{children:[\\"Click the \\",(0,e.jsx)(n.strong,{children:\\"+ New Phone Number\\"}),\\" button and follow the registration steps from Facebook.\\"]}),`\\n`]}),`\\n`,(0,e.jsxs)(n.li,{children:[`\\n`,(0,e.jsxs)(n.p,{children:[\\"Once you have completed the registration process, your request will be reviewed by Facebook for approval. You can only use the registered number to send messages after it is approved. You will be notified through your email once your account is approved. Alternatively, see the WhatsApp number status on the data table on the \\",(0,e.jsx)(n.strong,{children:\\"WhatsApp Numbers\\"}),\\" page.\\"]}),`\\n`]}),`\\n`]}),`\\n`,(0,e.jsx)(i,{src:\\"/assets/images/products/business-dashboard/image-how-to-register-1.webp\\",alt:\\"WhatsApp number table that shows different statuses\\",caption:{title:\\"Figure 1.\\",description:\\"WhatsApp Numbers page. You can add a new phone number and see the list of WhatsApp numbers that are registered to your Business Dashboard acount with the details.\\"},naturalHeight:1464,naturalWidth:2816}),`\\n`,(0,e.jsxs)(n.h4,{id:\\"whatsapp-number-status\\",children:[(0,e.jsx)(n.a,{className:\\"anchor\\",href:\\"#whatsapp-number-status\\",children:(0,e.jsx)(n.span,{className:\\"icon icon-link\\"})}),\\"WhatsApp Number Status\\"]}),`\\n`,(0,e.jsx)(n.p,{children:\\"For every registered WhatsApp number, you will see a status on the WhatsApp Numbers page. Here\\\\u2019s what the status means:\\"}),`\\n`,(0,e.jsx)(l,{className:\\"bordered\\",children:(0,e.jsxs)(d,{children:[(0,e.jsxs)(s,{children:[(0,e.jsx)(a,{children:\\"Trial\\"}),(0,e.jsx)(a,{children:(0,e.jsx)(n.p,{children:`You have successfully registered a new WhatsApp number to your WhatsApp Business Account (WABA) for the first\\ntime and waiting for verification from Facebook. You can send a sample message with the trial experience\\nfeature.`})})]}),(0,e.jsxs)(s,{children:[(0,e.jsx)(a,{children:\\"New Request\\"}),(0,e.jsx)(a,{children:(0,e.jsx)(n.p,{children:\\"You have successfully registered another new WhatsApp number and waiting for verification from Facebook.\\"})})]}),(0,e.jsxs)(s,{children:[(0,e.jsx)(a,{children:\\"Connected\\"}),(0,e.jsx)(a,{children:(0,e.jsx)(n.p,{children:\\"Your WhatsApp number is verified by Facebook and waiting for two-factor verification from Kata.ai.\\"})})]}),(0,e.jsxs)(s,{children:[(0,e.jsx)(a,{children:\\"Business Account\\"}),(0,e.jsx)(a,{children:(0,e.jsx)(n.p,{children:\\"Your WhatsApp number is verified by Facebook and Kata.ai and can be used to create and broadcast messages.\\"})})]}),(0,e.jsxs)(s,{children:[(0,e.jsx)(a,{children:\\"Official Account\\"}),`\\n`,(0,e.jsx)(a,{children:\\"Your WhatsApp number is upgraded from a business account to an official account.\\"})]}),(0,e.jsxs)(s,{children:[(0,e.jsx)(a,{children:\\"Rejected\\"}),(0,e.jsxs)(a,{children:[(0,e.jsx)(n.p,{children:`Your request for connecting a new phone number has been rejected by WhatsApp. In this case, the following may be\\nthe case:`}),(0,e.jsxs)(\\"ul\\",{children:[(0,e.jsx)(\\"li\\",{children:\\"Your number has been registered to WhatsApp\\"}),`\\n`,(0,e.jsx)(\\"li\\",{children:\\"Your number has expired\\"}),(0,e.jsx)(\\"li\\",{children:(0,e.jsxs)(n.p,{children:[`Your display name does not comply with\\n`,(0,e.jsx)(\\"a\\",{href:\\"https://developers.facebook.com/docs/whatsapp/guides/display-name\\",children:\\"guidelines\\"}),\\" from Facebook\\"]})})]})]})]})]})})]})}}var Y=F;function c(t,r){throw new Error(\\"Expected \\"+(r?\\"component\\":\\"object\\")+\\" `\\"+t+\\"` to be defined: you likely forgot to import, pass, or provide it.\\")}return k(B);})();\\n;return Component;"},"_id":"business-dashboard/how-to/how-to-register.mdx","_raw":{"sourceFilePath":"business-dashboard/how-to/how-to-register.mdx","sourceFileName":"how-to-register.mdx","sourceFileDir":"business-dashboard/how-to","contentType":"mdx","flattenedPath":"business-dashboard/how-to/how-to-register"},"type":"BusinessDashboard","slug":["how-to","how-to-register"],"excerpt":"\\n### Introduction\\n\\nIn WhatsApp Business Dashboard, you can connect multiple WhatsApp accounts to the dashboard.\\n\\n### How to use\\n\\n1"}');
;// CONCATENATED MODULE: ./.contentlayer/generated/BusinessDashboard/business-dashboard__how-to__how-to-use-trial.mdx.json
const business_dashboard_how_to_how_to_use_trial_mdx_namespaceObject = JSON.parse('{"id":"how-to-use-trial","section":"How To","title":"How to Use Trial Experience","prev":"get-started","next":"how-to-register","body":{"raw":"\\n### Introduction\\n\\nBefore sending real messages to your audiences, you can send a trial message with the **Trial Experience** feature for free and without requiring approval. This trial is available only for first-time registration with a WhatsApp Business account. Any additional phone number needs to wait until the business is verified.\\n\\n### How to Use\\n\\n1. Go to the **Trial Experience** page by clicking from the left-side navigation.\\n\\n2. Select the WhatsApp phone number you wish to send the message from and hit the **Next** button.\\n\\n3. Input the recipient WhatsApp number you wish to send the message to and click **Send Sample Message**. Shortly, the recipient(s) will receive the sample message. You can send to maximum two recipients with a total up to ten messages per day.\\n\\n<FigureImage\\n  src=\\"/assets/images/products/business-dashboard/image-trial.webp\\"\\n  alt=\\"Trial\\"\\n  caption={{\\n    title: \'Figure 1.\',\\n    description: \'Trial Experience page\',\\n  }}\\n  naturalHeight={1306}\\n  naturalWidth={2112}\\n/>\\n","code":"var Component=(()=>{var d=Object.create;var s=Object.defineProperty;var p=Object.getOwnPropertyDescriptor;var u=Object.getOwnPropertyNames;var m=Object.getPrototypeOf,g=Object.prototype.hasOwnProperty;var a=e=>s(e,\\"__esModule\\",{value:!0});var f=(e,t)=>()=>(t||e((t={exports:{}}).exports,t),t.exports),w=(e,t)=>{for(var r in t)s(e,r,{get:t[r],enumerable:!0})},c=(e,t,r,i)=>{if(t&&typeof t==\\"object\\"||typeof t==\\"function\\")for(let o of u(t))!g.call(e,o)&&(r||o!==\\"default\\")&&s(e,o,{get:()=>t[o],enumerable:!(i=p(t,o))||i.enumerable});return e},x=(e,t)=>c(a(s(e!=null?d(m(e)):{},\\"default\\",!t&&e&&e.__esModule?{get:()=>e.default,enumerable:!0}:{value:e,enumerable:!0})),e),b=(e=>(t,r)=>e&&e.get(t)||(r=c(a({}),t,1),e&&e.set(t,r),r))(typeof WeakMap!=\\"undefined\\"?new WeakMap:0);var h=f((k,l)=>{l.exports=_jsx_runtime});var T={};w(T,{default:()=>_,frontmatter:()=>y});var n=x(h()),y={id:\\"how-to-use-trial\\",prev:\\"get-started\\",next:\\"how-to-register\\",title:\\"How to Use Trial Experience\\",section:\\"How To\\"};function j(e={}){let{wrapper:t}=e.components||{};return t?(0,n.jsx)(t,Object.assign({},e,{children:(0,n.jsx)(r,{})})):r();function r(){let i=Object.assign({h3:\\"h3\\",a:\\"a\\",span:\\"span\\",p:\\"p\\",strong:\\"strong\\",ol:\\"ol\\",li:\\"li\\"},e.components),{FigureImage:o}=i;return o||v(\\"FigureImage\\",!0),(0,n.jsxs)(n.Fragment,{children:[(0,n.jsxs)(i.h3,{id:\\"introduction\\",children:[(0,n.jsx)(i.a,{className:\\"anchor\\",href:\\"#introduction\\",children:(0,n.jsx)(i.span,{className:\\"icon icon-link\\"})}),\\"Introduction\\"]}),`\\n`,(0,n.jsxs)(i.p,{children:[\\"Before sending real messages to your audiences, you can send a trial message with the \\",(0,n.jsx)(i.strong,{children:\\"Trial Experience\\"}),\\" feature for free and without requiring approval. This trial is available only for first-time registration with a WhatsApp Business account. Any additional phone number needs to wait until the business is verified.\\"]}),`\\n`,(0,n.jsxs)(i.h3,{id:\\"how-to-use\\",children:[(0,n.jsx)(i.a,{className:\\"anchor\\",href:\\"#how-to-use\\",children:(0,n.jsx)(i.span,{className:\\"icon icon-link\\"})}),\\"How to Use\\"]}),`\\n`,(0,n.jsxs)(i.ol,{children:[`\\n`,(0,n.jsxs)(i.li,{children:[`\\n`,(0,n.jsxs)(i.p,{children:[\\"Go to the \\",(0,n.jsx)(i.strong,{children:\\"Trial Experience\\"}),\\" page by clicking from the left-side navigation.\\"]}),`\\n`]}),`\\n`,(0,n.jsxs)(i.li,{children:[`\\n`,(0,n.jsxs)(i.p,{children:[\\"Select the WhatsApp phone number you wish to send the message from and hit the \\",(0,n.jsx)(i.strong,{children:\\"Next\\"}),\\" button.\\"]}),`\\n`]}),`\\n`,(0,n.jsxs)(i.li,{children:[`\\n`,(0,n.jsxs)(i.p,{children:[\\"Input the recipient WhatsApp number you wish to send the message to and click \\",(0,n.jsx)(i.strong,{children:\\"Send Sample Message\\"}),\\". Shortly, the recipient(s) will receive the sample message. You can send to maximum two recipients with a total up to ten messages per day.\\"]}),`\\n`]}),`\\n`]}),`\\n`,(0,n.jsx)(o,{src:\\"/assets/images/products/business-dashboard/image-trial.webp\\",alt:\\"Trial\\",caption:{title:\\"Figure 1.\\",description:\\"Trial Experience page\\"},naturalHeight:1306,naturalWidth:2112})]})}}var _=j;function v(e,t){throw new Error(\\"Expected \\"+(t?\\"component\\":\\"object\\")+\\" `\\"+e+\\"` to be defined: you likely forgot to import, pass, or provide it.\\")}return b(T);})();\\n;return Component;"},"_id":"business-dashboard/how-to/how-to-use-trial.mdx","_raw":{"sourceFilePath":"business-dashboard/how-to/how-to-use-trial.mdx","sourceFileName":"how-to-use-trial.mdx","sourceFileDir":"business-dashboard/how-to","contentType":"mdx","flattenedPath":"business-dashboard/how-to/how-to-use-trial"},"type":"BusinessDashboard","slug":["how-to","how-to-use-trial"],"excerpt":"\\n### Introduction\\n\\nBefore sending real messages to your audiences, you can send a trial message with the **Trial Experience** feature for free and without requiring approval. This trial is available only for first-time registration with a WhatsApp Business account"}');
;// CONCATENATED MODULE: ./.contentlayer/generated/BusinessDashboard/business-dashboard__how-to__manage-broadcast.mdx.json
const business_dashboard_how_to_manage_broadcast_mdx_namespaceObject = JSON.parse('{"id":"manage-broadcast","section":"How To","title":"Manage Your Broadcast","prev":"manage-your-whatsapp-message-templates","next":"how-to-use-analytics","body":{"raw":"\\nOnce you have an approved message template, you can use it to send messages to your audience using the broadcast feature in our dashboard.\\n\\nYou can watch our video tutorial below to learn how to broadcast a template message.\\n\\n<YoutubeEmbedWrapper>\\n  <YoutubeEmbed id=\\"smbHZW5qsIk\\" params=\\"v=smbHZW5qsIk\\" title=\\" Manage Your Broadcast\\" />\\n</YoutubeEmbedWrapper>\\n\\n### How to Broadcast a Template Message\\n\\n1. Go to the **Broadcast** page by clicking from the left side navigation, and click **+New Broadcast** on the top right of the page.\\n\\n2. Type in the broadcast name and select the WhatsApp number that you want to send the messages from. Make sure you have enough broadcast credit to broadcast to all of your audience.\\n\\n3. Choose a message template. The field Type and Language will change according to the content of the selected message template. If a message template has more than one language content, you will be able to select the language in the language field.\\n\\n4. Upload a CSV file that contains the content of the template message you have chosen. Make sure you create the CSV file in the correct format. To learn more about how to create the CSV file, read the section Example Case for Creating a CSV File below.\\n\\n5. Once all the details are filled in and the uploaded CSV file passes the checking (See section Error on CSV Upload), the send broadcast button will be enabled by changing the color from grey to blue. Click Send Broadcast.\\n\\n#### Example Case for Creating a CSV File\\n\\nLet’s take a look at how to make a CSV file for an example content below:\\n\\n<FigureImage\\n  src=\\"/assets/images/products/business-dashboard/message-template/image-7.webp\\"\\n  alt=\\"image-7\\"\\n  naturalHeight={513}\\n  naturalWidth={2816}\\n/>\\n\\nAssume this message template has a \\"visit a website\\" CTA button with a dynamic URL. In the CSV file, you have to make a column for the variable URL.\\n\\nTo create the CSV from example above, make columns with the following names in excel:\\n\\n<FigureImage\\n  src=\\"/assets/images/products/business-dashboard/manage-broadcast/table-1.webp\\"\\n  alt=\\"table-1\\"\\n  naturalHeight={109}\\n  naturalWidth={2816}\\n/>\\n\\nThe example content above has two variables in the body content. In the excel, make columns body1_type and body1_text to input the content for variable `{{1}}` and columns body2_type and body3_text to input the content for variable `{{2}}`. There will be more body#\\\\_type and body#\\\\_text columns following the number of variables in the body section.\\n\\nAfter making the column names, fill in the contents for each column like the example below:\\n\\n<FigureImage\\n  src=\\"/assets/images/products/business-dashboard/manage-broadcast/table-2.webp\\"\\n  alt=\\"table-2\\"\\n  naturalHeight={319}\\n  naturalWidth={2816}\\n/>\\n\\nMake sure you fill all the contents correctly to ensure the message is sent successfully. Once you are done filling the contents,\\n**save** your excel document as a CSV and your CSV is ready for upload.\\n\\nTo see the full format guideline on creating a CSV file, please refer to the document [here](https://see-spaces.sgp1.digitaloceanspaces.com/business-dashboard/How%20to%20upload%20broadcast%20template%20message.pdf). You can also download the CSV template example [here](https://docs.google.com/spreadsheets/u/0/d/19MhdnZLytmh4iB5J-EVWYLhRrq6WcAYqkoe0jcOW3IU/edit). Note that if you would like to use the template example for broadcast, you still need to revise the template according to the format of the message template you are about to send.\\n\\n#### Error on CSV Upload\\n\\nIf your CSV upload returns a warning, you can’t proceed to send a broadcast. Let’s take a look at the warnings and what you can do to solve the problem.\\n\\n<Table>\\n  <TableHead>\\n    <TableHeadRow>\\n      <TableHeadCell>Warning Message</TableHeadCell>\\n      <TableHeadCell>Solution</TableHeadCell>\\n    </TableHeadRow>\\n  </TableHead>\\n  <TableBody>\\n    <TableBodyRow>\\n      <TableBodyCell>Your CSV file size must not exceed 10 MB</TableBodyCell>\\n      <TableBodyCell>Compress your CSV file size and reupload </TableBodyCell>\\n    </TableBodyRow>\\n    <TableBodyRow>\\n      <TableBodyCell>\\n        Your CSV file is incompatible with the chosen template message, please check your parameters.\\n      </TableBodyCell>\\n      <TableBodyCell>\\n        Make sure the column fields and their names are correct and match with the variables in the selected message\\n        template\\n      </TableBodyCell>\\n    </TableBodyRow>\\n  </TableBody>\\n</Table>\\n\\n### View Your Broadcast\\n\\nAfter you send a broadcast, your broadcast is listed on the **Broadcast** page. Here are the things you can see or do on the **Broadcast** page:\\n\\n<FigureImage\\n  src=\\"/assets/images/products/business-dashboard/image-broadcast.webp\\"\\n  alt=\\"Broadcast\\"\\n  caption={{\\n    title: \'Figure 1.\',\\n    description: \'Broadcast page\',\\n  }}\\n  naturalHeight={1468}\\n  naturalWidth={2816}\\n/>\\n\\n#### Broadcast Status\\n\\nAfter a broadcast message has been submitted, the status will show **In progress**. Once the broadcast has been sent to all audiences, the status will be changed to **Sent**.\\n\\n#### Broadcast Details\\n\\nBroadcast details allow you to see the contents of the messages you have broadcasted and the analytics of the number of messages sent, read, and failed to send.\\n\\nTo view a broadcast detail, choose the broadcast that you want to see the details, and click the **Details** button on the right column.\\n\\nYou can find the information on a broadcast message under the **\\"Broadcast details\\"** title. On the right column, you’ll see a broadcast report that shows the status of the broadcasted messages. Here’s what the status means:\\n\\n<Table>\\n  <TableBody>\\n    <TableBodyRow>\\n      <TableBodyCell>Delivered</TableBodyCell>\\n      <TableBodyCell>\\n        The message is sent but has not been opened by the recipient yet or the recipient might have read the message,\\n        but has the read receipt turned off.\\n      </TableBodyCell>\\n    </TableBodyRow>\\n    <TableBodyRow>\\n      <TableBodyCell>Read</TableBodyCell>\\n      <TableBodyCell>The recipient has read the message.</TableBodyCell>\\n    </TableBodyRow>\\n    <TableBodyRow>\\n      <TableBodyCell>Failed</TableBodyCell>\\n      <TableBodyCell>\\n        The message was not sent to a recipient. In this case, the following may be the case:\\n        <li>Recipients do not activate WhatsApp on their device.</li>\\n        <li>Recipients have expired/invalid numbers.</li>\\n        <li>Error in CSV due to too much recipients (we recommend capping recipients at 10,000 per broadcast)</li>\\n        <li>Your phone number has reached its daily sending limit.</li>\\n        <li>Your phone number got restricted by Facebook.</li>\\n      </TableBodyCell>\\n    </TableBodyRow>\\n  </TableBody>\\n</Table>\\n\\n#### Delete Broadcast\\n\\nIf you want to delete a submitted broadcast, select the broadcast you want to delete and click the **\\"Delete\\"** button on the right column.\\n\\n## Helpful Tips on Broadcast\\n\\n1. Ensure opt-in is obtained to avoid surprising your customers when these messages are sent. If opt-in was previously obtained for just transactional notifications, consider sending an update that notifications may now include additional types of notifications, like promotions, and provide clarity on how to opt-out.\\n\\n2. Leverage data to segment and target specific audiences with various marketing messages.\\n\\n3. If running a campaign, kick off with a small volume, gather learnings, and make adjustments as needed before ramping up volumes.\\n\\n4. Monitor quality metrics, like phone-level quality scores (green, yellow, red) available in the Business Manager UI and via API.\\n","code":"var Component=(()=>{var k=Object.create;var d=Object.defineProperty;var C=Object.getOwnPropertyDescriptor;var x=Object.getOwnPropertyNames;var T=Object.getPrototypeOf,B=Object.prototype.hasOwnProperty;var f=t=>d(t,\\"__esModule\\",{value:!0});var S=(t,n)=>()=>(n||t((n={exports:{}}).exports,n),n.exports),V=(t,n)=>{for(var o in n)d(t,o,{get:n[o],enumerable:!0})},y=(t,n,o,a)=>{if(n&&typeof n==\\"object\\"||typeof n==\\"function\\")for(let i of x(n))!B.call(t,i)&&(o||i!==\\"default\\")&&d(t,i,{get:()=>n[i],enumerable:!(a=C(n,i))||a.enumerable});return t},H=(t,n)=>y(f(d(t!=null?k(T(t)):{},\\"default\\",!n&&t&&t.__esModule?{get:()=>t.default,enumerable:!0}:{value:t,enumerable:!0})),t),N=(t=>(n,o)=>t&&t.get(n)||(o=y(f({}),n,1),t&&t.set(n,o),o))(typeof WeakMap!=\\"undefined\\"?new WeakMap:0);var v=S((E,w)=>{w.exports=_jsx_runtime});var W={};V(W,{default:()=>Y,frontmatter:()=>I});var e=H(v()),I={id:\\"manage-broadcast\\",prev:\\"manage-your-whatsapp-message-templates\\",next:\\"how-to-use-analytics\\",title:\\"Manage Your Broadcast\\",section:\\"How To\\"};function M(t={}){let{wrapper:n}=t.components||{};return n?(0,e.jsx)(n,Object.assign({},t,{children:(0,e.jsx)(o,{})})):o();function o(){let a=Object.assign({p:\\"p\\",h3:\\"h3\\",a:\\"a\\",span:\\"span\\",ol:\\"ol\\",li:\\"li\\",strong:\\"strong\\",h4:\\"h4\\",code:\\"code\\",h2:\\"h2\\"},t.components),{YoutubeEmbedWrapper:i,YoutubeEmbed:m,FigureImage:c,Table:h,TableHead:b,TableHeadRow:g,TableHeadCell:u,TableBody:p,TableBodyRow:l,TableBodyCell:s}=a;return c||r(\\"FigureImage\\",!0),h||r(\\"Table\\",!0),p||r(\\"TableBody\\",!0),s||r(\\"TableBodyCell\\",!0),l||r(\\"TableBodyRow\\",!0),b||r(\\"TableHead\\",!0),u||r(\\"TableHeadCell\\",!0),g||r(\\"TableHeadRow\\",!0),m||r(\\"YoutubeEmbed\\",!0),i||r(\\"YoutubeEmbedWrapper\\",!0),(0,e.jsxs)(e.Fragment,{children:[(0,e.jsx)(a.p,{children:\\"Once you have an approved message template, you can use it to send messages to your audience using the broadcast feature in our dashboard.\\"}),`\\n`,(0,e.jsx)(a.p,{children:\\"You can watch our video tutorial below to learn how to broadcast a template message.\\"}),`\\n`,(0,e.jsx)(i,{children:(0,e.jsx)(m,{id:\\"smbHZW5qsIk\\",params:\\"v=smbHZW5qsIk\\",title:\\" Manage Your Broadcast\\"})}),`\\n`,(0,e.jsxs)(a.h3,{id:\\"how-to-broadcast-a-template-message\\",children:[(0,e.jsx)(a.a,{className:\\"anchor\\",href:\\"#how-to-broadcast-a-template-message\\",children:(0,e.jsx)(a.span,{className:\\"icon icon-link\\"})}),\\"How to Broadcast a Template Message\\"]}),`\\n`,(0,e.jsxs)(a.ol,{children:[`\\n`,(0,e.jsxs)(a.li,{children:[`\\n`,(0,e.jsxs)(a.p,{children:[\\"Go to the \\",(0,e.jsx)(a.strong,{children:\\"Broadcast\\"}),\\" page by clicking from the left side navigation, and click \\",(0,e.jsx)(a.strong,{children:\\"+New Broadcast\\"}),\\" on the top right of the page.\\"]}),`\\n`]}),`\\n`,(0,e.jsxs)(a.li,{children:[`\\n`,(0,e.jsx)(a.p,{children:\\"Type in the broadcast name and select the WhatsApp number that you want to send the messages from. Make sure you have enough broadcast credit to broadcast to all of your audience.\\"}),`\\n`]}),`\\n`,(0,e.jsxs)(a.li,{children:[`\\n`,(0,e.jsx)(a.p,{children:\\"Choose a message template. The field Type and Language will change according to the content of the selected message template. If a message template has more than one language content, you will be able to select the language in the language field.\\"}),`\\n`]}),`\\n`,(0,e.jsxs)(a.li,{children:[`\\n`,(0,e.jsx)(a.p,{children:\\"Upload a CSV file that contains the content of the template message you have chosen. Make sure you create the CSV file in the correct format. To learn more about how to create the CSV file, read the section Example Case for Creating a CSV File below.\\"}),`\\n`]}),`\\n`,(0,e.jsxs)(a.li,{children:[`\\n`,(0,e.jsx)(a.p,{children:\\"Once all the details are filled in and the uploaded CSV file passes the checking (See section Error on CSV Upload), the send broadcast button will be enabled by changing the color from grey to blue. Click Send Broadcast.\\"}),`\\n`]}),`\\n`]}),`\\n`,(0,e.jsxs)(a.h4,{id:\\"example-case-for-creating-a-csv-file\\",children:[(0,e.jsx)(a.a,{className:\\"anchor\\",href:\\"#example-case-for-creating-a-csv-file\\",children:(0,e.jsx)(a.span,{className:\\"icon icon-link\\"})}),\\"Example Case for Creating a CSV File\\"]}),`\\n`,(0,e.jsx)(a.p,{children:\\"Let\\\\u2019s take a look at how to make a CSV file for an example content below:\\"}),`\\n`,(0,e.jsx)(c,{src:\\"/assets/images/products/business-dashboard/message-template/image-7.webp\\",alt:\\"image-7\\",naturalHeight:513,naturalWidth:2816}),`\\n`,(0,e.jsx)(a.p,{children:\'Assume this message template has a \\"visit a website\\" CTA button with a dynamic URL. In the CSV file, you have to make a column for the variable URL.\'}),`\\n`,(0,e.jsx)(a.p,{children:\\"To create the CSV from example above, make columns with the following names in excel:\\"}),`\\n`,(0,e.jsx)(c,{src:\\"/assets/images/products/business-dashboard/manage-broadcast/table-1.webp\\",alt:\\"table-1\\",naturalHeight:109,naturalWidth:2816}),`\\n`,(0,e.jsxs)(a.p,{children:[\\"The example content above has two variables in the body content. In the excel, make columns body1_type and body1_text to input the content for variable \\",(0,e.jsx)(a.code,{children:\\"{{1}}\\"}),\\" and columns body2_type and body3_text to input the content for variable \\",(0,e.jsx)(a.code,{children:\\"{{2}}\\"}),\\". There will be more body#_type and body#_text columns following the number of variables in the body section.\\"]}),`\\n`,(0,e.jsx)(a.p,{children:\\"After making the column names, fill in the contents for each column like the example below:\\"}),`\\n`,(0,e.jsx)(c,{src:\\"/assets/images/products/business-dashboard/manage-broadcast/table-2.webp\\",alt:\\"table-2\\",naturalHeight:319,naturalWidth:2816}),`\\n`,(0,e.jsxs)(a.p,{children:[`Make sure you fill all the contents correctly to ensure the message is sent successfully. Once you are done filling the contents,\\n`,(0,e.jsx)(a.strong,{children:\\"save\\"}),\\" your excel document as a CSV and your CSV is ready for upload.\\"]}),`\\n`,(0,e.jsxs)(a.p,{children:[\\"To see the full format guideline on creating a CSV file, please refer to the document \\",(0,e.jsx)(a.a,{href:\\"https://see-spaces.sgp1.digitaloceanspaces.com/business-dashboard/How%20to%20upload%20broadcast%20template%20message.pdf\\",children:\\"here\\"}),\\". You can also download the CSV template example \\",(0,e.jsx)(a.a,{href:\\"https://docs.google.com/spreadsheets/u/0/d/19MhdnZLytmh4iB5J-EVWYLhRrq6WcAYqkoe0jcOW3IU/edit\\",children:\\"here\\"}),\\". Note that if you would like to use the template example for broadcast, you still need to revise the template according to the format of the message template you are about to send.\\"]}),`\\n`,(0,e.jsxs)(a.h4,{id:\\"error-on-csv-upload\\",children:[(0,e.jsx)(a.a,{className:\\"anchor\\",href:\\"#error-on-csv-upload\\",children:(0,e.jsx)(a.span,{className:\\"icon icon-link\\"})}),\\"Error on CSV Upload\\"]}),`\\n`,(0,e.jsx)(a.p,{children:\\"If your CSV upload returns a warning, you can\\\\u2019t proceed to send a broadcast. Let\\\\u2019s take a look at the warnings and what you can do to solve the problem.\\"}),`\\n`,(0,e.jsxs)(h,{children:[(0,e.jsx)(b,{children:(0,e.jsxs)(g,{children:[(0,e.jsx)(u,{children:\\"Warning Message\\"}),`\\n`,(0,e.jsx)(u,{children:\\"Solution\\"})]})}),(0,e.jsxs)(p,{children:[(0,e.jsxs)(l,{children:[(0,e.jsx)(s,{children:\\"Your CSV file size must not exceed 10 MB\\"}),`\\n`,(0,e.jsx)(s,{children:\\"Compress your CSV file size and reupload \\"})]}),(0,e.jsxs)(l,{children:[(0,e.jsx)(s,{children:(0,e.jsx)(a.p,{children:\\"Your CSV file is incompatible with the chosen template message, please check your parameters.\\"})}),(0,e.jsx)(s,{children:(0,e.jsx)(a.p,{children:`Make sure the column fields and their names are correct and match with the variables in the selected message\\ntemplate`})})]})]})]}),`\\n`,(0,e.jsxs)(a.h3,{id:\\"view-your-broadcast\\",children:[(0,e.jsx)(a.a,{className:\\"anchor\\",href:\\"#view-your-broadcast\\",children:(0,e.jsx)(a.span,{className:\\"icon icon-link\\"})}),\\"View Your Broadcast\\"]}),`\\n`,(0,e.jsxs)(a.p,{children:[\\"After you send a broadcast, your broadcast is listed on the \\",(0,e.jsx)(a.strong,{children:\\"Broadcast\\"}),\\" page. Here are the things you can see or do on the \\",(0,e.jsx)(a.strong,{children:\\"Broadcast\\"}),\\" page:\\"]}),`\\n`,(0,e.jsx)(c,{src:\\"/assets/images/products/business-dashboard/image-broadcast.webp\\",alt:\\"Broadcast\\",caption:{title:\\"Figure 1.\\",description:\\"Broadcast page\\"},naturalHeight:1468,naturalWidth:2816}),`\\n`,(0,e.jsxs)(a.h4,{id:\\"broadcast-status\\",children:[(0,e.jsx)(a.a,{className:\\"anchor\\",href:\\"#broadcast-status\\",children:(0,e.jsx)(a.span,{className:\\"icon icon-link\\"})}),\\"Broadcast Status\\"]}),`\\n`,(0,e.jsxs)(a.p,{children:[\\"After a broadcast message has been submitted, the status will show \\",(0,e.jsx)(a.strong,{children:\\"In progress\\"}),\\". Once the broadcast has been sent to all audiences, the status will be changed to \\",(0,e.jsx)(a.strong,{children:\\"Sent\\"}),\\".\\"]}),`\\n`,(0,e.jsxs)(a.h4,{id:\\"broadcast-details\\",children:[(0,e.jsx)(a.a,{className:\\"anchor\\",href:\\"#broadcast-details\\",children:(0,e.jsx)(a.span,{className:\\"icon icon-link\\"})}),\\"Broadcast Details\\"]}),`\\n`,(0,e.jsx)(a.p,{children:\\"Broadcast details allow you to see the contents of the messages you have broadcasted and the analytics of the number of messages sent, read, and failed to send.\\"}),`\\n`,(0,e.jsxs)(a.p,{children:[\\"To view a broadcast detail, choose the broadcast that you want to see the details, and click the \\",(0,e.jsx)(a.strong,{children:\\"Details\\"}),\\" button on the right column.\\"]}),`\\n`,(0,e.jsxs)(a.p,{children:[\\"You can find the information on a broadcast message under the \\",(0,e.jsx)(a.strong,{children:\'\\"Broadcast details\\"\'}),\\" title. On the right column, you\\\\u2019ll see a broadcast report that shows the status of the broadcasted messages. Here\\\\u2019s what the status means:\\"]}),`\\n`,(0,e.jsx)(h,{children:(0,e.jsxs)(p,{children:[(0,e.jsxs)(l,{children:[(0,e.jsx)(s,{children:\\"Delivered\\"}),(0,e.jsx)(s,{children:(0,e.jsx)(a.p,{children:`The message is sent but has not been opened by the recipient yet or the recipient might have read the message,\\nbut has the read receipt turned off.`})})]}),(0,e.jsxs)(l,{children:[(0,e.jsx)(s,{children:\\"Read\\"}),`\\n`,(0,e.jsx)(s,{children:\\"The recipient has read the message.\\"})]}),(0,e.jsxs)(l,{children:[(0,e.jsx)(s,{children:\\"Failed\\"}),(0,e.jsx)(s,{children:(0,e.jsxs)(a.p,{children:[`The message was not sent to a recipient. In this case, the following may be the case:\\n`,(0,e.jsx)(\\"li\\",{children:\\"Recipients do not activate WhatsApp on their device.\\"}),`\\n`,(0,e.jsx)(\\"li\\",{children:\\"Recipients have expired/invalid numbers.\\"}),`\\n`,(0,e.jsx)(\\"li\\",{children:\\"Error in CSV due to too much recipients (we recommend capping recipients at 10,000 per broadcast)\\"}),`\\n`,(0,e.jsx)(\\"li\\",{children:\\"Your phone number has reached its daily sending limit.\\"}),`\\n`,(0,e.jsx)(\\"li\\",{children:\\"Your phone number got restricted by Facebook.\\"})]})})]})]})}),`\\n`,(0,e.jsxs)(a.h4,{id:\\"delete-broadcast\\",children:[(0,e.jsx)(a.a,{className:\\"anchor\\",href:\\"#delete-broadcast\\",children:(0,e.jsx)(a.span,{className:\\"icon icon-link\\"})}),\\"Delete Broadcast\\"]}),`\\n`,(0,e.jsxs)(a.p,{children:[\\"If you want to delete a submitted broadcast, select the broadcast you want to delete and click the \\",(0,e.jsx)(a.strong,{children:\'\\"Delete\\"\'}),\\" button on the right column.\\"]}),`\\n`,(0,e.jsxs)(a.h2,{id:\\"helpful-tips-on-broadcast\\",children:[(0,e.jsx)(a.a,{className:\\"anchor\\",href:\\"#helpful-tips-on-broadcast\\",children:(0,e.jsx)(a.span,{className:\\"icon icon-link\\"})}),\\"Helpful Tips on Broadcast\\"]}),`\\n`,(0,e.jsxs)(a.ol,{children:[`\\n`,(0,e.jsxs)(a.li,{children:[`\\n`,(0,e.jsx)(a.p,{children:\\"Ensure opt-in is obtained to avoid surprising your customers when these messages are sent. If opt-in was previously obtained for just transactional notifications, consider sending an update that notifications may now include additional types of notifications, like promotions, and provide clarity on how to opt-out.\\"}),`\\n`]}),`\\n`,(0,e.jsxs)(a.li,{children:[`\\n`,(0,e.jsx)(a.p,{children:\\"Leverage data to segment and target specific audiences with various marketing messages.\\"}),`\\n`]}),`\\n`,(0,e.jsxs)(a.li,{children:[`\\n`,(0,e.jsx)(a.p,{children:\\"If running a campaign, kick off with a small volume, gather learnings, and make adjustments as needed before ramping up volumes.\\"}),`\\n`]}),`\\n`,(0,e.jsxs)(a.li,{children:[`\\n`,(0,e.jsx)(a.p,{children:\\"Monitor quality metrics, like phone-level quality scores (green, yellow, red) available in the Business Manager UI and via API.\\"}),`\\n`]}),`\\n`]})]})}}var Y=M;function r(t,n){throw new Error(\\"Expected \\"+(n?\\"component\\":\\"object\\")+\\" `\\"+t+\\"` to be defined: you likely forgot to import, pass, or provide it.\\")}return N(W);})();\\n;return Component;"},"_id":"business-dashboard/how-to/manage-broadcast.mdx","_raw":{"sourceFilePath":"business-dashboard/how-to/manage-broadcast.mdx","sourceFileName":"manage-broadcast.mdx","sourceFileDir":"business-dashboard/how-to","contentType":"mdx","flattenedPath":"business-dashboard/how-to/manage-broadcast"},"type":"BusinessDashboard","slug":["how-to","manage-broadcast"],"excerpt":"\\nOnce you have an approved message template, you can use it to send messages to your audience using the broadcast feature in our dashboard.\\n\\nYou can watch our video tutorial below to learn how to broadcast a template message"}');
;// CONCATENATED MODULE: ./.contentlayer/generated/BusinessDashboard/business-dashboard__how-to__manage-wa-credit.mdx.json
const business_dashboard_how_to_manage_wa_credit_mdx_namespaceObject = JSON.parse('{"id":"manage-wa-credit","section":"How To","title":"Manage Your Broadcast Credit","prev":"how-to-register","next":"manage-your-whatsapp-message-templates","body":{"raw":"\\nTo send messages to your audiences, you have to use Broadcast credit. In your dashboard you will see a credit template message balance, one (1) credit represents one (1) template message sent to your client. Cost per template message credit is determined by the different volume of credits you purchased (self-payment) or commercial agreement (for enterprise).\\n\\nYou can see the remaining broadcast credit of a phone number connected to your business dashboard on the **Whatsapp Numbers** page. You can also top up broadcast credits from the business dashboard.\\n\\n### Top Up WhatsApp Credit\\n\\n<FigureImage\\n  src=\\"/assets/images/products/business-dashboard/image-top-up-credits.webp\\"\\n  alt=\\"Credit\\"\\n  caption={{ title: \'Figure 1.\', description: \'Top up credit\' }}\\n  naturalHeight={1468}\\n  naturalWidth={2819}\\n/>\\n\\n1. On the **WhatsApp Numbers** page, look for the WhatsApp number that you want to add the credits to, and click the **top up** button on the right side of the row. Alternatively, go to the **Credits** page and click the **Top up broadcast credits** button.\\n\\n2. You will be directed to the **Top Up Credits** page. Select the correct phone number and input or slide the slider to the number of credits you want to purchase. You will see the total amount you need to pay. To proceed, click **Pay Now**.\\n\\n3. The page will show the summary of your purchase. Choose your preferred payment method, and click **next**.\\n\\n   **Note on payment method:**\\n   Currently, we are only receiving bank transfer payments through BCA and BNI Virtual Accounts. For a BCA virtual account, we can only receive payments from a BCA account. To make payments from other bank accounts, choose a BNI virtual account as the payment method.\\n\\n4. Transfer the payment to the virtual account number listed. Once the payment has been completed, you will receive a confirmation on the dashboard and your email along with the invoice. Note that you only have 24 hours to complete the payment before the session expires.\\n\\n### WhatsApp Credit History\\n\\nTo view your ongoing and past WhatsApp credit purchases and their status, go to the **Credits** page. Here, you can also download the invoice for each of your purchases by clicking the view **invoice.**\\n\\n<FigureImage\\n  src=\\"/assets/images/products/business-dashboard/image-credit-history.webp\\"\\n  alt=\\"Credit History\\"\\n  caption={{ title: \'Figure 2.\', description: \'WhatsApp Credit History\' }}\\n  naturalHeight={1464}\\n  naturalWidth={2816}\\n/>\\n","code":"var Component=(()=>{var p=Object.create;var i=Object.defineProperty;var l=Object.getOwnPropertyDescriptor;var u=Object.getOwnPropertyNames;var m=Object.getPrototypeOf,g=Object.prototype.hasOwnProperty;var s=n=>i(n,\\"__esModule\\",{value:!0});var y=(n,r)=>()=>(r||n((r={exports:{}}).exports,r),r.exports),b=(n,r)=>{for(var o in r)i(n,o,{get:r[o],enumerable:!0})},c=(n,r,o,t)=>{if(r&&typeof r==\\"object\\"||typeof r==\\"function\\")for(let a of u(r))!g.call(n,a)&&(o||a!==\\"default\\")&&i(n,a,{get:()=>r[a],enumerable:!(t=l(r,a))||t.enumerable});return n},f=(n,r)=>c(s(i(n!=null?p(m(n)):{},\\"default\\",!r&&n&&n.__esModule?{get:()=>n.default,enumerable:!0}:{value:n,enumerable:!0})),n),w=(n=>(r,o)=>n&&n.get(r)||(o=c(s({}),r,1),n&&n.set(r,o),o))(typeof WeakMap!=\\"undefined\\"?new WeakMap:0);var h=y((T,d)=>{d.exports=_jsx_runtime});var A={};b(A,{default:()=>x,frontmatter:()=>v});var e=f(h()),v={id:\\"manage-wa-credit\\",prev:\\"how-to-register\\",next:\\"manage-your-whatsapp-message-templates\\",title:\\"Manage Your Broadcast Credit\\",section:\\"How To\\"};function C(n={}){let{wrapper:r}=n.components||{};return r?(0,e.jsx)(r,Object.assign({},n,{children:(0,e.jsx)(o,{})})):o();function o(){let t=Object.assign({p:\\"p\\",strong:\\"strong\\",h3:\\"h3\\",a:\\"a\\",span:\\"span\\",ol:\\"ol\\",li:\\"li\\"},n.components),{FigureImage:a}=t;return a||k(\\"FigureImage\\",!0),(0,e.jsxs)(e.Fragment,{children:[(0,e.jsx)(t.p,{children:\\"To send messages to your audiences, you have to use Broadcast credit. In your dashboard you will see a credit template message balance, one (1) credit represents one (1) template message sent to your client. Cost per template message credit is determined by the different volume of credits you purchased (self-payment) or commercial agreement (for enterprise).\\"}),`\\n`,(0,e.jsxs)(t.p,{children:[\\"You can see the remaining broadcast credit of a phone number connected to your business dashboard on the \\",(0,e.jsx)(t.strong,{children:\\"Whatsapp Numbers\\"}),\\" page. You can also top up broadcast credits from the business dashboard.\\"]}),`\\n`,(0,e.jsxs)(t.h3,{id:\\"top-up-whatsapp-credit\\",children:[(0,e.jsx)(t.a,{className:\\"anchor\\",href:\\"#top-up-whatsapp-credit\\",children:(0,e.jsx)(t.span,{className:\\"icon icon-link\\"})}),\\"Top Up WhatsApp Credit\\"]}),`\\n`,(0,e.jsx)(a,{src:\\"/assets/images/products/business-dashboard/image-top-up-credits.webp\\",alt:\\"Credit\\",caption:{title:\\"Figure 1.\\",description:\\"Top up credit\\"},naturalHeight:1468,naturalWidth:2819}),`\\n`,(0,e.jsxs)(t.ol,{children:[`\\n`,(0,e.jsxs)(t.li,{children:[`\\n`,(0,e.jsxs)(t.p,{children:[\\"On the \\",(0,e.jsx)(t.strong,{children:\\"WhatsApp Numbers\\"}),\\" page, look for the WhatsApp number that you want to add the credits to, and click the \\",(0,e.jsx)(t.strong,{children:\\"top up\\"}),\\" button on the right side of the row. Alternatively, go to the \\",(0,e.jsx)(t.strong,{children:\\"Credits\\"}),\\" page and click the \\",(0,e.jsx)(t.strong,{children:\\"Top up broadcast credits\\"}),\\" button.\\"]}),`\\n`]}),`\\n`,(0,e.jsxs)(t.li,{children:[`\\n`,(0,e.jsxs)(t.p,{children:[\\"You will be directed to the \\",(0,e.jsx)(t.strong,{children:\\"Top Up Credits\\"}),\\" page. Select the correct phone number and input or slide the slider to the number of credits you want to purchase. You will see the total amount you need to pay. To proceed, click \\",(0,e.jsx)(t.strong,{children:\\"Pay Now\\"}),\\".\\"]}),`\\n`]}),`\\n`,(0,e.jsxs)(t.li,{children:[`\\n`,(0,e.jsxs)(t.p,{children:[\\"The page will show the summary of your purchase. Choose your preferred payment method, and click \\",(0,e.jsx)(t.strong,{children:\\"next\\"}),\\".\\"]}),`\\n`,(0,e.jsxs)(t.p,{children:[(0,e.jsx)(t.strong,{children:\\"Note on payment method:\\"}),`\\nCurrently, we are only receiving bank transfer payments through BCA and BNI Virtual Accounts. For a BCA virtual account, we can only receive payments from a BCA account. To make payments from other bank accounts, choose a BNI virtual account as the payment method.`]}),`\\n`]}),`\\n`,(0,e.jsxs)(t.li,{children:[`\\n`,(0,e.jsx)(t.p,{children:\\"Transfer the payment to the virtual account number listed. Once the payment has been completed, you will receive a confirmation on the dashboard and your email along with the invoice. Note that you only have 24 hours to complete the payment before the session expires.\\"}),`\\n`]}),`\\n`]}),`\\n`,(0,e.jsxs)(t.h3,{id:\\"whatsapp-credit-history\\",children:[(0,e.jsx)(t.a,{className:\\"anchor\\",href:\\"#whatsapp-credit-history\\",children:(0,e.jsx)(t.span,{className:\\"icon icon-link\\"})}),\\"WhatsApp Credit History\\"]}),`\\n`,(0,e.jsxs)(t.p,{children:[\\"To view your ongoing and past WhatsApp credit purchases and their status, go to the \\",(0,e.jsx)(t.strong,{children:\\"Credits\\"}),\\" page. Here, you can also download the invoice for each of your purchases by clicking the view \\",(0,e.jsx)(t.strong,{children:\\"invoice.\\"})]}),`\\n`,(0,e.jsx)(a,{src:\\"/assets/images/products/business-dashboard/image-credit-history.webp\\",alt:\\"Credit History\\",caption:{title:\\"Figure 2.\\",description:\\"WhatsApp Credit History\\"},naturalHeight:1464,naturalWidth:2816})]})}}var x=C;function k(n,r){throw new Error(\\"Expected \\"+(r?\\"component\\":\\"object\\")+\\" `\\"+n+\\"` to be defined: you likely forgot to import, pass, or provide it.\\")}return w(A);})();\\n;return Component;"},"_id":"business-dashboard/how-to/manage-wa-credit.mdx","_raw":{"sourceFilePath":"business-dashboard/how-to/manage-wa-credit.mdx","sourceFileName":"manage-wa-credit.mdx","sourceFileDir":"business-dashboard/how-to","contentType":"mdx","flattenedPath":"business-dashboard/how-to/manage-wa-credit"},"type":"BusinessDashboard","slug":["how-to","manage-wa-credit"],"excerpt":"\\nTo send messages to your audiences, you have to use Broadcast credit. In your dashboard you will see a credit template message balance, one (1) credit represents one (1) template message sent to your client"}');
;// CONCATENATED MODULE: ./.contentlayer/generated/BusinessDashboard/business-dashboard__how-to__use-analytics.mdx.json
const business_dashboard_how_to_use_analytics_mdx_namespaceObject = JSON.parse('{"id":"how-to-use-analytics","section":"How To","title":"How to Use Analytics","prev":"manage-broadcast","next":"conversation-based-pricing","body":{"raw":"\\n<FigureImage\\n  src=\\"/assets/images/products/business-dashboard/analytics/image-1.webp\\"\\n  alt=\\"image-1\\"\\n  caption={{ title: \'Figure 1.\', description: \'Analytics page\' }}\\n  naturalHeight={1643}\\n  naturalWidth={2881}\\n/>\\n\\n### Introduction\\n\\nThe WhatsApp Business Dashboard has an analytics feature to view the remaining credits, the number of template messages delivered, sent, and read, and the total credits spent on sending template messages for a set period of time. To access this feature, go to the Analytics page.\\n\\n### How to use\\n\\nTo access this feature, go to the **Analytics** page.\\n\\nChoose a WhatsApp number, type of message, and range of date. The data will be shown accordingly.\\n","code":"var Component=(()=>{var l=Object.create;var i=Object.defineProperty;var p=Object.getOwnPropertyDescriptor;var g=Object.getOwnPropertyNames;var m=Object.getPrototypeOf,u=Object.prototype.hasOwnProperty;var r=e=>i(e,\\"__esModule\\",{value:!0});var f=(e,t)=>()=>(t||e((t={exports:{}}).exports,t),t.exports),b=(e,t)=>{for(var s in t)i(e,s,{get:t[s],enumerable:!0})},c=(e,t,s,a)=>{if(t&&typeof t==\\"object\\"||typeof t==\\"function\\")for(let o of g(t))!u.call(e,o)&&(s||o!==\\"default\\")&&i(e,o,{get:()=>t[o],enumerable:!(a=p(t,o))||a.enumerable});return e},w=(e,t)=>c(r(i(e!=null?l(m(e)):{},\\"default\\",!t&&e&&e.__esModule?{get:()=>e.default,enumerable:!0}:{value:e,enumerable:!0})),e),x=(e=>(t,s)=>e&&e.get(t)||(s=c(r({}),t,1),e&&e.set(t,s),s))(typeof WeakMap!=\\"undefined\\"?new WeakMap:0);var h=f((T,d)=>{d.exports=_jsx_runtime});var v={};b(v,{default:()=>_,frontmatter:()=>y});var n=w(h()),y={prev:\\"manage-broadcast\\",id:\\"how-to-use-analytics\\",title:\\"How to Use Analytics\\",next:\\"conversation-based-pricing\\",section:\\"How To\\"};function j(e={}){let{wrapper:t}=e.components||{};return t?(0,n.jsx)(t,Object.assign({},e,{children:(0,n.jsx)(s,{})})):s();function s(){let a=Object.assign({h3:\\"h3\\",a:\\"a\\",span:\\"span\\",p:\\"p\\",strong:\\"strong\\"},e.components),{FigureImage:o}=a;return o||A(\\"FigureImage\\",!0),(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(o,{src:\\"/assets/images/products/business-dashboard/analytics/image-1.webp\\",alt:\\"image-1\\",caption:{title:\\"Figure 1.\\",description:\\"Analytics page\\"},naturalHeight:1643,naturalWidth:2881}),`\\n`,(0,n.jsxs)(a.h3,{id:\\"introduction\\",children:[(0,n.jsx)(a.a,{className:\\"anchor\\",href:\\"#introduction\\",children:(0,n.jsx)(a.span,{className:\\"icon icon-link\\"})}),\\"Introduction\\"]}),`\\n`,(0,n.jsx)(a.p,{children:\\"The WhatsApp Business Dashboard has an analytics feature to view the remaining credits, the number of template messages delivered, sent, and read, and the total credits spent on sending template messages for a set period of time. To access this feature, go to the Analytics page.\\"}),`\\n`,(0,n.jsxs)(a.h3,{id:\\"how-to-use\\",children:[(0,n.jsx)(a.a,{className:\\"anchor\\",href:\\"#how-to-use\\",children:(0,n.jsx)(a.span,{className:\\"icon icon-link\\"})}),\\"How to use\\"]}),`\\n`,(0,n.jsxs)(a.p,{children:[\\"To access this feature, go to the \\",(0,n.jsx)(a.strong,{children:\\"Analytics\\"}),\\" page.\\"]}),`\\n`,(0,n.jsx)(a.p,{children:\\"Choose a WhatsApp number, type of message, and range of date. The data will be shown accordingly.\\"})]})}}var _=j;function A(e,t){throw new Error(\\"Expected \\"+(t?\\"component\\":\\"object\\")+\\" `\\"+e+\\"` to be defined: you likely forgot to import, pass, or provide it.\\")}return x(v);})();\\n;return Component;"},"_id":"business-dashboard/how-to/use-analytics.mdx","_raw":{"sourceFilePath":"business-dashboard/how-to/use-analytics.mdx","sourceFileName":"use-analytics.mdx","sourceFileDir":"business-dashboard/how-to","contentType":"mdx","flattenedPath":"business-dashboard/how-to/use-analytics"},"type":"BusinessDashboard","slug":["how-to","use-analytics"],"excerpt":"\\n"}');
;// CONCATENATED MODULE: ./.contentlayer/generated/BusinessDashboard/business-dashboard__how-to__whatsapp-message-templates.mdx.json
const business_dashboard_how_to_whatsapp_message_templates_mdx_namespaceObject = JSON.parse('{"id":"manage-your-whatsapp-message-templates","section":"How To","title":"Manage Your WhatsApp Message Templates","prev":"manage-wa-credit","next":"manage-broadcast","body":{"raw":"\\n## What is a Message Template?\\n\\nWhatsApp Message Templates are specific message formats that your business can use to send out notifications, alerts, and customer care messages to people who have opted-in to receive WhatsApp messages. Before it can be sent to your audience using the broadcast feature in Kata.ai’s Business Dashboard, your message template will be reviewed and should be approved by Facebook.\\n\\n## WhatsApp Promotional Message\\n\\nWhatsApp is a real game-changer for businesses seeking to deliver an exceptional customer experience. The company recently announced a significant change in its business messaging policy, introducing a promotional message template to Indonesia and Mexico.\\n\\nWhatsApp overturned these restrictions with the following criteria:\\n\\n- Businesses must have Indonesia or Mexico as the country setting in Business Manager to be eligible using the feature.\\n- Businesses must obtain opt-in\\\\* from target recipients in advance for sending all proactive notifications, including non-transactional notifications.\\n\\n\\\\*Opt-in: Gained approval from end customers that they are willing to be contacted via WhatsApp for promotional purposes.\\n\\nThe example use cases for promotional messages include:\\n\\n- **Re-engagement**: cart abandonment reminder, back in stock alert, time to reorder alert, and a reminder to book an appointment\\n- **Recommendations**: upsell and cross-sell product recommendations\\n- **General marketing**: promotional offers\\n\\n## Create a New WhatsApp Message Template\\n\\nWatch the video tutorial below to learn how to create a message template.\\n\\n<YoutubeEmbedWrapper>\\n  <YoutubeEmbed id=\\"fXY57qj5tlk\\" params=\\"v=fXY57qj5tlk\\" title=\\"Manage Your WhatsApp Message Templates\\" />\\n</YoutubeEmbedWrapper>\\n\\n1. Go to the **Message Template** page by clicking from the left side navigation, and click **+New Message** Template on the top right of the page.\\n2. Choose a category of your message template. For a non-promotional WhatsApp template message, you can choose any category based on your business needs and objectives. For promotional content, you have to set the category as **Account Update**.\\n3. Type in the name of the message template. The name can only be in lowercase alphanumeric characters (a-z, 0-9) and underscore _“_\\\\__”_. Space, uppercase letters, and symbols are not allowed.\\n4. Choose the language of your message template. You can select more than one language to create a message template in multiple languages. Click **Next**.\\n5. Fill in all the required content fields for the languages you selected (see Message Template Content Structure section to get tips on how to fill the content). Once you fill all the required fields, click **Submit**. Your message template will be reviewed by Facebook, and you can check the status on the **Message Template page**. In the case of a rejected template message, you may reach out to our support team at [support@kata.ai](mailto:support@kata.ai).\\n\\n## Message Template Content Structure\\n\\n<FigureImage\\n  src=\\"/assets/images/products/business-dashboard/message-template/image-1.webp\\"\\n  alt=\\"image-1\\"\\n  caption={{ title: \'Figure 1.\', description: \'Creating a message template\' }}\\n  naturalHeight={2703}\\n  naturalWidth={2816}\\n/>\\n\\n#### Header (optional)\\n\\n<FigureImage\\n  src=\\"/assets/images/products/business-dashboard/message-template/image-2.webp\\"\\n  alt=\\"image-2\\"\\n  naturalHeight={999}\\n  naturalWidth={2816}\\n/>\\n\\nA header can be a text or a media - image, video, or document. For a text header, the character limit is 60 characters and you can add a maximum of one variable (See variable section for more info).\\n\\n#### Body\\n\\n<FigureImage\\n  src=\\"/assets/images/products/business-dashboard/message-template/image-3.webp\\"\\n  alt=\\"image-3\\"\\n  naturalHeight={1235}\\n  naturalWidth={2816}\\n/>\\n\\nA body is where you add the content of your message. You can edit text formats, add emojis, and add variables (See variable section for more info). The character limit is 1.024 characters for the body section, with only letters, numbers, and emojis allowed. It shouldn’t have newlines, tabs, or more than four consecutive spaces.\\n\\n#### Footer (optional)\\n\\n<FigureImage\\n  src=\\"/assets/images/products/business-dashboard/message-template/image-4.webp\\"\\n  alt=\\"image-4\\"\\n  naturalHeight={660}\\n  naturalWidth={2816}\\n/>\\n\\nA footer can be a closing sentence, or default info - such as an address, social media ID, email, etc. - about your company\\nthat you want to include in your message. For the footer section, the character limit is 60 characters.\\n\\n#### Button (optional)\\n\\nWhen creating a message template, you can choose to include one of the available buttons, **Call-to-Actions** (CTA) or **Quick Replies**.\\n\\n<FigureImage\\n  src=\\"/assets/images/products/business-dashboard/message-template/image-5.webp\\"\\n  alt=\\"image-5\\"\\n  caption={{ title: \'Figure 2.\', description: \'Call to action\' }}\\n  naturalHeight={1424}\\n  naturalWidth={2816}\\n/>\\n\\nA **call-to-action** button allows you to include your website URL and/or your business phone number so your audience can quickly visit your website or contact your business with a single tap. For the visit website URL button, you can choose a static or dynamic URL type. A dynamic URL type lets you personalize the website link by having a variable at the end of the link. The use case is for example when you want to inform a tracking order to your audiences.\\n\\nA quick reply button lets your audience quickly reply to your message. You can create up to three quick reply buttons in a message template. When using quick reply, you have to define the payload for every button you created to return the correct reply when customers tap the buttons.\\n\\n<FigureImage\\n  src=\\"/assets/images/products/business-dashboard/message-template/image-6.webp\\"\\n  alt=\\"image-6\\"\\n  caption={{ title: \'Figure 3.\', description: \'Quick reply\' }}\\n  naturalHeight={1081}\\n  naturalWidth={2816}\\n/>\\n\\n#### Variable\\n\\nUsing variables in your message template is a way to personalize your message to your audience and to reuse your template message for different occasions. A variable is written in two enclosing curly brackets with a number inside a bracket, e.g.: `{{1}}`. It represents changing content and can be implemented in the text header and body content, as well as when you include a dynamic URL button on your message template.\\n\\nHere is an example of using variables in a message:\\n\\n<FigureImage\\n  src=\\"/assets/images/products/business-dashboard/message-template/image-7.webp\\"\\n  alt=\\"image-7\\"\\n  naturalHeight={513}\\n  naturalWidth={2816}\\n/>\\n\\nYou can use variables for cases such as when you want to mention your customers’ names, information on price, promoted items,\\npromotion dates, location, etc. The contents for the variables should be provided in the CSV format when creating a new broadcast\\nusing a certain message template.\\n\\n#### Sample Variable\\n\\n<FigureImage\\n  src=\\"/assets/images/products/business-dashboard/message-template/image-8.webp\\"\\n  alt=\\"image-8\\"\\n  caption={{ title: \'Figure 4.\', description: \'Add content sample popup\' }}\\n  naturalHeight={2039}\\n  naturalWidth={2816}\\n/>\\n\\nFor all variables you created throughout your template message content, you have to add sample contents to help Facebook\\nbetter understand the use case during the review process.\\n\\n1. After you fill the message template form, click **add sample**.\\n2. A modal will appear. Fill in all the variable fields. You can also provide a sample for the media header (image, document, or video). After adding all samples, click **Done**.\\n\\n## Message Template Best Practices\\n\\n1. Template message with the floating parameters will not be approved by WhatsApp, please surround the parameter with context/information so it is clear what variable will be filled in the parameter.<br/><br/>\\n   Example of floating parameter:\\n\\n   “Selamat datang di Toko Sejahtera `{{1}}`”<br/><br/>\\n\\n   In this example, there is no clear information on what variable will be inserted in parameter `{{1}}`\\n\\n   The CORRECT way to create the variable:\\n\\n   i. “Nomor pesanan Anda: `{{2}}`”\\n\\n   ii. “Berikut total pesanan Anda `{{3}}`”<br/><br/>\\n\\n2. Template with spelling mistakes will not be accepted, example:\\n\\n   Instead of using two curly brackets, you mistakenly type the variable in one curly bracket\\n\\n   Example:\\n\\n   Correct: `{{2}}`, Wrong: `{2}`<br/><br/>\\n\\n   Please type the parameter based on sequenced numbers\\n\\n   Example: `{{1}}`, `{{2}}`, `{{3}}`<br/><br/>\\n\\n3. Template message contains potentially abusive/threatening content is not allowed:\\n\\n   a. Threaten customers with a course of legal action will be rejected\\n\\n   b. Threaten the customer if they don’t pay their loan will also be rejected\\n\\n4. Additional best practice guidelines are outlined [here](https://developers.facebook.com/docs/whatsapp/message-templates/guidelines).\\n","code":"var Component=(()=>{var u=Object.create;var r=Object.defineProperty;var g=Object.getOwnPropertyDescriptor;var b=Object.getOwnPropertyNames;var f=Object.getPrototypeOf,y=Object.prototype.hasOwnProperty;var d=n=>r(n,\\"__esModule\\",{value:!0});var w=(n,t)=>()=>(t||n((t={exports:{}}).exports,t),t.exports),v=(n,t)=>{for(var s in t)r(n,s,{get:t[s],enumerable:!0})},h=(n,t,s,a)=>{if(t&&typeof t==\\"object\\"||typeof t==\\"function\\")for(let o of b(t))!y.call(n,o)&&(s||o!==\\"default\\")&&r(n,o,{get:()=>t[o],enumerable:!(a=g(t,o))||a.enumerable});return n},k=(n,t)=>h(d(r(n!=null?u(f(n)):{},\\"default\\",!t&&n&&n.__esModule?{get:()=>n.default,enumerable:!0}:{value:n,enumerable:!0})),n),x=(n=>(t,s)=>n&&n.get(t)||(s=h(d({}),t,1),n&&n.set(t,s),s))(typeof WeakMap!=\\"undefined\\"?new WeakMap:0);var m=w((F,p)=>{p.exports=_jsx_runtime});var W={};v(W,{default:()=>N,frontmatter:()=>A});var e=k(m()),A={prev:\\"manage-wa-credit\\",id:\\"manage-your-whatsapp-message-templates\\",title:\\"Manage Your WhatsApp Message Templates\\",next:\\"manage-broadcast\\",section:\\"How To\\"};function T(n={}){let{wrapper:t}=n.components||{};return t?(0,e.jsx)(t,Object.assign({},n,{children:(0,e.jsx)(s,{})})):s();function s(){let a=Object.assign({h2:\\"h2\\",a:\\"a\\",span:\\"span\\",p:\\"p\\",ul:\\"ul\\",li:\\"li\\",strong:\\"strong\\",ol:\\"ol\\",em:\\"em\\",h4:\\"h4\\",code:\\"code\\"},n.components),{YoutubeEmbedWrapper:o,YoutubeEmbed:c,FigureImage:i}=a;return i||l(\\"FigureImage\\",!0),c||l(\\"YoutubeEmbed\\",!0),o||l(\\"YoutubeEmbedWrapper\\",!0),(0,e.jsxs)(e.Fragment,{children:[(0,e.jsxs)(a.h2,{id:\\"what-is-a-message-template\\",children:[(0,e.jsx)(a.a,{className:\\"anchor\\",href:\\"#what-is-a-message-template\\",children:(0,e.jsx)(a.span,{className:\\"icon icon-link\\"})}),\\"What is a Message Template?\\"]}),`\\n`,(0,e.jsx)(a.p,{children:\\"WhatsApp Message Templates are specific message formats that your business can use to send out notifications, alerts, and customer care messages to people who have opted-in to receive WhatsApp messages. Before it can be sent to your audience using the broadcast feature in Kata.ai\\\\u2019s Business Dashboard, your message template will be reviewed and should be approved by Facebook.\\"}),`\\n`,(0,e.jsxs)(a.h2,{id:\\"whatsapp-promotional-message\\",children:[(0,e.jsx)(a.a,{className:\\"anchor\\",href:\\"#whatsapp-promotional-message\\",children:(0,e.jsx)(a.span,{className:\\"icon icon-link\\"})}),\\"WhatsApp Promotional Message\\"]}),`\\n`,(0,e.jsx)(a.p,{children:\\"WhatsApp is a real game-changer for businesses seeking to deliver an exceptional customer experience. The company recently announced a significant change in its business messaging policy, introducing a promotional message template to Indonesia and Mexico.\\"}),`\\n`,(0,e.jsx)(a.p,{children:\\"WhatsApp overturned these restrictions with the following criteria:\\"}),`\\n`,(0,e.jsxs)(a.ul,{children:[`\\n`,(0,e.jsx)(a.li,{children:\\"Businesses must have Indonesia or Mexico as the country setting in Business Manager to be eligible using the feature.\\"}),`\\n`,(0,e.jsx)(a.li,{children:\\"Businesses must obtain opt-in* from target recipients in advance for sending all proactive notifications, including non-transactional notifications.\\"}),`\\n`]}),`\\n`,(0,e.jsx)(a.p,{children:\\"*Opt-in: Gained approval from end customers that they are willing to be contacted via WhatsApp for promotional purposes.\\"}),`\\n`,(0,e.jsx)(a.p,{children:\\"The example use cases for promotional messages include:\\"}),`\\n`,(0,e.jsxs)(a.ul,{children:[`\\n`,(0,e.jsxs)(a.li,{children:[(0,e.jsx)(a.strong,{children:\\"Re-engagement\\"}),\\": cart abandonment reminder, back in stock alert, time to reorder alert, and a reminder to book an appointment\\"]}),`\\n`,(0,e.jsxs)(a.li,{children:[(0,e.jsx)(a.strong,{children:\\"Recommendations\\"}),\\": upsell and cross-sell product recommendations\\"]}),`\\n`,(0,e.jsxs)(a.li,{children:[(0,e.jsx)(a.strong,{children:\\"General marketing\\"}),\\": promotional offers\\"]}),`\\n`]}),`\\n`,(0,e.jsxs)(a.h2,{id:\\"create-a-new-whatsapp-message-template\\",children:[(0,e.jsx)(a.a,{className:\\"anchor\\",href:\\"#create-a-new-whatsapp-message-template\\",children:(0,e.jsx)(a.span,{className:\\"icon icon-link\\"})}),\\"Create a New WhatsApp Message Template\\"]}),`\\n`,(0,e.jsx)(a.p,{children:\\"Watch the video tutorial below to learn how to create a message template.\\"}),`\\n`,(0,e.jsx)(o,{children:(0,e.jsx)(c,{id:\\"fXY57qj5tlk\\",params:\\"v=fXY57qj5tlk\\",title:\\"Manage Your WhatsApp Message Templates\\"})}),`\\n`,(0,e.jsxs)(a.ol,{children:[`\\n`,(0,e.jsxs)(a.li,{children:[\\"Go to the \\",(0,e.jsx)(a.strong,{children:\\"Message Template\\"}),\\" page by clicking from the left side navigation, and click \\",(0,e.jsx)(a.strong,{children:\\"+New Message\\"}),\\" Template on the top right of the page.\\"]}),`\\n`,(0,e.jsxs)(a.li,{children:[\\"Choose a category of your message template. For a non-promotional WhatsApp template message, you can choose any category based on your business needs and objectives. For promotional content, you have to set the category as \\",(0,e.jsx)(a.strong,{children:\\"Account Update\\"}),\\".\\"]}),`\\n`,(0,e.jsxs)(a.li,{children:[\\"Type in the name of the message template. The name can only be in lowercase alphanumeric characters (a-z, 0-9) and underscore \\",(0,e.jsx)(a.em,{children:\\"\\\\u201C\\"}),\\"_\\",(0,e.jsx)(a.em,{children:\\"\\\\u201D\\"}),\\". Space, uppercase letters, and symbols are not allowed.\\"]}),`\\n`,(0,e.jsxs)(a.li,{children:[\\"Choose the language of your message template. You can select more than one language to create a message template in multiple languages. Click \\",(0,e.jsx)(a.strong,{children:\\"Next\\"}),\\".\\"]}),`\\n`,(0,e.jsxs)(a.li,{children:[\\"Fill in all the required content fields for the languages you selected (see Message Template Content Structure section to get tips on how to fill the content). Once you fill all the required fields, click \\",(0,e.jsx)(a.strong,{children:\\"Submit\\"}),\\". Your message template will be reviewed by Facebook, and you can check the status on the \\",(0,e.jsx)(a.strong,{children:\\"Message Template page\\"}),\\". In the case of a rejected template message, you may reach out to our support team at \\",(0,e.jsx)(a.a,{href:\\"mailto:support@kata.ai\\",children:\\"support@kata.ai\\"}),\\".\\"]}),`\\n`]}),`\\n`,(0,e.jsxs)(a.h2,{id:\\"message-template-content-structure\\",children:[(0,e.jsx)(a.a,{className:\\"anchor\\",href:\\"#message-template-content-structure\\",children:(0,e.jsx)(a.span,{className:\\"icon icon-link\\"})}),\\"Message Template Content Structure\\"]}),`\\n`,(0,e.jsx)(i,{src:\\"/assets/images/products/business-dashboard/message-template/image-1.webp\\",alt:\\"image-1\\",caption:{title:\\"Figure 1.\\",description:\\"Creating a message template\\"},naturalHeight:2703,naturalWidth:2816}),`\\n`,(0,e.jsxs)(a.h4,{id:\\"header-optional\\",children:[(0,e.jsx)(a.a,{className:\\"anchor\\",href:\\"#header-optional\\",children:(0,e.jsx)(a.span,{className:\\"icon icon-link\\"})}),\\"Header (optional)\\"]}),`\\n`,(0,e.jsx)(i,{src:\\"/assets/images/products/business-dashboard/message-template/image-2.webp\\",alt:\\"image-2\\",naturalHeight:999,naturalWidth:2816}),`\\n`,(0,e.jsx)(a.p,{children:\\"A header can be a text or a media - image, video, or document. For a text header, the character limit is 60 characters and you can add a maximum of one variable (See variable section for more info).\\"}),`\\n`,(0,e.jsxs)(a.h4,{id:\\"body\\",children:[(0,e.jsx)(a.a,{className:\\"anchor\\",href:\\"#body\\",children:(0,e.jsx)(a.span,{className:\\"icon icon-link\\"})}),\\"Body\\"]}),`\\n`,(0,e.jsx)(i,{src:\\"/assets/images/products/business-dashboard/message-template/image-3.webp\\",alt:\\"image-3\\",naturalHeight:1235,naturalWidth:2816}),`\\n`,(0,e.jsx)(a.p,{children:\\"A body is where you add the content of your message. You can edit text formats, add emojis, and add variables (See variable section for more info). The character limit is 1.024 characters for the body section, with only letters, numbers, and emojis allowed. It shouldn\\\\u2019t have newlines, tabs, or more than four consecutive spaces.\\"}),`\\n`,(0,e.jsxs)(a.h4,{id:\\"footer-optional\\",children:[(0,e.jsx)(a.a,{className:\\"anchor\\",href:\\"#footer-optional\\",children:(0,e.jsx)(a.span,{className:\\"icon icon-link\\"})}),\\"Footer (optional)\\"]}),`\\n`,(0,e.jsx)(i,{src:\\"/assets/images/products/business-dashboard/message-template/image-4.webp\\",alt:\\"image-4\\",naturalHeight:660,naturalWidth:2816}),`\\n`,(0,e.jsx)(a.p,{children:`A footer can be a closing sentence, or default info - such as an address, social media ID, email, etc. - about your company\\nthat you want to include in your message. For the footer section, the character limit is 60 characters.`}),`\\n`,(0,e.jsxs)(a.h4,{id:\\"button-optional\\",children:[(0,e.jsx)(a.a,{className:\\"anchor\\",href:\\"#button-optional\\",children:(0,e.jsx)(a.span,{className:\\"icon icon-link\\"})}),\\"Button (optional)\\"]}),`\\n`,(0,e.jsxs)(a.p,{children:[\\"When creating a message template, you can choose to include one of the available buttons, \\",(0,e.jsx)(a.strong,{children:\\"Call-to-Actions\\"}),\\" (CTA) or \\",(0,e.jsx)(a.strong,{children:\\"Quick Replies\\"}),\\".\\"]}),`\\n`,(0,e.jsx)(i,{src:\\"/assets/images/products/business-dashboard/message-template/image-5.webp\\",alt:\\"image-5\\",caption:{title:\\"Figure 2.\\",description:\\"Call to action\\"},naturalHeight:1424,naturalWidth:2816}),`\\n`,(0,e.jsxs)(a.p,{children:[\\"A \\",(0,e.jsx)(a.strong,{children:\\"call-to-action\\"}),\\" button allows you to include your website URL and/or your business phone number so your audience can quickly visit your website or contact your business with a single tap. For the visit website URL button, you can choose a static or dynamic URL type. A dynamic URL type lets you personalize the website link by having a variable at the end of the link. The use case is for example when you want to inform a tracking order to your audiences.\\"]}),`\\n`,(0,e.jsx)(a.p,{children:\\"A quick reply button lets your audience quickly reply to your message. You can create up to three quick reply buttons in a message template. When using quick reply, you have to define the payload for every button you created to return the correct reply when customers tap the buttons.\\"}),`\\n`,(0,e.jsx)(i,{src:\\"/assets/images/products/business-dashboard/message-template/image-6.webp\\",alt:\\"image-6\\",caption:{title:\\"Figure 3.\\",description:\\"Quick reply\\"},naturalHeight:1081,naturalWidth:2816}),`\\n`,(0,e.jsxs)(a.h4,{id:\\"variable\\",children:[(0,e.jsx)(a.a,{className:\\"anchor\\",href:\\"#variable\\",children:(0,e.jsx)(a.span,{className:\\"icon icon-link\\"})}),\\"Variable\\"]}),`\\n`,(0,e.jsxs)(a.p,{children:[\\"Using variables in your message template is a way to personalize your message to your audience and to reuse your template message for different occasions. A variable is written in two enclosing curly brackets with a number inside a bracket, e.g.: \\",(0,e.jsx)(a.code,{children:\\"{{1}}\\"}),\\". It represents changing content and can be implemented in the text header and body content, as well as when you include a dynamic URL button on your message template.\\"]}),`\\n`,(0,e.jsx)(a.p,{children:\\"Here is an example of using variables in a message:\\"}),`\\n`,(0,e.jsx)(i,{src:\\"/assets/images/products/business-dashboard/message-template/image-7.webp\\",alt:\\"image-7\\",naturalHeight:513,naturalWidth:2816}),`\\n`,(0,e.jsx)(a.p,{children:`You can use variables for cases such as when you want to mention your customers\\\\u2019 names, information on price, promoted items,\\npromotion dates, location, etc. The contents for the variables should be provided in the CSV format when creating a new broadcast\\nusing a certain message template.`}),`\\n`,(0,e.jsxs)(a.h4,{id:\\"sample-variable\\",children:[(0,e.jsx)(a.a,{className:\\"anchor\\",href:\\"#sample-variable\\",children:(0,e.jsx)(a.span,{className:\\"icon icon-link\\"})}),\\"Sample Variable\\"]}),`\\n`,(0,e.jsx)(i,{src:\\"/assets/images/products/business-dashboard/message-template/image-8.webp\\",alt:\\"image-8\\",caption:{title:\\"Figure 4.\\",description:\\"Add content sample popup\\"},naturalHeight:2039,naturalWidth:2816}),`\\n`,(0,e.jsx)(a.p,{children:`For all variables you created throughout your template message content, you have to add sample contents to help Facebook\\nbetter understand the use case during the review process.`}),`\\n`,(0,e.jsxs)(a.ol,{children:[`\\n`,(0,e.jsxs)(a.li,{children:[\\"After you fill the message template form, click \\",(0,e.jsx)(a.strong,{children:\\"add sample\\"}),\\".\\"]}),`\\n`,(0,e.jsxs)(a.li,{children:[\\"A modal will appear. Fill in all the variable fields. You can also provide a sample for the media header (image, document, or video). After adding all samples, click \\",(0,e.jsx)(a.strong,{children:\\"Done\\"}),\\".\\"]}),`\\n`]}),`\\n`,(0,e.jsxs)(a.h2,{id:\\"message-template-best-practices\\",children:[(0,e.jsx)(a.a,{className:\\"anchor\\",href:\\"#message-template-best-practices\\",children:(0,e.jsx)(a.span,{className:\\"icon icon-link\\"})}),\\"Message Template Best Practices\\"]}),`\\n`,(0,e.jsxs)(a.ol,{children:[`\\n`,(0,e.jsxs)(a.li,{children:[`\\n`,(0,e.jsxs)(a.p,{children:[\\"Template message with the floating parameters will not be approved by WhatsApp, please surround the parameter with context/information so it is clear what variable will be filled in the parameter.\\",(0,e.jsx)(\\"br\\",{}),(0,e.jsx)(\\"br\\",{}),`\\nExample of floating parameter:`]}),`\\n`,(0,e.jsxs)(a.p,{children:[\\"\\\\u201CSelamat datang di Toko Sejahtera \\",(0,e.jsx)(a.code,{children:\\"{{1}}\\"}),\\"\\\\u201D\\",(0,e.jsx)(\\"br\\",{}),(0,e.jsx)(\\"br\\",{})]}),`\\n`,(0,e.jsxs)(a.p,{children:[\\"In this example, there is no clear information on what variable will be inserted in parameter \\",(0,e.jsx)(a.code,{children:\\"{{1}}\\"})]}),`\\n`,(0,e.jsx)(a.p,{children:\\"The CORRECT way to create the variable:\\"}),`\\n`,(0,e.jsxs)(a.p,{children:[\\"i. \\\\u201CNomor pesanan Anda: \\",(0,e.jsx)(a.code,{children:\\"{{2}}\\"}),\\"\\\\u201D\\"]}),`\\n`,(0,e.jsxs)(a.p,{children:[\\"ii. \\\\u201CBerikut total pesanan Anda \\",(0,e.jsx)(a.code,{children:\\"{{3}}\\"}),\\"\\\\u201D\\",(0,e.jsx)(\\"br\\",{}),(0,e.jsx)(\\"br\\",{})]}),`\\n`]}),`\\n`,(0,e.jsxs)(a.li,{children:[`\\n`,(0,e.jsx)(a.p,{children:\\"Template with spelling mistakes will not be accepted, example:\\"}),`\\n`,(0,e.jsx)(a.p,{children:\\"Instead of using two curly brackets, you mistakenly type the variable in one curly bracket\\"}),`\\n`,(0,e.jsx)(a.p,{children:\\"Example:\\"}),`\\n`,(0,e.jsxs)(a.p,{children:[\\"Correct: \\",(0,e.jsx)(a.code,{children:\\"{{2}}\\"}),\\", Wrong: \\",(0,e.jsx)(a.code,{children:\\"{2}\\"}),(0,e.jsx)(\\"br\\",{}),(0,e.jsx)(\\"br\\",{})]}),`\\n`,(0,e.jsx)(a.p,{children:\\"Please type the parameter based on sequenced numbers\\"}),`\\n`,(0,e.jsxs)(a.p,{children:[\\"Example: \\",(0,e.jsx)(a.code,{children:\\"{{1}}\\"}),\\", \\",(0,e.jsx)(a.code,{children:\\"{{2}}\\"}),\\", \\",(0,e.jsx)(a.code,{children:\\"{{3}}\\"}),(0,e.jsx)(\\"br\\",{}),(0,e.jsx)(\\"br\\",{})]}),`\\n`]}),`\\n`,(0,e.jsxs)(a.li,{children:[`\\n`,(0,e.jsx)(a.p,{children:\\"Template message contains potentially abusive/threatening content is not allowed:\\"}),`\\n`,(0,e.jsx)(a.p,{children:\\"a. Threaten customers with a course of legal action will be rejected\\"}),`\\n`,(0,e.jsx)(a.p,{children:\\"b. Threaten the customer if they don\\\\u2019t pay their loan will also be rejected\\"}),`\\n`]}),`\\n`,(0,e.jsxs)(a.li,{children:[`\\n`,(0,e.jsxs)(a.p,{children:[\\"Additional best practice guidelines are outlined \\",(0,e.jsx)(a.a,{href:\\"https://developers.facebook.com/docs/whatsapp/message-templates/guidelines\\",children:\\"here\\"}),\\".\\"]}),`\\n`]}),`\\n`]})]})}}var N=T;function l(n,t){throw new Error(\\"Expected \\"+(t?\\"component\\":\\"object\\")+\\" `\\"+n+\\"` to be defined: you likely forgot to import, pass, or provide it.\\")}return x(W);})();\\n;return Component;"},"_id":"business-dashboard/how-to/whatsapp-message-templates.mdx","_raw":{"sourceFilePath":"business-dashboard/how-to/whatsapp-message-templates.mdx","sourceFileName":"whatsapp-message-templates.mdx","sourceFileDir":"business-dashboard/how-to","contentType":"mdx","flattenedPath":"business-dashboard/how-to/whatsapp-message-templates"},"type":"BusinessDashboard","slug":["how-to","whatsapp-message-templates"],"excerpt":"\\n## What is a Message Template?\\n\\nWhatsApp Message Templates are specific message formats that your business can use to send out notifications, alerts, and customer care messages to people who have opted-in to receive WhatsApp messages. Before it can be sent to your audience using the broadcast feature in Kata"}');
;// CONCATENATED MODULE: ./.contentlayer/generated/BusinessDashboard/business-dashboard__introduction__about.mdx.json
const business_dashboard_introduction_about_mdx_namespaceObject = JSON.parse('{"id":"introduction-about","section":"Introduction","hiddenTitle":"About WhatsApp Business Dashboard","next":"get-started","body":{"raw":"\\n<ImageWrapper>\\n  <NextImage\\n    src=\\"/assets/images/products/business-dashboard/image-introduction-1.webp\\"\\n    alt=\\"Business-Dashboard Illustration\\"\\n    naturalHeight={852}\\n    naturalWidth={1408}\\n  />\\n</ImageWrapper>\\n\\n# About WhatsApp Business Dashboard\\n\\nWhatsApp Business Dashboard is a business tool to make it easy for you to get in touch with your customers on your WhatsApp channel. From registering your WhatsApp number to broadcasting your Message Templates, it’s as easy as point and click.\\n\\n### Main Features\\n\\n#### Template Message\\n\\nCreate and submit template messages to send out notifications, customer care, and promotional messages to people who have opted-in to receive WhatsApp messages.\\n\\n#### Broadcast\\n\\nSend an approved template message to a large number of audiences in a single time and within a few clicks.\\n\\n#### Analytics\\n\\nSee the performance of each of your broadcasts. View the data and learn from your past broadcast activities and credit usage to make future marketing decisions.\\n","code":"var Component=(()=>{var m=Object.create;var o=Object.defineProperty;var u=Object.getOwnPropertyDescriptor;var g=Object.getOwnPropertyNames;var b=Object.getPrototypeOf,f=Object.prototype.hasOwnProperty;var c=e=>o(e,\\"__esModule\\",{value:!0});var y=(e,s)=>()=>(s||e((s={exports:{}}).exports,s),s.exports),x=(e,s)=>{for(var t in s)o(e,t,{get:s[t],enumerable:!0})},d=(e,s,t,n)=>{if(s&&typeof s==\\"object\\"||typeof s==\\"function\\")for(let i of g(s))!f.call(e,i)&&(t||i!==\\"default\\")&&o(e,i,{get:()=>s[i],enumerable:!(n=u(s,i))||n.enumerable});return e},N=(e,s)=>d(c(o(e!=null?m(b(e)):{},\\"default\\",!s&&e&&e.__esModule?{get:()=>e.default,enumerable:!0}:{value:e,enumerable:!0})),e),k=(e=>(s,t)=>e&&e.get(s)||(t=d(c({}),s,1),e&&e.set(s,t),t))(typeof WeakMap!=\\"undefined\\"?new WeakMap:0);var l=y((M,h)=>{h.exports=_jsx_runtime});var j={};x(j,{default:()=>W,frontmatter:()=>w});var a=N(l()),w={id:\\"introduction-about\\",next:\\"get-started\\",section:\\"Introduction\\",hiddenTitle:\\"About WhatsApp Business Dashboard\\"};function A(e={}){let{wrapper:s}=e.components||{};return s?(0,a.jsx)(s,Object.assign({},e,{children:(0,a.jsx)(t,{})})):t();function t(){let n=Object.assign({h1:\\"h1\\",a:\\"a\\",span:\\"span\\",p:\\"p\\",h3:\\"h3\\",h4:\\"h4\\"},e.components),{ImageWrapper:i,NextImage:r}=n;return i||p(\\"ImageWrapper\\",!0),r||p(\\"NextImage\\",!0),(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(i,{children:(0,a.jsx)(r,{src:\\"/assets/images/products/business-dashboard/image-introduction-1.webp\\",alt:\\"Business-Dashboard Illustration\\",naturalHeight:852,naturalWidth:1408})}),`\\n`,(0,a.jsxs)(n.h1,{id:\\"about-whatsapp-business-dashboard\\",children:[(0,a.jsx)(n.a,{className:\\"anchor\\",href:\\"#about-whatsapp-business-dashboard\\",children:(0,a.jsx)(n.span,{className:\\"icon icon-link\\"})}),\\"About WhatsApp Business Dashboard\\"]}),`\\n`,(0,a.jsx)(n.p,{children:\\"WhatsApp Business Dashboard is a business tool to make it easy for you to get in touch with your customers on your WhatsApp channel. From registering your WhatsApp number to broadcasting your Message Templates, it\\\\u2019s as easy as point and click.\\"}),`\\n`,(0,a.jsxs)(n.h3,{id:\\"main-features\\",children:[(0,a.jsx)(n.a,{className:\\"anchor\\",href:\\"#main-features\\",children:(0,a.jsx)(n.span,{className:\\"icon icon-link\\"})}),\\"Main Features\\"]}),`\\n`,(0,a.jsxs)(n.h4,{id:\\"template-message\\",children:[(0,a.jsx)(n.a,{className:\\"anchor\\",href:\\"#template-message\\",children:(0,a.jsx)(n.span,{className:\\"icon icon-link\\"})}),\\"Template Message\\"]}),`\\n`,(0,a.jsx)(n.p,{children:\\"Create and submit template messages to send out notifications, customer care, and promotional messages to people who have opted-in to receive WhatsApp messages.\\"}),`\\n`,(0,a.jsxs)(n.h4,{id:\\"broadcast\\",children:[(0,a.jsx)(n.a,{className:\\"anchor\\",href:\\"#broadcast\\",children:(0,a.jsx)(n.span,{className:\\"icon icon-link\\"})}),\\"Broadcast\\"]}),`\\n`,(0,a.jsx)(n.p,{children:\\"Send an approved template message to a large number of audiences in a single time and within a few clicks.\\"}),`\\n`,(0,a.jsxs)(n.h4,{id:\\"analytics\\",children:[(0,a.jsx)(n.a,{className:\\"anchor\\",href:\\"#analytics\\",children:(0,a.jsx)(n.span,{className:\\"icon icon-link\\"})}),\\"Analytics\\"]}),`\\n`,(0,a.jsx)(n.p,{children:\\"See the performance of each of your broadcasts. View the data and learn from your past broadcast activities and credit usage to make future marketing decisions.\\"})]})}}var W=A;function p(e,s){throw new Error(\\"Expected \\"+(s?\\"component\\":\\"object\\")+\\" `\\"+e+\\"` to be defined: you likely forgot to import, pass, or provide it.\\")}return k(j);})();\\n;return Component;"},"_id":"business-dashboard/introduction/about.mdx","_raw":{"sourceFilePath":"business-dashboard/introduction/about.mdx","sourceFileName":"about.mdx","sourceFileDir":"business-dashboard/introduction","contentType":"mdx","flattenedPath":"business-dashboard/introduction/about"},"type":"BusinessDashboard","slug":["introduction","about"],"excerpt":"\\n\\n  \\n\\n\\n# About WhatsApp Business Dashboard\\n\\nWhatsApp Business Dashboard is a business tool to make it easy for you to get in touch with your customers on your WhatsApp channel"}');
;// CONCATENATED MODULE: ./.contentlayer/generated/BusinessDashboard/business-dashboard__release-notes__version.mdx.json
const business_dashboard_release_notes_version_mdx_namespaceObject = JSON.parse('{"id":"release-notes-version","section":"Release Notes","title":"Version","body":{"raw":"\\nThe latest news, updates, and changes on Business Dashboard\\n\\n## 1.8.1\\n\\n<ImageWrapper>\\n  <NextImage\\n    src=\\"/assets/images/products/business-dashboard/release-notes/1.8.1/1.8.1-illustration.webp\\"\\n    alt=\\"Business-Dashboard Illustration\\"\\n    naturalHeight={464}\\n    naturalWidth={1440}\\n  />\\n</ImageWrapper>\\n\\n### What’s been fixed 🛠\\n\\n- Drop the Virtual Account BCA in self-payment.\\n- Fixed the missing sample image issue when creating the Message Template with Media type.\\n- Fixed the missing Broadcast Analytics.\\n\\n<br />\\n\\n## 1.8.0\\n\\n<ImageWrapper>\\n  <NextImage\\n    src=\\"/assets/images/products/business-dashboard/release-notes/1.8.0/1.8.0-illustration.webp\\"\\n    alt=\\"Business-Dashboard Illustration\\"\\n    naturalHeight={464}\\n    naturalWidth={1440}\\n  />\\n</ImageWrapper>\\n\\n### What’s new ⭐ ️\\n\\n- Default Tax amount needs to change into 11% instead of 10% in top up credit.\\n- Default Tax amount needs to change into 11% instead of 10% in the payment method.\\n- Default Tax amount needs to change into 11% instead of 10% in order details.\\n- Default Tax amount needs to change into 11% instead of 10% in invoice.\\n- Default Tax amount is the percentage of Total amount - discount in top up credit.\\n- Default Tax amount is the percentage of Total amount - discount in payment method.\\n- Default Tax amount is the percentage of Total amount - discount in order details.\\n- Default Tax amount is the percentage of Total amount - discount in invoice.\\n\\n<br />\\n\\n## 1.7.0\\n\\n<ImageWrapper>\\n  <NextImage\\n    src=\\"/assets/images/products/business-dashboard/release-notes/1.7.0/1.7.0-illustration.webp\\"\\n    alt=\\"Business-Dashboard Illustration\\"\\n    naturalHeight={464}\\n    naturalWidth={1440}\\n  />\\n</ImageWrapper>\\n\\n### What’s new ⭐ ️\\n\\n- Whatsapp Dashboard docs: new pricing conversation based pricing.\\n- Whatsapp Dashboard new pricing notifications: Banner, Notification, and Email.\\n\\n<br />\\n\\n## 1.6.1\\n\\n<ImageWrapper>\\n  <NextImage\\n    src=\\"/assets/images/products/business-dashboard/release-notes/1.6.1/1.6.1-illustration.webp\\"\\n    alt=\\"Business-Dashboard Illustration\\"\\n    naturalHeight={464}\\n    naturalWidth={1440}\\n  />\\n</ImageWrapper>\\n\\n### What’s new ⭐ ️\\n\\n#### Error explanation on broadcast report\\n\\nWhen a broadcast fails for several phone numbers then the Client will be able to see the explanation on why the failure occurred in the broadcast report\\n\\n### What’s been fixed 🛠\\n\\n#### Duplicate number on broadcast report\\n\\nUpon sending a broadcast, when the CSV contains the same number more than once then the report will reflect the actual amount of broadcast message received by the same phone number.\\n\\n<br />\\n\\n## 1.6.0\\n\\n<ImageWrapper>\\n  <NextImage\\n    src=\\"/assets/images/products/business-dashboard/release-notes/1.6.0/1.6.0-illustration.webp\\"\\n    alt=\\"Business-Dashboard Illustration\\"\\n    naturalHeight={464}\\n    naturalWidth={1440}\\n  />\\n</ImageWrapper>\\n\\n### What’s new ⭐ ️\\n\\n#### Releasing new features\\n\\n#### New Template Message Submission\\n\\n- Header with Video\\n  Now users can choose “Video” as header type and upload the video sample as a part of new template message submission.\\n- Front End Enhancement\\n  We changed the UI for new template message submission to accommodate expanded features for this step.\\n\\n#### Buttons\\n\\n- Call To Action\\n  Clients will be able to send messages with Call to Action features which allows their customers to call a phone number and visit a website.\\n- Quick Reply\\n  Clients will be able to send messages with the Quick Reply button which allows their customers to return a simple text message.\\n- CSV Guard\\n  Error notification for incorrect CSV format.\\n  - Clients will not be able to submit CSV in which the number of parameters are not incompatible with parameters set when creating a template message.\\n  - Clients will not be able to submit CSV when the headers are not incompatible with the ones set when creating a template message.\\n  - Clients will not be able to submit CSV when the headers are not incompatible with the ones set when creating a template message.\\n\\n### What’s been fixed 🛠\\n\\n- New automatic sign up process with embedded sign up.\\n- New self payment feature which enables credit message top up on business dashboard.\\n- Fixed upload image flow when creating a new template message with image.\\n\\n<br />\\n\\n## 1.5.7\\n\\n<ImageWrapper>\\n  <NextImage\\n    src=\\"/assets/images/products/business-dashboard/release-notes/1.5.7/1.5.7-illustration.webp\\"\\n    alt=\\"Business-Dashboard Illustration\\"\\n    naturalHeight={464}\\n    naturalWidth={1440}\\n  />\\n</ImageWrapper>\\n\\n### What’s been fixed 🛠\\n\\nReleasing a quick fix when broadcast to the same number multiple times at the same time reflected as the number of messages sent instead of one number.\\n\\n- Error message details in broadcast report\\n  Clients will be able to see the error message details when the broadcast failed.\\n- Duplicate number handling on CSV and status details\\n  When a broadcast is sent to the same number multiple times at the same time then it will be counted as such instead of just once.\\n\\n<br />\\n\\n## 1.5.6\\n\\n<ImageWrapper>\\n  <NextImage\\n    src=\\"/assets/images/products/business-dashboard/release-notes/1.5.6/1.5.6-illustration.webp\\"\\n    alt=\\"Business-Dashboard Illustration\\"\\n    naturalHeight={464}\\n    naturalWidth={1440}\\n  />\\n</ImageWrapper>\\n\\n### What’s New ⭐️\\n\\nThe guidance about the WhatsApp Business Dashboard is currently at Kata Docs. It is easier and simpler for you to follow a step-by-step guide to join us and explore our features. Learn more about [WhatsApp Business Dashboard.](/business-dashboard/introduction)\\n\\nWhat will you find out 🔍\\n\\n- Start your journey in Whatsapp Business Dashboard in [Get Started with WhatsApp Business Dashboard](/business-dashboard/get-started).\\n- Find out more about [How to Use Trial Experience](/business-dashboard/how-to-use-trial).\\n- Guide to topup WhatsApp Credit and Credit history in [Manage Your Broadcast Credit.](/business-dashboard/manage-wa-credit)\\n- Understand more about message templates in [Manage Your WhatsApp Message Templates](/business-dashboard/whatsapp-message-templates).\\n- Know how to broadcast template messages from the WhatsApp Business Dashboard in [Manage Your Broadcast.](/business-dashboard/manage-broadcast)\\n\\nLearn more about WhatsApp business dashboard insight at [How to Use Analytics](/business-dashboard/use-analytics).\\n\\n<br />\\n\\n## 1.5.5\\n\\n<ImageWrapper>\\n  <NextImage\\n    src=\\"/assets/images/products/business-dashboard/release-notes/1.5.5/1.5.5-illustration.webp\\"\\n    alt=\\"Business-Dashboard Illustration\\"\\n    naturalHeight={464}\\n    naturalWidth={1440}\\n  />\\n</ImageWrapper>\\n\\n### What’s New ⭐️\\n\\nReleasing new features:\\n\\n- WhatsApp Embedded Sign Up\\n  Allows self sign up process for WhatsApp Business Account usage on business dashboard which will enable registration to be completed within minutes instead of days.\\n- Self Payment\\n  Allows registered users to do payment on business dashboard instead of manual invoicing via account managers.\\n- Upload Image\\n  Allow registered users to attach images when creating a new template message.\\n\\n### What’s been fixed 🛠\\n\\n- New automatic sign up process with embedded sign up.\\n- New self payment feature which enables credit message top up on business dashboard.\\n- Fixed upload image flow when creating a new template message with image.\\n\\n<br />\\n\\n## 1.5.4\\n\\n<ImageWrapper>\\n  <NextImage\\n    src=\\"/assets/images/products/business-dashboard/release-notes/1.5.4/1.5.4-illustration.webp\\"\\n    alt=\\"Business-Dashboard Illustration\\"\\n    naturalHeight={464}\\n    naturalWidth={1440}\\n  />\\n</ImageWrapper>\\n\\n### What’s been fixed 🛠\\n\\nQuick bug fix for ongoing issues.\\n\\n- Fixed “500 error” when uploading a new profile picture for WhatsApp number. Error message was message: \\"File required for file validation\\"\\n- Fixed Bad Request error when left the webhook URL field blank in the phone number business dashboard.\\n","code":"var Component=(()=>{var m=Object.create;var l=Object.defineProperty;var p=Object.getOwnPropertyDescriptor;var b=Object.getOwnPropertyNames;var w=Object.getPrototypeOf,f=Object.prototype.hasOwnProperty;var o=a=>l(a,\\"__esModule\\",{value:!0});var g=(a,s)=>()=>(s||a((s={exports:{}}).exports,s),s.exports),N=(a,s)=>{for(var t in s)l(a,t,{get:s[t],enumerable:!0})},h=(a,s,t,n)=>{if(s&&typeof s==\\"object\\"||typeof s==\\"function\\")for(let i of b(s))!f.call(a,i)&&(t||i!==\\"default\\")&&l(a,i,{get:()=>s[i],enumerable:!(n=p(s,i))||n.enumerable});return a},x=(a,s)=>h(o(l(a!=null?m(w(a)):{},\\"default\\",!s&&a&&a.__esModule?{get:()=>a.default,enumerable:!0}:{value:a,enumerable:!0})),a),W=(a=>(s,t)=>a&&a.get(s)||(t=h(o({}),s,1),a&&a.set(s,t),t))(typeof WeakMap!=\\"undefined\\"?new WeakMap:0);var d=g((A,c)=>{c.exports=_jsx_runtime});var B={};N(B,{default:()=>y,frontmatter:()=>k});var e=x(d()),k={id:\\"release-notes-version\\",title:\\"Version\\",section:\\"Release Notes\\"};function D(a={}){let{wrapper:s}=a.components||{};return s?(0,e.jsx)(s,Object.assign({},a,{children:(0,e.jsx)(t,{})})):t();function t(){let n=Object.assign({p:\\"p\\",h2:\\"h2\\",a:\\"a\\",span:\\"span\\",h3:\\"h3\\",ul:\\"ul\\",li:\\"li\\",h4:\\"h4\\"},a.components),{ImageWrapper:i,NextImage:r}=n;return i||u(\\"ImageWrapper\\",!0),r||u(\\"NextImage\\",!0),(0,e.jsxs)(e.Fragment,{children:[(0,e.jsx)(n.p,{children:\\"The latest news, updates, and changes on Business Dashboard\\"}),`\\n`,(0,e.jsxs)(n.h2,{id:\\"181\\",children:[(0,e.jsx)(n.a,{className:\\"anchor\\",href:\\"#181\\",children:(0,e.jsx)(n.span,{className:\\"icon icon-link\\"})}),\\"1.8.1\\"]}),`\\n`,(0,e.jsx)(i,{children:(0,e.jsx)(r,{src:\\"/assets/images/products/business-dashboard/release-notes/1.8.1/1.8.1-illustration.webp\\",alt:\\"Business-Dashboard Illustration\\",naturalHeight:464,naturalWidth:1440})}),`\\n`,(0,e.jsxs)(n.h3,{id:\\"whats-been-fixed-\\",children:[(0,e.jsx)(n.a,{className:\\"anchor\\",href:\\"#whats-been-fixed-\\",children:(0,e.jsx)(n.span,{className:\\"icon icon-link\\"})}),\\"What\\\\u2019s been fixed \\\\u{1F6E0}\\"]}),`\\n`,(0,e.jsxs)(n.ul,{children:[`\\n`,(0,e.jsx)(n.li,{children:\\"Drop the Virtual Account BCA in self-payment.\\"}),`\\n`,(0,e.jsx)(n.li,{children:\\"Fixed the missing sample image issue when creating the Message Template with Media type.\\"}),`\\n`,(0,e.jsx)(n.li,{children:\\"Fixed the missing Broadcast Analytics.\\"}),`\\n`]}),`\\n`,(0,e.jsx)(\\"br\\",{}),`\\n`,(0,e.jsxs)(n.h2,{id:\\"180\\",children:[(0,e.jsx)(n.a,{className:\\"anchor\\",href:\\"#180\\",children:(0,e.jsx)(n.span,{className:\\"icon icon-link\\"})}),\\"1.8.0\\"]}),`\\n`,(0,e.jsx)(i,{children:(0,e.jsx)(r,{src:\\"/assets/images/products/business-dashboard/release-notes/1.8.0/1.8.0-illustration.webp\\",alt:\\"Business-Dashboard Illustration\\",naturalHeight:464,naturalWidth:1440})}),`\\n`,(0,e.jsxs)(n.h3,{id:\\"whats-new--\\\\uFE0F\\",children:[(0,e.jsx)(n.a,{className:\\"anchor\\",href:\\"#whats-new--\\\\uFE0F\\",children:(0,e.jsx)(n.span,{className:\\"icon icon-link\\"})}),\\"What\\\\u2019s new \\\\u2B50 \\\\uFE0F\\"]}),`\\n`,(0,e.jsxs)(n.ul,{children:[`\\n`,(0,e.jsx)(n.li,{children:\\"Default Tax amount needs to change into 11% instead of 10% in top up credit.\\"}),`\\n`,(0,e.jsx)(n.li,{children:\\"Default Tax amount needs to change into 11% instead of 10% in the payment method.\\"}),`\\n`,(0,e.jsx)(n.li,{children:\\"Default Tax amount needs to change into 11% instead of 10% in order details.\\"}),`\\n`,(0,e.jsx)(n.li,{children:\\"Default Tax amount needs to change into 11% instead of 10% in invoice.\\"}),`\\n`,(0,e.jsx)(n.li,{children:\\"Default Tax amount is the percentage of Total amount - discount in top up credit.\\"}),`\\n`,(0,e.jsx)(n.li,{children:\\"Default Tax amount is the percentage of Total amount - discount in payment method.\\"}),`\\n`,(0,e.jsx)(n.li,{children:\\"Default Tax amount is the percentage of Total amount - discount in order details.\\"}),`\\n`,(0,e.jsx)(n.li,{children:\\"Default Tax amount is the percentage of Total amount - discount in invoice.\\"}),`\\n`]}),`\\n`,(0,e.jsx)(\\"br\\",{}),`\\n`,(0,e.jsxs)(n.h2,{id:\\"170\\",children:[(0,e.jsx)(n.a,{className:\\"anchor\\",href:\\"#170\\",children:(0,e.jsx)(n.span,{className:\\"icon icon-link\\"})}),\\"1.7.0\\"]}),`\\n`,(0,e.jsx)(i,{children:(0,e.jsx)(r,{src:\\"/assets/images/products/business-dashboard/release-notes/1.7.0/1.7.0-illustration.webp\\",alt:\\"Business-Dashboard Illustration\\",naturalHeight:464,naturalWidth:1440})}),`\\n`,(0,e.jsxs)(n.h3,{id:\\"whats-new--\\\\uFE0F-1\\",children:[(0,e.jsx)(n.a,{className:\\"anchor\\",href:\\"#whats-new--\\\\uFE0F-1\\",children:(0,e.jsx)(n.span,{className:\\"icon icon-link\\"})}),\\"What\\\\u2019s new \\\\u2B50 \\\\uFE0F\\"]}),`\\n`,(0,e.jsxs)(n.ul,{children:[`\\n`,(0,e.jsx)(n.li,{children:\\"Whatsapp Dashboard docs: new pricing conversation based pricing.\\"}),`\\n`,(0,e.jsx)(n.li,{children:\\"Whatsapp Dashboard new pricing notifications: Banner, Notification, and Email.\\"}),`\\n`]}),`\\n`,(0,e.jsx)(\\"br\\",{}),`\\n`,(0,e.jsxs)(n.h2,{id:\\"161\\",children:[(0,e.jsx)(n.a,{className:\\"anchor\\",href:\\"#161\\",children:(0,e.jsx)(n.span,{className:\\"icon icon-link\\"})}),\\"1.6.1\\"]}),`\\n`,(0,e.jsx)(i,{children:(0,e.jsx)(r,{src:\\"/assets/images/products/business-dashboard/release-notes/1.6.1/1.6.1-illustration.webp\\",alt:\\"Business-Dashboard Illustration\\",naturalHeight:464,naturalWidth:1440})}),`\\n`,(0,e.jsxs)(n.h3,{id:\\"whats-new--\\\\uFE0F-2\\",children:[(0,e.jsx)(n.a,{className:\\"anchor\\",href:\\"#whats-new--\\\\uFE0F-2\\",children:(0,e.jsx)(n.span,{className:\\"icon icon-link\\"})}),\\"What\\\\u2019s new \\\\u2B50 \\\\uFE0F\\"]}),`\\n`,(0,e.jsxs)(n.h4,{id:\\"error-explanation-on-broadcast-report\\",children:[(0,e.jsx)(n.a,{className:\\"anchor\\",href:\\"#error-explanation-on-broadcast-report\\",children:(0,e.jsx)(n.span,{className:\\"icon icon-link\\"})}),\\"Error explanation on broadcast report\\"]}),`\\n`,(0,e.jsx)(n.p,{children:\\"When a broadcast fails for several phone numbers then the Client will be able to see the explanation on why the failure occurred in the broadcast report\\"}),`\\n`,(0,e.jsxs)(n.h3,{id:\\"whats-been-fixed--1\\",children:[(0,e.jsx)(n.a,{className:\\"anchor\\",href:\\"#whats-been-fixed--1\\",children:(0,e.jsx)(n.span,{className:\\"icon icon-link\\"})}),\\"What\\\\u2019s been fixed \\\\u{1F6E0}\\"]}),`\\n`,(0,e.jsxs)(n.h4,{id:\\"duplicate-number-on-broadcast-report\\",children:[(0,e.jsx)(n.a,{className:\\"anchor\\",href:\\"#duplicate-number-on-broadcast-report\\",children:(0,e.jsx)(n.span,{className:\\"icon icon-link\\"})}),\\"Duplicate number on broadcast report\\"]}),`\\n`,(0,e.jsx)(n.p,{children:\\"Upon sending a broadcast, when the CSV contains the same number more than once then the report will reflect the actual amount of broadcast message received by the same phone number.\\"}),`\\n`,(0,e.jsx)(\\"br\\",{}),`\\n`,(0,e.jsxs)(n.h2,{id:\\"160\\",children:[(0,e.jsx)(n.a,{className:\\"anchor\\",href:\\"#160\\",children:(0,e.jsx)(n.span,{className:\\"icon icon-link\\"})}),\\"1.6.0\\"]}),`\\n`,(0,e.jsx)(i,{children:(0,e.jsx)(r,{src:\\"/assets/images/products/business-dashboard/release-notes/1.6.0/1.6.0-illustration.webp\\",alt:\\"Business-Dashboard Illustration\\",naturalHeight:464,naturalWidth:1440})}),`\\n`,(0,e.jsxs)(n.h3,{id:\\"whats-new--\\\\uFE0F-3\\",children:[(0,e.jsx)(n.a,{className:\\"anchor\\",href:\\"#whats-new--\\\\uFE0F-3\\",children:(0,e.jsx)(n.span,{className:\\"icon icon-link\\"})}),\\"What\\\\u2019s new \\\\u2B50 \\\\uFE0F\\"]}),`\\n`,(0,e.jsxs)(n.h4,{id:\\"releasing-new-features\\",children:[(0,e.jsx)(n.a,{className:\\"anchor\\",href:\\"#releasing-new-features\\",children:(0,e.jsx)(n.span,{className:\\"icon icon-link\\"})}),\\"Releasing new features\\"]}),`\\n`,(0,e.jsxs)(n.h4,{id:\\"new-template-message-submission\\",children:[(0,e.jsx)(n.a,{className:\\"anchor\\",href:\\"#new-template-message-submission\\",children:(0,e.jsx)(n.span,{className:\\"icon icon-link\\"})}),\\"New Template Message Submission\\"]}),`\\n`,(0,e.jsxs)(n.ul,{children:[`\\n`,(0,e.jsx)(n.li,{children:`Header with Video\\nNow users can choose \\\\u201CVideo\\\\u201D as header type and upload the video sample as a part of new template message submission.`}),`\\n`,(0,e.jsx)(n.li,{children:`Front End Enhancement\\nWe changed the UI for new template message submission to accommodate expanded features for this step.`}),`\\n`]}),`\\n`,(0,e.jsxs)(n.h4,{id:\\"buttons\\",children:[(0,e.jsx)(n.a,{className:\\"anchor\\",href:\\"#buttons\\",children:(0,e.jsx)(n.span,{className:\\"icon icon-link\\"})}),\\"Buttons\\"]}),`\\n`,(0,e.jsxs)(n.ul,{children:[`\\n`,(0,e.jsx)(n.li,{children:`Call To Action\\nClients will be able to send messages with Call to Action features which allows their customers to call a phone number and visit a website.`}),`\\n`,(0,e.jsx)(n.li,{children:`Quick Reply\\nClients will be able to send messages with the Quick Reply button which allows their customers to return a simple text message.`}),`\\n`,(0,e.jsxs)(n.li,{children:[`CSV Guard\\nError notification for incorrect CSV format.`,`\\n`,(0,e.jsxs)(n.ul,{children:[`\\n`,(0,e.jsx)(n.li,{children:\\"Clients will not be able to submit CSV in which the number of parameters are not incompatible with parameters set when creating a template message.\\"}),`\\n`,(0,e.jsx)(n.li,{children:\\"Clients will not be able to submit CSV when the headers are not incompatible with the ones set when creating a template message.\\"}),`\\n`,(0,e.jsx)(n.li,{children:\\"Clients will not be able to submit CSV when the headers are not incompatible with the ones set when creating a template message.\\"}),`\\n`]}),`\\n`]}),`\\n`]}),`\\n`,(0,e.jsxs)(n.h3,{id:\\"whats-been-fixed--2\\",children:[(0,e.jsx)(n.a,{className:\\"anchor\\",href:\\"#whats-been-fixed--2\\",children:(0,e.jsx)(n.span,{className:\\"icon icon-link\\"})}),\\"What\\\\u2019s been fixed \\\\u{1F6E0}\\"]}),`\\n`,(0,e.jsxs)(n.ul,{children:[`\\n`,(0,e.jsx)(n.li,{children:\\"New automatic sign up process with embedded sign up.\\"}),`\\n`,(0,e.jsx)(n.li,{children:\\"New self payment feature which enables credit message top up on business dashboard.\\"}),`\\n`,(0,e.jsx)(n.li,{children:\\"Fixed upload image flow when creating a new template message with image.\\"}),`\\n`]}),`\\n`,(0,e.jsx)(\\"br\\",{}),`\\n`,(0,e.jsxs)(n.h2,{id:\\"157\\",children:[(0,e.jsx)(n.a,{className:\\"anchor\\",href:\\"#157\\",children:(0,e.jsx)(n.span,{className:\\"icon icon-link\\"})}),\\"1.5.7\\"]}),`\\n`,(0,e.jsx)(i,{children:(0,e.jsx)(r,{src:\\"/assets/images/products/business-dashboard/release-notes/1.5.7/1.5.7-illustration.webp\\",alt:\\"Business-Dashboard Illustration\\",naturalHeight:464,naturalWidth:1440})}),`\\n`,(0,e.jsxs)(n.h3,{id:\\"whats-been-fixed--3\\",children:[(0,e.jsx)(n.a,{className:\\"anchor\\",href:\\"#whats-been-fixed--3\\",children:(0,e.jsx)(n.span,{className:\\"icon icon-link\\"})}),\\"What\\\\u2019s been fixed \\\\u{1F6E0}\\"]}),`\\n`,(0,e.jsx)(n.p,{children:\\"Releasing a quick fix when broadcast to the same number multiple times at the same time reflected as the number of messages sent instead of one number.\\"}),`\\n`,(0,e.jsxs)(n.ul,{children:[`\\n`,(0,e.jsx)(n.li,{children:`Error message details in broadcast report\\nClients will be able to see the error message details when the broadcast failed.`}),`\\n`,(0,e.jsx)(n.li,{children:`Duplicate number handling on CSV and status details\\nWhen a broadcast is sent to the same number multiple times at the same time then it will be counted as such instead of just once.`}),`\\n`]}),`\\n`,(0,e.jsx)(\\"br\\",{}),`\\n`,(0,e.jsxs)(n.h2,{id:\\"156\\",children:[(0,e.jsx)(n.a,{className:\\"anchor\\",href:\\"#156\\",children:(0,e.jsx)(n.span,{className:\\"icon icon-link\\"})}),\\"1.5.6\\"]}),`\\n`,(0,e.jsx)(i,{children:(0,e.jsx)(r,{src:\\"/assets/images/products/business-dashboard/release-notes/1.5.6/1.5.6-illustration.webp\\",alt:\\"Business-Dashboard Illustration\\",naturalHeight:464,naturalWidth:1440})}),`\\n`,(0,e.jsxs)(n.h3,{id:\\"whats-new-\\\\uFE0F\\",children:[(0,e.jsx)(n.a,{className:\\"anchor\\",href:\\"#whats-new-\\\\uFE0F\\",children:(0,e.jsx)(n.span,{className:\\"icon icon-link\\"})}),\\"What\\\\u2019s New \\\\u2B50\\\\uFE0F\\"]}),`\\n`,(0,e.jsxs)(n.p,{children:[\\"The guidance about the WhatsApp Business Dashboard is currently at Kata Docs. It is easier and simpler for you to follow a step-by-step guide to join us and explore our features. Learn more about \\",(0,e.jsx)(n.a,{href:\\"/business-dashboard/introduction\\",children:\\"WhatsApp Business Dashboard.\\"})]}),`\\n`,(0,e.jsx)(n.p,{children:\\"What will you find out \\\\u{1F50D}\\"}),`\\n`,(0,e.jsxs)(n.ul,{children:[`\\n`,(0,e.jsxs)(n.li,{children:[\\"Start your journey in Whatsapp Business Dashboard in \\",(0,e.jsx)(n.a,{href:\\"/business-dashboard/get-started\\",children:\\"Get Started with WhatsApp Business Dashboard\\"}),\\".\\"]}),`\\n`,(0,e.jsxs)(n.li,{children:[\\"Find out more about \\",(0,e.jsx)(n.a,{href:\\"/business-dashboard/how-to-use-trial\\",children:\\"How to Use Trial Experience\\"}),\\".\\"]}),`\\n`,(0,e.jsxs)(n.li,{children:[\\"Guide to topup WhatsApp Credit and Credit history in \\",(0,e.jsx)(n.a,{href:\\"/business-dashboard/manage-wa-credit\\",children:\\"Manage Your Broadcast Credit.\\"})]}),`\\n`,(0,e.jsxs)(n.li,{children:[\\"Understand more about message templates in \\",(0,e.jsx)(n.a,{href:\\"/business-dashboard/whatsapp-message-templates\\",children:\\"Manage Your WhatsApp Message Templates\\"}),\\".\\"]}),`\\n`,(0,e.jsxs)(n.li,{children:[\\"Know how to broadcast template messages from the WhatsApp Business Dashboard in \\",(0,e.jsx)(n.a,{href:\\"/business-dashboard/manage-broadcast\\",children:\\"Manage Your Broadcast.\\"})]}),`\\n`]}),`\\n`,(0,e.jsxs)(n.p,{children:[\\"Learn more about WhatsApp business dashboard insight at \\",(0,e.jsx)(n.a,{href:\\"/business-dashboard/use-analytics\\",children:\\"How to Use Analytics\\"}),\\".\\"]}),`\\n`,(0,e.jsx)(\\"br\\",{}),`\\n`,(0,e.jsxs)(n.h2,{id:\\"155\\",children:[(0,e.jsx)(n.a,{className:\\"anchor\\",href:\\"#155\\",children:(0,e.jsx)(n.span,{className:\\"icon icon-link\\"})}),\\"1.5.5\\"]}),`\\n`,(0,e.jsx)(i,{children:(0,e.jsx)(r,{src:\\"/assets/images/products/business-dashboard/release-notes/1.5.5/1.5.5-illustration.webp\\",alt:\\"Business-Dashboard Illustration\\",naturalHeight:464,naturalWidth:1440})}),`\\n`,(0,e.jsxs)(n.h3,{id:\\"whats-new-\\\\uFE0F-1\\",children:[(0,e.jsx)(n.a,{className:\\"anchor\\",href:\\"#whats-new-\\\\uFE0F-1\\",children:(0,e.jsx)(n.span,{className:\\"icon icon-link\\"})}),\\"What\\\\u2019s New \\\\u2B50\\\\uFE0F\\"]}),`\\n`,(0,e.jsx)(n.p,{children:\\"Releasing new features:\\"}),`\\n`,(0,e.jsxs)(n.ul,{children:[`\\n`,(0,e.jsx)(n.li,{children:`WhatsApp Embedded Sign Up\\nAllows self sign up process for WhatsApp Business Account usage on business dashboard which will enable registration to be completed within minutes instead of days.`}),`\\n`,(0,e.jsx)(n.li,{children:`Self Payment\\nAllows registered users to do payment on business dashboard instead of manual invoicing via account managers.`}),`\\n`,(0,e.jsx)(n.li,{children:`Upload Image\\nAllow registered users to attach images when creating a new template message.`}),`\\n`]}),`\\n`,(0,e.jsxs)(n.h3,{id:\\"whats-been-fixed--4\\",children:[(0,e.jsx)(n.a,{className:\\"anchor\\",href:\\"#whats-been-fixed--4\\",children:(0,e.jsx)(n.span,{className:\\"icon icon-link\\"})}),\\"What\\\\u2019s been fixed \\\\u{1F6E0}\\"]}),`\\n`,(0,e.jsxs)(n.ul,{children:[`\\n`,(0,e.jsx)(n.li,{children:\\"New automatic sign up process with embedded sign up.\\"}),`\\n`,(0,e.jsx)(n.li,{children:\\"New self payment feature which enables credit message top up on business dashboard.\\"}),`\\n`,(0,e.jsx)(n.li,{children:\\"Fixed upload image flow when creating a new template message with image.\\"}),`\\n`]}),`\\n`,(0,e.jsx)(\\"br\\",{}),`\\n`,(0,e.jsxs)(n.h2,{id:\\"154\\",children:[(0,e.jsx)(n.a,{className:\\"anchor\\",href:\\"#154\\",children:(0,e.jsx)(n.span,{className:\\"icon icon-link\\"})}),\\"1.5.4\\"]}),`\\n`,(0,e.jsx)(i,{children:(0,e.jsx)(r,{src:\\"/assets/images/products/business-dashboard/release-notes/1.5.4/1.5.4-illustration.webp\\",alt:\\"Business-Dashboard Illustration\\",naturalHeight:464,naturalWidth:1440})}),`\\n`,(0,e.jsxs)(n.h3,{id:\\"whats-been-fixed--5\\",children:[(0,e.jsx)(n.a,{className:\\"anchor\\",href:\\"#whats-been-fixed--5\\",children:(0,e.jsx)(n.span,{className:\\"icon icon-link\\"})}),\\"What\\\\u2019s been fixed \\\\u{1F6E0}\\"]}),`\\n`,(0,e.jsx)(n.p,{children:\\"Quick bug fix for ongoing issues.\\"}),`\\n`,(0,e.jsxs)(n.ul,{children:[`\\n`,(0,e.jsx)(n.li,{children:\'Fixed \\\\u201C500 error\\\\u201D when uploading a new profile picture for WhatsApp number. Error message was message: \\"File required for file validation\\"\'}),`\\n`,(0,e.jsx)(n.li,{children:\\"Fixed Bad Request error when left the webhook URL field blank in the phone number business dashboard.\\"}),`\\n`]})]})}}var y=D;function u(a,s){throw new Error(\\"Expected \\"+(s?\\"component\\":\\"object\\")+\\" `\\"+a+\\"` to be defined: you likely forgot to import, pass, or provide it.\\")}return W(B);})();\\n;return Component;"},"_id":"business-dashboard/release-notes/version.mdx","_raw":{"sourceFilePath":"business-dashboard/release-notes/version.mdx","sourceFileName":"version.mdx","sourceFileDir":"business-dashboard/release-notes","contentType":"mdx","flattenedPath":"business-dashboard/release-notes/version"},"type":"BusinessDashboard","slug":["release-notes","version"],"excerpt":"\\nThe latest news, updates, and changes on Business Dashboard\\n\\n## 1.8"}');
;// CONCATENATED MODULE: ./.contentlayer/generated/allBusinessDashboards.mjs
// NOTE This file is auto-generated by the Contentlayer CLI










const allBusinessDashboards = [
    business_dashboard_how_to_conversation_based_pricing_mdx_namespaceObject,
    business_dashboard_how_to_get_started_mdx_namespaceObject,
    business_dashboard_how_to_how_to_register_mdx_namespaceObject,
    business_dashboard_how_to_how_to_use_trial_mdx_namespaceObject,
    business_dashboard_how_to_manage_broadcast_mdx_namespaceObject,
    business_dashboard_how_to_manage_wa_credit_mdx_namespaceObject,
    business_dashboard_how_to_use_analytics_mdx_namespaceObject,
    business_dashboard_how_to_whatsapp_message_templates_mdx_namespaceObject,
    business_dashboard_introduction_about_mdx_namespaceObject,
    business_dashboard_release_notes_version_mdx_namespaceObject
];


/***/ }),

/***/ 7384:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {


// EXPORTS
__webpack_require__.d(__webpack_exports__, {
  "x": () => (/* binding */ allKataOmnichats)
});

;// CONCATENATED MODULE: ./.contentlayer/generated/KataOmnichat/kata-omnichat__before-you-start__prepare-your-instagram-business-account.mdx.json
const kata_omnichat_before_you_start_prepare_your_instagram_business_account_mdx_namespaceObject = JSON.parse('{"id":"prepare-your-instagram-business-account","section":"Before You Start","title":"Prepare your Instagram Business account","prev":"benefits-with-kata-omnichat","next":"prepare-your-waba-account","body":{"raw":"\\n1. After creating an account in Instagram, go to your **Profile**\\n2. Click the bar icon in the top right of your profile account, then go to **Settings > Account**\\n3. Scroll down to the bottom of the Account page and click **Switch to Professional Account**. Following the steps to switch the account by clicking **Continue** button\\n\\n<FigureImage\\n  caption={{ title: \'Figure 1\', description: `Instagram Account Setting` }}\\n  src=\\"/assets/images/products/kata-omnichat/image1.webp\\"\\n  alt=\\"Kata Omnichat\\"\\n  naturalHeight={1600}\\n  naturalWidth={739}\\n/>\\n\\n4. Choose **Categories** of your business account as listed. You can also switch on the categories into **“Display on Profile”**\\n\\n<FigureImage\\n  caption={{ title: \'Figure 2\', description: `Business Account Categories` }}\\n  src=\\"/assets/images/products/kata-omnichat/image2.webp\\"\\n  alt=\\"Kata Omnichat\\"\\n  naturalHeight={1600}\\n  naturalWidth={739}\\n/>\\n\\n5. Choose the business type, whether a **Business** or a **Creator**\\n\\n<FigureImage\\n  caption={{ title: \'Figure 3\', description: `Choose your business type` }}\\n  src=\\"/assets/images/products/kata-omnichat/image3.webp\\"\\n  alt=\\"Kata Omnichat\\"\\n  naturalHeight={1600}\\n  naturalWidth={739}\\n/>\\n\\n6. Fulfill your business contact info, contains email, phone number and address (address is optional)\\n7. The next step is to connect to your Facebook Page. The Instagram system will automatically show the pop up of connecting to your Facebook. You can click **Continue** or **Login** to Facebook from the first step. Following the instructions by clicking **Continue** button\\n8. Click the Add **[your Instagram account name]** button to add your Instagram business account to the Account Center. Finish the setup of connecting to Account Center by clicking **“Yes, Finish setup”**\\n9. Choose your Facebook Page that wants to be connected to your Instagram business account or click **Create a new Facebook Page**. If you click **Create a new Facebook page**, you have to fill in the **Page Name** and **Page Category**. The last step is to click the **Create** button after you fill in. If your chose any Facebook Page in the list, then you just need to click **Next** to finish the process\\n\\n<FigureImage\\n  caption={{ title: \'Figure 4\', description: `Connect your facebook page` }}\\n  src=\\"/assets/images/products/kata-omnichat/image4.webp\\"\\n  alt=\\"Kata Omnichat\\"\\n  naturalHeight={1600}\\n  naturalWidth={739}\\n/>\\n\\n10. Following the 4 steps to set up your professional account: Complete your profile, get inspired by following some related accounts, grow your audience by inviting your relatives, share 3 new contents to view insights and click to explore professional tools to see insights and promotions\\n\\n<FigureImage\\n  caption={{ title: \'Figure 5\', description: `Professional Account Set Up` }}\\n  src=\\"/assets/images/products/kata-omnichat/image5.webp\\"\\n  alt=\\"Kata Omnichat\\"\\n  naturalHeight={1600}\\n  naturalWidth={739}\\n/>\\n\\n11. After setting up your business account, go to **Settings > Privacy > Messages**. Scroll down to the bottom of the page and find **Allow access to messages**. Switch on this to allow the access for any messages\\n\\n<FigureImage\\n  caption={{ title: \'Figure 6\', description: `Message Controls Setting` }}\\n  src=\\"/assets/images/products/kata-omnichat/image6.webp\\"\\n  alt=\\"Kata Omnichat\\"\\n  naturalHeight={1600}\\n  naturalWidth={739}\\n/>\\n\\n12. Login into [https://business.facebook.com/](https://business.facebook.com/) and choose your page or account that has been connected in the sidebar\\n\\n13. After choosing the page for the first time, you will automatically see the pop up to confirm Instagram access. You need to login to your Instagram business account by clicking the **Login** button. Then, confirm to allow access to Instagram messages in Inbox\\n\\n14. After successfully set up your Instagram business account, you can go back to Kata Omnichat to connect Instagram messaging as your channel in the dashboard\\n","code":"var Component=(()=>{var u=Object.create;var s=Object.defineProperty;var g=Object.getOwnPropertyDescriptor;var d=Object.getOwnPropertyNames;var p=Object.getPrototypeOf,m=Object.prototype.hasOwnProperty;var r=e=>s(e,\\"__esModule\\",{value:!0});var b=(e,o)=>()=>(o||e((o={exports:{}}).exports,o),o.exports),f=(e,o)=>{for(var a in o)s(e,a,{get:o[a],enumerable:!0})},c=(e,o,a,n)=>{if(o&&typeof o==\\"object\\"||typeof o==\\"function\\")for(let i of d(o))!m.call(e,i)&&(a||i!==\\"default\\")&&s(e,i,{get:()=>o[i],enumerable:!(n=g(o,i))||n.enumerable});return e},y=(e,o)=>c(r(s(e!=null?u(p(e)):{},\\"default\\",!o&&e&&e.__esModule?{get:()=>e.default,enumerable:!0}:{value:e,enumerable:!0})),e),w=(e=>(o,a)=>e&&e.get(o)||(a=c(r({}),o,1),e&&e.set(o,a),a))(typeof WeakMap!=\\"undefined\\"?new WeakMap:0);var h=b((P,l)=>{l.exports=_jsx_runtime});var x={};f(x,{default:()=>F,frontmatter:()=>k});var t=y(h()),k={id:\\"prepare-your-instagram-business-account\\",title:\\"Prepare your Instagram Business account\\",prev:\\"benefits-with-kata-omnichat\\",next:\\"prepare-your-waba-account\\",section:\\"Before You Start\\"};function C(e={}){let{wrapper:o}=e.components||{};return o?(0,t.jsx)(o,Object.assign({},e,{children:(0,t.jsx)(a,{})})):a();function a(){let n=Object.assign({ol:\\"ol\\",li:\\"li\\",strong:\\"strong\\",p:\\"p\\",a:\\"a\\"},e.components),{FigureImage:i}=n;return i||I(\\"FigureImage\\",!0),(0,t.jsxs)(t.Fragment,{children:[(0,t.jsxs)(n.ol,{children:[`\\n`,(0,t.jsxs)(n.li,{children:[\\"After creating an account in Instagram, go to your \\",(0,t.jsx)(n.strong,{children:\\"Profile\\"})]}),`\\n`,(0,t.jsxs)(n.li,{children:[\\"Click the bar icon in the top right of your profile account, then go to \\",(0,t.jsx)(n.strong,{children:\\"Settings > Account\\"})]}),`\\n`,(0,t.jsxs)(n.li,{children:[\\"Scroll down to the bottom of the Account page and click \\",(0,t.jsx)(n.strong,{children:\\"Switch to Professional Account\\"}),\\". Following the steps to switch the account by clicking \\",(0,t.jsx)(n.strong,{children:\\"Continue\\"}),\\" button\\"]}),`\\n`]}),`\\n`,(0,t.jsx)(i,{caption:{title:\\"Figure 1\\",description:\\"Instagram Account Setting\\"},src:\\"/assets/images/products/kata-omnichat/image1.webp\\",alt:\\"Kata Omnichat\\",naturalHeight:1600,naturalWidth:739}),`\\n`,(0,t.jsxs)(n.ol,{start:\\"4\\",children:[`\\n`,(0,t.jsxs)(n.li,{children:[\\"Choose \\",(0,t.jsx)(n.strong,{children:\\"Categories\\"}),\\" of your business account as listed. You can also switch on the categories into \\",(0,t.jsx)(n.strong,{children:\\"\\\\u201CDisplay on Profile\\\\u201D\\"})]}),`\\n`]}),`\\n`,(0,t.jsx)(i,{caption:{title:\\"Figure 2\\",description:\\"Business Account Categories\\"},src:\\"/assets/images/products/kata-omnichat/image2.webp\\",alt:\\"Kata Omnichat\\",naturalHeight:1600,naturalWidth:739}),`\\n`,(0,t.jsxs)(n.ol,{start:\\"5\\",children:[`\\n`,(0,t.jsxs)(n.li,{children:[\\"Choose the business type, whether a \\",(0,t.jsx)(n.strong,{children:\\"Business\\"}),\\" or a \\",(0,t.jsx)(n.strong,{children:\\"Creator\\"})]}),`\\n`]}),`\\n`,(0,t.jsx)(i,{caption:{title:\\"Figure 3\\",description:\\"Choose your business type\\"},src:\\"/assets/images/products/kata-omnichat/image3.webp\\",alt:\\"Kata Omnichat\\",naturalHeight:1600,naturalWidth:739}),`\\n`,(0,t.jsxs)(n.ol,{start:\\"6\\",children:[`\\n`,(0,t.jsx)(n.li,{children:\\"Fulfill your business contact info, contains email, phone number and address (address is optional)\\"}),`\\n`,(0,t.jsxs)(n.li,{children:[\\"The next step is to connect to your Facebook Page. The Instagram system will automatically show the pop up of connecting to your Facebook. You can click \\",(0,t.jsx)(n.strong,{children:\\"Continue\\"}),\\" or \\",(0,t.jsx)(n.strong,{children:\\"Login\\"}),\\" to Facebook from the first step. Following the instructions by clicking \\",(0,t.jsx)(n.strong,{children:\\"Continue\\"}),\\" button\\"]}),`\\n`,(0,t.jsxs)(n.li,{children:[\\"Click the Add \\",(0,t.jsx)(n.strong,{children:\\"[your Instagram account name]\\"}),\\" button to add your Instagram business account to the Account Center. Finish the setup of connecting to Account Center by clicking \\",(0,t.jsx)(n.strong,{children:\\"\\\\u201CYes, Finish setup\\\\u201D\\"})]}),`\\n`,(0,t.jsxs)(n.li,{children:[\\"Choose your Facebook Page that wants to be connected to your Instagram business account or click \\",(0,t.jsx)(n.strong,{children:\\"Create a new Facebook Page\\"}),\\". If you click \\",(0,t.jsx)(n.strong,{children:\\"Create a new Facebook page\\"}),\\", you have to fill in the \\",(0,t.jsx)(n.strong,{children:\\"Page Name\\"}),\\" and \\",(0,t.jsx)(n.strong,{children:\\"Page Category\\"}),\\". The last step is to click the \\",(0,t.jsx)(n.strong,{children:\\"Create\\"}),\\" button after you fill in. If your chose any Facebook Page in the list, then you just need to click \\",(0,t.jsx)(n.strong,{children:\\"Next\\"}),\\" to finish the process\\"]}),`\\n`]}),`\\n`,(0,t.jsx)(i,{caption:{title:\\"Figure 4\\",description:\\"Connect your facebook page\\"},src:\\"/assets/images/products/kata-omnichat/image4.webp\\",alt:\\"Kata Omnichat\\",naturalHeight:1600,naturalWidth:739}),`\\n`,(0,t.jsxs)(n.ol,{start:\\"10\\",children:[`\\n`,(0,t.jsx)(n.li,{children:\\"Following the 4 steps to set up your professional account: Complete your profile, get inspired by following some related accounts, grow your audience by inviting your relatives, share 3 new contents to view insights and click to explore professional tools to see insights and promotions\\"}),`\\n`]}),`\\n`,(0,t.jsx)(i,{caption:{title:\\"Figure 5\\",description:\\"Professional Account Set Up\\"},src:\\"/assets/images/products/kata-omnichat/image5.webp\\",alt:\\"Kata Omnichat\\",naturalHeight:1600,naturalWidth:739}),`\\n`,(0,t.jsxs)(n.ol,{start:\\"11\\",children:[`\\n`,(0,t.jsxs)(n.li,{children:[\\"After setting up your business account, go to \\",(0,t.jsx)(n.strong,{children:\\"Settings > Privacy > Messages\\"}),\\". Scroll down to the bottom of the page and find \\",(0,t.jsx)(n.strong,{children:\\"Allow access to messages\\"}),\\". Switch on this to allow the access for any messages\\"]}),`\\n`]}),`\\n`,(0,t.jsx)(i,{caption:{title:\\"Figure 6\\",description:\\"Message Controls Setting\\"},src:\\"/assets/images/products/kata-omnichat/image6.webp\\",alt:\\"Kata Omnichat\\",naturalHeight:1600,naturalWidth:739}),`\\n`,(0,t.jsxs)(n.ol,{start:\\"12\\",children:[`\\n`,(0,t.jsxs)(n.li,{children:[`\\n`,(0,t.jsxs)(n.p,{children:[\\"Login into \\",(0,t.jsx)(n.a,{href:\\"https://business.facebook.com/\\",children:\\"https://business.facebook.com/\\"}),\\" and choose your page or account that has been connected in the sidebar\\"]}),`\\n`]}),`\\n`,(0,t.jsxs)(n.li,{children:[`\\n`,(0,t.jsxs)(n.p,{children:[\\"After choosing the page for the first time, you will automatically see the pop up to confirm Instagram access. You need to login to your Instagram business account by clicking the \\",(0,t.jsx)(n.strong,{children:\\"Login\\"}),\\" button. Then, confirm to allow access to Instagram messages in Inbox\\"]}),`\\n`]}),`\\n`,(0,t.jsxs)(n.li,{children:[`\\n`,(0,t.jsx)(n.p,{children:\\"After successfully set up your Instagram business account, you can go back to Kata Omnichat to connect Instagram messaging as your channel in the dashboard\\"}),`\\n`]}),`\\n`]})]})}}var F=C;function I(e,o){throw new Error(\\"Expected \\"+(o?\\"component\\":\\"object\\")+\\" `\\"+e+\\"` to be defined: you likely forgot to import, pass, or provide it.\\")}return w(x);})();\\n;return Component;"},"_id":"kata-omnichat/before-you-start/prepare-your-instagram-business-account.mdx","_raw":{"sourceFilePath":"kata-omnichat/before-you-start/prepare-your-instagram-business-account.mdx","sourceFileName":"prepare-your-instagram-business-account.mdx","sourceFileDir":"kata-omnichat/before-you-start","contentType":"mdx","flattenedPath":"kata-omnichat/before-you-start/prepare-your-instagram-business-account"},"type":"KataOmnichat","slug":["before-you-start","prepare-your-instagram-business-account"],"excerpt":"\\n1. After creating an account in Instagram, go to your **Profile**\\n2"}');
;// CONCATENATED MODULE: ./.contentlayer/generated/KataOmnichat/kata-omnichat__before-you-start__prepare-your-waba-account.mdx.json
const kata_omnichat_before_you_start_prepare_your_waba_account_mdx_namespaceObject = JSON.parse('{"id":"prepare-your-waba-account","section":"Before You Start","title":"Prepare your WABA account","prev":"prepare-your-instagram-business-account","next":"register-your-account-first","body":{"raw":"\\n1. In the **Getting Started** page, you have to click the **Register** in **WhatsApp Business**\\n2. You will be directed to [https://business.kata.ai](https://business.kata.ai) and have to follow all the steps for registering your WhatsApp Business number. Learn more about [registering your WhatsApp number](/business-dashboard/how-to/get-started)\\n3. After successfully registered your WhatsApp Business, you can go back to Kata Omnichat to connect WABA as your channel in the dashboard\\n","code":"var Component=(()=>{var h=Object.create;var a=Object.defineProperty;var d=Object.getOwnPropertyDescriptor;var p=Object.getOwnPropertyNames;var g=Object.getPrototypeOf,b=Object.prototype.hasOwnProperty;var i=e=>a(e,\\"__esModule\\",{value:!0});var f=(e,t)=>()=>(t||e((t={exports:{}}).exports,t),t.exports),m=(e,t)=>{for(var s in t)a(e,s,{get:t[s],enumerable:!0})},c=(e,t,s,r)=>{if(t&&typeof t==\\"object\\"||typeof t==\\"function\\")for(let o of p(t))!b.call(e,o)&&(s||o!==\\"default\\")&&a(e,o,{get:()=>t[o],enumerable:!(r=d(t,o))||r.enumerable});return e},y=(e,t)=>c(i(a(e!=null?h(g(e)):{},\\"default\\",!t&&e&&e.__esModule?{get:()=>e.default,enumerable:!0}:{value:e,enumerable:!0})),e),x=(e=>(t,s)=>e&&e.get(t)||(s=c(i({}),t,1),e&&e.set(t,s),s))(typeof WeakMap!=\\"undefined\\"?new WeakMap:0);var l=f((w,u)=>{u.exports=_jsx_runtime});var W={};m(W,{default:()=>B,frontmatter:()=>A});var n=y(l()),A={id:\\"prepare-your-waba-account\\",title:\\"Prepare your WABA account\\",prev:\\"prepare-your-instagram-business-account\\",next:\\"register-your-account-first\\",section:\\"Before You Start\\"};function j(e={}){let{wrapper:t}=e.components||{};return t?(0,n.jsx)(t,Object.assign({},e,{children:(0,n.jsx)(s,{})})):s();function s(){let r=Object.assign({ol:\\"ol\\",li:\\"li\\",strong:\\"strong\\",a:\\"a\\"},e.components);return(0,n.jsxs)(r.ol,{children:[`\\n`,(0,n.jsxs)(r.li,{children:[\\"In the \\",(0,n.jsx)(r.strong,{children:\\"Getting Started\\"}),\\" page, you have to click the \\",(0,n.jsx)(r.strong,{children:\\"Register\\"}),\\" in \\",(0,n.jsx)(r.strong,{children:\\"WhatsApp Business\\"})]}),`\\n`,(0,n.jsxs)(r.li,{children:[\\"You will be directed to \\",(0,n.jsx)(r.a,{href:\\"https://business.kata.ai\\",children:\\"https://business.kata.ai\\"}),\\" and have to follow all the steps for registering your WhatsApp Business number. Learn more about \\",(0,n.jsx)(r.a,{href:\\"/business-dashboard/how-to/get-started\\",children:\\"registering your WhatsApp number\\"})]}),`\\n`,(0,n.jsx)(r.li,{children:\\"After successfully registered your WhatsApp Business, you can go back to Kata Omnichat to connect WABA as your channel in the dashboard\\"}),`\\n`]})}}var B=j;return x(W);})();\\n;return Component;"},"_id":"kata-omnichat/before-you-start/prepare-your-waba-account.mdx","_raw":{"sourceFilePath":"kata-omnichat/before-you-start/prepare-your-waba-account.mdx","sourceFileName":"prepare-your-waba-account.mdx","sourceFileDir":"kata-omnichat/before-you-start","contentType":"mdx","flattenedPath":"kata-omnichat/before-you-start/prepare-your-waba-account"},"type":"KataOmnichat","slug":["before-you-start","prepare-your-waba-account"],"excerpt":"\\n1. In the **Getting Started** page, you have to click the **Register** in **WhatsApp Business**\\n2"}');
;// CONCATENATED MODULE: ./.contentlayer/generated/KataOmnichat/kata-omnichat__canned-response__set-up-canned-responses.mdx.json
const kata_omnichat_canned_response_set_up_canned_responses_mdx_namespaceObject = JSON.parse('{"id":"set-up-canned-responses","section":"Canned Response","title":"Set up canned responses","prev":"add-teams","next":"email-notification-introduction","body":{"raw":"\\nCanned Responses are saved reply templates that can be used to quickly send out a reply to a conversation. Both Agent and Administrator can add canned responses. To add a canned response, you need to follow these steps.\\n\\n1. Go to Omnichat **Homepage**\\n2. Click **Setting > Canned Responses** on the sidebar. Canned responses are used with the help of Short Codes. Agents or admin can access canned responses while on a chat by typing \'/\' followed by the shortcode.\\n\\n<FigureImage\\n  caption={{ title: \'Figure 61\', description: `Canned Responses` }}\\n  src=\\"/assets/images/products/kata-omnichat/image61.webp\\"\\n  alt=\\"Kata Omnichat\\"\\n  naturalHeight={1000}\\n  naturalWidth={1600}\\n/>\\n\\n3. Click canned response on the sidebar\\n\\n<FigureImage\\n  caption={{ title: \'Figure 62\', description: `Canned Responses Set Up` }}\\n  src=\\"/assets/images/products/kata-omnichat/image62.webp\\"\\n  alt=\\"Kata Omnichat\\"\\n  naturalHeight={1000}\\n  naturalWidth={1600}\\n/>\\n\\n4. For creating a Canned Response, just click on the Add Canned Response. You can also edit or delete an existing Canned Response by clicking on the Edit or Delete button\\n\\n<FigureImage\\n  caption={{ title: \'Figure 63\', description: `Add Canned Response` }}\\n  src=\\"/assets/images/products/kata-omnichat/image63.webp\\"\\n  alt=\\"Kata Omnichat\\"\\n  naturalHeight={1000}\\n  naturalWidth={1600}\\n/>\\n\\nHere are the details of the field in canned response:\\n\\n<Table>\\n  <TableHead>\\n    <TableHeadRow>\\n      <TableHeadCell>Field Name</TableHeadCell>\\n      <TableHeadCell>Description</TableHeadCell>\\n    </TableHeadRow>\\n  </TableHead>\\n  <TableBody>\\n    <TableBodyRow>\\n      <TableBodyCell>Short Codes</TableBodyCell>\\n      <TableBodyCell>\\n        Shortcode that you will use to make a shortcut of your repeated answer, for example list of product\\n      </TableBodyCell>\\n    </TableBodyRow>\\n    <TableBodyRow>\\n      <TableBodyCell>Content</TableBodyCell>\\n      <TableBodyCell>\\n        The answer message that will be sent to your customer, for example, “Hi, thank you for contacting us, currently\\n        we sell Hamburger and fried fries”\\n      </TableBodyCell>\\n    </TableBodyRow>\\n  </TableBody>\\n</Table>\\n","code":"var Component=(()=>{var C=Object.create;var d=Object.defineProperty;var w=Object.getOwnPropertyDescriptor;var T=Object.getOwnPropertyNames;var x=Object.getPrototypeOf,R=Object.prototype.hasOwnProperty;var g=n=>d(n,\\"__esModule\\",{value:!0});var H=(n,t)=>()=>(t||n((t={exports:{}}).exports,t),t.exports),k=(n,t)=>{for(var o in t)d(n,o,{get:t[o],enumerable:!0})},b=(n,t,o,a)=>{if(t&&typeof t==\\"object\\"||typeof t==\\"function\\")for(let i of T(t))!R.call(n,i)&&(o||i!==\\"default\\")&&d(n,i,{get:()=>t[i],enumerable:!(a=w(t,i))||a.enumerable});return n},j=(n,t)=>b(g(d(n!=null?C(x(n)):{},\\"default\\",!t&&n&&n.__esModule?{get:()=>n.default,enumerable:!0}:{value:n,enumerable:!0})),n),F=(n=>(t,o)=>n&&n.get(t)||(o=b(g({}),t,1),n&&n.set(t,o),o))(typeof WeakMap!=\\"undefined\\"?new WeakMap:0);var y=H((v,f)=>{f.exports=_jsx_runtime});var S={};k(S,{default:()=>O,frontmatter:()=>_});var e=j(y()),_={id:\\"set-up-canned-responses\\",title:\\"Set up canned responses\\",prev:\\"add-teams\\",next:\\"email-notification-introduction\\",section:\\"Canned Response\\"};function B(n={}){let{wrapper:t}=n.components||{};return t?(0,e.jsx)(t,Object.assign({},n,{children:(0,e.jsx)(o,{})})):o();function o(){let a=Object.assign({p:\\"p\\",ol:\\"ol\\",li:\\"li\\",strong:\\"strong\\"},n.components),{FigureImage:i,Table:h,TableHead:p,TableHeadRow:u,TableHeadCell:l,TableBody:m,TableBodyRow:c,TableBodyCell:s}=a;return i||r(\\"FigureImage\\",!0),h||r(\\"Table\\",!0),m||r(\\"TableBody\\",!0),s||r(\\"TableBodyCell\\",!0),c||r(\\"TableBodyRow\\",!0),p||r(\\"TableHead\\",!0),l||r(\\"TableHeadCell\\",!0),u||r(\\"TableHeadRow\\",!0),(0,e.jsxs)(e.Fragment,{children:[(0,e.jsx)(a.p,{children:\\"Canned Responses are saved reply templates that can be used to quickly send out a reply to a conversation. Both Agent and Administrator can add canned responses. To add a canned response, you need to follow these steps.\\"}),`\\n`,(0,e.jsxs)(a.ol,{children:[`\\n`,(0,e.jsxs)(a.li,{children:[\\"Go to Omnichat \\",(0,e.jsx)(a.strong,{children:\\"Homepage\\"})]}),`\\n`,(0,e.jsxs)(a.li,{children:[\\"Click \\",(0,e.jsx)(a.strong,{children:\\"Setting > Canned Responses\\"}),\\" on the sidebar. Canned responses are used with the help of Short Codes. Agents or admin can access canned responses while on a chat by typing \'/\' followed by the shortcode.\\"]}),`\\n`]}),`\\n`,(0,e.jsx)(i,{caption:{title:\\"Figure 61\\",description:\\"Canned Responses\\"},src:\\"/assets/images/products/kata-omnichat/image61.webp\\",alt:\\"Kata Omnichat\\",naturalHeight:1e3,naturalWidth:1600}),`\\n`,(0,e.jsxs)(a.ol,{start:\\"3\\",children:[`\\n`,(0,e.jsx)(a.li,{children:\\"Click canned response on the sidebar\\"}),`\\n`]}),`\\n`,(0,e.jsx)(i,{caption:{title:\\"Figure 62\\",description:\\"Canned Responses Set Up\\"},src:\\"/assets/images/products/kata-omnichat/image62.webp\\",alt:\\"Kata Omnichat\\",naturalHeight:1e3,naturalWidth:1600}),`\\n`,(0,e.jsxs)(a.ol,{start:\\"4\\",children:[`\\n`,(0,e.jsx)(a.li,{children:\\"For creating a Canned Response, just click on the Add Canned Response. You can also edit or delete an existing Canned Response by clicking on the Edit or Delete button\\"}),`\\n`]}),`\\n`,(0,e.jsx)(i,{caption:{title:\\"Figure 63\\",description:\\"Add Canned Response\\"},src:\\"/assets/images/products/kata-omnichat/image63.webp\\",alt:\\"Kata Omnichat\\",naturalHeight:1e3,naturalWidth:1600}),`\\n`,(0,e.jsx)(a.p,{children:\\"Here are the details of the field in canned response:\\"}),`\\n`,(0,e.jsxs)(h,{children:[(0,e.jsx)(p,{children:(0,e.jsxs)(u,{children:[(0,e.jsx)(l,{children:\\"Field Name\\"}),`\\n`,(0,e.jsx)(l,{children:\\"Description\\"})]})}),(0,e.jsxs)(m,{children:[(0,e.jsxs)(c,{children:[(0,e.jsx)(s,{children:\\"Short Codes\\"}),(0,e.jsx)(s,{children:(0,e.jsx)(a.p,{children:\\"Shortcode that you will use to make a shortcut of your repeated answer, for example list of product\\"})})]}),(0,e.jsxs)(c,{children:[(0,e.jsx)(s,{children:\\"Content\\"}),(0,e.jsx)(s,{children:(0,e.jsx)(a.p,{children:`The answer message that will be sent to your customer, for example, \\\\u201CHi, thank you for contacting us, currently\\nwe sell Hamburger and fried fries\\\\u201D`})})]})]})]})]})}}var O=B;function r(n,t){throw new Error(\\"Expected \\"+(t?\\"component\\":\\"object\\")+\\" `\\"+n+\\"` to be defined: you likely forgot to import, pass, or provide it.\\")}return F(S);})();\\n;return Component;"},"_id":"kata-omnichat/canned-response/set-up-canned-responses.mdx","_raw":{"sourceFilePath":"kata-omnichat/canned-response/set-up-canned-responses.mdx","sourceFileName":"set-up-canned-responses.mdx","sourceFileDir":"kata-omnichat/canned-response","contentType":"mdx","flattenedPath":"kata-omnichat/canned-response/set-up-canned-responses"},"type":"KataOmnichat","slug":["canned-response","set-up-canned-responses"],"excerpt":"\\nCanned Responses are saved reply templates that can be used to quickly send out a reply to a conversation. Both Agent and Administrator can add canned responses"}');
;// CONCATENATED MODULE: ./.contentlayer/generated/KataOmnichat/kata-omnichat__change-your-status__how-to-use.mdx.json
const kata_omnichat_change_your_status_how_to_use_mdx_namespaceObject = JSON.parse('{"id":"change-your-status-how-to-use","section":"Change Your Status","title":"How to use","prev":"change-your-status-introduction","next":"view-report","body":{"raw":"\\nWhen you’re logged in to the account, the status by default will change online. However, If you want to change the status to Offline or Busy, then you can click the **change button** on the below corner of the dashboard.\\n\\n<FigureImage\\n  caption={{ title: \'Figure 68\', description: `Change Status` }}\\n  src=\\"/assets/images/products/kata-omnichat/image68.webp\\"\\n  alt=\\"Kata Omnichat\\"\\n  naturalHeight={1000}\\n  naturalWidth={1600}\\n/>\\n","code":"var Component=(()=>{var h=Object.create;var s=Object.defineProperty;var l=Object.getOwnPropertyDescriptor;var d=Object.getOwnPropertyNames;var p=Object.getPrototypeOf,m=Object.prototype.hasOwnProperty;var i=t=>s(t,\\"__esModule\\",{value:!0});var f=(t,e)=>()=>(e||t((e={exports:{}}).exports,e),e.exports),x=(t,e)=>{for(var n in e)s(t,n,{get:e[n],enumerable:!0})},c=(t,e,n,a)=>{if(e&&typeof e==\\"object\\"||typeof e==\\"function\\")for(let r of d(e))!m.call(t,r)&&(n||r!==\\"default\\")&&s(t,r,{get:()=>e[r],enumerable:!(a=l(e,r))||a.enumerable});return t},w=(t,e)=>c(i(s(t!=null?h(p(t)):{},\\"default\\",!e&&t&&t.__esModule?{get:()=>t.default,enumerable:!0}:{value:t,enumerable:!0})),t),y=(t=>(e,n)=>t&&t.get(e)||(n=c(i({}),e,1),t&&t.set(e,n),n))(typeof WeakMap!=\\"undefined\\"?new WeakMap:0);var g=f((M,u)=>{u.exports=_jsx_runtime});var v={};x(v,{default:()=>_,frontmatter:()=>b});var o=w(g()),b={id:\\"change-your-status-how-to-use\\",title:\\"How to use\\",prev:\\"change-your-status-introduction\\",next:\\"view-report\\",section:\\"Change Your Status\\"};function j(t={}){let{wrapper:e}=t.components||{};return e?(0,o.jsx)(e,Object.assign({},t,{children:(0,o.jsx)(n,{})})):n();function n(){let a=Object.assign({p:\\"p\\",strong:\\"strong\\"},t.components),{FigureImage:r}=a;return r||F(\\"FigureImage\\",!0),(0,o.jsxs)(o.Fragment,{children:[(0,o.jsxs)(a.p,{children:[\\"When you\\\\u2019re logged in to the account, the status by default will change online. However, If you want to change the status to Offline or Busy, then you can click the \\",(0,o.jsx)(a.strong,{children:\\"change button\\"}),\\" on the below corner of the dashboard.\\"]}),`\\n`,(0,o.jsx)(r,{caption:{title:\\"Figure 68\\",description:\\"Change Status\\"},src:\\"/assets/images/products/kata-omnichat/image68.webp\\",alt:\\"Kata Omnichat\\",naturalHeight:1e3,naturalWidth:1600})]})}}var _=j;function F(t,e){throw new Error(\\"Expected \\"+(e?\\"component\\":\\"object\\")+\\" `\\"+t+\\"` to be defined: you likely forgot to import, pass, or provide it.\\")}return y(v);})();\\n;return Component;"},"_id":"kata-omnichat/change-your-status/how-to-use.mdx","_raw":{"sourceFilePath":"kata-omnichat/change-your-status/how-to-use.mdx","sourceFileName":"how-to-use.mdx","sourceFileDir":"kata-omnichat/change-your-status","contentType":"mdx","flattenedPath":"kata-omnichat/change-your-status/how-to-use"},"type":"KataOmnichat","slug":["change-your-status","how-to-use"],"excerpt":"\\nWhen you’re logged in to the account, the status by default will change online. However, If you want to change the status to Offline or Busy, then you can click the **change button** on the below corner of the dashboard"}');
;// CONCATENATED MODULE: ./.contentlayer/generated/KataOmnichat/kata-omnichat__change-your-status__introduction.mdx.json
const kata_omnichat_change_your_status_introduction_mdx_namespaceObject = JSON.parse('{"id":"change-your-status-introduction","section":"Change Your Status","title":"Introduction","prev":"audio-notification-how-to-use","next":"change-your-status-how-to-use","body":{"raw":"\\nIn this feature you can view the current status of your availability. This status is reflected on other admin or agents when they want to assign you.\\n","code":"var Component=(()=>{var d=Object.create;var r=Object.defineProperty;var f=Object.getOwnPropertyDescriptor;var l=Object.getOwnPropertyNames;var p=Object.getPrototypeOf,m=Object.prototype.hasOwnProperty;var i=t=>r(t,\\"__esModule\\",{value:!0});var x=(t,e)=>()=>(e||t((e={exports:{}}).exports,e),e.exports),y=(t,e)=>{for(var n in e)r(t,n,{get:e[n],enumerable:!0})},u=(t,e,n,s)=>{if(e&&typeof e==\\"object\\"||typeof e==\\"function\\")for(let o of l(e))!m.call(t,o)&&(n||o!==\\"default\\")&&r(t,o,{get:()=>e[o],enumerable:!(s=f(e,o))||s.enumerable});return t},g=(t,e)=>u(i(r(t!=null?d(p(t)):{},\\"default\\",!e&&t&&t.__esModule?{get:()=>t.default,enumerable:!0}:{value:t,enumerable:!0})),t),w=(t=>(e,n)=>t&&t.get(e)||(n=u(i({}),e,1),t&&t.set(e,n),n))(typeof WeakMap!=\\"undefined\\"?new WeakMap:0);var h=x((M,c)=>{c.exports=_jsx_runtime});var v={};y(v,{default:()=>b,frontmatter:()=>j});var a=g(h()),j={id:\\"change-your-status-introduction\\",title:\\"Introduction\\",prev:\\"audio-notification-how-to-use\\",next:\\"change-your-status-how-to-use\\",section:\\"Change Your Status\\"};function _(t={}){let{wrapper:e}=t.components||{};return e?(0,a.jsx)(e,Object.assign({},t,{children:(0,a.jsx)(n,{})})):n();function n(){let s=Object.assign({p:\\"p\\"},t.components);return(0,a.jsx)(s.p,{children:\\"In this feature you can view the current status of your availability. This status is reflected on other admin or agents when they want to assign you.\\"})}}var b=_;return w(v);})();\\n;return Component;"},"_id":"kata-omnichat/change-your-status/introduction.mdx","_raw":{"sourceFilePath":"kata-omnichat/change-your-status/introduction.mdx","sourceFileName":"introduction.mdx","sourceFileDir":"kata-omnichat/change-your-status","contentType":"mdx","flattenedPath":"kata-omnichat/change-your-status/introduction"},"type":"KataOmnichat","slug":["change-your-status","introduction"],"excerpt":"\\nIn this feature you can view the current status of your availability. This status is reflected on other admin or agents when they want to assign you"}');
;// CONCATENATED MODULE: ./.contentlayer/generated/KataOmnichat/kata-omnichat__configure-your-account__how-to-use.mdx.json
const kata_omnichat_configure_your_account_how_to_use_mdx_namespaceObject = JSON.parse('{"id":"configure-account-how-to-use","section":"Configure Your Account","title":"How to use","prev":"configure-account-introduction","next":"inbox-add-inbox","body":{"raw":"\\nTo update your account setting, you can follow these steps:\\n\\n1. Go to Omnichat dashboard\\n2. Click **Setting** on the sidebar\\n3. Go to **Account Setting** on the sidebar\\n4. Input the updated field\\n5. Click the **Update setting **button\\\\*\\\\* \\\\*\\\\*on the top corner of the page\\n6. After you click the update setting, there will be a message _“Successfully updated account settings”_ if the update is successful\\n\\n<FigureImage\\n  caption={{ title: \'Figure 14\', description: `Setting Navigation bar` }}\\n  src=\\"/assets/images/products/kata-omnichat/image14.webp\\"\\n  alt=\\"Kata Omnichat\\"\\n  naturalHeight={872}\\n  naturalWidth={1600}\\n/>\\n\\n<FigureImage\\n  caption={{ title: \'Figure 15\', description: `General Account setting` }}\\n  src=\\"/assets/images/products/kata-omnichat/image15.webp\\"\\n  alt=\\"Kata Omnichat\\"\\n  naturalHeight={877}\\n  naturalWidth={1600}\\n/>\\n\\nThe available setting will be shown as below:\\n\\n<Table>\\n  <TableHead>\\n    <TableHeadRow>\\n      <TableHeadCell>Field Name</TableHeadCell>\\n      <TableHeadCell>Description</TableHeadCell>\\n    </TableHeadRow>\\n  </TableHead>\\n  <TableBody>\\n    <TableBodyRow>\\n      <TableBodyCell>Account Name</TableBodyCell>\\n      <TableBodyCell>Enter the name of your Account. For example: PT YessBoss Indonesia </TableBodyCell>\\n    </TableBodyRow>\\n    <TableBodyRow>\\n      <TableBodyCell>Site Language</TableBodyCell>\\n      <TableBodyCell>\\n        Select the language in which conversations need to happen. eg: English (en) Select English if you want your\\n        conversations to be in English\\n      </TableBodyCell>\\n    </TableBodyRow>\\n    <TableBodyRow>\\n      <TableBodyCell>The number of days after a ticket should auto-resolve if there is no activity</TableBodyCell>\\n      <TableBodyCell>\\n        Give the number of days after which the ticket or conversation will be marked as resolved, eg: 30. This is given\\n        in case the customer does not have any further queries but has not given closure also\\n      </TableBodyCell>\\n    </TableBodyRow>\\n  </TableBody>\\n</Table>\\n","code":"var Component=(()=>{var y=Object.create;var s=Object.defineProperty;var T=Object.getOwnPropertyDescriptor;var x=Object.getOwnPropertyNames;var v=Object.getPrototypeOf,k=Object.prototype.hasOwnProperty;var b=t=>s(t,\\"__esModule\\",{value:!0});var C=(t,n)=>()=>(n||t((n={exports:{}}).exports,n),n.exports),H=(t,n)=>{for(var o in n)s(t,o,{get:n[o],enumerable:!0})},f=(t,n,o,i)=>{if(n&&typeof n==\\"object\\"||typeof n==\\"function\\")for(let a of x(n))!k.call(t,a)&&(o||a!==\\"default\\")&&s(t,a,{get:()=>n[a],enumerable:!(i=T(n,a))||i.enumerable});return t},j=(t,n)=>f(b(s(t!=null?y(v(t)):{},\\"default\\",!n&&t&&t.__esModule?{get:()=>t.default,enumerable:!0}:{value:t,enumerable:!0})),t),F=(t=>(n,o)=>t&&t.get(n)||(o=f(b({}),n,1),t&&t.set(n,o),o))(typeof WeakMap!=\\"undefined\\"?new WeakMap:0);var w=C((O,m)=>{m.exports=_jsx_runtime});var A={};H(A,{default:()=>S,frontmatter:()=>_});var e=j(w()),_={id:\\"configure-account-how-to-use\\",title:\\"How to use\\",prev:\\"configure-account-introduction\\",next:\\"inbox-add-inbox\\",section:\\"Configure Your Account\\"};function B(t={}){let{wrapper:n}=t.components||{};return n?(0,e.jsx)(n,Object.assign({},t,{children:(0,e.jsx)(o,{})})):o();function o(){let i=Object.assign({p:\\"p\\",ol:\\"ol\\",li:\\"li\\",strong:\\"strong\\",em:\\"em\\"},t.components),{FigureImage:a,Table:h,TableHead:u,TableHeadRow:g,TableHeadCell:d,TableBody:p,TableBodyRow:c,TableBodyCell:l}=i;return a||r(\\"FigureImage\\",!0),h||r(\\"Table\\",!0),p||r(\\"TableBody\\",!0),l||r(\\"TableBodyCell\\",!0),c||r(\\"TableBodyRow\\",!0),u||r(\\"TableHead\\",!0),d||r(\\"TableHeadCell\\",!0),g||r(\\"TableHeadRow\\",!0),(0,e.jsxs)(e.Fragment,{children:[(0,e.jsx)(i.p,{children:\\"To update your account setting, you can follow these steps:\\"}),`\\n`,(0,e.jsxs)(i.ol,{children:[`\\n`,(0,e.jsx)(i.li,{children:\\"Go to Omnichat dashboard\\"}),`\\n`,(0,e.jsxs)(i.li,{children:[\\"Click \\",(0,e.jsx)(i.strong,{children:\\"Setting\\"}),\\" on the sidebar\\"]}),`\\n`,(0,e.jsxs)(i.li,{children:[\\"Go to \\",(0,e.jsx)(i.strong,{children:\\"Account Setting\\"}),\\" on the sidebar\\"]}),`\\n`,(0,e.jsx)(i.li,{children:\\"Input the updated field\\"}),`\\n`,(0,e.jsx)(i.li,{children:\\"Click the **Update setting **button** **on the top corner of the page\\"}),`\\n`,(0,e.jsxs)(i.li,{children:[\\"After you click the update setting, there will be a message \\",(0,e.jsx)(i.em,{children:\\"\\\\u201CSuccessfully updated account settings\\\\u201D\\"}),\\" if the update is successful\\"]}),`\\n`]}),`\\n`,(0,e.jsx)(a,{caption:{title:\\"Figure 14\\",description:\\"Setting Navigation bar\\"},src:\\"/assets/images/products/kata-omnichat/image14.webp\\",alt:\\"Kata Omnichat\\",naturalHeight:872,naturalWidth:1600}),`\\n`,(0,e.jsx)(a,{caption:{title:\\"Figure 15\\",description:\\"General Account setting\\"},src:\\"/assets/images/products/kata-omnichat/image15.webp\\",alt:\\"Kata Omnichat\\",naturalHeight:877,naturalWidth:1600}),`\\n`,(0,e.jsx)(i.p,{children:\\"The available setting will be shown as below:\\"}),`\\n`,(0,e.jsxs)(h,{children:[(0,e.jsx)(u,{children:(0,e.jsxs)(g,{children:[(0,e.jsx)(d,{children:\\"Field Name\\"}),`\\n`,(0,e.jsx)(d,{children:\\"Description\\"})]})}),(0,e.jsxs)(p,{children:[(0,e.jsxs)(c,{children:[(0,e.jsx)(l,{children:\\"Account Name\\"}),`\\n`,(0,e.jsx)(l,{children:\\"Enter the name of your Account. For example: PT YessBoss Indonesia \\"})]}),(0,e.jsxs)(c,{children:[(0,e.jsx)(l,{children:\\"Site Language\\"}),(0,e.jsx)(l,{children:(0,e.jsx)(i.p,{children:`Select the language in which conversations need to happen. eg: English (en) Select English if you want your\\nconversations to be in English`})})]}),(0,e.jsxs)(c,{children:[(0,e.jsx)(l,{children:\\"The number of days after a ticket should auto-resolve if there is no activity\\"}),(0,e.jsx)(l,{children:(0,e.jsx)(i.p,{children:`Give the number of days after which the ticket or conversation will be marked as resolved, eg: 30. This is given\\nin case the customer does not have any further queries but has not given closure also`})})]})]})]})]})}}var S=B;function r(t,n){throw new Error(\\"Expected \\"+(n?\\"component\\":\\"object\\")+\\" `\\"+t+\\"` to be defined: you likely forgot to import, pass, or provide it.\\")}return F(A);})();\\n;return Component;"},"_id":"kata-omnichat/configure-your-account/how-to-use.mdx","_raw":{"sourceFilePath":"kata-omnichat/configure-your-account/how-to-use.mdx","sourceFileName":"how-to-use.mdx","sourceFileDir":"kata-omnichat/configure-your-account","contentType":"mdx","flattenedPath":"kata-omnichat/configure-your-account/how-to-use"},"type":"KataOmnichat","slug":["configure-your-account","how-to-use"],"excerpt":"\\nTo update your account setting, you can follow these steps:\\n\\n1. Go to Omnichat dashboard\\n2"}');
;// CONCATENATED MODULE: ./.contentlayer/generated/KataOmnichat/kata-omnichat__configure-your-account__introduction.mdx.json
const kata_omnichat_configure_your_account_introduction_mdx_namespaceObject = JSON.parse('{"id":"configure-account-introduction","section":"Configure Your Account","title":"Introduction","prev":"dashboard-change-password","next":"configure-account-how-to-use","body":{"raw":"\\nAccount setting is a general setting about the company that uses the account. This page can be accessed only by administrators. You can update your company name, language, and day ticket should auto-resolve if there is no activity.\\n","code":"var Component=(()=>{var p=Object.create;var c=Object.defineProperty;var g=Object.getOwnPropertyDescriptor;var h=Object.getOwnPropertyNames;var l=Object.getPrototypeOf,m=Object.prototype.hasOwnProperty;var s=t=>c(t,\\"__esModule\\",{value:!0});var f=(t,n)=>()=>(n||t((n={exports:{}}).exports,n),n.exports),x=(t,n)=>{for(var e in n)c(t,e,{get:n[e],enumerable:!0})},i=(t,n,e,a)=>{if(n&&typeof n==\\"object\\"||typeof n==\\"function\\")for(let o of h(n))!m.call(t,o)&&(e||o!==\\"default\\")&&c(t,o,{get:()=>n[o],enumerable:!(a=g(n,o))||a.enumerable});return t},y=(t,n)=>i(s(c(t!=null?p(l(t)):{},\\"default\\",!n&&t&&t.__esModule?{get:()=>t.default,enumerable:!0}:{value:t,enumerable:!0})),t),b=(t=>(n,e)=>t&&t.get(n)||(e=i(s({}),n,1),t&&t.set(n,e),e))(typeof WeakMap!=\\"undefined\\"?new WeakMap:0);var d=f((M,u)=>{u.exports=_jsx_runtime});var w={};x(w,{default:()=>v,frontmatter:()=>j});var r=y(d()),j={id:\\"configure-account-introduction\\",title:\\"Introduction\\",prev:\\"dashboard-change-password\\",next:\\"configure-account-how-to-use\\",section:\\"Configure Your Account\\"};function _(t={}){let{wrapper:n}=t.components||{};return n?(0,r.jsx)(n,Object.assign({},t,{children:(0,r.jsx)(e,{})})):e();function e(){let a=Object.assign({p:\\"p\\"},t.components);return(0,r.jsx)(a.p,{children:\\"Account setting is a general setting about the company that uses the account. This page can be accessed only by administrators. You can update your company name, language, and day ticket should auto-resolve if there is no activity.\\"})}}var v=_;return b(w);})();\\n;return Component;"},"_id":"kata-omnichat/configure-your-account/introduction.mdx","_raw":{"sourceFilePath":"kata-omnichat/configure-your-account/introduction.mdx","sourceFileName":"introduction.mdx","sourceFileDir":"kata-omnichat/configure-your-account","contentType":"mdx","flattenedPath":"kata-omnichat/configure-your-account/introduction"},"type":"KataOmnichat","slug":["configure-your-account","introduction"],"excerpt":"\\nAccount setting is a general setting about the company that uses the account. This page can be accessed only by administrators"}');
;// CONCATENATED MODULE: ./.contentlayer/generated/KataOmnichat/kata-omnichat__configure-your-agent-chatbot__create-agent-bot-from-kata-platform.mdx.json
const kata_omnichat_configure_your_agent_chatbot_create_agent_bot_from_kata_platform_mdx_namespaceObject = JSON.parse('{"id":"create-agent-bot-from-kata-platform","section":"Configure Your Agent Chatbot","title":"Create Agent Bot from Kata Platform","prev":"setup-agent-bot-in-kata-omnichat","next":"dashboard-update-profile","body":{"raw":"\\nFor this tutorial, go to [Create Simple Handover from Chatbot to Agent Tutorial](/tutorials/create-simple-bot-handover-from-chatbot-to-agent)\\n","code":"var Component=(()=>{var p=Object.create;var i=Object.defineProperty;var f=Object.getOwnPropertyDescriptor;var u=Object.getOwnPropertyNames;var d=Object.getPrototypeOf,h=Object.prototype.hasOwnProperty;var s=t=>i(t,\\"__esModule\\",{value:!0});var g=(t,e)=>()=>(e||t((e={exports:{}}).exports,e),e.exports),x=(t,e)=>{for(var o in e)i(t,o,{get:e[o],enumerable:!0})},c=(t,e,o,r)=>{if(e&&typeof e==\\"object\\"||typeof e==\\"function\\")for(let n of u(e))!h.call(t,n)&&(o||n!==\\"default\\")&&i(t,n,{get:()=>e[n],enumerable:!(r=f(e,n))||r.enumerable});return t},b=(t,e)=>c(s(i(t!=null?p(d(t)):{},\\"default\\",!e&&t&&t.__esModule?{get:()=>t.default,enumerable:!0}:{value:t,enumerable:!0})),t),j=(t=>(e,o)=>t&&t.get(e)||(o=c(s({}),e,1),t&&t.set(e,o),o))(typeof WeakMap!=\\"undefined\\"?new WeakMap:0);var l=g((k,m)=>{m.exports=_jsx_runtime});var A={};x(A,{default:()=>v,frontmatter:()=>C});var a=b(l()),C={id:\\"create-agent-bot-from-kata-platform\\",title:\\"Create Agent Bot from Kata Platform\\",prev:\\"setup-agent-bot-in-kata-omnichat\\",next:\\"dashboard-update-profile\\",section:\\"Configure Your Agent Chatbot\\"};function _(t={}){let{wrapper:e}=t.components||{};return e?(0,a.jsx)(e,Object.assign({},t,{children:(0,a.jsx)(o,{})})):o();function o(){let r=Object.assign({p:\\"p\\",a:\\"a\\"},t.components);return(0,a.jsxs)(r.p,{children:[\\"For this tutorial, go to \\",(0,a.jsx)(r.a,{href:\\"/tutorials/create-simple-bot-handover-from-chatbot-to-agent\\",children:\\"Create Simple Handover from Chatbot to Agent Tutorial\\"})]})}}var v=_;return j(A);})();\\n;return Component;"},"_id":"kata-omnichat/configure-your-agent-chatbot/create-agent-bot-from-kata-platform.mdx","_raw":{"sourceFilePath":"kata-omnichat/configure-your-agent-chatbot/create-agent-bot-from-kata-platform.mdx","sourceFileName":"create-agent-bot-from-kata-platform.mdx","sourceFileDir":"kata-omnichat/configure-your-agent-chatbot","contentType":"mdx","flattenedPath":"kata-omnichat/configure-your-agent-chatbot/create-agent-bot-from-kata-platform"},"type":"KataOmnichat","slug":["configure-your-agent-chatbot","create-agent-bot-from-kata-platform"],"excerpt":"\\nFor this tutorial, go to [Create Simple Handover from Chatbot to Agent Tutorial](/tutorials/create-simple-bot-handover-from-chatbot-to-agent)\\n"}');
;// CONCATENATED MODULE: ./.contentlayer/generated/KataOmnichat/kata-omnichat__configure-your-agent-chatbot__setup-agent-bot-in-kata-omnichat.mdx.json
const kata_omnichat_configure_your_agent_chatbot_setup_agent_bot_in_kata_omnichat_mdx_namespaceObject = JSON.parse('{"id":"setup-agent-bot-in-kata-omnichat","section":"Configure Your Agent Chatbot","title":"Configure your agent bot","prev":"connect-your-waba-inbox","next":"create-agent-bot-from-kata-platform","body":{"raw":"\\nAgent bot is a feature to integrate your Kata Platform chatbot with Omnichat as “agent”. This feature will let you see the conversation stream between bot and end-users and take over conversation from bot when needed. Learn more about [creating a chatbot handover to an agent](/tutorials/create-simple-bot-handover-from-chatbot-to-agent).\\n\\n## Setup Agent Bot in Kata Omnichat\\n\\n1. Go to the **Settings** menu in Omnichat.\\n2. Then, click on the **Integrations** menu. You will see 2 cards: Agent bot and Webhooks.\\n3. Click the **Configure** button in **Agent bot** card.\\n4. Click **Add new configuration** to set up a new agent bot.\\n5. Fill in the **agent bot name and description**, then choose **inboxes** that you’ve created before. You can add multiple inboxes in 1 agent bot setup.\\n6. Finally, you’re ready to finalize the first step by clicking the **generate access token** button. You must paste the access token into Platform. Go to create [simple chatbot handover tutorial](/tutorials/create-simple-bot-handover-from-chatbot-to-agent) to continue\\n\\n<FigureImage\\n  caption={{ title: \'Figure 10\', description: `Bot Generate Access Token` }}\\n  src=\\"/assets/images/products/kata-omnichat/image10.webp\\"\\n  alt=\\"Kata Omnichat\\"\\n  naturalHeight={842}\\n  naturalWidth={1600}\\n/>\\n","code":"var Component=(()=>{var d=Object.create;var r=Object.defineProperty;var g=Object.getOwnPropertyDescriptor;var u=Object.getOwnPropertyNames;var m=Object.getPrototypeOf,b=Object.prototype.hasOwnProperty;var c=e=>r(e,\\"__esModule\\",{value:!0});var p=(e,n)=>()=>(n||e((n={exports:{}}).exports,n),n.exports),f=(e,n)=>{for(var a in n)r(e,a,{get:n[a],enumerable:!0})},s=(e,n,a,o)=>{if(n&&typeof n==\\"object\\"||typeof n==\\"function\\")for(let i of u(n))!b.call(e,i)&&(a||i!==\\"default\\")&&r(e,i,{get:()=>n[i],enumerable:!(o=g(n,i))||o.enumerable});return e},k=(e,n)=>s(c(r(e!=null?d(m(e)):{},\\"default\\",!n&&e&&e.__esModule?{get:()=>e.default,enumerable:!0}:{value:e,enumerable:!0})),e),x=(e=>(n,a)=>e&&e.get(n)||(a=s(c({}),n,1),e&&e.set(n,a),a))(typeof WeakMap!=\\"undefined\\"?new WeakMap:0);var h=p((A,l)=>{l.exports=_jsx_runtime});var C={};f(C,{default:()=>v,frontmatter:()=>w});var t=k(h()),w={id:\\"setup-agent-bot-in-kata-omnichat\\",title:\\"Configure your agent bot\\",prev:\\"connect-your-waba-inbox\\",next:\\"create-agent-bot-from-kata-platform\\",section:\\"Configure Your Agent Chatbot\\"};function y(e={}){let{wrapper:n}=e.components||{};return n?(0,t.jsx)(n,Object.assign({},e,{children:(0,t.jsx)(a,{})})):a();function a(){let o=Object.assign({p:\\"p\\",a:\\"a\\",h2:\\"h2\\",span:\\"span\\",ol:\\"ol\\",li:\\"li\\",strong:\\"strong\\"},e.components),{FigureImage:i}=o;return i||j(\\"FigureImage\\",!0),(0,t.jsxs)(t.Fragment,{children:[(0,t.jsxs)(o.p,{children:[\\"Agent bot is a feature to integrate your Kata Platform chatbot with Omnichat as \\\\u201Cagent\\\\u201D. This feature will let you see the conversation stream between bot and end-users and take over conversation from bot when needed. Learn more about \\",(0,t.jsx)(o.a,{href:\\"/tutorials/create-simple-bot-handover-from-chatbot-to-agent\\",children:\\"creating a chatbot handover to an agent\\"}),\\".\\"]}),`\\n`,(0,t.jsxs)(o.h2,{id:\\"setup-agent-bot-in-kata-omnichat\\",children:[(0,t.jsx)(o.a,{className:\\"anchor\\",href:\\"#setup-agent-bot-in-kata-omnichat\\",children:(0,t.jsx)(o.span,{className:\\"icon icon-link\\"})}),\\"Setup Agent Bot in Kata Omnichat\\"]}),`\\n`,(0,t.jsxs)(o.ol,{children:[`\\n`,(0,t.jsxs)(o.li,{children:[\\"Go to the \\",(0,t.jsx)(o.strong,{children:\\"Settings\\"}),\\" menu in Omnichat.\\"]}),`\\n`,(0,t.jsxs)(o.li,{children:[\\"Then, click on the \\",(0,t.jsx)(o.strong,{children:\\"Integrations\\"}),\\" menu. You will see 2 cards: Agent bot and Webhooks.\\"]}),`\\n`,(0,t.jsxs)(o.li,{children:[\\"Click the \\",(0,t.jsx)(o.strong,{children:\\"Configure\\"}),\\" button in \\",(0,t.jsx)(o.strong,{children:\\"Agent bot\\"}),\\" card.\\"]}),`\\n`,(0,t.jsxs)(o.li,{children:[\\"Click \\",(0,t.jsx)(o.strong,{children:\\"Add new configuration\\"}),\\" to set up a new agent bot.\\"]}),`\\n`,(0,t.jsxs)(o.li,{children:[\\"Fill in the \\",(0,t.jsx)(o.strong,{children:\\"agent bot name and description\\"}),\\", then choose \\",(0,t.jsx)(o.strong,{children:\\"inboxes\\"}),\\" that you\\\\u2019ve created before. You can add multiple inboxes in 1 agent bot setup.\\"]}),`\\n`,(0,t.jsxs)(o.li,{children:[\\"Finally, you\\\\u2019re ready to finalize the first step by clicking the \\",(0,t.jsx)(o.strong,{children:\\"generate access token\\"}),\\" button. You must paste the access token into Platform. Go to create \\",(0,t.jsx)(o.a,{href:\\"/tutorials/create-simple-bot-handover-from-chatbot-to-agent\\",children:\\"simple chatbot handover tutorial\\"}),\\" to continue\\"]}),`\\n`]}),`\\n`,(0,t.jsx)(i,{caption:{title:\\"Figure 10\\",description:\\"Bot Generate Access Token\\"},src:\\"/assets/images/products/kata-omnichat/image10.webp\\",alt:\\"Kata Omnichat\\",naturalHeight:842,naturalWidth:1600})]})}}var v=y;function j(e,n){throw new Error(\\"Expected \\"+(n?\\"component\\":\\"object\\")+\\" `\\"+e+\\"` to be defined: you likely forgot to import, pass, or provide it.\\")}return x(C);})();\\n;return Component;"},"_id":"kata-omnichat/configure-your-agent-chatbot/setup-agent-bot-in-kata-omnichat.mdx","_raw":{"sourceFilePath":"kata-omnichat/configure-your-agent-chatbot/setup-agent-bot-in-kata-omnichat.mdx","sourceFileName":"setup-agent-bot-in-kata-omnichat.mdx","sourceFileDir":"kata-omnichat/configure-your-agent-chatbot","contentType":"mdx","flattenedPath":"kata-omnichat/configure-your-agent-chatbot/setup-agent-bot-in-kata-omnichat"},"type":"KataOmnichat","slug":["configure-your-agent-chatbot","setup-agent-bot-in-kata-omnichat"],"excerpt":"\\nAgent bot is a feature to integrate your Kata Platform chatbot with Omnichat as “agent”. This feature will let you see the conversation stream between bot and end-users and take over conversation from bot when needed"}');
;// CONCATENATED MODULE: ./.contentlayer/generated/KataOmnichat/kata-omnichat__enable-audio-notification__how-to-use.mdx.json
const kata_omnichat_enable_audio_notification_how_to_use_mdx_namespaceObject = JSON.parse('{"id":"audio-notification-how-to-use","section":"Enable Audio Notification","title":"How to use","prev":"audio-notification-introduction","next":"change-your-status-introduction","body":{"raw":"\\nTo enable audio notifications, you need to follow these steps\\n\\n1. Login account\\n2. Click on **_3 kebab menu icons_** in the left under the corner of your dashboard, besides your name\\n3. Click profile setting, then you will be directed to the page where you can get the setting for audio notifications\\n\\n<FigureImage\\n  caption={{ title: \'Figure 67\', description: `Enable Audio Notifications Setting` }}\\n  src=\\"/assets/images/products/kata-omnichat/image67.webp\\"\\n  alt=\\"Kata Omnichat\\"\\n  naturalHeight={1250}\\n  naturalWidth={1999}\\n/>\\n","code":"var Component=(()=>{var d=Object.create;var a=Object.defineProperty;var g=Object.getOwnPropertyDescriptor;var h=Object.getOwnPropertyNames;var m=Object.getPrototypeOf,f=Object.prototype.hasOwnProperty;var s=e=>a(e,\\"__esModule\\",{value:!0});var p=(e,t)=>()=>(t||e((t={exports:{}}).exports,t),t.exports),b=(e,t)=>{for(var o in t)a(e,o,{get:t[o],enumerable:!0})},c=(e,t,o,i)=>{if(t&&typeof t==\\"object\\"||typeof t==\\"function\\")for(let r of h(t))!f.call(e,r)&&(o||r!==\\"default\\")&&a(e,r,{get:()=>t[r],enumerable:!(i=g(t,r))||i.enumerable});return e},x=(e,t)=>c(s(a(e!=null?d(m(e)):{},\\"default\\",!t&&e&&e.__esModule?{get:()=>e.default,enumerable:!0}:{value:e,enumerable:!0})),e),w=(e=>(t,o)=>e&&e.get(t)||(o=c(s({}),t,1),e&&e.set(t,o),o))(typeof WeakMap!=\\"undefined\\"?new WeakMap:0);var u=p((E,l)=>{l.exports=_jsx_runtime});var F={};b(F,{default:()=>_,frontmatter:()=>y});var n=x(u()),y={id:\\"audio-notification-how-to-use\\",title:\\"How to use\\",prev:\\"audio-notification-introduction\\",next:\\"change-your-status-introduction\\",section:\\"Enable Audio Notification\\"};function j(e={}){let{wrapper:t}=e.components||{};return t?(0,n.jsx)(t,Object.assign({},e,{children:(0,n.jsx)(o,{})})):o();function o(){let i=Object.assign({p:\\"p\\",ol:\\"ol\\",li:\\"li\\",strong:\\"strong\\",em:\\"em\\"},e.components),{FigureImage:r}=i;return r||k(\\"FigureImage\\",!0),(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(i.p,{children:\\"To enable audio notifications, you need to follow these steps\\"}),`\\n`,(0,n.jsxs)(i.ol,{children:[`\\n`,(0,n.jsx)(i.li,{children:\\"Login account\\"}),`\\n`,(0,n.jsxs)(i.li,{children:[\\"Click on \\",(0,n.jsx)(i.strong,{children:(0,n.jsx)(i.em,{children:\\"3 kebab menu icons\\"})}),\\" in the left under the corner of your dashboard, besides your name\\"]}),`\\n`,(0,n.jsx)(i.li,{children:\\"Click profile setting, then you will be directed to the page where you can get the setting for audio notifications\\"}),`\\n`]}),`\\n`,(0,n.jsx)(r,{caption:{title:\\"Figure 67\\",description:\\"Enable Audio Notifications Setting\\"},src:\\"/assets/images/products/kata-omnichat/image67.webp\\",alt:\\"Kata Omnichat\\",naturalHeight:1250,naturalWidth:1999})]})}}var _=j;function k(e,t){throw new Error(\\"Expected \\"+(t?\\"component\\":\\"object\\")+\\" `\\"+e+\\"` to be defined: you likely forgot to import, pass, or provide it.\\")}return w(F);})();\\n;return Component;"},"_id":"kata-omnichat/enable-audio-notification/how-to-use.mdx","_raw":{"sourceFilePath":"kata-omnichat/enable-audio-notification/how-to-use.mdx","sourceFileName":"how-to-use.mdx","sourceFileDir":"kata-omnichat/enable-audio-notification","contentType":"mdx","flattenedPath":"kata-omnichat/enable-audio-notification/how-to-use"},"type":"KataOmnichat","slug":["enable-audio-notification","how-to-use"],"excerpt":"\\nTo enable audio notifications, you need to follow these steps\\n\\n1. Login account\\n2"}');
;// CONCATENATED MODULE: ./.contentlayer/generated/KataOmnichat/kata-omnichat__enable-audio-notification__introduction.mdx.json
const kata_omnichat_enable_audio_notification_introduction_mdx_namespaceObject = JSON.parse('{"id":"audio-notification-introduction","section":"Enable Audio Notification","title":"Introduction","prev":"access-token-how-to-use","next":"audio-notification-how-to-use","body":{"raw":"\\nIn this section, you can set up your audio notification. This can be set up by admin or agents. By ticking Enable audio notifications, it means you are agreeing to play audio notifications when a new conversation is created or new messages arrive.\\n","code":"var Component=(()=>{var p=Object.create;var a=Object.defineProperty;var f=Object.getOwnPropertyDescriptor;var m=Object.getOwnPropertyNames;var l=Object.getPrototypeOf,x=Object.prototype.hasOwnProperty;var c=t=>a(t,\\"__esModule\\",{value:!0});var g=(t,n)=>()=>(n||t((n={exports:{}}).exports,n),n.exports),h=(t,n)=>{for(var o in n)a(t,o,{get:n[o],enumerable:!0})},r=(t,n,o,i)=>{if(n&&typeof n==\\"object\\"||typeof n==\\"function\\")for(let e of m(n))!x.call(t,e)&&(o||e!==\\"default\\")&&a(t,e,{get:()=>n[e],enumerable:!(i=f(n,e))||i.enumerable});return t},y=(t,n)=>r(c(a(t!=null?p(l(t)):{},\\"default\\",!n&&t&&t.__esModule?{get:()=>t.default,enumerable:!0}:{value:t,enumerable:!0})),t),b=(t=>(n,o)=>t&&t.get(n)||(o=r(c({}),n,1),t&&t.set(n,o),o))(typeof WeakMap!=\\"undefined\\"?new WeakMap:0);var d=g((k,u)=>{u.exports=_jsx_runtime});var v={};h(v,{default:()=>_,frontmatter:()=>w});var s=y(d()),w={id:\\"audio-notification-introduction\\",title:\\"Introduction\\",prev:\\"access-token-how-to-use\\",next:\\"audio-notification-how-to-use\\",section:\\"Enable Audio Notification\\"};function j(t={}){let{wrapper:n}=t.components||{};return n?(0,s.jsx)(n,Object.assign({},t,{children:(0,s.jsx)(o,{})})):o();function o(){let i=Object.assign({p:\\"p\\"},t.components);return(0,s.jsx)(i.p,{children:\\"In this section, you can set up your audio notification. This can be set up by admin or agents. By ticking Enable audio notifications, it means you are agreeing to play audio notifications when a new conversation is created or new messages arrive.\\"})}}var _=j;return b(v);})();\\n;return Component;"},"_id":"kata-omnichat/enable-audio-notification/introduction.mdx","_raw":{"sourceFilePath":"kata-omnichat/enable-audio-notification/introduction.mdx","sourceFileName":"introduction.mdx","sourceFileDir":"kata-omnichat/enable-audio-notification","contentType":"mdx","flattenedPath":"kata-omnichat/enable-audio-notification/introduction"},"type":"KataOmnichat","slug":["enable-audio-notification","introduction"],"excerpt":"\\nIn this section, you can set up your audio notification. This can be set up by admin or agents"}');
;// CONCATENATED MODULE: ./.contentlayer/generated/KataOmnichat/kata-omnichat__get-access-token__how-to-use.mdx.json
const kata_omnichat_get_access_token_how_to_use_mdx_namespaceObject = JSON.parse('{"id":"access-token-how-to-use","section":"Get Access Token","title":"How to use","prev":"access-token-introduction","next":"audio-notification-introduction","body":{"raw":"\\n1. Login account\\n2. Click on **_3 kebab menu icons_** in the left under the corner of your dashboard, besides your name\\n3. Click profile setting, then you will be directed to the page where you can get access token.\\n\\n<FigureImage\\n  caption={{ title: \'Figure 66\', description: `Get Access Token` }}\\n  src=\\"/assets/images/products/kata-omnichat/image66.webp\\"\\n  alt=\\"Kata Omnichat\\"\\n  naturalHeight={1792}\\n  naturalWidth={828}\\n/>\\n","code":"var Component=(()=>{var u=Object.create;var c=Object.defineProperty;var m=Object.getOwnPropertyDescriptor;var g=Object.getOwnPropertyNames;var h=Object.getPrototypeOf,p=Object.prototype.hasOwnProperty;var s=e=>c(e,\\"__esModule\\",{value:!0});var f=(e,t)=>()=>(t||e((t={exports:{}}).exports,t),t.exports),x=(e,t)=>{for(var o in t)c(e,o,{get:t[o],enumerable:!0})},a=(e,t,o,i)=>{if(t&&typeof t==\\"object\\"||typeof t==\\"function\\")for(let r of g(t))!p.call(e,r)&&(o||r!==\\"default\\")&&c(e,r,{get:()=>t[r],enumerable:!(i=m(t,r))||i.enumerable});return e},b=(e,t)=>a(s(c(e!=null?u(h(e)):{},\\"default\\",!t&&e&&e.__esModule?{get:()=>e.default,enumerable:!0}:{value:e,enumerable:!0})),e),k=(e=>(t,o)=>e&&e.get(t)||(o=a(s({}),t,1),e&&e.set(t,o),o))(typeof WeakMap!=\\"undefined\\"?new WeakMap:0);var d=f((M,l)=>{l.exports=_jsx_runtime});var F={};x(F,{default:()=>_,frontmatter:()=>j});var n=b(d()),j={id:\\"access-token-how-to-use\\",title:\\"How to use\\",prev:\\"access-token-introduction\\",next:\\"audio-notification-introduction\\",section:\\"Get Access Token\\"};function w(e={}){let{wrapper:t}=e.components||{};return t?(0,n.jsx)(t,Object.assign({},e,{children:(0,n.jsx)(o,{})})):o();function o(){let i=Object.assign({ol:\\"ol\\",li:\\"li\\",strong:\\"strong\\",em:\\"em\\"},e.components),{FigureImage:r}=i;return r||y(\\"FigureImage\\",!0),(0,n.jsxs)(n.Fragment,{children:[(0,n.jsxs)(i.ol,{children:[`\\n`,(0,n.jsx)(i.li,{children:\\"Login account\\"}),`\\n`,(0,n.jsxs)(i.li,{children:[\\"Click on \\",(0,n.jsx)(i.strong,{children:(0,n.jsx)(i.em,{children:\\"3 kebab menu icons\\"})}),\\" in the left under the corner of your dashboard, besides your name\\"]}),`\\n`,(0,n.jsx)(i.li,{children:\\"Click profile setting, then you will be directed to the page where you can get access token.\\"}),`\\n`]}),`\\n`,(0,n.jsx)(r,{caption:{title:\\"Figure 66\\",description:\\"Get Access Token\\"},src:\\"/assets/images/products/kata-omnichat/image66.webp\\",alt:\\"Kata Omnichat\\",naturalHeight:1792,naturalWidth:828})]})}}var _=w;function y(e,t){throw new Error(\\"Expected \\"+(t?\\"component\\":\\"object\\")+\\" `\\"+e+\\"` to be defined: you likely forgot to import, pass, or provide it.\\")}return k(F);})();\\n;return Component;"},"_id":"kata-omnichat/get-access-token/how-to-use.mdx","_raw":{"sourceFilePath":"kata-omnichat/get-access-token/how-to-use.mdx","sourceFileName":"how-to-use.mdx","sourceFileDir":"kata-omnichat/get-access-token","contentType":"mdx","flattenedPath":"kata-omnichat/get-access-token/how-to-use"},"type":"KataOmnichat","slug":["get-access-token","how-to-use"],"excerpt":"\\n1. Login account\\n2"}');
;// CONCATENATED MODULE: ./.contentlayer/generated/KataOmnichat/kata-omnichat__get-access-token__introduction.mdx.json
const kata_omnichat_get_access_token_introduction_mdx_namespaceObject = JSON.parse('{"id":"access-token-introduction","section":"Get Access Token","title":"Introduction","prev":"email-notification-how-to-use","next":"access-token-how-to-use","body":{"raw":"\\nThis token can be used if you are building an API-based integration. This can be accessed by admin and agents.\\n","code":"var Component=(()=>{var m=Object.create;var i=Object.defineProperty;var p=Object.getOwnPropertyDescriptor;var l=Object.getOwnPropertyNames;var x=Object.getPrototypeOf,b=Object.prototype.hasOwnProperty;var a=e=>i(e,\\"__esModule\\",{value:!0});var f=(e,t)=>()=>(t||e((t={exports:{}}).exports,t),t.exports),h=(e,t)=>{for(var n in t)i(e,n,{get:t[n],enumerable:!0})},r=(e,t,n,s)=>{if(t&&typeof t==\\"object\\"||typeof t==\\"function\\")for(let o of l(t))!b.call(e,o)&&(n||o!==\\"default\\")&&i(e,o,{get:()=>t[o],enumerable:!(s=p(t,o))||s.enumerable});return e},g=(e,t)=>r(a(i(e!=null?m(x(e)):{},\\"default\\",!t&&e&&e.__esModule?{get:()=>e.default,enumerable:!0}:{value:e,enumerable:!0})),e),j=(e=>(t,n)=>e&&e.get(t)||(n=r(a({}),t,1),e&&e.set(t,n),n))(typeof WeakMap!=\\"undefined\\"?new WeakMap:0);var d=f((T,u)=>{u.exports=_jsx_runtime});var y={};h(y,{default:()=>w,frontmatter:()=>_});var c=g(d()),_={id:\\"access-token-introduction\\",title:\\"Introduction\\",prev:\\"email-notification-how-to-use\\",next:\\"access-token-how-to-use\\",section:\\"Get Access Token\\"};function k(e={}){let{wrapper:t}=e.components||{};return t?(0,c.jsx)(t,Object.assign({},e,{children:(0,c.jsx)(n,{})})):n();function n(){let s=Object.assign({p:\\"p\\"},e.components);return(0,c.jsx)(s.p,{children:\\"This token can be used if you are building an API-based integration. This can be accessed by admin and agents.\\"})}}var w=k;return j(y);})();\\n;return Component;"},"_id":"kata-omnichat/get-access-token/introduction.mdx","_raw":{"sourceFilePath":"kata-omnichat/get-access-token/introduction.mdx","sourceFileName":"introduction.mdx","sourceFileDir":"kata-omnichat/get-access-token","contentType":"mdx","flattenedPath":"kata-omnichat/get-access-token/introduction"},"type":"KataOmnichat","slug":["get-access-token","introduction"],"excerpt":"\\nThis token can be used if you are building an API-based integration. This can be accessed by admin and agents"}');
;// CONCATENATED MODULE: ./.contentlayer/generated/KataOmnichat/kata-omnichat__getting-started__connect-your-instagram-messaging-inbox.mdx.json
const kata_omnichat_getting_started_connect_your_instagram_messaging_inbox_mdx_namespaceObject = JSON.parse('{"id":"connect-your-instagram-messaging-inbox","section":"Getting Started","title":"Connect your Instagram Messaging inbox","prev":"register-your-account-first","next":"connect-your-waba-inbox","body":{"raw":"\\n1. In the **Getting Started** page, you have to click the **Connect** button in **Instagram Messaging**. Or, you can go to **Inboxes** menu, click **Add new inbox** button and click **Instagram** channel.\\n2. You will see the **Get Started** page of Instagram Messaging and follow all the steps, including answering some integration questions and mini survey.\\n3. The system will automatically check the eligibility of your Instagram accounts. If it’s eligible, you will get a success message and if it’s not eligible you will be declined to use Instagram Messaging in Kata Omnichat.\\n\\n<FigureImage\\n  caption={{ title: \'Figure 7\', description: `Connect Instagram Inbox` }}\\n  src=\\"/assets/images/products/kata-omnichat/image7.webp\\"\\n  alt=\\"Kata Omnichat\\"\\n  naturalHeight={843}\\n  naturalWidth={1600}\\n/>\\n","code":"var Component=(()=>{var u=Object.create;var a=Object.defineProperty;var d=Object.getOwnPropertyDescriptor;var m=Object.getOwnPropertyNames;var h=Object.getPrototypeOf,b=Object.prototype.hasOwnProperty;var s=n=>a(n,\\"__esModule\\",{value:!0});var p=(n,t)=>()=>(t||n((t={exports:{}}).exports,t),t.exports),x=(n,t)=>{for(var o in t)a(n,o,{get:t[o],enumerable:!0})},c=(n,t,o,i)=>{if(t&&typeof t==\\"object\\"||typeof t==\\"function\\")for(let r of m(t))!b.call(n,r)&&(o||r!==\\"default\\")&&a(n,r,{get:()=>t[r],enumerable:!(i=d(t,r))||i.enumerable});return n},f=(n,t)=>c(s(a(n!=null?u(h(n)):{},\\"default\\",!t&&n&&n.__esModule?{get:()=>n.default,enumerable:!0}:{value:n,enumerable:!0})),n),y=(n=>(t,o)=>n&&n.get(t)||(o=c(s({}),t,1),n&&n.set(t,o),o))(typeof WeakMap!=\\"undefined\\"?new WeakMap:0);var g=p((C,l)=>{l.exports=_jsx_runtime});var _={};x(_,{default:()=>j,frontmatter:()=>I});var e=f(g()),I={id:\\"connect-your-instagram-messaging-inbox\\",title:\\"Connect your Instagram Messaging inbox\\",prev:\\"register-your-account-first\\",next:\\"connect-your-waba-inbox\\",section:\\"Getting Started\\"};function w(n={}){let{wrapper:t}=n.components||{};return t?(0,e.jsx)(t,Object.assign({},n,{children:(0,e.jsx)(o,{})})):o();function o(){let i=Object.assign({ol:\\"ol\\",li:\\"li\\",strong:\\"strong\\"},n.components),{FigureImage:r}=i;return r||M(\\"FigureImage\\",!0),(0,e.jsxs)(e.Fragment,{children:[(0,e.jsxs)(i.ol,{children:[`\\n`,(0,e.jsxs)(i.li,{children:[\\"In the \\",(0,e.jsx)(i.strong,{children:\\"Getting Started\\"}),\\" page, you have to click the \\",(0,e.jsx)(i.strong,{children:\\"Connect\\"}),\\" button in \\",(0,e.jsx)(i.strong,{children:\\"Instagram Messaging\\"}),\\". Or, you can go to \\",(0,e.jsx)(i.strong,{children:\\"Inboxes\\"}),\\" menu, click \\",(0,e.jsx)(i.strong,{children:\\"Add new inbox\\"}),\\" button and click \\",(0,e.jsx)(i.strong,{children:\\"Instagram\\"}),\\" channel.\\"]}),`\\n`,(0,e.jsxs)(i.li,{children:[\\"You will see the \\",(0,e.jsx)(i.strong,{children:\\"Get Started\\"}),\\" page of Instagram Messaging and follow all the steps, including answering some integration questions and mini survey.\\"]}),`\\n`,(0,e.jsx)(i.li,{children:\\"The system will automatically check the eligibility of your Instagram accounts. If it\\\\u2019s eligible, you will get a success message and if it\\\\u2019s not eligible you will be declined to use Instagram Messaging in Kata Omnichat.\\"}),`\\n`]}),`\\n`,(0,e.jsx)(r,{caption:{title:\\"Figure 7\\",description:\\"Connect Instagram Inbox\\"},src:\\"/assets/images/products/kata-omnichat/image7.webp\\",alt:\\"Kata Omnichat\\",naturalHeight:843,naturalWidth:1600})]})}}var j=w;function M(n,t){throw new Error(\\"Expected \\"+(t?\\"component\\":\\"object\\")+\\" `\\"+n+\\"` to be defined: you likely forgot to import, pass, or provide it.\\")}return y(_);})();\\n;return Component;"},"_id":"kata-omnichat/getting-started/connect-your-instagram-messaging-inbox.mdx","_raw":{"sourceFilePath":"kata-omnichat/getting-started/connect-your-instagram-messaging-inbox.mdx","sourceFileName":"connect-your-instagram-messaging-inbox.mdx","sourceFileDir":"kata-omnichat/getting-started","contentType":"mdx","flattenedPath":"kata-omnichat/getting-started/connect-your-instagram-messaging-inbox"},"type":"KataOmnichat","slug":["getting-started","connect-your-instagram-messaging-inbox"],"excerpt":"\\n1. In the **Getting Started** page, you have to click the **Connect** button in **Instagram Messaging**"}');
;// CONCATENATED MODULE: ./.contentlayer/generated/KataOmnichat/kata-omnichat__getting-started__connect-your-waba-inbox.mdx.json
const kata_omnichat_getting_started_connect_your_waba_inbox_mdx_namespaceObject = JSON.parse('{"id":"connect-your-waba-inbox","section":"Getting Started","title":"Connect your WABA inbox","prev":"connect-your-instagram-messaging-inbox","next":"setup-agent-bot-in-kata-omnichat","body":{"raw":"\\n1. In the **Getting Started** page, you have to click the **Connect** button in **WhatsApp Business API**. Or, you can go to **Inboxes** menu, click **Add new inbox** button and click **WhatsApp Business API** channel.\\n2. You will see the **Get Started** page of WhatsApp Channel, then you have to create the **Inbox Name** and fill in the **username** and **password** from your WABA’s API credentials.\\n3. You have to open your **Business Dashboard account > WhatsApp details** and then copy username and password from API credentials. Paste the username and password to Kata Omnichat, then the system will automatically generate the webhook URL.\\n4. Lastly, copy the Webhook URL that has been generated, paste it into **WhatsApp Details > Webhook URL** in Business Dashboard.\\n\\n<FigureImage\\n  caption={{ title: \'Figure 8\', description: `Webhook URL for whatsapp business dashboard account` }}\\n  src=\\"/assets/images/products/kata-omnichat/image8.webp\\"\\n  alt=\\"Kata Omnichat\\"\\n  naturalHeight={842}\\n  naturalWidth={1600}\\n/>\\n\\n<FigureImage\\n  caption={{ title: \'Figure 9\', description: `Integrate webhook Omnichat in Business Dashboard` }}\\n  src=\\"/assets/images/products/kata-omnichat/image9.webp\\"\\n  alt=\\"Kata Omnichat\\"\\n  naturalHeight={1600}\\n  naturalWidth={1471}\\n/>\\n","code":"var Component=(()=>{var d=Object.create;var i=Object.defineProperty;var u=Object.getOwnPropertyDescriptor;var g=Object.getOwnPropertyNames;var p=Object.getPrototypeOf,m=Object.prototype.hasOwnProperty;var r=t=>i(t,\\"__esModule\\",{value:!0});var b=(t,n)=>()=>(n||t((n={exports:{}}).exports,n),n.exports),x=(t,n)=>{for(var o in n)i(t,o,{get:n[o],enumerable:!0})},c=(t,n,o,a)=>{if(n&&typeof n==\\"object\\"||typeof n==\\"function\\")for(let s of g(n))!m.call(t,s)&&(o||s!==\\"default\\")&&i(t,s,{get:()=>n[s],enumerable:!(a=u(n,s))||a.enumerable});return t},y=(t,n)=>c(r(i(t!=null?d(p(t)):{},\\"default\\",!n&&t&&t.__esModule?{get:()=>t.default,enumerable:!0}:{value:t,enumerable:!0})),t),f=(t=>(n,o)=>t&&t.get(n)||(o=c(r({}),n,1),t&&t.set(n,o),o))(typeof WeakMap!=\\"undefined\\"?new WeakMap:0);var l=b((_,h)=>{h.exports=_jsx_runtime});var I={};x(I,{default:()=>k,frontmatter:()=>w});var e=y(l()),w={id:\\"connect-your-waba-inbox\\",title:\\"Connect your WABA inbox\\",prev:\\"connect-your-instagram-messaging-inbox\\",next:\\"setup-agent-bot-in-kata-omnichat\\",section:\\"Getting Started\\"};function A(t={}){let{wrapper:n}=t.components||{};return n?(0,e.jsx)(n,Object.assign({},t,{children:(0,e.jsx)(o,{})})):o();function o(){let a=Object.assign({ol:\\"ol\\",li:\\"li\\",strong:\\"strong\\"},t.components),{FigureImage:s}=a;return s||W(\\"FigureImage\\",!0),(0,e.jsxs)(e.Fragment,{children:[(0,e.jsxs)(a.ol,{children:[`\\n`,(0,e.jsxs)(a.li,{children:[\\"In the \\",(0,e.jsx)(a.strong,{children:\\"Getting Started\\"}),\\" page, you have to click the \\",(0,e.jsx)(a.strong,{children:\\"Connect\\"}),\\" button in \\",(0,e.jsx)(a.strong,{children:\\"WhatsApp Business API\\"}),\\". Or, you can go to \\",(0,e.jsx)(a.strong,{children:\\"Inboxes\\"}),\\" menu, click \\",(0,e.jsx)(a.strong,{children:\\"Add new inbox\\"}),\\" button and click \\",(0,e.jsx)(a.strong,{children:\\"WhatsApp Business API\\"}),\\" channel.\\"]}),`\\n`,(0,e.jsxs)(a.li,{children:[\\"You will see the \\",(0,e.jsx)(a.strong,{children:\\"Get Started\\"}),\\" page of WhatsApp Channel, then you have to create the \\",(0,e.jsx)(a.strong,{children:\\"Inbox Name\\"}),\\" and fill in the \\",(0,e.jsx)(a.strong,{children:\\"username\\"}),\\" and \\",(0,e.jsx)(a.strong,{children:\\"password\\"}),\\" from your WABA\\\\u2019s API credentials.\\"]}),`\\n`,(0,e.jsxs)(a.li,{children:[\\"You have to open your \\",(0,e.jsx)(a.strong,{children:\\"Business Dashboard account > WhatsApp details\\"}),\\" and then copy username and password from API credentials. Paste the username and password to Kata Omnichat, then the system will automatically generate the webhook URL.\\"]}),`\\n`,(0,e.jsxs)(a.li,{children:[\\"Lastly, copy the Webhook URL that has been generated, paste it into \\",(0,e.jsx)(a.strong,{children:\\"WhatsApp Details > Webhook URL\\"}),\\" in Business Dashboard.\\"]}),`\\n`]}),`\\n`,(0,e.jsx)(s,{caption:{title:\\"Figure 8\\",description:\\"Webhook URL for whatsapp business dashboard account\\"},src:\\"/assets/images/products/kata-omnichat/image8.webp\\",alt:\\"Kata Omnichat\\",naturalHeight:842,naturalWidth:1600}),`\\n`,(0,e.jsx)(s,{caption:{title:\\"Figure 9\\",description:\\"Integrate webhook Omnichat in Business Dashboard\\"},src:\\"/assets/images/products/kata-omnichat/image9.webp\\",alt:\\"Kata Omnichat\\",naturalHeight:1600,naturalWidth:1471})]})}}var k=A;function W(t,n){throw new Error(\\"Expected \\"+(n?\\"component\\":\\"object\\")+\\" `\\"+t+\\"` to be defined: you likely forgot to import, pass, or provide it.\\")}return f(I);})();\\n;return Component;"},"_id":"kata-omnichat/getting-started/connect-your-waba-inbox.mdx","_raw":{"sourceFilePath":"kata-omnichat/getting-started/connect-your-waba-inbox.mdx","sourceFileName":"connect-your-waba-inbox.mdx","sourceFileDir":"kata-omnichat/getting-started","contentType":"mdx","flattenedPath":"kata-omnichat/getting-started/connect-your-waba-inbox"},"type":"KataOmnichat","slug":["getting-started","connect-your-waba-inbox"],"excerpt":"\\n1. In the **Getting Started** page, you have to click the **Connect** button in **WhatsApp Business API**"}');
;// CONCATENATED MODULE: ./.contentlayer/generated/KataOmnichat/kata-omnichat__getting-started__register-your-account-first.mdx.json
const kata_omnichat_getting_started_register_your_account_first_mdx_namespaceObject = JSON.parse('{"id":"register-your-account-first","section":"Getting Started","title":"Register your account first","prev":"prepare-your-waba-account","next":"connect-your-instagram-messaging-inbox","body":{"raw":"\\n<YoutubeEmbedWrapper>\\n  <YoutubeEmbed id=\\"VNgf-ciA-xA\\" params=\\"v=VNgf-ciA-xA\\" title=\\"Getting Started Kata Omnichat\\" />\\n</YoutubeEmbedWrapper>\\n\\n1.  Go to [https://omnichat.kata.ai/](https://omnichat.kata.ai/) and click **“Create New Account”**. After that, fill in your **Work email** and **Password**.\\n2.  After clicking the **Create account** button, you’ll be directed to the Onboarding page. You have to fill in some information related to your business and your personal details.\\n3.  After you’ve done the **Onboarding** process, you’ll be directed to the **Getting Started** page with an unverified account.\\n4.  To verify your account, you have to check your email (the verification link is automatically sent to your email) or click the **Verify account** banner on top of your screen to resend an email verification.\\n5.  After you click the verification button in email, you will go back to the **Getting Started** page with an activated account. You will also receive a product tutorial link in your email.\\n","code":"var Component=(()=>{var g=Object.create;var a=Object.defineProperty;var m=Object.getOwnPropertyDescriptor;var f=Object.getOwnPropertyNames;var p=Object.getPrototypeOf,y=Object.prototype.hasOwnProperty;var l=t=>a(t,\\"__esModule\\",{value:!0});var b=(t,e)=>()=>(e||t((e={exports:{}}).exports,e),e.exports),x=(t,e)=>{for(var r in e)a(t,r,{get:e[r],enumerable:!0})},s=(t,e,r,o)=>{if(e&&typeof e==\\"object\\"||typeof e==\\"function\\")for(let i of f(e))!y.call(t,i)&&(r||i!==\\"default\\")&&a(t,i,{get:()=>e[i],enumerable:!(o=m(e,i))||o.enumerable});return t},v=(t,e)=>s(l(a(t!=null?g(p(t)):{},\\"default\\",!e&&t&&t.__esModule?{get:()=>t.default,enumerable:!0}:{value:t,enumerable:!0})),t),k=(t=>(e,r)=>t&&t.get(e)||(r=s(l({}),e,1),t&&t.set(e,r),r))(typeof WeakMap!=\\"undefined\\"?new WeakMap:0);var d=b((Y,u)=>{u.exports=_jsx_runtime});var _={};x(_,{default:()=>j,frontmatter:()=>w});var n=v(d()),w={id:\\"register-your-account-first\\",title:\\"Register your account first\\",prev:\\"prepare-your-waba-account\\",next:\\"connect-your-instagram-messaging-inbox\\",section:\\"Getting Started\\"};function A(t={}){let{wrapper:e}=t.components||{};return e?(0,n.jsx)(e,Object.assign({},t,{children:(0,n.jsx)(r,{})})):r();function r(){let o=Object.assign({ol:\\"ol\\",li:\\"li\\",a:\\"a\\",strong:\\"strong\\"},t.components),{YoutubeEmbedWrapper:i,YoutubeEmbed:c}=o;return c||h(\\"YoutubeEmbed\\",!0),i||h(\\"YoutubeEmbedWrapper\\",!0),(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(i,{children:(0,n.jsx)(c,{id:\\"VNgf-ciA-xA\\",params:\\"v=VNgf-ciA-xA\\",title:\\"Getting Started Kata Omnichat\\"})}),`\\n`,(0,n.jsxs)(o.ol,{children:[`\\n`,(0,n.jsxs)(o.li,{children:[\\"Go to \\",(0,n.jsx)(o.a,{href:\\"https://omnichat.kata.ai/\\",children:\\"https://omnichat.kata.ai/\\"}),\\" and click \\",(0,n.jsx)(o.strong,{children:\\"\\\\u201CCreate New Account\\\\u201D\\"}),\\". After that, fill in your \\",(0,n.jsx)(o.strong,{children:\\"Work email\\"}),\\" and \\",(0,n.jsx)(o.strong,{children:\\"Password\\"}),\\".\\"]}),`\\n`,(0,n.jsxs)(o.li,{children:[\\"After clicking the \\",(0,n.jsx)(o.strong,{children:\\"Create account\\"}),\\" button, you\\\\u2019ll be directed to the Onboarding page. You have to fill in some information related to your business and your personal details.\\"]}),`\\n`,(0,n.jsxs)(o.li,{children:[\\"After you\\\\u2019ve done the \\",(0,n.jsx)(o.strong,{children:\\"Onboarding\\"}),\\" process, you\\\\u2019ll be directed to the \\",(0,n.jsx)(o.strong,{children:\\"Getting Started\\"}),\\" page with an unverified account.\\"]}),`\\n`,(0,n.jsxs)(o.li,{children:[\\"To verify your account, you have to check your email (the verification link is automatically sent to your email) or click the \\",(0,n.jsx)(o.strong,{children:\\"Verify account\\"}),\\" banner on top of your screen to resend an email verification.\\"]}),`\\n`,(0,n.jsxs)(o.li,{children:[\\"After you click the verification button in email, you will go back to the \\",(0,n.jsx)(o.strong,{children:\\"Getting Started\\"}),\\" page with an activated account. You will also receive a product tutorial link in your email.\\"]}),`\\n`]})]})}}var j=A;function h(t,e){throw new Error(\\"Expected \\"+(e?\\"component\\":\\"object\\")+\\" `\\"+t+\\"` to be defined: you likely forgot to import, pass, or provide it.\\")}return k(_);})();\\n;return Component;"},"_id":"kata-omnichat/getting-started/register-your-account-first.mdx","_raw":{"sourceFilePath":"kata-omnichat/getting-started/register-your-account-first.mdx","sourceFileName":"register-your-account-first.mdx","sourceFileDir":"kata-omnichat/getting-started","contentType":"mdx","flattenedPath":"kata-omnichat/getting-started/register-your-account-first"},"type":"KataOmnichat","slug":["getting-started","register-your-account-first"],"excerpt":"\\n\\n  \\n\\n\\n1.  Go to [https://omnichat"}');
;// CONCATENATED MODULE: ./.contentlayer/generated/KataOmnichat/kata-omnichat__how-to-use-the-dashboard__change-password.mdx.json
const kata_omnichat_how_to_use_the_dashboard_change_password_mdx_namespaceObject = JSON.parse('{"id":"dashboard-change-password","section":"How to Use the Dashboard","title":"Change password","prev":"dashboard-update-profile","next":"configure-account-introduction","body":{"raw":"\\nChanging password is the feature where agents and administrators can change their passwords for the first time after being invited via email. Here are the steps to change the password after being invited.\\n\\n1. Go to the email invitation, then click **Verify Account**, then you will be directed to Omnichat that has been logged in\\n2. Go to **Profile Settings** in the bottom left corner\\n3. Input current password that is stated in the email verification\\n4. Set your new password\\n5. Click the **“Update Profile”** button\\n\\n<FigureImage\\n  caption={{ title: \'Figure 13\', description: `Change Password` }}\\n  src=\\"/assets/images/products/kata-omnichat/image13.webp\\"\\n  alt=\\"Kata Omnichat\\"\\n  naturalHeight={742}\\n  naturalWidth={1600}\\n/>\\n\\nChanging passwords helps you to maintain your profile security by regularly changing your password. If you\\n\\n**Note**: Password must contain at least one uppercase character (A-Z), at least one numeric character (0..9), at least one special character\\n\\n```\\n!@#$%^&\\\\*()\\\\_+-=[]{}|\'\\"/\\\\^.,`<>:;?~\\n```\\n","code":"var Component=(()=>{var h=Object.create;var o=Object.defineProperty;var p=Object.getOwnPropertyDescriptor;var g=Object.getOwnPropertyNames;var u=Object.getPrototypeOf,m=Object.prototype.hasOwnProperty;var s=e=>o(e,\\"__esModule\\",{value:!0});var f=(e,t)=>()=>(t||e((t={exports:{}}).exports,t),t.exports),w=(e,t)=>{for(var i in t)o(e,i,{get:t[i],enumerable:!0})},c=(e,t,i,r)=>{if(t&&typeof t==\\"object\\"||typeof t==\\"function\\")for(let a of g(t))!m.call(e,a)&&(i||a!==\\"default\\")&&o(e,a,{get:()=>t[a],enumerable:!(r=p(t,a))||r.enumerable});return e},b=(e,t)=>c(s(o(e!=null?h(u(e)):{},\\"default\\",!t&&e&&e.__esModule?{get:()=>e.default,enumerable:!0}:{value:e,enumerable:!0})),e),y=(e=>(t,i)=>e&&e.get(t)||(i=c(s({}),t,1),e&&e.set(t,i),i))(typeof WeakMap!=\\"undefined\\"?new WeakMap:0);var d=f((k,l)=>{l.exports=_jsx_runtime});var C={};w(C,{default:()=>j,frontmatter:()=>x});var n=b(d()),x={id:\\"dashboard-change-password\\",title:\\"Change password\\",prev:\\"dashboard-update-profile\\",next:\\"configure-account-introduction\\",section:\\"How to Use the Dashboard\\"};function _(e={}){let{wrapper:t}=e.components||{};return t?(0,n.jsx)(t,Object.assign({},e,{children:(0,n.jsx)(i,{})})):i();function i(){let r=Object.assign({p:\\"p\\",ol:\\"ol\\",li:\\"li\\",strong:\\"strong\\",pre:\\"pre\\",code:\\"code\\",span:\\"span\\"},e.components),{FigureImage:a}=r;return a||v(\\"FigureImage\\",!0),(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(r.p,{children:\\"Changing password is the feature where agents and administrators can change their passwords for the first time after being invited via email. Here are the steps to change the password after being invited.\\"}),`\\n`,(0,n.jsxs)(r.ol,{children:[`\\n`,(0,n.jsxs)(r.li,{children:[\\"Go to the email invitation, then click \\",(0,n.jsx)(r.strong,{children:\\"Verify Account\\"}),\\", then you will be directed to Omnichat that has been logged in\\"]}),`\\n`,(0,n.jsxs)(r.li,{children:[\\"Go to \\",(0,n.jsx)(r.strong,{children:\\"Profile Settings\\"}),\\" in the bottom left corner\\"]}),`\\n`,(0,n.jsx)(r.li,{children:\\"Input current password that is stated in the email verification\\"}),`\\n`,(0,n.jsx)(r.li,{children:\\"Set your new password\\"}),`\\n`,(0,n.jsxs)(r.li,{children:[\\"Click the \\",(0,n.jsx)(r.strong,{children:\\"\\\\u201CUpdate Profile\\\\u201D\\"}),\\" button\\"]}),`\\n`]}),`\\n`,(0,n.jsx)(a,{caption:{title:\\"Figure 13\\",description:\\"Change Password\\"},src:\\"/assets/images/products/kata-omnichat/image13.webp\\",alt:\\"Kata Omnichat\\",naturalHeight:742,naturalWidth:1600}),`\\n`,(0,n.jsx)(r.p,{children:\\"Changing passwords helps you to maintain your profile security by regularly changing your password. If you\\"}),`\\n`,(0,n.jsxs)(r.p,{children:[(0,n.jsx)(r.strong,{children:\\"Note\\"}),\\": Password must contain at least one uppercase character (A-Z), at least one numeric character (0..9), at least one special character\\"]}),`\\n`,(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{className:\\"code-highlight\\",children:(0,n.jsx)(r.span,{className:\\"code-line\\",children:`!@#$%^&\\\\\\\\*()\\\\\\\\_+-=[]{}|\'\\"/\\\\\\\\^.,\\\\`<>:;?~\\n`})})})]})}}var j=_;function v(e,t){throw new Error(\\"Expected \\"+(t?\\"component\\":\\"object\\")+\\" `\\"+e+\\"` to be defined: you likely forgot to import, pass, or provide it.\\")}return y(C);})();\\n;return Component;"},"_id":"kata-omnichat/how-to-use-the-dashboard/change-password.mdx","_raw":{"sourceFilePath":"kata-omnichat/how-to-use-the-dashboard/change-password.mdx","sourceFileName":"change-password.mdx","sourceFileDir":"kata-omnichat/how-to-use-the-dashboard","contentType":"mdx","flattenedPath":"kata-omnichat/how-to-use-the-dashboard/change-password"},"type":"KataOmnichat","slug":["how-to-use-the-dashboard","change-password"],"excerpt":"\\nChanging password is the feature where agents and administrators can change their passwords for the first time after being invited via email. Here are the steps to change the password after being invited"}');
;// CONCATENATED MODULE: ./.contentlayer/generated/KataOmnichat/kata-omnichat__how-to-use-the-dashboard__update-profile.mdx.json
const kata_omnichat_how_to_use_the_dashboard_update_profile_mdx_namespaceObject = JSON.parse('{"id":"dashboard-update-profile","section":"How to Use the Dashboard","hiddenTitle":"Update Profile","prev":"create-agent-bot-from-kata-platform","next":"dashboard-change-password","body":{"raw":"\\n## Configure your profile\\n\\nKata Omnichat allows both admin and agents to _set up your profile_ by changing display picture, name, and changing password. It is easier to identify an account in the team.\\n\\nTo set up your profile, you can follow these steps:\\n\\n1. Login to your account\\n2. Click on **_3 kebab menu icons_** in the left under the corner of your dashboard, besides your name\\n3. Click **Profile Setting**\\n4. You will be directed to the page where you can set up your profile\\n\\n<FigureImage\\n  caption={{ title: \'Figure 11\', description: `Profile Setting` }}\\n  src=\\"/assets/images/products/kata-omnichat/image11.webp\\"\\n  alt=\\"Kata Omnichat\\"\\n  naturalHeight={879}\\n  naturalWidth={1600}\\n/>\\n\\n## Update profile\\n\\nOn this page, Omnichat provides the place for the admin and agent to update the profile to make it easier to identify in the team.\\n\\n<FigureImage\\n  caption={{ title: \'Figure 12\', description: `Update profile` }}\\n  src=\\"/assets/images/products/kata-omnichat/image12.webp\\"\\n  alt=\\"Kata Omnichat\\"\\n  naturalHeight={809}\\n  naturalWidth={1600}\\n/>\\n\\nThese are the fields to update your profile:\\n\\n<Table>\\n  <TableHead>\\n    <TableHeadRow>\\n      <TableHeadCell>Field Name</TableHeadCell>\\n      <TableHeadCell>Description</TableHeadCell>\\n    </TableHeadRow>\\n  </TableHead>\\n  <TableBody>\\n    <TableBodyRow>\\n      <TableBodyCell>Profile image</TableBodyCell>\\n      <TableBodyCell>\\n        A square image that suits your profile. If no image is provided, then the system would take Gravatar Image if\\n        available\\n      </TableBodyCell>\\n    </TableBodyRow>\\n    <TableBodyRow>\\n      <TableBodyCell>Full name</TableBodyCell>\\n      <TableBodyCell>Provide your full name. e.g.: John Hopkins</TableBodyCell>\\n    </TableBodyRow>\\n    <TableBodyRow>\\n      <TableBodyCell>Display Name</TableBodyCell>\\n      <TableBodyCell>Provide a name that you want to be displayed on the chat/emails e.g.: John H</TableBodyCell>\\n    </TableBodyRow>\\n    <TableBodyRow>\\n      <TableBodyCell>Your email address</TableBodyCell>\\n      <TableBodyCell>\\n        This email address will be used to send notifications, you will be using this email address to log in to\\n        Omnichat.\\n        <br />\\n        Note: After you update your email, you will be automatically logged out and you need to log in with the updated\\n        email with the same password.\\n      </TableBodyCell>\\n    </TableBodyRow>\\n  </TableBody>\\n</Table>\\n\\nAfter clicking the **Update profile** button, then your update will be reflected immediately. If the changes are successful, you will see a message \\"Your profile has been updated successfully.\\"\\n","code":"var Component=(()=>{var w=Object.create;var s=Object.defineProperty;var T=Object.getOwnPropertyDescriptor;var k=Object.getOwnPropertyNames;var x=Object.getPrototypeOf,H=Object.prototype.hasOwnProperty;var f=i=>s(i,\\"__esModule\\",{value:!0});var C=(i,n)=>()=>(n||i((n={exports:{}}).exports,n),n.exports),j=(i,n)=>{for(var t in n)s(i,t,{get:n[t],enumerable:!0})},g=(i,n,t,a)=>{if(n&&typeof n==\\"object\\"||typeof n==\\"function\\")for(let r of k(n))!H.call(i,r)&&(t||r!==\\"default\\")&&s(i,r,{get:()=>n[r],enumerable:!(a=T(n,r))||a.enumerable});return i},v=(i,n)=>g(f(s(i!=null?w(x(i)):{},\\"default\\",!n&&i&&i.__esModule?{get:()=>i.default,enumerable:!0}:{value:i,enumerable:!0})),i),F=(i=>(n,t)=>i&&i.get(n)||(t=g(f({}),n,1),i&&i.set(n,t),t))(typeof WeakMap!=\\"undefined\\"?new WeakMap:0);var b=C((P,y)=>{y.exports=_jsx_runtime});var B={};j(B,{default:()=>N,frontmatter:()=>O});var e=v(b()),O={id:\\"dashboard-update-profile\\",prev:\\"create-agent-bot-from-kata-platform\\",next:\\"dashboard-change-password\\",hiddenTitle:\\"Update Profile\\",section:\\"How to Use the Dashboard\\"};function _(i={}){let{wrapper:n}=i.components||{};return n?(0,e.jsx)(n,Object.assign({},i,{children:(0,e.jsx)(t,{})})):t();function t(){let a=Object.assign({h2:\\"h2\\",a:\\"a\\",span:\\"span\\",p:\\"p\\",em:\\"em\\",ol:\\"ol\\",li:\\"li\\",strong:\\"strong\\"},i.components),{FigureImage:r,Table:h,TableHead:u,TableHeadRow:p,TableHeadCell:c,TableBody:m,TableBodyRow:d,TableBodyCell:o}=a;return r||l(\\"FigureImage\\",!0),h||l(\\"Table\\",!0),m||l(\\"TableBody\\",!0),o||l(\\"TableBodyCell\\",!0),d||l(\\"TableBodyRow\\",!0),u||l(\\"TableHead\\",!0),c||l(\\"TableHeadCell\\",!0),p||l(\\"TableHeadRow\\",!0),(0,e.jsxs)(e.Fragment,{children:[(0,e.jsxs)(a.h2,{id:\\"configure-your-profile\\",children:[(0,e.jsx)(a.a,{className:\\"anchor\\",href:\\"#configure-your-profile\\",children:(0,e.jsx)(a.span,{className:\\"icon icon-link\\"})}),\\"Configure your profile\\"]}),`\\n`,(0,e.jsxs)(a.p,{children:[\\"Kata Omnichat allows both admin and agents to \\",(0,e.jsx)(a.em,{children:\\"set up your profile\\"}),\\" by changing display picture, name, and changing password. It is easier to identify an account in the team.\\"]}),`\\n`,(0,e.jsx)(a.p,{children:\\"To set up your profile, you can follow these steps:\\"}),`\\n`,(0,e.jsxs)(a.ol,{children:[`\\n`,(0,e.jsx)(a.li,{children:\\"Login to your account\\"}),`\\n`,(0,e.jsxs)(a.li,{children:[\\"Click on \\",(0,e.jsx)(a.strong,{children:(0,e.jsx)(a.em,{children:\\"3 kebab menu icons\\"})}),\\" in the left under the corner of your dashboard, besides your name\\"]}),`\\n`,(0,e.jsxs)(a.li,{children:[\\"Click \\",(0,e.jsx)(a.strong,{children:\\"Profile Setting\\"})]}),`\\n`,(0,e.jsx)(a.li,{children:\\"You will be directed to the page where you can set up your profile\\"}),`\\n`]}),`\\n`,(0,e.jsx)(r,{caption:{title:\\"Figure 11\\",description:\\"Profile Setting\\"},src:\\"/assets/images/products/kata-omnichat/image11.webp\\",alt:\\"Kata Omnichat\\",naturalHeight:879,naturalWidth:1600}),`\\n`,(0,e.jsxs)(a.h2,{id:\\"update-profile\\",children:[(0,e.jsx)(a.a,{className:\\"anchor\\",href:\\"#update-profile\\",children:(0,e.jsx)(a.span,{className:\\"icon icon-link\\"})}),\\"Update profile\\"]}),`\\n`,(0,e.jsx)(a.p,{children:\\"On this page, Omnichat provides the place for the admin and agent to update the profile to make it easier to identify in the team.\\"}),`\\n`,(0,e.jsx)(r,{caption:{title:\\"Figure 12\\",description:\\"Update profile\\"},src:\\"/assets/images/products/kata-omnichat/image12.webp\\",alt:\\"Kata Omnichat\\",naturalHeight:809,naturalWidth:1600}),`\\n`,(0,e.jsx)(a.p,{children:\\"These are the fields to update your profile:\\"}),`\\n`,(0,e.jsxs)(h,{children:[(0,e.jsx)(u,{children:(0,e.jsxs)(p,{children:[(0,e.jsx)(c,{children:\\"Field Name\\"}),`\\n`,(0,e.jsx)(c,{children:\\"Description\\"})]})}),(0,e.jsxs)(m,{children:[(0,e.jsxs)(d,{children:[(0,e.jsx)(o,{children:\\"Profile image\\"}),(0,e.jsx)(o,{children:(0,e.jsx)(a.p,{children:`A square image that suits your profile. If no image is provided, then the system would take Gravatar Image if\\navailable`})})]}),(0,e.jsxs)(d,{children:[(0,e.jsx)(o,{children:\\"Full name\\"}),`\\n`,(0,e.jsx)(o,{children:\\"Provide your full name. e.g.: John Hopkins\\"})]}),(0,e.jsxs)(d,{children:[(0,e.jsx)(o,{children:\\"Display Name\\"}),`\\n`,(0,e.jsx)(o,{children:\\"Provide a name that you want to be displayed on the chat/emails e.g.: John H\\"})]}),(0,e.jsxs)(d,{children:[(0,e.jsx)(o,{children:\\"Your email address\\"}),(0,e.jsxs)(o,{children:[(0,e.jsx)(a.p,{children:`This email address will be used to send notifications, you will be using this email address to log in to\\nOmnichat.`}),(0,e.jsx)(\\"br\\",{}),(0,e.jsx)(a.p,{children:`Note: After you update your email, you will be automatically logged out and you need to log in with the updated\\nemail with the same password.`})]})]})]})]}),`\\n`,(0,e.jsxs)(a.p,{children:[\\"After clicking the \\",(0,e.jsx)(a.strong,{children:\\"Update profile\\"}),\' button, then your update will be reflected immediately. If the changes are successful, you will see a message \\"Your profile has been updated successfully.\\"\']})]})}}var N=_;function l(i,n){throw new Error(\\"Expected \\"+(n?\\"component\\":\\"object\\")+\\" `\\"+i+\\"` to be defined: you likely forgot to import, pass, or provide it.\\")}return F(B);})();\\n;return Component;"},"_id":"kata-omnichat/how-to-use-the-dashboard/update-profile.mdx","_raw":{"sourceFilePath":"kata-omnichat/how-to-use-the-dashboard/update-profile.mdx","sourceFileName":"update-profile.mdx","sourceFileDir":"kata-omnichat/how-to-use-the-dashboard","contentType":"mdx","flattenedPath":"kata-omnichat/how-to-use-the-dashboard/update-profile"},"type":"KataOmnichat","slug":["how-to-use-the-dashboard","update-profile"],"excerpt":"\\n## Configure your profile\\n\\nKata Omnichat allows both admin and agents to _set up your profile_ by changing display picture, name, and changing password. It is easier to identify an account in the team"}');
;// CONCATENATED MODULE: ./.contentlayer/generated/KataOmnichat/kata-omnichat__introduction__benefits-with-kata-omnichat.mdx.json
const kata_omnichat_introduction_benefits_with_kata_omnichat_mdx_namespaceObject = JSON.parse('{"id":"benefits-with-kata-omnichat","section":"Introduction","title":"Benefits with Kata Omnichat","prev":"what-is-kata-omnichat","next":"prepare-your-instagram-business-account","body":{"raw":"\\nWith Kata Omnichat, you can easily manage, distribute, and review your agents’ performance, providing you better insights on your customer service department. You can also integrate chatbots to Kata Omnichat, allowing your customer service agents to work hand-in-hand with machine intelligence. It’s an all-in one solution for your customer service department.\\n","code":"var Component=(()=>{var h=Object.create;var i=Object.defineProperty;var l=Object.getOwnPropertyDescriptor;var p=Object.getOwnPropertyNames;var d=Object.getPrototypeOf,g=Object.prototype.hasOwnProperty;var s=t=>i(t,\\"__esModule\\",{value:!0});var f=(t,e)=>()=>(e||t((e={exports:{}}).exports,e),e.exports),y=(t,e)=>{for(var n in e)i(t,n,{get:e[n],enumerable:!0})},c=(t,e,n,o)=>{if(e&&typeof e==\\"object\\"||typeof e==\\"function\\")for(let a of p(e))!g.call(t,a)&&(n||a!==\\"default\\")&&i(t,a,{get:()=>e[a],enumerable:!(o=l(e,a))||o.enumerable});return t},w=(t,e)=>c(s(i(t!=null?h(d(t)):{},\\"default\\",!e&&t&&t.__esModule?{get:()=>t.default,enumerable:!0}:{value:t,enumerable:!0})),t),x=(t=>(e,n)=>t&&t.get(e)||(n=c(s({}),e,1),t&&t.set(e,n),n))(typeof WeakMap!=\\"undefined\\"?new WeakMap:0);var m=f((k,u)=>{u.exports=_jsx_runtime});var O={};y(O,{default:()=>j,frontmatter:()=>b});var r=w(m()),b={id:\\"benefits-with-kata-omnichat\\",title:\\"Benefits with Kata Omnichat\\",prev:\\"what-is-kata-omnichat\\",next:\\"prepare-your-instagram-business-account\\",section:\\"Introduction\\"};function v(t={}){let{wrapper:e}=t.components||{};return e?(0,r.jsx)(e,Object.assign({},t,{children:(0,r.jsx)(n,{})})):n();function n(){let o=Object.assign({p:\\"p\\"},t.components);return(0,r.jsx)(o.p,{children:\\"With Kata Omnichat, you can easily manage, distribute, and review your agents\\\\u2019 performance, providing you better insights on your customer service department. You can also integrate chatbots to Kata Omnichat, allowing your customer service agents to work hand-in-hand with machine intelligence. It\\\\u2019s an all-in one solution for your customer service department.\\"})}}var j=v;return x(O);})();\\n;return Component;"},"_id":"kata-omnichat/introduction/benefits-with-kata-omnichat.mdx","_raw":{"sourceFilePath":"kata-omnichat/introduction/benefits-with-kata-omnichat.mdx","sourceFileName":"benefits-with-kata-omnichat.mdx","sourceFileDir":"kata-omnichat/introduction","contentType":"mdx","flattenedPath":"kata-omnichat/introduction/benefits-with-kata-omnichat"},"type":"KataOmnichat","slug":["introduction","benefits-with-kata-omnichat"],"excerpt":"\\nWith Kata Omnichat, you can easily manage, distribute, and review your agents’ performance, providing you better insights on your customer service department. You can also integrate chatbots to Kata Omnichat, allowing your customer service agents to work hand-in-hand with machine intelligence"}');
;// CONCATENATED MODULE: ./.contentlayer/generated/KataOmnichat/kata-omnichat__introduction__what-is-kata-omnichat.mdx.json
const kata_omnichat_introduction_what_is_kata_omnichat_mdx_namespaceObject = JSON.parse('{"id":"what-is-kata-omnichat","section":"Introduction","hiddenTitle":"What is Kata Omnichat","next":"benefits-with-kata-omnichat","body":{"raw":"\\n<ImageWrapper>\\n  <NextImage\\n    src=\\"/assets/images/products/kata-omnichat/image0.webp\\"\\n    alt=\\"Kata-Omnichat Illustration\\"\\n    naturalHeight={428}\\n    naturalWidth={720}\\n  />\\n</ImageWrapper>\\n\\n# What is Kata Omnichat\\n\\nKata Omnichat is a centralized dashboard where you can handle messages from multiple channels. For now, you can integrate 2 channels; Instagram Messaging and WhatsApp Business API.\\n","code":"var Component=(()=>{var p=Object.create;var r=Object.defineProperty;var u=Object.getOwnPropertyDescriptor;var g=Object.getOwnPropertyNames;var f=Object.getPrototypeOf,x=Object.prototype.hasOwnProperty;var c=t=>r(t,\\"__esModule\\",{value:!0});var w=(t,a)=>()=>(a||t((a={exports:{}}).exports,a),a.exports),j=(t,a)=>{for(var n in a)r(t,n,{get:a[n],enumerable:!0})},h=(t,a,n,i)=>{if(a&&typeof a==\\"object\\"||typeof a==\\"function\\")for(let s of g(a))!x.call(t,s)&&(n||s!==\\"default\\")&&r(t,s,{get:()=>a[s],enumerable:!(i=u(a,s))||i.enumerable});return t},I=(t,a)=>h(c(r(t!=null?p(f(t)):{},\\"default\\",!a&&t&&t.__esModule?{get:()=>t.default,enumerable:!0}:{value:t,enumerable:!0})),t),_=(t=>(a,n)=>t&&t.get(a)||(n=h(c({}),a,1),t&&t.set(a,n),n))(typeof WeakMap!=\\"undefined\\"?new WeakMap:0);var l=w((M,m)=>{m.exports=_jsx_runtime});var W={};j(W,{default:()=>O,frontmatter:()=>b});var e=I(l()),b={id:\\"what-is-kata-omnichat\\",next:\\"benefits-with-kata-omnichat\\",hiddenTitle:\\"What is Kata Omnichat\\",section:\\"Introduction\\"};function k(t={}){let{wrapper:a}=t.components||{};return a?(0,e.jsx)(a,Object.assign({},t,{children:(0,e.jsx)(n,{})})):n();function n(){let i=Object.assign({h1:\\"h1\\",a:\\"a\\",span:\\"span\\",p:\\"p\\"},t.components),{ImageWrapper:s,NextImage:o}=i;return s||d(\\"ImageWrapper\\",!0),o||d(\\"NextImage\\",!0),(0,e.jsxs)(e.Fragment,{children:[(0,e.jsx)(s,{children:(0,e.jsx)(o,{src:\\"/assets/images/products/kata-omnichat/image0.webp\\",alt:\\"Kata-Omnichat Illustration\\",naturalHeight:428,naturalWidth:720})}),`\\n`,(0,e.jsxs)(i.h1,{id:\\"what-is-kata-omnichat\\",children:[(0,e.jsx)(i.a,{className:\\"anchor\\",href:\\"#what-is-kata-omnichat\\",children:(0,e.jsx)(i.span,{className:\\"icon icon-link\\"})}),\\"What is Kata Omnichat\\"]}),`\\n`,(0,e.jsx)(i.p,{children:\\"Kata Omnichat is a centralized dashboard where you can handle messages from multiple channels. For now, you can integrate 2 channels; Instagram Messaging and WhatsApp Business API.\\"})]})}}var O=k;function d(t,a){throw new Error(\\"Expected \\"+(a?\\"component\\":\\"object\\")+\\" `\\"+t+\\"` to be defined: you likely forgot to import, pass, or provide it.\\")}return _(W);})();\\n;return Component;"},"_id":"kata-omnichat/introduction/what-is-kata-omnichat.mdx","_raw":{"sourceFilePath":"kata-omnichat/introduction/what-is-kata-omnichat.mdx","sourceFileName":"what-is-kata-omnichat.mdx","sourceFileDir":"kata-omnichat/introduction","contentType":"mdx","flattenedPath":"kata-omnichat/introduction/what-is-kata-omnichat"},"type":"KataOmnichat","slug":["introduction","what-is-kata-omnichat"],"excerpt":"\\n\\n  \\n\\n\\n# What is Kata Omnichat\\n\\nKata Omnichat is a centralized dashboard where you can handle messages from multiple channels"}');
;// CONCATENATED MODULE: ./.contentlayer/generated/KataOmnichat/kata-omnichat__manage-agent__add-agent.mdx.json
const kata_omnichat_manage_agent_add_agent_mdx_namespaceObject = JSON.parse('{"id":"add-agent","section":"Manage Agent","title":"Add agent","prev":"set-up-ice-breaker","next":"edit-agent","body":{"raw":"\\nAn agent is a member of your Customer Support team. Agents will be able to view and reply to messages from your users. Follow these steps to set up your agent:\\n\\n1. Go to Home, then click **Settings**\\n2. Click **Agents,** then click **Add Agents** button to add a new agent\\n\\n<FigureImage\\n  caption={{ title: \'Figure 29\', description: `Manage Agent` }}\\n  src=\\"/assets/images/products/kata-omnichat/image29.webp\\"\\n  alt=\\"Kata Omnichat\\"\\n  naturalHeight={896}\\n  naturalWidth={1600}\\n/>\\n\\n3. Add **Agent Name**, **Email** and **Role,** then click **Add Agent** to send an invitation to your agent\\n4. Once your agents accept the invitation by setting up the password, they can start to explore the dashboard\\n\\n<FigureImage\\n  caption={{ title: \'Figure 30\', description: `Add Agent via Email` }}\\n  src=\\"/assets/images/products/kata-omnichat/image30.webp\\"\\n  alt=\\"Kata Omnichat\\"\\n  naturalHeight={900}\\n  naturalWidth={1600}\\n/>\\n\\nWhen you are in step 3, you need to enter the agent information as shown below:\\n\\n<Table>\\n  <TableHead>\\n    <TableHeadRow>\\n      <TableHeadCell>Field Name</TableHeadCell>\\n      <TableHeadCell>Description</TableHeadCell>\\n    </TableHeadRow>\\n  </TableHead>\\n  <TableBody>\\n    <TableBodyRow>\\n      <TableBodyCell>Agent Name</TableBodyCell>\\n      <TableBodyCell>Enter the name of your agent or additional admin. For example Katherine Wong</TableBodyCell>\\n    </TableBodyRow>\\n    <TableBodyRow>\\n      <TableBodyCell>Role</TableBodyCell>\\n      <TableBodyCell>\\n        The role of the person you invited to. You can choose the person that you assign as an agent or administrator\\n        <strong>If Agent</strong>, Agents with this role can only access inboxes, reports, and conversations. They can assign\\n        conversations to other agents or themselves and resolve conversations\\n      </TableBodyCell>\\n    </TableBodyRow>\\n    <TableBodyRow>\\n      <TableBodyCell>-</TableBodyCell>\\n      <TableBodyCell>\\n        <strong>If Administrator</strong>, Administrator will have access to all Kata Omnichat features enabled for your\\n        account, including settings, along with all of a normal agents\' privileges\\n      </TableBodyCell>\\n    </TableBodyRow>\\n    <TableBodyRow>\\n      <TableBodyCell>Email Address</TableBodyCell>\\n      <TableBodyCell>Add the Email address of the person you’ve invited to join</TableBodyCell>\\n    </TableBodyRow>\\n  </TableBody>\\n</Table>\\n\\nWhen adding agents and administrators, there are 2 status:\\n\\n1. **Pending Verification** that means the email invitation has been sent to the invited one. Action is needed from the invited agent or administrator to confirm the invitation\\n2. **Verified** that means the invited agent and administrator has confirmed the invitation, then they can explore the dashboard\\n","code":"var Component=(()=>{var v=Object.create;var d=Object.defineProperty;var A=Object.getOwnPropertyDescriptor;var w=Object.getOwnPropertyNames;var x=Object.getPrototypeOf,T=Object.prototype.hasOwnProperty;var p=n=>d(n,\\"__esModule\\",{value:!0});var j=(n,i)=>()=>(i||n((i={exports:{}}).exports,i),i.exports),F=(n,i)=>{for(var a in i)d(n,a,{get:i[a],enumerable:!0})},f=(n,i,a,t)=>{if(i&&typeof i==\\"object\\"||typeof i==\\"function\\")for(let r of w(i))!T.call(n,r)&&(a||r!==\\"default\\")&&d(n,r,{get:()=>i[r],enumerable:!(t=A(i,r))||t.enumerable});return n},H=(n,i)=>f(p(d(n!=null?v(x(n)):{},\\"default\\",!i&&n&&n.__esModule?{get:()=>n.default,enumerable:!0}:{value:n,enumerable:!0})),n),k=(n=>(i,a)=>n&&n.get(i)||(a=f(p({}),i,1),n&&n.set(i,a),a))(typeof WeakMap!=\\"undefined\\"?new WeakMap:0);var y=j((M,b)=>{b.exports=_jsx_runtime});var R={};F(R,{default:()=>E,frontmatter:()=>C});var e=H(y()),C={id:\\"add-agent\\",title:\\"Add agent\\",prev:\\"set-up-ice-breaker\\",next:\\"edit-agent\\",section:\\"Manage Agent\\"};function _(n={}){let{wrapper:i}=n.components||{};return i?(0,e.jsx)(i,Object.assign({},n,{children:(0,e.jsx)(a,{})})):a();function a(){let t=Object.assign({p:\\"p\\",ol:\\"ol\\",li:\\"li\\",strong:\\"strong\\"},n.components),{FigureImage:r,Table:h,TableHead:g,TableHeadRow:m,TableHeadCell:c,TableBody:u,TableBodyRow:s,TableBodyCell:o}=t;return r||l(\\"FigureImage\\",!0),h||l(\\"Table\\",!0),u||l(\\"TableBody\\",!0),o||l(\\"TableBodyCell\\",!0),s||l(\\"TableBodyRow\\",!0),g||l(\\"TableHead\\",!0),c||l(\\"TableHeadCell\\",!0),m||l(\\"TableHeadRow\\",!0),(0,e.jsxs)(e.Fragment,{children:[(0,e.jsx)(t.p,{children:\\"An agent is a member of your Customer Support team. Agents will be able to view and reply to messages from your users. Follow these steps to set up your agent:\\"}),`\\n`,(0,e.jsxs)(t.ol,{children:[`\\n`,(0,e.jsxs)(t.li,{children:[\\"Go to Home, then click \\",(0,e.jsx)(t.strong,{children:\\"Settings\\"})]}),`\\n`,(0,e.jsxs)(t.li,{children:[\\"Click \\",(0,e.jsx)(t.strong,{children:\\"Agents,\\"}),\\" then click \\",(0,e.jsx)(t.strong,{children:\\"Add Agents\\"}),\\" button to add a new agent\\"]}),`\\n`]}),`\\n`,(0,e.jsx)(r,{caption:{title:\\"Figure 29\\",description:\\"Manage Agent\\"},src:\\"/assets/images/products/kata-omnichat/image29.webp\\",alt:\\"Kata Omnichat\\",naturalHeight:896,naturalWidth:1600}),`\\n`,(0,e.jsxs)(t.ol,{start:\\"3\\",children:[`\\n`,(0,e.jsxs)(t.li,{children:[\\"Add \\",(0,e.jsx)(t.strong,{children:\\"Agent Name\\"}),\\", \\",(0,e.jsx)(t.strong,{children:\\"Email\\"}),\\" and \\",(0,e.jsx)(t.strong,{children:\\"Role,\\"}),\\" then click \\",(0,e.jsx)(t.strong,{children:\\"Add Agent\\"}),\\" to send an invitation to your agent\\"]}),`\\n`,(0,e.jsx)(t.li,{children:\\"Once your agents accept the invitation by setting up the password, they can start to explore the dashboard\\"}),`\\n`]}),`\\n`,(0,e.jsx)(r,{caption:{title:\\"Figure 30\\",description:\\"Add Agent via Email\\"},src:\\"/assets/images/products/kata-omnichat/image30.webp\\",alt:\\"Kata Omnichat\\",naturalHeight:900,naturalWidth:1600}),`\\n`,(0,e.jsx)(t.p,{children:\\"When you are in step 3, you need to enter the agent information as shown below:\\"}),`\\n`,(0,e.jsxs)(h,{children:[(0,e.jsx)(g,{children:(0,e.jsxs)(m,{children:[(0,e.jsx)(c,{children:\\"Field Name\\"}),`\\n`,(0,e.jsx)(c,{children:\\"Description\\"})]})}),(0,e.jsxs)(u,{children:[(0,e.jsxs)(s,{children:[(0,e.jsx)(o,{children:\\"Agent Name\\"}),`\\n`,(0,e.jsx)(o,{children:\\"Enter the name of your agent or additional admin. For example Katherine Wong\\"})]}),(0,e.jsxs)(s,{children:[(0,e.jsx)(o,{children:\\"Role\\"}),(0,e.jsx)(o,{children:(0,e.jsxs)(t.p,{children:[`The role of the person you invited to. You can choose the person that you assign as an agent or administrator\\n`,(0,e.jsx)(\\"strong\\",{children:\\"If Agent\\"}),`, Agents with this role can only access inboxes, reports, and conversations. They can assign\\nconversations to other agents or themselves and resolve conversations`]})})]}),(0,e.jsxs)(s,{children:[(0,e.jsx)(o,{children:\\"-\\"}),(0,e.jsx)(o,{children:(0,e.jsxs)(t.p,{children:[(0,e.jsx)(\\"strong\\",{children:\\"If Administrator\\"}),`, Administrator will have access to all Kata Omnichat features enabled for your\\naccount, including settings, along with all of a normal agents\' privileges`]})})]}),(0,e.jsxs)(s,{children:[(0,e.jsx)(o,{children:\\"Email Address\\"}),`\\n`,(0,e.jsx)(o,{children:\\"Add the Email address of the person you\\\\u2019ve invited to join\\"})]})]})]}),`\\n`,(0,e.jsx)(t.p,{children:\\"When adding agents and administrators, there are 2 status:\\"}),`\\n`,(0,e.jsxs)(t.ol,{children:[`\\n`,(0,e.jsxs)(t.li,{children:[(0,e.jsx)(t.strong,{children:\\"Pending Verification\\"}),\\" that means the email invitation has been sent to the invited one. Action is needed from the invited agent or administrator to confirm the invitation\\"]}),`\\n`,(0,e.jsxs)(t.li,{children:[(0,e.jsx)(t.strong,{children:\\"Verified\\"}),\\" that means the invited agent and administrator has confirmed the invitation, then they can explore the dashboard\\"]}),`\\n`]})]})}}var E=_;function l(n,i){throw new Error(\\"Expected \\"+(i?\\"component\\":\\"object\\")+\\" `\\"+n+\\"` to be defined: you likely forgot to import, pass, or provide it.\\")}return k(R);})();\\n;return Component;"},"_id":"kata-omnichat/manage-agent/add-agent.mdx","_raw":{"sourceFilePath":"kata-omnichat/manage-agent/add-agent.mdx","sourceFileName":"add-agent.mdx","sourceFileDir":"kata-omnichat/manage-agent","contentType":"mdx","flattenedPath":"kata-omnichat/manage-agent/add-agent"},"type":"KataOmnichat","slug":["manage-agent","add-agent"],"excerpt":"\\nAn agent is a member of your Customer Support team. Agents will be able to view and reply to messages from your users"}');
;// CONCATENATED MODULE: ./.contentlayer/generated/KataOmnichat/kata-omnichat__manage-agent__delete-agent.mdx.json
const kata_omnichat_manage_agent_delete_agent_mdx_namespaceObject = JSON.parse('{"id":"delete-agent","section":"Manage Agent","title":"Delete agent","prev":"edit-agent","next":"received-the-invitation","body":{"raw":"\\nIn this section, you can delete the agent that is not used anymore. To delete agents, follow these steps:\\n\\n1. Go to Home, then click **Settings**\\n2. Click **delete** on the right side of the agent name.\\n3. Click **confirm** to delete\\n4. Then, if successful, the “Agent deleted successfully” message will be appeared\\n\\n<FigureImage\\n  caption={{ title: \'Figure 33\', description: `Delete Agent` }}\\n  src=\\"/assets/images/products/kata-omnichat/image33.webp\\"\\n  alt=\\"Kata Omnichat\\"\\n  naturalHeight={1000}\\n  naturalWidth={1600}\\n/>\\n","code":"var Component=(()=>{var g=Object.create;var s=Object.defineProperty;var h=Object.getOwnPropertyDescriptor;var m=Object.getOwnPropertyNames;var u=Object.getPrototypeOf,p=Object.prototype.hasOwnProperty;var l=e=>s(e,\\"__esModule\\",{value:!0});var f=(e,t)=>()=>(t||e((t={exports:{}}).exports,t),t.exports),x=(e,t)=>{for(var o in t)s(e,o,{get:t[o],enumerable:!0})},a=(e,t,o,i)=>{if(t&&typeof t==\\"object\\"||typeof t==\\"function\\")for(let r of m(t))!p.call(e,r)&&(o||r!==\\"default\\")&&s(e,r,{get:()=>t[r],enumerable:!(i=h(t,r))||i.enumerable});return e},j=(e,t)=>a(l(s(e!=null?g(u(e)):{},\\"default\\",!t&&e&&e.__esModule?{get:()=>e.default,enumerable:!0}:{value:e,enumerable:!0})),e),_=(e=>(t,o)=>e&&e.get(t)||(o=a(l({}),t,1),e&&e.set(t,o),o))(typeof WeakMap!=\\"undefined\\"?new WeakMap:0);var d=f((v,c)=>{c.exports=_jsx_runtime});var F={};x(F,{default:()=>y,frontmatter:()=>b});var n=j(d()),b={id:\\"delete-agent\\",title:\\"Delete agent\\",prev:\\"edit-agent\\",next:\\"received-the-invitation\\",section:\\"Manage Agent\\"};function w(e={}){let{wrapper:t}=e.components||{};return t?(0,n.jsx)(t,Object.assign({},e,{children:(0,n.jsx)(o,{})})):o();function o(){let i=Object.assign({p:\\"p\\",ol:\\"ol\\",li:\\"li\\",strong:\\"strong\\"},e.components),{FigureImage:r}=i;return r||k(\\"FigureImage\\",!0),(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(i.p,{children:\\"In this section, you can delete the agent that is not used anymore. To delete agents, follow these steps:\\"}),`\\n`,(0,n.jsxs)(i.ol,{children:[`\\n`,(0,n.jsxs)(i.li,{children:[\\"Go to Home, then click \\",(0,n.jsx)(i.strong,{children:\\"Settings\\"})]}),`\\n`,(0,n.jsxs)(i.li,{children:[\\"Click \\",(0,n.jsx)(i.strong,{children:\\"delete\\"}),\\" on the right side of the agent name.\\"]}),`\\n`,(0,n.jsxs)(i.li,{children:[\\"Click \\",(0,n.jsx)(i.strong,{children:\\"confirm\\"}),\\" to delete\\"]}),`\\n`,(0,n.jsx)(i.li,{children:\\"Then, if successful, the \\\\u201CAgent deleted successfully\\\\u201D message will be appeared\\"}),`\\n`]}),`\\n`,(0,n.jsx)(r,{caption:{title:\\"Figure 33\\",description:\\"Delete Agent\\"},src:\\"/assets/images/products/kata-omnichat/image33.webp\\",alt:\\"Kata Omnichat\\",naturalHeight:1e3,naturalWidth:1600})]})}}var y=w;function k(e,t){throw new Error(\\"Expected \\"+(t?\\"component\\":\\"object\\")+\\" `\\"+e+\\"` to be defined: you likely forgot to import, pass, or provide it.\\")}return _(F);})();\\n;return Component;"},"_id":"kata-omnichat/manage-agent/delete-agent.mdx","_raw":{"sourceFilePath":"kata-omnichat/manage-agent/delete-agent.mdx","sourceFileName":"delete-agent.mdx","sourceFileDir":"kata-omnichat/manage-agent","contentType":"mdx","flattenedPath":"kata-omnichat/manage-agent/delete-agent"},"type":"KataOmnichat","slug":["manage-agent","delete-agent"],"excerpt":"\\nIn this section, you can delete the agent that is not used anymore. To delete agents, follow these steps:\\n\\n1"}');
;// CONCATENATED MODULE: ./.contentlayer/generated/KataOmnichat/kata-omnichat__manage-agent__edit-agent.mdx.json
const kata_omnichat_manage_agent_edit_agent_mdx_namespaceObject = JSON.parse('{"id":"edit-agent","section":"Manage Agent","title":"Edit agent","prev":"add-agent","next":"delete-agent","body":{"raw":"\\nAs an administrator, you can edit your agents for the name and the role\\n\\nWhen you edit the role, your agents can access the features as their role. Follow these steps to edit your agent.\\n\\n1. Go to Home, then click **Settings**\\n\\n<FigureImage\\n  caption={{ title: \'Figure 31\', description: `Agents Setting` }}\\n  src=\\"/assets/images/products/kata-omnichat/image31.webp\\"\\n  alt=\\"Kata Omnichat\\"\\n  naturalHeight={1000}\\n  naturalWidth={1600}\\n/>\\n\\n2. Click **Edit** on the right of the agent name\\n3. Enter the name and the role you want to assign\\n4. Click the **Edit Agent** button, then if successful, “Agent update successfully” will be appeared\\n\\n<FigureImage\\n  caption={{ title: \'Figure 32\', description: `Edit Agents` }}\\n  src=\\"/assets/images/products/kata-omnichat/image32.webp\\"\\n  alt=\\"Kata Omnichat\\"\\n  naturalHeight={1000}\\n  naturalWidth={1600}\\n/>\\n\\n5. If you change the role, then they will directly get access to the feature as their role. For example, edit role from agent to admin, then the agent will get access to all the features that admin have\\n","code":"var Component=(()=>{var d=Object.create;var o=Object.defineProperty;var g=Object.getOwnPropertyDescriptor;var u=Object.getOwnPropertyNames;var m=Object.getPrototypeOf,p=Object.prototype.hasOwnProperty;var s=e=>o(e,\\"__esModule\\",{value:!0});var f=(e,t)=>()=>(t||e((t={exports:{}}).exports,t),t.exports),x=(e,t)=>{for(var a in t)o(e,a,{get:t[a],enumerable:!0})},l=(e,t,a,i)=>{if(t&&typeof t==\\"object\\"||typeof t==\\"function\\")for(let r of u(t))!p.call(e,r)&&(a||r!==\\"default\\")&&o(e,r,{get:()=>t[r],enumerable:!(i=g(t,r))||i.enumerable});return e},y=(e,t)=>l(s(o(e!=null?d(m(e)):{},\\"default\\",!t&&e&&e.__esModule?{get:()=>e.default,enumerable:!0}:{value:e,enumerable:!0})),e),w=(e=>(t,a)=>e&&e.get(t)||(a=l(s({}),t,1),e&&e.set(t,a),a))(typeof WeakMap!=\\"undefined\\"?new WeakMap:0);var h=f((A,c)=>{c.exports=_jsx_runtime});var E={};x(E,{default:()=>F,frontmatter:()=>b});var n=y(h()),b={id:\\"edit-agent\\",title:\\"Edit agent\\",prev:\\"add-agent\\",next:\\"delete-agent\\",section:\\"Manage Agent\\"};function j(e={}){let{wrapper:t}=e.components||{};return t?(0,n.jsx)(t,Object.assign({},e,{children:(0,n.jsx)(a,{})})):a();function a(){let i=Object.assign({p:\\"p\\",ol:\\"ol\\",li:\\"li\\",strong:\\"strong\\"},e.components),{FigureImage:r}=i;return r||_(\\"FigureImage\\",!0),(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(i.p,{children:\\"As an administrator, you can edit your agents for the name and the role\\"}),`\\n`,(0,n.jsx)(i.p,{children:\\"When you edit the role, your agents can access the features as their role. Follow these steps to edit your agent.\\"}),`\\n`,(0,n.jsxs)(i.ol,{children:[`\\n`,(0,n.jsxs)(i.li,{children:[\\"Go to Home, then click \\",(0,n.jsx)(i.strong,{children:\\"Settings\\"})]}),`\\n`]}),`\\n`,(0,n.jsx)(r,{caption:{title:\\"Figure 31\\",description:\\"Agents Setting\\"},src:\\"/assets/images/products/kata-omnichat/image31.webp\\",alt:\\"Kata Omnichat\\",naturalHeight:1e3,naturalWidth:1600}),`\\n`,(0,n.jsxs)(i.ol,{start:\\"2\\",children:[`\\n`,(0,n.jsxs)(i.li,{children:[\\"Click \\",(0,n.jsx)(i.strong,{children:\\"Edit\\"}),\\" on the right of the agent name\\"]}),`\\n`,(0,n.jsx)(i.li,{children:\\"Enter the name and the role you want to assign\\"}),`\\n`,(0,n.jsxs)(i.li,{children:[\\"Click the \\",(0,n.jsx)(i.strong,{children:\\"Edit Agent\\"}),\\" button, then if successful, \\\\u201CAgent update successfully\\\\u201D will be appeared\\"]}),`\\n`]}),`\\n`,(0,n.jsx)(r,{caption:{title:\\"Figure 32\\",description:\\"Edit Agents\\"},src:\\"/assets/images/products/kata-omnichat/image32.webp\\",alt:\\"Kata Omnichat\\",naturalHeight:1e3,naturalWidth:1600}),`\\n`,(0,n.jsxs)(i.ol,{start:\\"5\\",children:[`\\n`,(0,n.jsx)(i.li,{children:\\"If you change the role, then they will directly get access to the feature as their role. For example, edit role from agent to admin, then the agent will get access to all the features that admin have\\"}),`\\n`]})]})}}var F=j;function _(e,t){throw new Error(\\"Expected \\"+(t?\\"component\\":\\"object\\")+\\" `\\"+e+\\"` to be defined: you likely forgot to import, pass, or provide it.\\")}return w(E);})();\\n;return Component;"},"_id":"kata-omnichat/manage-agent/edit-agent.mdx","_raw":{"sourceFilePath":"kata-omnichat/manage-agent/edit-agent.mdx","sourceFileName":"edit-agent.mdx","sourceFileDir":"kata-omnichat/manage-agent","contentType":"mdx","flattenedPath":"kata-omnichat/manage-agent/edit-agent"},"type":"KataOmnichat","slug":["manage-agent","edit-agent"],"excerpt":"\\nAs an administrator, you can edit your agents for the name and the role\\n\\nWhen you edit the role, your agents can access the features as their role. Follow these steps to edit your agent"}');
;// CONCATENATED MODULE: ./.contentlayer/generated/KataOmnichat/kata-omnichat__manage-agent__received-the-invitation.mdx.json
const kata_omnichat_manage_agent_received_the_invitation_mdx_namespaceObject = JSON.parse('{"id":"received-the-invitation","section":"Manage Agent","title":"Received the invitation as administrator or agent","prev":"delete-agent","next":"admin-view-conversation","body":{"raw":"\\nIf you’re the agent or administrator who gets the invitation, you need to confirm yourself in the email and get access to the dashboard you’ve been invited to.\\n\\n1. Go to your **email**\\n2. Check the email with the heading “You have been invited” from Kata Omnichat\\n\\n<FigureImage\\n  caption={{ title: \'Figure 34\', description: `Receive invitation as an Agents` }}\\n  src=\\"/assets/images/products/kata-omnichat/image34.webp\\"\\n  alt=\\"Kata Omnichat\\"\\n  naturalHeight={1000}\\n  naturalWidth={1600}\\n/>\\n\\n3. Click on the confirmation link. Be aware that there is the default password that you need to change after login successfully.\\n4. You can explore Kata Omnichat features, and don’t forget to change your password\\n\\n<FigureImage\\n  caption={{ title: \'Figure 35\', description: `Getting Started Screen` }}\\n  src=\\"/assets/images/products/kata-omnichat/image35.webp\\"\\n  alt=\\"Kata Omnichat\\"\\n  naturalHeight={1000}\\n  naturalWidth={1600}\\n/>\\n","code":"var Component=(()=>{var h=Object.create;var r=Object.defineProperty;var g=Object.getOwnPropertyDescriptor;var m=Object.getOwnPropertyNames;var u=Object.getPrototypeOf,p=Object.prototype.hasOwnProperty;var s=e=>r(e,\\"__esModule\\",{value:!0});var f=(e,t)=>()=>(t||e((t={exports:{}}).exports,t),t.exports),v=(e,t)=>{for(var a in t)r(e,a,{get:t[a],enumerable:!0})},c=(e,t,a,i)=>{if(t&&typeof t==\\"object\\"||typeof t==\\"function\\")for(let o of m(t))!p.call(e,o)&&(a||o!==\\"default\\")&&r(e,o,{get:()=>t[o],enumerable:!(i=g(t,o))||i.enumerable});return e},x=(e,t)=>c(s(r(e!=null?h(u(e)):{},\\"default\\",!t&&e&&e.__esModule?{get:()=>e.default,enumerable:!0}:{value:e,enumerable:!0})),e),w=(e=>(t,a)=>e&&e.get(t)||(a=c(s({}),t,1),e&&e.set(t,a),a))(typeof WeakMap!=\\"undefined\\"?new WeakMap:0);var d=f((O,l)=>{l.exports=_jsx_runtime});var k={};v(k,{default:()=>j,frontmatter:()=>y});var n=x(d()),y={id:\\"received-the-invitation\\",title:\\"Received the invitation as administrator or agent\\",prev:\\"delete-agent\\",next:\\"admin-view-conversation\\",section:\\"Manage Agent\\"};function b(e={}){let{wrapper:t}=e.components||{};return t?(0,n.jsx)(t,Object.assign({},e,{children:(0,n.jsx)(a,{})})):a();function a(){let i=Object.assign({p:\\"p\\",ol:\\"ol\\",li:\\"li\\",strong:\\"strong\\"},e.components),{FigureImage:o}=i;return o||_(\\"FigureImage\\",!0),(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(i.p,{children:\\"If you\\\\u2019re the agent or administrator who gets the invitation, you need to confirm yourself in the email and get access to the dashboard you\\\\u2019ve been invited to.\\"}),`\\n`,(0,n.jsxs)(i.ol,{children:[`\\n`,(0,n.jsxs)(i.li,{children:[\\"Go to your \\",(0,n.jsx)(i.strong,{children:\\"email\\"})]}),`\\n`,(0,n.jsx)(i.li,{children:\\"Check the email with the heading \\\\u201CYou have been invited\\\\u201D from Kata Omnichat\\"}),`\\n`]}),`\\n`,(0,n.jsx)(o,{caption:{title:\\"Figure 34\\",description:\\"Receive invitation as an Agents\\"},src:\\"/assets/images/products/kata-omnichat/image34.webp\\",alt:\\"Kata Omnichat\\",naturalHeight:1e3,naturalWidth:1600}),`\\n`,(0,n.jsxs)(i.ol,{start:\\"3\\",children:[`\\n`,(0,n.jsx)(i.li,{children:\\"Click on the confirmation link. Be aware that there is the default password that you need to change after login successfully.\\"}),`\\n`,(0,n.jsx)(i.li,{children:\\"You can explore Kata Omnichat features, and don\\\\u2019t forget to change your password\\"}),`\\n`]}),`\\n`,(0,n.jsx)(o,{caption:{title:\\"Figure 35\\",description:\\"Getting Started Screen\\"},src:\\"/assets/images/products/kata-omnichat/image35.webp\\",alt:\\"Kata Omnichat\\",naturalHeight:1e3,naturalWidth:1600})]})}}var j=b;function _(e,t){throw new Error(\\"Expected \\"+(t?\\"component\\":\\"object\\")+\\" `\\"+e+\\"` to be defined: you likely forgot to import, pass, or provide it.\\")}return w(k);})();\\n;return Component;"},"_id":"kata-omnichat/manage-agent/received-the-invitation.mdx","_raw":{"sourceFilePath":"kata-omnichat/manage-agent/received-the-invitation.mdx","sourceFileName":"received-the-invitation.mdx","sourceFileDir":"kata-omnichat/manage-agent","contentType":"mdx","flattenedPath":"kata-omnichat/manage-agent/received-the-invitation"},"type":"KataOmnichat","slug":["manage-agent","received-the-invitation"],"excerpt":"\\nIf you’re the agent or administrator who gets the invitation, you need to confirm yourself in the email and get access to the dashboard you’ve been invited to.\\n\\n1"}');
;// CONCATENATED MODULE: ./.contentlayer/generated/KataOmnichat/kata-omnichat__manage-inbox-settings__manage-agents-to-inbox.mdx.json
const kata_omnichat_manage_inbox_settings_manage_agents_to_inbox_mdx_namespaceObject = JSON.parse('{"id":"manage-agents-to-inbox","section":"Manage Inbox Settings","hiddenTitle":"Manage Agents to Inbox","prev":"inbox-add-agents","next":"set-up-quick-reply","body":{"raw":"\\nAfter creating the inbox, you can configure your inbox setting as the feature provided in Kata Omnichat. This setting can be accessed by admin only. To access the **Inbox Setting,** you must follow the steps below:\\n\\n1. You can click Inboxes on the side bar or you can click setting on the sidebar, then click Inboxes\\n2. After clicking Inboxes, you will be directed to the Inboxes Settings page\\n3. Choose the inbox you want to configure, by clicking on the **Settings** button\\n\\n<FigureImage\\n  caption={{\\n    title: \'Figure 22\',\\n    description: `Inbox Setting\\n`,\\n  }}\\n  src=\\"/assets/images/products/kata-omnichat/image22.webp\\"\\n  alt=\\"Kata Omnichat\\"\\n  naturalHeight={1000}\\n  naturalWidth={1600}\\n/>\\n\\n<Table>\\n  <TableHead>\\n    <TableHeadRow>\\n      <TableHeadCell>Field Name</TableHeadCell>\\n      <TableHeadCell>Description</TableHeadCell>\\n    </TableHeadRow>\\n  </TableHead>\\n  <TableBody>\\n    <TableBodyRow>\\n      <TableBodyCell>Inbox Name</TableBodyCell>\\n      <TableBodyCell>\\n        Enter the name of your Inbox. Inbox name can be up to 50 characters. For example: Keatchen Inc. IG\\n      </TableBodyCell>\\n    </TableBodyRow>\\n    <TableBodyRow>\\n      <TableBodyCell>Enable Channel Greeting</TableBodyCell>\\n      <TableBodyCell>\\n        Channel greetings provide the automatic answer as a greeting when the very first time end-user starts the\\n        conversation. Choose your need:\\n        <p>\\n          <strong>If enabled</strong>, then you need to enter the greeting message\\n        </p>\\n        <strong>If disabled</strong>, then there is no greeting answer in your channel\\n      </TableBodyCell>\\n    </TableBodyRow>\\n    <TableBodyRow>\\n      <TableBodyCell>Enable auto assignment</TableBodyCell>\\n      <TableBodyCell>\\n        Enable or disable the automatic assignment of new conversations to the agents added to this inbox\\n      </TableBodyCell>\\n    </TableBodyRow>\\n  </TableBody>\\n</Table>\\n\\nThere are some additional setting features in the inbox setting depending on your channel used for your inbox. The list of features are shown as below.\\n\\n<Table>\\n  <TableHead>\\n    <TableHeadRow>\\n      <TableHeadCell>Feature</TableHeadCell>\\n      <TableHeadCell>Is Available for IGDM*</TableHeadCell>\\n      <TableHeadCell>Is Available for WABA**</TableHeadCell>\\n    </TableHeadRow>\\n  </TableHead>\\n  <TableBody>\\n    <TableBodyRow>\\n      <TableBodyCell>Collaborators</TableBodyCell>\\n      <TableBodyCell>Yes </TableBodyCell>\\n      <TableBodyCell>Yes </TableBodyCell>\\n    </TableBodyRow>\\n    <TableBodyRow>\\n      <TableBodyCell>Quick Reply</TableBodyCell>\\n      <TableBodyCell>Yes </TableBodyCell>\\n      <TableBodyCell>No </TableBodyCell>\\n    </TableBodyRow>\\n    <TableBodyRow>\\n      <TableBodyCell>Set up Business Hours</TableBodyCell>\\n      <TableBodyCell>Yes </TableBodyCell>\\n      <TableBodyCell>Yes </TableBodyCell>\\n    </TableBodyRow>\\n    <TableBodyRow>\\n      <TableBodyCell>Ice Breaker</TableBodyCell>\\n      <TableBodyCell>Yes </TableBodyCell>\\n      <TableBodyCell>No </TableBodyCell>\\n    </TableBodyRow>\\n  </TableBody>\\n</Table>\\n\\n\\\\*IGDM = Instagram Direct Message\\n\\n\\\\*\\\\*WABA = Whatsapp Business Dashboard\\n\\n## Manage agents to inbox\\n\\nIn the collaborator’s section, you can assign an agent to your inbox or delete existing agents who have been already assigned. Follow these steps to add agent:\\n\\n1. Click on the **Collaborators** tap in **Inbox Setting**\\n2. Choose the agent that you want to assign, or click (X) to delete the existing agents\\n3. Click update, then if successful, “_Agent updated successfully_” message will be appeared\\n\\n<FigureImage\\n  caption={{ title: \'Figure 23\', description: `Manage agent to inbox` }}\\n  src=\\"/assets/images/products/kata-omnichat/image23.webp\\"\\n  alt=\\"Kata Omnichat\\"\\n  naturalHeight={1000}\\n  naturalWidth={1600}\\n/>\\n","code":"var Component=(()=>{var y=Object.create;var d=Object.defineProperty;var I=Object.getOwnPropertyDescriptor;var w=Object.getOwnPropertyNames;var T=Object.getPrototypeOf,k=Object.prototype.hasOwnProperty;var p=t=>d(t,\\"__esModule\\",{value:!0});var C=(t,i)=>()=>(i||t((i={exports:{}}).exports,i),i.exports),B=(t,i)=>{for(var r in i)d(t,r,{get:i[r],enumerable:!0})},m=(t,i,r,n)=>{if(i&&typeof i==\\"object\\"||typeof i==\\"function\\")for(let o of w(i))!k.call(t,o)&&(r||o!==\\"default\\")&&d(t,o,{get:()=>i[o],enumerable:!(n=I(i,o))||n.enumerable});return t},M=(t,i)=>m(p(d(t!=null?y(T(t)):{},\\"default\\",!i&&t&&t.__esModule?{get:()=>t.default,enumerable:!0}:{value:t,enumerable:!0})),t),v=(t=>(i,r)=>t&&t.get(i)||(r=m(p({}),i,1),t&&t.set(i,r),r))(typeof WeakMap!=\\"undefined\\"?new WeakMap:0);var f=C((D,x)=>{x.exports=_jsx_runtime});var j={};B(j,{default:()=>H,frontmatter:()=>A});var e=M(f()),A={id:\\"manage-agents-to-inbox\\",prev:\\"inbox-add-agents\\",next:\\"set-up-quick-reply\\",section:\\"Manage Inbox Settings\\",hiddenTitle:\\"Manage Agents to Inbox\\"};function F(t={}){let{wrapper:i}=t.components||{};return i?(0,e.jsx)(i,Object.assign({},t,{children:(0,e.jsx)(r,{})})):r();function r(){let n=Object.assign({p:\\"p\\",strong:\\"strong\\",ol:\\"ol\\",li:\\"li\\",h2:\\"h2\\",a:\\"a\\",span:\\"span\\",em:\\"em\\"},t.components),{FigureImage:o,Table:h,TableHead:g,TableHeadRow:u,TableHeadCell:c,TableBody:b,TableBodyRow:l,TableBodyCell:a}=n;return o||s(\\"FigureImage\\",!0),h||s(\\"Table\\",!0),b||s(\\"TableBody\\",!0),a||s(\\"TableBodyCell\\",!0),l||s(\\"TableBodyRow\\",!0),g||s(\\"TableHead\\",!0),c||s(\\"TableHeadCell\\",!0),u||s(\\"TableHeadRow\\",!0),(0,e.jsxs)(e.Fragment,{children:[(0,e.jsxs)(n.p,{children:[\\"After creating the inbox, you can configure your inbox setting as the feature provided in Kata Omnichat. This setting can be accessed by admin only. To access the \\",(0,e.jsx)(n.strong,{children:\\"Inbox Setting,\\"}),\\" you must follow the steps below:\\"]}),`\\n`,(0,e.jsxs)(n.ol,{children:[`\\n`,(0,e.jsx)(n.li,{children:\\"You can click Inboxes on the side bar or you can click setting on the sidebar, then click Inboxes\\"}),`\\n`,(0,e.jsx)(n.li,{children:\\"After clicking Inboxes, you will be directed to the Inboxes Settings page\\"}),`\\n`,(0,e.jsxs)(n.li,{children:[\\"Choose the inbox you want to configure, by clicking on the \\",(0,e.jsx)(n.strong,{children:\\"Settings\\"}),\\" button\\"]}),`\\n`]}),`\\n`,(0,e.jsx)(o,{caption:{title:\\"Figure 22\\",description:`Inbox Setting\\n`},src:\\"/assets/images/products/kata-omnichat/image22.webp\\",alt:\\"Kata Omnichat\\",naturalHeight:1e3,naturalWidth:1600}),`\\n`,(0,e.jsxs)(h,{children:[(0,e.jsx)(g,{children:(0,e.jsxs)(u,{children:[(0,e.jsx)(c,{children:\\"Field Name\\"}),`\\n`,(0,e.jsx)(c,{children:\\"Description\\"})]})}),(0,e.jsxs)(b,{children:[(0,e.jsxs)(l,{children:[(0,e.jsx)(a,{children:\\"Inbox Name\\"}),(0,e.jsx)(a,{children:(0,e.jsx)(n.p,{children:\\"Enter the name of your Inbox. Inbox name can be up to 50 characters. For example: Keatchen Inc. IG\\"})})]}),(0,e.jsxs)(l,{children:[(0,e.jsx)(a,{children:\\"Enable Channel Greeting\\"}),(0,e.jsxs)(a,{children:[(0,e.jsx)(n.p,{children:`Channel greetings provide the automatic answer as a greeting when the very first time end-user starts the\\nconversation. Choose your need:`}),(0,e.jsx)(\\"p\\",{children:(0,e.jsxs)(n.p,{children:[(0,e.jsx)(\\"strong\\",{children:\\"If enabled\\"}),\\", then you need to enter the greeting message\\"]})}),(0,e.jsxs)(n.p,{children:[(0,e.jsx)(\\"strong\\",{children:\\"If disabled\\"}),\\", then there is no greeting answer in your channel\\"]})]})]}),(0,e.jsxs)(l,{children:[(0,e.jsx)(a,{children:\\"Enable auto assignment\\"}),(0,e.jsx)(a,{children:(0,e.jsx)(n.p,{children:\\"Enable or disable the automatic assignment of new conversations to the agents added to this inbox\\"})})]})]})]}),`\\n`,(0,e.jsx)(n.p,{children:\\"There are some additional setting features in the inbox setting depending on your channel used for your inbox. The list of features are shown as below.\\"}),`\\n`,(0,e.jsxs)(h,{children:[(0,e.jsx)(g,{children:(0,e.jsxs)(u,{children:[(0,e.jsx)(c,{children:\\"Feature\\"}),`\\n`,(0,e.jsx)(c,{children:\\"Is Available for IGDM*\\"}),`\\n`,(0,e.jsx)(c,{children:\\"Is Available for WABA**\\"})]})}),(0,e.jsxs)(b,{children:[(0,e.jsxs)(l,{children:[(0,e.jsx)(a,{children:\\"Collaborators\\"}),`\\n`,(0,e.jsx)(a,{children:\\"Yes \\"}),`\\n`,(0,e.jsx)(a,{children:\\"Yes \\"})]}),(0,e.jsxs)(l,{children:[(0,e.jsx)(a,{children:\\"Quick Reply\\"}),`\\n`,(0,e.jsx)(a,{children:\\"Yes \\"}),`\\n`,(0,e.jsx)(a,{children:\\"No \\"})]}),(0,e.jsxs)(l,{children:[(0,e.jsx)(a,{children:\\"Set up Business Hours\\"}),`\\n`,(0,e.jsx)(a,{children:\\"Yes \\"}),`\\n`,(0,e.jsx)(a,{children:\\"Yes \\"})]}),(0,e.jsxs)(l,{children:[(0,e.jsx)(a,{children:\\"Ice Breaker\\"}),`\\n`,(0,e.jsx)(a,{children:\\"Yes \\"}),`\\n`,(0,e.jsx)(a,{children:\\"No \\"})]})]})]}),`\\n`,(0,e.jsx)(n.p,{children:\\"*IGDM = Instagram Direct Message\\"}),`\\n`,(0,e.jsx)(n.p,{children:\\"**WABA = Whatsapp Business Dashboard\\"}),`\\n`,(0,e.jsxs)(n.h2,{id:\\"manage-agents-to-inbox\\",children:[(0,e.jsx)(n.a,{className:\\"anchor\\",href:\\"#manage-agents-to-inbox\\",children:(0,e.jsx)(n.span,{className:\\"icon icon-link\\"})}),\\"Manage agents to inbox\\"]}),`\\n`,(0,e.jsx)(n.p,{children:\\"In the collaborator\\\\u2019s section, you can assign an agent to your inbox or delete existing agents who have been already assigned. Follow these steps to add agent:\\"}),`\\n`,(0,e.jsxs)(n.ol,{children:[`\\n`,(0,e.jsxs)(n.li,{children:[\\"Click on the \\",(0,e.jsx)(n.strong,{children:\\"Collaborators\\"}),\\" tap in \\",(0,e.jsx)(n.strong,{children:\\"Inbox Setting\\"})]}),`\\n`,(0,e.jsx)(n.li,{children:\\"Choose the agent that you want to assign, or click (X) to delete the existing agents\\"}),`\\n`,(0,e.jsxs)(n.li,{children:[\\"Click update, then if successful, \\\\u201C\\",(0,e.jsx)(n.em,{children:\\"Agent updated successfully\\"}),\\"\\\\u201D message will be appeared\\"]}),`\\n`]}),`\\n`,(0,e.jsx)(o,{caption:{title:\\"Figure 23\\",description:\\"Manage agent to inbox\\"},src:\\"/assets/images/products/kata-omnichat/image23.webp\\",alt:\\"Kata Omnichat\\",naturalHeight:1e3,naturalWidth:1600})]})}}var H=F;function s(t,i){throw new Error(\\"Expected \\"+(i?\\"component\\":\\"object\\")+\\" `\\"+t+\\"` to be defined: you likely forgot to import, pass, or provide it.\\")}return v(j);})();\\n;return Component;"},"_id":"kata-omnichat/manage-inbox-settings/manage-agents-to-inbox.mdx","_raw":{"sourceFilePath":"kata-omnichat/manage-inbox-settings/manage-agents-to-inbox.mdx","sourceFileName":"manage-agents-to-inbox.mdx","sourceFileDir":"kata-omnichat/manage-inbox-settings","contentType":"mdx","flattenedPath":"kata-omnichat/manage-inbox-settings/manage-agents-to-inbox"},"type":"KataOmnichat","slug":["manage-inbox-settings","manage-agents-to-inbox"],"excerpt":"\\nAfter creating the inbox, you can configure your inbox setting as the feature provided in Kata Omnichat. This setting can be accessed by admin only"}');
;// CONCATENATED MODULE: ./.contentlayer/generated/KataOmnichat/kata-omnichat__manage-inbox-settings__set-up-business-hours.mdx.json
const kata_omnichat_manage_inbox_settings_set_up_business_hours_mdx_namespaceObject = JSON.parse('{"id":"set-up-business-hours","section":"Manage Inbox Settings","title":"Set up business hours","prev":"set-up-quick-reply","next":"set-up-ice-breaker","body":{"raw":"\\nIn this section, You can set your business availability that will show the available hours on the live chat widget even if all the agents are offline. Outside available hours visitors can be warned with a message and a pre-chat form. The steps to set up business hours are shown as below:\\n\\n1. Click on the **Business Hours** tap in **Inbox Setting**\\n2. Tick on Enable business availability for this inbox, then all business hours settings will be appeared\\n3. Enter your Unavailable message for visitors, then this message will automatically be sent to your customer when they start the conversation at the out of business hours. The message can be up to 1000 messages\\n4. Select your time zone\\n5. Set up your business hours every day. If your business is unavailable all day, you can just untick the selected day, then you are recorded as unavailable all day\\n6. Click on the update business hours button. If successful, then the “_Inbox setting updated successfully_” message will be appeared\\n\\n<FigureImage\\n  caption={{ title: \'Figure 26\', description: `Business Hour Set Up` }}\\n  src=\\"/assets/images/products/kata-omnichat/image26.webp\\"\\n  alt=\\"Kata Omnichat\\"\\n  naturalHeight={1000}\\n  naturalWidth={1600}\\n/>\\n\\nThe final result of the business hour set up is shown below\\n\\n<FigureImage\\n  caption={{ title: \'Figure 27\', description: `Business Hour Result` }}\\n  src=\\"/assets/images/products/kata-omnichat/image27.webp\\"\\n  alt=\\"Kata Omnichat\\"\\n  naturalHeight={1000}\\n  naturalWidth={1600}\\n/>\\n","code":"var Component=(()=>{var h=Object.create;var o=Object.defineProperty;var d=Object.getOwnPropertyDescriptor;var p=Object.getOwnPropertyNames;var b=Object.getPrototypeOf,g=Object.prototype.hasOwnProperty;var r=e=>o(e,\\"__esModule\\",{value:!0});var m=(e,t)=>()=>(t||e((t={exports:{}}).exports,t),t.exports),f=(e,t)=>{for(var i in t)o(e,i,{get:t[i],enumerable:!0})},l=(e,t,i,n)=>{if(t&&typeof t==\\"object\\"||typeof t==\\"function\\")for(let a of p(t))!g.call(e,a)&&(i||a!==\\"default\\")&&o(e,a,{get:()=>t[a],enumerable:!(n=d(t,a))||n.enumerable});return e},y=(e,t)=>l(r(o(e!=null?h(b(e)):{},\\"default\\",!t&&e&&e.__esModule?{get:()=>e.default,enumerable:!0}:{value:e,enumerable:!0})),e),w=(e=>(t,i)=>e&&e.get(t)||(i=l(r({}),t,1),e&&e.set(t,i),i))(typeof WeakMap!=\\"undefined\\"?new WeakMap:0);var c=m((F,u)=>{u.exports=_jsx_runtime});var I={};f(I,{default:()=>j,frontmatter:()=>x});var s=y(c()),x={id:\\"set-up-business-hours\\",title:\\"Set up business hours\\",prev:\\"set-up-quick-reply\\",next:\\"set-up-ice-breaker\\",section:\\"Manage Inbox Settings\\"};function v(e={}){let{wrapper:t}=e.components||{};return t?(0,s.jsx)(t,Object.assign({},e,{children:(0,s.jsx)(i,{})})):i();function i(){let n=Object.assign({p:\\"p\\",ol:\\"ol\\",li:\\"li\\",strong:\\"strong\\",em:\\"em\\"},e.components),{FigureImage:a}=n;return a||k(\\"FigureImage\\",!0),(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.p,{children:\\"In this section, You can set your business availability that will show the available hours on the live chat widget even if all the agents are offline. Outside available hours visitors can be warned with a message and a pre-chat form. The steps to set up business hours are shown as below:\\"}),`\\n`,(0,s.jsxs)(n.ol,{children:[`\\n`,(0,s.jsxs)(n.li,{children:[\\"Click on the \\",(0,s.jsx)(n.strong,{children:\\"Business Hours\\"}),\\" tap in \\",(0,s.jsx)(n.strong,{children:\\"Inbox Setting\\"})]}),`\\n`,(0,s.jsx)(n.li,{children:\\"Tick on Enable business availability for this inbox, then all business hours settings will be appeared\\"}),`\\n`,(0,s.jsx)(n.li,{children:\\"Enter your Unavailable message for visitors, then this message will automatically be sent to your customer when they start the conversation at the out of business hours. The message can be up to 1000 messages\\"}),`\\n`,(0,s.jsx)(n.li,{children:\\"Select your time zone\\"}),`\\n`,(0,s.jsx)(n.li,{children:\\"Set up your business hours every day. If your business is unavailable all day, you can just untick the selected day, then you are recorded as unavailable all day\\"}),`\\n`,(0,s.jsxs)(n.li,{children:[\\"Click on the update business hours button. If successful, then the \\\\u201C\\",(0,s.jsx)(n.em,{children:\\"Inbox setting updated successfully\\"}),\\"\\\\u201D message will be appeared\\"]}),`\\n`]}),`\\n`,(0,s.jsx)(a,{caption:{title:\\"Figure 26\\",description:\\"Business Hour Set Up\\"},src:\\"/assets/images/products/kata-omnichat/image26.webp\\",alt:\\"Kata Omnichat\\",naturalHeight:1e3,naturalWidth:1600}),`\\n`,(0,s.jsx)(n.p,{children:\\"The final result of the business hour set up is shown below\\"}),`\\n`,(0,s.jsx)(a,{caption:{title:\\"Figure 27\\",description:\\"Business Hour Result\\"},src:\\"/assets/images/products/kata-omnichat/image27.webp\\",alt:\\"Kata Omnichat\\",naturalHeight:1e3,naturalWidth:1600})]})}}var j=v;function k(e,t){throw new Error(\\"Expected \\"+(t?\\"component\\":\\"object\\")+\\" `\\"+e+\\"` to be defined: you likely forgot to import, pass, or provide it.\\")}return w(I);})();\\n;return Component;"},"_id":"kata-omnichat/manage-inbox-settings/set-up-business-hours.mdx","_raw":{"sourceFilePath":"kata-omnichat/manage-inbox-settings/set-up-business-hours.mdx","sourceFileName":"set-up-business-hours.mdx","sourceFileDir":"kata-omnichat/manage-inbox-settings","contentType":"mdx","flattenedPath":"kata-omnichat/manage-inbox-settings/set-up-business-hours"},"type":"KataOmnichat","slug":["manage-inbox-settings","set-up-business-hours"],"excerpt":"\\nIn this section, You can set your business availability that will show the available hours on the live chat widget even if all the agents are offline. Outside available hours visitors can be warned with a message and a pre-chat form"}');
;// CONCATENATED MODULE: ./.contentlayer/generated/KataOmnichat/kata-omnichat__manage-inbox-settings__set-up-ice-breaker.mdx.json
const kata_omnichat_manage_inbox_settings_set_up_ice_breaker_mdx_namespaceObject = JSON.parse('{"id":"set-up-ice-breaker","section":"Manage Inbox Settings","title":"Set Up Ice Breaker","prev":"set-up-business-hours","next":"add-agent","body":{"raw":"\\nIce Breakers section provides a way for very first time end-users to start a conversation with a business with a list of frequently asked questions. The steps to set up Ice breaker are shown as below:\\n\\n1. Click on the **Ice Breaker** tap in **Inbox Setting**\\n2. Enter the frequently asked question\\n3. Click **Add New Ice Breaker**\\n4. Ice breaker added to your list up to 4 messages\\n\\n<FigureImage\\n  caption={{ title: \'Figure 28\', description: `Ice Breaker Set Up` }}\\n  src=\\"/assets/images/products/kata-omnichat/image28.webp\\"\\n  alt=\\"Kata Omnichat\\"\\n  naturalHeight={1000}\\n  naturalWidth={1600}\\n/>\\n","code":"var Component=(()=>{var u=Object.create;var o=Object.defineProperty;var p=Object.getOwnPropertyDescriptor;var g=Object.getOwnPropertyNames;var h=Object.getPrototypeOf,m=Object.prototype.hasOwnProperty;var a=e=>o(e,\\"__esModule\\",{value:!0});var f=(e,t)=>()=>(t||e((t={exports:{}}).exports,t),t.exports),k=(e,t)=>{for(var i in t)o(e,i,{get:t[i],enumerable:!0})},c=(e,t,i,r)=>{if(t&&typeof t==\\"object\\"||typeof t==\\"function\\")for(let s of g(t))!m.call(e,s)&&(i||s!==\\"default\\")&&o(e,s,{get:()=>t[s],enumerable:!(r=p(t,s))||r.enumerable});return e},x=(e,t)=>c(a(o(e!=null?u(h(e)):{},\\"default\\",!t&&e&&e.__esModule?{get:()=>e.default,enumerable:!0}:{value:e,enumerable:!0})),e),b=(e=>(t,i)=>e&&e.get(t)||(i=c(a({}),t,1),e&&e.set(t,i),i))(typeof WeakMap!=\\"undefined\\"?new WeakMap:0);var d=f((B,l)=>{l.exports=_jsx_runtime});var _={};k(_,{default:()=>j,frontmatter:()=>I});var n=x(d()),I={id:\\"set-up-ice-breaker\\",title:\\"Set Up Ice Breaker\\",prev:\\"set-up-business-hours\\",next:\\"add-agent\\",section:\\"Manage Inbox Settings\\"};function w(e={}){let{wrapper:t}=e.components||{};return t?(0,n.jsx)(t,Object.assign({},e,{children:(0,n.jsx)(i,{})})):i();function i(){let r=Object.assign({p:\\"p\\",ol:\\"ol\\",li:\\"li\\",strong:\\"strong\\"},e.components),{FigureImage:s}=r;return s||y(\\"FigureImage\\",!0),(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(r.p,{children:\\"Ice Breakers section provides a way for very first time end-users to start a conversation with a business with a list of frequently asked questions. The steps to set up Ice breaker are shown as below:\\"}),`\\n`,(0,n.jsxs)(r.ol,{children:[`\\n`,(0,n.jsxs)(r.li,{children:[\\"Click on the \\",(0,n.jsx)(r.strong,{children:\\"Ice Breaker\\"}),\\" tap in \\",(0,n.jsx)(r.strong,{children:\\"Inbox Setting\\"})]}),`\\n`,(0,n.jsx)(r.li,{children:\\"Enter the frequently asked question\\"}),`\\n`,(0,n.jsxs)(r.li,{children:[\\"Click \\",(0,n.jsx)(r.strong,{children:\\"Add New Ice Breaker\\"})]}),`\\n`,(0,n.jsx)(r.li,{children:\\"Ice breaker added to your list up to 4 messages\\"}),`\\n`]}),`\\n`,(0,n.jsx)(s,{caption:{title:\\"Figure 28\\",description:\\"Ice Breaker Set Up\\"},src:\\"/assets/images/products/kata-omnichat/image28.webp\\",alt:\\"Kata Omnichat\\",naturalHeight:1e3,naturalWidth:1600})]})}}var j=w;function y(e,t){throw new Error(\\"Expected \\"+(t?\\"component\\":\\"object\\")+\\" `\\"+e+\\"` to be defined: you likely forgot to import, pass, or provide it.\\")}return b(_);})();\\n;return Component;"},"_id":"kata-omnichat/manage-inbox-settings/set-up-ice-breaker.mdx","_raw":{"sourceFilePath":"kata-omnichat/manage-inbox-settings/set-up-ice-breaker.mdx","sourceFileName":"set-up-ice-breaker.mdx","sourceFileDir":"kata-omnichat/manage-inbox-settings","contentType":"mdx","flattenedPath":"kata-omnichat/manage-inbox-settings/set-up-ice-breaker"},"type":"KataOmnichat","slug":["manage-inbox-settings","set-up-ice-breaker"],"excerpt":"\\nIce Breakers section provides a way for very first time end-users to start a conversation with a business with a list of frequently asked questions. The steps to set up Ice breaker are shown as below:\\n\\n1"}');
;// CONCATENATED MODULE: ./.contentlayer/generated/KataOmnichat/kata-omnichat__manage-inbox-settings__set-up-quick-reply.mdx.json
const kata_omnichat_manage_inbox_settings_set_up_quick_reply_mdx_namespaceObject = JSON.parse('{"id":"set-up-quick-reply","section":"Manage Inbox Settings","title":"Setup quick reply","prev":"manage-agents-to-inbox","next":"set-up-business-hours","body":{"raw":"\\nThe quick replies is the feature that you can manage any **Quick Reply** that they want to show to their customers using a _button-type_ reply. In one quick reply, you can input up to 13 quick answers. Follow these steps to set up your quick reply:\\n\\n1. Go to **home page**\\n2. Go to **Inbox** on the sidebar\\n3. Choose Instagram Messaging channel **setting**\\n4. Click **Quick reply** tap\\n5. Click **Add New Quick reply**\\n6. Enter the quick reply name and contents details. Remember that in 1 quick reply you can have 13 contents, so make sure you click **Enter** after inputting the content\\n\\n<FigureImage\\n  caption={{ title: \'Figure 24\', description: `Set up quick reply` }}\\n  src=\\"/assets/images/products/kata-omnichat/image24.webp\\"\\n  alt=\\"Kata Omnichat\\"\\n  naturalHeight={1000}\\n  naturalWidth={1600}\\n/>\\n\\n7. Submit the content. Then, to take a look at how quick reply, go to the conversation\\n8. Click quick reply on the text box, choose the quick reply you want to use\\n9. Text something first to your customer, then the content will come after type any text\\n\\n<FigureImage\\n  caption={{ title: \'Figure 25\', description: `Quick reply result` }}\\n  src=\\"/assets/images/products/kata-omnichat/image25.webp\\"\\n  alt=\\"Kata Omnichat\\"\\n  naturalHeight={1600}\\n  naturalWidth={738}\\n/>\\n","code":"var Component=(()=>{var h=Object.create;var a=Object.defineProperty;var p=Object.getOwnPropertyDescriptor;var d=Object.getOwnPropertyNames;var g=Object.getPrototypeOf,m=Object.prototype.hasOwnProperty;var c=t=>a(t,\\"__esModule\\",{value:!0});var y=(t,n)=>()=>(n||t((n={exports:{}}).exports,n),n.exports),k=(t,n)=>{for(var r in n)a(t,r,{get:n[r],enumerable:!0})},s=(t,n,r,i)=>{if(n&&typeof n==\\"object\\"||typeof n==\\"function\\")for(let o of d(n))!m.call(t,o)&&(r||o!==\\"default\\")&&a(t,o,{get:()=>n[o],enumerable:!(i=p(n,o))||i.enumerable});return t},x=(t,n)=>s(c(a(t!=null?h(g(t)):{},\\"default\\",!n&&t&&t.__esModule?{get:()=>t.default,enumerable:!0}:{value:t,enumerable:!0})),t),b=(t=>(n,r)=>t&&t.get(n)||(r=s(c({}),n,1),t&&t.set(n,r),r))(typeof WeakMap!=\\"undefined\\"?new WeakMap:0);var u=y((C,l)=>{l.exports=_jsx_runtime});var _={};k(_,{default:()=>q,frontmatter:()=>f});var e=x(u()),f={id:\\"set-up-quick-reply\\",title:\\"Setup quick reply\\",prev:\\"manage-agents-to-inbox\\",next:\\"set-up-business-hours\\",section:\\"Manage Inbox Settings\\"};function w(t={}){let{wrapper:n}=t.components||{};return n?(0,e.jsx)(n,Object.assign({},t,{children:(0,e.jsx)(r,{})})):r();function r(){let i=Object.assign({p:\\"p\\",strong:\\"strong\\",em:\\"em\\",ol:\\"ol\\",li:\\"li\\"},t.components),{FigureImage:o}=i;return o||j(\\"FigureImage\\",!0),(0,e.jsxs)(e.Fragment,{children:[(0,e.jsxs)(i.p,{children:[\\"The quick replies is the feature that you can manage any \\",(0,e.jsx)(i.strong,{children:\\"Quick Reply\\"}),\\" that they want to show to their customers using a \\",(0,e.jsx)(i.em,{children:\\"button-type\\"}),\\" reply. In one quick reply, you can input up to 13 quick answers. Follow these steps to set up your quick reply:\\"]}),`\\n`,(0,e.jsxs)(i.ol,{children:[`\\n`,(0,e.jsxs)(i.li,{children:[\\"Go to \\",(0,e.jsx)(i.strong,{children:\\"home page\\"})]}),`\\n`,(0,e.jsxs)(i.li,{children:[\\"Go to \\",(0,e.jsx)(i.strong,{children:\\"Inbox\\"}),\\" on the sidebar\\"]}),`\\n`,(0,e.jsxs)(i.li,{children:[\\"Choose Instagram Messaging channel \\",(0,e.jsx)(i.strong,{children:\\"setting\\"})]}),`\\n`,(0,e.jsxs)(i.li,{children:[\\"Click \\",(0,e.jsx)(i.strong,{children:\\"Quick reply\\"}),\\" tap\\"]}),`\\n`,(0,e.jsxs)(i.li,{children:[\\"Click \\",(0,e.jsx)(i.strong,{children:\\"Add New Quick reply\\"})]}),`\\n`,(0,e.jsxs)(i.li,{children:[\\"Enter the quick reply name and contents details. Remember that in 1 quick reply you can have 13 contents, so make sure you click \\",(0,e.jsx)(i.strong,{children:\\"Enter\\"}),\\" after inputting the content\\"]}),`\\n`]}),`\\n`,(0,e.jsx)(o,{caption:{title:\\"Figure 24\\",description:\\"Set up quick reply\\"},src:\\"/assets/images/products/kata-omnichat/image24.webp\\",alt:\\"Kata Omnichat\\",naturalHeight:1e3,naturalWidth:1600}),`\\n`,(0,e.jsxs)(i.ol,{start:\\"7\\",children:[`\\n`,(0,e.jsx)(i.li,{children:\\"Submit the content. Then, to take a look at how quick reply, go to the conversation\\"}),`\\n`,(0,e.jsx)(i.li,{children:\\"Click quick reply on the text box, choose the quick reply you want to use\\"}),`\\n`,(0,e.jsx)(i.li,{children:\\"Text something first to your customer, then the content will come after type any text\\"}),`\\n`]}),`\\n`,(0,e.jsx)(o,{caption:{title:\\"Figure 25\\",description:\\"Quick reply result\\"},src:\\"/assets/images/products/kata-omnichat/image25.webp\\",alt:\\"Kata Omnichat\\",naturalHeight:1600,naturalWidth:738})]})}}var q=w;function j(t,n){throw new Error(\\"Expected \\"+(n?\\"component\\":\\"object\\")+\\" `\\"+t+\\"` to be defined: you likely forgot to import, pass, or provide it.\\")}return b(_);})();\\n;return Component;"},"_id":"kata-omnichat/manage-inbox-settings/set-up-quick-reply.mdx","_raw":{"sourceFilePath":"kata-omnichat/manage-inbox-settings/set-up-quick-reply.mdx","sourceFileName":"set-up-quick-reply.mdx","sourceFileDir":"kata-omnichat/manage-inbox-settings","contentType":"mdx","flattenedPath":"kata-omnichat/manage-inbox-settings/set-up-quick-reply"},"type":"KataOmnichat","slug":["manage-inbox-settings","set-up-quick-reply"],"excerpt":"\\nThe quick replies is the feature that you can manage any **Quick Reply** that they want to show to their customers using a _button-type_ reply. In one quick reply, you can input up to 13 quick answers"}');
;// CONCATENATED MODULE: ./.contentlayer/generated/KataOmnichat/kata-omnichat__manage-inbox__add-agents.mdx.json
const kata_omnichat_manage_inbox_add_agents_mdx_namespaceObject = JSON.parse('{"id":"inbox-add-agents","section":"Manage Inbox","title":"Add agents","prev":"inbox-add-inbox","next":"manage-agents-to-inbox","body":{"raw":"\\nThe last step before completing the inbox is to add your agents. You can add agents that have been invited and verified. Or, if you don’t have any agents yet, you can just add admin first and add another agent later.\\n\\n<FigureImage\\n  caption={{ title: \'Figure 20\', description: ` Add Agents` }}\\n  src=\\"/assets/images/products/kata-omnichat/image20.webp\\"\\n  alt=\\"Kata Omnichat\\"\\n  naturalHeight={1000}\\n  naturalWidth={1600}\\n/>\\n\\nLastly, your inbox has been created and you can check from the sidebar in the **Inboxes** submenu.\\n","code":"var Component=(()=>{var u=Object.create;var r=Object.defineProperty;var m=Object.getOwnPropertyDescriptor;var p=Object.getOwnPropertyNames;var h=Object.getPrototypeOf,x=Object.prototype.hasOwnProperty;var s=e=>r(e,\\"__esModule\\",{value:!0});var l=(e,t)=>()=>(t||e((t={exports:{}}).exports,t),t.exports),b=(e,t)=>{for(var n in t)r(e,n,{get:t[n],enumerable:!0})},d=(e,t,n,i)=>{if(t&&typeof t==\\"object\\"||typeof t==\\"function\\")for(let o of p(t))!x.call(e,o)&&(n||o!==\\"default\\")&&r(e,o,{get:()=>t[o],enumerable:!(i=m(t,o))||i.enumerable});return e},f=(e,t)=>d(s(r(e!=null?u(h(e)):{},\\"default\\",!t&&e&&e.__esModule?{get:()=>e.default,enumerable:!0}:{value:e,enumerable:!0})),e),y=(e=>(t,n)=>e&&e.get(t)||(n=d(s({}),t,1),e&&e.set(t,n),n))(typeof WeakMap!=\\"undefined\\"?new WeakMap:0);var g=l((I,c)=>{c.exports=_jsx_runtime});var M={};b(M,{default:()=>v,frontmatter:()=>j});var a=f(g()),j={id:\\"inbox-add-agents\\",title:\\"Add agents\\",prev:\\"inbox-add-inbox\\",next:\\"manage-agents-to-inbox\\",section:\\"Manage Inbox\\"};function _(e={}){let{wrapper:t}=e.components||{};return t?(0,a.jsx)(t,Object.assign({},e,{children:(0,a.jsx)(n,{})})):n();function n(){let i=Object.assign({p:\\"p\\",strong:\\"strong\\"},e.components),{FigureImage:o}=i;return o||F(\\"FigureImage\\",!0),(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(i.p,{children:\\"The last step before completing the inbox is to add your agents. You can add agents that have been invited and verified. Or, if you don\\\\u2019t have any agents yet, you can just add admin first and add another agent later.\\"}),`\\n`,(0,a.jsx)(o,{caption:{title:\\"Figure 20\\",description:\\" Add Agents\\"},src:\\"/assets/images/products/kata-omnichat/image20.webp\\",alt:\\"Kata Omnichat\\",naturalHeight:1e3,naturalWidth:1600}),`\\n`,(0,a.jsxs)(i.p,{children:[\\"Lastly, your inbox has been created and you can check from the sidebar in the \\",(0,a.jsx)(i.strong,{children:\\"Inboxes\\"}),\\" submenu.\\"]})]})}}var v=_;function F(e,t){throw new Error(\\"Expected \\"+(t?\\"component\\":\\"object\\")+\\" `\\"+e+\\"` to be defined: you likely forgot to import, pass, or provide it.\\")}return y(M);})();\\n;return Component;"},"_id":"kata-omnichat/manage-inbox/add-agents.mdx","_raw":{"sourceFilePath":"kata-omnichat/manage-inbox/add-agents.mdx","sourceFileName":"add-agents.mdx","sourceFileDir":"kata-omnichat/manage-inbox","contentType":"mdx","flattenedPath":"kata-omnichat/manage-inbox/add-agents"},"type":"KataOmnichat","slug":["manage-inbox","add-agents"],"excerpt":"\\nThe last step before completing the inbox is to add your agents. You can add agents that have been invited and verified"}');
;// CONCATENATED MODULE: ./.contentlayer/generated/KataOmnichat/kata-omnichat__manage-inbox__add-inbox.mdx.json
const kata_omnichat_manage_inbox_add_inbox_mdx_namespaceObject = JSON.parse('{"id":"inbox-add-inbox","section":"Manage Inbox","hiddenTitle":"Add Inbox","prev":"configure-account-how-to-use","next":"inbox-add-agents","body":{"raw":"\\nInbox is the feature where you can connect your messaging channels to your Kata Omnichat account. Currently, Kata Omnichat provides 2 kinds of inboxes which are Whatsapp Business and Instagram Messaging.\\n\\n<FigureImage\\n  caption={{ title: \'Figure 16\', description: `Manage Inbox` }}\\n  src=\\"/assets/images/products/kata-omnichat/image16.webp\\"\\n  alt=\\"Kata Omnichat\\"\\n  naturalHeight={900}\\n  naturalWidth={1600}\\n/>\\n\\n<div className=\\"info\\">\\n  <img className=\\"borderless\\" src=\\"/assets/images/icon-info.svg\\" />\\n  <p>Note: 1 account can connect to more than 1 Whatsapp Business API account or more than 1 Instagram Messaging.</p>\\n</div>\\n\\n## Add inbox\\n\\nThere are 3 ways to add an inbox in Omnichat. These are the steps to add an inbox as below:\\n\\n1. **The first** way is when you onboard your account. In this way, you can see details [here](/kata-omnichat/before-you-start/prepare-your-instagram-business-account)\\n2. **The second** way is from the sidebar of your account dashboard. Click on the plus icon (⊕), then you will be directed to the **Add** **Inboxes** page\\n\\n<FigureImage\\n  caption={{ title: \'Figure 17\', description: `Add Inbox` }}\\n  src=\\"/assets/images/products/kata-omnichat/image17.webp\\"\\n  alt=\\"Kata Omnichat\\"\\n  naturalHeight={900}\\n  naturalWidth={1600}\\n/>\\n\\n3. **The Third way** is explained below:\\n\\n   1. Click **Setting** in the sidebar\\n   2. Click **Inboxes** in the sidebar, then you will be directed to the **Inboxes** screen\\n   3. Click **Add Inbox** button in the upper right corner, then you will be directed to **Add** **Inboxes** page\\n\\n<FigureImage\\n  caption={{ title: \'Figure 18\', description: `Inboxes Screen` }}\\n  src=\\"/assets/images/products/kata-omnichat/image18.webp\\"\\n  alt=\\"Kata Omnichat\\"\\n  naturalHeight={1000}\\n  naturalWidth={1600}\\n/>\\n\\nAfter being directed to the Add **Inboxes** page, then you need to follow the instruction before completing adding the inboxes.\\n\\n**In this step**, after you found the first step to add or create an inbox, you need to authenticate your account based on the selected channel. Learn more about connecting with Instagram Direct messages [here](/kata-omnichat/before-you-start/prepare-your-instagram-business-account) and Whatsapp Business API [here](/kata-omnichat/before-you-start/prepare-your-waba-account). Then, after successfully connecting your Instagram account or Whatsapp Business API, you will be able to give a name to your inbox. Click the **Create inbox** button then you will be directed to the next step.\\n\\n<FigureImage\\n  caption={{ title: \'Figure 19\', description: `Create Inbox` }}\\n  src=\\"/assets/images/products/kata-omnichat/image19.webp\\"\\n  alt=\\"Kata Omnichat\\"\\n  naturalHeight={1000}\\n  naturalWidth={1600}\\n/>\\n","code":"var Component=(()=>{var l=Object.create;var r=Object.defineProperty;var u=Object.getOwnPropertyDescriptor;var g=Object.getOwnPropertyNames;var p=Object.getPrototypeOf,b=Object.prototype.hasOwnProperty;var s=t=>r(t,\\"__esModule\\",{value:!0});var m=(t,a)=>()=>(a||t((a={exports:{}}).exports,a),a.exports),x=(t,a)=>{for(var i in a)r(t,i,{get:a[i],enumerable:!0})},c=(t,a,i,n)=>{if(a&&typeof a==\\"object\\"||typeof a==\\"function\\")for(let o of g(a))!b.call(t,o)&&(i||o!==\\"default\\")&&r(t,o,{get:()=>a[o],enumerable:!(n=u(a,o))||n.enumerable});return t},y=(t,a)=>c(s(r(t!=null?l(p(t)):{},\\"default\\",!a&&t&&t.__esModule?{get:()=>t.default,enumerable:!0}:{value:t,enumerable:!0})),t),f=(t=>(a,i)=>t&&t.get(a)||(i=c(s({}),a,1),t&&t.set(a,i),i))(typeof WeakMap!=\\"undefined\\"?new WeakMap:0);var h=m((j,d)=>{d.exports=_jsx_runtime});var C={};x(C,{default:()=>k,frontmatter:()=>w});var e=y(h()),w={id:\\"inbox-add-inbox\\",prev:\\"configure-account-how-to-use\\",next:\\"inbox-add-agents\\",section:\\"Manage Inbox\\",hiddenTitle:\\"Add Inbox\\"};function I(t={}){let{wrapper:a}=t.components||{};return a?(0,e.jsx)(a,Object.assign({},t,{children:(0,e.jsx)(i,{})})):i();function i(){let n=Object.assign({p:\\"p\\",h2:\\"h2\\",a:\\"a\\",span:\\"span\\",ol:\\"ol\\",li:\\"li\\",strong:\\"strong\\"},t.components),{FigureImage:o}=n;return o||A(\\"FigureImage\\",!0),(0,e.jsxs)(e.Fragment,{children:[(0,e.jsx)(n.p,{children:\\"Inbox is the feature where you can connect your messaging channels to your Kata Omnichat account. Currently, Kata Omnichat provides 2 kinds of inboxes which are Whatsapp Business and Instagram Messaging.\\"}),`\\n`,(0,e.jsx)(o,{caption:{title:\\"Figure 16\\",description:\\"Manage Inbox\\"},src:\\"/assets/images/products/kata-omnichat/image16.webp\\",alt:\\"Kata Omnichat\\",naturalHeight:900,naturalWidth:1600}),`\\n`,(0,e.jsxs)(\\"div\\",{className:\\"info\\",children:[(0,e.jsx)(\\"img\\",{className:\\"borderless\\",src:\\"/assets/images/icon-info.svg\\"}),(0,e.jsx)(\\"p\\",{children:\\"Note: 1 account can connect to more than 1 Whatsapp Business API account or more than 1 Instagram Messaging.\\"})]}),`\\n`,(0,e.jsxs)(n.h2,{id:\\"add-inbox\\",children:[(0,e.jsx)(n.a,{className:\\"anchor\\",href:\\"#add-inbox\\",children:(0,e.jsx)(n.span,{className:\\"icon icon-link\\"})}),\\"Add inbox\\"]}),`\\n`,(0,e.jsx)(n.p,{children:\\"There are 3 ways to add an inbox in Omnichat. These are the steps to add an inbox as below:\\"}),`\\n`,(0,e.jsxs)(n.ol,{children:[`\\n`,(0,e.jsxs)(n.li,{children:[(0,e.jsx)(n.strong,{children:\\"The first\\"}),\\" way is when you onboard your account. In this way, you can see details \\",(0,e.jsx)(n.a,{href:\\"/kata-omnichat/before-you-start/prepare-your-instagram-business-account\\",children:\\"here\\"})]}),`\\n`,(0,e.jsxs)(n.li,{children:[(0,e.jsx)(n.strong,{children:\\"The second\\"}),\\" way is from the sidebar of your account dashboard. Click on the plus icon (\\\\u2295), then you will be directed to the \\",(0,e.jsx)(n.strong,{children:\\"Add\\"}),\\" \\",(0,e.jsx)(n.strong,{children:\\"Inboxes\\"}),\\" page\\"]}),`\\n`]}),`\\n`,(0,e.jsx)(o,{caption:{title:\\"Figure 17\\",description:\\"Add Inbox\\"},src:\\"/assets/images/products/kata-omnichat/image17.webp\\",alt:\\"Kata Omnichat\\",naturalHeight:900,naturalWidth:1600}),`\\n`,(0,e.jsxs)(n.ol,{start:\\"3\\",children:[`\\n`,(0,e.jsxs)(n.li,{children:[`\\n`,(0,e.jsxs)(n.p,{children:[(0,e.jsx)(n.strong,{children:\\"The Third way\\"}),\\" is explained below:\\"]}),`\\n`,(0,e.jsxs)(n.ol,{children:[`\\n`,(0,e.jsxs)(n.li,{children:[\\"Click \\",(0,e.jsx)(n.strong,{children:\\"Setting\\"}),\\" in the sidebar\\"]}),`\\n`,(0,e.jsxs)(n.li,{children:[\\"Click \\",(0,e.jsx)(n.strong,{children:\\"Inboxes\\"}),\\" in the sidebar, then you will be directed to the \\",(0,e.jsx)(n.strong,{children:\\"Inboxes\\"}),\\" screen\\"]}),`\\n`,(0,e.jsxs)(n.li,{children:[\\"Click \\",(0,e.jsx)(n.strong,{children:\\"Add Inbox\\"}),\\" button in the upper right corner, then you will be directed to \\",(0,e.jsx)(n.strong,{children:\\"Add\\"}),\\" \\",(0,e.jsx)(n.strong,{children:\\"Inboxes\\"}),\\" page\\"]}),`\\n`]}),`\\n`]}),`\\n`]}),`\\n`,(0,e.jsx)(o,{caption:{title:\\"Figure 18\\",description:\\"Inboxes Screen\\"},src:\\"/assets/images/products/kata-omnichat/image18.webp\\",alt:\\"Kata Omnichat\\",naturalHeight:1e3,naturalWidth:1600}),`\\n`,(0,e.jsxs)(n.p,{children:[\\"After being directed to the Add \\",(0,e.jsx)(n.strong,{children:\\"Inboxes\\"}),\\" page, then you need to follow the instruction before completing adding the inboxes.\\"]}),`\\n`,(0,e.jsxs)(n.p,{children:[(0,e.jsx)(n.strong,{children:\\"In this step\\"}),\\", after you found the first step to add or create an inbox, you need to authenticate your account based on the selected channel. Learn more about connecting with Instagram Direct messages \\",(0,e.jsx)(n.a,{href:\\"/kata-omnichat/before-you-start/prepare-your-instagram-business-account\\",children:\\"here\\"}),\\" and Whatsapp Business API \\",(0,e.jsx)(n.a,{href:\\"/kata-omnichat/before-you-start/prepare-your-waba-account\\",children:\\"here\\"}),\\". Then, after successfully connecting your Instagram account or Whatsapp Business API, you will be able to give a name to your inbox. Click the \\",(0,e.jsx)(n.strong,{children:\\"Create inbox\\"}),\\" button then you will be directed to the next step.\\"]}),`\\n`,(0,e.jsx)(o,{caption:{title:\\"Figure 19\\",description:\\"Create Inbox\\"},src:\\"/assets/images/products/kata-omnichat/image19.webp\\",alt:\\"Kata Omnichat\\",naturalHeight:1e3,naturalWidth:1600})]})}}var k=I;function A(t,a){throw new Error(\\"Expected \\"+(a?\\"component\\":\\"object\\")+\\" `\\"+t+\\"` to be defined: you likely forgot to import, pass, or provide it.\\")}return f(C);})();\\n;return Component;"},"_id":"kata-omnichat/manage-inbox/add-inbox.mdx","_raw":{"sourceFilePath":"kata-omnichat/manage-inbox/add-inbox.mdx","sourceFileName":"add-inbox.mdx","sourceFileDir":"kata-omnichat/manage-inbox","contentType":"mdx","flattenedPath":"kata-omnichat/manage-inbox/add-inbox"},"type":"KataOmnichat","slug":["manage-inbox","add-inbox"],"excerpt":"\\nInbox is the feature where you can connect your messaging channels to your Kata Omnichat account. Currently, Kata Omnichat provides 2 kinds of inboxes which are Whatsapp Business and Instagram Messaging"}');
;// CONCATENATED MODULE: ./.contentlayer/generated/KataOmnichat/kata-omnichat__manage-label__add-conversation-to-a-label.mdx.json
const kata_omnichat_manage_label_add_conversation_to_a_label_mdx_namespaceObject = JSON.parse('{"id":"add-conversation-to-a-label","section":"Manage Label","title":"Add conversation to a label","prev":"add-label","next":"add-teams","body":{"raw":"\\nAfter setting up your label, then both Admin and agent can use the label to group the conversation into the label by adding the selected conversation into the label. To add the conversion to the label, you need to follow these steps.\\n\\n1. Go to the **conversation** page, then select the conversation you want to label\\n2. Click **more details** under the name of your customer. Then the right sidebar will appear\\n\\n<FigureImage\\n  caption={{ title: \'Figure 54\', description: `More Details in Conversation` }}\\n  src=\\"/assets/images/products/kata-omnichat/image54.webp\\"\\n  alt=\\"Kata Omnichat\\"\\n  naturalHeight={1000}\\n  naturalWidth={1600}\\n/>\\n\\n3. Go to conversation labels, then click **add labels**\\n4. Choose the label you want and you can choose more than one label for a conversation\\n\\n<FigureImage\\n  caption={{ title: \'Figure 55\', description: `Add Conversation to label` }}\\n  src=\\"/assets/images/products/kata-omnichat/image55.webp\\"\\n  alt=\\"Kata Omnichat\\"\\n  naturalHeight={1000}\\n  naturalWidth={1600}\\n/>\\n\\n5. After finishing adding your label. Then go to the label on the left sidebar. Check if the conversation has been added to the label\\n\\n<FigureImage\\n  caption={{ title: \'Figure 56\', description: `Label Result` }}\\n  src=\\"/assets/images/products/kata-omnichat/image56.webp\\"\\n  alt=\\"Kata Omnichat\\"\\n  naturalHeight={1000}\\n  naturalWidth={1600}\\n/>\\n","code":"var Component=(()=>{var h=Object.create;var r=Object.defineProperty;var g=Object.getOwnPropertyDescriptor;var u=Object.getOwnPropertyNames;var m=Object.getPrototypeOf,p=Object.prototype.hasOwnProperty;var l=e=>r(e,\\"__esModule\\",{value:!0});var b=(e,t)=>()=>(t||e((t={exports:{}}).exports,t),t.exports),f=(e,t)=>{for(var o in t)r(e,o,{get:t[o],enumerable:!0})},s=(e,t,o,a)=>{if(t&&typeof t==\\"object\\"||typeof t==\\"function\\")for(let i of u(t))!p.call(e,i)&&(o||i!==\\"default\\")&&r(e,i,{get:()=>t[i],enumerable:!(a=g(t,i))||a.enumerable});return e},v=(e,t)=>s(l(r(e!=null?h(m(e)):{},\\"default\\",!t&&e&&e.__esModule?{get:()=>e.default,enumerable:!0}:{value:e,enumerable:!0})),e),x=(e=>(t,o)=>e&&e.get(t)||(o=s(l({}),t,1),e&&e.set(t,o),o))(typeof WeakMap!=\\"undefined\\"?new WeakMap:0);var d=b((F,c)=>{c.exports=_jsx_runtime});var k={};f(k,{default:()=>j,frontmatter:()=>y});var n=v(d()),y={id:\\"add-conversation-to-a-label\\",title:\\"Add conversation to a label\\",prev:\\"add-label\\",next:\\"add-teams\\",section:\\"Manage Label\\"};function w(e={}){let{wrapper:t}=e.components||{};return t?(0,n.jsx)(t,Object.assign({},e,{children:(0,n.jsx)(o,{})})):o();function o(){let a=Object.assign({p:\\"p\\",ol:\\"ol\\",li:\\"li\\",strong:\\"strong\\"},e.components),{FigureImage:i}=a;return i||_(\\"FigureImage\\",!0),(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(a.p,{children:\\"After setting up your label, then both Admin and agent can use the label to group the conversation into the label by adding the selected conversation into the label. To add the conversion to the label, you need to follow these steps.\\"}),`\\n`,(0,n.jsxs)(a.ol,{children:[`\\n`,(0,n.jsxs)(a.li,{children:[\\"Go to the \\",(0,n.jsx)(a.strong,{children:\\"conversation\\"}),\\" page, then select the conversation you want to label\\"]}),`\\n`,(0,n.jsxs)(a.li,{children:[\\"Click \\",(0,n.jsx)(a.strong,{children:\\"more details\\"}),\\" under the name of your customer. Then the right sidebar will appear\\"]}),`\\n`]}),`\\n`,(0,n.jsx)(i,{caption:{title:\\"Figure 54\\",description:\\"More Details in Conversation\\"},src:\\"/assets/images/products/kata-omnichat/image54.webp\\",alt:\\"Kata Omnichat\\",naturalHeight:1e3,naturalWidth:1600}),`\\n`,(0,n.jsxs)(a.ol,{start:\\"3\\",children:[`\\n`,(0,n.jsxs)(a.li,{children:[\\"Go to conversation labels, then click \\",(0,n.jsx)(a.strong,{children:\\"add labels\\"})]}),`\\n`,(0,n.jsx)(a.li,{children:\\"Choose the label you want and you can choose more than one label for a conversation\\"}),`\\n`]}),`\\n`,(0,n.jsx)(i,{caption:{title:\\"Figure 55\\",description:\\"Add Conversation to label\\"},src:\\"/assets/images/products/kata-omnichat/image55.webp\\",alt:\\"Kata Omnichat\\",naturalHeight:1e3,naturalWidth:1600}),`\\n`,(0,n.jsxs)(a.ol,{start:\\"5\\",children:[`\\n`,(0,n.jsx)(a.li,{children:\\"After finishing adding your label. Then go to the label on the left sidebar. Check if the conversation has been added to the label\\"}),`\\n`]}),`\\n`,(0,n.jsx)(i,{caption:{title:\\"Figure 56\\",description:\\"Label Result\\"},src:\\"/assets/images/products/kata-omnichat/image56.webp\\",alt:\\"Kata Omnichat\\",naturalHeight:1e3,naturalWidth:1600})]})}}var j=w;function _(e,t){throw new Error(\\"Expected \\"+(t?\\"component\\":\\"object\\")+\\" `\\"+e+\\"` to be defined: you likely forgot to import, pass, or provide it.\\")}return x(k);})();\\n;return Component;"},"_id":"kata-omnichat/manage-label/add-conversation-to-a-label.mdx","_raw":{"sourceFilePath":"kata-omnichat/manage-label/add-conversation-to-a-label.mdx","sourceFileName":"add-conversation-to-a-label.mdx","sourceFileDir":"kata-omnichat/manage-label","contentType":"mdx","flattenedPath":"kata-omnichat/manage-label/add-conversation-to-a-label"},"type":"KataOmnichat","slug":["manage-label","add-conversation-to-a-label"],"excerpt":"\\nAfter setting up your label, then both Admin and agent can use the label to group the conversation into the label by adding the selected conversation into the label. To add the conversion to the label, you need to follow these steps"}');
;// CONCATENATED MODULE: ./.contentlayer/generated/KataOmnichat/kata-omnichat__manage-label__add-label.mdx.json
const kata_omnichat_manage_label_add_label_mdx_namespaceObject = JSON.parse('{"id":"add-label","section":"Manage Label","hiddenTitle":"Add Label","prev":"add-contact","next":"add-conversation-to-a-label","body":{"raw":"\\nLabels help you to categorize conversations and prioritize them. You can assign a label to a conversation from the side panel. Labels are tied to the account and can be used to create custom workflows in your organization. You can assign custom colors to a label, it makes it easier to identify the label. You will be able to display the label on the sidebar to filter the conversations easily. Labels can be added by administrator only, while agents can participate in adding conversation into a label.\\n\\n<FigureImage\\n  caption={{ title: \'Figure 52\', description: `Manage Label` }}\\n  src=\\"/assets/images/products/kata-omnichat/image52.webp\\"\\n  alt=\\"Kata Omnichat\\"\\n  naturalHeight={1000}\\n  naturalWidth={1600}\\n/>\\n\\n## Add label\\n\\nIn this section, you can add, edit, and delete your label. To add a label, you can follow these steps.\\n\\n1. Go to the **Homepage**\\n2. Click the **Labels** menu on the sidebar, or you can click setting on the sidebar then click Labels\\n3. You will be directed to the Labels page.\\n4. Click add label to add the new label on the upper right corner, or you can edit and delete the label by clicking the icons beside agent description\\n5. The added label pop-up will appear and you need to enter the label name, description, and the color of the tag as your label\\n\\n<FigureImage\\n  caption={{ title: \'Figure 53\', description: `Add label` }}\\n  src=\\"/assets/images/products/kata-omnichat/image53.webp\\"\\n  alt=\\"Kata Omnichat\\"\\n  naturalHeight={1000}\\n  naturalWidth={1600}\\n/>\\n\\nHere are the field descriptions related to label management:\\n\\n<Table>\\n  <TableHead>\\n    <TableHeadRow>\\n      <TableHeadCell>Field Name</TableHeadCell>\\n      <TableHeadCell>Description</TableHeadCell>\\n    </TableHeadRow>\\n  </TableHead>\\n  <TableBody>\\n    <TableBodyRow>\\n      <TableBodyCell>Label name</TableBodyCell>\\n      <TableBodyCell>\\n        Enter the name of the label, The validation of label name is only Alphabets, Numbers, Hyphen, and Underscore are\\n        allowed. For example: Spam\\n      </TableBodyCell>\\n    </TableBodyRow>\\n    <TableBodyRow>\\n      <TableBodyCell>Description</TableBodyCell>\\n      <TableBodyCell>\\n        Enter the description of the label name, for example, Spam is for the repeated message with no indentation\\n      </TableBodyCell>\\n    </TableBodyRow>\\n    <TableBodyRow>\\n      <TableBodyCell>Colour</TableBodyCell>\\n      <TableBodyCell>\\n        Choose the color you want to be the identifier of the label. This color will be reflected on the sidebar and\\n        your conversation\\n      </TableBodyCell>\\n    </TableBodyRow>\\n    <TableBodyRow>\\n      <TableBodyCell>Show label on the sidebar</TableBodyCell>\\n      <TableBodyCell>\\n        If you tick the label on the sidebar, the label will show up on your sidebar,If you untick then the label will\\n        not show up on your sidebar\\n      </TableBodyCell>\\n    </TableBodyRow>\\n  </TableBody>\\n</Table>\\n","code":"var Component=(()=>{var w=Object.create;var c=Object.defineProperty;var T=Object.getOwnPropertyDescriptor;var x=Object.getOwnPropertyNames;var k=Object.getPrototypeOf,H=Object.prototype.hasOwnProperty;var m=a=>c(a,\\"__esModule\\",{value:!0});var L=(a,n)=>()=>(n||a((n={exports:{}}).exports,n),n.exports),C=(a,n)=>{for(var t in n)c(a,t,{get:n[t],enumerable:!0})},g=(a,n,t,l)=>{if(n&&typeof n==\\"object\\"||typeof n==\\"function\\")for(let i of x(n))!H.call(a,i)&&(t||i!==\\"default\\")&&c(a,i,{get:()=>n[i],enumerable:!(l=T(n,i))||l.enumerable});return a},v=(a,n)=>g(m(c(a!=null?w(k(a)):{},\\"default\\",!n&&a&&a.__esModule?{get:()=>a.default,enumerable:!0}:{value:a,enumerable:!0})),a),j=(a=>(n,t)=>a&&a.get(n)||(t=g(m({}),n,1),a&&a.set(n,t),t))(typeof WeakMap!=\\"undefined\\"?new WeakMap:0);var y=L((R,f)=>{f.exports=_jsx_runtime});var M={};C(M,{default:()=>B,frontmatter:()=>F});var e=v(y()),F={id:\\"add-label\\",prev:\\"add-contact\\",next:\\"add-conversation-to-a-label\\",section:\\"Manage Label\\",hiddenTitle:\\"Add Label\\"};function _(a={}){let{wrapper:n}=a.components||{};return n?(0,e.jsx)(n,Object.assign({},a,{children:(0,e.jsx)(t,{})})):t();function t(){let l=Object.assign({p:\\"p\\",h2:\\"h2\\",a:\\"a\\",span:\\"span\\",ol:\\"ol\\",li:\\"li\\",strong:\\"strong\\"},a.components),{FigureImage:i,Table:h,TableHead:b,TableHeadRow:p,TableHeadCell:s,TableBody:u,TableBodyRow:d,TableBodyCell:o}=l;return i||r(\\"FigureImage\\",!0),h||r(\\"Table\\",!0),u||r(\\"TableBody\\",!0),o||r(\\"TableBodyCell\\",!0),d||r(\\"TableBodyRow\\",!0),b||r(\\"TableHead\\",!0),s||r(\\"TableHeadCell\\",!0),p||r(\\"TableHeadRow\\",!0),(0,e.jsxs)(e.Fragment,{children:[(0,e.jsx)(l.p,{children:\\"Labels help you to categorize conversations and prioritize them. You can assign a label to a conversation from the side panel. Labels are tied to the account and can be used to create custom workflows in your organization. You can assign custom colors to a label, it makes it easier to identify the label. You will be able to display the label on the sidebar to filter the conversations easily. Labels can be added by administrator only, while agents can participate in adding conversation into a label.\\"}),`\\n`,(0,e.jsx)(i,{caption:{title:\\"Figure 52\\",description:\\"Manage Label\\"},src:\\"/assets/images/products/kata-omnichat/image52.webp\\",alt:\\"Kata Omnichat\\",naturalHeight:1e3,naturalWidth:1600}),`\\n`,(0,e.jsxs)(l.h2,{id:\\"add-label\\",children:[(0,e.jsx)(l.a,{className:\\"anchor\\",href:\\"#add-label\\",children:(0,e.jsx)(l.span,{className:\\"icon icon-link\\"})}),\\"Add label\\"]}),`\\n`,(0,e.jsx)(l.p,{children:\\"In this section, you can add, edit, and delete your label. To add a label, you can follow these steps.\\"}),`\\n`,(0,e.jsxs)(l.ol,{children:[`\\n`,(0,e.jsxs)(l.li,{children:[\\"Go to the \\",(0,e.jsx)(l.strong,{children:\\"Homepage\\"})]}),`\\n`,(0,e.jsxs)(l.li,{children:[\\"Click the \\",(0,e.jsx)(l.strong,{children:\\"Labels\\"}),\\" menu on the sidebar, or you can click setting on the sidebar then click Labels\\"]}),`\\n`,(0,e.jsx)(l.li,{children:\\"You will be directed to the Labels page.\\"}),`\\n`,(0,e.jsx)(l.li,{children:\\"Click add label to add the new label on the upper right corner, or you can edit and delete the label by clicking the icons beside agent description\\"}),`\\n`,(0,e.jsx)(l.li,{children:\\"The added label pop-up will appear and you need to enter the label name, description, and the color of the tag as your label\\"}),`\\n`]}),`\\n`,(0,e.jsx)(i,{caption:{title:\\"Figure 53\\",description:\\"Add label\\"},src:\\"/assets/images/products/kata-omnichat/image53.webp\\",alt:\\"Kata Omnichat\\",naturalHeight:1e3,naturalWidth:1600}),`\\n`,(0,e.jsx)(l.p,{children:\\"Here are the field descriptions related to label management:\\"}),`\\n`,(0,e.jsxs)(h,{children:[(0,e.jsx)(b,{children:(0,e.jsxs)(p,{children:[(0,e.jsx)(s,{children:\\"Field Name\\"}),`\\n`,(0,e.jsx)(s,{children:\\"Description\\"})]})}),(0,e.jsxs)(u,{children:[(0,e.jsxs)(d,{children:[(0,e.jsx)(o,{children:\\"Label name\\"}),(0,e.jsx)(o,{children:(0,e.jsx)(l.p,{children:`Enter the name of the label, The validation of label name is only Alphabets, Numbers, Hyphen, and Underscore are\\nallowed. For example: Spam`})})]}),(0,e.jsxs)(d,{children:[(0,e.jsx)(o,{children:\\"Description\\"}),(0,e.jsx)(o,{children:(0,e.jsx)(l.p,{children:\\"Enter the description of the label name, for example, Spam is for the repeated message with no indentation\\"})})]}),(0,e.jsxs)(d,{children:[(0,e.jsx)(o,{children:\\"Colour\\"}),(0,e.jsx)(o,{children:(0,e.jsx)(l.p,{children:`Choose the color you want to be the identifier of the label. This color will be reflected on the sidebar and\\nyour conversation`})})]}),(0,e.jsxs)(d,{children:[(0,e.jsx)(o,{children:\\"Show label on the sidebar\\"}),(0,e.jsx)(o,{children:(0,e.jsx)(l.p,{children:`If you tick the label on the sidebar, the label will show up on your sidebar,If you untick then the label will\\nnot show up on your sidebar`})})]})]})]})]})}}var B=_;function r(a,n){throw new Error(\\"Expected \\"+(n?\\"component\\":\\"object\\")+\\" `\\"+a+\\"` to be defined: you likely forgot to import, pass, or provide it.\\")}return j(M);})();\\n;return Component;"},"_id":"kata-omnichat/manage-label/add-label.mdx","_raw":{"sourceFilePath":"kata-omnichat/manage-label/add-label.mdx","sourceFileName":"add-label.mdx","sourceFileDir":"kata-omnichat/manage-label","contentType":"mdx","flattenedPath":"kata-omnichat/manage-label/add-label"},"type":"KataOmnichat","slug":["manage-label","add-label"],"excerpt":"\\nLabels help you to categorize conversations and prioritize them. You can assign a label to a conversation from the side panel"}');
;// CONCATENATED MODULE: ./.contentlayer/generated/KataOmnichat/kata-omnichat__manage-teams__add-teams.mdx.json
const kata_omnichat_manage_teams_add_teams_mdx_namespaceObject = JSON.parse('{"id":"add-teams","section":"Manage Teams","hiddenTitle":"Add Teams","prev":"add-conversation-to-a-label","next":"set-up-canned-responses","body":{"raw":"\\nTeams let you organize your agents into groups based on their responsibilities.\\n\\nA user can be part of multiple teams. You can assign conversations to a team when you are working collaboratively. This feature can be set up by administrators only. You can go to **Settings > teams** to manage your teams.\\n\\n## Add Teams\\n\\nAs Admin, you can follow these steps to create a new team.\\n\\n1. Go to the home page, then click the setting button on the sidebar\\n2. Click Teams in the sidebar\\n\\n<FigureImage\\n  caption={{ title: \'Figure 57\', description: `Manage Team` }}\\n  src=\\"/assets/images/products/kata-omnichat/image57.webp\\"\\n  alt=\\"Kata Omnichat\\"\\n  naturalHeight={1000}\\n  naturalWidth={1600}\\n/>\\n\\n3. Click Create a new team in the upper right corner.\\n4. Then create a new team page will be appeared\\n\\n<FigureImage\\n  caption={{ title: \'Figure 58\', description: `Create New Team` }}\\n  src=\\"/assets/images/products/kata-omnichat/image58.webp\\"\\n  alt=\\"Kata Omnichat\\"\\n  naturalHeight={1000}\\n  naturalWidth={1600}\\n/>\\n\\n5. There will be 3 milestones to finish the team addition: Create, Add Agent, and Finish\\n6. Enter the team name and team description, then click **create a team**\\n7. Choose the agent you want to assign to the team, You can assign to more than 1 agent. Then click **add agent**\\n\\n<FigureImage\\n  caption={{ title: \'Figure 59\', description: `Add Agent to the team` }}\\n  src=\\"/assets/images/products/kata-omnichat/image59.webp\\"\\n  alt=\\"Kata Omnichat\\"\\n  naturalHeight={1000}\\n  naturalWidth={1600}\\n/>\\n\\n8. Then if it’s successful, your team is ready to appear on the screen\\n\\n<FigureImage\\n  caption={{ title: \'Figure 60\', description: `Team Ready` }}\\n  src=\\"/assets/images/products/kata-omnichat/image60.webp\\"\\n  alt=\\"Kata Omnichat\\"\\n  naturalHeight={1000}\\n  naturalWidth={1600}\\n/>\\n","code":"var Component=(()=>{var h=Object.create;var s=Object.defineProperty;var m=Object.getOwnPropertyDescriptor;var g=Object.getOwnPropertyNames;var p=Object.getPrototypeOf,u=Object.prototype.hasOwnProperty;var o=t=>s(t,\\"__esModule\\",{value:!0});var b=(t,a)=>()=>(a||t((a={exports:{}}).exports,a),a.exports),f=(t,a)=>{for(var i in a)s(t,i,{get:a[i],enumerable:!0})},c=(t,a,i,n)=>{if(a&&typeof a==\\"object\\"||typeof a==\\"function\\")for(let r of g(a))!u.call(t,r)&&(i||r!==\\"default\\")&&s(t,r,{get:()=>a[r],enumerable:!(n=m(a,r))||n.enumerable});return t},w=(t,a)=>c(o(s(t!=null?h(p(t)):{},\\"default\\",!a&&t&&t.__esModule?{get:()=>t.default,enumerable:!0}:{value:t,enumerable:!0})),t),y=(t=>(a,i)=>t&&t.get(a)||(i=c(o({}),a,1),t&&t.set(a,i),i))(typeof WeakMap!=\\"undefined\\"?new WeakMap:0);var d=b((C,l)=>{l.exports=_jsx_runtime});var F={};f(F,{default:()=>x,frontmatter:()=>T});var e=w(d()),T={id:\\"add-teams\\",prev:\\"add-conversation-to-a-label\\",next:\\"set-up-canned-responses\\",section:\\"Manage Teams\\",hiddenTitle:\\"Add Teams\\"};function k(t={}){let{wrapper:a}=t.components||{};return a?(0,e.jsx)(a,Object.assign({},t,{children:(0,e.jsx)(i,{})})):i();function i(){let n=Object.assign({p:\\"p\\",strong:\\"strong\\",h2:\\"h2\\",a:\\"a\\",span:\\"span\\",ol:\\"ol\\",li:\\"li\\"},t.components),{FigureImage:r}=n;return r||A(\\"FigureImage\\",!0),(0,e.jsxs)(e.Fragment,{children:[(0,e.jsx)(n.p,{children:\\"Teams let you organize your agents into groups based on their responsibilities.\\"}),`\\n`,(0,e.jsxs)(n.p,{children:[\\"A user can be part of multiple teams. You can assign conversations to a team when you are working collaboratively. This feature can be set up by administrators only. You can go to \\",(0,e.jsx)(n.strong,{children:\\"Settings > teams\\"}),\\" to manage your teams.\\"]}),`\\n`,(0,e.jsxs)(n.h2,{id:\\"add-teams\\",children:[(0,e.jsx)(n.a,{className:\\"anchor\\",href:\\"#add-teams\\",children:(0,e.jsx)(n.span,{className:\\"icon icon-link\\"})}),\\"Add Teams\\"]}),`\\n`,(0,e.jsx)(n.p,{children:\\"As Admin, you can follow these steps to create a new team.\\"}),`\\n`,(0,e.jsxs)(n.ol,{children:[`\\n`,(0,e.jsx)(n.li,{children:\\"Go to the home page, then click the setting button on the sidebar\\"}),`\\n`,(0,e.jsx)(n.li,{children:\\"Click Teams in the sidebar\\"}),`\\n`]}),`\\n`,(0,e.jsx)(r,{caption:{title:\\"Figure 57\\",description:\\"Manage Team\\"},src:\\"/assets/images/products/kata-omnichat/image57.webp\\",alt:\\"Kata Omnichat\\",naturalHeight:1e3,naturalWidth:1600}),`\\n`,(0,e.jsxs)(n.ol,{start:\\"3\\",children:[`\\n`,(0,e.jsx)(n.li,{children:\\"Click Create a new team in the upper right corner.\\"}),`\\n`,(0,e.jsx)(n.li,{children:\\"Then create a new team page will be appeared\\"}),`\\n`]}),`\\n`,(0,e.jsx)(r,{caption:{title:\\"Figure 58\\",description:\\"Create New Team\\"},src:\\"/assets/images/products/kata-omnichat/image58.webp\\",alt:\\"Kata Omnichat\\",naturalHeight:1e3,naturalWidth:1600}),`\\n`,(0,e.jsxs)(n.ol,{start:\\"5\\",children:[`\\n`,(0,e.jsx)(n.li,{children:\\"There will be 3 milestones to finish the team addition: Create, Add Agent, and Finish\\"}),`\\n`,(0,e.jsxs)(n.li,{children:[\\"Enter the team name and team description, then click \\",(0,e.jsx)(n.strong,{children:\\"create a team\\"})]}),`\\n`,(0,e.jsxs)(n.li,{children:[\\"Choose the agent you want to assign to the team, You can assign to more than 1 agent. Then click \\",(0,e.jsx)(n.strong,{children:\\"add agent\\"})]}),`\\n`]}),`\\n`,(0,e.jsx)(r,{caption:{title:\\"Figure 59\\",description:\\"Add Agent to the team\\"},src:\\"/assets/images/products/kata-omnichat/image59.webp\\",alt:\\"Kata Omnichat\\",naturalHeight:1e3,naturalWidth:1600}),`\\n`,(0,e.jsxs)(n.ol,{start:\\"8\\",children:[`\\n`,(0,e.jsx)(n.li,{children:\\"Then if it\\\\u2019s successful, your team is ready to appear on the screen\\"}),`\\n`]}),`\\n`,(0,e.jsx)(r,{caption:{title:\\"Figure 60\\",description:\\"Team Ready\\"},src:\\"/assets/images/products/kata-omnichat/image60.webp\\",alt:\\"Kata Omnichat\\",naturalHeight:1e3,naturalWidth:1600})]})}}var x=k;function A(t,a){throw new Error(\\"Expected \\"+(a?\\"component\\":\\"object\\")+\\" `\\"+t+\\"` to be defined: you likely forgot to import, pass, or provide it.\\")}return y(F);})();\\n;return Component;"},"_id":"kata-omnichat/manage-teams/add-teams.mdx","_raw":{"sourceFilePath":"kata-omnichat/manage-teams/add-teams.mdx","sourceFileName":"add-teams.mdx","sourceFileDir":"kata-omnichat/manage-teams","contentType":"mdx","flattenedPath":"kata-omnichat/manage-teams/add-teams"},"type":"KataOmnichat","slug":["manage-teams","add-teams"],"excerpt":"\\nTeams let you organize your agents into groups based on their responsibilities.\\n\\nA user can be part of multiple teams"}');
;// CONCATENATED MODULE: ./.contentlayer/generated/KataOmnichat/kata-omnichat__manage-your-contact__add-contact.mdx.json
const kata_omnichat_manage_your_contact_add_contact_mdx_namespaceObject = JSON.parse('{"id":"add-contact","section":"Manage Your Contact","title":"Add contact","prev":"view-contact","next":"add-label","body":{"raw":"\\nBesides getting contact from interaction, you can add a contact by yourself.\\n\\n1. Go to Omnichat **homepage**\\n2. Click **Contact** on the sidebar\\n3. Click the **Add Contact** button on the upper right corner\\n4. Enter the **contact details** as the form that has been provided by Omnichat\\n\\n<FigureImage\\n  caption={{ title: \'Figure 51\', description: `Add Contact` }}\\n  src=\\"/assets/images/products/kata-omnichat/image51.webp\\"\\n  alt=\\"Kata Omnichat\\"\\n  naturalHeight={1000}\\n  naturalWidth={1600}\\n/>\\n\\nThe list of contact information is shown below:\\n\\n<Table>\\n  <TableHead>\\n    <TableHeadRow>\\n      <TableHeadCell>Field Name</TableHeadCell>\\n      <TableHeadCell>Description</TableHeadCell>\\n    </TableHeadRow>\\n  </TableHead>\\n  <TableBody>\\n    <TableBodyRow>\\n      <TableBodyCell>Full Name</TableBodyCell>\\n      <TableBodyCell>Enter the full name of your, for example, Katherine Wong </TableBodyCell>\\n    </TableBodyRow>\\n    <TableBodyRow>\\n      <TableBodyCell>Email Address</TableBodyCell>\\n      <TableBodyCell>Enter Your contact email address, for example, katherinewong@gmail.com</TableBodyCell>\\n    </TableBodyRow>\\n    <TableBodyRow>\\n      <TableBodyCell>Bio</TableBodyCell>\\n      <TableBodyCell>Enter the brief biodata of your contact</TableBodyCell>\\n    </TableBodyRow>\\n    <TableBodyRow>\\n      <TableBodyCell>Phone Number</TableBodyCell>\\n      <TableBodyCell>Enter the phone number of your contact</TableBodyCell>\\n    </TableBodyRow>\\n    <TableBodyRow>\\n      <TableBodyCell>Company Name</TableBodyCell>\\n      <TableBodyCell>Enter the company your contact works for</TableBodyCell>\\n    </TableBodyRow>\\n    <TableBodyRow>\\n      <TableBodyCell>Social Profile</TableBodyCell>\\n      <TableBodyCell>\\n        Choose the social profile you want to choose and give the link. There are 3 types of social media which are\\n        Facebook, Twitter, and LinkedIn\\n      </TableBodyCell>\\n    </TableBodyRow>\\n  </TableBody>\\n</Table>\\n","code":"var Component=(()=>{var w=Object.create;var d=Object.defineProperty;var T=Object.getOwnPropertyDescriptor;var x=Object.getOwnPropertyNames;var C=Object.getPrototypeOf,k=Object.prototype.hasOwnProperty;var p=n=>d(n,\\"__esModule\\",{value:!0});var E=(n,t)=>()=>(t||n((t={exports:{}}).exports,t),t.exports),j=(n,t)=>{for(var i in t)d(n,i,{get:t[i],enumerable:!0})},b=(n,t,i,r)=>{if(t&&typeof t==\\"object\\"||typeof t==\\"function\\")for(let a of x(t))!k.call(n,a)&&(i||a!==\\"default\\")&&d(n,a,{get:()=>t[a],enumerable:!(r=T(t,a))||r.enumerable});return n},B=(n,t)=>b(p(d(n!=null?w(C(n)):{},\\"default\\",!t&&n&&n.__esModule?{get:()=>n.default,enumerable:!0}:{value:n,enumerable:!0})),n),F=(n=>(t,i)=>n&&n.get(t)||(i=b(p({}),t,1),n&&n.set(t,i),i))(typeof WeakMap!=\\"undefined\\"?new WeakMap:0);var y=E((R,g)=>{g.exports=_jsx_runtime});var M={};j(M,{default:()=>v,frontmatter:()=>_});var e=B(y()),_={id:\\"add-contact\\",title:\\"Add contact\\",prev:\\"view-contact\\",next:\\"add-label\\",section:\\"Manage Your Contact\\"};function H(n={}){let{wrapper:t}=n.components||{};return t?(0,e.jsx)(t,Object.assign({},n,{children:(0,e.jsx)(i,{})})):i();function i(){let r=Object.assign({p:\\"p\\",ol:\\"ol\\",li:\\"li\\",strong:\\"strong\\",a:\\"a\\"},n.components),{FigureImage:a,Table:s,TableHead:m,TableHeadRow:u,TableHeadCell:h,TableBody:f,TableBodyRow:c,TableBodyCell:o}=r;return a||l(\\"FigureImage\\",!0),s||l(\\"Table\\",!0),f||l(\\"TableBody\\",!0),o||l(\\"TableBodyCell\\",!0),c||l(\\"TableBodyRow\\",!0),m||l(\\"TableHead\\",!0),h||l(\\"TableHeadCell\\",!0),u||l(\\"TableHeadRow\\",!0),(0,e.jsxs)(e.Fragment,{children:[(0,e.jsx)(r.p,{children:\\"Besides getting contact from interaction, you can add a contact by yourself.\\"}),`\\n`,(0,e.jsxs)(r.ol,{children:[`\\n`,(0,e.jsxs)(r.li,{children:[\\"Go to Omnichat \\",(0,e.jsx)(r.strong,{children:\\"homepage\\"})]}),`\\n`,(0,e.jsxs)(r.li,{children:[\\"Click \\",(0,e.jsx)(r.strong,{children:\\"Contact\\"}),\\" on the sidebar\\"]}),`\\n`,(0,e.jsxs)(r.li,{children:[\\"Click the \\",(0,e.jsx)(r.strong,{children:\\"Add Contact\\"}),\\" button on the upper right corner\\"]}),`\\n`,(0,e.jsxs)(r.li,{children:[\\"Enter the \\",(0,e.jsx)(r.strong,{children:\\"contact details\\"}),\\" as the form that has been provided by Omnichat\\"]}),`\\n`]}),`\\n`,(0,e.jsx)(a,{caption:{title:\\"Figure 51\\",description:\\"Add Contact\\"},src:\\"/assets/images/products/kata-omnichat/image51.webp\\",alt:\\"Kata Omnichat\\",naturalHeight:1e3,naturalWidth:1600}),`\\n`,(0,e.jsx)(r.p,{children:\\"The list of contact information is shown below:\\"}),`\\n`,(0,e.jsxs)(s,{children:[(0,e.jsx)(m,{children:(0,e.jsxs)(u,{children:[(0,e.jsx)(h,{children:\\"Field Name\\"}),`\\n`,(0,e.jsx)(h,{children:\\"Description\\"})]})}),(0,e.jsxs)(f,{children:[(0,e.jsxs)(c,{children:[(0,e.jsx)(o,{children:\\"Full Name\\"}),`\\n`,(0,e.jsx)(o,{children:\\"Enter the full name of your, for example, Katherine Wong \\"})]}),(0,e.jsxs)(c,{children:[(0,e.jsx)(o,{children:\\"Email Address\\"}),`\\n`,(0,e.jsxs)(o,{children:[\\"Enter Your contact email address, for example, \\",(0,e.jsx)(r.a,{href:\\"mailto:katherinewong@gmail.com\\",children:\\"katherinewong@gmail.com\\"})]})]}),(0,e.jsxs)(c,{children:[(0,e.jsx)(o,{children:\\"Bio\\"}),`\\n`,(0,e.jsx)(o,{children:\\"Enter the brief biodata of your contact\\"})]}),(0,e.jsxs)(c,{children:[(0,e.jsx)(o,{children:\\"Phone Number\\"}),`\\n`,(0,e.jsx)(o,{children:\\"Enter the phone number of your contact\\"})]}),(0,e.jsxs)(c,{children:[(0,e.jsx)(o,{children:\\"Company Name\\"}),`\\n`,(0,e.jsx)(o,{children:\\"Enter the company your contact works for\\"})]}),(0,e.jsxs)(c,{children:[(0,e.jsx)(o,{children:\\"Social Profile\\"}),(0,e.jsx)(o,{children:(0,e.jsx)(r.p,{children:`Choose the social profile you want to choose and give the link. There are 3 types of social media which are\\nFacebook, Twitter, and LinkedIn`})})]})]})]})]})}}var v=H;function l(n,t){throw new Error(\\"Expected \\"+(t?\\"component\\":\\"object\\")+\\" `\\"+n+\\"` to be defined: you likely forgot to import, pass, or provide it.\\")}return F(M);})();\\n;return Component;"},"_id":"kata-omnichat/manage-your-contact/add-contact.mdx","_raw":{"sourceFilePath":"kata-omnichat/manage-your-contact/add-contact.mdx","sourceFileName":"add-contact.mdx","sourceFileDir":"kata-omnichat/manage-your-contact","contentType":"mdx","flattenedPath":"kata-omnichat/manage-your-contact/add-contact"},"type":"KataOmnichat","slug":["manage-your-contact","add-contact"],"excerpt":"\\nBesides getting contact from interaction, you can add a contact by yourself.\\n\\n1"}');
;// CONCATENATED MODULE: ./.contentlayer/generated/KataOmnichat/kata-omnichat__manage-your-contact__view-contact.mdx.json
const kata_omnichat_manage_your_contact_view_contact_mdx_namespaceObject = JSON.parse('{"id":"view-contact","section":"Manage Your Contact","title":"View contact","prev":"download-transcript","next":"add-contact","body":{"raw":"\\nTThe contacts section in Omnichat contains the details of end users/customers that you have interacted with. You can consider it as a **Customer Database**. Follow these steps to go to contact.\\n\\n1. Go to Omnichat **homepage**\\n2. Click **Contact** on the sidebar\\n3. You can see the list of names and contact information of your customers that had interaction with your channel\\n\\n<FigureImage\\n  caption={{ title: \'Figure 50\', description: `Manage Contact` }}\\n  src=\\"/assets/images/products/kata-omnichat/image50.webp\\"\\n  alt=\\"Kata Omnichat\\"\\n  naturalHeight={1000}\\n  naturalWidth={1600}\\n/>\\n\\nThere is a lot of information from the customer we can get, the information that can be detected is only public information which means any private information can not be reflected.\\n","code":"var Component=(()=>{var d=Object.create;var r=Object.defineProperty;var m=Object.getOwnPropertyDescriptor;var u=Object.getOwnPropertyNames;var g=Object.getPrototypeOf,p=Object.prototype.hasOwnProperty;var c=t=>r(t,\\"__esModule\\",{value:!0});var f=(t,e)=>()=>(e||t((e={exports:{}}).exports,e),e.exports),w=(t,e)=>{for(var a in e)r(t,a,{get:e[a],enumerable:!0})},s=(t,e,a,o)=>{if(e&&typeof e==\\"object\\"||typeof e==\\"function\\")for(let i of u(e))!p.call(t,i)&&(a||i!==\\"default\\")&&r(t,i,{get:()=>e[i],enumerable:!(o=m(e,i))||o.enumerable});return t},x=(t,e)=>s(c(r(t!=null?d(g(t)):{},\\"default\\",!e&&t&&t.__esModule?{get:()=>t.default,enumerable:!0}:{value:t,enumerable:!0})),t),b=(t=>(e,a)=>t&&t.get(e)||(a=s(c({}),e,1),t&&t.set(e,a),a))(typeof WeakMap!=\\"undefined\\"?new WeakMap:0);var h=f((v,l)=>{l.exports=_jsx_runtime});var F={};w(F,{default:()=>_,frontmatter:()=>j});var n=x(h()),j={id:\\"view-contact\\",title:\\"View contact\\",prev:\\"download-transcript\\",next:\\"add-contact\\",section:\\"Manage Your Contact\\"};function y(t={}){let{wrapper:e}=t.components||{};return e?(0,n.jsx)(e,Object.assign({},t,{children:(0,n.jsx)(a,{})})):a();function a(){let o=Object.assign({p:\\"p\\",strong:\\"strong\\",ol:\\"ol\\",li:\\"li\\"},t.components),{FigureImage:i}=o;return i||C(\\"FigureImage\\",!0),(0,n.jsxs)(n.Fragment,{children:[(0,n.jsxs)(o.p,{children:[\\"TThe contacts section in Omnichat contains the details of end users/customers that you have interacted with. You can consider it as a \\",(0,n.jsx)(o.strong,{children:\\"Customer Database\\"}),\\". Follow these steps to go to contact.\\"]}),`\\n`,(0,n.jsxs)(o.ol,{children:[`\\n`,(0,n.jsxs)(o.li,{children:[\\"Go to Omnichat \\",(0,n.jsx)(o.strong,{children:\\"homepage\\"})]}),`\\n`,(0,n.jsxs)(o.li,{children:[\\"Click \\",(0,n.jsx)(o.strong,{children:\\"Contact\\"}),\\" on the sidebar\\"]}),`\\n`,(0,n.jsx)(o.li,{children:\\"You can see the list of names and contact information of your customers that had interaction with your channel\\"}),`\\n`]}),`\\n`,(0,n.jsx)(i,{caption:{title:\\"Figure 50\\",description:\\"Manage Contact\\"},src:\\"/assets/images/products/kata-omnichat/image50.webp\\",alt:\\"Kata Omnichat\\",naturalHeight:1e3,naturalWidth:1600}),`\\n`,(0,n.jsx)(o.p,{children:\\"There is a lot of information from the customer we can get, the information that can be detected is only public information which means any private information can not be reflected.\\"})]})}}var _=y;function C(t,e){throw new Error(\\"Expected \\"+(e?\\"component\\":\\"object\\")+\\" `\\"+t+\\"` to be defined: you likely forgot to import, pass, or provide it.\\")}return b(F);})();\\n;return Component;"},"_id":"kata-omnichat/manage-your-contact/view-contact.mdx","_raw":{"sourceFilePath":"kata-omnichat/manage-your-contact/view-contact.mdx","sourceFileName":"view-contact.mdx","sourceFileDir":"kata-omnichat/manage-your-contact","contentType":"mdx","flattenedPath":"kata-omnichat/manage-your-contact/view-contact"},"type":"KataOmnichat","slug":["manage-your-contact","view-contact"],"excerpt":"\\nTThe contacts section in Omnichat contains the details of end users/customers that you have interacted with. You can consider it as a **Customer Database**"}');
;// CONCATENATED MODULE: ./.contentlayer/generated/KataOmnichat/kata-omnichat__manage-your-conversation__admin-view-conversation.mdx.json
const kata_omnichat_manage_your_conversation_admin_view_conversation_mdx_namespaceObject = JSON.parse('{"id":"admin-view-conversation","section":"Manage Your Conversation","hiddenTitle":"Admin View Conversation","prev":"received-the-invitation","next":"agent-view-conversation","body":{"raw":"\\nEvery conversation in Kata Omnichat can belong to at least one assigned agent. There is a case to assign the conversation, either manually or automatically. Admin can assign to the bot, agent, another admin, or the system will assign them automatically. In another case, an agent can assign to another agent. In this documentation, you can learn how to manage your conversation, from the incoming message into the resolved message.\\n\\nIn Kata Omnichat, There will be 3 kinds of conversations: **Open**, **resolve,** and **bot** conversation.\\n\\n1. **Open:** The conversation that has not been resolved by agent yet\\n2. **Resolved**: The conversation that has been resolved. Learn more about resolving messages [here](/kata-omnichat/manage-your-conversation/resolve-conversation)\\n3. **Bot**: The conversation that is handled by the bot and can be takeover by agent anytime\\n\\n## Admin view conversation\\n\\nAs admin, you will see all incoming conversations to your inboxes. In the conversation box, you will see 3 options in the tab: **Mine, Unassigned,** and **All**. Learn more about these as below:\\n\\n1. **Unassigned:** The first incoming message will go to **unassigned conversation**. This will help admin to identify which conversation needs to be assigned. Admin needs to assign an online agent to move the conversation from unassigned. Learn more to assign to your agent [here](/kata-omnichat/manage-your-conversation/manual-agent-assignment)\\n2. **Mine**: The incoming conversation that has already been assigned to me as an agent. This will help the admin to identify which chat needs to handle\\n3. **All:** All conversations will be recorded in the All tab, both assigned or unassigned\\n\\n<FigureImage\\n  caption={{ title: \'Figure 36\', description: `Admin View Conversation` }}\\n  src=\\"/assets/images/products/kata-omnichat/image36.webp\\"\\n  alt=\\"Kata Omnichat\\"\\n  naturalHeight={842}\\n  naturalWidth={1600}\\n/>\\n","code":"var Component=(()=>{var d=Object.create;var s=Object.defineProperty;var g=Object.getOwnPropertyDescriptor;var m=Object.getOwnPropertyNames;var v=Object.getPrototypeOf,u=Object.prototype.hasOwnProperty;var r=t=>s(t,\\"__esModule\\",{value:!0});var p=(t,i)=>()=>(i||t((i={exports:{}}).exports,i),i.exports),b=(t,i)=>{for(var o in i)s(t,o,{get:i[o],enumerable:!0})},l=(t,i,o,e)=>{if(i&&typeof i==\\"object\\"||typeof i==\\"function\\")for(let a of m(i))!u.call(t,a)&&(o||a!==\\"default\\")&&s(t,a,{get:()=>i[a],enumerable:!(e=g(i,a))||e.enumerable});return t},y=(t,i)=>l(r(s(t!=null?d(v(t)):{},\\"default\\",!i&&t&&t.__esModule?{get:()=>t.default,enumerable:!0}:{value:t,enumerable:!0})),t),w=(t=>(i,o)=>t&&t.get(i)||(o=l(r({}),i,1),t&&t.set(i,o),o))(typeof WeakMap!=\\"undefined\\"?new WeakMap:0);var h=p((k,c)=>{c.exports=_jsx_runtime});var j={};b(j,{default:()=>A,frontmatter:()=>f});var n=y(h()),f={id:\\"admin-view-conversation\\",prev:\\"received-the-invitation\\",next:\\"agent-view-conversation\\",section:\\"Manage Your Conversation\\",hiddenTitle:\\"Admin View Conversation\\"};function x(t={}){let{wrapper:i}=t.components||{};return i?(0,n.jsx)(i,Object.assign({},t,{children:(0,n.jsx)(o,{})})):o();function o(){let e=Object.assign({p:\\"p\\",strong:\\"strong\\",ol:\\"ol\\",li:\\"li\\",a:\\"a\\",h2:\\"h2\\",span:\\"span\\"},t.components),{FigureImage:a}=e;return a||T(\\"FigureImage\\",!0),(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(e.p,{children:\\"Every conversation in Kata Omnichat can belong to at least one assigned agent. There is a case to assign the conversation, either manually or automatically. Admin can assign to the bot, agent, another admin, or the system will assign them automatically. In another case, an agent can assign to another agent. In this documentation, you can learn how to manage your conversation, from the incoming message into the resolved message.\\"}),`\\n`,(0,n.jsxs)(e.p,{children:[\\"In Kata Omnichat, There will be 3 kinds of conversations: \\",(0,n.jsx)(e.strong,{children:\\"Open\\"}),\\", \\",(0,n.jsx)(e.strong,{children:\\"resolve,\\"}),\\" and \\",(0,n.jsx)(e.strong,{children:\\"bot\\"}),\\" conversation.\\"]}),`\\n`,(0,n.jsxs)(e.ol,{children:[`\\n`,(0,n.jsxs)(e.li,{children:[(0,n.jsx)(e.strong,{children:\\"Open:\\"}),\\" The conversation that has not been resolved by agent yet\\"]}),`\\n`,(0,n.jsxs)(e.li,{children:[(0,n.jsx)(e.strong,{children:\\"Resolved\\"}),\\": The conversation that has been resolved. Learn more about resolving messages \\",(0,n.jsx)(e.a,{href:\\"/kata-omnichat/manage-your-conversation/resolve-conversation\\",children:\\"here\\"})]}),`\\n`,(0,n.jsxs)(e.li,{children:[(0,n.jsx)(e.strong,{children:\\"Bot\\"}),\\": The conversation that is handled by the bot and can be takeover by agent anytime\\"]}),`\\n`]}),`\\n`,(0,n.jsxs)(e.h2,{id:\\"admin-view-conversation\\",children:[(0,n.jsx)(e.a,{className:\\"anchor\\",href:\\"#admin-view-conversation\\",children:(0,n.jsx)(e.span,{className:\\"icon icon-link\\"})}),\\"Admin view conversation\\"]}),`\\n`,(0,n.jsxs)(e.p,{children:[\\"As admin, you will see all incoming conversations to your inboxes. In the conversation box, you will see 3 options in the tab: \\",(0,n.jsx)(e.strong,{children:\\"Mine, Unassigned,\\"}),\\" and \\",(0,n.jsx)(e.strong,{children:\\"All\\"}),\\". Learn more about these as below:\\"]}),`\\n`,(0,n.jsxs)(e.ol,{children:[`\\n`,(0,n.jsxs)(e.li,{children:[(0,n.jsx)(e.strong,{children:\\"Unassigned:\\"}),\\" The first incoming message will go to \\",(0,n.jsx)(e.strong,{children:\\"unassigned conversation\\"}),\\". This will help admin to identify which conversation needs to be assigned. Admin needs to assign an online agent to move the conversation from unassigned. Learn more to assign to your agent \\",(0,n.jsx)(e.a,{href:\\"/kata-omnichat/manage-your-conversation/manual-agent-assignment\\",children:\\"here\\"})]}),`\\n`,(0,n.jsxs)(e.li,{children:[(0,n.jsx)(e.strong,{children:\\"Mine\\"}),\\": The incoming conversation that has already been assigned to me as an agent. This will help the admin to identify which chat needs to handle\\"]}),`\\n`,(0,n.jsxs)(e.li,{children:[(0,n.jsx)(e.strong,{children:\\"All:\\"}),\\" All conversations will be recorded in the All tab, both assigned or unassigned\\"]}),`\\n`]}),`\\n`,(0,n.jsx)(a,{caption:{title:\\"Figure 36\\",description:\\"Admin View Conversation\\"},src:\\"/assets/images/products/kata-omnichat/image36.webp\\",alt:\\"Kata Omnichat\\",naturalHeight:842,naturalWidth:1600})]})}}var A=x;function T(t,i){throw new Error(\\"Expected \\"+(i?\\"component\\":\\"object\\")+\\" `\\"+t+\\"` to be defined: you likely forgot to import, pass, or provide it.\\")}return w(j);})();\\n;return Component;"},"_id":"kata-omnichat/manage-your-conversation/admin-view-conversation.mdx","_raw":{"sourceFilePath":"kata-omnichat/manage-your-conversation/admin-view-conversation.mdx","sourceFileName":"admin-view-conversation.mdx","sourceFileDir":"kata-omnichat/manage-your-conversation","contentType":"mdx","flattenedPath":"kata-omnichat/manage-your-conversation/admin-view-conversation"},"type":"KataOmnichat","slug":["manage-your-conversation","admin-view-conversation"],"excerpt":"\\nEvery conversation in Kata Omnichat can belong to at least one assigned agent. There is a case to assign the conversation, either manually or automatically"}');
;// CONCATENATED MODULE: ./.contentlayer/generated/KataOmnichat/kata-omnichat__manage-your-conversation__agent-view-conversation.mdx.json
const kata_omnichat_manage_your_conversation_agent_view_conversation_mdx_namespaceObject = JSON.parse('{"id":"agent-view-conversation","section":"Manage Your Conversation","title":"Agent view conversation","prev":"admin-view-conversation","next":"whatsapp-business-conversation-using-bot","body":{"raw":"\\nAs an agent, you will see the conversations that were assigned to you, both manual assignment or auto-assignment. In the conversation box, you will see 2 options in tab: **Mine** and **Unassigned**. Learn more about these below:\\n\\n1. **Unassigned:** The first incoming message that is not assigned to you. This will help the agent to identify which conversation is not awarded by agents\\n2. **Mine**: The incoming conversation that has already been assigned to me. This will help the admin to identify which chat needs to handle\\n\\n<FigureImage\\n  caption={{ title: \'Figure 37\', description: `Agent View Conversation` }}\\n  src=\\"/assets/images/products/kata-omnichat/image37.webp\\"\\n  alt=\\"Kata Omnichat\\"\\n  naturalHeight={1000}\\n  naturalWidth={1600}\\n/>\\n","code":"var Component=(()=>{var h=Object.create;var a=Object.defineProperty;var d=Object.getOwnPropertyDescriptor;var m=Object.getOwnPropertyNames;var u=Object.getPrototypeOf,p=Object.prototype.hasOwnProperty;var r=e=>a(e,\\"__esModule\\",{value:!0});var w=(e,n)=>()=>(n||e((n={exports:{}}).exports,n),n.exports),v=(e,n)=>{for(var o in n)a(e,o,{get:n[o],enumerable:!0})},c=(e,n,o,i)=>{if(n&&typeof n==\\"object\\"||typeof n==\\"function\\")for(let s of m(n))!p.call(e,s)&&(o||s!==\\"default\\")&&a(e,s,{get:()=>n[s],enumerable:!(i=d(n,s))||i.enumerable});return e},b=(e,n)=>c(r(a(e!=null?h(u(e)):{},\\"default\\",!n&&e&&e.__esModule?{get:()=>e.default,enumerable:!0}:{value:e,enumerable:!0})),e),f=(e=>(n,o)=>e&&e.get(n)||(o=c(r({}),n,1),e&&e.set(n,o),o))(typeof WeakMap!=\\"undefined\\"?new WeakMap:0);var g=w((C,l)=>{l.exports=_jsx_runtime});var M={};v(M,{default:()=>j,frontmatter:()=>x});var t=b(g()),x={id:\\"agent-view-conversation\\",title:\\"Agent view conversation\\",prev:\\"admin-view-conversation\\",next:\\"whatsapp-business-conversation-using-bot\\",section:\\"Manage Your Conversation\\"};function y(e={}){let{wrapper:n}=e.components||{};return n?(0,t.jsx)(n,Object.assign({},e,{children:(0,t.jsx)(o,{})})):o();function o(){let i=Object.assign({p:\\"p\\",strong:\\"strong\\",ol:\\"ol\\",li:\\"li\\"},e.components),{FigureImage:s}=i;return s||_(\\"FigureImage\\",!0),(0,t.jsxs)(t.Fragment,{children:[(0,t.jsxs)(i.p,{children:[\\"As an agent, you will see the conversations that were assigned to you, both manual assignment or auto-assignment. In the conversation box, you will see 2 options in tab: \\",(0,t.jsx)(i.strong,{children:\\"Mine\\"}),\\" and \\",(0,t.jsx)(i.strong,{children:\\"Unassigned\\"}),\\". Learn more about these below:\\"]}),`\\n`,(0,t.jsxs)(i.ol,{children:[`\\n`,(0,t.jsxs)(i.li,{children:[(0,t.jsx)(i.strong,{children:\\"Unassigned:\\"}),\\" The first incoming message that is not assigned to you. This will help the agent to identify which conversation is not awarded by agents\\"]}),`\\n`,(0,t.jsxs)(i.li,{children:[(0,t.jsx)(i.strong,{children:\\"Mine\\"}),\\": The incoming conversation that has already been assigned to me. This will help the admin to identify which chat needs to handle\\"]}),`\\n`]}),`\\n`,(0,t.jsx)(s,{caption:{title:\\"Figure 37\\",description:\\"Agent View Conversation\\"},src:\\"/assets/images/products/kata-omnichat/image37.webp\\",alt:\\"Kata Omnichat\\",naturalHeight:1e3,naturalWidth:1600})]})}}var j=y;function _(e,n){throw new Error(\\"Expected \\"+(n?\\"component\\":\\"object\\")+\\" `\\"+e+\\"` to be defined: you likely forgot to import, pass, or provide it.\\")}return f(M);})();\\n;return Component;"},"_id":"kata-omnichat/manage-your-conversation/agent-view-conversation.mdx","_raw":{"sourceFilePath":"kata-omnichat/manage-your-conversation/agent-view-conversation.mdx","sourceFileName":"agent-view-conversation.mdx","sourceFileDir":"kata-omnichat/manage-your-conversation","contentType":"mdx","flattenedPath":"kata-omnichat/manage-your-conversation/agent-view-conversation"},"type":"KataOmnichat","slug":["manage-your-conversation","agent-view-conversation"],"excerpt":"\\nAs an agent, you will see the conversations that were assigned to you, both manual assignment or auto-assignment. In the conversation box, you will see 2 options in tab: **Mine** and **Unassigned**"}');
;// CONCATENATED MODULE: ./.contentlayer/generated/KataOmnichat/kata-omnichat__manage-your-conversation__auto-agent-assignment.mdx.json
const kata_omnichat_manage_your_conversation_auto_agent_assignment_mdx_namespaceObject = JSON.parse('{"id":"auto-agent-assignment","section":"Manage Your Conversation","title":"Auto agent assignment","prev":"manual-agent-assignment","next":"resolve-conversation","body":{"raw":"\\nOmnichat provides a round-robin auto-assignment system for conversations. The assignment follows the logic mentioned below.\\n\\n<div className=\\"info\\">\\n  <img className=\\"borderless\\" src=\\"/assets/images/icon-info.svg\\" />\\n  <p>Note: Round robin assignment is enabled by default.</p>\\n</div>\\n\\n1. If there are agents online who have access to the inbox in which a conversation is created, the system would distribute the conversations equally among the online agents\\n2. If all the agents are offline, the system would distribute the conversations equally to all agents\\n\\n<FigureImage\\n  caption={{ title: \'Figure 44\', description: `Auto Agent Assignment` }}\\n  src=\\"/assets/images/products/kata-omnichat/image44.webp\\"\\n  alt=\\"Kata Omnichat\\"\\n  naturalHeight={1000}\\n  naturalWidth={1600}\\n/>\\n\\nTo enable round-robin assignment in your inbox, follow the steps below.\\n\\n1. Go to **Settings > Inboxes**\\n2. Click on the inbox settings link of the inbox you want to enable round-robin assignment\\n3. Scroll down to see the setting for Round-robin, as shown below\\n","code":"var Component=(()=>{var d=Object.create;var a=Object.defineProperty;var h=Object.getOwnPropertyDescriptor;var m=Object.getOwnPropertyNames;var u=Object.getPrototypeOf,b=Object.prototype.hasOwnProperty;var r=e=>a(e,\\"__esModule\\",{value:!0});var f=(e,n)=>()=>(n||e((n={exports:{}}).exports,n),n.exports),p=(e,n)=>{for(var i in n)a(e,i,{get:n[i],enumerable:!0})},l=(e,n,i,o)=>{if(n&&typeof n==\\"object\\"||typeof n==\\"function\\")for(let s of m(n))!b.call(e,s)&&(i||s!==\\"default\\")&&a(e,s,{get:()=>n[s],enumerable:!(o=h(n,s))||o.enumerable});return e},x=(e,n)=>l(r(a(e!=null?d(u(e)):{},\\"default\\",!n&&e&&e.__esModule?{get:()=>e.default,enumerable:!0}:{value:e,enumerable:!0})),e),w=(e=>(n,i)=>e&&e.get(n)||(i=l(r({}),n,1),e&&e.set(n,i),i))(typeof WeakMap!=\\"undefined\\"?new WeakMap:0);var g=f((M,c)=>{c.exports=_jsx_runtime});var F={};p(F,{default:()=>j,frontmatter:()=>v});var t=x(g()),v={id:\\"auto-agent-assignment\\",title:\\"Auto agent assignment\\",prev:\\"manual-agent-assignment\\",next:\\"resolve-conversation\\",section:\\"Manage Your Conversation\\"};function y(e={}){let{wrapper:n}=e.components||{};return n?(0,t.jsx)(n,Object.assign({},e,{children:(0,t.jsx)(i,{})})):i();function i(){let o=Object.assign({p:\\"p\\",ol:\\"ol\\",li:\\"li\\",strong:\\"strong\\"},e.components),{FigureImage:s}=o;return s||_(\\"FigureImage\\",!0),(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(o.p,{children:\\"Omnichat provides a round-robin auto-assignment system for conversations. The assignment follows the logic mentioned below.\\"}),`\\n`,(0,t.jsxs)(\\"div\\",{className:\\"info\\",children:[(0,t.jsx)(\\"img\\",{className:\\"borderless\\",src:\\"/assets/images/icon-info.svg\\"}),(0,t.jsx)(\\"p\\",{children:\\"Note: Round robin assignment is enabled by default.\\"})]}),`\\n`,(0,t.jsxs)(o.ol,{children:[`\\n`,(0,t.jsx)(o.li,{children:\\"If there are agents online who have access to the inbox in which a conversation is created, the system would distribute the conversations equally among the online agents\\"}),`\\n`,(0,t.jsx)(o.li,{children:\\"If all the agents are offline, the system would distribute the conversations equally to all agents\\"}),`\\n`]}),`\\n`,(0,t.jsx)(s,{caption:{title:\\"Figure 44\\",description:\\"Auto Agent Assignment\\"},src:\\"/assets/images/products/kata-omnichat/image44.webp\\",alt:\\"Kata Omnichat\\",naturalHeight:1e3,naturalWidth:1600}),`\\n`,(0,t.jsx)(o.p,{children:\\"To enable round-robin assignment in your inbox, follow the steps below.\\"}),`\\n`,(0,t.jsxs)(o.ol,{children:[`\\n`,(0,t.jsxs)(o.li,{children:[\\"Go to \\",(0,t.jsx)(o.strong,{children:\\"Settings > Inboxes\\"})]}),`\\n`,(0,t.jsx)(o.li,{children:\\"Click on the inbox settings link of the inbox you want to enable round-robin assignment\\"}),`\\n`,(0,t.jsx)(o.li,{children:\\"Scroll down to see the setting for Round-robin, as shown below\\"}),`\\n`]})]})}}var j=y;function _(e,n){throw new Error(\\"Expected \\"+(n?\\"component\\":\\"object\\")+\\" `\\"+e+\\"` to be defined: you likely forgot to import, pass, or provide it.\\")}return w(F);})();\\n;return Component;"},"_id":"kata-omnichat/manage-your-conversation/auto-agent-assignment.mdx","_raw":{"sourceFilePath":"kata-omnichat/manage-your-conversation/auto-agent-assignment.mdx","sourceFileName":"auto-agent-assignment.mdx","sourceFileDir":"kata-omnichat/manage-your-conversation","contentType":"mdx","flattenedPath":"kata-omnichat/manage-your-conversation/auto-agent-assignment"},"type":"KataOmnichat","slug":["manage-your-conversation","auto-agent-assignment"],"excerpt":"\\nOmnichat provides a round-robin auto-assignment system for conversations. The assignment follows the logic mentioned below"}');
;// CONCATENATED MODULE: ./.contentlayer/generated/KataOmnichat/kata-omnichat__manage-your-conversation__conversation-in-customer-side-using-bot.mdx.json
const kata_omnichat_manage_your_conversation_conversation_in_customer_side_using_bot_mdx_namespaceObject = JSON.parse('{"id":"conversation-in-customer-side-using-bot","section":"Manage Your Conversation","title":"Conversation in Customer-side using bot","prev":"whatsapp-business-conversation-in-agent-side","next":"conversation-in-customer-side-without-bot","body":{"raw":"\\n1. Customers send messages to the Instagram account\\n2. Also, customers can reply to the brand\'s Instagram Story (**Instagram Story Reply**) or mention the brand\'s Instagram account in the customer\'s Instagram Story (**Instagram Story Mention**).\\n\\n   <div className=\\"info\\">\\n     <img className=\\"borderless\\" src=\\"/assets/images/icon-info.svg\\" />\\n     <p>\\n       Disclaimer: Customers\' Instagram account must be public if they want to send Instagram Story Reply and Instagram\\n       Story Mention to a brand, otherwise it cannot be replied by bot. If customers\' accounts are private, then the\\n       brand must request to follow the customers first\\n     </p>\\n   </div>\\n\\n<FigureImage\\n  caption={{ title: \'Figure 40\', description: `Conversation in Customer-side using bot` }}\\n  src=\\"/assets/images/products/kata-omnichat/image40.webp\\"\\n  alt=\\"Kata Omnichat\\"\\n  naturalHeight={842}\\n  naturalWidth={1600}\\n/>\\n\\n3. If the conversation is new, customers can select Ice Breaker topics or directly type a message\\n4. If the conversation is _not new_, customers can directly send any messages\\n5. Customers will be offered to choose whether they want to be handovered to agents or not. If they choose “yes”, then there will be an agent assigned for them\\n6. Customers will receive Instagram automation various responses such as: text, image, carousel (“generic template”), quick replies, and “heart” sticker when liking a message (coming soon). Learn more about [how to use Instagram DM automation](/tutorials/how-to-use-instagram-messaging-automation-in-your-project)\\n7. During chatbot-customer conversation, agents can take over the conversation if users add an “agent bot” in the Inbox. Learn more about [set up agent bot in Omnichat](/kata-omnichat/configure-your-agent-chatbot/setup-agent-bot-in-kata-omnichat)\\n8. Customers can send and receive messages until agents resolve the conversation (if they choose to be handovered) or end the conversation with chatbot\\n","code":"var Component=(()=>{var h=Object.create;var a=Object.defineProperty;var u=Object.getOwnPropertyDescriptor;var d=Object.getOwnPropertyNames;var g=Object.getPrototypeOf,p=Object.prototype.hasOwnProperty;var i=t=>a(t,\\"__esModule\\",{value:!0});var b=(t,n)=>()=>(n||t((n={exports:{}}).exports,n),n.exports),f=(t,n)=>{for(var s in n)a(t,s,{get:n[s],enumerable:!0})},c=(t,n,s,o)=>{if(n&&typeof n==\\"object\\"||typeof n==\\"function\\")for(let r of d(n))!p.call(t,r)&&(s||r!==\\"default\\")&&a(t,r,{get:()=>n[r],enumerable:!(o=u(n,r))||o.enumerable});return t},v=(t,n)=>c(i(a(t!=null?h(g(t)):{},\\"default\\",!n&&t&&t.__esModule?{get:()=>t.default,enumerable:!0}:{value:t,enumerable:!0})),t),y=(t=>(n,s)=>t&&t.get(n)||(s=c(i({}),n,1),t&&t.set(n,s),s))(typeof WeakMap!=\\"undefined\\"?new WeakMap:0);var l=b((M,m)=>{m.exports=_jsx_runtime});var j={};f(j,{default:()=>x,frontmatter:()=>w});var e=v(l()),w={id:\\"conversation-in-customer-side-using-bot\\",title:\\"Conversation in Customer-side using bot\\",prev:\\"whatsapp-business-conversation-in-agent-side\\",next:\\"conversation-in-customer-side-without-bot\\",section:\\"Manage Your Conversation\\"};function I(t={}){let{wrapper:n}=t.components||{};return n?(0,e.jsx)(n,Object.assign({},t,{children:(0,e.jsx)(s,{})})):s();function s(){let o=Object.assign({ol:\\"ol\\",li:\\"li\\",p:\\"p\\",strong:\\"strong\\",em:\\"em\\",a:\\"a\\"},t.components),{FigureImage:r}=o;return r||C(\\"FigureImage\\",!0),(0,e.jsxs)(e.Fragment,{children:[(0,e.jsxs)(o.ol,{children:[`\\n`,(0,e.jsxs)(o.li,{children:[`\\n`,(0,e.jsx)(o.p,{children:\\"Customers send messages to the Instagram account\\"}),`\\n`]}),`\\n`,(0,e.jsxs)(o.li,{children:[`\\n`,(0,e.jsxs)(o.p,{children:[\\"Also, customers can reply to the brand\'s Instagram Story (\\",(0,e.jsx)(o.strong,{children:\\"Instagram Story Reply\\"}),\\") or mention the brand\'s Instagram account in the customer\'s Instagram Story (\\",(0,e.jsx)(o.strong,{children:\\"Instagram Story Mention\\"}),\\").\\"]}),`\\n`,(0,e.jsxs)(\\"div\\",{className:\\"info\\",children:[(0,e.jsx)(\\"img\\",{className:\\"borderless\\",src:\\"/assets/images/icon-info.svg\\"}),(0,e.jsx)(\\"p\\",{children:(0,e.jsx)(o.p,{children:`Disclaimer: Customers\' Instagram account must be public if they want to send Instagram Story Reply and Instagram\\nStory Mention to a brand, otherwise it cannot be replied by bot. If customers\' accounts are private, then the\\nbrand must request to follow the customers first`})})]}),`\\n`]}),`\\n`]}),`\\n`,(0,e.jsx)(r,{caption:{title:\\"Figure 40\\",description:\\"Conversation in Customer-side using bot\\"},src:\\"/assets/images/products/kata-omnichat/image40.webp\\",alt:\\"Kata Omnichat\\",naturalHeight:842,naturalWidth:1600}),`\\n`,(0,e.jsxs)(o.ol,{start:\\"3\\",children:[`\\n`,(0,e.jsx)(o.li,{children:\\"If the conversation is new, customers can select Ice Breaker topics or directly type a message\\"}),`\\n`,(0,e.jsxs)(o.li,{children:[\\"If the conversation is \\",(0,e.jsx)(o.em,{children:\\"not new\\"}),\\", customers can directly send any messages\\"]}),`\\n`,(0,e.jsx)(o.li,{children:\\"Customers will be offered to choose whether they want to be handovered to agents or not. If they choose \\\\u201Cyes\\\\u201D, then there will be an agent assigned for them\\"}),`\\n`,(0,e.jsxs)(o.li,{children:[\\"Customers will receive Instagram automation various responses such as: text, image, carousel (\\\\u201Cgeneric template\\\\u201D), quick replies, and \\\\u201Cheart\\\\u201D sticker when liking a message (coming soon). Learn more about \\",(0,e.jsx)(o.a,{href:\\"/tutorials/how-to-use-instagram-messaging-automation-in-your-project\\",children:\\"how to use Instagram DM automation\\"})]}),`\\n`,(0,e.jsxs)(o.li,{children:[\\"During chatbot-customer conversation, agents can take over the conversation if users add an \\\\u201Cagent bot\\\\u201D in the Inbox. Learn more about \\",(0,e.jsx)(o.a,{href:\\"/kata-omnichat/configure-your-agent-chatbot/setup-agent-bot-in-kata-omnichat\\",children:\\"set up agent bot in Omnichat\\"})]}),`\\n`,(0,e.jsx)(o.li,{children:\\"Customers can send and receive messages until agents resolve the conversation (if they choose to be handovered) or end the conversation with chatbot\\"}),`\\n`]})]})}}var x=I;function C(t,n){throw new Error(\\"Expected \\"+(n?\\"component\\":\\"object\\")+\\" `\\"+t+\\"` to be defined: you likely forgot to import, pass, or provide it.\\")}return y(j);})();\\n;return Component;"},"_id":"kata-omnichat/manage-your-conversation/conversation-in-customer-side-using-bot.mdx","_raw":{"sourceFilePath":"kata-omnichat/manage-your-conversation/conversation-in-customer-side-using-bot.mdx","sourceFileName":"conversation-in-customer-side-using-bot.mdx","sourceFileDir":"kata-omnichat/manage-your-conversation","contentType":"mdx","flattenedPath":"kata-omnichat/manage-your-conversation/conversation-in-customer-side-using-bot"},"type":"KataOmnichat","slug":["manage-your-conversation","conversation-in-customer-side-using-bot"],"excerpt":"\\n1. Customers send messages to the Instagram account\\n2"}');
;// CONCATENATED MODULE: ./.contentlayer/generated/KataOmnichat/kata-omnichat__manage-your-conversation__conversation-in-customer-side-without-bot.mdx.json
const kata_omnichat_manage_your_conversation_conversation_in_customer_side_without_bot_mdx_namespaceObject = JSON.parse('{"id":"conversation-in-customer-side-without-bot","section":"Manage Your Conversation","title":"Conversation in Customer-side for Instagram Messaging (without bot)","prev":"conversation-in-customer-side-using-bot","next":"see-conversation-between-chatbot-and-customer","body":{"raw":"\\n1. Customers send messages to the Instagram account\\n2. Also, customers can reply to the brand\'s Instagram Story (**Instagram Story Reply**) or mention the brand\'s Instagram account in the customer\'s Instagram Story (**Instagram Story Mention**).\\n\\n<div className=\\"info\\">\\n  <img className=\\"borderless\\" src=\\"/assets/images/icon-info.svg\\" />\\n  <p>\\n    Disclaimer: Customers\' Instagram accounts must be public if they want to send Instagram Story Reply and Instagram\\n    Story Mention to a brand, otherwise it cannot be replied by bot. If customers\' accounts are private, then the brand\\n    must request to follow the customers first\\n  </p>\\n</div>\\n\\n3. If it’s a new conversation and you’ve already set up the Ice Breaker, customers will see the conversation topics\\n4. If the conversation isn’t new or you haven’t set up the Ice Breaker, customers can directly send any messages\\n5. Customers can send text, image, video, story mention and inline liking\\n6. Agents can send text, image, video and inline liking\\n7. Customers can have conversations with agents until agents resolve it\\n","code":"var Component=(()=>{var d=Object.create;var i=Object.defineProperty;var u=Object.getOwnPropertyDescriptor;var h=Object.getOwnPropertyNames;var g=Object.getPrototypeOf,p=Object.prototype.hasOwnProperty;var a=e=>i(e,\\"__esModule\\",{value:!0});var v=(e,n)=>()=>(n||e((n={exports:{}}).exports,n),n.exports),y=(e,n)=>{for(var o in n)i(e,o,{get:n[o],enumerable:!0})},c=(e,n,o,s)=>{if(n&&typeof n==\\"object\\"||typeof n==\\"function\\")for(let r of h(n))!p.call(e,r)&&(o||r!==\\"default\\")&&i(e,r,{get:()=>n[r],enumerable:!(s=u(n,r))||s.enumerable});return e},b=(e,n)=>c(a(i(e!=null?d(g(e)):{},\\"default\\",!n&&e&&e.__esModule?{get:()=>e.default,enumerable:!0}:{value:e,enumerable:!0})),e),I=(e=>(n,o)=>e&&e.get(n)||(o=c(a({}),n,1),e&&e.set(n,o),o))(typeof WeakMap!=\\"undefined\\"?new WeakMap:0);var m=v((M,l)=>{l.exports=_jsx_runtime});var C={};y(C,{default:()=>w,frontmatter:()=>f});var t=b(m()),f={id:\\"conversation-in-customer-side-without-bot\\",title:\\"Conversation in Customer-side for Instagram Messaging (without bot)\\",prev:\\"conversation-in-customer-side-using-bot\\",next:\\"see-conversation-between-chatbot-and-customer\\",section:\\"Manage Your Conversation\\"};function x(e={}){let{wrapper:n}=e.components||{};return n?(0,t.jsx)(n,Object.assign({},e,{children:(0,t.jsx)(o,{})})):o();function o(){let s=Object.assign({ol:\\"ol\\",li:\\"li\\",strong:\\"strong\\",p:\\"p\\"},e.components);return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsxs)(s.ol,{children:[`\\n`,(0,t.jsx)(s.li,{children:\\"Customers send messages to the Instagram account\\"}),`\\n`,(0,t.jsxs)(s.li,{children:[\\"Also, customers can reply to the brand\'s Instagram Story (\\",(0,t.jsx)(s.strong,{children:\\"Instagram Story Reply\\"}),\\") or mention the brand\'s Instagram account in the customer\'s Instagram Story (\\",(0,t.jsx)(s.strong,{children:\\"Instagram Story Mention\\"}),\\").\\"]}),`\\n`]}),`\\n`,(0,t.jsxs)(\\"div\\",{className:\\"info\\",children:[(0,t.jsx)(\\"img\\",{className:\\"borderless\\",src:\\"/assets/images/icon-info.svg\\"}),(0,t.jsx)(\\"p\\",{children:(0,t.jsx)(s.p,{children:`Disclaimer: Customers\' Instagram accounts must be public if they want to send Instagram Story Reply and Instagram\\nStory Mention to a brand, otherwise it cannot be replied by bot. If customers\' accounts are private, then the brand\\nmust request to follow the customers first`})})]}),`\\n`,(0,t.jsxs)(s.ol,{start:\\"3\\",children:[`\\n`,(0,t.jsx)(s.li,{children:\\"If it\\\\u2019s a new conversation and you\\\\u2019ve already set up the Ice Breaker, customers will see the conversation topics\\"}),`\\n`,(0,t.jsx)(s.li,{children:\\"If the conversation isn\\\\u2019t new or you haven\\\\u2019t set up the Ice Breaker, customers can directly send any messages\\"}),`\\n`,(0,t.jsx)(s.li,{children:\\"Customers can send text, image, video, story mention and inline liking\\"}),`\\n`,(0,t.jsx)(s.li,{children:\\"Agents can send text, image, video and inline liking\\"}),`\\n`,(0,t.jsx)(s.li,{children:\\"Customers can have conversations with agents until agents resolve it\\"}),`\\n`]})]})}}var w=x;return I(C);})();\\n;return Component;"},"_id":"kata-omnichat/manage-your-conversation/conversation-in-customer-side-without-bot.mdx","_raw":{"sourceFilePath":"kata-omnichat/manage-your-conversation/conversation-in-customer-side-without-bot.mdx","sourceFileName":"conversation-in-customer-side-without-bot.mdx","sourceFileDir":"kata-omnichat/manage-your-conversation","contentType":"mdx","flattenedPath":"kata-omnichat/manage-your-conversation/conversation-in-customer-side-without-bot"},"type":"KataOmnichat","slug":["manage-your-conversation","conversation-in-customer-side-without-bot"],"excerpt":"\\n1. Customers send messages to the Instagram account\\n2"}');
;// CONCATENATED MODULE: ./.contentlayer/generated/KataOmnichat/kata-omnichat__manage-your-conversation__download-transcript.mdx.json
const kata_omnichat_manage_your_conversation_download_transcript_mdx_namespaceObject = JSON.parse('{"id":"download-transcript","section":"Manage Your Conversation","title":"Download transcript","prev":"mute-conversation","next":"view-contact","body":{"raw":"\\nIn the conversation, there is a feature that Omnichat provides where you can download transcripts of the conversation. You can see the download menu as shown below.\\n\\n1. Go to conversation\\n2. Click the **kebab icon** in the upper right corner of the conversation\\n3. Choose the send conversation transcript\\n4. There will appear a pop-up to ask for your email address. The transcript will be sent to this email address.\\n\\n<FigureImage\\n  caption={{ title: \'Figure 49\', description: `Download Conversation Transcript` }}\\n  src=\\"/assets/images/products/kata-omnichat/image49.webp\\"\\n  alt=\\"Kata Omnichat\\"\\n  naturalHeight={1000}\\n  naturalWidth={1600}\\n/>\\n","code":"var Component=(()=>{var p=Object.create;var a=Object.defineProperty;var h=Object.getOwnPropertyDescriptor;var u=Object.getOwnPropertyNames;var m=Object.getPrototypeOf,g=Object.prototype.hasOwnProperty;var s=e=>a(e,\\"__esModule\\",{value:!0});var w=(e,t)=>()=>(t||e((t={exports:{}}).exports,t),t.exports),f=(e,t)=>{for(var o in t)a(e,o,{get:t[o],enumerable:!0})},c=(e,t,o,r)=>{if(t&&typeof t==\\"object\\"||typeof t==\\"function\\")for(let i of u(t))!g.call(e,i)&&(o||i!==\\"default\\")&&a(e,i,{get:()=>t[i],enumerable:!(r=h(t,i))||r.enumerable});return e},v=(e,t)=>c(s(a(e!=null?p(m(e)):{},\\"default\\",!t&&e&&e.__esModule?{get:()=>e.default,enumerable:!0}:{value:e,enumerable:!0})),e),x=(e=>(t,o)=>e&&e.get(t)||(o=c(s({}),t,1),e&&e.set(t,o),o))(typeof WeakMap!=\\"undefined\\"?new WeakMap:0);var d=w((F,l)=>{l.exports=_jsx_runtime});var k={};f(k,{default:()=>_,frontmatter:()=>b});var n=v(d()),b={id:\\"download-transcript\\",title:\\"Download transcript\\",prev:\\"mute-conversation\\",next:\\"view-contact\\",section:\\"Manage Your Conversation\\"};function j(e={}){let{wrapper:t}=e.components||{};return t?(0,n.jsx)(t,Object.assign({},e,{children:(0,n.jsx)(o,{})})):o();function o(){let r=Object.assign({p:\\"p\\",ol:\\"ol\\",li:\\"li\\",strong:\\"strong\\"},e.components),{FigureImage:i}=r;return i||C(\\"FigureImage\\",!0),(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(r.p,{children:\\"In the conversation, there is a feature that Omnichat provides where you can download transcripts of the conversation. You can see the download menu as shown below.\\"}),`\\n`,(0,n.jsxs)(r.ol,{children:[`\\n`,(0,n.jsx)(r.li,{children:\\"Go to conversation\\"}),`\\n`,(0,n.jsxs)(r.li,{children:[\\"Click the \\",(0,n.jsx)(r.strong,{children:\\"kebab icon\\"}),\\" in the upper right corner of the conversation\\"]}),`\\n`,(0,n.jsx)(r.li,{children:\\"Choose the send conversation transcript\\"}),`\\n`,(0,n.jsx)(r.li,{children:\\"There will appear a pop-up to ask for your email address. The transcript will be sent to this email address.\\"}),`\\n`]}),`\\n`,(0,n.jsx)(i,{caption:{title:\\"Figure 49\\",description:\\"Download Conversation Transcript\\"},src:\\"/assets/images/products/kata-omnichat/image49.webp\\",alt:\\"Kata Omnichat\\",naturalHeight:1e3,naturalWidth:1600})]})}}var _=j;function C(e,t){throw new Error(\\"Expected \\"+(t?\\"component\\":\\"object\\")+\\" `\\"+e+\\"` to be defined: you likely forgot to import, pass, or provide it.\\")}return x(k);})();\\n;return Component;"},"_id":"kata-omnichat/manage-your-conversation/download-transcript.mdx","_raw":{"sourceFilePath":"kata-omnichat/manage-your-conversation/download-transcript.mdx","sourceFileName":"download-transcript.mdx","sourceFileDir":"kata-omnichat/manage-your-conversation","contentType":"mdx","flattenedPath":"kata-omnichat/manage-your-conversation/download-transcript"},"type":"KataOmnichat","slug":["manage-your-conversation","download-transcript"],"excerpt":"\\nIn the conversation, there is a feature that Omnichat provides where you can download transcripts of the conversation. You can see the download menu as shown below"}');
;// CONCATENATED MODULE: ./.contentlayer/generated/KataOmnichat/kata-omnichat__manage-your-conversation__manual-agent-assignment.mdx.json
const kata_omnichat_manage_your_conversation_manual_agent_assignment_mdx_namespaceObject = JSON.parse('{"id":"manual-agent-assignment","section":"Manage Your Conversation","title":"Manual Agent Assignment","prev":"using-private-notes-in-conversations","next":"auto-agent-assignment","body":{"raw":"\\nEvery conversation in Omnichat can have an assignee. An assignee can be manually added to the conversation or the organizations can opt for a round-robin assignment system. A conversation can be manually assigned to 2 categories of users.\\n\\n1. Agents who have access to the inbox in which the conversation is created\\n2. Administrators who can access every conversation in the system\\n\\nTo assign an agent or admin to a conversation, an admin/agent can select the assignee from the dropdown named under \\"Assigned Agent\\" from the \\"Conversation Details\\" section in the right sidebar, as shown below.\\n\\n<FigureImage\\n  caption={{ title: \'Figure 43\', description: `Agent Assignment` }}\\n  src=\\"/assets/images/products/kata-omnichat/image43.webp\\"\\n  alt=\\"Kata Omnichat\\"\\n  naturalHeight={1000}\\n  naturalWidth={1600}\\n/>\\n\\nBesides that, as an agent you can assign conversation to another agent or administration by following the same steps above.\\n","code":"var Component=(()=>{var d=Object.create;var i=Object.defineProperty;var l=Object.getOwnPropertyDescriptor;var h=Object.getOwnPropertyNames;var u=Object.getPrototypeOf,p=Object.prototype.hasOwnProperty;var r=n=>i(n,\\"__esModule\\",{value:!0});var v=(n,e)=>()=>(e||n((e={exports:{}}).exports,e),e.exports),f=(n,e)=>{for(var a in e)i(n,a,{get:e[a],enumerable:!0})},c=(n,e,a,o)=>{if(e&&typeof e==\\"object\\"||typeof e==\\"function\\")for(let s of h(e))!p.call(n,s)&&(a||s!==\\"default\\")&&i(n,s,{get:()=>e[s],enumerable:!(o=l(e,s))||o.enumerable});return n},b=(n,e)=>c(r(i(n!=null?d(u(n)):{},\\"default\\",!e&&n&&n.__esModule?{get:()=>n.default,enumerable:!0}:{value:n,enumerable:!0})),n),x=(n=>(e,a)=>n&&n.get(e)||(a=c(r({}),e,1),n&&n.set(e,a),a))(typeof WeakMap!=\\"undefined\\"?new WeakMap:0);var m=v((F,g)=>{g.exports=_jsx_runtime});var _={};f(_,{default:()=>A,frontmatter:()=>w});var t=b(m()),w={id:\\"manual-agent-assignment\\",title:\\"Manual Agent Assignment\\",prev:\\"using-private-notes-in-conversations\\",next:\\"auto-agent-assignment\\",section:\\"Manage Your Conversation\\"};function y(n={}){let{wrapper:e}=n.components||{};return e?(0,t.jsx)(e,Object.assign({},n,{children:(0,t.jsx)(a,{})})):a();function a(){let o=Object.assign({p:\\"p\\",ol:\\"ol\\",li:\\"li\\"},n.components),{FigureImage:s}=o;return s||j(\\"FigureImage\\",!0),(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(o.p,{children:\\"Every conversation in Omnichat can have an assignee. An assignee can be manually added to the conversation or the organizations can opt for a round-robin assignment system. A conversation can be manually assigned to 2 categories of users.\\"}),`\\n`,(0,t.jsxs)(o.ol,{children:[`\\n`,(0,t.jsx)(o.li,{children:\\"Agents who have access to the inbox in which the conversation is created\\"}),`\\n`,(0,t.jsx)(o.li,{children:\\"Administrators who can access every conversation in the system\\"}),`\\n`]}),`\\n`,(0,t.jsx)(o.p,{children:\'To assign an agent or admin to a conversation, an admin/agent can select the assignee from the dropdown named under \\"Assigned Agent\\" from the \\"Conversation Details\\" section in the right sidebar, as shown below.\'}),`\\n`,(0,t.jsx)(s,{caption:{title:\\"Figure 43\\",description:\\"Agent Assignment\\"},src:\\"/assets/images/products/kata-omnichat/image43.webp\\",alt:\\"Kata Omnichat\\",naturalHeight:1e3,naturalWidth:1600}),`\\n`,(0,t.jsx)(o.p,{children:\\"Besides that, as an agent you can assign conversation to another agent or administration by following the same steps above.\\"})]})}}var A=y;function j(n,e){throw new Error(\\"Expected \\"+(e?\\"component\\":\\"object\\")+\\" `\\"+n+\\"` to be defined: you likely forgot to import, pass, or provide it.\\")}return x(_);})();\\n;return Component;"},"_id":"kata-omnichat/manage-your-conversation/manual-agent-assignment.mdx","_raw":{"sourceFilePath":"kata-omnichat/manage-your-conversation/manual-agent-assignment.mdx","sourceFileName":"manual-agent-assignment.mdx","sourceFileDir":"kata-omnichat/manage-your-conversation","contentType":"mdx","flattenedPath":"kata-omnichat/manage-your-conversation/manual-agent-assignment"},"type":"KataOmnichat","slug":["manage-your-conversation","manual-agent-assignment"],"excerpt":"\\nEvery conversation in Omnichat can have an assignee. An assignee can be manually added to the conversation or the organizations can opt for a round-robin assignment system"}');
;// CONCATENATED MODULE: ./.contentlayer/generated/KataOmnichat/kata-omnichat__manage-your-conversation__mute-conversation.mdx.json
const kata_omnichat_manage_your_conversation_mute_conversation_mdx_namespaceObject = JSON.parse('{"id":"mute-conversation","section":"Manage Your Conversation","title":"Mute conversation","prev":"take-over-bot","next":"download-transcript","body":{"raw":"\\nIn Kata Omnichat, both admin and agents can manage the conversation to mute the conversation. **The mute conversation** is the feature when you can’t see the conversation for 6 hours.\\n\\nTo set up this feature, you can go to conversation, then click the **kebab icon** in the upper right corner, then choose mute conversation.\\n\\n<FigureImage\\n  caption={{ title: \'Figure 48\', description: `Mute Conversation` }}\\n  src=\\"/assets/images/products/kata-omnichat/image48.webp\\"\\n  alt=\\"Kata Omnichat\\"\\n  naturalHeight={1000}\\n  naturalWidth={1600}\\n/>\\n","code":"var Component=(()=>{var m=Object.create;var i=Object.defineProperty;var g=Object.getOwnPropertyDescriptor;var p=Object.getOwnPropertyNames;var d=Object.getPrototypeOf,l=Object.prototype.hasOwnProperty;var s=t=>i(t,\\"__esModule\\",{value:!0});var f=(t,e)=>()=>(e||t((e={exports:{}}).exports,e),e.exports),v=(t,e)=>{for(var o in e)i(t,o,{get:e[o],enumerable:!0})},c=(t,e,o,r)=>{if(e&&typeof e==\\"object\\"||typeof e==\\"function\\")for(let a of p(e))!l.call(t,a)&&(o||a!==\\"default\\")&&i(t,a,{get:()=>e[a],enumerable:!(r=g(e,a))||r.enumerable});return t},x=(t,e)=>c(s(i(t!=null?m(d(t)):{},\\"default\\",!e&&t&&t.__esModule?{get:()=>t.default,enumerable:!0}:{value:t,enumerable:!0})),t),b=(t=>(e,o)=>t&&t.get(e)||(o=c(s({}),e,1),t&&t.set(e,o),o))(typeof WeakMap!=\\"undefined\\"?new WeakMap:0);var h=f((F,u)=>{u.exports=_jsx_runtime});var k={};v(k,{default:()=>M,frontmatter:()=>j});var n=x(h()),j={id:\\"mute-conversation\\",title:\\"Mute conversation\\",prev:\\"take-over-bot\\",next:\\"download-transcript\\",section:\\"Manage Your Conversation\\"};function _(t={}){let{wrapper:e}=t.components||{};return e?(0,n.jsx)(e,Object.assign({},t,{children:(0,n.jsx)(o,{})})):o();function o(){let r=Object.assign({p:\\"p\\",strong:\\"strong\\"},t.components),{FigureImage:a}=r;return a||w(\\"FigureImage\\",!0),(0,n.jsxs)(n.Fragment,{children:[(0,n.jsxs)(r.p,{children:[\\"In Kata Omnichat, both admin and agents can manage the conversation to mute the conversation. \\",(0,n.jsx)(r.strong,{children:\\"The mute conversation\\"}),\\" is the feature when you can\\\\u2019t see the conversation for 6 hours.\\"]}),`\\n`,(0,n.jsxs)(r.p,{children:[\\"To set up this feature, you can go to conversation, then click the \\",(0,n.jsx)(r.strong,{children:\\"kebab icon\\"}),\\" in the upper right corner, then choose mute conversation.\\"]}),`\\n`,(0,n.jsx)(a,{caption:{title:\\"Figure 48\\",description:\\"Mute Conversation\\"},src:\\"/assets/images/products/kata-omnichat/image48.webp\\",alt:\\"Kata Omnichat\\",naturalHeight:1e3,naturalWidth:1600})]})}}var M=_;function w(t,e){throw new Error(\\"Expected \\"+(e?\\"component\\":\\"object\\")+\\" `\\"+t+\\"` to be defined: you likely forgot to import, pass, or provide it.\\")}return b(k);})();\\n;return Component;"},"_id":"kata-omnichat/manage-your-conversation/mute-conversation.mdx","_raw":{"sourceFilePath":"kata-omnichat/manage-your-conversation/mute-conversation.mdx","sourceFileName":"mute-conversation.mdx","sourceFileDir":"kata-omnichat/manage-your-conversation","contentType":"mdx","flattenedPath":"kata-omnichat/manage-your-conversation/mute-conversation"},"type":"KataOmnichat","slug":["manage-your-conversation","mute-conversation"],"excerpt":"\\nIn Kata Omnichat, both admin and agents can manage the conversation to mute the conversation. **The mute conversation** is the feature when you can’t see the conversation for 6 hours"}');
;// CONCATENATED MODULE: ./.contentlayer/generated/KataOmnichat/kata-omnichat__manage-your-conversation__resolve-conversation.mdx.json
const kata_omnichat_manage_your_conversation_resolve_conversation_mdx_namespaceObject = JSON.parse('{"id":"resolve-conversation","section":"Manage Your Conversation","title":"Resolve conversation","prev":"auto-agent-assignment","next":"take-over-bot","body":{"raw":"\\nWhen completing the conversation, you need to be notified that the conversation is resolved and another conversation needs to be rehandled. Both agent and administrator can resolve conversations.\\n\\n1. Go to conversation, choose the selected conversation you want to resolved\\n2. Click the resolved button on the upper right corner.\\n\\n   <div className=\\"info\\">\\n     <img className=\\"borderless\\" src=\\"/assets/images/icon-info.svg\\" />\\n     <p>\\n       Note: Make sure you change the agent name beside the resolve button to be none to make sure if there is any\\n       upcoming message from the same customer, they will not go to the same agent.\\n     </p>\\n   </div>\\n\\n<FigureImage\\n  caption={{ title: \'Figure 45\', description: `Resolve Conversation` }}\\n  src=\\"/assets/images/products/kata-omnichat/image45.webp\\"\\n  alt=\\"Kata Omnichat\\"\\n  naturalHeight={1000}\\n  naturalWidth={1600}\\n/>\\n\\n3. The conversation will move from **Mine** to **All** and it will include in resolve message\\n","code":"var Component=(()=>{var h=Object.create;var s=Object.defineProperty;var m=Object.getOwnPropertyDescriptor;var g=Object.getOwnPropertyNames;var u=Object.getPrototypeOf,p=Object.prototype.hasOwnProperty;var a=e=>s(e,\\"__esModule\\",{value:!0});var v=(e,n)=>()=>(n||e((n={exports:{}}).exports,n),n.exports),f=(e,n)=>{for(var r in n)s(e,r,{get:n[r],enumerable:!0})},c=(e,n,r,o)=>{if(n&&typeof n==\\"object\\"||typeof n==\\"function\\")for(let i of g(n))!p.call(e,i)&&(r||i!==\\"default\\")&&s(e,i,{get:()=>n[i],enumerable:!(o=m(n,i))||o.enumerable});return e},b=(e,n)=>c(a(s(e!=null?h(u(e)):{},\\"default\\",!n&&e&&e.__esModule?{get:()=>e.default,enumerable:!0}:{value:e,enumerable:!0})),e),x=(e=>(n,r)=>e&&e.get(n)||(r=c(a({}),n,1),e&&e.set(n,r),r))(typeof WeakMap!=\\"undefined\\"?new WeakMap:0);var d=v((C,l)=>{l.exports=_jsx_runtime});var M={};f(M,{default:()=>y,frontmatter:()=>j});var t=b(d()),j={id:\\"resolve-conversation\\",title:\\"Resolve conversation\\",prev:\\"auto-agent-assignment\\",next:\\"take-over-bot\\",section:\\"Manage Your Conversation\\"};function w(e={}){let{wrapper:n}=e.components||{};return n?(0,t.jsx)(n,Object.assign({},e,{children:(0,t.jsx)(r,{})})):r();function r(){let o=Object.assign({p:\\"p\\",ol:\\"ol\\",li:\\"li\\",strong:\\"strong\\"},e.components),{FigureImage:i}=o;return i||_(\\"FigureImage\\",!0),(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(o.p,{children:\\"When completing the conversation, you need to be notified that the conversation is resolved and another conversation needs to be rehandled. Both agent and administrator can resolve conversations.\\"}),`\\n`,(0,t.jsxs)(o.ol,{children:[`\\n`,(0,t.jsxs)(o.li,{children:[`\\n`,(0,t.jsx)(o.p,{children:\\"Go to conversation, choose the selected conversation you want to resolved\\"}),`\\n`]}),`\\n`,(0,t.jsxs)(o.li,{children:[`\\n`,(0,t.jsx)(o.p,{children:\\"Click the resolved button on the upper right corner.\\"}),`\\n`,(0,t.jsxs)(\\"div\\",{className:\\"info\\",children:[(0,t.jsx)(\\"img\\",{className:\\"borderless\\",src:\\"/assets/images/icon-info.svg\\"}),(0,t.jsx)(\\"p\\",{children:(0,t.jsx)(o.p,{children:`Note: Make sure you change the agent name beside the resolve button to be none to make sure if there is any\\nupcoming message from the same customer, they will not go to the same agent.`})})]}),`\\n`]}),`\\n`]}),`\\n`,(0,t.jsx)(i,{caption:{title:\\"Figure 45\\",description:\\"Resolve Conversation\\"},src:\\"/assets/images/products/kata-omnichat/image45.webp\\",alt:\\"Kata Omnichat\\",naturalHeight:1e3,naturalWidth:1600}),`\\n`,(0,t.jsxs)(o.ol,{start:\\"3\\",children:[`\\n`,(0,t.jsxs)(o.li,{children:[\\"The conversation will move from \\",(0,t.jsx)(o.strong,{children:\\"Mine\\"}),\\" to \\",(0,t.jsx)(o.strong,{children:\\"All\\"}),\\" and it will include in resolve message\\"]}),`\\n`]})]})}}var y=w;function _(e,n){throw new Error(\\"Expected \\"+(n?\\"component\\":\\"object\\")+\\" `\\"+e+\\"` to be defined: you likely forgot to import, pass, or provide it.\\")}return x(M);})();\\n;return Component;"},"_id":"kata-omnichat/manage-your-conversation/resolve-conversation.mdx","_raw":{"sourceFilePath":"kata-omnichat/manage-your-conversation/resolve-conversation.mdx","sourceFileName":"resolve-conversation.mdx","sourceFileDir":"kata-omnichat/manage-your-conversation","contentType":"mdx","flattenedPath":"kata-omnichat/manage-your-conversation/resolve-conversation"},"type":"KataOmnichat","slug":["manage-your-conversation","resolve-conversation"],"excerpt":"\\nWhen completing the conversation, you need to be notified that the conversation is resolved and another conversation needs to be rehandled. Both agent and administrator can resolve conversations"}');
;// CONCATENATED MODULE: ./.contentlayer/generated/KataOmnichat/kata-omnichat__manage-your-conversation__see-conversation-between-chatbot-and-customer.mdx.json
const kata_omnichat_manage_your_conversation_see_conversation_between_chatbot_and_customer_mdx_namespaceObject = JSON.parse('{"id":"see-conversation-between-chatbot-and-customer","section":"Manage Your Conversation","title":"See Conversation between Chatbot and Customer","prev":"conversation-in-customer-side-without-bot","next":"using-private-notes-in-conversations","body":{"raw":"\\n1. Go to the **Conversation** menu to see all your messages, both new and past messages\\n2. In this page, you will see a dropdown which consists of **Open, Resolved, Bot**\\n   1. Open means all new messages and not responded yet by agents\\n   2. Resolved means all resolved messages from human agents\\n   3. Bot means all conversations between chatbot and end-users\\n3. Choose **Bot** and see the on-going conversation\\n4. You will see purple messages which indicate responses from chatbot and white which indicate incoming messages from the end-user\\n","code":"var Component=(()=>{var h=Object.create;var r=Object.defineProperty;var m=Object.getOwnPropertyDescriptor;var g=Object.getOwnPropertyNames;var u=Object.getPrototypeOf,p=Object.prototype.hasOwnProperty;var a=e=>r(e,\\"__esModule\\",{value:!0});var w=(e,n)=>()=>(n||e((n={exports:{}}).exports,n),n.exports),v=(e,n)=>{for(var o in n)r(e,o,{get:n[o],enumerable:!0})},l=(e,n,o,t)=>{if(n&&typeof n==\\"object\\"||typeof n==\\"function\\")for(let i of g(n))!p.call(e,i)&&(o||i!==\\"default\\")&&r(e,i,{get:()=>n[i],enumerable:!(t=m(n,i))||t.enumerable});return e},b=(e,n)=>l(a(r(e!=null?h(u(e)):{},\\"default\\",!n&&e&&e.__esModule?{get:()=>e.default,enumerable:!0}:{value:e,enumerable:!0})),e),x=(e=>(n,o)=>e&&e.get(n)||(o=l(a({}),n,1),e&&e.set(n,o),o))(typeof WeakMap!=\\"undefined\\"?new WeakMap:0);var d=w((M,c)=>{c.exports=_jsx_runtime});var _={};v(_,{default:()=>j,frontmatter:()=>f});var s=b(d()),f={id:\\"see-conversation-between-chatbot-and-customer\\",title:\\"See Conversation between Chatbot and Customer\\",prev:\\"conversation-in-customer-side-without-bot\\",next:\\"using-private-notes-in-conversations\\",section:\\"Manage Your Conversation\\"};function C(e={}){let{wrapper:n}=e.components||{};return n?(0,s.jsx)(n,Object.assign({},e,{children:(0,s.jsx)(o,{})})):o();function o(){let t=Object.assign({ol:\\"ol\\",li:\\"li\\",strong:\\"strong\\"},e.components);return(0,s.jsxs)(t.ol,{children:[`\\n`,(0,s.jsxs)(t.li,{children:[\\"Go to the \\",(0,s.jsx)(t.strong,{children:\\"Conversation\\"}),\\" menu to see all your messages, both new and past messages\\"]}),`\\n`,(0,s.jsxs)(t.li,{children:[\\"In this page, you will see a dropdown which consists of \\",(0,s.jsx)(t.strong,{children:\\"Open, Resolved, Bot\\"}),`\\n`,(0,s.jsxs)(t.ol,{children:[`\\n`,(0,s.jsx)(t.li,{children:\\"Open means all new messages and not responded yet by agents\\"}),`\\n`,(0,s.jsx)(t.li,{children:\\"Resolved means all resolved messages from human agents\\"}),`\\n`,(0,s.jsx)(t.li,{children:\\"Bot means all conversations between chatbot and end-users\\"}),`\\n`]}),`\\n`]}),`\\n`,(0,s.jsxs)(t.li,{children:[\\"Choose \\",(0,s.jsx)(t.strong,{children:\\"Bot\\"}),\\" and see the on-going conversation\\"]}),`\\n`,(0,s.jsx)(t.li,{children:\\"You will see purple messages which indicate responses from chatbot and white which indicate incoming messages from the end-user\\"}),`\\n`]})}}var j=C;return x(_);})();\\n;return Component;"},"_id":"kata-omnichat/manage-your-conversation/see-conversation-between-chatbot-and-customer.mdx","_raw":{"sourceFilePath":"kata-omnichat/manage-your-conversation/see-conversation-between-chatbot-and-customer.mdx","sourceFileName":"see-conversation-between-chatbot-and-customer.mdx","sourceFileDir":"kata-omnichat/manage-your-conversation","contentType":"mdx","flattenedPath":"kata-omnichat/manage-your-conversation/see-conversation-between-chatbot-and-customer"},"type":"KataOmnichat","slug":["manage-your-conversation","see-conversation-between-chatbot-and-customer"],"excerpt":"\\n1. Go to the **Conversation** menu to see all your messages, both new and past messages\\n2"}');
;// CONCATENATED MODULE: ./.contentlayer/generated/KataOmnichat/kata-omnichat__manage-your-conversation__take-over-bot.mdx.json
const kata_omnichat_manage_your_conversation_take_over_bot_mdx_namespaceObject = JSON.parse('{"id":"take-over-bot","section":"Manage Your Conversation","title":"Take-over bot","prev":"resolve-conversation","next":"mute-conversation","body":{"raw":"\\nAs an admin or agent, you can see the conversation handled by the bot. In this case, if you see the bot not solving the problem, you can use the Take over the bot. You can see the bot here:\\n\\n1. Go to the **Conversation** menu to see all your messages, both new and past messages\\n2. Choose **Bot**\\n3. To take over the conversation, click the **Open** button which is placed next in the agents list dropdown\\n\\n<FigureImage\\n  caption={{ title: \'Figure 46\', description: `Take-over bot` }}\\n  src=\\"/assets/images/products/kata-omnichat/image46.webp\\"\\n  alt=\\"Kata Omnichat\\"\\n  naturalHeight={842}\\n  naturalWidth={1600}\\n/>\\n\\n4. Conversation with chatbot is paused and you can type to reply to the end-user. Your reply will be seen in the blue message.\\n\\n<FigureImage\\n  caption={{ title: \'Figure 47\', description: `Agent Take-over conversation` }}\\n  src=\\"/assets/images/products/kata-omnichat/image47.webp\\"\\n  alt=\\"Kata Omnichat\\"\\n  naturalHeight={842}\\n  naturalWidth={1600}\\n/>\\n","code":"var Component=(()=>{var d=Object.create;var i=Object.defineProperty;var u=Object.getOwnPropertyDescriptor;var g=Object.getOwnPropertyNames;var p=Object.getPrototypeOf,m=Object.prototype.hasOwnProperty;var s=e=>i(e,\\"__esModule\\",{value:!0});var b=(e,t)=>()=>(t||e((t={exports:{}}).exports,t),t.exports),v=(e,t)=>{for(var r in t)i(e,r,{get:t[r],enumerable:!0})},c=(e,t,r,o)=>{if(t&&typeof t==\\"object\\"||typeof t==\\"function\\")for(let a of g(t))!m.call(e,a)&&(r||a!==\\"default\\")&&i(e,a,{get:()=>t[a],enumerable:!(o=u(t,a))||o.enumerable});return e},x=(e,t)=>c(s(i(e!=null?d(p(e)):{},\\"default\\",!t&&e&&e.__esModule?{get:()=>e.default,enumerable:!0}:{value:e,enumerable:!0})),e),y=(e=>(t,r)=>e&&e.get(t)||(r=c(s({}),t,1),e&&e.set(t,r),r))(typeof WeakMap!=\\"undefined\\"?new WeakMap:0);var h=b((F,l)=>{l.exports=_jsx_runtime});var _={};v(_,{default:()=>w,frontmatter:()=>f});var n=x(h()),f={id:\\"take-over-bot\\",title:\\"Take-over bot\\",prev:\\"resolve-conversation\\",next:\\"mute-conversation\\",section:\\"Manage Your Conversation\\"};function k(e={}){let{wrapper:t}=e.components||{};return t?(0,n.jsx)(t,Object.assign({},e,{children:(0,n.jsx)(r,{})})):r();function r(){let o=Object.assign({p:\\"p\\",ol:\\"ol\\",li:\\"li\\",strong:\\"strong\\"},e.components),{FigureImage:a}=o;return a||j(\\"FigureImage\\",!0),(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(o.p,{children:\\"As an admin or agent, you can see the conversation handled by the bot. In this case, if you see the bot not solving the problem, you can use the Take over the bot. You can see the bot here:\\"}),`\\n`,(0,n.jsxs)(o.ol,{children:[`\\n`,(0,n.jsxs)(o.li,{children:[\\"Go to the \\",(0,n.jsx)(o.strong,{children:\\"Conversation\\"}),\\" menu to see all your messages, both new and past messages\\"]}),`\\n`,(0,n.jsxs)(o.li,{children:[\\"Choose \\",(0,n.jsx)(o.strong,{children:\\"Bot\\"})]}),`\\n`,(0,n.jsxs)(o.li,{children:[\\"To take over the conversation, click the \\",(0,n.jsx)(o.strong,{children:\\"Open\\"}),\\" button which is placed next in the agents list dropdown\\"]}),`\\n`]}),`\\n`,(0,n.jsx)(a,{caption:{title:\\"Figure 46\\",description:\\"Take-over bot\\"},src:\\"/assets/images/products/kata-omnichat/image46.webp\\",alt:\\"Kata Omnichat\\",naturalHeight:842,naturalWidth:1600}),`\\n`,(0,n.jsxs)(o.ol,{start:\\"4\\",children:[`\\n`,(0,n.jsx)(o.li,{children:\\"Conversation with chatbot is paused and you can type to reply to the end-user. Your reply will be seen in the blue message.\\"}),`\\n`]}),`\\n`,(0,n.jsx)(a,{caption:{title:\\"Figure 47\\",description:\\"Agent Take-over conversation\\"},src:\\"/assets/images/products/kata-omnichat/image47.webp\\",alt:\\"Kata Omnichat\\",naturalHeight:842,naturalWidth:1600})]})}}var w=k;function j(e,t){throw new Error(\\"Expected \\"+(t?\\"component\\":\\"object\\")+\\" `\\"+e+\\"` to be defined: you likely forgot to import, pass, or provide it.\\")}return y(_);})();\\n;return Component;"},"_id":"kata-omnichat/manage-your-conversation/take-over-bot.mdx","_raw":{"sourceFilePath":"kata-omnichat/manage-your-conversation/take-over-bot.mdx","sourceFileName":"take-over-bot.mdx","sourceFileDir":"kata-omnichat/manage-your-conversation","contentType":"mdx","flattenedPath":"kata-omnichat/manage-your-conversation/take-over-bot"},"type":"KataOmnichat","slug":["manage-your-conversation","take-over-bot"],"excerpt":"\\nAs an admin or agent, you can see the conversation handled by the bot. In this case, if you see the bot not solving the problem, you can use the Take over the bot"}');
;// CONCATENATED MODULE: ./.contentlayer/generated/KataOmnichat/kata-omnichat__manage-your-conversation__using-private-notes-in-conversations.mdx.json
const kata_omnichat_manage_your_conversation_using_private_notes_in_conversations_mdx_namespaceObject = JSON.parse('{"id":"using-private-notes-in-conversations","section":"Manage Your Conversation","title":"Using private notes in conversations","prev":"see-conversation-between-chatbot-and-customer","next":"manual-agent-assignment","body":{"raw":"\\nThe private note is the feature for the admin and agent to communicate with each other based on the conversation. The private note always sticks in the conversation box. Go to the conversation, then click the **Private Note** tap in the upper of the conversation box. Then write some notes about the conversation then add notes.\\n\\nPrivate notes will be included in the conversation but only admin and agent can see it, customers can’t see the notes.\\n\\n<FigureImage\\n  caption={{ title: \'Figure 41\', description: `Private Note` }}\\n  src=\\"/assets/images/products/kata-omnichat/image41.webp\\"\\n  alt=\\"Kata Omnichat\\"\\n  naturalHeight={1000}\\n  naturalWidth={1600}\\n/>\\n\\n<FigureImage\\n  caption={{ title: \'Figure 42\', description: `Private Note Result` }}\\n  src=\\"/assets/images/products/kata-omnichat/image42.webp\\"\\n  alt=\\"Kata Omnichat\\"\\n  naturalHeight={1000}\\n  naturalWidth={1600}\\n/>\\n","code":"var Component=(()=>{var m=Object.create;var r=Object.defineProperty;var p=Object.getOwnPropertyDescriptor;var d=Object.getOwnPropertyNames;var g=Object.getPrototypeOf,l=Object.prototype.hasOwnProperty;var s=t=>r(t,\\"__esModule\\",{value:!0});var v=(t,e)=>()=>(e||t((e={exports:{}}).exports,e),e.exports),b=(t,e)=>{for(var o in e)r(t,o,{get:e[o],enumerable:!0})},c=(t,e,o,i)=>{if(e&&typeof e==\\"object\\"||typeof e==\\"function\\")for(let a of d(e))!l.call(t,a)&&(o||a!==\\"default\\")&&r(t,a,{get:()=>e[a],enumerable:!(i=p(e,a))||i.enumerable});return t},x=(t,e)=>c(s(r(t!=null?m(g(t)):{},\\"default\\",!e&&t&&t.__esModule?{get:()=>t.default,enumerable:!0}:{value:t,enumerable:!0})),t),f=(t=>(e,o)=>t&&t.get(e)||(o=c(s({}),e,1),t&&t.set(e,o),o))(typeof WeakMap!=\\"undefined\\"?new WeakMap:0);var u=v((M,h)=>{h.exports=_jsx_runtime});var k={};b(k,{default:()=>_,frontmatter:()=>w});var n=x(u()),w={id:\\"using-private-notes-in-conversations\\",title:\\"Using private notes in conversations\\",prev:\\"see-conversation-between-chatbot-and-customer\\",next:\\"manual-agent-assignment\\",section:\\"Manage Your Conversation\\"};function j(t={}){let{wrapper:e}=t.components||{};return e?(0,n.jsx)(e,Object.assign({},t,{children:(0,n.jsx)(o,{})})):o();function o(){let i=Object.assign({p:\\"p\\",strong:\\"strong\\"},t.components),{FigureImage:a}=i;return a||F(\\"FigureImage\\",!0),(0,n.jsxs)(n.Fragment,{children:[(0,n.jsxs)(i.p,{children:[\\"The private note is the feature for the admin and agent to communicate with each other based on the conversation. The private note always sticks in the conversation box. Go to the conversation, then click the \\",(0,n.jsx)(i.strong,{children:\\"Private Note\\"}),\\" tap in the upper of the conversation box. Then write some notes about the conversation then add notes.\\"]}),`\\n`,(0,n.jsx)(i.p,{children:\\"Private notes will be included in the conversation but only admin and agent can see it, customers can\\\\u2019t see the notes.\\"}),`\\n`,(0,n.jsx)(a,{caption:{title:\\"Figure 41\\",description:\\"Private Note\\"},src:\\"/assets/images/products/kata-omnichat/image41.webp\\",alt:\\"Kata Omnichat\\",naturalHeight:1e3,naturalWidth:1600}),`\\n`,(0,n.jsx)(a,{caption:{title:\\"Figure 42\\",description:\\"Private Note Result\\"},src:\\"/assets/images/products/kata-omnichat/image42.webp\\",alt:\\"Kata Omnichat\\",naturalHeight:1e3,naturalWidth:1600})]})}}var _=j;function F(t,e){throw new Error(\\"Expected \\"+(e?\\"component\\":\\"object\\")+\\" `\\"+t+\\"` to be defined: you likely forgot to import, pass, or provide it.\\")}return f(k);})();\\n;return Component;"},"_id":"kata-omnichat/manage-your-conversation/using-private-notes-in-conversations.mdx","_raw":{"sourceFilePath":"kata-omnichat/manage-your-conversation/using-private-notes-in-conversations.mdx","sourceFileName":"using-private-notes-in-conversations.mdx","sourceFileDir":"kata-omnichat/manage-your-conversation","contentType":"mdx","flattenedPath":"kata-omnichat/manage-your-conversation/using-private-notes-in-conversations"},"type":"KataOmnichat","slug":["manage-your-conversation","using-private-notes-in-conversations"],"excerpt":"\\nThe private note is the feature for the admin and agent to communicate with each other based on the conversation. The private note always sticks in the conversation box"}');
;// CONCATENATED MODULE: ./.contentlayer/generated/KataOmnichat/kata-omnichat__manage-your-conversation__whatsapp-business-conversation-in-agent-side.mdx.json
const kata_omnichat_manage_your_conversation_whatsapp_business_conversation_in_agent_side_mdx_namespaceObject = JSON.parse('{"id":"whatsapp-business-conversation-in-agent-side","section":"Manage Your Conversation","title":"Whatsapp Business API conversation in agent-side (with or without bot)","prev":"whatsapp-business-conversation-using-bot","next":"conversation-in-customer-side-using-bot","body":{"raw":"\\n1. Customers started to chat to WABA number\\n2. Customers can send to and receive messages from agents using these types of messages: text, image, video, and document\\n3. Agents can directly reply to customers using text, image, video and document. Or, takeover the conversation first from agent bot before replying it\\n\\n<FigureImage\\n  caption={{ title: \'Figure 39\', description: `Whatsapp Business API conversation in agent-side` }}\\n  src=\\"/assets/images/products/kata-omnichat/image39.webp\\"\\n  alt=\\"Kata Omnichat\\"\\n  naturalHeight={842}\\n  naturalWidth={1600}\\n/>\\n","code":"var Component=(()=>{var m=Object.create;var r=Object.defineProperty;var g=Object.getOwnPropertyDescriptor;var l=Object.getOwnPropertyNames;var p=Object.getPrototypeOf,h=Object.prototype.hasOwnProperty;var a=e=>r(e,\\"__esModule\\",{value:!0});var f=(e,t)=>()=>(t||e((t={exports:{}}).exports,t),t.exports),x=(e,t)=>{for(var s in t)r(e,s,{get:t[s],enumerable:!0})},c=(e,t,s,i)=>{if(t&&typeof t==\\"object\\"||typeof t==\\"function\\")for(let o of l(t))!h.call(e,o)&&(s||o!==\\"default\\")&&r(e,o,{get:()=>t[o],enumerable:!(i=g(t,o))||i.enumerable});return e},b=(e,t)=>c(a(r(e!=null?m(p(e)):{},\\"default\\",!t&&e&&e.__esModule?{get:()=>e.default,enumerable:!0}:{value:e,enumerable:!0})),e),v=(e=>(t,s)=>e&&e.get(t)||(s=c(a({}),t,1),e&&e.set(t,s),s))(typeof WeakMap!=\\"undefined\\"?new WeakMap:0);var d=f((F,u)=>{u.exports=_jsx_runtime});var A={};x(A,{default:()=>_,frontmatter:()=>j});var n=b(d()),j={id:\\"whatsapp-business-conversation-in-agent-side\\",title:\\"Whatsapp Business API conversation in agent-side (with or without bot)\\",prev:\\"whatsapp-business-conversation-using-bot\\",next:\\"conversation-in-customer-side-using-bot\\",section:\\"Manage Your Conversation\\"};function w(e={}){let{wrapper:t}=e.components||{};return t?(0,n.jsx)(t,Object.assign({},e,{children:(0,n.jsx)(s,{})})):s();function s(){let i=Object.assign({ol:\\"ol\\",li:\\"li\\"},e.components),{FigureImage:o}=i;return o||y(\\"FigureImage\\",!0),(0,n.jsxs)(n.Fragment,{children:[(0,n.jsxs)(i.ol,{children:[`\\n`,(0,n.jsx)(i.li,{children:\\"Customers started to chat to WABA number\\"}),`\\n`,(0,n.jsx)(i.li,{children:\\"Customers can send to and receive messages from agents using these types of messages: text, image, video, and document\\"}),`\\n`,(0,n.jsx)(i.li,{children:\\"Agents can directly reply to customers using text, image, video and document. Or, takeover the conversation first from agent bot before replying it\\"}),`\\n`]}),`\\n`,(0,n.jsx)(o,{caption:{title:\\"Figure 39\\",description:\\"Whatsapp Business API conversation in agent-side\\"},src:\\"/assets/images/products/kata-omnichat/image39.webp\\",alt:\\"Kata Omnichat\\",naturalHeight:842,naturalWidth:1600})]})}}var _=w;function y(e,t){throw new Error(\\"Expected \\"+(t?\\"component\\":\\"object\\")+\\" `\\"+e+\\"` to be defined: you likely forgot to import, pass, or provide it.\\")}return v(A);})();\\n;return Component;"},"_id":"kata-omnichat/manage-your-conversation/whatsapp-business-conversation-in-agent-side.mdx","_raw":{"sourceFilePath":"kata-omnichat/manage-your-conversation/whatsapp-business-conversation-in-agent-side.mdx","sourceFileName":"whatsapp-business-conversation-in-agent-side.mdx","sourceFileDir":"kata-omnichat/manage-your-conversation","contentType":"mdx","flattenedPath":"kata-omnichat/manage-your-conversation/whatsapp-business-conversation-in-agent-side"},"type":"KataOmnichat","slug":["manage-your-conversation","whatsapp-business-conversation-in-agent-side"],"excerpt":"\\n1. Customers started to chat to WABA number\\n2"}');
;// CONCATENATED MODULE: ./.contentlayer/generated/KataOmnichat/kata-omnichat__manage-your-conversation__whatsapp-business-conversation-using-bot.mdx.json
const kata_omnichat_manage_your_conversation_whatsapp_business_conversation_using_bot_mdx_namespaceObject = JSON.parse('{"id":"whatsapp-business-conversation-using-bot","section":"Manage Your Conversation","title":"Whatsapp Business conversation using a bot","prev":"agent-view-conversation","next":"whatsapp-business-conversation-in-agent-side","body":{"raw":"\\nFor the WABA API channel, we can use the bot as our agent. Learn about how the bot can start the conversation:\\n\\n1. The customer started to chat to users’ WABA number\\n2. During chatbot and customer conversation, customers can request handover to agents or agents can take over the conversation if users add an “agent bot” in the inbox. Learn more about [setup agent bot in Omnichat](/kata-omnichat/configure-your-agent-chatbot/setup-agent-bot-in-kata-omnichat)\\n\\n<FigureImage\\n  caption={{ title: \'Figure 38\', description: `Conversation with bot` }}\\n  src=\\"/assets/images/products/kata-omnichat/image38.webp\\"\\n  alt=\\"Kata Omnichat\\"\\n  naturalHeight={1250}\\n  naturalWidth={1999}\\n/>\\n\\n3. Customers can send and receive messages until agents resolve the conversation (if they choose to be handover) and the conversation will be handed off again to the agent bot or end the conversation with a chatbot\\n","code":"var Component=(()=>{var d=Object.create;var s=Object.defineProperty;var l=Object.getOwnPropertyDescriptor;var g=Object.getOwnPropertyNames;var m=Object.getPrototypeOf,p=Object.prototype.hasOwnProperty;var i=t=>s(t,\\"__esModule\\",{value:!0});var b=(t,e)=>()=>(e||t((e={exports:{}}).exports,e),e.exports),v=(t,e)=>{for(var o in e)s(t,o,{get:e[o],enumerable:!0})},c=(t,e,o,a)=>{if(e&&typeof e==\\"object\\"||typeof e==\\"function\\")for(let r of g(e))!p.call(t,r)&&(o||r!==\\"default\\")&&s(t,r,{get:()=>e[r],enumerable:!(a=l(e,r))||a.enumerable});return t},f=(t,e)=>c(i(s(t!=null?d(m(t)):{},\\"default\\",!e&&t&&t.__esModule?{get:()=>t.default,enumerable:!0}:{value:t,enumerable:!0})),t),x=(t=>(e,o)=>t&&t.get(e)||(o=c(i({}),e,1),t&&t.set(e,o),o))(typeof WeakMap!=\\"undefined\\"?new WeakMap:0);var u=b((A,h)=>{h.exports=_jsx_runtime});var k={};v(k,{default:()=>_,frontmatter:()=>w});var n=f(u()),w={id:\\"whatsapp-business-conversation-using-bot\\",title:\\"Whatsapp Business conversation using a bot\\",prev:\\"agent-view-conversation\\",next:\\"whatsapp-business-conversation-in-agent-side\\",section:\\"Manage Your Conversation\\"};function j(t={}){let{wrapper:e}=t.components||{};return e?(0,n.jsx)(e,Object.assign({},t,{children:(0,n.jsx)(o,{})})):o();function o(){let a=Object.assign({p:\\"p\\",ol:\\"ol\\",li:\\"li\\",a:\\"a\\"},t.components),{FigureImage:r}=a;return r||F(\\"FigureImage\\",!0),(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(a.p,{children:\\"For the WABA API channel, we can use the bot as our agent. Learn about how the bot can start the conversation:\\"}),`\\n`,(0,n.jsxs)(a.ol,{children:[`\\n`,(0,n.jsx)(a.li,{children:\\"The customer started to chat to users\\\\u2019 WABA number\\"}),`\\n`,(0,n.jsxs)(a.li,{children:[\\"During chatbot and customer conversation, customers can request handover to agents or agents can take over the conversation if users add an \\\\u201Cagent bot\\\\u201D in the inbox. Learn more about \\",(0,n.jsx)(a.a,{href:\\"/kata-omnichat/configure-your-agent-chatbot/setup-agent-bot-in-kata-omnichat\\",children:\\"setup agent bot in Omnichat\\"})]}),`\\n`]}),`\\n`,(0,n.jsx)(r,{caption:{title:\\"Figure 38\\",description:\\"Conversation with bot\\"},src:\\"/assets/images/products/kata-omnichat/image38.webp\\",alt:\\"Kata Omnichat\\",naturalHeight:1250,naturalWidth:1999}),`\\n`,(0,n.jsxs)(a.ol,{start:\\"3\\",children:[`\\n`,(0,n.jsx)(a.li,{children:\\"Customers can send and receive messages until agents resolve the conversation (if they choose to be handover) and the conversation will be handed off again to the agent bot or end the conversation with a chatbot\\"}),`\\n`]})]})}}var _=j;function F(t,e){throw new Error(\\"Expected \\"+(e?\\"component\\":\\"object\\")+\\" `\\"+t+\\"` to be defined: you likely forgot to import, pass, or provide it.\\")}return x(k);})();\\n;return Component;"},"_id":"kata-omnichat/manage-your-conversation/whatsapp-business-conversation-using-bot.mdx","_raw":{"sourceFilePath":"kata-omnichat/manage-your-conversation/whatsapp-business-conversation-using-bot.mdx","sourceFileName":"whatsapp-business-conversation-using-bot.mdx","sourceFileDir":"kata-omnichat/manage-your-conversation","contentType":"mdx","flattenedPath":"kata-omnichat/manage-your-conversation/whatsapp-business-conversation-using-bot"},"type":"KataOmnichat","slug":["manage-your-conversation","whatsapp-business-conversation-using-bot"],"excerpt":"\\nFor the WABA API channel, we can use the bot as our agent. Learn about how the bot can start the conversation:\\n\\n1"}');
;// CONCATENATED MODULE: ./.contentlayer/generated/KataOmnichat/kata-omnichat__release-notes__version.mdx.json
const kata_omnichat_release_notes_version_mdx_namespaceObject = JSON.parse('{"id":"release-notes-version","section":"Release Notes","title":"Version","body":{"raw":"\\nThe latest news, updates, and changes on Kata Omnichat\\n\\n## 2.5.5\\n\\n<ImageWrapper>\\n  <NextImage\\n    src=\\"/assets/images/products/kata-omnichat/release-notes/kata-omnichat-illustration.webp\\"\\n    alt=\\"Kata-Omnichat Illustration\\"\\n    naturalHeight={464}\\n    naturalWidth={1440}\\n  />\\n</ImageWrapper>\\n\\n### What’s New ⭐️\\n\\nAre you a business owner? Do you have many agents for some messaging platforms to handle customers’ inquiries? Or even, do you sometimes need a bot for your Instagram Business Messaging and WhatsApp Business API to help your agents with some repeated questions? 🤔\\n\\nThis new product is definitely suitable for you! 🎉\\n\\nWe’re building Kata Omnichat 2.0, so it will be the replacement for the old one. This centralized agent dashboard will help your agents respond to any customers’ inquiries rapidly without switching from one messaging app to another messaging app. Also, if needed, an agent bot will be a savior to collaborate with your agents. Learn more about [Agent Bot](/kata-omnichat/configure-your-agent-chatbot/setup-agent-bot-in-kata-omnichat).\\n\\n### What’s been fixed 🛠\\n\\nChanging the whole user experience to make it seamless and easier for you and your agents and having two most popular messaging platforms; Instagram Messaging and WhatsApp Business. This product will be very flexible for you, you don’t need to have a bot at the first time, but you can add it anytime you need it.\\n\\nWe’re updating some bugs in Kata Omnichat 2.0:\\n\\n- Fixed users can’t download reports to CSV\\n- Fixed users can’t see/know customer’s WA number in Contacts\\n- Fixed users can’t see previous messages in WA\\n- Fixed users can’t get email verification\\n","code":"var Component=(()=>{var m=Object.create;var o=Object.defineProperty;var p=Object.getOwnPropertyDescriptor;var g=Object.getOwnPropertyNames;var f=Object.getPrototypeOf,b=Object.prototype.hasOwnProperty;var l=n=>o(n,\\"__esModule\\",{value:!0});var w=(n,a)=>()=>(a||n((a={exports:{}}).exports,a),a.exports),y=(n,a)=>{for(var s in a)o(n,s,{get:a[s],enumerable:!0})},c=(n,a,s,t)=>{if(a&&typeof a==\\"object\\"||typeof a==\\"function\\")for(let i of g(a))!b.call(n,i)&&(s||i!==\\"default\\")&&o(n,i,{get:()=>a[i],enumerable:!(t=p(a,i))||t.enumerable});return n},x=(n,a)=>c(l(o(n!=null?m(f(n)):{},\\"default\\",!a&&n&&n.__esModule?{get:()=>n.default,enumerable:!0}:{value:n,enumerable:!0})),n),W=(n=>(a,s)=>n&&n.get(a)||(s=c(l({}),a,1),n&&n.set(a,s),s))(typeof WeakMap!=\\"undefined\\"?new WeakMap:0);var d=w((I,h)=>{h.exports=_jsx_runtime});var j={};y(j,{default:()=>N,frontmatter:()=>k});var e=x(d()),k={id:\\"release-notes-version\\",title:\\"Version\\",section:\\"Release Notes\\"};function v(n={}){let{wrapper:a}=n.components||{};return a?(0,e.jsx)(a,Object.assign({},n,{children:(0,e.jsx)(s,{})})):s();function s(){let t=Object.assign({p:\\"p\\",h2:\\"h2\\",a:\\"a\\",span:\\"span\\",h3:\\"h3\\",ul:\\"ul\\",li:\\"li\\"},n.components),{ImageWrapper:i,NextImage:r}=t;return i||u(\\"ImageWrapper\\",!0),r||u(\\"NextImage\\",!0),(0,e.jsxs)(e.Fragment,{children:[(0,e.jsx)(t.p,{children:\\"The latest news, updates, and changes on Kata Omnichat\\"}),`\\n`,(0,e.jsxs)(t.h2,{id:\\"255\\",children:[(0,e.jsx)(t.a,{className:\\"anchor\\",href:\\"#255\\",children:(0,e.jsx)(t.span,{className:\\"icon icon-link\\"})}),\\"2.5.5\\"]}),`\\n`,(0,e.jsx)(i,{children:(0,e.jsx)(r,{src:\\"/assets/images/products/kata-omnichat/release-notes/kata-omnichat-illustration.webp\\",alt:\\"Kata-Omnichat Illustration\\",naturalHeight:464,naturalWidth:1440})}),`\\n`,(0,e.jsxs)(t.h3,{id:\\"whats-new-\\\\uFE0F\\",children:[(0,e.jsx)(t.a,{className:\\"anchor\\",href:\\"#whats-new-\\\\uFE0F\\",children:(0,e.jsx)(t.span,{className:\\"icon icon-link\\"})}),\\"What\\\\u2019s New \\\\u2B50\\\\uFE0F\\"]}),`\\n`,(0,e.jsx)(t.p,{children:\\"Are you a business owner? Do you have many agents for some messaging platforms to handle customers\\\\u2019 inquiries? Or even, do you sometimes need a bot for your Instagram Business Messaging and WhatsApp Business API to help your agents with some repeated questions? \\\\u{1F914}\\"}),`\\n`,(0,e.jsx)(t.p,{children:\\"This new product is definitely suitable for you! \\\\u{1F389}\\"}),`\\n`,(0,e.jsxs)(t.p,{children:[\\"We\\\\u2019re building Kata Omnichat 2.0, so it will be the replacement for the old one. This centralized agent dashboard will help your agents respond to any customers\\\\u2019 inquiries rapidly without switching from one messaging app to another messaging app. Also, if needed, an agent bot will be a savior to collaborate with your agents. Learn more about \\",(0,e.jsx)(t.a,{href:\\"/kata-omnichat/configure-your-agent-chatbot/setup-agent-bot-in-kata-omnichat\\",children:\\"Agent Bot\\"}),\\".\\"]}),`\\n`,(0,e.jsxs)(t.h3,{id:\\"whats-been-fixed-\\",children:[(0,e.jsx)(t.a,{className:\\"anchor\\",href:\\"#whats-been-fixed-\\",children:(0,e.jsx)(t.span,{className:\\"icon icon-link\\"})}),\\"What\\\\u2019s been fixed \\\\u{1F6E0}\\"]}),`\\n`,(0,e.jsx)(t.p,{children:\\"Changing the whole user experience to make it seamless and easier for you and your agents and having two most popular messaging platforms; Instagram Messaging and WhatsApp Business. This product will be very flexible for you, you don\\\\u2019t need to have a bot at the first time, but you can add it anytime you need it.\\"}),`\\n`,(0,e.jsx)(t.p,{children:\\"We\\\\u2019re updating some bugs in Kata Omnichat 2.0:\\"}),`\\n`,(0,e.jsxs)(t.ul,{children:[`\\n`,(0,e.jsx)(t.li,{children:\\"Fixed users can\\\\u2019t download reports to CSV\\"}),`\\n`,(0,e.jsx)(t.li,{children:\\"Fixed users can\\\\u2019t see/know customer\\\\u2019s WA number in Contacts\\"}),`\\n`,(0,e.jsx)(t.li,{children:\\"Fixed users can\\\\u2019t see previous messages in WA\\"}),`\\n`,(0,e.jsx)(t.li,{children:\\"Fixed users can\\\\u2019t get email verification\\"}),`\\n`]})]})}}var N=v;function u(n,a){throw new Error(\\"Expected \\"+(a?\\"component\\":\\"object\\")+\\" `\\"+n+\\"` to be defined: you likely forgot to import, pass, or provide it.\\")}return W(j);})();\\n;return Component;"},"_id":"kata-omnichat/release-notes/version.mdx","_raw":{"sourceFilePath":"kata-omnichat/release-notes/version.mdx","sourceFileName":"version.mdx","sourceFileDir":"kata-omnichat/release-notes","contentType":"mdx","flattenedPath":"kata-omnichat/release-notes/version"},"type":"KataOmnichat","slug":["release-notes","version"],"excerpt":"\\nThe latest news, updates, and changes on Kata Omnichat\\n\\n## 2.5"}');
;// CONCATENATED MODULE: ./.contentlayer/generated/KataOmnichat/kata-omnichat__reports__download-report.mdx.json
const kata_omnichat_reports_download_report_mdx_namespaceObject = JSON.parse('{"id":"download-report","section":"Reports","title":"Download report","prev":"view-report","next":"release-notes-version","body":{"raw":"\\nOn this page, you can download the agent report by clicking the right upper corner of the page and you will see the report of the metrics group by the agents, so you can have agent productivity data.\\n\\n<FigureImage\\n  caption={{ title: \'Figure 70\', description: `Download Report` }}\\n  src=\\"/assets/images/products/kata-omnichat/image70.webp\\"\\n  alt=\\"Kata Omnichat\\"\\n  naturalHeight={1000}\\n  naturalWidth={1600}\\n/>\\n","code":"var Component=(()=>{var g=Object.create;var i=Object.defineProperty;var u=Object.getOwnPropertyDescriptor;var l=Object.getOwnPropertyNames;var m=Object.getPrototypeOf,h=Object.prototype.hasOwnProperty;var s=e=>i(e,\\"__esModule\\",{value:!0});var f=(e,t)=>()=>(t||e((t={exports:{}}).exports,t),t.exports),x=(e,t)=>{for(var o in t)i(e,o,{get:t[o],enumerable:!0})},c=(e,t,o,a)=>{if(t&&typeof t==\\"object\\"||typeof t==\\"function\\")for(let r of l(t))!h.call(e,r)&&(o||r!==\\"default\\")&&i(e,r,{get:()=>t[r],enumerable:!(a=u(t,r))||a.enumerable});return e},w=(e,t)=>c(s(i(e!=null?g(m(e)):{},\\"default\\",!t&&e&&e.__esModule?{get:()=>e.default,enumerable:!0}:{value:e,enumerable:!0})),e),y=(e=>(t,o)=>e&&e.get(t)||(o=c(s({}),t,1),e&&e.set(t,o),o))(typeof WeakMap!=\\"undefined\\"?new WeakMap:0);var d=f((M,p)=>{p.exports=_jsx_runtime});var F={};x(F,{default:()=>b,frontmatter:()=>j});var n=w(d()),j={id:\\"download-report\\",title:\\"Download report\\",prev:\\"view-report\\",next:\\"release-notes-version\\",section:\\"Reports\\"};function _(e={}){let{wrapper:t}=e.components||{};return t?(0,n.jsx)(t,Object.assign({},e,{children:(0,n.jsx)(o,{})})):o();function o(){let a=Object.assign({p:\\"p\\"},e.components),{FigureImage:r}=a;return r||v(\\"FigureImage\\",!0),(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(a.p,{children:\\"On this page, you can download the agent report by clicking the right upper corner of the page and you will see the report of the metrics group by the agents, so you can have agent productivity data.\\"}),`\\n`,(0,n.jsx)(r,{caption:{title:\\"Figure 70\\",description:\\"Download Report\\"},src:\\"/assets/images/products/kata-omnichat/image70.webp\\",alt:\\"Kata Omnichat\\",naturalHeight:1e3,naturalWidth:1600})]})}}var b=_;function v(e,t){throw new Error(\\"Expected \\"+(t?\\"component\\":\\"object\\")+\\" `\\"+e+\\"` to be defined: you likely forgot to import, pass, or provide it.\\")}return y(F);})();\\n;return Component;"},"_id":"kata-omnichat/reports/download-report.mdx","_raw":{"sourceFilePath":"kata-omnichat/reports/download-report.mdx","sourceFileName":"download-report.mdx","sourceFileDir":"kata-omnichat/reports","contentType":"mdx","flattenedPath":"kata-omnichat/reports/download-report"},"type":"KataOmnichat","slug":["reports","download-report"],"excerpt":"\\nOn this page, you can download the agent report by clicking the right upper corner of the page and you will see the report of the metrics group by the agents, so you can have agent productivity data.\\n\\n"}');
;// CONCATENATED MODULE: ./.contentlayer/generated/KataOmnichat/kata-omnichat__reports__view-report.mdx.json
const kata_omnichat_reports_view_report_mdx_namespaceObject = JSON.parse('{"id":"view-report","section":"Reports","hiddenTitle":"View Report","prev":"change-your-status-how-to-use","next":"download-report","body":{"raw":"\\nThe report shows the activity of your conversation from all channels or inboxes. The report can be accessed only by the admin. In the report, you can view the report dashboard and download agent reports.\\n\\n## View report\\n\\nTo view the report, you need to click reports on the sidebar, then you will be directed to the report. On the reports dashboard, you can see the metrics which are conversations count, incoming message count, outgoing message count, first response time, resolution time, and resolution count. You can also filter the report by period.\\n\\n<FigureImage\\n  caption={{ title: \'Figure 69\', description: `Report View` }}\\n  src=\\"/assets/images/products/kata-omnichat/image69.webp\\"\\n  alt=\\"Kata Omnichat\\"\\n  naturalHeight={1000}\\n  naturalWidth={1600}\\n/>\\n\\nPlease find the related metrics of the reports.\\n\\n<Table>\\n  <TableHead>\\n    <TableHeadRow>\\n      <TableHeadCell>Field Name</TableHeadCell>\\n      <TableHeadCell>Description</TableHeadCell>\\n    </TableHeadRow>\\n  </TableHead>\\n  <TableBody>\\n    <TableBodyRow>\\n      <TableBodyCell>conversations count</TableBodyCell>\\n      <TableBodyCell>\\n        How many conversations happened in the selected period including both incoming or outgoing message\\n      </TableBodyCell>\\n    </TableBodyRow>\\n    <TableBodyRow>\\n      <TableBodyCell>incoming message count</TableBodyCell>\\n      <TableBodyCell>How many messages coming from customer to business account in the selected period </TableBodyCell>\\n    </TableBodyRow>\\n    <TableBodyRow>\\n      <TableBodyCell>Outgoing message count</TableBodyCell>\\n      <TableBodyCell>How many messages came from business account to customer in the selected period </TableBodyCell>\\n    </TableBodyRow>\\n    <TableBodyRow>\\n      <TableBodyCell>First response time</TableBodyCell>\\n      <TableBodyCell>The average conversation time is being responded to for the first time.</TableBodyCell>\\n    </TableBodyRow>\\n    <TableBodyRow>\\n      <TableBodyCell>Resolution time</TableBodyCell>\\n      <TableBodyCell>The average time of conversation is from being open to resolved by admin or agent</TableBodyCell>\\n    </TableBodyRow>\\n    <TableBodyRow>\\n      <TableBodyCell>Resolution count</TableBodyCell>\\n      <TableBodyCell>The number of conversation is from being open to resolved by admin or agent</TableBodyCell>\\n    </TableBodyRow>\\n  </TableBody>\\n</Table>\\n","code":"var Component=(()=>{var y=Object.create;var d=Object.defineProperty;var T=Object.getOwnPropertyDescriptor;var v=Object.getOwnPropertyNames;var x=Object.getPrototypeOf,H=Object.prototype.hasOwnProperty;var g=n=>d(n,\\"__esModule\\",{value:!0});var R=(n,o)=>()=>(o||n((o={exports:{}}).exports,o),o.exports),j=(n,o)=>{for(var r in o)d(n,r,{get:o[r],enumerable:!0})},b=(n,o,r,i)=>{if(o&&typeof o==\\"object\\"||typeof o==\\"function\\")for(let a of v(o))!H.call(n,a)&&(r||a!==\\"default\\")&&d(n,a,{get:()=>o[a],enumerable:!(i=T(o,a))||i.enumerable});return n},_=(n,o)=>b(g(d(n!=null?y(x(n)):{},\\"default\\",!o&&n&&n.__esModule?{get:()=>n.default,enumerable:!0}:{value:n,enumerable:!0})),n),F=(n=>(o,r)=>n&&n.get(o)||(r=b(g({}),o,1),n&&n.set(o,r),r))(typeof WeakMap!=\\"undefined\\"?new WeakMap:0);var w=R((D,f)=>{f.exports=_jsx_runtime});var k={};j(k,{default:()=>O,frontmatter:()=>B});var e=_(w()),B={id:\\"view-report\\",prev:\\"change-your-status-how-to-use\\",next:\\"download-report\\",section:\\"Reports\\",hiddenTitle:\\"View Report\\"};function C(n={}){let{wrapper:o}=n.components||{};return o?(0,e.jsx)(o,Object.assign({},n,{children:(0,e.jsx)(r,{})})):r();function r(){let i=Object.assign({p:\\"p\\",h2:\\"h2\\",a:\\"a\\",span:\\"span\\"},n.components),{FigureImage:a,Table:h,TableHead:m,TableHeadRow:p,TableHeadCell:l,TableBody:u,TableBodyRow:c,TableBodyCell:t}=i;return a||s(\\"FigureImage\\",!0),h||s(\\"Table\\",!0),u||s(\\"TableBody\\",!0),t||s(\\"TableBodyCell\\",!0),c||s(\\"TableBodyRow\\",!0),m||s(\\"TableHead\\",!0),l||s(\\"TableHeadCell\\",!0),p||s(\\"TableHeadRow\\",!0),(0,e.jsxs)(e.Fragment,{children:[(0,e.jsx)(i.p,{children:\\"The report shows the activity of your conversation from all channels or inboxes. The report can be accessed only by the admin. In the report, you can view the report dashboard and download agent reports.\\"}),`\\n`,(0,e.jsxs)(i.h2,{id:\\"view-report\\",children:[(0,e.jsx)(i.a,{className:\\"anchor\\",href:\\"#view-report\\",children:(0,e.jsx)(i.span,{className:\\"icon icon-link\\"})}),\\"View report\\"]}),`\\n`,(0,e.jsx)(i.p,{children:\\"To view the report, you need to click reports on the sidebar, then you will be directed to the report. On the reports dashboard, you can see the metrics which are conversations count, incoming message count, outgoing message count, first response time, resolution time, and resolution count. You can also filter the report by period.\\"}),`\\n`,(0,e.jsx)(a,{caption:{title:\\"Figure 69\\",description:\\"Report View\\"},src:\\"/assets/images/products/kata-omnichat/image69.webp\\",alt:\\"Kata Omnichat\\",naturalHeight:1e3,naturalWidth:1600}),`\\n`,(0,e.jsx)(i.p,{children:\\"Please find the related metrics of the reports.\\"}),`\\n`,(0,e.jsxs)(h,{children:[(0,e.jsx)(m,{children:(0,e.jsxs)(p,{children:[(0,e.jsx)(l,{children:\\"Field Name\\"}),`\\n`,(0,e.jsx)(l,{children:\\"Description\\"})]})}),(0,e.jsxs)(u,{children:[(0,e.jsxs)(c,{children:[(0,e.jsx)(t,{children:\\"conversations count\\"}),(0,e.jsx)(t,{children:(0,e.jsx)(i.p,{children:\\"How many conversations happened in the selected period including both incoming or outgoing message\\"})})]}),(0,e.jsxs)(c,{children:[(0,e.jsx)(t,{children:\\"incoming message count\\"}),`\\n`,(0,e.jsx)(t,{children:\\"How many messages coming from customer to business account in the selected period \\"})]}),(0,e.jsxs)(c,{children:[(0,e.jsx)(t,{children:\\"Outgoing message count\\"}),`\\n`,(0,e.jsx)(t,{children:\\"How many messages came from business account to customer in the selected period \\"})]}),(0,e.jsxs)(c,{children:[(0,e.jsx)(t,{children:\\"First response time\\"}),`\\n`,(0,e.jsx)(t,{children:\\"The average conversation time is being responded to for the first time.\\"})]}),(0,e.jsxs)(c,{children:[(0,e.jsx)(t,{children:\\"Resolution time\\"}),`\\n`,(0,e.jsx)(t,{children:\\"The average time of conversation is from being open to resolved by admin or agent\\"})]}),(0,e.jsxs)(c,{children:[(0,e.jsx)(t,{children:\\"Resolution count\\"}),`\\n`,(0,e.jsx)(t,{children:\\"The number of conversation is from being open to resolved by admin or agent\\"})]})]})]})]})}}var O=C;function s(n,o){throw new Error(\\"Expected \\"+(o?\\"component\\":\\"object\\")+\\" `\\"+n+\\"` to be defined: you likely forgot to import, pass, or provide it.\\")}return F(k);})();\\n;return Component;"},"_id":"kata-omnichat/reports/view-report.mdx","_raw":{"sourceFilePath":"kata-omnichat/reports/view-report.mdx","sourceFileName":"view-report.mdx","sourceFileDir":"kata-omnichat/reports","contentType":"mdx","flattenedPath":"kata-omnichat/reports/view-report"},"type":"KataOmnichat","slug":["reports","view-report"],"excerpt":"\\nThe report shows the activity of your conversation from all channels or inboxes. The report can be accessed only by the admin"}');
;// CONCATENATED MODULE: ./.contentlayer/generated/KataOmnichat/kata-omnichat__setup-email-notification__how-to-use.mdx.json
const kata_omnichat_setup_email_notification_how_to_use_mdx_namespaceObject = JSON.parse('{"id":"email-notification-how-to-use","section":"Setup Email Notification","title":"How to use","prev":"email-notification-introduction","next":"access-token-introduction","body":{"raw":"\\nYou can follow these steps if you want to update your email notifications.\\n\\n1. Login account\\n2. Click on **_3 kebab menu icons_** in the left under the corner of your dashboard, besides your name\\n3. Click profile setting\\n4. You will be directed to the page where you can set up your email notification.\\n\\n<FigureImage\\n  caption={{ title: \'Figure 64\', description: `Profile Settings` }}\\n  src=\\"/assets/images/products/kata-omnichat/image64.webp\\"\\n  alt=\\"Kata Omnichat\\"\\n  naturalHeight={1250}\\n  naturalWidth={1999}\\n/>\\n\\n5. Tick the conversation you are interested in. By ticking the preference means that you agree to send us the email notification by the case. There 4 preferences of the email notification you want to set up\\n\\n   1. When a new conversation is created\\n   2. When a conversation is assigned to me\\n   3. When you’re mentioned in conversation\\n   4. When a new message is created in an assigned conversation\\n\\n<FigureImage\\n  caption={{ title: \'Figure 65\', description: `Email Notification Setting` }}\\n  src=\\"/assets/images/products/kata-omnichat/image65.webp\\"\\n  alt=\\"Kata Omnichat\\"\\n  naturalHeight={1000}\\n  naturalWidth={1600}\\n/>\\n","code":"var Component=(()=>{var h=Object.create;var r=Object.defineProperty;var u=Object.getOwnPropertyDescriptor;var m=Object.getOwnPropertyNames;var p=Object.getPrototypeOf,g=Object.prototype.hasOwnProperty;var c=e=>r(e,\\"__esModule\\",{value:!0});var f=(e,n)=>()=>(n||e((n={exports:{}}).exports,n),n.exports),y=(e,n)=>{for(var o in n)r(e,o,{get:n[o],enumerable:!0})},s=(e,n,o,i)=>{if(n&&typeof n==\\"object\\"||typeof n==\\"function\\")for(let a of m(n))!g.call(e,a)&&(o||a!==\\"default\\")&&r(e,a,{get:()=>n[a],enumerable:!(i=u(n,a))||i.enumerable});return e},w=(e,n)=>s(c(r(e!=null?h(p(e)):{},\\"default\\",!n&&e&&e.__esModule?{get:()=>e.default,enumerable:!0}:{value:e,enumerable:!0})),e),b=(e=>(n,o)=>e&&e.get(n)||(o=s(c({}),n,1),e&&e.set(n,o),o))(typeof WeakMap!=\\"undefined\\"?new WeakMap:0);var d=f((W,l)=>{l.exports=_jsx_runtime});var v={};y(v,{default:()=>j,frontmatter:()=>x});var t=w(d()),x={id:\\"email-notification-how-to-use\\",title:\\"How to use\\",prev:\\"email-notification-introduction\\",next:\\"access-token-introduction\\",section:\\"Setup Email Notification\\"};function k(e={}){let{wrapper:n}=e.components||{};return n?(0,t.jsx)(n,Object.assign({},e,{children:(0,t.jsx)(o,{})})):o();function o(){let i=Object.assign({p:\\"p\\",ol:\\"ol\\",li:\\"li\\",strong:\\"strong\\",em:\\"em\\"},e.components),{FigureImage:a}=i;return a||_(\\"FigureImage\\",!0),(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(i.p,{children:\\"You can follow these steps if you want to update your email notifications.\\"}),`\\n`,(0,t.jsxs)(i.ol,{children:[`\\n`,(0,t.jsx)(i.li,{children:\\"Login account\\"}),`\\n`,(0,t.jsxs)(i.li,{children:[\\"Click on \\",(0,t.jsx)(i.strong,{children:(0,t.jsx)(i.em,{children:\\"3 kebab menu icons\\"})}),\\" in the left under the corner of your dashboard, besides your name\\"]}),`\\n`,(0,t.jsx)(i.li,{children:\\"Click profile setting\\"}),`\\n`,(0,t.jsx)(i.li,{children:\\"You will be directed to the page where you can set up your email notification.\\"}),`\\n`]}),`\\n`,(0,t.jsx)(a,{caption:{title:\\"Figure 64\\",description:\\"Profile Settings\\"},src:\\"/assets/images/products/kata-omnichat/image64.webp\\",alt:\\"Kata Omnichat\\",naturalHeight:1250,naturalWidth:1999}),`\\n`,(0,t.jsxs)(i.ol,{start:\\"5\\",children:[`\\n`,(0,t.jsxs)(i.li,{children:[`\\n`,(0,t.jsx)(i.p,{children:\\"Tick the conversation you are interested in. By ticking the preference means that you agree to send us the email notification by the case. There 4 preferences of the email notification you want to set up\\"}),`\\n`,(0,t.jsxs)(i.ol,{children:[`\\n`,(0,t.jsx)(i.li,{children:\\"When a new conversation is created\\"}),`\\n`,(0,t.jsx)(i.li,{children:\\"When a conversation is assigned to me\\"}),`\\n`,(0,t.jsx)(i.li,{children:\\"When you\\\\u2019re mentioned in conversation\\"}),`\\n`,(0,t.jsx)(i.li,{children:\\"When a new message is created in an assigned conversation\\"}),`\\n`]}),`\\n`]}),`\\n`]}),`\\n`,(0,t.jsx)(a,{caption:{title:\\"Figure 65\\",description:\\"Email Notification Setting\\"},src:\\"/assets/images/products/kata-omnichat/image65.webp\\",alt:\\"Kata Omnichat\\",naturalHeight:1e3,naturalWidth:1600})]})}}var j=k;function _(e,n){throw new Error(\\"Expected \\"+(n?\\"component\\":\\"object\\")+\\" `\\"+e+\\"` to be defined: you likely forgot to import, pass, or provide it.\\")}return b(v);})();\\n;return Component;"},"_id":"kata-omnichat/setup-email-notification/how-to-use.mdx","_raw":{"sourceFilePath":"kata-omnichat/setup-email-notification/how-to-use.mdx","sourceFileName":"how-to-use.mdx","sourceFileDir":"kata-omnichat/setup-email-notification","contentType":"mdx","flattenedPath":"kata-omnichat/setup-email-notification/how-to-use"},"type":"KataOmnichat","slug":["setup-email-notification","how-to-use"],"excerpt":"\\nYou can follow these steps if you want to update your email notifications.\\n\\n1"}');
;// CONCATENATED MODULE: ./.contentlayer/generated/KataOmnichat/kata-omnichat__setup-email-notification__introduction.mdx.json
const kata_omnichat_setup_email_notification_introduction_mdx_namespaceObject = JSON.parse('{"id":"email-notification-introduction","section":"Setup Email Notification","title":"Introduction","prev":"set-up-canned-responses","next":"email-notification-how-to-use","body":{"raw":"\\nIn this section, you can set up your preference on email notifications. Email notification settings can be accessed by Administrators and Agents.\\n","code":"var Component=(()=>{var m=Object.create;var s=Object.defineProperty;var d=Object.getOwnPropertyDescriptor;var f=Object.getOwnPropertyNames;var l=Object.getPrototypeOf,x=Object.prototype.hasOwnProperty;var a=t=>s(t,\\"__esModule\\",{value:!0});var j=(t,n)=>()=>(n||t((n={exports:{}}).exports,n),n.exports),_=(t,n)=>{for(var e in n)s(t,e,{get:n[e],enumerable:!0})},r=(t,n,e,o)=>{if(n&&typeof n==\\"object\\"||typeof n==\\"function\\")for(let i of f(n))!x.call(t,i)&&(e||i!==\\"default\\")&&s(t,i,{get:()=>n[i],enumerable:!(o=d(n,i))||o.enumerable});return t},b=(t,n)=>r(a(s(t!=null?m(l(t)):{},\\"default\\",!n&&t&&t.__esModule?{get:()=>t.default,enumerable:!0}:{value:t,enumerable:!0})),t),g=(t=>(n,e)=>t&&t.get(n)||(e=r(a({}),n,1),t&&t.set(n,e),e))(typeof WeakMap!=\\"undefined\\"?new WeakMap:0);var p=j((C,u)=>{u.exports=_jsx_runtime});var w={};_(w,{default:()=>M,frontmatter:()=>h});var c=b(p()),h={id:\\"email-notification-introduction\\",title:\\"Introduction\\",prev:\\"set-up-canned-responses\\",next:\\"email-notification-how-to-use\\",section:\\"Setup Email Notification\\"};function y(t={}){let{wrapper:n}=t.components||{};return n?(0,c.jsx)(n,Object.assign({},t,{children:(0,c.jsx)(e,{})})):e();function e(){let o=Object.assign({p:\\"p\\"},t.components);return(0,c.jsx)(o.p,{children:\\"In this section, you can set up your preference on email notifications. Email notification settings can be accessed by Administrators and Agents.\\"})}}var M=y;return g(w);})();\\n;return Component;"},"_id":"kata-omnichat/setup-email-notification/introduction.mdx","_raw":{"sourceFilePath":"kata-omnichat/setup-email-notification/introduction.mdx","sourceFileName":"introduction.mdx","sourceFileDir":"kata-omnichat/setup-email-notification","contentType":"mdx","flattenedPath":"kata-omnichat/setup-email-notification/introduction"},"type":"KataOmnichat","slug":["setup-email-notification","introduction"],"excerpt":"\\nIn this section, you can set up your preference on email notifications. Email notification settings can be accessed by Administrators and Agents"}');
;// CONCATENATED MODULE: ./.contentlayer/generated/allKataOmnichats.mjs
// NOTE This file is auto-generated by the Contentlayer CLI






















































const allKataOmnichats = [
    kata_omnichat_before_you_start_prepare_your_instagram_business_account_mdx_namespaceObject,
    kata_omnichat_before_you_start_prepare_your_waba_account_mdx_namespaceObject,
    kata_omnichat_canned_response_set_up_canned_responses_mdx_namespaceObject,
    kata_omnichat_change_your_status_how_to_use_mdx_namespaceObject,
    kata_omnichat_change_your_status_introduction_mdx_namespaceObject,
    kata_omnichat_configure_your_account_how_to_use_mdx_namespaceObject,
    kata_omnichat_configure_your_account_introduction_mdx_namespaceObject,
    kata_omnichat_configure_your_agent_chatbot_create_agent_bot_from_kata_platform_mdx_namespaceObject,
    kata_omnichat_configure_your_agent_chatbot_setup_agent_bot_in_kata_omnichat_mdx_namespaceObject,
    kata_omnichat_enable_audio_notification_how_to_use_mdx_namespaceObject,
    kata_omnichat_enable_audio_notification_introduction_mdx_namespaceObject,
    kata_omnichat_get_access_token_how_to_use_mdx_namespaceObject,
    kata_omnichat_get_access_token_introduction_mdx_namespaceObject,
    kata_omnichat_getting_started_connect_your_instagram_messaging_inbox_mdx_namespaceObject,
    kata_omnichat_getting_started_connect_your_waba_inbox_mdx_namespaceObject,
    kata_omnichat_getting_started_register_your_account_first_mdx_namespaceObject,
    kata_omnichat_how_to_use_the_dashboard_change_password_mdx_namespaceObject,
    kata_omnichat_how_to_use_the_dashboard_update_profile_mdx_namespaceObject,
    kata_omnichat_introduction_benefits_with_kata_omnichat_mdx_namespaceObject,
    kata_omnichat_introduction_what_is_kata_omnichat_mdx_namespaceObject,
    kata_omnichat_manage_agent_add_agent_mdx_namespaceObject,
    kata_omnichat_manage_agent_delete_agent_mdx_namespaceObject,
    kata_omnichat_manage_agent_edit_agent_mdx_namespaceObject,
    kata_omnichat_manage_agent_received_the_invitation_mdx_namespaceObject,
    kata_omnichat_manage_inbox_settings_manage_agents_to_inbox_mdx_namespaceObject,
    kata_omnichat_manage_inbox_settings_set_up_business_hours_mdx_namespaceObject,
    kata_omnichat_manage_inbox_settings_set_up_ice_breaker_mdx_namespaceObject,
    kata_omnichat_manage_inbox_settings_set_up_quick_reply_mdx_namespaceObject,
    kata_omnichat_manage_inbox_add_agents_mdx_namespaceObject,
    kata_omnichat_manage_inbox_add_inbox_mdx_namespaceObject,
    kata_omnichat_manage_label_add_conversation_to_a_label_mdx_namespaceObject,
    kata_omnichat_manage_label_add_label_mdx_namespaceObject,
    kata_omnichat_manage_teams_add_teams_mdx_namespaceObject,
    kata_omnichat_manage_your_contact_add_contact_mdx_namespaceObject,
    kata_omnichat_manage_your_contact_view_contact_mdx_namespaceObject,
    kata_omnichat_manage_your_conversation_admin_view_conversation_mdx_namespaceObject,
    kata_omnichat_manage_your_conversation_agent_view_conversation_mdx_namespaceObject,
    kata_omnichat_manage_your_conversation_auto_agent_assignment_mdx_namespaceObject,
    kata_omnichat_manage_your_conversation_conversation_in_customer_side_using_bot_mdx_namespaceObject,
    kata_omnichat_manage_your_conversation_conversation_in_customer_side_without_bot_mdx_namespaceObject,
    kata_omnichat_manage_your_conversation_download_transcript_mdx_namespaceObject,
    kata_omnichat_manage_your_conversation_manual_agent_assignment_mdx_namespaceObject,
    kata_omnichat_manage_your_conversation_mute_conversation_mdx_namespaceObject,
    kata_omnichat_manage_your_conversation_resolve_conversation_mdx_namespaceObject,
    kata_omnichat_manage_your_conversation_see_conversation_between_chatbot_and_customer_mdx_namespaceObject,
    kata_omnichat_manage_your_conversation_take_over_bot_mdx_namespaceObject,
    kata_omnichat_manage_your_conversation_using_private_notes_in_conversations_mdx_namespaceObject,
    kata_omnichat_manage_your_conversation_whatsapp_business_conversation_in_agent_side_mdx_namespaceObject,
    kata_omnichat_manage_your_conversation_whatsapp_business_conversation_using_bot_mdx_namespaceObject,
    kata_omnichat_release_notes_version_mdx_namespaceObject,
    kata_omnichat_reports_download_report_mdx_namespaceObject,
    kata_omnichat_reports_view_report_mdx_namespaceObject,
    kata_omnichat_setup_email_notification_how_to_use_mdx_namespaceObject,
    kata_omnichat_setup_email_notification_introduction_mdx_namespaceObject
];


/***/ }),

/***/ 9415:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {


// EXPORTS
__webpack_require__.d(__webpack_exports__, {
  "h": () => (/* binding */ allKataPlatforms)
});

;// CONCATENATED MODULE: ./.contentlayer/generated/KataPlatform/kata-platform__documentation-content__analyze-your-bot-conversations.mdx.json
const kata_platform_documentation_content_analyze_your_bot_conversations_mdx_namespaceObject = JSON.parse('{"id":"analyze-your-bot-conversations","section":"Documentation Content","title":"Analyze Your Bot Conversations","prev":"start-your-first-chatbot","next":"error-log","body":{"raw":"\\n## Introduction\\n\\nIn the Kata Platform, you can view various reports and analytics regarding your chatbots. Whether it’s to analyze the end-user (read: chatbot’s user) behavior, chatbot’s most popular topic and keyword, or even chat log between your chatbot and its end-user, we got you covered.\\n\\nThere are 3 main features you can choose:\\n\\n- **Users** feature provides you the end-user information such as the number of new users, active users, and many more.\\n- **Topics** feature is a feature that relates to what topics, flows, or states that the end-user is asking the most.\\n- **Transcripts** is a feature to see end-user conversations with a chatbot.\\n\\nLet’s elaborate on each feature definition and functionalities.\\n\\n## Users\\n\\nThe Users feature contains the data of your end-user. First is the filter option on top of the feature screen.\\n\\n### User Filter\\n\\n<FigureImage\\n  alt=\\"Image 1 Alt\\"\\n  src=\\"/assets/images/products/kata-platform/analyze-your-bot-conversations/image1.webp\\"\\n  caption={{ title: \'Figure 1\', description: \'Filter option in Users feature.\' }}\\n  layout=\\"responsive\\"\\n  naturalHeight={278}\\n  naturalWidth={1999}\\n/>\\n\\nYou can filter the analytics based on:\\n\\n- **Environment** is a container your chatbot is deployed to. In Kata Platform, we have 3 environments: Development, Staging, or Production. Environment is a part when creating channels.\\n- **Channel** is a deployed messaging platform where your bot lives.\\n- **Date** is a feature to choose the date range for your analytics data. Note that you can only view maximum 2 months data at a time. For a broader date range, please contact us at <a href=\\"mailto:support@kata.ai\\">support@kata.ai</a>.\\n\\n### Various User Analytics\\n\\n<FigureImage\\n  alt=\\"Image 2 Alt\\"\\n  src=\\"/assets/images/products/kata-platform/analyze-your-bot-conversations/image2.webp\\"\\n  caption={{ title: \'Figure 2\', description: \'Various user analytics data.\' }}\\n  layout=\\"responsive\\"\\n  naturalHeight={625}\\n  naturalWidth={1999}\\n/>\\n\\nAfter selecting the filter, we can view specific data for your chatbot:\\n\\n- **New and Returning Users**: an analytics graphic to show the number of end-users who used the chatbot first-time and repeatedly.\\n- **Active Users**: number of end-users who repeatedly used the chatbot in total.\\n- **Sessions**: a session count when the end-user engages in conversation with the bot until the conversation ends. A session counts as “ended” when your end-user does not reply to the bot until 5 minutes after.\\n- **New Users**: number of end-users that used the chatbot for the first time. If your end-user chats “Hi” for the first time to your bot, then it will be counted as 1. This metric cannot be applied to Whatsapp.\\n- **Messages**: number of total messages received (incoming messages) and sent (outgoing messages) through the chatbot.\\n\\n### User Activities\\n\\n<FigureImage\\n  alt=\\"Image 3 Alt\\"\\n  src=\\"/assets/images/products/kata-platform/analyze-your-bot-conversations/image3.webp\\"\\n  caption={{ title: \'Figure 3\', description: \'User Activities analytics.\' }}\\n  layout=\\"responsive\\"\\n  naturalHeight={860}\\n  naturalWidth={1999}\\n/>\\n\\nIn User Activities, you can see how many sessions, active users, messages, and new users your chatbot has throughout the date range. You can also hover at any date to view the stats for that day. The data can be downloaded in CSV format.\\n\\n### Peak Hours\\n\\n<FigureImage\\n  alt=\\"Image 4 Alt\\"\\n  src=\\"/assets/images/products/kata-platform/analyze-your-bot-conversations/image4.webp\\"\\n  caption={{ title: \'Figure 4\', description: \'Peak Hours analytics.\' }}\\n  layout=\\"responsive\\"\\n  naturalHeight={1069}\\n  naturalWidth={1999}\\n/>\\n\\nIn Peak Hour\'s analytics, you can analyze at what day and time the end-users are more engaged with your chatbot. The blue color indicates engagement. The darker the blue, the more engagement the end-user has with your chatbot on that specific day & time.\\n\\nNotice on Monday at 12PM, when you hover the block, there are 28 incoming messages with dark blue color, indicating on that day and time the end-user is more active. You can use this analysis to make a better decision as to when is the best time to engage with your user.\\n\\n### Cohort\\n\\n<FigureImage\\n  alt=\\"Image 5 Alt\\"\\n  src=\\"/assets/images/products/kata-platform/analyze-your-bot-conversations/image5.webp\\"\\n  layout=\\"responsive\\"\\n  naturalHeight={712}\\n  naturalWidth={1999}\\n/>\\n\\n<FigureImage\\n  alt=\\"Image 6 Alt\\"\\n  src=\\"/assets/images/products/kata-platform/analyze-your-bot-conversations/image6.webp\\"\\n  caption={{ title: \'Figure 5\', description: \'Cohort (simple & expanded) analytics - Daily.\' }}\\n  layout=\\"responsive\\"\\n  naturalHeight={876}\\n  naturalWidth={1999}\\n/>\\n\\n<div className=\\"info\\">\\n  <img className=\\"borderless\\" src=\\"/assets/images/icon-info.svg\\" />\\n  <p>\\n    Important note: The cohort data is standalone analytics, which means the data is shown not filtered by date range.\\n  </p>\\n</div>\\n\\nCohort analysis allows us to see end-user retention which shows the engagement level of end-users to the bot. For example, it counts **active users** who interact with our bot on month 0 and return on the following month (month 1), and return after the next following month (month 2), the higher the percentage of users that returned on month 1, 2, and 3 showing that our bot has a high **retention level**.\\n\\nIt has a **cohort size** to choose a range which are **monthly, weekly, daily** (default daily):\\n\\n- Monthly will show **2 previous months** from today.\\n- Weekly will show **11 previous weeks** from today.\\n- Daily will show **14 previous days** from today.\\n\\nIt has a download **button** to export data to a CSV file. We define **5 colors** as follows:\\n\\n- **A dark** color for the **100%** active users.\\n- **A medium-dark** color for **75% to 100%** active users .\\n- **Medium-light** color for **50% to 76%** active users.\\n- **Light** color for **25% to 51%** active users.\\n- **White** for **0% to 26%** active users.\\n\\n## Topics\\n\\nThe **Topics** option within the analytics dashboard contains information regarding mostly used features in your platform. The first thing you will find is a box with 3 filters, which allows you to obtain customized information based on your chosen filters.\\n\\n### Topics Filter\\n\\n<FigureImage\\n  alt=\\"Image 7 Alt\\"\\n  src=\\"/assets/images/products/kata-platform/analyze-your-bot-conversations/image7.webp\\"\\n  caption={{ title: \'Figure 6\', description: \'Filter option in Topics feature.\' }}\\n  layout=\\"responsive\\"\\n  naturalHeight={167}\\n  naturalWidth={1009}\\n/>\\n\\nYou may adjust the filters based on the following parameters:\\n\\n- **Environment** is a container your chatbot is deployed to. In Kata Platform, we have 3 environments: Development, Staging, or Production. Environment is a part when creating channels.\\n- **Channel** is a deployed messaging platform where your bot lives.\\n- **Date** is a feature to choose the date range for your analytics data. Note that you can only view maximum 2 months data at a time. For a broader date range, please contact us at <a href=\\"mailto:support@kata.ai\\">support@kata.ai</a>.\\n\\n### Top Topics Analytics\\n\\n<FigureImage\\n  alt=\\"Image 8 Alt\\"\\n  src=\\"/assets/images/products/kata-platform/analyze-your-bot-conversations/image8.webp\\"\\n  caption={{ title: \'Figure 7\', description: \'Top Topics analytics.\' }}\\n  layout=\\"responsive\\"\\n  naturalHeight={1289}\\n  naturalWidth={1999}\\n/>\\n\\nOnce you apply the filters, you can view specific information regarding Top topics for a given feature. For example, shown above are the top 5 topics that appear the most for the flows, intents, states, and messages feature.\\n\\n- **Top 5 flows** will show you an insight about which flows are visited by end-users.\\n- **Top 10 intents** featured the intents that the end-user repeatedly asked.\\n- **Top 10 states** provide which response that chatbot repeatedly replied to the end-user.\\n- **Top 10 messages** show what words were repeatedly talked about by your end-users.\\n\\nAll those pie charts are downloadable. The output files will be CSV.\\n\\n### Word Cloud\\n\\n<FigureImage\\n  alt=\\"Image 9 Alt\\"\\n  src=\\"/assets/images/products/kata-platform/analyze-your-bot-conversations/image9.webp\\"\\n  caption={{ title: \'Figure 8\', description: \'Word Cloud analytics.\' }}\\n  layout=\\"responsive\\"\\n  naturalHeight={733}\\n  naturalWidth={1999}\\n/>\\n\\nWhen you scroll to the end of the page, you will find the **Word Cloud** box which is a collection of most commonly used words by your end-user. The bigger the size of the font indicates how often the word is being used. You can hover over the words to see total messages for each word.\\n\\n## Transcripts\\n\\nTranscripts feature provides the complete log of conversations between your users & chatbot, complete with date range, total incoming and outgoing messages, duration, and user ID. Also, you can download each transcript log in CSV format.\\n\\n### Transcript Filter\\n\\n<FigureImage\\n  alt=\\"Image 10 Alt\\"\\n  src=\\"/assets/images/products/kata-platform/analyze-your-bot-conversations/image10.webp\\"\\n  caption={{ title: \'Figure 9\', description: \'Filter option in Transcripts feature.\' }}\\n  layout=\\"responsive\\"\\n  naturalHeight={274}\\n  naturalWidth={1999}\\n/>\\n\\nYou may adjust the filters based on the following parameters:\\n\\n- **Environment** is a container your chatbot is deployed to. In Kata Platform, we have 3 environments: Development, Staging, or Production. Environment is a part when creating channels.\\n- **Channel** is a deployed messaging platform where your bot lives.\\n- **Date** is a feature to choose the date range for your analytics data. Note that you can only view maximum 2 months data at a time. For a broader date range, please contact us at <a href=\\"mailto:support@kata.ai\\">support@kata.ai</a>.\\n\\n### Transcript Log\\n\\n<FigureImage\\n  alt=\\"Image 11 Alt\\"\\n  src=\\"/assets/images/products/kata-platform/analyze-your-bot-conversations/image11.webp\\"\\n  caption={{ title: \'Figure 10\', description: \'Transcript Log.\' }}\\n  layout=\\"responsive\\"\\n  naturalHeight={1041}\\n  naturalWidth={1999}\\n/>\\n\\nAfter choosing the filter, you can view the transcript log, you can also search for a specific User ID in the search bar on the upper left corner. Here is the explanation for each column:\\n\\n- **Start Date** means start date and time of the conversation.\\n- **End Date** means end date and time of the conversation.\\n- **Incoming** means the total number of messages from the end-user.\\n- **Outgoing** means the total number of messages from the chatbot.\\n- **Duration** means the total time of each conversation.\\n- **User ID** means the user ID of the user in the conversation.\\n- **Download** means a feature to download a transcript log in CSV format.\\n\\nYou can also click on the transcript row to view the log of each row, for example:\\n\\n<FigureImage\\n  alt=\\"Image 12 Alt\\"\\n  src=\\"/assets/images/products/kata-platform/analyze-your-bot-conversations/image12.webp\\"\\n  caption={{ title: \'Figure 11\', description: \'Transcript Detail.\' }}\\n  layout=\\"responsive\\"\\n  naturalHeight={989}\\n  naturalWidth={1999}\\n/>\\n\\nHere, you can view the log of conversations between your user & chatbot. We also include the state flow your user is in after each chat.\\n","code":"var Component=(()=>{var d=Object.create;var i=Object.defineProperty;var u=Object.getOwnPropertyDescriptor;var p=Object.getOwnPropertyNames;var m=Object.getPrototypeOf,g=Object.prototype.hasOwnProperty;var s=n=>i(n,\\"__esModule\\",{value:!0});var f=(n,a)=>()=>(a||n((a={exports:{}}).exports,a),a.exports),y=(n,a)=>{for(var o in a)i(n,o,{get:a[o],enumerable:!0})},l=(n,a,o,t)=>{if(a&&typeof a==\\"object\\"||typeof a==\\"function\\")for(let r of p(a))!g.call(n,r)&&(o||r!==\\"default\\")&&i(n,r,{get:()=>a[r],enumerable:!(t=u(a,r))||t.enumerable});return n},w=(n,a)=>l(s(i(n!=null?d(m(n)):{},\\"default\\",!a&&n&&n.__esModule?{get:()=>n.default,enumerable:!0}:{value:n,enumerable:!0})),n),b=(n=>(a,o)=>n&&n.get(a)||(o=l(s({}),a,1),n&&n.set(a,o),o))(typeof WeakMap!=\\"undefined\\"?new WeakMap:0);var h=f((A,c)=>{c.exports=_jsx_runtime});var I={};y(I,{default:()=>N,frontmatter:()=>v});var e=w(h()),v={id:\\"analyze-your-bot-conversations\\",title:\\"Analyze Your Bot Conversations\\",prev:\\"start-your-first-chatbot\\",next:\\"error-log\\",section:\\"Documentation Content\\"};function k(n={}){let{wrapper:a}=n.components||{};return a?(0,e.jsx)(a,Object.assign({},n,{children:(0,e.jsx)(o,{})})):o();function o(){let t=Object.assign({h2:\\"h2\\",a:\\"a\\",span:\\"span\\",p:\\"p\\",ul:\\"ul\\",li:\\"li\\",strong:\\"strong\\",h3:\\"h3\\"},n.components),{FigureImage:r}=t;return r||T(\\"FigureImage\\",!0),(0,e.jsxs)(e.Fragment,{children:[(0,e.jsxs)(t.h2,{id:\\"introduction\\",children:[(0,e.jsx)(t.a,{className:\\"anchor\\",href:\\"#introduction\\",children:(0,e.jsx)(t.span,{className:\\"icon icon-link\\"})}),\\"Introduction\\"]}),`\\n`,(0,e.jsx)(t.p,{children:\\"In the Kata Platform, you can view various reports and analytics regarding your chatbots. Whether it\\\\u2019s to analyze the end-user (read: chatbot\\\\u2019s user) behavior, chatbot\\\\u2019s most popular topic and keyword, or even chat log between your chatbot and its end-user, we got you covered.\\"}),`\\n`,(0,e.jsx)(t.p,{children:\\"There are 3 main features you can choose:\\"}),`\\n`,(0,e.jsxs)(t.ul,{children:[`\\n`,(0,e.jsxs)(t.li,{children:[(0,e.jsx)(t.strong,{children:\\"Users\\"}),\\" feature provides you the end-user information such as the number of new users, active users, and many more.\\"]}),`\\n`,(0,e.jsxs)(t.li,{children:[(0,e.jsx)(t.strong,{children:\\"Topics\\"}),\\" feature is a feature that relates to what topics, flows, or states that the end-user is asking the most.\\"]}),`\\n`,(0,e.jsxs)(t.li,{children:[(0,e.jsx)(t.strong,{children:\\"Transcripts\\"}),\\" is a feature to see end-user conversations with a chatbot.\\"]}),`\\n`]}),`\\n`,(0,e.jsx)(t.p,{children:\\"Let\\\\u2019s elaborate on each feature definition and functionalities.\\"}),`\\n`,(0,e.jsxs)(t.h2,{id:\\"users\\",children:[(0,e.jsx)(t.a,{className:\\"anchor\\",href:\\"#users\\",children:(0,e.jsx)(t.span,{className:\\"icon icon-link\\"})}),\\"Users\\"]}),`\\n`,(0,e.jsx)(t.p,{children:\\"The Users feature contains the data of your end-user. First is the filter option on top of the feature screen.\\"}),`\\n`,(0,e.jsxs)(t.h3,{id:\\"user-filter\\",children:[(0,e.jsx)(t.a,{className:\\"anchor\\",href:\\"#user-filter\\",children:(0,e.jsx)(t.span,{className:\\"icon icon-link\\"})}),\\"User Filter\\"]}),`\\n`,(0,e.jsx)(r,{alt:\\"Image 1 Alt\\",src:\\"/assets/images/products/kata-platform/analyze-your-bot-conversations/image1.webp\\",caption:{title:\\"Figure 1\\",description:\\"Filter option in Users feature.\\"},layout:\\"responsive\\",naturalHeight:278,naturalWidth:1999}),`\\n`,(0,e.jsx)(t.p,{children:\\"You can filter the analytics based on:\\"}),`\\n`,(0,e.jsxs)(t.ul,{children:[`\\n`,(0,e.jsxs)(t.li,{children:[(0,e.jsx)(t.strong,{children:\\"Environment\\"}),\\" is a container your chatbot is deployed to. In Kata Platform, we have 3 environments: Development, Staging, or Production. Environment is a part when creating channels.\\"]}),`\\n`,(0,e.jsxs)(t.li,{children:[(0,e.jsx)(t.strong,{children:\\"Channel\\"}),\\" is a deployed messaging platform where your bot lives.\\"]}),`\\n`,(0,e.jsxs)(t.li,{children:[(0,e.jsx)(t.strong,{children:\\"Date\\"}),\\" is a feature to choose the date range for your analytics data. Note that you can only view maximum 2 months data at a time. For a broader date range, please contact us at \\",(0,e.jsx)(\\"a\\",{href:\\"mailto:support@kata.ai\\",children:(0,e.jsx)(t.a,{href:\\"mailto:support@kata.ai\\",children:\\"support@kata.ai\\"})}),\\".\\"]}),`\\n`]}),`\\n`,(0,e.jsxs)(t.h3,{id:\\"various-user-analytics\\",children:[(0,e.jsx)(t.a,{className:\\"anchor\\",href:\\"#various-user-analytics\\",children:(0,e.jsx)(t.span,{className:\\"icon icon-link\\"})}),\\"Various User Analytics\\"]}),`\\n`,(0,e.jsx)(r,{alt:\\"Image 2 Alt\\",src:\\"/assets/images/products/kata-platform/analyze-your-bot-conversations/image2.webp\\",caption:{title:\\"Figure 2\\",description:\\"Various user analytics data.\\"},layout:\\"responsive\\",naturalHeight:625,naturalWidth:1999}),`\\n`,(0,e.jsx)(t.p,{children:\\"After selecting the filter, we can view specific data for your chatbot:\\"}),`\\n`,(0,e.jsxs)(t.ul,{children:[`\\n`,(0,e.jsxs)(t.li,{children:[(0,e.jsx)(t.strong,{children:\\"New and Returning Users\\"}),\\": an analytics graphic to show the number of end-users who used the chatbot first-time and repeatedly.\\"]}),`\\n`,(0,e.jsxs)(t.li,{children:[(0,e.jsx)(t.strong,{children:\\"Active Users\\"}),\\": number of end-users who repeatedly used the chatbot in total.\\"]}),`\\n`,(0,e.jsxs)(t.li,{children:[(0,e.jsx)(t.strong,{children:\\"Sessions\\"}),\\": a session count when the end-user engages in conversation with the bot until the conversation ends. A session counts as \\\\u201Cended\\\\u201D when your end-user does not reply to the bot until 5 minutes after.\\"]}),`\\n`,(0,e.jsxs)(t.li,{children:[(0,e.jsx)(t.strong,{children:\\"New Users\\"}),\\": number of end-users that used the chatbot for the first time. If your end-user chats \\\\u201CHi\\\\u201D for the first time to your bot, then it will be counted as 1. This metric cannot be applied to Whatsapp.\\"]}),`\\n`,(0,e.jsxs)(t.li,{children:[(0,e.jsx)(t.strong,{children:\\"Messages\\"}),\\": number of total messages received (incoming messages) and sent (outgoing messages) through the chatbot.\\"]}),`\\n`]}),`\\n`,(0,e.jsxs)(t.h3,{id:\\"user-activities\\",children:[(0,e.jsx)(t.a,{className:\\"anchor\\",href:\\"#user-activities\\",children:(0,e.jsx)(t.span,{className:\\"icon icon-link\\"})}),\\"User Activities\\"]}),`\\n`,(0,e.jsx)(r,{alt:\\"Image 3 Alt\\",src:\\"/assets/images/products/kata-platform/analyze-your-bot-conversations/image3.webp\\",caption:{title:\\"Figure 3\\",description:\\"User Activities analytics.\\"},layout:\\"responsive\\",naturalHeight:860,naturalWidth:1999}),`\\n`,(0,e.jsx)(t.p,{children:\\"In User Activities, you can see how many sessions, active users, messages, and new users your chatbot has throughout the date range. You can also hover at any date to view the stats for that day. The data can be downloaded in CSV format.\\"}),`\\n`,(0,e.jsxs)(t.h3,{id:\\"peak-hours\\",children:[(0,e.jsx)(t.a,{className:\\"anchor\\",href:\\"#peak-hours\\",children:(0,e.jsx)(t.span,{className:\\"icon icon-link\\"})}),\\"Peak Hours\\"]}),`\\n`,(0,e.jsx)(r,{alt:\\"Image 4 Alt\\",src:\\"/assets/images/products/kata-platform/analyze-your-bot-conversations/image4.webp\\",caption:{title:\\"Figure 4\\",description:\\"Peak Hours analytics.\\"},layout:\\"responsive\\",naturalHeight:1069,naturalWidth:1999}),`\\n`,(0,e.jsx)(t.p,{children:\\"In Peak Hour\'s analytics, you can analyze at what day and time the end-users are more engaged with your chatbot. The blue color indicates engagement. The darker the blue, the more engagement the end-user has with your chatbot on that specific day & time.\\"}),`\\n`,(0,e.jsx)(t.p,{children:\\"Notice on Monday at 12PM, when you hover the block, there are 28 incoming messages with dark blue color, indicating on that day and time the end-user is more active. You can use this analysis to make a better decision as to when is the best time to engage with your user.\\"}),`\\n`,(0,e.jsxs)(t.h3,{id:\\"cohort\\",children:[(0,e.jsx)(t.a,{className:\\"anchor\\",href:\\"#cohort\\",children:(0,e.jsx)(t.span,{className:\\"icon icon-link\\"})}),\\"Cohort\\"]}),`\\n`,(0,e.jsx)(r,{alt:\\"Image 5 Alt\\",src:\\"/assets/images/products/kata-platform/analyze-your-bot-conversations/image5.webp\\",layout:\\"responsive\\",naturalHeight:712,naturalWidth:1999}),`\\n`,(0,e.jsx)(r,{alt:\\"Image 6 Alt\\",src:\\"/assets/images/products/kata-platform/analyze-your-bot-conversations/image6.webp\\",caption:{title:\\"Figure 5\\",description:\\"Cohort (simple & expanded) analytics - Daily.\\"},layout:\\"responsive\\",naturalHeight:876,naturalWidth:1999}),`\\n`,(0,e.jsxs)(\\"div\\",{className:\\"info\\",children:[(0,e.jsx)(\\"img\\",{className:\\"borderless\\",src:\\"/assets/images/icon-info.svg\\"}),(0,e.jsx)(\\"p\\",{children:(0,e.jsx)(t.p,{children:\\"Important note: The cohort data is standalone analytics, which means the data is shown not filtered by date range.\\"})})]}),`\\n`,(0,e.jsxs)(t.p,{children:[\\"Cohort analysis allows us to see end-user retention which shows the engagement level of end-users to the bot. For example, it counts \\",(0,e.jsx)(t.strong,{children:\\"active users\\"}),\\" who interact with our bot on month 0 and return on the following month (month 1), and return after the next following month (month 2), the higher the percentage of users that returned on month 1, 2, and 3 showing that our bot has a high \\",(0,e.jsx)(t.strong,{children:\\"retention level\\"}),\\".\\"]}),`\\n`,(0,e.jsxs)(t.p,{children:[\\"It has a \\",(0,e.jsx)(t.strong,{children:\\"cohort size\\"}),\\" to choose a range which are \\",(0,e.jsx)(t.strong,{children:\\"monthly, weekly, daily\\"}),\\" (default daily):\\"]}),`\\n`,(0,e.jsxs)(t.ul,{children:[`\\n`,(0,e.jsxs)(t.li,{children:[\\"Monthly will show \\",(0,e.jsx)(t.strong,{children:\\"2 previous months\\"}),\\" from today.\\"]}),`\\n`,(0,e.jsxs)(t.li,{children:[\\"Weekly will show \\",(0,e.jsx)(t.strong,{children:\\"11 previous weeks\\"}),\\" from today.\\"]}),`\\n`,(0,e.jsxs)(t.li,{children:[\\"Daily will show \\",(0,e.jsx)(t.strong,{children:\\"14 previous days\\"}),\\" from today.\\"]}),`\\n`]}),`\\n`,(0,e.jsxs)(t.p,{children:[\\"It has a download \\",(0,e.jsx)(t.strong,{children:\\"button\\"}),\\" to export data to a CSV file. We define \\",(0,e.jsx)(t.strong,{children:\\"5 colors\\"}),\\" as follows:\\"]}),`\\n`,(0,e.jsxs)(t.ul,{children:[`\\n`,(0,e.jsxs)(t.li,{children:[(0,e.jsx)(t.strong,{children:\\"A dark\\"}),\\" color for the \\",(0,e.jsx)(t.strong,{children:\\"100%\\"}),\\" active users.\\"]}),`\\n`,(0,e.jsxs)(t.li,{children:[(0,e.jsx)(t.strong,{children:\\"A medium-dark\\"}),\\" color for \\",(0,e.jsx)(t.strong,{children:\\"75% to 100%\\"}),\\" active users .\\"]}),`\\n`,(0,e.jsxs)(t.li,{children:[(0,e.jsx)(t.strong,{children:\\"Medium-light\\"}),\\" color for \\",(0,e.jsx)(t.strong,{children:\\"50% to 76%\\"}),\\" active users.\\"]}),`\\n`,(0,e.jsxs)(t.li,{children:[(0,e.jsx)(t.strong,{children:\\"Light\\"}),\\" color for \\",(0,e.jsx)(t.strong,{children:\\"25% to 51%\\"}),\\" active users.\\"]}),`\\n`,(0,e.jsxs)(t.li,{children:[(0,e.jsx)(t.strong,{children:\\"White\\"}),\\" for \\",(0,e.jsx)(t.strong,{children:\\"0% to 26%\\"}),\\" active users.\\"]}),`\\n`]}),`\\n`,(0,e.jsxs)(t.h2,{id:\\"topics\\",children:[(0,e.jsx)(t.a,{className:\\"anchor\\",href:\\"#topics\\",children:(0,e.jsx)(t.span,{className:\\"icon icon-link\\"})}),\\"Topics\\"]}),`\\n`,(0,e.jsxs)(t.p,{children:[\\"The \\",(0,e.jsx)(t.strong,{children:\\"Topics\\"}),\\" option within the analytics dashboard contains information regarding mostly used features in your platform. The first thing you will find is a box with 3 filters, which allows you to obtain customized information based on your chosen filters.\\"]}),`\\n`,(0,e.jsxs)(t.h3,{id:\\"topics-filter\\",children:[(0,e.jsx)(t.a,{className:\\"anchor\\",href:\\"#topics-filter\\",children:(0,e.jsx)(t.span,{className:\\"icon icon-link\\"})}),\\"Topics Filter\\"]}),`\\n`,(0,e.jsx)(r,{alt:\\"Image 7 Alt\\",src:\\"/assets/images/products/kata-platform/analyze-your-bot-conversations/image7.webp\\",caption:{title:\\"Figure 6\\",description:\\"Filter option in Topics feature.\\"},layout:\\"responsive\\",naturalHeight:167,naturalWidth:1009}),`\\n`,(0,e.jsx)(t.p,{children:\\"You may adjust the filters based on the following parameters:\\"}),`\\n`,(0,e.jsxs)(t.ul,{children:[`\\n`,(0,e.jsxs)(t.li,{children:[(0,e.jsx)(t.strong,{children:\\"Environment\\"}),\\" is a container your chatbot is deployed to. In Kata Platform, we have 3 environments: Development, Staging, or Production. Environment is a part when creating channels.\\"]}),`\\n`,(0,e.jsxs)(t.li,{children:[(0,e.jsx)(t.strong,{children:\\"Channel\\"}),\\" is a deployed messaging platform where your bot lives.\\"]}),`\\n`,(0,e.jsxs)(t.li,{children:[(0,e.jsx)(t.strong,{children:\\"Date\\"}),\\" is a feature to choose the date range for your analytics data. Note that you can only view maximum 2 months data at a time. For a broader date range, please contact us at \\",(0,e.jsx)(\\"a\\",{href:\\"mailto:support@kata.ai\\",children:(0,e.jsx)(t.a,{href:\\"mailto:support@kata.ai\\",children:\\"support@kata.ai\\"})}),\\".\\"]}),`\\n`]}),`\\n`,(0,e.jsxs)(t.h3,{id:\\"top-topics-analytics\\",children:[(0,e.jsx)(t.a,{className:\\"anchor\\",href:\\"#top-topics-analytics\\",children:(0,e.jsx)(t.span,{className:\\"icon icon-link\\"})}),\\"Top Topics Analytics\\"]}),`\\n`,(0,e.jsx)(r,{alt:\\"Image 8 Alt\\",src:\\"/assets/images/products/kata-platform/analyze-your-bot-conversations/image8.webp\\",caption:{title:\\"Figure 7\\",description:\\"Top Topics analytics.\\"},layout:\\"responsive\\",naturalHeight:1289,naturalWidth:1999}),`\\n`,(0,e.jsx)(t.p,{children:\\"Once you apply the filters, you can view specific information regarding Top topics for a given feature. For example, shown above are the top 5 topics that appear the most for the flows, intents, states, and messages feature.\\"}),`\\n`,(0,e.jsxs)(t.ul,{children:[`\\n`,(0,e.jsxs)(t.li,{children:[(0,e.jsx)(t.strong,{children:\\"Top 5 flows\\"}),\\" will show you an insight about which flows are visited by end-users.\\"]}),`\\n`,(0,e.jsxs)(t.li,{children:[(0,e.jsx)(t.strong,{children:\\"Top 10 intents\\"}),\\" featured the intents that the end-user repeatedly asked.\\"]}),`\\n`,(0,e.jsxs)(t.li,{children:[(0,e.jsx)(t.strong,{children:\\"Top 10 states\\"}),\\" provide which response that chatbot repeatedly replied to the end-user.\\"]}),`\\n`,(0,e.jsxs)(t.li,{children:[(0,e.jsx)(t.strong,{children:\\"Top 10 messages\\"}),\\" show what words were repeatedly talked about by your end-users.\\"]}),`\\n`]}),`\\n`,(0,e.jsx)(t.p,{children:\\"All those pie charts are downloadable. The output files will be CSV.\\"}),`\\n`,(0,e.jsxs)(t.h3,{id:\\"word-cloud\\",children:[(0,e.jsx)(t.a,{className:\\"anchor\\",href:\\"#word-cloud\\",children:(0,e.jsx)(t.span,{className:\\"icon icon-link\\"})}),\\"Word Cloud\\"]}),`\\n`,(0,e.jsx)(r,{alt:\\"Image 9 Alt\\",src:\\"/assets/images/products/kata-platform/analyze-your-bot-conversations/image9.webp\\",caption:{title:\\"Figure 8\\",description:\\"Word Cloud analytics.\\"},layout:\\"responsive\\",naturalHeight:733,naturalWidth:1999}),`\\n`,(0,e.jsxs)(t.p,{children:[\\"When you scroll to the end of the page, you will find the \\",(0,e.jsx)(t.strong,{children:\\"Word Cloud\\"}),\\" box which is a collection of most commonly used words by your end-user. The bigger the size of the font indicates how often the word is being used. You can hover over the words to see total messages for each word.\\"]}),`\\n`,(0,e.jsxs)(t.h2,{id:\\"transcripts\\",children:[(0,e.jsx)(t.a,{className:\\"anchor\\",href:\\"#transcripts\\",children:(0,e.jsx)(t.span,{className:\\"icon icon-link\\"})}),\\"Transcripts\\"]}),`\\n`,(0,e.jsx)(t.p,{children:\\"Transcripts feature provides the complete log of conversations between your users & chatbot, complete with date range, total incoming and outgoing messages, duration, and user ID. Also, you can download each transcript log in CSV format.\\"}),`\\n`,(0,e.jsxs)(t.h3,{id:\\"transcript-filter\\",children:[(0,e.jsx)(t.a,{className:\\"anchor\\",href:\\"#transcript-filter\\",children:(0,e.jsx)(t.span,{className:\\"icon icon-link\\"})}),\\"Transcript Filter\\"]}),`\\n`,(0,e.jsx)(r,{alt:\\"Image 10 Alt\\",src:\\"/assets/images/products/kata-platform/analyze-your-bot-conversations/image10.webp\\",caption:{title:\\"Figure 9\\",description:\\"Filter option in Transcripts feature.\\"},layout:\\"responsive\\",naturalHeight:274,naturalWidth:1999}),`\\n`,(0,e.jsx)(t.p,{children:\\"You may adjust the filters based on the following parameters:\\"}),`\\n`,(0,e.jsxs)(t.ul,{children:[`\\n`,(0,e.jsxs)(t.li,{children:[(0,e.jsx)(t.strong,{children:\\"Environment\\"}),\\" is a container your chatbot is deployed to. In Kata Platform, we have 3 environments: Development, Staging, or Production. Environment is a part when creating channels.\\"]}),`\\n`,(0,e.jsxs)(t.li,{children:[(0,e.jsx)(t.strong,{children:\\"Channel\\"}),\\" is a deployed messaging platform where your bot lives.\\"]}),`\\n`,(0,e.jsxs)(t.li,{children:[(0,e.jsx)(t.strong,{children:\\"Date\\"}),\\" is a feature to choose the date range for your analytics data. Note that you can only view maximum 2 months data at a time. For a broader date range, please contact us at \\",(0,e.jsx)(\\"a\\",{href:\\"mailto:support@kata.ai\\",children:(0,e.jsx)(t.a,{href:\\"mailto:support@kata.ai\\",children:\\"support@kata.ai\\"})}),\\".\\"]}),`\\n`]}),`\\n`,(0,e.jsxs)(t.h3,{id:\\"transcript-log\\",children:[(0,e.jsx)(t.a,{className:\\"anchor\\",href:\\"#transcript-log\\",children:(0,e.jsx)(t.span,{className:\\"icon icon-link\\"})}),\\"Transcript Log\\"]}),`\\n`,(0,e.jsx)(r,{alt:\\"Image 11 Alt\\",src:\\"/assets/images/products/kata-platform/analyze-your-bot-conversations/image11.webp\\",caption:{title:\\"Figure 10\\",description:\\"Transcript Log.\\"},layout:\\"responsive\\",naturalHeight:1041,naturalWidth:1999}),`\\n`,(0,e.jsx)(t.p,{children:\\"After choosing the filter, you can view the transcript log, you can also search for a specific User ID in the search bar on the upper left corner. Here is the explanation for each column:\\"}),`\\n`,(0,e.jsxs)(t.ul,{children:[`\\n`,(0,e.jsxs)(t.li,{children:[(0,e.jsx)(t.strong,{children:\\"Start Date\\"}),\\" means start date and time of the conversation.\\"]}),`\\n`,(0,e.jsxs)(t.li,{children:[(0,e.jsx)(t.strong,{children:\\"End Date\\"}),\\" means end date and time of the conversation.\\"]}),`\\n`,(0,e.jsxs)(t.li,{children:[(0,e.jsx)(t.strong,{children:\\"Incoming\\"}),\\" means the total number of messages from the end-user.\\"]}),`\\n`,(0,e.jsxs)(t.li,{children:[(0,e.jsx)(t.strong,{children:\\"Outgoing\\"}),\\" means the total number of messages from the chatbot.\\"]}),`\\n`,(0,e.jsxs)(t.li,{children:[(0,e.jsx)(t.strong,{children:\\"Duration\\"}),\\" means the total time of each conversation.\\"]}),`\\n`,(0,e.jsxs)(t.li,{children:[(0,e.jsx)(t.strong,{children:\\"User ID\\"}),\\" means the user ID of the user in the conversation.\\"]}),`\\n`,(0,e.jsxs)(t.li,{children:[(0,e.jsx)(t.strong,{children:\\"Download\\"}),\\" means a feature to download a transcript log in CSV format.\\"]}),`\\n`]}),`\\n`,(0,e.jsx)(t.p,{children:\\"You can also click on the transcript row to view the log of each row, for example:\\"}),`\\n`,(0,e.jsx)(r,{alt:\\"Image 12 Alt\\",src:\\"/assets/images/products/kata-platform/analyze-your-bot-conversations/image12.webp\\",caption:{title:\\"Figure 11\\",description:\\"Transcript Detail.\\"},layout:\\"responsive\\",naturalHeight:989,naturalWidth:1999}),`\\n`,(0,e.jsx)(t.p,{children:\\"Here, you can view the log of conversations between your user & chatbot. We also include the state flow your user is in after each chat.\\"})]})}}var N=k;function T(n,a){throw new Error(\\"Expected \\"+(a?\\"component\\":\\"object\\")+\\" `\\"+n+\\"` to be defined: you likely forgot to import, pass, or provide it.\\")}return b(I);})();\\n;return Component;"},"_id":"kata-platform/documentation-content/analyze-your-bot-conversations.mdx","_raw":{"sourceFilePath":"kata-platform/documentation-content/analyze-your-bot-conversations.mdx","sourceFileName":"analyze-your-bot-conversations.mdx","sourceFileDir":"kata-platform/documentation-content","contentType":"mdx","flattenedPath":"kata-platform/documentation-content/analyze-your-bot-conversations"},"type":"KataPlatform","slug":["documentation-content","analyze-your-bot-conversations"],"excerpt":"\\n## Introduction\\n\\nIn the Kata Platform, you can view various reports and analytics regarding your chatbots. Whether it’s to analyze the end-user (read: chatbot’s user) behavior, chatbot’s most popular topic and keyword, or even chat log between your chatbot and its end-user, we got you covered"}');
;// CONCATENATED MODULE: ./.contentlayer/generated/KataPlatform/kata-platform__documentation-content__designing-conversation.mdx.json
const kata_platform_documentation_content_designing_conversation_mdx_namespaceObject = JSON.parse('{"id":"designing-conversation","section":"Documentation Content","title":"Designing Conversation","prev":"all-use-cases","next":"start-your-first-chatbot","body":{"raw":"\\n## What is Conversation Design?\\n\\nConversation Design is a process of designing conversation between the user and operating system based on principles of human-to-human dialogues. Conversation Design\'s primary goal is to help users complete their activities on a product, whether it is a transaction, a questions-and-answer, or a casual chat. The final result of Conversation Design is a conversational product with a natural and comfortable conversational flow.\\n\\n## How to start designing the conversation\\n\\nThere are 3 stages of designing conversation; requirement stage, high-level design stage, and detailed design stage. Each of them contains a question that you need to answer throughout the design process.\\n\\n### Requirements Stage\\n\\nAlways start your product with a clear goal in the requirement stage. It will help you identify your product’s use case and set the scope of your first phase product. You may start this stage by researching your target audience to help you build a user-friendly conversational AI product.\\n\\nIf you’re confused about whether your product will solve the problem, you may start your research with these 3 basic questions:\\n\\n1. Is a conversational product an appropriate solution for your product?\\n2. Does conversational product improve user experience?\\n3. Does conversational product add real value to your product?\\n\\nThese questions will help you identify what kind of solution you want to build for your end-users problems.\\n\\n### High-level Design Stage\\n\\nAfter fulfilling the requirements, the next step is getting into high-level design. Based on the use case, you can break down what are the key features are going to be. Then, with the features figured out, you should map out the content for your conversational UI.\\n\\nIn this stage, you may start designing your first conversation flow. Our Kata Platform is designed to build 3 types of conversational products; keyword-based bot, menu-based bot, and NLP-based bot.\\n\\n### Detailed Design Stage\\n\\nThe last stage is the detailed design, where you can develop a system persona for your conversational product. You can build a tone of voice to help your product stay consistent by creating a persona.\\nText is the primary medium that conversation designers use to convey messages to users, so good writing is the main key to a smooth user experience. When writing responses for conversational UI, always use plain words, short explanations, and the correct spelling. Remember to write based on your system persona and predefined style guide.\\n","code":"var Component=(()=>{var h=Object.create;var i=Object.defineProperty;var u=Object.getOwnPropertyDescriptor;var g=Object.getOwnPropertyNames;var p=Object.getPrototypeOf,m=Object.prototype.hasOwnProperty;var r=t=>i(t,\\"__esModule\\",{value:!0});var y=(t,s)=>()=>(s||t((s={exports:{}}).exports,s),s.exports),f=(t,s)=>{for(var o in s)i(t,o,{get:s[o],enumerable:!0})},c=(t,s,o,n)=>{if(s&&typeof s==\\"object\\"||typeof s==\\"function\\")for(let a of g(s))!m.call(t,a)&&(o||a!==\\"default\\")&&i(t,a,{get:()=>s[a],enumerable:!(n=u(s,a))||n.enumerable});return t},v=(t,s)=>c(r(i(t!=null?h(p(t)):{},\\"default\\",!s&&t&&t.__esModule?{get:()=>t.default,enumerable:!0}:{value:t,enumerable:!0})),t),w=(t=>(s,o)=>t&&t.get(s)||(o=c(r({}),s,1),t&&t.set(s,o),o))(typeof WeakMap!=\\"undefined\\"?new WeakMap:0);var d=y((q,l)=>{l.exports=_jsx_runtime});var N={};f(N,{default:()=>D,frontmatter:()=>b});var e=v(d()),b={id:\\"designing-conversation\\",title:\\"Designing Conversation\\",next:\\"start-your-first-chatbot\\",prev:\\"all-use-cases\\",section:\\"Documentation Content\\"};function x(t={}){let{wrapper:s}=t.components||{};return s?(0,e.jsx)(s,Object.assign({},t,{children:(0,e.jsx)(o,{})})):o();function o(){let n=Object.assign({h2:\\"h2\\",a:\\"a\\",span:\\"span\\",p:\\"p\\",h3:\\"h3\\",ol:\\"ol\\",li:\\"li\\"},t.components);return(0,e.jsxs)(e.Fragment,{children:[(0,e.jsxs)(n.h2,{id:\\"what-is-conversation-design\\",children:[(0,e.jsx)(n.a,{className:\\"anchor\\",href:\\"#what-is-conversation-design\\",children:(0,e.jsx)(n.span,{className:\\"icon icon-link\\"})}),\\"What is Conversation Design?\\"]}),`\\n`,(0,e.jsx)(n.p,{children:\\"Conversation Design is a process of designing conversation between the user and operating system based on principles of human-to-human dialogues. Conversation Design\'s primary goal is to help users complete their activities on a product, whether it is a transaction, a questions-and-answer, or a casual chat. The final result of Conversation Design is a conversational product with a natural and comfortable conversational flow.\\"}),`\\n`,(0,e.jsxs)(n.h2,{id:\\"how-to-start-designing-the-conversation\\",children:[(0,e.jsx)(n.a,{className:\\"anchor\\",href:\\"#how-to-start-designing-the-conversation\\",children:(0,e.jsx)(n.span,{className:\\"icon icon-link\\"})}),\\"How to start designing the conversation\\"]}),`\\n`,(0,e.jsx)(n.p,{children:\\"There are 3 stages of designing conversation; requirement stage, high-level design stage, and detailed design stage. Each of them contains a question that you need to answer throughout the design process.\\"}),`\\n`,(0,e.jsxs)(n.h3,{id:\\"requirements-stage\\",children:[(0,e.jsx)(n.a,{className:\\"anchor\\",href:\\"#requirements-stage\\",children:(0,e.jsx)(n.span,{className:\\"icon icon-link\\"})}),\\"Requirements Stage\\"]}),`\\n`,(0,e.jsx)(n.p,{children:\\"Always start your product with a clear goal in the requirement stage. It will help you identify your product\\\\u2019s use case and set the scope of your first phase product. You may start this stage by researching your target audience to help you build a user-friendly conversational AI product.\\"}),`\\n`,(0,e.jsx)(n.p,{children:\\"If you\\\\u2019re confused about whether your product will solve the problem, you may start your research with these 3 basic questions:\\"}),`\\n`,(0,e.jsxs)(n.ol,{children:[`\\n`,(0,e.jsx)(n.li,{children:\\"Is a conversational product an appropriate solution for your product?\\"}),`\\n`,(0,e.jsx)(n.li,{children:\\"Does conversational product improve user experience?\\"}),`\\n`,(0,e.jsx)(n.li,{children:\\"Does conversational product add real value to your product?\\"}),`\\n`]}),`\\n`,(0,e.jsx)(n.p,{children:\\"These questions will help you identify what kind of solution you want to build for your end-users problems.\\"}),`\\n`,(0,e.jsxs)(n.h3,{id:\\"high-level-design-stage\\",children:[(0,e.jsx)(n.a,{className:\\"anchor\\",href:\\"#high-level-design-stage\\",children:(0,e.jsx)(n.span,{className:\\"icon icon-link\\"})}),\\"High-level Design Stage\\"]}),`\\n`,(0,e.jsx)(n.p,{children:\\"After fulfilling the requirements, the next step is getting into high-level design. Based on the use case, you can break down what are the key features are going to be. Then, with the features figured out, you should map out the content for your conversational UI.\\"}),`\\n`,(0,e.jsx)(n.p,{children:\\"In this stage, you may start designing your first conversation flow. Our Kata Platform is designed to build 3 types of conversational products; keyword-based bot, menu-based bot, and NLP-based bot.\\"}),`\\n`,(0,e.jsxs)(n.h3,{id:\\"detailed-design-stage\\",children:[(0,e.jsx)(n.a,{className:\\"anchor\\",href:\\"#detailed-design-stage\\",children:(0,e.jsx)(n.span,{className:\\"icon icon-link\\"})}),\\"Detailed Design Stage\\"]}),`\\n`,(0,e.jsx)(n.p,{children:`The last stage is the detailed design, where you can develop a system persona for your conversational product. You can build a tone of voice to help your product stay consistent by creating a persona.\\nText is the primary medium that conversation designers use to convey messages to users, so good writing is the main key to a smooth user experience. When writing responses for conversational UI, always use plain words, short explanations, and the correct spelling. Remember to write based on your system persona and predefined style guide.`})]})}}var D=x;return w(N);})();\\n;return Component;"},"_id":"kata-platform/documentation-content/designing-conversation.mdx","_raw":{"sourceFilePath":"kata-platform/documentation-content/designing-conversation.mdx","sourceFileName":"designing-conversation.mdx","sourceFileDir":"kata-platform/documentation-content","contentType":"mdx","flattenedPath":"kata-platform/documentation-content/designing-conversation"},"type":"KataPlatform","slug":["documentation-content","designing-conversation"],"excerpt":"\\n## What is Conversation Design?\\n\\nConversation Design is a process of designing conversation between the user and operating system based on principles of human-to-human dialogues. Conversation Design\'s primary goal is to help users complete their activities on a product, whether it is a transaction, a questions-and-answer, or a casual chat"}');
;// CONCATENATED MODULE: ./.contentlayer/generated/KataPlatform/kata-platform__documentation-content__error-log.mdx.json
const kata_platform_documentation_content_error_log_mdx_namespaceObject = JSON.parse('{"id":"error-log","section":"Documentation Content","title":"Error Log","prev":"analyze-your-bot-conversations","next":"how-to-deploy-your-chatbot-using-generic-channel","body":{"raw":"\\n## Introduction\\n\\nTo build a great conversational experience for end-users, you must create a bot with nearly zero bugs. To achieve this, debugging during development is necessarily needed. You will receive any errors in the Kata Platform when publishing a bot. Also, we provide a feature named Error Logs to show any errors that happened in bot activity after release. Hence, it is an end-to-end error monitoring tool.\\n\\nKata Platform will show these error messages in 3 ways:\\n\\n1. When you publish a chatbot in Kata Platform (<a href=\\"https://platform.kata.ai\\" target=\\"_blank\\"><span>http</span>s://platform.kata.ai</a>).\\n2. When you execute a command `kata push` in Kata CLI.\\n3. When end-users receive the error message **“Maaf terjadi kesalahan pada sistem”**. FYI, you can change the error copy by following this guide. Kata Platform will log it into the Error Log feature. This feature is available in the menu: **Flow > Error Log**.\\n\\n<FigureImage\\n  alt=\\"Image 1 Alt\\"\\n  src=\\"/assets/images/products/kata-platform/error-log/image1.webp\\"\\n  caption={{ title: \'Figure 1\', description: \'Error Log feature is located.\' }}\\n  layout=\\"responsive\\"\\n  naturalHeight={1379}\\n  naturalWidth={1999}\\n/>\\n\\n## Available Error Messages\\n\\n<Table>\\n  <TableHead>\\n    <TableHeadCell>Error code</TableHeadCell>\\n    <TableHeadCell>Explanation</TableHeadCell>\\n  </TableHead>\\n  <TableBody>\\n    <TableBodyRow>\\n      <TableBodyCell>Error Code 1002-Message shall be either of type \'command\', \'text\' or \'data\'</TableBodyCell>\\n      <TableBodyCell>\\n        This error message commonly happens if you push your bot using Kata CLI. It means your defined intent is not\\n        included in the 3 available options: command, text, or data.\\n      </TableBodyCell>\\n    </TableBodyRow>\\n  </TableBody>\\n</Table>\\n\\n**Solution**\\n\\nDefine one of the intent types correctly:\\n\\n```\\nintents:\\n  myIntent:\\n    type: text | data | command\\n\\n```\\n\\n<Table>\\n  <TableHead>\\n    <TableHeadCell>Error code</TableHeadCell>\\n    <TableHeadCell>Explanation</TableHeadCell>\\n  </TableHead>\\n  <TableBody>\\n    <TableBodyRow>\\n      <TableBodyCell>Error Code 1003-Cannot find action type: `${desc.type}`</TableBodyCell>\\n      <TableBodyCell>\\n        This error message commonly happens if you push your bot via Kata CLI. It means the action type is not supported\\n        or has a typo on the action type description on KataML.\\n      </TableBodyCell>\\n    </TableBodyRow>\\n  </TableBody>\\n</Table>\\n\\nFor example, you have the following case.\\n\\n<FigureImage\\n  alt=\\"Image 2 Alt\\"\\n  src=\\"/assets/images/products/kata-platform/error-log/image2.webp\\"\\n  caption={{ title: \'Figure 2\', description: \'Error message example.\' }}\\n  layout=\\"responsive\\"\\n  naturalHeight={84}\\n  naturalWidth={908}\\n/>\\n\\nIt means your bot cannot find the action type `txt`.\\n\\n**Solution**\\n\\nIf your case is choosing not supported action type, then you must define one of correct action types:\\n\\n- `text` - returns one or multiple text bubble\\n- `image` - returns image\\n- `template` - returns rich action\\n- `command` - trigger command\\n- `api` - trigger an API call.\\n\\nHere is the example:\\n\\n```\\nmyAction:\\n  type: text\\n  options:\\n    text: hello $(data.name)!\\n\\n```\\n\\nIf the above solution still has issues, then compare the defined actions you have with action inside a state.\\n\\n<Table>\\n  <TableHead>\\n    <TableHeadCell>Error code</TableHeadCell>\\n    <TableHeadCell>Explanation</TableHeadCell>\\n  </TableHead>\\n  <TableBody>\\n    <TableBodyRow>\\n      <TableBodyCell>Error Code 1004-Invalid method head</TableBodyCell>\\n      <TableBodyCell>\\n        This error message commonly happens if you push your bot via Kata CLI or publish via Platform. The bot has an\\n        invalid method in the header or a typo in method definition.\\n      </TableBodyCell>\\n    </TableBodyRow>\\n  </TableBody>\\n</Table>\\n\\nFor example you have a case as follows.\\n\\n<FigureImage\\n  alt=\\"Image 3 Alt\\"\\n  src=\\"/assets/images/products/kata-platform/error-log/image3.webp\\"\\n  caption={{ title: \'Figure 3\', description: \'Error message example.\' }}\\n  layout=\\"responsive\\"\\n  naturalHeight={88}\\n  naturalWidth={1156}\\n/>\\n\\nIt means your method named `mappingAksBrand` head is not found.\\n\\n**Solution**\\n\\nYou must check your available bot method name, then it should be in these formats for the header:\\n\\n```\\nmethodName(methodParam)\\n```\\n\\nor\\n\\n```\\nmethod(methodParam, methodParam2, ...)\\n```\\n\\n<Table>\\n  <TableHead>\\n    <TableHeadCell>Error code</TableHeadCell>\\n    <TableHeadCell>Explanation</TableHeadCell>\\n  </TableHead>\\n  <TableBody>\\n    <TableBodyRow>\\n      <TableBodyCell>\\n        Error Code 1005-Cannot create method `${head}: {message}`\\n      </TableBodyCell>\\n      <TableBodyCell>\\n        This error message will show if you push-ing your bot via Kata CLI. It means there is an error when creating the\\n        method. In this error message, you will find a specific error in the method.\\n      </TableBodyCell>\\n    </TableBodyRow>\\n  </TableBody>\\n</Table>\\n\\nFor example you have a case as follows.\\n\\n<FigureImage\\n  alt=\\"Image 4 Alt\\"\\n  src=\\"/assets/images/products/kata-platform/error-log/image4.webp\\"\\n  caption={{ title: \'Figure 4\', description: \'Error message example.\' }}\\n  layout=\\"responsive\\"\\n  naturalHeight={75}\\n  naturalWidth={1611}\\n/>\\n\\nIt means your method named mappingTitle has an error or incomplete method where `)` symbol is located.\\n\\n**Solution**\\n\\nCheck the method name function syntax if there are any typos.\\n\\n<Table>\\n  <TableHead>\\n    <TableHeadCell>Error code</TableHeadCell>\\n    <TableHeadCell>Explanation</TableHeadCell>\\n  </TableHead>\\n  <TableBody>\\n    <TableBodyRow>\\n      <TableBodyCell>\\n        Error Code 1006-Error executing method `${method}: ${e.message}`\\n      </TableBodyCell>\\n      <TableBodyCell>\\n        This error message will show if your bot already deployed to any channels. It means there is a failure when\\n        executing method(s).\\n      </TableBodyCell>\\n    </TableBodyRow>\\n  </TableBody>\\n</Table>\\n\\nFor example you have a case as follows.\\n\\n<FigureImage\\n  alt=\\"Image 5 Alt\\"\\n  src=\\"/assets/images/products/kata-platform/error-log/image5.webp\\"\\n  caption={{ title: \'Figure 5\', description: \'Error message example.\' }}\\n  layout=\\"responsive\\"\\n  naturalHeight={432}\\n  naturalWidth={1999}\\n/>\\n\\nIt means there is an error when executing `deleteSoon` method.\\n\\n**Solution**\\n\\nCheck the method function syntax if there are any typos.\\n\\n<Table>\\n  <TableHead>\\n    <TableHeadCell>Error code</TableHeadCell>\\n    <TableHeadCell>Explanation</TableHeadCell>\\n  </TableHead>\\n  <TableBody>\\n    <TableBodyRow>\\n      <TableBodyCell>Error Code 1007-Method `${name}` is not defined</TableBodyCell>\\n      <TableBodyCell>\\n        This error message will show if you push your bot via Kata CLI. It means you create an action using a method,\\n        but not yet defined in KataML.\\n      </TableBodyCell>\\n    </TableBodyRow>\\n  </TableBody>\\n</Table>\\n\\n**Solution**\\n\\nYou must check the method name from the error message and write code for the method.\\n\\n<Table>\\n  <TableHead>\\n    <TableHeadCell>Error code</TableHeadCell>\\n    <TableHeadCell>Explanation</TableHeadCell>\\n  </TableHead>\\n  <TableBody>\\n    <TableBodyRow>\\n      <TableBodyCell>\\n        Error Code 1010-Failed creating mapping `${i}:${map[i]}`\\n      </TableBodyCell>\\n      <TableBodyCell>\\n        This error message will show if you push your bot via Kata CLI or publish via Platform. It means an error in\\n        doing mapping in transition.\\n      </TableBodyCell>\\n    </TableBodyRow>\\n  </TableBody>\\n</Table>\\n\\nFor example you have a case as Figure 6. It means your key mapping named `tryTransit` has an typo or incorrectly mapped with `tryValue` value.\\n\\n<FigureImage\\n  alt=\\"Image 6 Alt\\"\\n  src=\\"/assets/images/products/kata-platform/error-log/image6.webp\\"\\n  caption={{ title: \'Figure 6\', description: \'Error message example.\' }}\\n  layout=\\"responsive\\"\\n  naturalHeight={72}\\n  naturalWidth={1202}\\n/>\\n\\n**Solution**\\n\\nYou must check the mapping inside the transition, then fix any possible typos in expression syntax.\\n\\n<Table>\\n  <TableHead>\\n    <TableHeadCell>Error code</TableHeadCell>\\n    <TableHeadCell>Explanation</TableHeadCell>\\n  </TableHead>\\n  <TableBody>\\n    <TableBodyRow>\\n      <TableBodyCell>\\n        Error Code 1016-Error in flow `${this.id}` while updating state: `${e && e.message}`\\n      </TableBodyCell>\\n      <TableBodyCell>\\n        This error message will show if you are push-ing your bot via Kata CLI or publishing via Platform. It means\\n        there is a state error inside a flow. There are several error messages inside this error code:\\n      </TableBodyCell>\\n    </TableBodyRow>\\n  </TableBody>\\n</Table>\\n\\n1. If the error message shows, for example `Error in flow greetingFlow while updating state: null, details: No next state found from state init`. It means in `greetingFlow` flow is no next state found.\\n2. If the error message shows, for example: `Error in flow greetingFlow while updating state: null, details: Next state ‘greeting’ from ‘init’ doesn’t exist`. It means in `greetingFlow` flow, there is a state name `greeting` that is not defined yet. |\\n\\n**Solution**\\n\\nCheck the flow name, then check inside the state if any possible typos.\\n\\n<Table>\\n  <TableHead>\\n    <TableHeadCell>Error code</TableHeadCell>\\n    <TableHeadCell>Explanation</TableHeadCell>\\n  </TableHead>\\n  <TableBody>\\n    <TableBodyRow>\\n      <TableBodyCell>Error Code 1019-No flow selected.</TableBodyCell>\\n      <TableBodyCell>\\n        This error message will show if you push-ing your bot via Kata CLI or publish via Platform. It means\\n        conversation does not match with any flow.\\n      </TableBodyCell>\\n    </TableBodyRow>\\n  </TableBody>\\n</Table>\\n\\n**Solution**\\n\\nCheck whether you have any flow definition or fallback flow, also checking possible typos in flow name.\\n\\n<Table>\\n  <TableHead>\\n    <TableHeadCell>Error code</TableHeadCell>\\n    <TableHeadCell>Explanation</TableHeadCell>\\n  </TableHead>\\n  <TableBody>\\n    <TableBodyRow>\\n      <TableBodyCell>Error Code 1020-Cannot create Nlu from method: no method `${desc.method}` found</TableBodyCell>\\n      <TableBodyCell>\\n        This error message will show if you push-ing your bot via Kata CLI. It means bot can not create NLU from a\\n        method, because method definition does not exist.\\n      </TableBodyCell>\\n    </TableBodyRow>\\n  </TableBody>\\n</Table>\\n\\n**Solution**\\n\\nCheck definition in the method name.\\n\\n<Table>\\n  <TableHead>\\n    <TableHeadCell>Error code</TableHeadCell>\\n    <TableHeadCell>Explanation</TableHeadCell>\\n  </TableHead>\\n  <TableBody>\\n    <TableBodyRow>\\n      <TableBodyCell>\\n        Error Code 1022-Cannot find nlu: `${desc.nlu}` on [creating classifier or creating intent attributes]\\n      </TableBodyCell>\\n      <TableBodyCell>\\n        This error message will show if you push-ing your bot via Kata CLI. It means bot can not find NLU with specific\\n        name on creating intent **or** on creating intent attributes.\\n      </TableBodyCell>\\n    </TableBodyRow>\\n  </TableBody>\\n</Table>\\n\\nHere is the error example.\\n\\n<FigureImage\\n  alt=\\"Image 7 Alt\\"\\n  src=\\"/assets/images/products/kata-platform/error-log/image7.webp\\"\\n  caption={{ title: \'Figure 7\', description: \'Cannot find NLU named `misccc` in NLUs mapping.\' }}\\n  layout=\\"responsive\\"\\n  naturalHeight={86}\\n  naturalWidth={1352}\\n/>\\n\\n**Solution**\\n\\nCheck the NLU definitions in labels.\\n\\n<Table>\\n  <TableHead>\\n    <TableHeadCell>Error code</TableHeadCell>\\n    <TableHeadCell>Explanation</TableHeadCell>\\n  </TableHead>\\n  <TableBody>\\n    <TableBodyRow>\\n      <TableBodyCell>\\n        Error Code 1023-Error during post-processing Nlu `${this.id}`, details: `${e.message}`\\n      </TableBodyCell>\\n      <TableBodyCell>\\n        This error message will show if you push-ing your bot via Kata CLI. It means it has a failure when executing NLU\\n        processors.\\n      </TableBodyCell>\\n    </TableBodyRow>\\n  </TableBody>\\n</Table>\\n\\nHere is the error example:\\n\\n<FigureImage\\n  alt=\\"Image 8 Alt\\"\\n  src=\\"/assets/images/products/kata-platform/error-log/image8.webp\\"\\n  caption={{ title: \'Figure 8\', description: \'Cannot execute similar NLU with different expressions and processor.\' }}\\n  layout=\\"responsive\\"\\n  naturalHeight={1197}\\n  naturalWidth={1999}\\n/>\\n\\n**Solution**\\n\\nCheck method definition on your bot code.\\n\\n<Table>\\n  <TableHead>\\n    <TableHeadCell>Error code</TableHeadCell>\\n    <TableHeadCell>Explanation</TableHeadCell>\\n  </TableHead>\\n  <TableBody>\\n    <TableBodyRow>\\n      <TableBodyCell>Error Code 1028-No Initial State defined</TableBodyCell>\\n      <TableBodyCell>\\n        This error message will show if you push-ing your bot via Kata CLI and publish in Kata Platform.. It means the\\n        initial state is not found.\\n      </TableBodyCell>\\n    </TableBodyRow>\\n  </TableBody>\\n</Table>\\n\\nHere is the error example:\\n\\n<FigureImage\\n  alt=\\"Image 9 Alt\\"\\n  src=\\"/assets/images/products/kata-platform/error-log/image9.webp\\"\\n  caption={{ title: \'Figure 9\', description: \'Cannot publish because no state is found.\' }}\\n  layout=\\"responsive\\"\\n  naturalHeight={1250}\\n  naturalWidth={1999}\\n/>\\n\\n**Solution**\\n\\nAdd the initial state at least in a flow.\\n\\n<Table>\\n  <TableHead>\\n    <TableHeadCell>Error code</TableHeadCell>\\n    <TableHeadCell>Explanation</TableHeadCell>\\n  </TableHead>\\n  <TableBody>\\n    <TableBodyRow>\\n      <TableBodyCell>Error Code 1029-Cannot get state \'`${state}`\'</TableBodyCell>\\n      <TableBodyCell>\\n        This error message will show if you push-ing your bot via Kata CLI. It means there is no state with a certain\\n        name, or no initial state defined.\\n      </TableBodyCell>\\n    </TableBodyRow>\\n  </TableBody>\\n</Table>\\n\\n**Solution**\\n\\nCheck if any possible typos or incorrect definition inside the state name.\\n\\n<Table>\\n  <TableHead>\\n    <TableHeadCell>Error code</TableHeadCell>\\n    <TableHeadCell>Explanation</TableHeadCell>\\n  </TableHead>\\n  <TableBody>\\n    <TableBodyRow>\\n      <TableBodyCell>Error Code 1030-Invalid action in state `${i}`</TableBodyCell>\\n      <TableBodyCell>\\n        This error message will show if you push-ing your bot via Kata CLI. It means there is no action defined with a\\n        certain name in a certain state.\\n      </TableBodyCell>\\n    </TableBodyRow>\\n  </TableBody>\\n</Table>\\n\\n**Solution**\\n\\nChecking action definition or possible typos in action name, inside the state name.\\n\\n<Table>\\n  <TableHead>\\n    <TableHeadCell>Error code</TableHeadCell>\\n    <TableHeadCell>Explanation</TableHeadCell>\\n  </TableHead>\\n  <TableBody>\\n    <TableBodyRow>\\n      <TableBodyCell>\\n        Error Code 1031-Next state \'`${state}`\' from \'`${prevState}`\' doesn\'t exist\\n      </TableBodyCell>\\n      <TableBodyCell>\\n        This error message will show if you push-ing your bot via Kata CLI. It means there is no next state defined.\\n      </TableBodyCell>\\n    </TableBodyRow>\\n  </TableBody>\\n</Table>\\n\\n**Solution**\\n\\nCheck to the next state name whether it has typos or undefined yet.\\n\\n<Table>\\n  <TableHead>\\n    <TableHeadCell>Error code</TableHeadCell>\\n    <TableHeadCell>Explanation</TableHeadCell>\\n  </TableHead>\\n  <TableBody>\\n    <TableBodyRow>\\n      <TableBodyCell>Error Code 1032-No next state found from state `${meta.state}`</TableBodyCell>\\n      <TableBodyCell>\\n        This error message will show if you push-ing your bot via Kata CLI. It means there is no next state from the\\n        state name.\\n      </TableBodyCell>\\n    </TableBodyRow>\\n  </TableBody>\\n</Table>\\n\\n**Solution**\\n\\nCheck to the next state name whether it has typos or undefined yet.\\n\\n<Table>\\n  <TableHead>\\n    <TableHeadCell>Error code</TableHeadCell>\\n    <TableHeadCell>Explanation</TableHeadCell>\\n  </TableHead>\\n  <TableBody>\\n    <TableBodyRow>\\n      <TableBodyCell>\\n        Error Code 1033-Cannot execute enter mapper in state `${this.id}: ${e.message}`\\n      </TableBodyCell>\\n      <TableBodyCell>\\n        This error message will show if you push-ing your bot via Kata CLI. It means in `onEnter` mapping, there is\\n        incorrect syntax.\\n      </TableBodyCell>\\n    </TableBodyRow>\\n  </TableBody>\\n</Table>\\n\\n**Solution**\\n\\nCheck the mapping expression in `onEnter`.\\n\\n<Table>\\n  <TableHead>\\n    <TableHeadCell>Error code</TableHeadCell>\\n    <TableHeadCell>Explanation</TableHeadCell>\\n  </TableHead>\\n  <TableBody>\\n    <TableBodyRow>\\n      <TableBodyCell>Error Code 1036-Cannot find method `${name}` for process</TableBodyCell>\\n      <TableBodyCell>\\n        This error message will show if you push-ing your bot via Kata CLI. It means you cannot find methods defined as\\n        processors.\\n      </TableBodyCell>\\n    </TableBodyRow>\\n  </TableBody>\\n</Table>\\n\\n**Solution**\\n\\nCheck method definition on your bot code.\\n\\n<Table>\\n  <TableHead>\\n    <TableHeadCell>Error code</TableHeadCell>\\n    <TableHeadCell>Explanation</TableHeadCell>\\n  </TableHead>\\n  <TableBody>\\n    <TableBodyRow>\\n      <TableBodyCell>Error Code 1037-Cannot parse condition: `${cond}`</TableBodyCell>\\n      <TableBodyCell>\\n        This error message will show if you push-ing your bot via Kata CLI. It means there is an error on parsing\\n        conditional expressions.\\n      </TableBodyCell>\\n    </TableBodyRow>\\n  </TableBody>\\n</Table>\\n\\n**Solution**\\n\\nCheck for typos in actions, intents, and NLUs definitions.\\n\\n<Table>\\n  <TableHead>\\n    <TableHeadCell>Error code</TableHeadCell>\\n    <TableHeadCell>Explanation</TableHeadCell>\\n  </TableHead>\\n  <TableBody>\\n    <TableBodyRow>\\n      <TableBodyCell>\\n        Error Code 1038-Cannot recognize condition with type:`${ast.type}` and `op:${ast.operator}`\\n      </TableBodyCell>\\n      <TableBodyCell>\\n        This error message will show if you push-ing your bot via Kata CLI. It means the condition expression is not\\n        found.\\n      </TableBodyCell>\\n    </TableBodyRow>\\n  </TableBody>\\n</Table>\\n\\n**Solution**\\n\\nCheck your condition expression if there is any typos or incorrect syntax. Furthermore, you can check this operator list <a href=\\"https://www.w3schools.com/js/js_comparisons.asp\\">here</a>.\\n\\n<Table>\\n  <TableHead>\\n    <TableHeadCell>Error code</TableHeadCell>\\n    <TableHeadCell>Explanation</TableHeadCell>\\n  </TableHead>\\n  <TableBody>\\n    <TableBodyRow>\\n      <TableBodyCell>\\n        Error Code 1040-Error in flow `${this.id}` while classifying, details `${e && e.message}`\\n      </TableBodyCell>\\n      <TableBodyCell>\\n        This error message will show if you push-ing your bot via Kata CLI. It means there is an error when classifying\\n        intent.\\n      </TableBodyCell>\\n    </TableBodyRow>\\n  </TableBody>\\n</Table>\\n\\n**Solution**\\n\\nSee the message details for more info.\\n\\n<Table>\\n  <TableHead>\\n    <TableHeadCell>\\n      Error code\\n    </TableHeadCell>\\n    <TableHeadCell>\\n      Explanation\\n    </TableHeadCell>\\n  </TableHead>\\n  <TableBody>\\n    <TableBodyRow>\\n      <TableBodyCell>\\n        Error Code 1041-Error classifying intent `${this.id}` with classifier `${`\\n      </TableBodyCell>\\n      <TableBodyCell>\\n        This error message will show if you push-ing your bot via Kata CLI. It means there is an error when classifying intent.\\n      </TableBodyCell>\\n    </TableBodyRow>\\n  </TableBody>\\n</Table>\\n\\n**Solution**\\n\\nCheck the message details for more info.\\n\\n<Table>\\n  <TableHead>\\n    <TableHeadCell>Error code</TableHeadCell>\\n    <TableHeadCell>Explanation</TableHeadCell>\\n  </TableHead>\\n  <TableBody>\\n    <TableBodyRow>\\n      <TableBodyCell>Error Code 1047-Invalid nlu</TableBodyCell>\\n      <TableBodyCell>\\n        This error message will show if you push-ing your bot via Kata CLI. It means nluID is not recognized by the bot.\\n      </TableBodyCell>\\n    </TableBodyRow>\\n  </TableBody>\\n</Table>\\n\\n**Solution**\\n\\nCheck again with `nluID` if any possible typos.\\n\\n## Coming Soon\\n\\nWe try our best to provide detailed error messages and solutions. So, we will provide these error messages details with the solution soon.\\n\\n- `Error Code 1001: Error processing action ${this.id}, details ${e && e.message}`\\n- `Error Code 1008: Cannot handle expression, because no expr is defined`\\n- `Error Code 1009: No handler found for type:${ast.type} and op:${ast.operator}`\\n- `Error Code 1011: Max Recursion of ${maxRecursion} is reached.\\\\n\\\\n ${JSON.stringify({`\\n- `Error Code 1012: No command handler for \'${message.content}\'`\\n- `Error Code 1014: Error in flow ${this.id} while executing action, details: ${e.message}`\\n- `Error Code 1015: Error in flow ${this.id} while processing attributes, details: ${e && e.message}`\\n- `Error Code 1017: Error in flow ${this.id}: Cannot update state from \'${state}\' data: ${{ context, data, message: pMessage, }}`\\n- `Error Code 1018: Flow is not defined: \'${flowName}\'`\\n- `Error Code 1021: Cannot find nlu type: ${desc.type}`\\n- `Error Code 1024: Error parsing attribute ${i}, details: ${e && e.message}`\\n- `Error Code 1026: Session greater than limit (\\" + this.limitSessionSize / 1000 + \\"kB)`\\n- `Error Code 1027: No session`\\n- `Error Code 1034: Cannot execute exit mapper in state ${this.id}: ${e.message}`\\n- `Error Code 1035: Cannot execute transit mapper in state ${this.id}: ${e.message}`\\n- `Error Code 1039: Method ${desc.stateMapper} doesn\'t exists`\\n- `Error Code 1046: Converse Error, code: ${this.code}, message: ${this.message}, arguments: ${this.printOptions()}`\\n\\nPlease don’t hesitate to contact <a href=\\"mailto:support@kata.ai\\">support@kata.ai</a> if you found any errors above and need an ASAP solution. Thank you\\n","code":"var Component=(()=>{var w=Object.create;var m=Object.defineProperty;var E=Object.getOwnPropertyDescriptor;var b=Object.getOwnPropertyNames;var C=Object.getPrototypeOf,x=Object.prototype.hasOwnProperty;var u=o=>m(o,\\"__esModule\\",{value:!0});var I=(o,t)=>()=>(t||o((t={exports:{}}).exports,t),t.exports),v=(o,t)=>{for(var s in t)m(o,s,{get:t[s],enumerable:!0})},g=(o,t,s,n)=>{if(t&&typeof t==\\"object\\"||typeof t==\\"function\\")for(let h of b(t))!x.call(o,h)&&(s||h!==\\"default\\")&&m(o,h,{get:()=>t[h],enumerable:!(n=E(t,h))||n.enumerable});return o},$=(o,t)=>g(u(m(o!=null?w(C(o)):{},\\"default\\",!t&&o&&o.__esModule?{get:()=>o.default,enumerable:!0}:{value:o,enumerable:!0})),o),k=(o=>(t,s)=>o&&o.get(t)||(s=g(u({}),t,1),o&&o.set(t,s),s))(typeof WeakMap!=\\"undefined\\"?new WeakMap:0);var y=I((F,f)=>{f.exports=_jsx_runtime});var S={};v(S,{default:()=>L,frontmatter:()=>T});var e=$(y()),T={id:\\"error-log\\",title:\\"Error Log\\",prev:\\"analyze-your-bot-conversations\\",next:\\"how-to-deploy-your-chatbot-using-generic-channel\\",section:\\"Documentation Content\\"};function N(o={}){let{wrapper:t}=o.components||{};return t?(0,e.jsx)(t,Object.assign({},o,{children:(0,e.jsx)(s,{})})):s();function s(){let n=Object.assign({h2:\\"h2\\",a:\\"a\\",span:\\"span\\",p:\\"p\\",ol:\\"ol\\",li:\\"li\\",code:\\"code\\",strong:\\"strong\\",pre:\\"pre\\",ul:\\"ul\\"},o.components),{FigureImage:h,Table:l,TableHead:a,TableHeadCell:r,TableBody:d,TableBodyRow:c,TableBodyCell:i}=n;return h||p(\\"FigureImage\\",!0),l||p(\\"Table\\",!0),d||p(\\"TableBody\\",!0),i||p(\\"TableBodyCell\\",!0),c||p(\\"TableBodyRow\\",!0),a||p(\\"TableHead\\",!0),r||p(\\"TableHeadCell\\",!0),(0,e.jsxs)(e.Fragment,{children:[(0,e.jsxs)(n.h2,{id:\\"introduction\\",children:[(0,e.jsx)(n.a,{className:\\"anchor\\",href:\\"#introduction\\",children:(0,e.jsx)(n.span,{className:\\"icon icon-link\\"})}),\\"Introduction\\"]}),`\\n`,(0,e.jsx)(n.p,{children:\\"To build a great conversational experience for end-users, you must create a bot with nearly zero bugs. To achieve this, debugging during development is necessarily needed. You will receive any errors in the Kata Platform when publishing a bot. Also, we provide a feature named Error Logs to show any errors that happened in bot activity after release. Hence, it is an end-to-end error monitoring tool.\\"}),`\\n`,(0,e.jsx)(n.p,{children:\\"Kata Platform will show these error messages in 3 ways:\\"}),`\\n`,(0,e.jsxs)(n.ol,{children:[`\\n`,(0,e.jsxs)(n.li,{children:[\\"When you publish a chatbot in Kata Platform (\\",(0,e.jsxs)(\\"a\\",{href:\\"https://platform.kata.ai\\",target:\\"_blank\\",children:[(0,e.jsx)(\\"span\\",{children:\\"http\\"}),\\"s://platform.kata.ai\\"]}),\\").\\"]}),`\\n`,(0,e.jsxs)(n.li,{children:[\\"When you execute a command \\",(0,e.jsx)(n.code,{children:\\"kata push\\"}),\\" in Kata CLI.\\"]}),`\\n`,(0,e.jsxs)(n.li,{children:[\\"When end-users receive the error message \\",(0,e.jsx)(n.strong,{children:\\"\\\\u201CMaaf terjadi kesalahan pada sistem\\\\u201D\\"}),\\". FYI, you can change the error copy by following this guide. Kata Platform will log it into the Error Log feature. This feature is available in the menu: \\",(0,e.jsx)(n.strong,{children:\\"Flow > Error Log\\"}),\\".\\"]}),`\\n`]}),`\\n`,(0,e.jsx)(h,{alt:\\"Image 1 Alt\\",src:\\"/assets/images/products/kata-platform/error-log/image1.webp\\",caption:{title:\\"Figure 1\\",description:\\"Error Log feature is located.\\"},layout:\\"responsive\\",naturalHeight:1379,naturalWidth:1999}),`\\n`,(0,e.jsxs)(n.h2,{id:\\"available-error-messages\\",children:[(0,e.jsx)(n.a,{className:\\"anchor\\",href:\\"#available-error-messages\\",children:(0,e.jsx)(n.span,{className:\\"icon icon-link\\"})}),\\"Available Error Messages\\"]}),`\\n`,(0,e.jsxs)(l,{children:[(0,e.jsxs)(a,{children:[(0,e.jsx)(r,{children:\\"Error code\\"}),`\\n`,(0,e.jsx)(r,{children:\\"Explanation\\"})]}),(0,e.jsx)(d,{children:(0,e.jsxs)(c,{children:[(0,e.jsx)(i,{children:\\"Error Code 1002-Message shall be either of type \'command\', \'text\' or \'data\'\\"}),(0,e.jsx)(i,{children:(0,e.jsx)(n.p,{children:`This error message commonly happens if you push your bot using Kata CLI. It means your defined intent is not\\nincluded in the 3 available options: command, text, or data.`})})]})})]}),`\\n`,(0,e.jsx)(n.p,{children:(0,e.jsx)(n.strong,{children:\\"Solution\\"})}),`\\n`,(0,e.jsx)(n.p,{children:\\"Define one of the intent types correctly:\\"}),`\\n`,(0,e.jsx)(n.pre,{children:(0,e.jsxs)(n.code,{className:\\"code-highlight\\",children:[(0,e.jsx)(n.span,{className:\\"code-line\\",children:`intents:\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`  myIntent:\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`    type: text | data | command\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`\\n`})]})}),`\\n`,(0,e.jsxs)(l,{children:[(0,e.jsxs)(a,{children:[(0,e.jsx)(r,{children:\\"Error code\\"}),`\\n`,(0,e.jsx)(r,{children:\\"Explanation\\"})]}),(0,e.jsx)(d,{children:(0,e.jsxs)(c,{children:[(0,e.jsxs)(i,{children:[\\"Error Code 1003-Cannot find action type: \\",(0,e.jsx)(n.code,{children:\\"${desc.type}\\"})]}),(0,e.jsx)(i,{children:(0,e.jsx)(n.p,{children:`This error message commonly happens if you push your bot via Kata CLI. It means the action type is not supported\\nor has a typo on the action type description on KataML.`})})]})})]}),`\\n`,(0,e.jsx)(n.p,{children:\\"For example, you have the following case.\\"}),`\\n`,(0,e.jsx)(h,{alt:\\"Image 2 Alt\\",src:\\"/assets/images/products/kata-platform/error-log/image2.webp\\",caption:{title:\\"Figure 2\\",description:\\"Error message example.\\"},layout:\\"responsive\\",naturalHeight:84,naturalWidth:908}),`\\n`,(0,e.jsxs)(n.p,{children:[\\"It means your bot cannot find the action type \\",(0,e.jsx)(n.code,{children:\\"txt\\"}),\\".\\"]}),`\\n`,(0,e.jsx)(n.p,{children:(0,e.jsx)(n.strong,{children:\\"Solution\\"})}),`\\n`,(0,e.jsx)(n.p,{children:\\"If your case is choosing not supported action type, then you must define one of correct action types:\\"}),`\\n`,(0,e.jsxs)(n.ul,{children:[`\\n`,(0,e.jsxs)(n.li,{children:[(0,e.jsx)(n.code,{children:\\"text\\"}),\\" - returns one or multiple text bubble\\"]}),`\\n`,(0,e.jsxs)(n.li,{children:[(0,e.jsx)(n.code,{children:\\"image\\"}),\\" - returns image\\"]}),`\\n`,(0,e.jsxs)(n.li,{children:[(0,e.jsx)(n.code,{children:\\"template\\"}),\\" - returns rich action\\"]}),`\\n`,(0,e.jsxs)(n.li,{children:[(0,e.jsx)(n.code,{children:\\"command\\"}),\\" - trigger command\\"]}),`\\n`,(0,e.jsxs)(n.li,{children:[(0,e.jsx)(n.code,{children:\\"api\\"}),\\" - trigger an API call.\\"]}),`\\n`]}),`\\n`,(0,e.jsx)(n.p,{children:\\"Here is the example:\\"}),`\\n`,(0,e.jsx)(n.pre,{children:(0,e.jsxs)(n.code,{className:\\"code-highlight\\",children:[(0,e.jsx)(n.span,{className:\\"code-line\\",children:`myAction:\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`  type: text\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`  options:\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`    text: hello $(data.name)!\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`\\n`})]})}),`\\n`,(0,e.jsx)(n.p,{children:\\"If the above solution still has issues, then compare the defined actions you have with action inside a state.\\"}),`\\n`,(0,e.jsxs)(l,{children:[(0,e.jsxs)(a,{children:[(0,e.jsx)(r,{children:\\"Error code\\"}),`\\n`,(0,e.jsx)(r,{children:\\"Explanation\\"})]}),(0,e.jsx)(d,{children:(0,e.jsxs)(c,{children:[(0,e.jsx)(i,{children:\\"Error Code 1004-Invalid method head\\"}),(0,e.jsx)(i,{children:(0,e.jsx)(n.p,{children:`This error message commonly happens if you push your bot via Kata CLI or publish via Platform. The bot has an\\ninvalid method in the header or a typo in method definition.`})})]})})]}),`\\n`,(0,e.jsx)(n.p,{children:\\"For example you have a case as follows.\\"}),`\\n`,(0,e.jsx)(h,{alt:\\"Image 3 Alt\\",src:\\"/assets/images/products/kata-platform/error-log/image3.webp\\",caption:{title:\\"Figure 3\\",description:\\"Error message example.\\"},layout:\\"responsive\\",naturalHeight:88,naturalWidth:1156}),`\\n`,(0,e.jsxs)(n.p,{children:[\\"It means your method named \\",(0,e.jsx)(n.code,{children:\\"mappingAksBrand\\"}),\\" head is not found.\\"]}),`\\n`,(0,e.jsx)(n.p,{children:(0,e.jsx)(n.strong,{children:\\"Solution\\"})}),`\\n`,(0,e.jsx)(n.p,{children:\\"You must check your available bot method name, then it should be in these formats for the header:\\"}),`\\n`,(0,e.jsx)(n.pre,{children:(0,e.jsx)(n.code,{className:\\"code-highlight\\",children:(0,e.jsx)(n.span,{className:\\"code-line\\",children:`methodName(methodParam)\\n`})})}),`\\n`,(0,e.jsx)(n.p,{children:\\"or\\"}),`\\n`,(0,e.jsx)(n.pre,{children:(0,e.jsx)(n.code,{className:\\"code-highlight\\",children:(0,e.jsx)(n.span,{className:\\"code-line\\",children:`method(methodParam, methodParam2, ...)\\n`})})}),`\\n`,(0,e.jsxs)(l,{children:[(0,e.jsxs)(a,{children:[(0,e.jsx)(r,{children:\\"Error code\\"}),`\\n`,(0,e.jsx)(r,{children:\\"Explanation\\"})]}),(0,e.jsx)(d,{children:(0,e.jsxs)(c,{children:[(0,e.jsx)(i,{children:(0,e.jsxs)(n.p,{children:[\\"Error Code 1005-Cannot create method \\",(0,e.jsx)(n.code,{children:\\"${head}: {message}\\"})]})}),(0,e.jsx)(i,{children:(0,e.jsx)(n.p,{children:`This error message will show if you push-ing your bot via Kata CLI. It means there is an error when creating the\\nmethod. In this error message, you will find a specific error in the method.`})})]})})]}),`\\n`,(0,e.jsx)(n.p,{children:\\"For example you have a case as follows.\\"}),`\\n`,(0,e.jsx)(h,{alt:\\"Image 4 Alt\\",src:\\"/assets/images/products/kata-platform/error-log/image4.webp\\",caption:{title:\\"Figure 4\\",description:\\"Error message example.\\"},layout:\\"responsive\\",naturalHeight:75,naturalWidth:1611}),`\\n`,(0,e.jsxs)(n.p,{children:[\\"It means your method named mappingTitle has an error or incomplete method where \\",(0,e.jsx)(n.code,{children:\\")\\"}),\\" symbol is located.\\"]}),`\\n`,(0,e.jsx)(n.p,{children:(0,e.jsx)(n.strong,{children:\\"Solution\\"})}),`\\n`,(0,e.jsx)(n.p,{children:\\"Check the method name function syntax if there are any typos.\\"}),`\\n`,(0,e.jsxs)(l,{children:[(0,e.jsxs)(a,{children:[(0,e.jsx)(r,{children:\\"Error code\\"}),`\\n`,(0,e.jsx)(r,{children:\\"Explanation\\"})]}),(0,e.jsx)(d,{children:(0,e.jsxs)(c,{children:[(0,e.jsx)(i,{children:(0,e.jsxs)(n.p,{children:[\\"Error Code 1006-Error executing method \\",(0,e.jsx)(n.code,{children:\\"${method}: ${e.message}\\"})]})}),(0,e.jsx)(i,{children:(0,e.jsx)(n.p,{children:`This error message will show if your bot already deployed to any channels. It means there is a failure when\\nexecuting method(s).`})})]})})]}),`\\n`,(0,e.jsx)(n.p,{children:\\"For example you have a case as follows.\\"}),`\\n`,(0,e.jsx)(h,{alt:\\"Image 5 Alt\\",src:\\"/assets/images/products/kata-platform/error-log/image5.webp\\",caption:{title:\\"Figure 5\\",description:\\"Error message example.\\"},layout:\\"responsive\\",naturalHeight:432,naturalWidth:1999}),`\\n`,(0,e.jsxs)(n.p,{children:[\\"It means there is an error when executing \\",(0,e.jsx)(n.code,{children:\\"deleteSoon\\"}),\\" method.\\"]}),`\\n`,(0,e.jsx)(n.p,{children:(0,e.jsx)(n.strong,{children:\\"Solution\\"})}),`\\n`,(0,e.jsx)(n.p,{children:\\"Check the method function syntax if there are any typos.\\"}),`\\n`,(0,e.jsxs)(l,{children:[(0,e.jsxs)(a,{children:[(0,e.jsx)(r,{children:\\"Error code\\"}),`\\n`,(0,e.jsx)(r,{children:\\"Explanation\\"})]}),(0,e.jsx)(d,{children:(0,e.jsxs)(c,{children:[(0,e.jsxs)(i,{children:[\\"Error Code 1007-Method \\",(0,e.jsx)(n.code,{children:\\"${name}\\"}),\\" is not defined\\"]}),(0,e.jsx)(i,{children:(0,e.jsx)(n.p,{children:`This error message will show if you push your bot via Kata CLI. It means you create an action using a method,\\nbut not yet defined in KataML.`})})]})})]}),`\\n`,(0,e.jsx)(n.p,{children:(0,e.jsx)(n.strong,{children:\\"Solution\\"})}),`\\n`,(0,e.jsx)(n.p,{children:\\"You must check the method name from the error message and write code for the method.\\"}),`\\n`,(0,e.jsxs)(l,{children:[(0,e.jsxs)(a,{children:[(0,e.jsx)(r,{children:\\"Error code\\"}),`\\n`,(0,e.jsx)(r,{children:\\"Explanation\\"})]}),(0,e.jsx)(d,{children:(0,e.jsxs)(c,{children:[(0,e.jsx)(i,{children:(0,e.jsxs)(n.p,{children:[\\"Error Code 1010-Failed creating mapping \\",(0,e.jsx)(n.code,{children:\\"${i}:${map[i]}\\"})]})}),(0,e.jsx)(i,{children:(0,e.jsx)(n.p,{children:`This error message will show if you push your bot via Kata CLI or publish via Platform. It means an error in\\ndoing mapping in transition.`})})]})})]}),`\\n`,(0,e.jsxs)(n.p,{children:[\\"For example you have a case as Figure 6. It means your key mapping named \\",(0,e.jsx)(n.code,{children:\\"tryTransit\\"}),\\" has an typo or incorrectly mapped with \\",(0,e.jsx)(n.code,{children:\\"tryValue\\"}),\\" value.\\"]}),`\\n`,(0,e.jsx)(h,{alt:\\"Image 6 Alt\\",src:\\"/assets/images/products/kata-platform/error-log/image6.webp\\",caption:{title:\\"Figure 6\\",description:\\"Error message example.\\"},layout:\\"responsive\\",naturalHeight:72,naturalWidth:1202}),`\\n`,(0,e.jsx)(n.p,{children:(0,e.jsx)(n.strong,{children:\\"Solution\\"})}),`\\n`,(0,e.jsx)(n.p,{children:\\"You must check the mapping inside the transition, then fix any possible typos in expression syntax.\\"}),`\\n`,(0,e.jsxs)(l,{children:[(0,e.jsxs)(a,{children:[(0,e.jsx)(r,{children:\\"Error code\\"}),`\\n`,(0,e.jsx)(r,{children:\\"Explanation\\"})]}),(0,e.jsx)(d,{children:(0,e.jsxs)(c,{children:[(0,e.jsx)(i,{children:(0,e.jsxs)(n.p,{children:[\\"Error Code 1016-Error in flow \\",(0,e.jsx)(n.code,{children:\\"${this.id}\\"}),\\" while updating state: \\",(0,e.jsx)(n.code,{children:\\"${e && e.message}\\"})]})}),(0,e.jsx)(i,{children:(0,e.jsx)(n.p,{children:`This error message will show if you are push-ing your bot via Kata CLI or publishing via Platform. It means\\nthere is a state error inside a flow. There are several error messages inside this error code:`})})]})})]}),`\\n`,(0,e.jsxs)(n.ol,{children:[`\\n`,(0,e.jsxs)(n.li,{children:[\\"If the error message shows, for example \\",(0,e.jsx)(n.code,{children:\\"Error in flow greetingFlow while updating state: null, details: No next state found from state init\\"}),\\". It means in \\",(0,e.jsx)(n.code,{children:\\"greetingFlow\\"}),\\" flow is no next state found.\\"]}),`\\n`,(0,e.jsxs)(n.li,{children:[\\"If the error message shows, for example: \\",(0,e.jsx)(n.code,{children:\\"Error in flow greetingFlow while updating state: null, details: Next state \\\\u2018greeting\\\\u2019 from \\\\u2018init\\\\u2019 doesn\\\\u2019t exist\\"}),\\". It means in \\",(0,e.jsx)(n.code,{children:\\"greetingFlow\\"}),\\" flow, there is a state name \\",(0,e.jsx)(n.code,{children:\\"greeting\\"}),\\" that is not defined yet. |\\"]}),`\\n`]}),`\\n`,(0,e.jsx)(n.p,{children:(0,e.jsx)(n.strong,{children:\\"Solution\\"})}),`\\n`,(0,e.jsx)(n.p,{children:\\"Check the flow name, then check inside the state if any possible typos.\\"}),`\\n`,(0,e.jsxs)(l,{children:[(0,e.jsxs)(a,{children:[(0,e.jsx)(r,{children:\\"Error code\\"}),`\\n`,(0,e.jsx)(r,{children:\\"Explanation\\"})]}),(0,e.jsx)(d,{children:(0,e.jsxs)(c,{children:[(0,e.jsx)(i,{children:\\"Error Code 1019-No flow selected.\\"}),(0,e.jsx)(i,{children:(0,e.jsx)(n.p,{children:`This error message will show if you push-ing your bot via Kata CLI or publish via Platform. It means\\nconversation does not match with any flow.`})})]})})]}),`\\n`,(0,e.jsx)(n.p,{children:(0,e.jsx)(n.strong,{children:\\"Solution\\"})}),`\\n`,(0,e.jsx)(n.p,{children:\\"Check whether you have any flow definition or fallback flow, also checking possible typos in flow name.\\"}),`\\n`,(0,e.jsxs)(l,{children:[(0,e.jsxs)(a,{children:[(0,e.jsx)(r,{children:\\"Error code\\"}),`\\n`,(0,e.jsx)(r,{children:\\"Explanation\\"})]}),(0,e.jsx)(d,{children:(0,e.jsxs)(c,{children:[(0,e.jsxs)(i,{children:[\\"Error Code 1020-Cannot create Nlu from method: no method \\",(0,e.jsx)(n.code,{children:\\"${desc.method}\\"}),\\" found\\"]}),(0,e.jsx)(i,{children:(0,e.jsx)(n.p,{children:`This error message will show if you push-ing your bot via Kata CLI. It means bot can not create NLU from a\\nmethod, because method definition does not exist.`})})]})})]}),`\\n`,(0,e.jsx)(n.p,{children:(0,e.jsx)(n.strong,{children:\\"Solution\\"})}),`\\n`,(0,e.jsx)(n.p,{children:\\"Check definition in the method name.\\"}),`\\n`,(0,e.jsxs)(l,{children:[(0,e.jsxs)(a,{children:[(0,e.jsx)(r,{children:\\"Error code\\"}),`\\n`,(0,e.jsx)(r,{children:\\"Explanation\\"})]}),(0,e.jsx)(d,{children:(0,e.jsxs)(c,{children:[(0,e.jsx)(i,{children:(0,e.jsxs)(n.p,{children:[\\"Error Code 1022-Cannot find nlu: \\",(0,e.jsx)(n.code,{children:\\"${desc.nlu}\\"}),\\" on [creating classifier or creating intent attributes]\\"]})}),(0,e.jsx)(i,{children:(0,e.jsxs)(n.p,{children:[`This error message will show if you push-ing your bot via Kata CLI. It means bot can not find NLU with specific\\nname on creating intent `,(0,e.jsx)(n.strong,{children:\\"or\\"}),\\" on creating intent attributes.\\"]})})]})})]}),`\\n`,(0,e.jsx)(n.p,{children:\\"Here is the error example.\\"}),`\\n`,(0,e.jsx)(h,{alt:\\"Image 7 Alt\\",src:\\"/assets/images/products/kata-platform/error-log/image7.webp\\",caption:{title:\\"Figure 7\\",description:\\"Cannot find NLU named `misccc` in NLUs mapping.\\"},layout:\\"responsive\\",naturalHeight:86,naturalWidth:1352}),`\\n`,(0,e.jsx)(n.p,{children:(0,e.jsx)(n.strong,{children:\\"Solution\\"})}),`\\n`,(0,e.jsx)(n.p,{children:\\"Check the NLU definitions in labels.\\"}),`\\n`,(0,e.jsxs)(l,{children:[(0,e.jsxs)(a,{children:[(0,e.jsx)(r,{children:\\"Error code\\"}),`\\n`,(0,e.jsx)(r,{children:\\"Explanation\\"})]}),(0,e.jsx)(d,{children:(0,e.jsxs)(c,{children:[(0,e.jsx)(i,{children:(0,e.jsxs)(n.p,{children:[\\"Error Code 1023-Error during post-processing Nlu \\",(0,e.jsx)(n.code,{children:\\"${this.id}\\"}),\\", details: \\",(0,e.jsx)(n.code,{children:\\"${e.message}\\"})]})}),(0,e.jsx)(i,{children:(0,e.jsx)(n.p,{children:`This error message will show if you push-ing your bot via Kata CLI. It means it has a failure when executing NLU\\nprocessors.`})})]})})]}),`\\n`,(0,e.jsx)(n.p,{children:\\"Here is the error example:\\"}),`\\n`,(0,e.jsx)(h,{alt:\\"Image 8 Alt\\",src:\\"/assets/images/products/kata-platform/error-log/image8.webp\\",caption:{title:\\"Figure 8\\",description:\\"Cannot execute similar NLU with different expressions and processor.\\"},layout:\\"responsive\\",naturalHeight:1197,naturalWidth:1999}),`\\n`,(0,e.jsx)(n.p,{children:(0,e.jsx)(n.strong,{children:\\"Solution\\"})}),`\\n`,(0,e.jsx)(n.p,{children:\\"Check method definition on your bot code.\\"}),`\\n`,(0,e.jsxs)(l,{children:[(0,e.jsxs)(a,{children:[(0,e.jsx)(r,{children:\\"Error code\\"}),`\\n`,(0,e.jsx)(r,{children:\\"Explanation\\"})]}),(0,e.jsx)(d,{children:(0,e.jsxs)(c,{children:[(0,e.jsx)(i,{children:\\"Error Code 1028-No Initial State defined\\"}),(0,e.jsx)(i,{children:(0,e.jsx)(n.p,{children:`This error message will show if you push-ing your bot via Kata CLI and publish in Kata Platform.. It means the\\ninitial state is not found.`})})]})})]}),`\\n`,(0,e.jsx)(n.p,{children:\\"Here is the error example:\\"}),`\\n`,(0,e.jsx)(h,{alt:\\"Image 9 Alt\\",src:\\"/assets/images/products/kata-platform/error-log/image9.webp\\",caption:{title:\\"Figure 9\\",description:\\"Cannot publish because no state is found.\\"},layout:\\"responsive\\",naturalHeight:1250,naturalWidth:1999}),`\\n`,(0,e.jsx)(n.p,{children:(0,e.jsx)(n.strong,{children:\\"Solution\\"})}),`\\n`,(0,e.jsx)(n.p,{children:\\"Add the initial state at least in a flow.\\"}),`\\n`,(0,e.jsxs)(l,{children:[(0,e.jsxs)(a,{children:[(0,e.jsx)(r,{children:\\"Error code\\"}),`\\n`,(0,e.jsx)(r,{children:\\"Explanation\\"})]}),(0,e.jsx)(d,{children:(0,e.jsxs)(c,{children:[(0,e.jsxs)(i,{children:[\\"Error Code 1029-Cannot get state \'\\",(0,e.jsx)(n.code,{children:\\"${state}\\"}),\\"\'\\"]}),(0,e.jsx)(i,{children:(0,e.jsx)(n.p,{children:`This error message will show if you push-ing your bot via Kata CLI. It means there is no state with a certain\\nname, or no initial state defined.`})})]})})]}),`\\n`,(0,e.jsx)(n.p,{children:(0,e.jsx)(n.strong,{children:\\"Solution\\"})}),`\\n`,(0,e.jsx)(n.p,{children:\\"Check if any possible typos or incorrect definition inside the state name.\\"}),`\\n`,(0,e.jsxs)(l,{children:[(0,e.jsxs)(a,{children:[(0,e.jsx)(r,{children:\\"Error code\\"}),`\\n`,(0,e.jsx)(r,{children:\\"Explanation\\"})]}),(0,e.jsx)(d,{children:(0,e.jsxs)(c,{children:[(0,e.jsxs)(i,{children:[\\"Error Code 1030-Invalid action in state \\",(0,e.jsx)(n.code,{children:\\"${i}\\"})]}),(0,e.jsx)(i,{children:(0,e.jsx)(n.p,{children:`This error message will show if you push-ing your bot via Kata CLI. It means there is no action defined with a\\ncertain name in a certain state.`})})]})})]}),`\\n`,(0,e.jsx)(n.p,{children:(0,e.jsx)(n.strong,{children:\\"Solution\\"})}),`\\n`,(0,e.jsx)(n.p,{children:\\"Checking action definition or possible typos in action name, inside the state name.\\"}),`\\n`,(0,e.jsxs)(l,{children:[(0,e.jsxs)(a,{children:[(0,e.jsx)(r,{children:\\"Error code\\"}),`\\n`,(0,e.jsx)(r,{children:\\"Explanation\\"})]}),(0,e.jsx)(d,{children:(0,e.jsxs)(c,{children:[(0,e.jsx)(i,{children:(0,e.jsxs)(n.p,{children:[\\"Error Code 1031-Next state \'\\",(0,e.jsx)(n.code,{children:\\"${state}\\"}),\\"\' from \'\\",(0,e.jsx)(n.code,{children:\\"${prevState}\\"}),\\"\' doesn\'t exist\\"]})}),(0,e.jsx)(i,{children:(0,e.jsx)(n.p,{children:\\"This error message will show if you push-ing your bot via Kata CLI. It means there is no next state defined.\\"})})]})})]}),`\\n`,(0,e.jsx)(n.p,{children:(0,e.jsx)(n.strong,{children:\\"Solution\\"})}),`\\n`,(0,e.jsx)(n.p,{children:\\"Check to the next state name whether it has typos or undefined yet.\\"}),`\\n`,(0,e.jsxs)(l,{children:[(0,e.jsxs)(a,{children:[(0,e.jsx)(r,{children:\\"Error code\\"}),`\\n`,(0,e.jsx)(r,{children:\\"Explanation\\"})]}),(0,e.jsx)(d,{children:(0,e.jsxs)(c,{children:[(0,e.jsxs)(i,{children:[\\"Error Code 1032-No next state found from state \\",(0,e.jsx)(n.code,{children:\\"${meta.state}\\"})]}),(0,e.jsx)(i,{children:(0,e.jsx)(n.p,{children:`This error message will show if you push-ing your bot via Kata CLI. It means there is no next state from the\\nstate name.`})})]})})]}),`\\n`,(0,e.jsx)(n.p,{children:(0,e.jsx)(n.strong,{children:\\"Solution\\"})}),`\\n`,(0,e.jsx)(n.p,{children:\\"Check to the next state name whether it has typos or undefined yet.\\"}),`\\n`,(0,e.jsxs)(l,{children:[(0,e.jsxs)(a,{children:[(0,e.jsx)(r,{children:\\"Error code\\"}),`\\n`,(0,e.jsx)(r,{children:\\"Explanation\\"})]}),(0,e.jsx)(d,{children:(0,e.jsxs)(c,{children:[(0,e.jsx)(i,{children:(0,e.jsxs)(n.p,{children:[\\"Error Code 1033-Cannot execute enter mapper in state \\",(0,e.jsx)(n.code,{children:\\"${this.id}: ${e.message}\\"})]})}),(0,e.jsx)(i,{children:(0,e.jsxs)(n.p,{children:[\\"This error message will show if you push-ing your bot via Kata CLI. It means in \\",(0,e.jsx)(n.code,{children:\\"onEnter\\"}),` mapping, there is\\nincorrect syntax.`]})})]})})]}),`\\n`,(0,e.jsx)(n.p,{children:(0,e.jsx)(n.strong,{children:\\"Solution\\"})}),`\\n`,(0,e.jsxs)(n.p,{children:[\\"Check the mapping expression in \\",(0,e.jsx)(n.code,{children:\\"onEnter\\"}),\\".\\"]}),`\\n`,(0,e.jsxs)(l,{children:[(0,e.jsxs)(a,{children:[(0,e.jsx)(r,{children:\\"Error code\\"}),`\\n`,(0,e.jsx)(r,{children:\\"Explanation\\"})]}),(0,e.jsx)(d,{children:(0,e.jsxs)(c,{children:[(0,e.jsxs)(i,{children:[\\"Error Code 1036-Cannot find method \\",(0,e.jsx)(n.code,{children:\\"${name}\\"}),\\" for process\\"]}),(0,e.jsx)(i,{children:(0,e.jsx)(n.p,{children:`This error message will show if you push-ing your bot via Kata CLI. It means you cannot find methods defined as\\nprocessors.`})})]})})]}),`\\n`,(0,e.jsx)(n.p,{children:(0,e.jsx)(n.strong,{children:\\"Solution\\"})}),`\\n`,(0,e.jsx)(n.p,{children:\\"Check method definition on your bot code.\\"}),`\\n`,(0,e.jsxs)(l,{children:[(0,e.jsxs)(a,{children:[(0,e.jsx)(r,{children:\\"Error code\\"}),`\\n`,(0,e.jsx)(r,{children:\\"Explanation\\"})]}),(0,e.jsx)(d,{children:(0,e.jsxs)(c,{children:[(0,e.jsxs)(i,{children:[\\"Error Code 1037-Cannot parse condition: \\",(0,e.jsx)(n.code,{children:\\"${cond}\\"})]}),(0,e.jsx)(i,{children:(0,e.jsx)(n.p,{children:`This error message will show if you push-ing your bot via Kata CLI. It means there is an error on parsing\\nconditional expressions.`})})]})})]}),`\\n`,(0,e.jsx)(n.p,{children:(0,e.jsx)(n.strong,{children:\\"Solution\\"})}),`\\n`,(0,e.jsx)(n.p,{children:\\"Check for typos in actions, intents, and NLUs definitions.\\"}),`\\n`,(0,e.jsxs)(l,{children:[(0,e.jsxs)(a,{children:[(0,e.jsx)(r,{children:\\"Error code\\"}),`\\n`,(0,e.jsx)(r,{children:\\"Explanation\\"})]}),(0,e.jsx)(d,{children:(0,e.jsxs)(c,{children:[(0,e.jsx)(i,{children:(0,e.jsxs)(n.p,{children:[\\"Error Code 1038-Cannot recognize condition with type:\\",(0,e.jsx)(n.code,{children:\\"${ast.type}\\"}),\\" and \\",(0,e.jsx)(n.code,{children:\\"op:${ast.operator}\\"})]})}),(0,e.jsx)(i,{children:(0,e.jsx)(n.p,{children:`This error message will show if you push-ing your bot via Kata CLI. It means the condition expression is not\\nfound.`})})]})})]}),`\\n`,(0,e.jsx)(n.p,{children:(0,e.jsx)(n.strong,{children:\\"Solution\\"})}),`\\n`,(0,e.jsxs)(n.p,{children:[\\"Check your condition expression if there is any typos or incorrect syntax. Furthermore, you can check this operator list \\",(0,e.jsx)(\\"a\\",{href:\\"https://www.w3schools.com/js/js_comparisons.asp\\",children:\\"here\\"}),\\".\\"]}),`\\n`,(0,e.jsxs)(l,{children:[(0,e.jsxs)(a,{children:[(0,e.jsx)(r,{children:\\"Error code\\"}),`\\n`,(0,e.jsx)(r,{children:\\"Explanation\\"})]}),(0,e.jsx)(d,{children:(0,e.jsxs)(c,{children:[(0,e.jsx)(i,{children:(0,e.jsxs)(n.p,{children:[\\"Error Code 1040-Error in flow \\",(0,e.jsx)(n.code,{children:\\"${this.id}\\"}),\\" while classifying, details \\",(0,e.jsx)(n.code,{children:\\"${e && e.message}\\"})]})}),(0,e.jsx)(i,{children:(0,e.jsx)(n.p,{children:`This error message will show if you push-ing your bot via Kata CLI. It means there is an error when classifying\\nintent.`})})]})})]}),`\\n`,(0,e.jsx)(n.p,{children:(0,e.jsx)(n.strong,{children:\\"Solution\\"})}),`\\n`,(0,e.jsx)(n.p,{children:\\"See the message details for more info.\\"}),`\\n`,(0,e.jsxs)(l,{children:[(0,e.jsxs)(a,{children:[(0,e.jsx)(r,{children:(0,e.jsx)(n.p,{children:\\"Error code\\"})}),(0,e.jsx)(r,{children:(0,e.jsx)(n.p,{children:\\"Explanation\\"})})]}),(0,e.jsx)(d,{children:(0,e.jsxs)(c,{children:[(0,e.jsx)(i,{children:(0,e.jsxs)(n.p,{children:[\\"Error Code 1041-Error classifying intent \\",(0,e.jsx)(n.code,{children:\\"${this.id}\\"}),\\" with classifier \\",(0,e.jsx)(n.code,{children:\\"${\\"})]})}),(0,e.jsx)(i,{children:(0,e.jsx)(n.p,{children:\\"This error message will show if you push-ing your bot via Kata CLI. It means there is an error when classifying intent.\\"})})]})})]}),`\\n`,(0,e.jsx)(n.p,{children:(0,e.jsx)(n.strong,{children:\\"Solution\\"})}),`\\n`,(0,e.jsx)(n.p,{children:\\"Check the message details for more info.\\"}),`\\n`,(0,e.jsxs)(l,{children:[(0,e.jsxs)(a,{children:[(0,e.jsx)(r,{children:\\"Error code\\"}),`\\n`,(0,e.jsx)(r,{children:\\"Explanation\\"})]}),(0,e.jsx)(d,{children:(0,e.jsxs)(c,{children:[(0,e.jsx)(i,{children:\\"Error Code 1047-Invalid nlu\\"}),(0,e.jsx)(i,{children:(0,e.jsx)(n.p,{children:\\"This error message will show if you push-ing your bot via Kata CLI. It means nluID is not recognized by the bot.\\"})})]})})]}),`\\n`,(0,e.jsx)(n.p,{children:(0,e.jsx)(n.strong,{children:\\"Solution\\"})}),`\\n`,(0,e.jsxs)(n.p,{children:[\\"Check again with \\",(0,e.jsx)(n.code,{children:\\"nluID\\"}),\\" if any possible typos.\\"]}),`\\n`,(0,e.jsxs)(n.h2,{id:\\"coming-soon\\",children:[(0,e.jsx)(n.a,{className:\\"anchor\\",href:\\"#coming-soon\\",children:(0,e.jsx)(n.span,{className:\\"icon icon-link\\"})}),\\"Coming Soon\\"]}),`\\n`,(0,e.jsx)(n.p,{children:\\"We try our best to provide detailed error messages and solutions. So, we will provide these error messages details with the solution soon.\\"}),`\\n`,(0,e.jsxs)(n.ul,{children:[`\\n`,(0,e.jsx)(n.li,{children:(0,e.jsx)(n.code,{children:\\"Error Code 1001: Error processing action ${this.id}, details ${e && e.message}\\"})}),`\\n`,(0,e.jsx)(n.li,{children:(0,e.jsx)(n.code,{children:\\"Error Code 1008: Cannot handle expression, because no expr is defined\\"})}),`\\n`,(0,e.jsx)(n.li,{children:(0,e.jsx)(n.code,{children:\\"Error Code 1009: No handler found for type:${ast.type} and op:${ast.operator}\\"})}),`\\n`,(0,e.jsx)(n.li,{children:(0,e.jsx)(n.code,{children:\\"Error Code 1011: Max Recursion of ${maxRecursion} is reached.\\\\\\\\n\\\\\\\\n ${JSON.stringify({\\"})}),`\\n`,(0,e.jsx)(n.li,{children:(0,e.jsx)(n.code,{children:\\"Error Code 1012: No command handler for \'${message.content}\'\\"})}),`\\n`,(0,e.jsx)(n.li,{children:(0,e.jsx)(n.code,{children:\\"Error Code 1014: Error in flow ${this.id} while executing action, details: ${e.message}\\"})}),`\\n`,(0,e.jsx)(n.li,{children:(0,e.jsx)(n.code,{children:\\"Error Code 1015: Error in flow ${this.id} while processing attributes, details: ${e && e.message}\\"})}),`\\n`,(0,e.jsx)(n.li,{children:(0,e.jsx)(n.code,{children:\\"Error Code 1017: Error in flow ${this.id}: Cannot update state from \'${state}\' data: ${{ context, data, message: pMessage, }}\\"})}),`\\n`,(0,e.jsx)(n.li,{children:(0,e.jsx)(n.code,{children:\\"Error Code 1018: Flow is not defined: \'${flowName}\'\\"})}),`\\n`,(0,e.jsx)(n.li,{children:(0,e.jsx)(n.code,{children:\\"Error Code 1021: Cannot find nlu type: ${desc.type}\\"})}),`\\n`,(0,e.jsx)(n.li,{children:(0,e.jsx)(n.code,{children:\\"Error Code 1024: Error parsing attribute ${i}, details: ${e && e.message}\\"})}),`\\n`,(0,e.jsx)(n.li,{children:(0,e.jsx)(n.code,{children:\'Error Code 1026: Session greater than limit (\\" + this.limitSessionSize / 1000 + \\"kB)\'})}),`\\n`,(0,e.jsx)(n.li,{children:(0,e.jsx)(n.code,{children:\\"Error Code 1027: No session\\"})}),`\\n`,(0,e.jsx)(n.li,{children:(0,e.jsx)(n.code,{children:\\"Error Code 1034: Cannot execute exit mapper in state ${this.id}: ${e.message}\\"})}),`\\n`,(0,e.jsx)(n.li,{children:(0,e.jsx)(n.code,{children:\\"Error Code 1035: Cannot execute transit mapper in state ${this.id}: ${e.message}\\"})}),`\\n`,(0,e.jsx)(n.li,{children:(0,e.jsx)(n.code,{children:\\"Error Code 1039: Method ${desc.stateMapper} doesn\'t exists\\"})}),`\\n`,(0,e.jsx)(n.li,{children:(0,e.jsx)(n.code,{children:\\"Error Code 1046: Converse Error, code: ${this.code}, message: ${this.message}, arguments: ${this.printOptions()}\\"})}),`\\n`]}),`\\n`,(0,e.jsxs)(n.p,{children:[\\"Please don\\\\u2019t hesitate to contact \\",(0,e.jsx)(\\"a\\",{href:\\"mailto:support@kata.ai\\",children:(0,e.jsx)(n.a,{href:\\"mailto:support@kata.ai\\",children:\\"support@kata.ai\\"})}),\\" if you found any errors above and need an ASAP solution. Thank you\\"]})]})}}var L=N;function p(o,t){throw new Error(\\"Expected \\"+(t?\\"component\\":\\"object\\")+\\" `\\"+o+\\"` to be defined: you likely forgot to import, pass, or provide it.\\")}return k(S);})();\\n;return Component;"},"_id":"kata-platform/documentation-content/error-log.mdx","_raw":{"sourceFilePath":"kata-platform/documentation-content/error-log.mdx","sourceFileName":"error-log.mdx","sourceFileDir":"kata-platform/documentation-content","contentType":"mdx","flattenedPath":"kata-platform/documentation-content/error-log"},"type":"KataPlatform","slug":["documentation-content","error-log"],"excerpt":"\\n## Introduction\\n\\nTo build a great conversational experience for end-users, you must create a bot with nearly zero bugs. To achieve this, debugging during development is necessarily needed"}');
;// CONCATENATED MODULE: ./.contentlayer/generated/KataPlatform/kata-platform__documentation-content__start-your-first-chatbot.mdx.json
const kata_platform_documentation_content_start_your_first_chatbot_mdx_namespaceObject = JSON.parse('{"id":"start-your-first-chatbot","section":"Documentation Content","title":"Start Your First Chatbot","prev":"designing-conversation","next":"analyze-your-bot-conversations","body":{"raw":"\\nA chatbot is an application that allows humans to have online conversations with a computer via text or voice. This tutorial will create a simple chatbot using the Kata Platform. So, let’s get started.\\n\\n## Video tutorial\\n\\nYou can watch the tutorial to start your first chatbot or follow the steps in this documentation\\n\\n<YoutubeEmbedWrapper>\\n  <YoutubeEmbed id=\\"OYkUylw2x_o\\" title=\\"Start Your First Chatbot Tutorial\\" />\\n</YoutubeEmbedWrapper>\\n\\n## Registration and Login\\n\\n<YoutubeEmbedWrapper>\\n  <YoutubeEmbed id=\\"H83sXg3Wvas\\" title=\\"Registration and Login\\" />\\n</YoutubeEmbedWrapper>\\n\\n1. Open your browser and enter the URL <a href=\\"https://platform.kata.ai\\" target=\\"_blank\\"><span>http</span>s://platform.kata.ai/</a>.\\n2. Register your data in the Kata Platform by filling in the required fields.\\n\\n<FigureImage\\n  alt=\\"Image 1 Alt\\"\\n  src=\\"/assets/images/products/kata-platform/start-your-first-chatbot/image1.webp\\"\\n  caption={{ title: \'Figure 1\', description: \'Registration page in Kata Platform\' }}\\n  layout=\\"responsive\\"\\n  naturalHeight={1019}\\n  naturalWidth={1999}\\n/>\\n\\n3. After filling in all the data, click **Sign Up**. We will send a verification email to your registered email.\\n4. Continue to verify your account by entering the password to continue the registration step.\\n5. Login with your account\\n\\nIn this step, you will create a simple chatbot as in the image below. Let’s start.\\n\\n<FigureImage\\n  alt=\\"Image 2 Alt\\"\\n  src=\\"/assets/images/products/kata-platform/start-your-first-chatbot/image2.webp\\"\\n  caption={{ title: \'Figure 2\', description: \'Simple chatbot example.\' }}\\n  layout=\\"responsive\\"\\n  naturalHeight={439}\\n  naturalWidth={1033}\\n/>\\n\\n## Create a Project\\n\\n<YoutubeEmbedWrapper>\\n  <YoutubeEmbed id=\\"s92bMsSC5gM\\" params=\\"list=UUrud2GevnuhBNM7C7RjakVg\\" title=\\"Create a Project\\" />\\n</YoutubeEmbedWrapper>\\n\\nYou will see all projects in the project dashboard. A project consists of bot design, NLU, and CMS.\\n\\n1. Click **Create Project** to create a new project.\\n\\n<FigureImage\\n  alt=\\"Image 3 Alt\\"\\n  src=\\"/assets/images/products/kata-platform/start-your-first-chatbot/image3.webp\\"\\n  caption={{ title: \'Figure 3\', description: \'Dashboard project\' }}\\n  layout=\\"responsive\\"\\n  naturalHeight={880}\\n  naturalWidth={1890}\\n/>\\n\\n2. Fill in project detail, then click **Create Project**.\\n3. After the project has been created, you will be redirected to the **Conversation Flow** page to create flow, state, and action.\\n4. Congratulations, you successfully created a new project.\\n\\n## Create a Flow\\n\\n<YoutubeEmbedWrapper>\\n  <YoutubeEmbed id=\\"jA5oP13_cGY\\" params=\\"list=UUrud2GevnuhBNM7C7RjakVg\\" title=\\"Create a Flow\\" />\\n</YoutubeEmbedWrapper>\\n\\nFlow is a conversation chatbot flow. In this simple tutorial, you will create 1 flow and use 1 default flow. Default flow is a fallback flow or a flow to answer if questions are not understandable by a chatbot.\\n\\n1. In the Conversation Flow, click the **Create Flow**.\\n2. Fill in the flow name hello, then click **Create**. If a flow is successfully created, it will show in the Conversation Flows sidebar.\\n\\n<FigureImage\\n  alt=\\"Image 4 Alt\\"\\n  src=\\"/assets/images/products/kata-platform/start-your-first-chatbot/image4.webp\\"\\n  caption={{ title: \'Figure 4\', description: \'New flow name “hello”\' }}\\n  layout=\\"responsive\\"\\n  naturalHeight={916}\\n  naturalWidth={1938}\\n/>\\n\\n## Create a State\\n\\n<YoutubeEmbedWrapper>\\n  <YoutubeEmbed id=\\"Yf6cOQ7jYTw\\" params=\\"list=UUrud2GevnuhBNM7C7RjakVg\\" title=\\"Create a Flow\\" />\\n</YoutubeEmbedWrapper>\\n\\nThe state is a step in a conversation. A flow must have 1 state called the initial state, and 1 state called the end state.\\n\\nIn this tutorial, you will create 2 states in the flow “hello”, which are “init” state and “hello” state. “Init” state will become the initial state, and the “hello” state becomes the end state.\\n\\n1. Click the icon \\"+\\" in the **Conversation Flow** menu.\\n\\n<FigureImage\\n  alt=\\"Image 5 Alt\\"\\n  src=\\"/assets/images/products/kata-platform/start-your-first-chatbot/image5.webp\\"\\n  caption={{ title: \'Figure 5\', description: \'Button “+” to create a new state\' }}\\n  layout=\\"responsive\\"\\n  naturalHeight={814}\\n  naturalWidth={1333}\\n/>\\n\\n2. In this step, you will create an initial state. Fill in the “init” state, then turn on the toggle Initial State to set it as the initial state.\\n\\n<FigureImage\\n  alt=\\"Image 6 Alt\\"\\n  src=\\"/assets/images/products/kata-platform/start-your-first-chatbot/image6.webp\\"\\n  caption={{ title: \'Figure 6\', description: \'Create a state name “init”\' }}\\n  layout=\\"responsive\\"\\n  naturalHeight={883}\\n  naturalWidth={559}\\n/>\\n\\n3. Next, create a “hello” state. This state will be an end state, so you must turn on the End State toggle. Do a similar step with the second step.\\n\\nIn this step, you will get an error that an end state must have at least 1 action. So, the next step is to create an action in the “hello” state.\\n\\n## Create an Action\\n\\n<YoutubeEmbedWrapper>\\n  <YoutubeEmbed id=\\"3XkZlqukvzU\\" params=\\"list=UUrud2GevnuhBNM7C7RjakVg\\" title=\\"Create a Flow\\" />\\n</YoutubeEmbedWrapper>\\n\\nAction is a bot response in text, images, buttons, interactive messages such as a carousel in LINE, a generic template in FB Messenger, and others. A state must have at least 1 action, except in the initial state. This tutorial will create a text action in the “hello” state.\\n\\n1. Click in the “hello” state, then it will show a form on the right screen.\\n2. To create a new action, click on the **Add action** button.\\n\\n<FigureImage\\n  alt=\\"Image 7 Alt\\"\\n  src=\\"/assets/images/products/kata-platform/start-your-first-chatbot/image7.webp\\"\\n  caption={{ title: \'Figure 7\', description: \'Add new action\' }}\\n  layout=\\"responsive\\"\\n  naturalHeight={877}\\n  naturalWidth={561}\\n/>\\n\\n3. Click on the “+” icon. Next, it will show various available actions. Choose action **Text**.\\n\\n<FigureImage\\n  alt=\\"Image 8 Alt\\"\\n  src=\\"/assets/images/products/kata-platform/start-your-first-chatbot/image8.webp\\"\\n  caption={{ title: \'Figure 8\', description: \'Input new action\' }}\\n  layout=\\"responsive\\"\\n  naturalHeight={1332}\\n  naturalWidth={1594}\\n/>\\n\\n<FigureImage\\n  alt=\\"Image 9 Alt\\"\\n  src=\\"/assets/images/products/kata-platform/start-your-first-chatbot/image9.webp\\"\\n  caption={{ title: \'Figure 9\', description: \'Input Text action\' }}\\n  layout=\\"responsive\\"\\n  naturalHeight={1838}\\n  naturalWidth={1930}\\n/>\\n\\n4. After choosing a Text action, it will show an interface like in the image below. Input action name, then click Add Variant button to input text response.\\n\\n<FigureImage\\n  alt=\\"Image 10 Alt\\"\\n  src=\\"/assets/images/products/kata-platform/start-your-first-chatbot/image10.webp\\"\\n  caption={{ title: \'Figure 10\', description: \'Input text response in bot\' }}\\n  layout=\\"responsive\\"\\n  naturalHeight={1806}\\n  naturalWidth={1999}\\n/>\\n\\n5. Finishing your action by clicking the **Create Action** button.\\n6. Then, finalize the state by clicking the **Create** button.\\n\\n## Create an Intent\\n\\n<YoutubeEmbedWrapper>\\n  <YoutubeEmbed id=\\"Xd-jH20VMRs\\" params=\\"list=UUrud2GevnuhBNM7C7RjakVg\\" title=\\"Create an Intent\\" />\\n</YoutubeEmbedWrapper>\\n\\nA chatbot needs to understand end-users input to show correct action or bot response. The intent will recognize input in the Kata Platform by checking keywords, NL, or regex. End-user is a term for chatbot users.\\n\\nThis step will create an intent to catch when end-users greet the chatbot.\\n\\n1. In the “hello” flow, choose the **Intent** menu. Next, click **Create Intent**.\\n\\n<FigureImage\\n  alt=\\"Image 11 Alt\\"\\n  src=\\"/assets/images/products/kata-platform/start-your-first-chatbot/image11.webp\\"\\n  caption={{ title: \'Figure 11\', description: \'The page to create a new intent\' }}\\n  layout=\\"responsive\\"\\n  naturalHeight={661}\\n  naturalWidth={1168}\\n/>\\n\\n2. Input intent detail with name “helloIntent”. Then, turn on toggle **As Initial** to create a trigger in the chatbot and execute the “hello” flow.\\n3. Next, continue to choose the **Text** type. Input a condition to make the chatbot execute the intent when the end-user sends the message “Hello” or “/start”:\\n\\n```\\ncontent == ‘Hello’ || content == “/start”\\n```\\n\\n4. Click the Create button to finish creating intent.\\n\\n<FigureImage\\n  alt=\\"Image 12 Alt\\"\\n  src=\\"/assets/images/products/kata-platform/start-your-first-chatbot/image12.webp\\"\\n  caption={{ title: \'Figure 12\', description: \'Create helloIntent to recognize greetings from end-users.\' }}\\n  layout=\\"responsive\\"\\n  naturalHeight={586}\\n  naturalWidth={1330}\\n/>\\n\\n## Create a Transition\\n\\n<YoutubeEmbedWrapper>\\n  <YoutubeEmbed id=\\"hx-zs1EUqSg\\" params=\\"v=hx-zs1EUqSg&list=UUrud2GevnuhBNM7C7RjakVg\\" title=\\"Create a Transition\\" />\\n</YoutubeEmbedWrapper>\\n\\nTransition is a procedure to move from one state to another state if a condition is fulfilled. Create transition by pulling\\na line from the source state to the destination state, like the image below.\\n\\n<FigureImage\\n  alt=\\"Image 13 Alt\\"\\n  src=\\"/assets/images/products/kata-platform/start-your-first-chatbot/image13.webp\\"\\n  caption={{ title: \'Figure 13\', description: \'Transition between states.\' }}\\n  layout=\\"responsive\\"\\n  naturalHeight={489}\\n  naturalWidth={1170}\\n/>\\n\\n1. In this step, you will create a transition between the “init” state and the “hello” state by pulling a line. If you succeed to create a transition, it will show a form on the right screen.\\n2. Then, input condition detail to create transition can be executed if an end-user input is caught by “helloIntent” intent:\\n\\n```\\nintent == ‘helloIntent’\\n```\\n\\n3. Click the **Save** button to finish creating the transition.\\n\\n## Publish Bot\\n\\n<YoutubeEmbedWrapper>\\n  <YoutubeEmbed id=\\"xsOc9NPNBSg\\" params=\\"list=UUrud2GevnuhBNM7C7RjakVg\\" title=\\"Publish Bot\\" />\\n</YoutubeEmbedWrapper>\\n\\nThis publish feature is useful to save changes in the form of revision numbers. The Publish button can be found on all Flow pages.\\n\\n1. In this step, you will save the created bot design. Click the **Publish** button which is placed in the top right corner.\\n\\n<FigureImage\\n  alt=\\"Image 14 Alt\\"\\n  src=\\"/assets/images/products/kata-platform/start-your-first-chatbot/image14.webp\\"\\n  caption={{ title: \'Figure 14\', description: \'Publish button.\' }}\\n  layout=\\"responsive\\"\\n  naturalHeight={811}\\n  naturalWidth={1606}\\n/>\\n\\n2. To ensure your bot is stored correctly, enter the Revision List menu. The revision list will show every new revision at the top.\\n\\n<FigureImage\\n  alt=\\"Image 15 Alt\\"\\n  src=\\"/assets/images/products/kata-platform/start-your-first-chatbot/image15.webp\\"\\n  caption={{ title: \'Figure 15\', description: \'Revision List interface.\' }}\\n  layout=\\"responsive\\"\\n  naturalHeight={538}\\n  naturalWidth={1845}\\n/>\\n\\n## Testing Your Bot\\n\\n<YoutubeEmbedWrapper>\\n  <YoutubeEmbed id=\\"htbCHo9vwTc\\" params=\\"list=UUrud2GevnuhBNM7C7RjakVg\\" title=\\"Testing Your Bot\\" />\\n</YoutubeEmbedWrapper>\\n\\nIn this step, you will try a simple chatbot using the emulator feature.\\n\\n1. On the lower right of your screen, click on the **Test Chatbot** button. You will see a small window with a chat conversation interface if you succeed.\\n\\n<FigureImage\\n  alt=\\"Image 16 Alt\\"\\n  src=\\"/assets/images/products/kata-platform/start-your-first-chatbot/image16.webp\\"\\n  caption={{ title: \'Figure 16\', description: \'Chatbot emulator position.\' }}\\n  layout=\\"responsive\\"\\n  naturalHeight={883}\\n  naturalWidth={1890}\\n/>\\n\\n2. Type “Hello” word. If your chatbot works well, then it will show the chatbot reply witn created action. This image is the correct example.\\n\\n<FigureImage\\n  alt=\\"Image 2 Alt\\"\\n  src=\\"/assets/images/products/kata-platform/start-your-first-chatbot/image2.webp\\"\\n  caption={{ title: \'Figure 17\', description: \'Correct chatbot conversation.\' }}\\n  layout=\\"responsive\\"\\n  naturalHeight={439}\\n  naturalWidth={1033}\\n/>\\n\\n3. Congratulations, your first chatbot is done. Next, continue to deploy your chatbot in messaging platform Telegram.\\n\\n## Create a Deployment\\n\\n<YoutubeEmbedWrapper>\\n  <YoutubeEmbed id=\\"QtvgTJiDjwM\\" params=\\"list=UUrud2GevnuhBNM7C7RjakVg\\" title=\\"Create a Deployment\\" />\\n</YoutubeEmbedWrapper>\\n\\nDeployment is a step to merge all Revisions in Flow, NLU, and CMS so that bots can be integrated into the channel. Before starting channel integration, chatbots must at least have 1 deployment.\\n\\n1. In the sidebar, choose the **Deploy** menu. Then, choose **Overview**.\\n\\n<FigureImage\\n  alt=\\"Image 17 Alt\\"\\n  src=\\"/assets/images/products/kata-platform/start-your-first-chatbot/image17.webp\\"\\n  caption={{ title: \'Figure 18\', description: \'Deploy menu interface.\' }}\\n  layout=\\"responsive\\"\\n  naturalHeight={613}\\n  naturalWidth={1920}\\n/>\\n\\n2. Click the **New Deployment** button, then it will show a form on the right screen.\\n3. Choose the deployment version. In Kata Platform, there are 3 deployment versions:\\n   - Major to deploy big changes, such as change chatbot use-case.\\n   - Minor to deploy medium changes, such as adding new features in your chatbot.\\n   - Patch to deploy small changes, such as change copy in action.\\n\\n<FigureImage\\n  alt=\\"Image 18 Alt\\"\\n  src=\\"/assets/images/products/kata-platform/start-your-first-chatbot/image18.webp\\"\\n  caption={{ title: \'Figure 19\', description: \'Create a new deployment.\' }}\\n  layout=\\"responsive\\"\\n  naturalHeight={1068}\\n  naturalWidth={1999}\\n/>\\n\\n4. Then, click the **Submit** button. If deployment is successful, then the interface will be shown like this.\\n\\n<FigureImage\\n  alt=\\"Image 19 Alt\\"\\n  src=\\"/assets/images/products/kata-platform/start-your-first-chatbot/image19.webp\\"\\n  caption={{ title: \'Figure 20\', description: \'Deployment has been created.\' }}\\n  layout=\\"responsive\\"\\n  naturalHeight={535}\\n  naturalWidth={1605}\\n/>\\n\\n## Create an Environment\\n\\n<YoutubeEmbedWrapper>\\n  <YoutubeEmbed id=\\"6taC7GJgq0I\\" params=\\"list=UUrud2GevnuhBNM7C7RjakVg\\" title=\\"Create an Environment\\" />\\n</YoutubeEmbedWrapper>\\n\\nStep after creating a deployment is to create an environment. An environment is a zone in computer science that provides a place to run integrated applications. Kata Platform has 3 environments: development, staging, and production.\\n\\n1. Choose the menu **Deploy**, then choose **Environment**.\\n\\n<FigureImage\\n  alt=\\"Image 20 Alt\\"\\n  src=\\"/assets/images/products/kata-platform/start-your-first-chatbot/image20.webp\\"\\n  caption={{ title: \'Figure 21\', description: \'Environment interface.\' }}\\n  layout=\\"responsive\\"\\n  naturalHeight={586}\\n  naturalWidth={1851}\\n/>\\n\\n2. In this step, you will create a Development environment. Click the button **Create Environment** in the **Development** card.\\n3. Fill in the environment, then click **Create**.\\n\\n<FigureImage\\n  alt=\\"Image 21 Alt\\"\\n  src=\\"/assets/images/products/kata-platform/start-your-first-chatbot/image21.webp\\"\\n  caption={{ title: \'Figure 22\', description: \'Create an environment interface.\' }}\\n  layout=\\"responsive\\"\\n  naturalHeight={1022}\\n  naturalWidth={1622}\\n/>\\n\\n## Integration to a Channel\\n\\n<YoutubeEmbedWrapper>\\n  <YoutubeEmbed id=\\"B_a5-MV9nk8\\" params=\\"list=UUrud2GevnuhBNM7C7RjakVg\\" title=\\"Integration to a Channel\\" />\\n</YoutubeEmbedWrapper>\\n\\n### Create a Channel\\n\\nIn this step, you will create a chatbot integration with the Telegram messaging platform. Telegram is a free messaging platform to deploy chatbots with a simple setup.\\n\\n1. In the **Deploy > Environment**, click the **Create Channel** button.\\n\\n<FigureImage\\n  alt=\\"Image 22 Alt\\"\\n  src=\\"/assets/images/products/kata-platform/start-your-first-chatbot/image22.webp\\"\\n  caption={{ title: \'Figure 23\', description: \'Create an environment interface.\' }}\\n  layout=\\"responsive\\"\\n  naturalHeight={694}\\n  naturalWidth={1594}\\n/>\\n\\n2. You will be redirected to the Create Channel page. Click the **“+ Create Channel”** button to create a new channel.\\n3. Fill in the channel name and choose type as Telegram. To fill in the Bot User OAuth Access Token field, we must set up a chatbot in Telegram first. The next step is to open your Telegram application and log in.\\n\\nBefore you start, you need a Telegram account already registered and logged in to your application.\\n\\n### Connect chatbot to Telegram\\n\\n1. The first step is to register your bot to the BotFather account.\\n\\n<FigureImage\\n  alt=\\"Image 23 Alt\\"\\n  src=\\"/assets/images/products/kata-platform/start-your-first-chatbot/image23.webp\\"\\n  caption={{ title: \'Figure 24\', description: \'Search BotFather account.\' }}\\n  layout=\\"responsive\\"\\n  naturalHeight={600}\\n  naturalWidth={802}\\n/>\\n\\n2. Type `/newbot` and BotFather will ask for your chatbot name. Feel free to use any name you like.\\n3. After that, you will be asked to enter your chatbot username. Remember that your bot username has to either start or end with `bot`.\\n4. Once finished, BotFather will respond with a bot token to access the Telegram Bot API.\\n\\n<FigureImage\\n  alt=\\"Image 24 Alt\\"\\n  src=\\"/assets/images/products/kata-platform/start-your-first-chatbot/image24.webp\\"\\n  caption={{ title: \'Figure 25\', description: \'Telegram shows bot token.\' }}\\n  layout=\\"responsive\\"\\n  naturalHeight={601}\\n  naturalWidth={801}\\n/>\\n\\n5. Go back to Platform, then copy the bot access token into the channel drawer.\\n\\n<FigureImage\\n  alt=\\"Image 25 Alt\\"\\n  src=\\"/assets/images/products/kata-platform/start-your-first-chatbot/image25.webp\\"\\n  caption={{ title: \'Figure 26\', description: \'Input bot access token.\' }}\\n  layout=\\"responsive\\"\\n  naturalHeight={767}\\n  naturalWidth={1140}\\n/>\\n\\n6. Click **Create** to get a webhook from the Kata Platform. Then, click the copy button to copy the webhook URL.\\n7. Click on the webhook link to **View Channel** detail. It will show a drawer to copy the access token and webhook URL.\\n\\n<FigureImage\\n  alt=\\"Image 26 Alt\\"\\n  src=\\"/assets/images/products/kata-platform/start-your-first-chatbot/image26.webp\\"\\n  caption={{ title: \'Figure 27\', description: \'Input bot access token.\' }}\\n  layout=\\"responsive\\"\\n  naturalHeight={1005}\\n  naturalWidth={1999}\\n/>\\n\\n8. Next, open a new tab on your browser and enter this URL. Change `{my_bot_token}` into your own bot token. Also, paste `{kata_platform_webhook_url}` with the copied webhook URL.\\n\\n```\\nhttps://api.telegram.org/bot{my_bot_token}/setWebhook?url={kata_platform_webhook_url}\\n```\\n\\n9. Click “Go” or press Enter on the keyboard.\\n\\n<FigureImage\\n  alt=\\"Image 27 Alt\\"\\n  src=\\"/assets/images/products/kata-platform/start-your-first-chatbot/image27.webp\\"\\n  caption={{ title: \'Figure 28\', description: \'Telegram bot has successfully connected.\' }}\\n  layout=\\"responsive\\"\\n  naturalHeight={164}\\n  naturalWidth={449}\\n/>\\n\\n10. If you see the message “Webhook was set,” you’re all set! Let’s try our chatbot. Open Telegram on the desktop or mobile, and start chatting with your bot.\\n\\n<FigureImage\\n  alt=\\"Image 28 Alt\\"\\n  src=\\"/assets/images/products/kata-platform/start-your-first-chatbot/image28.webp\\"\\n  caption={{ title: \'Figure 29\', description: \'Testing “Hello” in Telegram chatbot.\' }}\\n  layout=\\"responsive\\"\\n  naturalHeight={900}\\n  naturalWidth={1934}\\n/>\\n\\nThis is the end of getting started with a chatbot. You can contact <a href=\\"mailto:support@kata.ai\\">support@kata.ai</a> if you have any difficulties implementing this.\\n","code":"var Component=(()=>{var g=Object.create;var s=Object.defineProperty;var m=Object.getOwnPropertyDescriptor;var b=Object.getOwnPropertyNames;var f=Object.getPrototypeOf,w=Object.prototype.hasOwnProperty;var h=a=>s(a,\\"__esModule\\",{value:!0});var y=(a,i)=>()=>(i||a((i={exports:{}}).exports,i),i.exports),k=(a,i)=>{for(var l in i)s(a,l,{get:i[l],enumerable:!0})},d=(a,i,l,e)=>{if(i&&typeof i==\\"object\\"||typeof i==\\"function\\")for(let r of b(i))!w.call(a,r)&&(l||r!==\\"default\\")&&s(a,r,{get:()=>i[r],enumerable:!(e=m(i,r))||e.enumerable});return a},v=(a,i)=>d(h(s(a!=null?g(f(a)):{},\\"default\\",!i&&a&&a.__esModule?{get:()=>a.default,enumerable:!0}:{value:a,enumerable:!0})),a),C=(a=>(i,l)=>a&&a.get(i)||(l=d(h({}),i,1),a&&a.set(i,l),l))(typeof WeakMap!=\\"undefined\\"?new WeakMap:0);var p=y((x,u)=>{u.exports=_jsx_runtime});var T={};k(T,{default:()=>F,frontmatter:()=>I});var t=v(p()),I={id:\\"start-your-first-chatbot\\",title:\\"Start Your First Chatbot\\",next:\\"analyze-your-bot-conversations\\",prev:\\"designing-conversation\\",section:\\"Documentation Content\\"};function N(a={}){let{wrapper:i}=a.components||{};return i?(0,t.jsx)(i,Object.assign({},a,{children:(0,t.jsx)(l,{})})):l();function l(){let e=Object.assign({p:\\"p\\",h2:\\"h2\\",a:\\"a\\",span:\\"span\\",ol:\\"ol\\",li:\\"li\\",strong:\\"strong\\",pre:\\"pre\\",code:\\"code\\",ul:\\"ul\\",h3:\\"h3\\"},a.components),{YoutubeEmbedWrapper:r,YoutubeEmbed:o,FigureImage:n}=e;return n||c(\\"FigureImage\\",!0),o||c(\\"YoutubeEmbed\\",!0),r||c(\\"YoutubeEmbedWrapper\\",!0),(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(e.p,{children:\\"A chatbot is an application that allows humans to have online conversations with a computer via text or voice. This tutorial will create a simple chatbot using the Kata Platform. So, let\\\\u2019s get started.\\"}),`\\n`,(0,t.jsxs)(e.h2,{id:\\"video-tutorial\\",children:[(0,t.jsx)(e.a,{className:\\"anchor\\",href:\\"#video-tutorial\\",children:(0,t.jsx)(e.span,{className:\\"icon icon-link\\"})}),\\"Video tutorial\\"]}),`\\n`,(0,t.jsx)(e.p,{children:\\"You can watch the tutorial to start your first chatbot or follow the steps in this documentation\\"}),`\\n`,(0,t.jsx)(r,{children:(0,t.jsx)(o,{id:\\"OYkUylw2x_o\\",title:\\"Start Your First Chatbot Tutorial\\"})}),`\\n`,(0,t.jsxs)(e.h2,{id:\\"registration-and-login\\",children:[(0,t.jsx)(e.a,{className:\\"anchor\\",href:\\"#registration-and-login\\",children:(0,t.jsx)(e.span,{className:\\"icon icon-link\\"})}),\\"Registration and Login\\"]}),`\\n`,(0,t.jsx)(r,{children:(0,t.jsx)(o,{id:\\"H83sXg3Wvas\\",title:\\"Registration and Login\\"})}),`\\n`,(0,t.jsxs)(e.ol,{children:[`\\n`,(0,t.jsxs)(e.li,{children:[\\"Open your browser and enter the URL \\",(0,t.jsxs)(\\"a\\",{href:\\"https://platform.kata.ai\\",target:\\"_blank\\",children:[(0,t.jsx)(\\"span\\",{children:\\"http\\"}),\\"s://platform.kata.ai/\\"]}),\\".\\"]}),`\\n`,(0,t.jsx)(e.li,{children:\\"Register your data in the Kata Platform by filling in the required fields.\\"}),`\\n`]}),`\\n`,(0,t.jsx)(n,{alt:\\"Image 1 Alt\\",src:\\"/assets/images/products/kata-platform/start-your-first-chatbot/image1.webp\\",caption:{title:\\"Figure 1\\",description:\\"Registration page in Kata Platform\\"},layout:\\"responsive\\",naturalHeight:1019,naturalWidth:1999}),`\\n`,(0,t.jsxs)(e.ol,{start:\\"3\\",children:[`\\n`,(0,t.jsxs)(e.li,{children:[\\"After filling in all the data, click \\",(0,t.jsx)(e.strong,{children:\\"Sign Up\\"}),\\". We will send a verification email to your registered email.\\"]}),`\\n`,(0,t.jsx)(e.li,{children:\\"Continue to verify your account by entering the password to continue the registration step.\\"}),`\\n`,(0,t.jsx)(e.li,{children:\\"Login with your account\\"}),`\\n`]}),`\\n`,(0,t.jsx)(e.p,{children:\\"In this step, you will create a simple chatbot as in the image below. Let\\\\u2019s start.\\"}),`\\n`,(0,t.jsx)(n,{alt:\\"Image 2 Alt\\",src:\\"/assets/images/products/kata-platform/start-your-first-chatbot/image2.webp\\",caption:{title:\\"Figure 2\\",description:\\"Simple chatbot example.\\"},layout:\\"responsive\\",naturalHeight:439,naturalWidth:1033}),`\\n`,(0,t.jsxs)(e.h2,{id:\\"create-a-project\\",children:[(0,t.jsx)(e.a,{className:\\"anchor\\",href:\\"#create-a-project\\",children:(0,t.jsx)(e.span,{className:\\"icon icon-link\\"})}),\\"Create a Project\\"]}),`\\n`,(0,t.jsx)(r,{children:(0,t.jsx)(o,{id:\\"s92bMsSC5gM\\",params:\\"list=UUrud2GevnuhBNM7C7RjakVg\\",title:\\"Create a Project\\"})}),`\\n`,(0,t.jsx)(e.p,{children:\\"You will see all projects in the project dashboard. A project consists of bot design, NLU, and CMS.\\"}),`\\n`,(0,t.jsxs)(e.ol,{children:[`\\n`,(0,t.jsxs)(e.li,{children:[\\"Click \\",(0,t.jsx)(e.strong,{children:\\"Create Project\\"}),\\" to create a new project.\\"]}),`\\n`]}),`\\n`,(0,t.jsx)(n,{alt:\\"Image 3 Alt\\",src:\\"/assets/images/products/kata-platform/start-your-first-chatbot/image3.webp\\",caption:{title:\\"Figure 3\\",description:\\"Dashboard project\\"},layout:\\"responsive\\",naturalHeight:880,naturalWidth:1890}),`\\n`,(0,t.jsxs)(e.ol,{start:\\"2\\",children:[`\\n`,(0,t.jsxs)(e.li,{children:[\\"Fill in project detail, then click \\",(0,t.jsx)(e.strong,{children:\\"Create Project\\"}),\\".\\"]}),`\\n`,(0,t.jsxs)(e.li,{children:[\\"After the project has been created, you will be redirected to the \\",(0,t.jsx)(e.strong,{children:\\"Conversation Flow\\"}),\\" page to create flow, state, and action.\\"]}),`\\n`,(0,t.jsx)(e.li,{children:\\"Congratulations, you successfully created a new project.\\"}),`\\n`]}),`\\n`,(0,t.jsxs)(e.h2,{id:\\"create-a-flow\\",children:[(0,t.jsx)(e.a,{className:\\"anchor\\",href:\\"#create-a-flow\\",children:(0,t.jsx)(e.span,{className:\\"icon icon-link\\"})}),\\"Create a Flow\\"]}),`\\n`,(0,t.jsx)(r,{children:(0,t.jsx)(o,{id:\\"jA5oP13_cGY\\",params:\\"list=UUrud2GevnuhBNM7C7RjakVg\\",title:\\"Create a Flow\\"})}),`\\n`,(0,t.jsx)(e.p,{children:\\"Flow is a conversation chatbot flow. In this simple tutorial, you will create 1 flow and use 1 default flow. Default flow is a fallback flow or a flow to answer if questions are not understandable by a chatbot.\\"}),`\\n`,(0,t.jsxs)(e.ol,{children:[`\\n`,(0,t.jsxs)(e.li,{children:[\\"In the Conversation Flow, click the \\",(0,t.jsx)(e.strong,{children:\\"Create Flow\\"}),\\".\\"]}),`\\n`,(0,t.jsxs)(e.li,{children:[\\"Fill in the flow name hello, then click \\",(0,t.jsx)(e.strong,{children:\\"Create\\"}),\\". If a flow is successfully created, it will show in the Conversation Flows sidebar.\\"]}),`\\n`]}),`\\n`,(0,t.jsx)(n,{alt:\\"Image 4 Alt\\",src:\\"/assets/images/products/kata-platform/start-your-first-chatbot/image4.webp\\",caption:{title:\\"Figure 4\\",description:\\"New flow name \\\\u201Chello\\\\u201D\\"},layout:\\"responsive\\",naturalHeight:916,naturalWidth:1938}),`\\n`,(0,t.jsxs)(e.h2,{id:\\"create-a-state\\",children:[(0,t.jsx)(e.a,{className:\\"anchor\\",href:\\"#create-a-state\\",children:(0,t.jsx)(e.span,{className:\\"icon icon-link\\"})}),\\"Create a State\\"]}),`\\n`,(0,t.jsx)(r,{children:(0,t.jsx)(o,{id:\\"Yf6cOQ7jYTw\\",params:\\"list=UUrud2GevnuhBNM7C7RjakVg\\",title:\\"Create a Flow\\"})}),`\\n`,(0,t.jsx)(e.p,{children:\\"The state is a step in a conversation. A flow must have 1 state called the initial state, and 1 state called the end state.\\"}),`\\n`,(0,t.jsx)(e.p,{children:\\"In this tutorial, you will create 2 states in the flow \\\\u201Chello\\\\u201D, which are \\\\u201Cinit\\\\u201D state and \\\\u201Chello\\\\u201D state. \\\\u201CInit\\\\u201D state will become the initial state, and the \\\\u201Chello\\\\u201D state becomes the end state.\\"}),`\\n`,(0,t.jsxs)(e.ol,{children:[`\\n`,(0,t.jsxs)(e.li,{children:[\'Click the icon \\"+\\" in the \',(0,t.jsx)(e.strong,{children:\\"Conversation Flow\\"}),\\" menu.\\"]}),`\\n`]}),`\\n`,(0,t.jsx)(n,{alt:\\"Image 5 Alt\\",src:\\"/assets/images/products/kata-platform/start-your-first-chatbot/image5.webp\\",caption:{title:\\"Figure 5\\",description:\\"Button \\\\u201C+\\\\u201D to create a new state\\"},layout:\\"responsive\\",naturalHeight:814,naturalWidth:1333}),`\\n`,(0,t.jsxs)(e.ol,{start:\\"2\\",children:[`\\n`,(0,t.jsx)(e.li,{children:\\"In this step, you will create an initial state. Fill in the \\\\u201Cinit\\\\u201D state, then turn on the toggle Initial State to set it as the initial state.\\"}),`\\n`]}),`\\n`,(0,t.jsx)(n,{alt:\\"Image 6 Alt\\",src:\\"/assets/images/products/kata-platform/start-your-first-chatbot/image6.webp\\",caption:{title:\\"Figure 6\\",description:\\"Create a state name \\\\u201Cinit\\\\u201D\\"},layout:\\"responsive\\",naturalHeight:883,naturalWidth:559}),`\\n`,(0,t.jsxs)(e.ol,{start:\\"3\\",children:[`\\n`,(0,t.jsx)(e.li,{children:\\"Next, create a \\\\u201Chello\\\\u201D state. This state will be an end state, so you must turn on the End State toggle. Do a similar step with the second step.\\"}),`\\n`]}),`\\n`,(0,t.jsx)(e.p,{children:\\"In this step, you will get an error that an end state must have at least 1 action. So, the next step is to create an action in the \\\\u201Chello\\\\u201D state.\\"}),`\\n`,(0,t.jsxs)(e.h2,{id:\\"create-an-action\\",children:[(0,t.jsx)(e.a,{className:\\"anchor\\",href:\\"#create-an-action\\",children:(0,t.jsx)(e.span,{className:\\"icon icon-link\\"})}),\\"Create an Action\\"]}),`\\n`,(0,t.jsx)(r,{children:(0,t.jsx)(o,{id:\\"3XkZlqukvzU\\",params:\\"list=UUrud2GevnuhBNM7C7RjakVg\\",title:\\"Create a Flow\\"})}),`\\n`,(0,t.jsx)(e.p,{children:\\"Action is a bot response in text, images, buttons, interactive messages such as a carousel in LINE, a generic template in FB Messenger, and others. A state must have at least 1 action, except in the initial state. This tutorial will create a text action in the \\\\u201Chello\\\\u201D state.\\"}),`\\n`,(0,t.jsxs)(e.ol,{children:[`\\n`,(0,t.jsx)(e.li,{children:\\"Click in the \\\\u201Chello\\\\u201D state, then it will show a form on the right screen.\\"}),`\\n`,(0,t.jsxs)(e.li,{children:[\\"To create a new action, click on the \\",(0,t.jsx)(e.strong,{children:\\"Add action\\"}),\\" button.\\"]}),`\\n`]}),`\\n`,(0,t.jsx)(n,{alt:\\"Image 7 Alt\\",src:\\"/assets/images/products/kata-platform/start-your-first-chatbot/image7.webp\\",caption:{title:\\"Figure 7\\",description:\\"Add new action\\"},layout:\\"responsive\\",naturalHeight:877,naturalWidth:561}),`\\n`,(0,t.jsxs)(e.ol,{start:\\"3\\",children:[`\\n`,(0,t.jsxs)(e.li,{children:[\\"Click on the \\\\u201C+\\\\u201D icon. Next, it will show various available actions. Choose action \\",(0,t.jsx)(e.strong,{children:\\"Text\\"}),\\".\\"]}),`\\n`]}),`\\n`,(0,t.jsx)(n,{alt:\\"Image 8 Alt\\",src:\\"/assets/images/products/kata-platform/start-your-first-chatbot/image8.webp\\",caption:{title:\\"Figure 8\\",description:\\"Input new action\\"},layout:\\"responsive\\",naturalHeight:1332,naturalWidth:1594}),`\\n`,(0,t.jsx)(n,{alt:\\"Image 9 Alt\\",src:\\"/assets/images/products/kata-platform/start-your-first-chatbot/image9.webp\\",caption:{title:\\"Figure 9\\",description:\\"Input Text action\\"},layout:\\"responsive\\",naturalHeight:1838,naturalWidth:1930}),`\\n`,(0,t.jsxs)(e.ol,{start:\\"4\\",children:[`\\n`,(0,t.jsx)(e.li,{children:\\"After choosing a Text action, it will show an interface like in the image below. Input action name, then click Add Variant button to input text response.\\"}),`\\n`]}),`\\n`,(0,t.jsx)(n,{alt:\\"Image 10 Alt\\",src:\\"/assets/images/products/kata-platform/start-your-first-chatbot/image10.webp\\",caption:{title:\\"Figure 10\\",description:\\"Input text response in bot\\"},layout:\\"responsive\\",naturalHeight:1806,naturalWidth:1999}),`\\n`,(0,t.jsxs)(e.ol,{start:\\"5\\",children:[`\\n`,(0,t.jsxs)(e.li,{children:[\\"Finishing your action by clicking the \\",(0,t.jsx)(e.strong,{children:\\"Create Action\\"}),\\" button.\\"]}),`\\n`,(0,t.jsxs)(e.li,{children:[\\"Then, finalize the state by clicking the \\",(0,t.jsx)(e.strong,{children:\\"Create\\"}),\\" button.\\"]}),`\\n`]}),`\\n`,(0,t.jsxs)(e.h2,{id:\\"create-an-intent\\",children:[(0,t.jsx)(e.a,{className:\\"anchor\\",href:\\"#create-an-intent\\",children:(0,t.jsx)(e.span,{className:\\"icon icon-link\\"})}),\\"Create an Intent\\"]}),`\\n`,(0,t.jsx)(r,{children:(0,t.jsx)(o,{id:\\"Xd-jH20VMRs\\",params:\\"list=UUrud2GevnuhBNM7C7RjakVg\\",title:\\"Create an Intent\\"})}),`\\n`,(0,t.jsx)(e.p,{children:\\"A chatbot needs to understand end-users input to show correct action or bot response. The intent will recognize input in the Kata Platform by checking keywords, NL, or regex. End-user is a term for chatbot users.\\"}),`\\n`,(0,t.jsx)(e.p,{children:\\"This step will create an intent to catch when end-users greet the chatbot.\\"}),`\\n`,(0,t.jsxs)(e.ol,{children:[`\\n`,(0,t.jsxs)(e.li,{children:[\\"In the \\\\u201Chello\\\\u201D flow, choose the \\",(0,t.jsx)(e.strong,{children:\\"Intent\\"}),\\" menu. Next, click \\",(0,t.jsx)(e.strong,{children:\\"Create Intent\\"}),\\".\\"]}),`\\n`]}),`\\n`,(0,t.jsx)(n,{alt:\\"Image 11 Alt\\",src:\\"/assets/images/products/kata-platform/start-your-first-chatbot/image11.webp\\",caption:{title:\\"Figure 11\\",description:\\"The page to create a new intent\\"},layout:\\"responsive\\",naturalHeight:661,naturalWidth:1168}),`\\n`,(0,t.jsxs)(e.ol,{start:\\"2\\",children:[`\\n`,(0,t.jsxs)(e.li,{children:[\\"Input intent detail with name \\\\u201ChelloIntent\\\\u201D. Then, turn on toggle \\",(0,t.jsx)(e.strong,{children:\\"As Initial\\"}),\\" to create a trigger in the chatbot and execute the \\\\u201Chello\\\\u201D flow.\\"]}),`\\n`,(0,t.jsxs)(e.li,{children:[\\"Next, continue to choose the \\",(0,t.jsx)(e.strong,{children:\\"Text\\"}),\\" type. Input a condition to make the chatbot execute the intent when the end-user sends the message \\\\u201CHello\\\\u201D or \\\\u201C/start\\\\u201D:\\"]}),`\\n`]}),`\\n`,(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:\\"code-highlight\\",children:(0,t.jsx)(e.span,{className:\\"code-line\\",children:`content == \\\\u2018Hello\\\\u2019 || content == \\\\u201C/start\\\\u201D\\n`})})}),`\\n`,(0,t.jsxs)(e.ol,{start:\\"4\\",children:[`\\n`,(0,t.jsx)(e.li,{children:\\"Click the Create button to finish creating intent.\\"}),`\\n`]}),`\\n`,(0,t.jsx)(n,{alt:\\"Image 12 Alt\\",src:\\"/assets/images/products/kata-platform/start-your-first-chatbot/image12.webp\\",caption:{title:\\"Figure 12\\",description:\\"Create helloIntent to recognize greetings from end-users.\\"},layout:\\"responsive\\",naturalHeight:586,naturalWidth:1330}),`\\n`,(0,t.jsxs)(e.h2,{id:\\"create-a-transition\\",children:[(0,t.jsx)(e.a,{className:\\"anchor\\",href:\\"#create-a-transition\\",children:(0,t.jsx)(e.span,{className:\\"icon icon-link\\"})}),\\"Create a Transition\\"]}),`\\n`,(0,t.jsx)(r,{children:(0,t.jsx)(o,{id:\\"hx-zs1EUqSg\\",params:\\"v=hx-zs1EUqSg&list=UUrud2GevnuhBNM7C7RjakVg\\",title:\\"Create a Transition\\"})}),`\\n`,(0,t.jsx)(e.p,{children:`Transition is a procedure to move from one state to another state if a condition is fulfilled. Create transition by pulling\\na line from the source state to the destination state, like the image below.`}),`\\n`,(0,t.jsx)(n,{alt:\\"Image 13 Alt\\",src:\\"/assets/images/products/kata-platform/start-your-first-chatbot/image13.webp\\",caption:{title:\\"Figure 13\\",description:\\"Transition between states.\\"},layout:\\"responsive\\",naturalHeight:489,naturalWidth:1170}),`\\n`,(0,t.jsxs)(e.ol,{children:[`\\n`,(0,t.jsx)(e.li,{children:\\"In this step, you will create a transition between the \\\\u201Cinit\\\\u201D state and the \\\\u201Chello\\\\u201D state by pulling a line. If you succeed to create a transition, it will show a form on the right screen.\\"}),`\\n`,(0,t.jsx)(e.li,{children:\\"Then, input condition detail to create transition can be executed if an end-user input is caught by \\\\u201ChelloIntent\\\\u201D intent:\\"}),`\\n`]}),`\\n`,(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:\\"code-highlight\\",children:(0,t.jsx)(e.span,{className:\\"code-line\\",children:`intent == \\\\u2018helloIntent\\\\u2019\\n`})})}),`\\n`,(0,t.jsxs)(e.ol,{start:\\"3\\",children:[`\\n`,(0,t.jsxs)(e.li,{children:[\\"Click the \\",(0,t.jsx)(e.strong,{children:\\"Save\\"}),\\" button to finish creating the transition.\\"]}),`\\n`]}),`\\n`,(0,t.jsxs)(e.h2,{id:\\"publish-bot\\",children:[(0,t.jsx)(e.a,{className:\\"anchor\\",href:\\"#publish-bot\\",children:(0,t.jsx)(e.span,{className:\\"icon icon-link\\"})}),\\"Publish Bot\\"]}),`\\n`,(0,t.jsx)(r,{children:(0,t.jsx)(o,{id:\\"xsOc9NPNBSg\\",params:\\"list=UUrud2GevnuhBNM7C7RjakVg\\",title:\\"Publish Bot\\"})}),`\\n`,(0,t.jsx)(e.p,{children:\\"This publish feature is useful to save changes in the form of revision numbers. The Publish button can be found on all Flow pages.\\"}),`\\n`,(0,t.jsxs)(e.ol,{children:[`\\n`,(0,t.jsxs)(e.li,{children:[\\"In this step, you will save the created bot design. Click the \\",(0,t.jsx)(e.strong,{children:\\"Publish\\"}),\\" button which is placed in the top right corner.\\"]}),`\\n`]}),`\\n`,(0,t.jsx)(n,{alt:\\"Image 14 Alt\\",src:\\"/assets/images/products/kata-platform/start-your-first-chatbot/image14.webp\\",caption:{title:\\"Figure 14\\",description:\\"Publish button.\\"},layout:\\"responsive\\",naturalHeight:811,naturalWidth:1606}),`\\n`,(0,t.jsxs)(e.ol,{start:\\"2\\",children:[`\\n`,(0,t.jsx)(e.li,{children:\\"To ensure your bot is stored correctly, enter the Revision List menu. The revision list will show every new revision at the top.\\"}),`\\n`]}),`\\n`,(0,t.jsx)(n,{alt:\\"Image 15 Alt\\",src:\\"/assets/images/products/kata-platform/start-your-first-chatbot/image15.webp\\",caption:{title:\\"Figure 15\\",description:\\"Revision List interface.\\"},layout:\\"responsive\\",naturalHeight:538,naturalWidth:1845}),`\\n`,(0,t.jsxs)(e.h2,{id:\\"testing-your-bot\\",children:[(0,t.jsx)(e.a,{className:\\"anchor\\",href:\\"#testing-your-bot\\",children:(0,t.jsx)(e.span,{className:\\"icon icon-link\\"})}),\\"Testing Your Bot\\"]}),`\\n`,(0,t.jsx)(r,{children:(0,t.jsx)(o,{id:\\"htbCHo9vwTc\\",params:\\"list=UUrud2GevnuhBNM7C7RjakVg\\",title:\\"Testing Your Bot\\"})}),`\\n`,(0,t.jsx)(e.p,{children:\\"In this step, you will try a simple chatbot using the emulator feature.\\"}),`\\n`,(0,t.jsxs)(e.ol,{children:[`\\n`,(0,t.jsxs)(e.li,{children:[\\"On the lower right of your screen, click on the \\",(0,t.jsx)(e.strong,{children:\\"Test Chatbot\\"}),\\" button. You will see a small window with a chat conversation interface if you succeed.\\"]}),`\\n`]}),`\\n`,(0,t.jsx)(n,{alt:\\"Image 16 Alt\\",src:\\"/assets/images/products/kata-platform/start-your-first-chatbot/image16.webp\\",caption:{title:\\"Figure 16\\",description:\\"Chatbot emulator position.\\"},layout:\\"responsive\\",naturalHeight:883,naturalWidth:1890}),`\\n`,(0,t.jsxs)(e.ol,{start:\\"2\\",children:[`\\n`,(0,t.jsx)(e.li,{children:\\"Type \\\\u201CHello\\\\u201D word. If your chatbot works well, then it will show the chatbot reply witn created action. This image is the correct example.\\"}),`\\n`]}),`\\n`,(0,t.jsx)(n,{alt:\\"Image 2 Alt\\",src:\\"/assets/images/products/kata-platform/start-your-first-chatbot/image2.webp\\",caption:{title:\\"Figure 17\\",description:\\"Correct chatbot conversation.\\"},layout:\\"responsive\\",naturalHeight:439,naturalWidth:1033}),`\\n`,(0,t.jsxs)(e.ol,{start:\\"3\\",children:[`\\n`,(0,t.jsx)(e.li,{children:\\"Congratulations, your first chatbot is done. Next, continue to deploy your chatbot in messaging platform Telegram.\\"}),`\\n`]}),`\\n`,(0,t.jsxs)(e.h2,{id:\\"create-a-deployment\\",children:[(0,t.jsx)(e.a,{className:\\"anchor\\",href:\\"#create-a-deployment\\",children:(0,t.jsx)(e.span,{className:\\"icon icon-link\\"})}),\\"Create a Deployment\\"]}),`\\n`,(0,t.jsx)(r,{children:(0,t.jsx)(o,{id:\\"QtvgTJiDjwM\\",params:\\"list=UUrud2GevnuhBNM7C7RjakVg\\",title:\\"Create a Deployment\\"})}),`\\n`,(0,t.jsx)(e.p,{children:\\"Deployment is a step to merge all Revisions in Flow, NLU, and CMS so that bots can be integrated into the channel. Before starting channel integration, chatbots must at least have 1 deployment.\\"}),`\\n`,(0,t.jsxs)(e.ol,{children:[`\\n`,(0,t.jsxs)(e.li,{children:[\\"In the sidebar, choose the \\",(0,t.jsx)(e.strong,{children:\\"Deploy\\"}),\\" menu. Then, choose \\",(0,t.jsx)(e.strong,{children:\\"Overview\\"}),\\".\\"]}),`\\n`]}),`\\n`,(0,t.jsx)(n,{alt:\\"Image 17 Alt\\",src:\\"/assets/images/products/kata-platform/start-your-first-chatbot/image17.webp\\",caption:{title:\\"Figure 18\\",description:\\"Deploy menu interface.\\"},layout:\\"responsive\\",naturalHeight:613,naturalWidth:1920}),`\\n`,(0,t.jsxs)(e.ol,{start:\\"2\\",children:[`\\n`,(0,t.jsxs)(e.li,{children:[\\"Click the \\",(0,t.jsx)(e.strong,{children:\\"New Deployment\\"}),\\" button, then it will show a form on the right screen.\\"]}),`\\n`,(0,t.jsxs)(e.li,{children:[\\"Choose the deployment version. In Kata Platform, there are 3 deployment versions:\\",`\\n`,(0,t.jsxs)(e.ul,{children:[`\\n`,(0,t.jsx)(e.li,{children:\\"Major to deploy big changes, such as change chatbot use-case.\\"}),`\\n`,(0,t.jsx)(e.li,{children:\\"Minor to deploy medium changes, such as adding new features in your chatbot.\\"}),`\\n`,(0,t.jsx)(e.li,{children:\\"Patch to deploy small changes, such as change copy in action.\\"}),`\\n`]}),`\\n`]}),`\\n`]}),`\\n`,(0,t.jsx)(n,{alt:\\"Image 18 Alt\\",src:\\"/assets/images/products/kata-platform/start-your-first-chatbot/image18.webp\\",caption:{title:\\"Figure 19\\",description:\\"Create a new deployment.\\"},layout:\\"responsive\\",naturalHeight:1068,naturalWidth:1999}),`\\n`,(0,t.jsxs)(e.ol,{start:\\"4\\",children:[`\\n`,(0,t.jsxs)(e.li,{children:[\\"Then, click the \\",(0,t.jsx)(e.strong,{children:\\"Submit\\"}),\\" button. If deployment is successful, then the interface will be shown like this.\\"]}),`\\n`]}),`\\n`,(0,t.jsx)(n,{alt:\\"Image 19 Alt\\",src:\\"/assets/images/products/kata-platform/start-your-first-chatbot/image19.webp\\",caption:{title:\\"Figure 20\\",description:\\"Deployment has been created.\\"},layout:\\"responsive\\",naturalHeight:535,naturalWidth:1605}),`\\n`,(0,t.jsxs)(e.h2,{id:\\"create-an-environment\\",children:[(0,t.jsx)(e.a,{className:\\"anchor\\",href:\\"#create-an-environment\\",children:(0,t.jsx)(e.span,{className:\\"icon icon-link\\"})}),\\"Create an Environment\\"]}),`\\n`,(0,t.jsx)(r,{children:(0,t.jsx)(o,{id:\\"6taC7GJgq0I\\",params:\\"list=UUrud2GevnuhBNM7C7RjakVg\\",title:\\"Create an Environment\\"})}),`\\n`,(0,t.jsx)(e.p,{children:\\"Step after creating a deployment is to create an environment. An environment is a zone in computer science that provides a place to run integrated applications. Kata Platform has 3 environments: development, staging, and production.\\"}),`\\n`,(0,t.jsxs)(e.ol,{children:[`\\n`,(0,t.jsxs)(e.li,{children:[\\"Choose the menu \\",(0,t.jsx)(e.strong,{children:\\"Deploy\\"}),\\", then choose \\",(0,t.jsx)(e.strong,{children:\\"Environment\\"}),\\".\\"]}),`\\n`]}),`\\n`,(0,t.jsx)(n,{alt:\\"Image 20 Alt\\",src:\\"/assets/images/products/kata-platform/start-your-first-chatbot/image20.webp\\",caption:{title:\\"Figure 21\\",description:\\"Environment interface.\\"},layout:\\"responsive\\",naturalHeight:586,naturalWidth:1851}),`\\n`,(0,t.jsxs)(e.ol,{start:\\"2\\",children:[`\\n`,(0,t.jsxs)(e.li,{children:[\\"In this step, you will create a Development environment. Click the button \\",(0,t.jsx)(e.strong,{children:\\"Create Environment\\"}),\\" in the \\",(0,t.jsx)(e.strong,{children:\\"Development\\"}),\\" card.\\"]}),`\\n`,(0,t.jsxs)(e.li,{children:[\\"Fill in the environment, then click \\",(0,t.jsx)(e.strong,{children:\\"Create\\"}),\\".\\"]}),`\\n`]}),`\\n`,(0,t.jsx)(n,{alt:\\"Image 21 Alt\\",src:\\"/assets/images/products/kata-platform/start-your-first-chatbot/image21.webp\\",caption:{title:\\"Figure 22\\",description:\\"Create an environment interface.\\"},layout:\\"responsive\\",naturalHeight:1022,naturalWidth:1622}),`\\n`,(0,t.jsxs)(e.h2,{id:\\"integration-to-a-channel\\",children:[(0,t.jsx)(e.a,{className:\\"anchor\\",href:\\"#integration-to-a-channel\\",children:(0,t.jsx)(e.span,{className:\\"icon icon-link\\"})}),\\"Integration to a Channel\\"]}),`\\n`,(0,t.jsx)(r,{children:(0,t.jsx)(o,{id:\\"B_a5-MV9nk8\\",params:\\"list=UUrud2GevnuhBNM7C7RjakVg\\",title:\\"Integration to a Channel\\"})}),`\\n`,(0,t.jsxs)(e.h3,{id:\\"create-a-channel\\",children:[(0,t.jsx)(e.a,{className:\\"anchor\\",href:\\"#create-a-channel\\",children:(0,t.jsx)(e.span,{className:\\"icon icon-link\\"})}),\\"Create a Channel\\"]}),`\\n`,(0,t.jsx)(e.p,{children:\\"In this step, you will create a chatbot integration with the Telegram messaging platform. Telegram is a free messaging platform to deploy chatbots with a simple setup.\\"}),`\\n`,(0,t.jsxs)(e.ol,{children:[`\\n`,(0,t.jsxs)(e.li,{children:[\\"In the \\",(0,t.jsx)(e.strong,{children:\\"Deploy > Environment\\"}),\\", click the \\",(0,t.jsx)(e.strong,{children:\\"Create Channel\\"}),\\" button.\\"]}),`\\n`]}),`\\n`,(0,t.jsx)(n,{alt:\\"Image 22 Alt\\",src:\\"/assets/images/products/kata-platform/start-your-first-chatbot/image22.webp\\",caption:{title:\\"Figure 23\\",description:\\"Create an environment interface.\\"},layout:\\"responsive\\",naturalHeight:694,naturalWidth:1594}),`\\n`,(0,t.jsxs)(e.ol,{start:\\"2\\",children:[`\\n`,(0,t.jsxs)(e.li,{children:[\\"You will be redirected to the Create Channel page. Click the \\",(0,t.jsx)(e.strong,{children:\\"\\\\u201C+ Create Channel\\\\u201D\\"}),\\" button to create a new channel.\\"]}),`\\n`,(0,t.jsx)(e.li,{children:\\"Fill in the channel name and choose type as Telegram. To fill in the Bot User OAuth Access Token field, we must set up a chatbot in Telegram first. The next step is to open your Telegram application and log in.\\"}),`\\n`]}),`\\n`,(0,t.jsx)(e.p,{children:\\"Before you start, you need a Telegram account already registered and logged in to your application.\\"}),`\\n`,(0,t.jsxs)(e.h3,{id:\\"connect-chatbot-to-telegram\\",children:[(0,t.jsx)(e.a,{className:\\"anchor\\",href:\\"#connect-chatbot-to-telegram\\",children:(0,t.jsx)(e.span,{className:\\"icon icon-link\\"})}),\\"Connect chatbot to Telegram\\"]}),`\\n`,(0,t.jsxs)(e.ol,{children:[`\\n`,(0,t.jsx)(e.li,{children:\\"The first step is to register your bot to the BotFather account.\\"}),`\\n`]}),`\\n`,(0,t.jsx)(n,{alt:\\"Image 23 Alt\\",src:\\"/assets/images/products/kata-platform/start-your-first-chatbot/image23.webp\\",caption:{title:\\"Figure 24\\",description:\\"Search BotFather account.\\"},layout:\\"responsive\\",naturalHeight:600,naturalWidth:802}),`\\n`,(0,t.jsxs)(e.ol,{start:\\"2\\",children:[`\\n`,(0,t.jsxs)(e.li,{children:[\\"Type \\",(0,t.jsx)(e.code,{children:\\"/newbot\\"}),\\" and BotFather will ask for your chatbot name. Feel free to use any name you like.\\"]}),`\\n`,(0,t.jsxs)(e.li,{children:[\\"After that, you will be asked to enter your chatbot username. Remember that your bot username has to either start or end with \\",(0,t.jsx)(e.code,{children:\\"bot\\"}),\\".\\"]}),`\\n`,(0,t.jsx)(e.li,{children:\\"Once finished, BotFather will respond with a bot token to access the Telegram Bot API.\\"}),`\\n`]}),`\\n`,(0,t.jsx)(n,{alt:\\"Image 24 Alt\\",src:\\"/assets/images/products/kata-platform/start-your-first-chatbot/image24.webp\\",caption:{title:\\"Figure 25\\",description:\\"Telegram shows bot token.\\"},layout:\\"responsive\\",naturalHeight:601,naturalWidth:801}),`\\n`,(0,t.jsxs)(e.ol,{start:\\"5\\",children:[`\\n`,(0,t.jsx)(e.li,{children:\\"Go back to Platform, then copy the bot access token into the channel drawer.\\"}),`\\n`]}),`\\n`,(0,t.jsx)(n,{alt:\\"Image 25 Alt\\",src:\\"/assets/images/products/kata-platform/start-your-first-chatbot/image25.webp\\",caption:{title:\\"Figure 26\\",description:\\"Input bot access token.\\"},layout:\\"responsive\\",naturalHeight:767,naturalWidth:1140}),`\\n`,(0,t.jsxs)(e.ol,{start:\\"6\\",children:[`\\n`,(0,t.jsxs)(e.li,{children:[\\"Click \\",(0,t.jsx)(e.strong,{children:\\"Create\\"}),\\" to get a webhook from the Kata Platform. Then, click the copy button to copy the webhook URL.\\"]}),`\\n`,(0,t.jsxs)(e.li,{children:[\\"Click on the webhook link to \\",(0,t.jsx)(e.strong,{children:\\"View Channel\\"}),\\" detail. It will show a drawer to copy the access token and webhook URL.\\"]}),`\\n`]}),`\\n`,(0,t.jsx)(n,{alt:\\"Image 26 Alt\\",src:\\"/assets/images/products/kata-platform/start-your-first-chatbot/image26.webp\\",caption:{title:\\"Figure 27\\",description:\\"Input bot access token.\\"},layout:\\"responsive\\",naturalHeight:1005,naturalWidth:1999}),`\\n`,(0,t.jsxs)(e.ol,{start:\\"8\\",children:[`\\n`,(0,t.jsxs)(e.li,{children:[\\"Next, open a new tab on your browser and enter this URL. Change \\",(0,t.jsx)(e.code,{children:\\"{my_bot_token}\\"}),\\" into your own bot token. Also, paste \\",(0,t.jsx)(e.code,{children:\\"{kata_platform_webhook_url}\\"}),\\" with the copied webhook URL.\\"]}),`\\n`]}),`\\n`,(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:\\"code-highlight\\",children:(0,t.jsx)(e.span,{className:\\"code-line\\",children:`https://api.telegram.org/bot{my_bot_token}/setWebhook?url={kata_platform_webhook_url}\\n`})})}),`\\n`,(0,t.jsxs)(e.ol,{start:\\"9\\",children:[`\\n`,(0,t.jsx)(e.li,{children:\\"Click \\\\u201CGo\\\\u201D or press Enter on the keyboard.\\"}),`\\n`]}),`\\n`,(0,t.jsx)(n,{alt:\\"Image 27 Alt\\",src:\\"/assets/images/products/kata-platform/start-your-first-chatbot/image27.webp\\",caption:{title:\\"Figure 28\\",description:\\"Telegram bot has successfully connected.\\"},layout:\\"responsive\\",naturalHeight:164,naturalWidth:449}),`\\n`,(0,t.jsxs)(e.ol,{start:\\"10\\",children:[`\\n`,(0,t.jsx)(e.li,{children:\\"If you see the message \\\\u201CWebhook was set,\\\\u201D you\\\\u2019re all set! Let\\\\u2019s try our chatbot. Open Telegram on the desktop or mobile, and start chatting with your bot.\\"}),`\\n`]}),`\\n`,(0,t.jsx)(n,{alt:\\"Image 28 Alt\\",src:\\"/assets/images/products/kata-platform/start-your-first-chatbot/image28.webp\\",caption:{title:\\"Figure 29\\",description:\\"Testing \\\\u201CHello\\\\u201D in Telegram chatbot.\\"},layout:\\"responsive\\",naturalHeight:900,naturalWidth:1934}),`\\n`,(0,t.jsxs)(e.p,{children:[\\"This is the end of getting started with a chatbot. You can contact \\",(0,t.jsx)(\\"a\\",{href:\\"mailto:support@kata.ai\\",children:(0,t.jsx)(e.a,{href:\\"mailto:support@kata.ai\\",children:\\"support@kata.ai\\"})}),\\" if you have any difficulties implementing this.\\"]})]})}}var F=N;function c(a,i){throw new Error(\\"Expected \\"+(i?\\"component\\":\\"object\\")+\\" `\\"+a+\\"` to be defined: you likely forgot to import, pass, or provide it.\\")}return C(T);})();\\n;return Component;"},"_id":"kata-platform/documentation-content/start-your-first-chatbot.mdx","_raw":{"sourceFilePath":"kata-platform/documentation-content/start-your-first-chatbot.mdx","sourceFileName":"start-your-first-chatbot.mdx","sourceFileDir":"kata-platform/documentation-content","contentType":"mdx","flattenedPath":"kata-platform/documentation-content/start-your-first-chatbot"},"type":"KataPlatform","slug":["documentation-content","start-your-first-chatbot"],"excerpt":"\\nA chatbot is an application that allows humans to have online conversations with a computer via text or voice. This tutorial will create a simple chatbot using the Kata Platform"}');
;// CONCATENATED MODULE: ./.contentlayer/generated/KataPlatform/kata-platform__faqs__bot-development-faqs.mdx.json
const kata_platform_faqs_bot_development_faqs_mdx_namespaceObject = JSON.parse('{"id":"bot-development-faqs","section":"FAQs","title":"Bot Development FAQs","prev":"general-faqs","next":"glossary-general","body":{"raw":"\\n### What is the best practice for making a flow?\\n\\nA flow should be “volatile” which means it gets closed when switching to another flow.\\n\\n```yaml\\nvolatile: true\\n```\\n\\n### How to remove a context after a specific time?\\n\\nYou may use `invalidate` function and filled it with timestamp type\\n\\n```yaml\\ninvalidate: 152053926476\\n```\\n\\n### How to handle the intent that cannot catch user\'s input?\\n\\nAlways use a transition to the state itself named “default” if there are any branching state.\\n\\n<FigureImage\\n  alt=\\"Image 1 Alt\\"\\n  src=\\"/assets/images/products/kata-platform/faqs/bot-development-faqs/image1.webp\\"\\n  layout=\\"responsive\\"\\n  naturalHeight={148}\\n  naturalWidth={372}\\n/>\\n\\n```yaml\\nstates:\\n  showPizza:\\n    action: showPizza\\n    transitions:\\n      askQty:\\n        condition: intent == \\"pizzaType\\"\\n      showPizza:\\n        fallback: true\\n```\\n\\nAlso, you must create `reenter` intent with `command` type. This intent will help the bot ask a question again to user. Also, it will help you to maintain the active session longer.\\n\\n```yaml\\nintents:\\n  reenter:\\n    type: command\\n    condition: content == \\"reenter\\"\\n```\\n\\n### Is it possible to let users trigger a flow by a command?\\n\\nHere is an example of using a command to trigger flow `login` from flow `greet`\\n\\n```yaml\\nflowGreet:\\n  intents:\\n   ...\\n\\n  states:\\n    ...\\n    greet:\\n      end: true\\n      action:\\n        - name: greetingMessage\\n        - name: showLoginMessage\\n        - name: loginCommand\\n\\n  actions:\\n    ...\\n    greetingMessage:\\n      type: text\\n      options:\\n        text: \\"Hello!\\"\\n    showLoginMessage:\\n      type: text\\n      options:\\n        text: \\"Untuk menggunakan layanan ini, kamu perlu login terlebih dahulu.\\"\\n    loginCommand:\\n      type: command\\n      options:\\n        command: login\\n```\\n\\n```yaml\\nflowLogin:\\n  intents:\\n    loginCommand:\\n      initial: true\\n      type: command\\n      condition: content == \\"login\\"\\n   ...\\n```\\n\\n### How to make a different response on each channel?\\n\\nWe may use metadata for specific channel response. Each metadata consists of:\\n\\n- Channel type\\n- Channel access token\\n- Sender ID\\n\\n```yaml\\nstates:\\n  showMenu:\\n    end: true\\n    action:\\n      - name: bridgeShowMenu\\n      - name: showMenuLine\\n        condition: metadata.channelType == \\"line\\"\\n      - name: showMenuFb\\n        condition: metadata.channelType == \\"fbmessenger\\"\\n      - name: showMenuTelegram\\n        condition: metadata.channelType == \\"telegram\\"\\n```\\n\\n### I found out my bot respond incorrectly for first-time users who add the bot. How to handle this?\\n\\nYou have to add below code to resolve the condition\\n\\nIntent code to handle user\'s input:\\n\\n```yaml\\nintents:\\n  # LINE and FB Messenger\\n  getStarted:\\n    initial: true\\n    type: data\\n    condition: \\"payload.type == \'follow\'\\"\\n\\n  # Telegram\\n  startTelegram:\\n    initial: true\\n    type: text\\n    condition: \\"content == \'/start\'\\"\\n```\\n\\ncURL request to add `Get Started` button for Facebook Messenger :\\n\\n```\\ncurl -X POST \\\\\\n  \\"https://graph.facebook.com/v2.6/me/messenger_profile?access_token=<PAGE_ACCESS_TOKEN>\\" \\\\\\n  -H \'Content-Type: application/json\' \\\\\\n  -d \'{\\n\\t\\"get_started\\": {\\n\\t\\t\\"payload\\": \\"type=follow\\"\\n\\t}\\n}\'\\n```\\n\\n### What\'s the best practice to create an action that calls API from a bot?\\n\\nAPI that was called from bot must be returned with status code 200 and JSON Response Body. Otherwise the result in payload will be null.\\n\\n```yaml\\nflowAPI:\\n  intents:\\n    ...\\n    status:\\n      type: command\\n      condition: content == \\"status\\"\\n\\n  states:\\n    ...\\n    callAPI:\\n      action:\\n        - name: callAPIMock\\n        - name: handleResult\\n      transitions:\\n        success:\\n          condition: intent == \\"status\\" && payload.result\\n        fail:\\n          condition: intent == \\"status\\" && !payload.result\\n        callAPI:\\n          fallback: true\\n\\n  actions:\\n    ...\\n    callAPIMock:\\n      type: api\\n      options:\\n        method: \\"GET\\"\\n        uri: \\"https://www.mocky.io/v2/5185415ba171ea3a00704eed\\"\\n    handleResult:\\n      type: command\\n      options:\\n        command: status\\n        payload:\\n          result: $(result)\\n```\\n\\n### How to get the username from each channel?\\n\\nYou have to use API action in the bot to use specified API\\n\\n- LINE: https://developers.line.me/en/docs/messaging-api/reference/#get-profile\\n- FB Messenger: https://developers.facebook.com/docs/messenger-platform/identity/user-profile\\n- For Telegram: access `metadata.telegramSenderName`\\n\\nFor example:\\n\\n```yaml\\nexampleFlow:\\n  intents:\\n    getStarted:\\n      initial: true\\n      type: data\\n      condition: \\"payload.type == \'follow\'\\"\\n\\n  states:\\n    addAsFriend:\\n      initial: true\\n      transitions:\\n        greetUser:\\n          fallback: true\\n          mapping:\\n            context.userId: metadata.lineSenderId\\n            context.token: metadata.lineAccessToken\\n    greetUser:\\n      end: true\\n      action:\\n        - name: callLineAPI\\n        - name: displayResult\\n\\n  actions:\\n    callLineAPI:\\n      type: api\\n      options:\\n        method: \'GET\'\\n        headers:\\n          Authorization: \'Bearer $(context.token)\'\\n        uri: \'https://api.line.me/v2/bot/profile/$(context.userId)\'\\n    displayResult:\\n      type: text\\n      options:\\n        text: \'Halo, $(result.displayName) terima kasih sudah add kami...\'\\n```\\n\\n### Is there any configurable field where we can put our google map api key due to location action usage?\\n\\n1. For setup your Google API Key, put in config in bot studio:\\n   `googleApiKey: thisisgoogleapikey`\\n2. Then, call the configuration in action :\\n\\n```yaml\\nactions:\\n  options:\\n    text: $(config.googleApiKey)\\n```\\n\\n### If FB messenger & LINE has action button which use URL, how about Twitter? Is there any alternative way such as action text URL?\\n\\nTwitter has `quickreply` that quite similar with action button. Follow this code to put `quickreply` :\\n\\n```yaml\\ntype: \\"template\\"\\noptions:\\n    type: \\"button\\" | \\"confirm\\"\\n    items:\\n        quickreply:\\n            - type: \\"text\\"\\n              label: string\\n              payload:\\n                [key : string]: string\\n```\\n\\n### How to get metadata time?\\n\\nYou may use `metadata.channelType` in Bot configuration\\n\\n### How to use Flatten in NLUs?\\n\\n#### Config in bot.yml\\n\\n```yaml\\nnlus:\\n  mynl:\\n    type: nl\\n    options: nluId:\\"user:nlu-name\\"\\n      token: \\"token\\"\\n      output: <type>\\n      threshold: <number>\\n      flatten: true # optional, default false\\n```\\n\\nIf flatten is enabled, first object in array will be the value of the entity with entity name as the key\\n\\n#### Output Type: Raw\\n\\nflatten: false\\n\\n```\\n{ \'intent\': [{ \'type\': \'trait\', \'score\': 1, \'value\': \'mainMenu\' }] }\\n```\\n\\nflatten: true\\n\\n```\\n{\\n  \'intentArray\': [{ \'type\': \'trait\', \'score\': 1, \'value\': \'mainMenu\' }],\\n  \'intent\': { \'type\': \'trait\', \'score\': 1, \'value\': \'mainMenu\' },\\n}\\n```\\n\\n#### Output Type: Value\\n\\nflatten: false\\n\\n```\\n{ \'intent\': [\'mainMenu\'] }\\n```\\n\\nflatten: true\\n\\n```\\n{ \'intentArray\': [\'mainMenu\'], \'intent\': \'mainMenu\' }\\n```\\n\\n### How to reinit session in kataCLI ?\\n\\nExecute `kata console` then `clear()`\\n\\n### How many seconds for timeout action type API hit in Kata?\\n\\nKata put 5 Seconds for timeout condition when hit API\\n\\n### How to login as team in Kata-CLI ?\\n\\n1. First, execute `kata login` and login using your username\\n2. Then, run `kata switch-team <TeamName>` for switch into team user\\n\\n### I invited by someone as his team, but in my account the team didn\'t show. What should I do ?\\n\\n1. Try to relogin (read : logout then login again)\\n2. Then, you shall see your team is available in account switcher\\n\\n### I got an error which written \\"Errror: Max Recursion of 3 is reached\\". How to fix this error ?\\n\\nThis error defines when your bot is move to another state more than 3 times. Solutions :\\n\\n1. Go to bot configuration\\n2. Write : `maxRecursion: 10`\\n","code":"var Component=(()=>{var h=Object.create;var t=Object.defineProperty;var p=Object.getOwnPropertyDescriptor;var m=Object.getOwnPropertyNames;var u=Object.getPrototypeOf,N=Object.prototype.hasOwnProperty;var i=a=>t(a,\\"__esModule\\",{value:!0});var k=(a,s)=>()=>(s||a((s={exports:{}}).exports,s),s.exports),y=(a,s)=>{for(var l in s)t(a,l,{get:s[l],enumerable:!0})},o=(a,s,l,n)=>{if(s&&typeof s==\\"object\\"||typeof s==\\"function\\")for(let c of m(s))!N.call(a,c)&&(l||c!==\\"default\\")&&t(a,c,{get:()=>s[c],enumerable:!(n=p(s,c))||n.enumerable});return a},g=(a,s)=>o(i(t(a!=null?h(u(a)):{},\\"default\\",!s&&a&&a.__esModule?{get:()=>a.default,enumerable:!0}:{value:a,enumerable:!0})),a),f=(a=>(s,l)=>a&&a.get(s)||(l=o(i({}),s,1),a&&a.set(s,l),l))(typeof WeakMap!=\\"undefined\\"?new WeakMap:0);var d=k((T,r)=>{r.exports=_jsx_runtime});var I={};y(I,{default:()=>x,frontmatter:()=>w});var e=g(d()),w={id:\\"bot-development-faqs\\",title:\\"Bot Development FAQs\\",prev:\\"general-faqs\\",next:\\"glossary-general\\",section:\\"FAQs\\"};function b(a={}){let{wrapper:s}=a.components||{};return s?(0,e.jsx)(s,Object.assign({},a,{children:(0,e.jsx)(l,{})})):l();function l(){let n=Object.assign({h3:\\"h3\\",a:\\"a\\",span:\\"span\\",p:\\"p\\",pre:\\"pre\\",code:\\"code\\",ul:\\"ul\\",li:\\"li\\",ol:\\"ol\\",h4:\\"h4\\"},a.components),{FigureImage:c}=n;return c||v(\\"FigureImage\\",!0),(0,e.jsxs)(e.Fragment,{children:[(0,e.jsxs)(n.h3,{id:\\"what-is-the-best-practice-for-making-a-flow\\",children:[(0,e.jsx)(n.a,{className:\\"anchor\\",href:\\"#what-is-the-best-practice-for-making-a-flow\\",children:(0,e.jsx)(n.span,{className:\\"icon icon-link\\"})}),\\"What is the best practice for making a flow?\\"]}),`\\n`,(0,e.jsx)(n.p,{children:\\"A flow should be \\\\u201Cvolatile\\\\u201D which means it gets closed when switching to another flow.\\"}),`\\n`,(0,e.jsx)(n.pre,{className:\\"language-yaml\\",children:(0,e.jsx)(n.code,{className:\\"language-yaml code-highlight\\",children:(0,e.jsxs)(n.span,{className:\\"code-line\\",children:[(0,e.jsx)(n.span,{className:\\"token key atrule\\",children:\\"volatile\\"}),(0,e.jsx)(n.span,{className:\\"token punctuation\\",children:\\":\\"}),\\" \\",(0,e.jsx)(n.span,{className:\\"token boolean important\\",children:\\"true\\"}),`\\n`]})})}),`\\n`,(0,e.jsxs)(n.h3,{id:\\"how-to-remove-a-context-after-a-specific-time\\",children:[(0,e.jsx)(n.a,{className:\\"anchor\\",href:\\"#how-to-remove-a-context-after-a-specific-time\\",children:(0,e.jsx)(n.span,{className:\\"icon icon-link\\"})}),\\"How to remove a context after a specific time?\\"]}),`\\n`,(0,e.jsxs)(n.p,{children:[\\"You may use \\",(0,e.jsx)(n.code,{children:\\"invalidate\\"}),\\" function and filled it with timestamp type\\"]}),`\\n`,(0,e.jsx)(n.pre,{className:\\"language-yaml\\",children:(0,e.jsx)(n.code,{className:\\"language-yaml code-highlight\\",children:(0,e.jsxs)(n.span,{className:\\"code-line\\",children:[(0,e.jsx)(n.span,{className:\\"token key atrule\\",children:\\"invalidate\\"}),(0,e.jsx)(n.span,{className:\\"token punctuation\\",children:\\":\\"}),\\" \\",(0,e.jsx)(n.span,{className:\\"token number\\",children:\\"152053926476\\"}),`\\n`]})})}),`\\n`,(0,e.jsxs)(n.h3,{id:\\"how-to-handle-the-intent-that-cannot-catch-users-input\\",children:[(0,e.jsx)(n.a,{className:\\"anchor\\",href:\\"#how-to-handle-the-intent-that-cannot-catch-users-input\\",children:(0,e.jsx)(n.span,{className:\\"icon icon-link\\"})}),\\"How to handle the intent that cannot catch user\'s input?\\"]}),`\\n`,(0,e.jsx)(n.p,{children:\\"Always use a transition to the state itself named \\\\u201Cdefault\\\\u201D if there are any branching state.\\"}),`\\n`,(0,e.jsx)(c,{alt:\\"Image 1 Alt\\",src:\\"/assets/images/products/kata-platform/faqs/bot-development-faqs/image1.webp\\",layout:\\"responsive\\",naturalHeight:148,naturalWidth:372}),`\\n`,(0,e.jsx)(n.pre,{className:\\"language-yaml\\",children:(0,e.jsxs)(n.code,{className:\\"language-yaml code-highlight\\",children:[(0,e.jsxs)(n.span,{className:\\"code-line\\",children:[(0,e.jsx)(n.span,{className:\\"token key atrule\\",children:\\"states\\"}),(0,e.jsx)(n.span,{className:\\"token punctuation\\",children:\\":\\"}),`\\n`]}),(0,e.jsxs)(n.span,{className:\\"code-line\\",children:[\\"  \\",(0,e.jsx)(n.span,{className:\\"token key atrule\\",children:\\"showPizza\\"}),(0,e.jsx)(n.span,{className:\\"token punctuation\\",children:\\":\\"}),`\\n`]}),(0,e.jsxs)(n.span,{className:\\"code-line\\",children:[\\"    \\",(0,e.jsx)(n.span,{className:\\"token key atrule\\",children:\\"action\\"}),(0,e.jsx)(n.span,{className:\\"token punctuation\\",children:\\":\\"}),` showPizza\\n`]}),(0,e.jsxs)(n.span,{className:\\"code-line\\",children:[\\"    \\",(0,e.jsx)(n.span,{className:\\"token key atrule\\",children:\\"transitions\\"}),(0,e.jsx)(n.span,{className:\\"token punctuation\\",children:\\":\\"}),`\\n`]}),(0,e.jsxs)(n.span,{className:\\"code-line\\",children:[\\"      \\",(0,e.jsx)(n.span,{className:\\"token key atrule\\",children:\\"askQty\\"}),(0,e.jsx)(n.span,{className:\\"token punctuation\\",children:\\":\\"}),`\\n`]}),(0,e.jsxs)(n.span,{className:\\"code-line\\",children:[\\"        \\",(0,e.jsx)(n.span,{className:\\"token key atrule\\",children:\\"condition\\"}),(0,e.jsx)(n.span,{className:\\"token punctuation\\",children:\\":\\"}),` intent == \\"pizzaType\\"\\n`]}),(0,e.jsxs)(n.span,{className:\\"code-line\\",children:[\\"      \\",(0,e.jsx)(n.span,{className:\\"token key atrule\\",children:\\"showPizza\\"}),(0,e.jsx)(n.span,{className:\\"token punctuation\\",children:\\":\\"}),`\\n`]}),(0,e.jsxs)(n.span,{className:\\"code-line\\",children:[\\"        \\",(0,e.jsx)(n.span,{className:\\"token key atrule\\",children:\\"fallback\\"}),(0,e.jsx)(n.span,{className:\\"token punctuation\\",children:\\":\\"}),\\" \\",(0,e.jsx)(n.span,{className:\\"token boolean important\\",children:\\"true\\"}),`\\n`]})]})}),`\\n`,(0,e.jsxs)(n.p,{children:[\\"Also, you must create \\",(0,e.jsx)(n.code,{children:\\"reenter\\"}),\\" intent with \\",(0,e.jsx)(n.code,{children:\\"command\\"}),\\" type. This intent will help the bot ask a question again to user. Also, it will help you to maintain the active session longer.\\"]}),`\\n`,(0,e.jsx)(n.pre,{className:\\"language-yaml\\",children:(0,e.jsxs)(n.code,{className:\\"language-yaml code-highlight\\",children:[(0,e.jsxs)(n.span,{className:\\"code-line\\",children:[(0,e.jsx)(n.span,{className:\\"token key atrule\\",children:\\"intents\\"}),(0,e.jsx)(n.span,{className:\\"token punctuation\\",children:\\":\\"}),`\\n`]}),(0,e.jsxs)(n.span,{className:\\"code-line\\",children:[\\"  \\",(0,e.jsx)(n.span,{className:\\"token key atrule\\",children:\\"reenter\\"}),(0,e.jsx)(n.span,{className:\\"token punctuation\\",children:\\":\\"}),`\\n`]}),(0,e.jsxs)(n.span,{className:\\"code-line\\",children:[\\"    \\",(0,e.jsx)(n.span,{className:\\"token key atrule\\",children:\\"type\\"}),(0,e.jsx)(n.span,{className:\\"token punctuation\\",children:\\":\\"}),` command\\n`]}),(0,e.jsxs)(n.span,{className:\\"code-line\\",children:[\\"    \\",(0,e.jsx)(n.span,{className:\\"token key atrule\\",children:\\"condition\\"}),(0,e.jsx)(n.span,{className:\\"token punctuation\\",children:\\":\\"}),` content == \\"reenter\\"\\n`]})]})}),`\\n`,(0,e.jsxs)(n.h3,{id:\\"is-it-possible-to-let-users-trigger-a-flow-by-a-command\\",children:[(0,e.jsx)(n.a,{className:\\"anchor\\",href:\\"#is-it-possible-to-let-users-trigger-a-flow-by-a-command\\",children:(0,e.jsx)(n.span,{className:\\"icon icon-link\\"})}),\\"Is it possible to let users trigger a flow by a command?\\"]}),`\\n`,(0,e.jsxs)(n.p,{children:[\\"Here is an example of using a command to trigger flow \\",(0,e.jsx)(n.code,{children:\\"login\\"}),\\" from flow \\",(0,e.jsx)(n.code,{children:\\"greet\\"})]}),`\\n`,(0,e.jsx)(n.pre,{className:\\"language-yaml\\",children:(0,e.jsxs)(n.code,{className:\\"language-yaml code-highlight\\",children:[(0,e.jsxs)(n.span,{className:\\"code-line\\",children:[(0,e.jsx)(n.span,{className:\\"token key atrule\\",children:\\"flowGreet\\"}),(0,e.jsx)(n.span,{className:\\"token punctuation\\",children:\\":\\"}),`\\n`]}),(0,e.jsxs)(n.span,{className:\\"code-line\\",children:[\\"  \\",(0,e.jsx)(n.span,{className:\\"token key atrule\\",children:\\"intents\\"}),(0,e.jsx)(n.span,{className:\\"token punctuation\\",children:\\":\\"}),`\\n`]}),(0,e.jsxs)(n.span,{className:\\"code-line\\",children:[\\"   \\",(0,e.jsx)(n.span,{className:\\"token punctuation\\",children:\\"...\\"}),`\\n`]}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`\\n`}),(0,e.jsxs)(n.span,{className:\\"code-line\\",children:[\\"  \\",(0,e.jsx)(n.span,{className:\\"token key atrule\\",children:\\"states\\"}),(0,e.jsx)(n.span,{className:\\"token punctuation\\",children:\\":\\"}),`\\n`]}),(0,e.jsxs)(n.span,{className:\\"code-line\\",children:[\\"    \\",(0,e.jsx)(n.span,{className:\\"token punctuation\\",children:\\"...\\"}),`\\n`]}),(0,e.jsxs)(n.span,{className:\\"code-line\\",children:[\\"    \\",(0,e.jsx)(n.span,{className:\\"token key atrule\\",children:\\"greet\\"}),(0,e.jsx)(n.span,{className:\\"token punctuation\\",children:\\":\\"}),`\\n`]}),(0,e.jsxs)(n.span,{className:\\"code-line\\",children:[\\"      \\",(0,e.jsx)(n.span,{className:\\"token key atrule\\",children:\\"end\\"}),(0,e.jsx)(n.span,{className:\\"token punctuation\\",children:\\":\\"}),\\" \\",(0,e.jsx)(n.span,{className:\\"token boolean important\\",children:\\"true\\"}),`\\n`]}),(0,e.jsxs)(n.span,{className:\\"code-line\\",children:[\\"      \\",(0,e.jsx)(n.span,{className:\\"token key atrule\\",children:\\"action\\"}),(0,e.jsx)(n.span,{className:\\"token punctuation\\",children:\\":\\"}),`\\n`]}),(0,e.jsxs)(n.span,{className:\\"code-line\\",children:[\\"        \\",(0,e.jsx)(n.span,{className:\\"token punctuation\\",children:\\"-\\"}),\\" \\",(0,e.jsx)(n.span,{className:\\"token key atrule\\",children:\\"name\\"}),(0,e.jsx)(n.span,{className:\\"token punctuation\\",children:\\":\\"}),` greetingMessage\\n`]}),(0,e.jsxs)(n.span,{className:\\"code-line\\",children:[\\"        \\",(0,e.jsx)(n.span,{className:\\"token punctuation\\",children:\\"-\\"}),\\" \\",(0,e.jsx)(n.span,{className:\\"token key atrule\\",children:\\"name\\"}),(0,e.jsx)(n.span,{className:\\"token punctuation\\",children:\\":\\"}),` showLoginMessage\\n`]}),(0,e.jsxs)(n.span,{className:\\"code-line\\",children:[\\"        \\",(0,e.jsx)(n.span,{className:\\"token punctuation\\",children:\\"-\\"}),\\" \\",(0,e.jsx)(n.span,{className:\\"token key atrule\\",children:\\"name\\"}),(0,e.jsx)(n.span,{className:\\"token punctuation\\",children:\\":\\"}),` loginCommand\\n`]}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`\\n`}),(0,e.jsxs)(n.span,{className:\\"code-line\\",children:[\\"  \\",(0,e.jsx)(n.span,{className:\\"token key atrule\\",children:\\"actions\\"}),(0,e.jsx)(n.span,{className:\\"token punctuation\\",children:\\":\\"}),`\\n`]}),(0,e.jsxs)(n.span,{className:\\"code-line\\",children:[\\"    \\",(0,e.jsx)(n.span,{className:\\"token punctuation\\",children:\\"...\\"}),`\\n`]}),(0,e.jsxs)(n.span,{className:\\"code-line\\",children:[\\"    \\",(0,e.jsx)(n.span,{className:\\"token key atrule\\",children:\\"greetingMessage\\"}),(0,e.jsx)(n.span,{className:\\"token punctuation\\",children:\\":\\"}),`\\n`]}),(0,e.jsxs)(n.span,{className:\\"code-line\\",children:[\\"      \\",(0,e.jsx)(n.span,{className:\\"token key atrule\\",children:\\"type\\"}),(0,e.jsx)(n.span,{className:\\"token punctuation\\",children:\\":\\"}),` text\\n`]}),(0,e.jsxs)(n.span,{className:\\"code-line\\",children:[\\"      \\",(0,e.jsx)(n.span,{className:\\"token key atrule\\",children:\\"options\\"}),(0,e.jsx)(n.span,{className:\\"token punctuation\\",children:\\":\\"}),`\\n`]}),(0,e.jsxs)(n.span,{className:\\"code-line\\",children:[\\"        \\",(0,e.jsx)(n.span,{className:\\"token key atrule\\",children:\\"text\\"}),(0,e.jsx)(n.span,{className:\\"token punctuation\\",children:\\":\\"}),\\" \\",(0,e.jsx)(n.span,{className:\\"token string\\",children:\'\\"Hello!\\"\'}),`\\n`]}),(0,e.jsxs)(n.span,{className:\\"code-line\\",children:[\\"    \\",(0,e.jsx)(n.span,{className:\\"token key atrule\\",children:\\"showLoginMessage\\"}),(0,e.jsx)(n.span,{className:\\"token punctuation\\",children:\\":\\"}),`\\n`]}),(0,e.jsxs)(n.span,{className:\\"code-line\\",children:[\\"      \\",(0,e.jsx)(n.span,{className:\\"token key atrule\\",children:\\"type\\"}),(0,e.jsx)(n.span,{className:\\"token punctuation\\",children:\\":\\"}),` text\\n`]}),(0,e.jsxs)(n.span,{className:\\"code-line\\",children:[\\"      \\",(0,e.jsx)(n.span,{className:\\"token key atrule\\",children:\\"options\\"}),(0,e.jsx)(n.span,{className:\\"token punctuation\\",children:\\":\\"}),`\\n`]}),(0,e.jsxs)(n.span,{className:\\"code-line\\",children:[\\"        \\",(0,e.jsx)(n.span,{className:\\"token key atrule\\",children:\\"text\\"}),(0,e.jsx)(n.span,{className:\\"token punctuation\\",children:\\":\\"}),\\" \\",(0,e.jsx)(n.span,{className:\\"token string\\",children:\'\\"Untuk menggunakan layanan ini, kamu perlu login terlebih dahulu.\\"\'}),`\\n`]}),(0,e.jsxs)(n.span,{className:\\"code-line\\",children:[\\"    \\",(0,e.jsx)(n.span,{className:\\"token key atrule\\",children:\\"loginCommand\\"}),(0,e.jsx)(n.span,{className:\\"token punctuation\\",children:\\":\\"}),`\\n`]}),(0,e.jsxs)(n.span,{className:\\"code-line\\",children:[\\"      \\",(0,e.jsx)(n.span,{className:\\"token key atrule\\",children:\\"type\\"}),(0,e.jsx)(n.span,{className:\\"token punctuation\\",children:\\":\\"}),` command\\n`]}),(0,e.jsxs)(n.span,{className:\\"code-line\\",children:[\\"      \\",(0,e.jsx)(n.span,{className:\\"token key atrule\\",children:\\"options\\"}),(0,e.jsx)(n.span,{className:\\"token punctuation\\",children:\\":\\"}),`\\n`]}),(0,e.jsxs)(n.span,{className:\\"code-line\\",children:[\\"        \\",(0,e.jsx)(n.span,{className:\\"token key atrule\\",children:\\"command\\"}),(0,e.jsx)(n.span,{className:\\"token punctuation\\",children:\\":\\"}),` login\\n`]})]})}),`\\n`,(0,e.jsx)(n.pre,{className:\\"language-yaml\\",children:(0,e.jsxs)(n.code,{className:\\"language-yaml code-highlight\\",children:[(0,e.jsxs)(n.span,{className:\\"code-line\\",children:[(0,e.jsx)(n.span,{className:\\"token key atrule\\",children:\\"flowLogin\\"}),(0,e.jsx)(n.span,{className:\\"token punctuation\\",children:\\":\\"}),`\\n`]}),(0,e.jsxs)(n.span,{className:\\"code-line\\",children:[\\"  \\",(0,e.jsx)(n.span,{className:\\"token key atrule\\",children:\\"intents\\"}),(0,e.jsx)(n.span,{className:\\"token punctuation\\",children:\\":\\"}),`\\n`]}),(0,e.jsxs)(n.span,{className:\\"code-line\\",children:[\\"    \\",(0,e.jsx)(n.span,{className:\\"token key atrule\\",children:\\"loginCommand\\"}),(0,e.jsx)(n.span,{className:\\"token punctuation\\",children:\\":\\"}),`\\n`]}),(0,e.jsxs)(n.span,{className:\\"code-line\\",children:[\\"      \\",(0,e.jsx)(n.span,{className:\\"token key atrule\\",children:\\"initial\\"}),(0,e.jsx)(n.span,{className:\\"token punctuation\\",children:\\":\\"}),\\" \\",(0,e.jsx)(n.span,{className:\\"token boolean important\\",children:\\"true\\"}),`\\n`]}),(0,e.jsxs)(n.span,{className:\\"code-line\\",children:[\\"      \\",(0,e.jsx)(n.span,{className:\\"token key atrule\\",children:\\"type\\"}),(0,e.jsx)(n.span,{className:\\"token punctuation\\",children:\\":\\"}),` command\\n`]}),(0,e.jsxs)(n.span,{className:\\"code-line\\",children:[\\"      \\",(0,e.jsx)(n.span,{className:\\"token key atrule\\",children:\\"condition\\"}),(0,e.jsx)(n.span,{className:\\"token punctuation\\",children:\\":\\"}),` content == \\"login\\"\\n`]}),(0,e.jsxs)(n.span,{className:\\"code-line\\",children:[\\"   \\",(0,e.jsx)(n.span,{className:\\"token punctuation\\",children:\\"...\\"}),`\\n`]})]})}),`\\n`,(0,e.jsxs)(n.h3,{id:\\"how-to-make-a-different-response-on-each-channel\\",children:[(0,e.jsx)(n.a,{className:\\"anchor\\",href:\\"#how-to-make-a-different-response-on-each-channel\\",children:(0,e.jsx)(n.span,{className:\\"icon icon-link\\"})}),\\"How to make a different response on each channel?\\"]}),`\\n`,(0,e.jsx)(n.p,{children:\\"We may use metadata for specific channel response. Each metadata consists of:\\"}),`\\n`,(0,e.jsxs)(n.ul,{children:[`\\n`,(0,e.jsx)(n.li,{children:\\"Channel type\\"}),`\\n`,(0,e.jsx)(n.li,{children:\\"Channel access token\\"}),`\\n`,(0,e.jsx)(n.li,{children:\\"Sender ID\\"}),`\\n`]}),`\\n`,(0,e.jsx)(n.pre,{className:\\"language-yaml\\",children:(0,e.jsxs)(n.code,{className:\\"language-yaml code-highlight\\",children:[(0,e.jsxs)(n.span,{className:\\"code-line\\",children:[(0,e.jsx)(n.span,{className:\\"token key atrule\\",children:\\"states\\"}),(0,e.jsx)(n.span,{className:\\"token punctuation\\",children:\\":\\"}),`\\n`]}),(0,e.jsxs)(n.span,{className:\\"code-line\\",children:[\\"  \\",(0,e.jsx)(n.span,{className:\\"token key atrule\\",children:\\"showMenu\\"}),(0,e.jsx)(n.span,{className:\\"token punctuation\\",children:\\":\\"}),`\\n`]}),(0,e.jsxs)(n.span,{className:\\"code-line\\",children:[\\"    \\",(0,e.jsx)(n.span,{className:\\"token key atrule\\",children:\\"end\\"}),(0,e.jsx)(n.span,{className:\\"token punctuation\\",children:\\":\\"}),\\" \\",(0,e.jsx)(n.span,{className:\\"token boolean important\\",children:\\"true\\"}),`\\n`]}),(0,e.jsxs)(n.span,{className:\\"code-line\\",children:[\\"    \\",(0,e.jsx)(n.span,{className:\\"token key atrule\\",children:\\"action\\"}),(0,e.jsx)(n.span,{className:\\"token punctuation\\",children:\\":\\"}),`\\n`]}),(0,e.jsxs)(n.span,{className:\\"code-line\\",children:[\\"      \\",(0,e.jsx)(n.span,{className:\\"token punctuation\\",children:\\"-\\"}),\\" \\",(0,e.jsx)(n.span,{className:\\"token key atrule\\",children:\\"name\\"}),(0,e.jsx)(n.span,{className:\\"token punctuation\\",children:\\":\\"}),` bridgeShowMenu\\n`]}),(0,e.jsxs)(n.span,{className:\\"code-line\\",children:[\\"      \\",(0,e.jsx)(n.span,{className:\\"token punctuation\\",children:\\"-\\"}),\\" \\",(0,e.jsx)(n.span,{className:\\"token key atrule\\",children:\\"name\\"}),(0,e.jsx)(n.span,{className:\\"token punctuation\\",children:\\":\\"}),` showMenuLine\\n`]}),(0,e.jsxs)(n.span,{className:\\"code-line\\",children:[\\"        \\",(0,e.jsx)(n.span,{className:\\"token key atrule\\",children:\\"condition\\"}),(0,e.jsx)(n.span,{className:\\"token punctuation\\",children:\\":\\"}),` metadata.channelType == \\"line\\"\\n`]}),(0,e.jsxs)(n.span,{className:\\"code-line\\",children:[\\"      \\",(0,e.jsx)(n.span,{className:\\"token punctuation\\",children:\\"-\\"}),\\" \\",(0,e.jsx)(n.span,{className:\\"token key atrule\\",children:\\"name\\"}),(0,e.jsx)(n.span,{className:\\"token punctuation\\",children:\\":\\"}),` showMenuFb\\n`]}),(0,e.jsxs)(n.span,{className:\\"code-line\\",children:[\\"        \\",(0,e.jsx)(n.span,{className:\\"token key atrule\\",children:\\"condition\\"}),(0,e.jsx)(n.span,{className:\\"token punctuation\\",children:\\":\\"}),` metadata.channelType == \\"fbmessenger\\"\\n`]}),(0,e.jsxs)(n.span,{className:\\"code-line\\",children:[\\"      \\",(0,e.jsx)(n.span,{className:\\"token punctuation\\",children:\\"-\\"}),\\" \\",(0,e.jsx)(n.span,{className:\\"token key atrule\\",children:\\"name\\"}),(0,e.jsx)(n.span,{className:\\"token punctuation\\",children:\\":\\"}),` showMenuTelegram\\n`]}),(0,e.jsxs)(n.span,{className:\\"code-line\\",children:[\\"        \\",(0,e.jsx)(n.span,{className:\\"token key atrule\\",children:\\"condition\\"}),(0,e.jsx)(n.span,{className:\\"token punctuation\\",children:\\":\\"}),` metadata.channelType == \\"telegram\\"\\n`]})]})}),`\\n`,(0,e.jsxs)(n.h3,{id:\\"i-found-out-my-bot-respond-incorrectly-for-first-time-users-who-add-the-bot-how-to-handle-this\\",children:[(0,e.jsx)(n.a,{className:\\"anchor\\",href:\\"#i-found-out-my-bot-respond-incorrectly-for-first-time-users-who-add-the-bot-how-to-handle-this\\",children:(0,e.jsx)(n.span,{className:\\"icon icon-link\\"})}),\\"I found out my bot respond incorrectly for first-time users who add the bot. How to handle this?\\"]}),`\\n`,(0,e.jsx)(n.p,{children:\\"You have to add below code to resolve the condition\\"}),`\\n`,(0,e.jsx)(n.p,{children:\\"Intent code to handle user\'s input:\\"}),`\\n`,(0,e.jsx)(n.pre,{className:\\"language-yaml\\",children:(0,e.jsxs)(n.code,{className:\\"language-yaml code-highlight\\",children:[(0,e.jsxs)(n.span,{className:\\"code-line\\",children:[(0,e.jsx)(n.span,{className:\\"token key atrule\\",children:\\"intents\\"}),(0,e.jsx)(n.span,{className:\\"token punctuation\\",children:\\":\\"}),`\\n`]}),(0,e.jsxs)(n.span,{className:\\"code-line\\",children:[\\"  \\",(0,e.jsx)(n.span,{className:\\"token comment\\",children:\\"# LINE and FB Messenger\\"}),`\\n`]}),(0,e.jsxs)(n.span,{className:\\"code-line\\",children:[\\"  \\",(0,e.jsx)(n.span,{className:\\"token key atrule\\",children:\\"getStarted\\"}),(0,e.jsx)(n.span,{className:\\"token punctuation\\",children:\\":\\"}),`\\n`]}),(0,e.jsxs)(n.span,{className:\\"code-line\\",children:[\\"    \\",(0,e.jsx)(n.span,{className:\\"token key atrule\\",children:\\"initial\\"}),(0,e.jsx)(n.span,{className:\\"token punctuation\\",children:\\":\\"}),\\" \\",(0,e.jsx)(n.span,{className:\\"token boolean important\\",children:\\"true\\"}),`\\n`]}),(0,e.jsxs)(n.span,{className:\\"code-line\\",children:[\\"    \\",(0,e.jsx)(n.span,{className:\\"token key atrule\\",children:\\"type\\"}),(0,e.jsx)(n.span,{className:\\"token punctuation\\",children:\\":\\"}),` data\\n`]}),(0,e.jsxs)(n.span,{className:\\"code-line\\",children:[\\"    \\",(0,e.jsx)(n.span,{className:\\"token key atrule\\",children:\\"condition\\"}),(0,e.jsx)(n.span,{className:\\"token punctuation\\",children:\\":\\"}),\\" \\",(0,e.jsx)(n.span,{className:\\"token string\\",children:`\\"payload.type == \'follow\'\\"`}),`\\n`]}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`\\n`}),(0,e.jsxs)(n.span,{className:\\"code-line\\",children:[\\"  \\",(0,e.jsx)(n.span,{className:\\"token comment\\",children:\\"# Telegram\\"}),`\\n`]}),(0,e.jsxs)(n.span,{className:\\"code-line\\",children:[\\"  \\",(0,e.jsx)(n.span,{className:\\"token key atrule\\",children:\\"startTelegram\\"}),(0,e.jsx)(n.span,{className:\\"token punctuation\\",children:\\":\\"}),`\\n`]}),(0,e.jsxs)(n.span,{className:\\"code-line\\",children:[\\"    \\",(0,e.jsx)(n.span,{className:\\"token key atrule\\",children:\\"initial\\"}),(0,e.jsx)(n.span,{className:\\"token punctuation\\",children:\\":\\"}),\\" \\",(0,e.jsx)(n.span,{className:\\"token boolean important\\",children:\\"true\\"}),`\\n`]}),(0,e.jsxs)(n.span,{className:\\"code-line\\",children:[\\"    \\",(0,e.jsx)(n.span,{className:\\"token key atrule\\",children:\\"type\\"}),(0,e.jsx)(n.span,{className:\\"token punctuation\\",children:\\":\\"}),` text\\n`]}),(0,e.jsxs)(n.span,{className:\\"code-line\\",children:[\\"    \\",(0,e.jsx)(n.span,{className:\\"token key atrule\\",children:\\"condition\\"}),(0,e.jsx)(n.span,{className:\\"token punctuation\\",children:\\":\\"}),\\" \\",(0,e.jsx)(n.span,{className:\\"token string\\",children:`\\"content == \'/start\'\\"`}),`\\n`]})]})}),`\\n`,(0,e.jsxs)(n.p,{children:[\\"cURL request to add \\",(0,e.jsx)(n.code,{children:\\"Get Started\\"}),\\" button for Facebook Messenger :\\"]}),`\\n`,(0,e.jsx)(n.pre,{children:(0,e.jsxs)(n.code,{className:\\"code-highlight\\",children:[(0,e.jsx)(n.span,{className:\\"code-line\\",children:`curl -X POST \\\\\\\\\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`  \\"https://graph.facebook.com/v2.6/me/messenger_profile?access_token=<PAGE_ACCESS_TOKEN>\\" \\\\\\\\\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`  -H \'Content-Type: application/json\' \\\\\\\\\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`  -d \'{\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`\\t\\"get_started\\": {\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`\\t\\t\\"payload\\": \\"type=follow\\"\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`\\t}\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`}\'\\n`})]})}),`\\n`,(0,e.jsxs)(n.h3,{id:\\"whats-the-best-practice-to-create-an-action-that-calls-api-from-a-bot\\",children:[(0,e.jsx)(n.a,{className:\\"anchor\\",href:\\"#whats-the-best-practice-to-create-an-action-that-calls-api-from-a-bot\\",children:(0,e.jsx)(n.span,{className:\\"icon icon-link\\"})}),\\"What\'s the best practice to create an action that calls API from a bot?\\"]}),`\\n`,(0,e.jsx)(n.p,{children:\\"API that was called from bot must be returned with status code 200 and JSON Response Body. Otherwise the result in payload will be null.\\"}),`\\n`,(0,e.jsx)(n.pre,{className:\\"language-yaml\\",children:(0,e.jsxs)(n.code,{className:\\"language-yaml code-highlight\\",children:[(0,e.jsxs)(n.span,{className:\\"code-line\\",children:[(0,e.jsx)(n.span,{className:\\"token key atrule\\",children:\\"flowAPI\\"}),(0,e.jsx)(n.span,{className:\\"token punctuation\\",children:\\":\\"}),`\\n`]}),(0,e.jsxs)(n.span,{className:\\"code-line\\",children:[\\"  \\",(0,e.jsx)(n.span,{className:\\"token key atrule\\",children:\\"intents\\"}),(0,e.jsx)(n.span,{className:\\"token punctuation\\",children:\\":\\"}),`\\n`]}),(0,e.jsxs)(n.span,{className:\\"code-line\\",children:[\\"    \\",(0,e.jsx)(n.span,{className:\\"token punctuation\\",children:\\"...\\"}),`\\n`]}),(0,e.jsxs)(n.span,{className:\\"code-line\\",children:[\\"    \\",(0,e.jsx)(n.span,{className:\\"token key atrule\\",children:\\"status\\"}),(0,e.jsx)(n.span,{className:\\"token punctuation\\",children:\\":\\"}),`\\n`]}),(0,e.jsxs)(n.span,{className:\\"code-line\\",children:[\\"      \\",(0,e.jsx)(n.span,{className:\\"token key atrule\\",children:\\"type\\"}),(0,e.jsx)(n.span,{className:\\"token punctuation\\",children:\\":\\"}),` command\\n`]}),(0,e.jsxs)(n.span,{className:\\"code-line\\",children:[\\"      \\",(0,e.jsx)(n.span,{className:\\"token key atrule\\",children:\\"condition\\"}),(0,e.jsx)(n.span,{className:\\"token punctuation\\",children:\\":\\"}),` content == \\"status\\"\\n`]}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`\\n`}),(0,e.jsxs)(n.span,{className:\\"code-line\\",children:[\\"  \\",(0,e.jsx)(n.span,{className:\\"token key atrule\\",children:\\"states\\"}),(0,e.jsx)(n.span,{className:\\"token punctuation\\",children:\\":\\"}),`\\n`]}),(0,e.jsxs)(n.span,{className:\\"code-line\\",children:[\\"    \\",(0,e.jsx)(n.span,{className:\\"token punctuation\\",children:\\"...\\"}),`\\n`]}),(0,e.jsxs)(n.span,{className:\\"code-line\\",children:[\\"    \\",(0,e.jsx)(n.span,{className:\\"token key atrule\\",children:\\"callAPI\\"}),(0,e.jsx)(n.span,{className:\\"token punctuation\\",children:\\":\\"}),`\\n`]}),(0,e.jsxs)(n.span,{className:\\"code-line\\",children:[\\"      \\",(0,e.jsx)(n.span,{className:\\"token key atrule\\",children:\\"action\\"}),(0,e.jsx)(n.span,{className:\\"token punctuation\\",children:\\":\\"}),`\\n`]}),(0,e.jsxs)(n.span,{className:\\"code-line\\",children:[\\"        \\",(0,e.jsx)(n.span,{className:\\"token punctuation\\",children:\\"-\\"}),\\" \\",(0,e.jsx)(n.span,{className:\\"token key atrule\\",children:\\"name\\"}),(0,e.jsx)(n.span,{className:\\"token punctuation\\",children:\\":\\"}),` callAPIMock\\n`]}),(0,e.jsxs)(n.span,{className:\\"code-line\\",children:[\\"        \\",(0,e.jsx)(n.span,{className:\\"token punctuation\\",children:\\"-\\"}),\\" \\",(0,e.jsx)(n.span,{className:\\"token key atrule\\",children:\\"name\\"}),(0,e.jsx)(n.span,{className:\\"token punctuation\\",children:\\":\\"}),` handleResult\\n`]}),(0,e.jsxs)(n.span,{className:\\"code-line\\",children:[\\"      \\",(0,e.jsx)(n.span,{className:\\"token key atrule\\",children:\\"transitions\\"}),(0,e.jsx)(n.span,{className:\\"token punctuation\\",children:\\":\\"}),`\\n`]}),(0,e.jsxs)(n.span,{className:\\"code-line\\",children:[\\"        \\",(0,e.jsx)(n.span,{className:\\"token key atrule\\",children:\\"success\\"}),(0,e.jsx)(n.span,{className:\\"token punctuation\\",children:\\":\\"}),`\\n`]}),(0,e.jsxs)(n.span,{className:\\"code-line\\",children:[\\"          \\",(0,e.jsx)(n.span,{className:\\"token key atrule\\",children:\\"condition\\"}),(0,e.jsx)(n.span,{className:\\"token punctuation\\",children:\\":\\"}),\' intent == \\"status\\" \',(0,e.jsx)(n.span,{className:\\"token important\\",children:\\"&&\\"}),` payload.result\\n`]}),(0,e.jsxs)(n.span,{className:\\"code-line\\",children:[\\"        \\",(0,e.jsx)(n.span,{className:\\"token key atrule\\",children:\\"fail\\"}),(0,e.jsx)(n.span,{className:\\"token punctuation\\",children:\\":\\"}),`\\n`]}),(0,e.jsxs)(n.span,{className:\\"code-line\\",children:[\\"          \\",(0,e.jsx)(n.span,{className:\\"token key atrule\\",children:\\"condition\\"}),(0,e.jsx)(n.span,{className:\\"token punctuation\\",children:\\":\\"}),\' intent == \\"status\\" \',(0,e.jsx)(n.span,{className:\\"token important\\",children:\\"&&\\"}),\\" \\",(0,e.jsx)(n.span,{className:\\"token tag\\",children:\\"!payload.result\\"}),`\\n`]}),(0,e.jsxs)(n.span,{className:\\"code-line\\",children:[\\"        \\",(0,e.jsx)(n.span,{className:\\"token key atrule\\",children:\\"callAPI\\"}),(0,e.jsx)(n.span,{className:\\"token punctuation\\",children:\\":\\"}),`\\n`]}),(0,e.jsxs)(n.span,{className:\\"code-line\\",children:[\\"          \\",(0,e.jsx)(n.span,{className:\\"token key atrule\\",children:\\"fallback\\"}),(0,e.jsx)(n.span,{className:\\"token punctuation\\",children:\\":\\"}),\\" \\",(0,e.jsx)(n.span,{className:\\"token boolean important\\",children:\\"true\\"}),`\\n`]}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`\\n`}),(0,e.jsxs)(n.span,{className:\\"code-line\\",children:[\\"  \\",(0,e.jsx)(n.span,{className:\\"token key atrule\\",children:\\"actions\\"}),(0,e.jsx)(n.span,{className:\\"token punctuation\\",children:\\":\\"}),`\\n`]}),(0,e.jsxs)(n.span,{className:\\"code-line\\",children:[\\"    \\",(0,e.jsx)(n.span,{className:\\"token punctuation\\",children:\\"...\\"}),`\\n`]}),(0,e.jsxs)(n.span,{className:\\"code-line\\",children:[\\"    \\",(0,e.jsx)(n.span,{className:\\"token key atrule\\",children:\\"callAPIMock\\"}),(0,e.jsx)(n.span,{className:\\"token punctuation\\",children:\\":\\"}),`\\n`]}),(0,e.jsxs)(n.span,{className:\\"code-line\\",children:[\\"      \\",(0,e.jsx)(n.span,{className:\\"token key atrule\\",children:\\"type\\"}),(0,e.jsx)(n.span,{className:\\"token punctuation\\",children:\\":\\"}),` api\\n`]}),(0,e.jsxs)(n.span,{className:\\"code-line\\",children:[\\"      \\",(0,e.jsx)(n.span,{className:\\"token key atrule\\",children:\\"options\\"}),(0,e.jsx)(n.span,{className:\\"token punctuation\\",children:\\":\\"}),`\\n`]}),(0,e.jsxs)(n.span,{className:\\"code-line\\",children:[\\"        \\",(0,e.jsx)(n.span,{className:\\"token key atrule\\",children:\\"method\\"}),(0,e.jsx)(n.span,{className:\\"token punctuation\\",children:\\":\\"}),\\" \\",(0,e.jsx)(n.span,{className:\\"token string\\",children:\'\\"GET\\"\'}),`\\n`]}),(0,e.jsxs)(n.span,{className:\\"code-line\\",children:[\\"        \\",(0,e.jsx)(n.span,{className:\\"token key atrule\\",children:\\"uri\\"}),(0,e.jsx)(n.span,{className:\\"token punctuation\\",children:\\":\\"}),\\" \\",(0,e.jsx)(n.span,{className:\\"token string\\",children:\'\\"https://www.mocky.io/v2/5185415ba171ea3a00704eed\\"\'}),`\\n`]}),(0,e.jsxs)(n.span,{className:\\"code-line\\",children:[\\"    \\",(0,e.jsx)(n.span,{className:\\"token key atrule\\",children:\\"handleResult\\"}),(0,e.jsx)(n.span,{className:\\"token punctuation\\",children:\\":\\"}),`\\n`]}),(0,e.jsxs)(n.span,{className:\\"code-line\\",children:[\\"      \\",(0,e.jsx)(n.span,{className:\\"token key atrule\\",children:\\"type\\"}),(0,e.jsx)(n.span,{className:\\"token punctuation\\",children:\\":\\"}),` command\\n`]}),(0,e.jsxs)(n.span,{className:\\"code-line\\",children:[\\"      \\",(0,e.jsx)(n.span,{className:\\"token key atrule\\",children:\\"options\\"}),(0,e.jsx)(n.span,{className:\\"token punctuation\\",children:\\":\\"}),`\\n`]}),(0,e.jsxs)(n.span,{className:\\"code-line\\",children:[\\"        \\",(0,e.jsx)(n.span,{className:\\"token key atrule\\",children:\\"command\\"}),(0,e.jsx)(n.span,{className:\\"token punctuation\\",children:\\":\\"}),` status\\n`]}),(0,e.jsxs)(n.span,{className:\\"code-line\\",children:[\\"        \\",(0,e.jsx)(n.span,{className:\\"token key atrule\\",children:\\"payload\\"}),(0,e.jsx)(n.span,{className:\\"token punctuation\\",children:\\":\\"}),`\\n`]}),(0,e.jsxs)(n.span,{className:\\"code-line\\",children:[\\"          \\",(0,e.jsx)(n.span,{className:\\"token key atrule\\",children:\\"result\\"}),(0,e.jsx)(n.span,{className:\\"token punctuation\\",children:\\":\\"}),` $(result)\\n`]})]})}),`\\n`,(0,e.jsxs)(n.h3,{id:\\"how-to-get-the-username-from-each-channel\\",children:[(0,e.jsx)(n.a,{className:\\"anchor\\",href:\\"#how-to-get-the-username-from-each-channel\\",children:(0,e.jsx)(n.span,{className:\\"icon icon-link\\"})}),\\"How to get the username from each channel?\\"]}),`\\n`,(0,e.jsx)(n.p,{children:\\"You have to use API action in the bot to use specified API\\"}),`\\n`,(0,e.jsxs)(n.ul,{children:[`\\n`,(0,e.jsxs)(n.li,{children:[\\"LINE: \\",(0,e.jsx)(n.a,{href:\\"https://developers.line.me/en/docs/messaging-api/reference/#get-profile\\",children:\\"https://developers.line.me/en/docs/messaging-api/reference/#get-profile\\"})]}),`\\n`,(0,e.jsxs)(n.li,{children:[\\"FB Messenger: \\",(0,e.jsx)(n.a,{href:\\"https://developers.facebook.com/docs/messenger-platform/identity/user-profile\\",children:\\"https://developers.facebook.com/docs/messenger-platform/identity/user-profile\\"})]}),`\\n`,(0,e.jsxs)(n.li,{children:[\\"For Telegram: access \\",(0,e.jsx)(n.code,{children:\\"metadata.telegramSenderName\\"})]}),`\\n`]}),`\\n`,(0,e.jsx)(n.p,{children:\\"For example:\\"}),`\\n`,(0,e.jsx)(n.pre,{className:\\"language-yaml\\",children:(0,e.jsxs)(n.code,{className:\\"language-yaml code-highlight\\",children:[(0,e.jsxs)(n.span,{className:\\"code-line\\",children:[(0,e.jsx)(n.span,{className:\\"token key atrule\\",children:\\"exampleFlow\\"}),(0,e.jsx)(n.span,{className:\\"token punctuation\\",children:\\":\\"}),`\\n`]}),(0,e.jsxs)(n.span,{className:\\"code-line\\",children:[\\"  \\",(0,e.jsx)(n.span,{className:\\"token key atrule\\",children:\\"intents\\"}),(0,e.jsx)(n.span,{className:\\"token punctuation\\",children:\\":\\"}),`\\n`]}),(0,e.jsxs)(n.span,{className:\\"code-line\\",children:[\\"    \\",(0,e.jsx)(n.span,{className:\\"token key atrule\\",children:\\"getStarted\\"}),(0,e.jsx)(n.span,{className:\\"token punctuation\\",children:\\":\\"}),`\\n`]}),(0,e.jsxs)(n.span,{className:\\"code-line\\",children:[\\"      \\",(0,e.jsx)(n.span,{className:\\"token key atrule\\",children:\\"initial\\"}),(0,e.jsx)(n.span,{className:\\"token punctuation\\",children:\\":\\"}),\\" \\",(0,e.jsx)(n.span,{className:\\"token boolean important\\",children:\\"true\\"}),`\\n`]}),(0,e.jsxs)(n.span,{className:\\"code-line\\",children:[\\"      \\",(0,e.jsx)(n.span,{className:\\"token key atrule\\",children:\\"type\\"}),(0,e.jsx)(n.span,{className:\\"token punctuation\\",children:\\":\\"}),` data\\n`]}),(0,e.jsxs)(n.span,{className:\\"code-line\\",children:[\\"      \\",(0,e.jsx)(n.span,{className:\\"token key atrule\\",children:\\"condition\\"}),(0,e.jsx)(n.span,{className:\\"token punctuation\\",children:\\":\\"}),\\" \\",(0,e.jsx)(n.span,{className:\\"token string\\",children:`\\"payload.type == \'follow\'\\"`}),`\\n`]}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`\\n`}),(0,e.jsxs)(n.span,{className:\\"code-line\\",children:[\\"  \\",(0,e.jsx)(n.span,{className:\\"token key atrule\\",children:\\"states\\"}),(0,e.jsx)(n.span,{className:\\"token punctuation\\",children:\\":\\"}),`\\n`]}),(0,e.jsxs)(n.span,{className:\\"code-line\\",children:[\\"    \\",(0,e.jsx)(n.span,{className:\\"token key atrule\\",children:\\"addAsFriend\\"}),(0,e.jsx)(n.span,{className:\\"token punctuation\\",children:\\":\\"}),`\\n`]}),(0,e.jsxs)(n.span,{className:\\"code-line\\",children:[\\"      \\",(0,e.jsx)(n.span,{className:\\"token key atrule\\",children:\\"initial\\"}),(0,e.jsx)(n.span,{className:\\"token punctuation\\",children:\\":\\"}),\\" \\",(0,e.jsx)(n.span,{className:\\"token boolean important\\",children:\\"true\\"}),`\\n`]}),(0,e.jsxs)(n.span,{className:\\"code-line\\",children:[\\"      \\",(0,e.jsx)(n.span,{className:\\"token key atrule\\",children:\\"transitions\\"}),(0,e.jsx)(n.span,{className:\\"token punctuation\\",children:\\":\\"}),`\\n`]}),(0,e.jsxs)(n.span,{className:\\"code-line\\",children:[\\"        \\",(0,e.jsx)(n.span,{className:\\"token key atrule\\",children:\\"greetUser\\"}),(0,e.jsx)(n.span,{className:\\"token punctuation\\",children:\\":\\"}),`\\n`]}),(0,e.jsxs)(n.span,{className:\\"code-line\\",children:[\\"          \\",(0,e.jsx)(n.span,{className:\\"token key atrule\\",children:\\"fallback\\"}),(0,e.jsx)(n.span,{className:\\"token punctuation\\",children:\\":\\"}),\\" \\",(0,e.jsx)(n.span,{className:\\"token boolean important\\",children:\\"true\\"}),`\\n`]}),(0,e.jsxs)(n.span,{className:\\"code-line\\",children:[\\"          \\",(0,e.jsx)(n.span,{className:\\"token key atrule\\",children:\\"mapping\\"}),(0,e.jsx)(n.span,{className:\\"token punctuation\\",children:\\":\\"}),`\\n`]}),(0,e.jsxs)(n.span,{className:\\"code-line\\",children:[\\"            \\",(0,e.jsx)(n.span,{className:\\"token key atrule\\",children:\\"context.userId\\"}),(0,e.jsx)(n.span,{className:\\"token punctuation\\",children:\\":\\"}),` metadata.lineSenderId\\n`]}),(0,e.jsxs)(n.span,{className:\\"code-line\\",children:[\\"            \\",(0,e.jsx)(n.span,{className:\\"token key atrule\\",children:\\"context.token\\"}),(0,e.jsx)(n.span,{className:\\"token punctuation\\",children:\\":\\"}),` metadata.lineAccessToken\\n`]}),(0,e.jsxs)(n.span,{className:\\"code-line\\",children:[\\"    \\",(0,e.jsx)(n.span,{className:\\"token key atrule\\",children:\\"greetUser\\"}),(0,e.jsx)(n.span,{className:\\"token punctuation\\",children:\\":\\"}),`\\n`]}),(0,e.jsxs)(n.span,{className:\\"code-line\\",children:[\\"      \\",(0,e.jsx)(n.span,{className:\\"token key atrule\\",children:\\"end\\"}),(0,e.jsx)(n.span,{className:\\"token punctuation\\",children:\\":\\"}),\\" \\",(0,e.jsx)(n.span,{className:\\"token boolean important\\",children:\\"true\\"}),`\\n`]}),(0,e.jsxs)(n.span,{className:\\"code-line\\",children:[\\"      \\",(0,e.jsx)(n.span,{className:\\"token key atrule\\",children:\\"action\\"}),(0,e.jsx)(n.span,{className:\\"token punctuation\\",children:\\":\\"}),`\\n`]}),(0,e.jsxs)(n.span,{className:\\"code-line\\",children:[\\"        \\",(0,e.jsx)(n.span,{className:\\"token punctuation\\",children:\\"-\\"}),\\" \\",(0,e.jsx)(n.span,{className:\\"token key atrule\\",children:\\"name\\"}),(0,e.jsx)(n.span,{className:\\"token punctuation\\",children:\\":\\"}),` callLineAPI\\n`]}),(0,e.jsxs)(n.span,{className:\\"code-line\\",children:[\\"        \\",(0,e.jsx)(n.span,{className:\\"token punctuation\\",children:\\"-\\"}),\\" \\",(0,e.jsx)(n.span,{className:\\"token key atrule\\",children:\\"name\\"}),(0,e.jsx)(n.span,{className:\\"token punctuation\\",children:\\":\\"}),` displayResult\\n`]}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`\\n`}),(0,e.jsxs)(n.span,{className:\\"code-line\\",children:[\\"  \\",(0,e.jsx)(n.span,{className:\\"token key atrule\\",children:\\"actions\\"}),(0,e.jsx)(n.span,{className:\\"token punctuation\\",children:\\":\\"}),`\\n`]}),(0,e.jsxs)(n.span,{className:\\"code-line\\",children:[\\"    \\",(0,e.jsx)(n.span,{className:\\"token key atrule\\",children:\\"callLineAPI\\"}),(0,e.jsx)(n.span,{className:\\"token punctuation\\",children:\\":\\"}),`\\n`]}),(0,e.jsxs)(n.span,{className:\\"code-line\\",children:[\\"      \\",(0,e.jsx)(n.span,{className:\\"token key atrule\\",children:\\"type\\"}),(0,e.jsx)(n.span,{className:\\"token punctuation\\",children:\\":\\"}),` api\\n`]}),(0,e.jsxs)(n.span,{className:\\"code-line\\",children:[\\"      \\",(0,e.jsx)(n.span,{className:\\"token key atrule\\",children:\\"options\\"}),(0,e.jsx)(n.span,{className:\\"token punctuation\\",children:\\":\\"}),`\\n`]}),(0,e.jsxs)(n.span,{className:\\"code-line\\",children:[\\"        \\",(0,e.jsx)(n.span,{className:\\"token key atrule\\",children:\\"method\\"}),(0,e.jsx)(n.span,{className:\\"token punctuation\\",children:\\":\\"}),\\" \\",(0,e.jsx)(n.span,{className:\\"token string\\",children:\\"\'GET\'\\"}),`\\n`]}),(0,e.jsxs)(n.span,{className:\\"code-line\\",children:[\\"        \\",(0,e.jsx)(n.span,{className:\\"token key atrule\\",children:\\"headers\\"}),(0,e.jsx)(n.span,{className:\\"token punctuation\\",children:\\":\\"}),`\\n`]}),(0,e.jsxs)(n.span,{className:\\"code-line\\",children:[\\"          \\",(0,e.jsx)(n.span,{className:\\"token key atrule\\",children:\\"Authorization\\"}),(0,e.jsx)(n.span,{className:\\"token punctuation\\",children:\\":\\"}),\\" \\",(0,e.jsx)(n.span,{className:\\"token string\\",children:\\"\'Bearer $(context.token)\'\\"}),`\\n`]}),(0,e.jsxs)(n.span,{className:\\"code-line\\",children:[\\"        \\",(0,e.jsx)(n.span,{className:\\"token key atrule\\",children:\\"uri\\"}),(0,e.jsx)(n.span,{className:\\"token punctuation\\",children:\\":\\"}),\\" \\",(0,e.jsx)(n.span,{className:\\"token string\\",children:\\"\'https://api.line.me/v2/bot/profile/$(context.userId)\'\\"}),`\\n`]}),(0,e.jsxs)(n.span,{className:\\"code-line\\",children:[\\"    \\",(0,e.jsx)(n.span,{className:\\"token key atrule\\",children:\\"displayResult\\"}),(0,e.jsx)(n.span,{className:\\"token punctuation\\",children:\\":\\"}),`\\n`]}),(0,e.jsxs)(n.span,{className:\\"code-line\\",children:[\\"      \\",(0,e.jsx)(n.span,{className:\\"token key atrule\\",children:\\"type\\"}),(0,e.jsx)(n.span,{className:\\"token punctuation\\",children:\\":\\"}),` text\\n`]}),(0,e.jsxs)(n.span,{className:\\"code-line\\",children:[\\"      \\",(0,e.jsx)(n.span,{className:\\"token key atrule\\",children:\\"options\\"}),(0,e.jsx)(n.span,{className:\\"token punctuation\\",children:\\":\\"}),`\\n`]}),(0,e.jsxs)(n.span,{className:\\"code-line\\",children:[\\"        \\",(0,e.jsx)(n.span,{className:\\"token key atrule\\",children:\\"text\\"}),(0,e.jsx)(n.span,{className:\\"token punctuation\\",children:\\":\\"}),\\" \\",(0,e.jsx)(n.span,{className:\\"token string\\",children:\\"\'Halo, $(result.displayName) terima kasih sudah add kami...\'\\"}),`\\n`]})]})}),`\\n`,(0,e.jsxs)(n.h3,{id:\\"is-there-any-configurable-field-where-we-can-put-our-google-map-api-key-due-to-location-action-usage\\",children:[(0,e.jsx)(n.a,{className:\\"anchor\\",href:\\"#is-there-any-configurable-field-where-we-can-put-our-google-map-api-key-due-to-location-action-usage\\",children:(0,e.jsx)(n.span,{className:\\"icon icon-link\\"})}),\\"Is there any configurable field where we can put our google map api key due to location action usage?\\"]}),`\\n`,(0,e.jsxs)(n.ol,{children:[`\\n`,(0,e.jsxs)(n.li,{children:[`For setup your Google API Key, put in config in bot studio:\\n`,(0,e.jsx)(n.code,{children:\\"googleApiKey: thisisgoogleapikey\\"})]}),`\\n`,(0,e.jsx)(n.li,{children:\\"Then, call the configuration in action :\\"}),`\\n`]}),`\\n`,(0,e.jsx)(n.pre,{className:\\"language-yaml\\",children:(0,e.jsxs)(n.code,{className:\\"language-yaml code-highlight\\",children:[(0,e.jsxs)(n.span,{className:\\"code-line\\",children:[(0,e.jsx)(n.span,{className:\\"token key atrule\\",children:\\"actions\\"}),(0,e.jsx)(n.span,{className:\\"token punctuation\\",children:\\":\\"}),`\\n`]}),(0,e.jsxs)(n.span,{className:\\"code-line\\",children:[\\"  \\",(0,e.jsx)(n.span,{className:\\"token key atrule\\",children:\\"options\\"}),(0,e.jsx)(n.span,{className:\\"token punctuation\\",children:\\":\\"}),`\\n`]}),(0,e.jsxs)(n.span,{className:\\"code-line\\",children:[\\"    \\",(0,e.jsx)(n.span,{className:\\"token key atrule\\",children:\\"text\\"}),(0,e.jsx)(n.span,{className:\\"token punctuation\\",children:\\":\\"}),` $(config.googleApiKey)\\n`]})]})}),`\\n`,(0,e.jsxs)(n.h3,{id:\\"if-fb-messenger--line-has-action-button-which-use-url-how-about-twitter-is-there-any-alternative-way-such-as-action-text-url\\",children:[(0,e.jsx)(n.a,{className:\\"anchor\\",href:\\"#if-fb-messenger--line-has-action-button-which-use-url-how-about-twitter-is-there-any-alternative-way-such-as-action-text-url\\",children:(0,e.jsx)(n.span,{className:\\"icon icon-link\\"})}),\\"If FB messenger & LINE has action button which use URL, how about Twitter? Is there any alternative way such as action text URL?\\"]}),`\\n`,(0,e.jsxs)(n.p,{children:[\\"Twitter has \\",(0,e.jsx)(n.code,{children:\\"quickreply\\"}),\\" that quite similar with action button. Follow this code to put \\",(0,e.jsx)(n.code,{children:\\"quickreply\\"}),\\" :\\"]}),`\\n`,(0,e.jsx)(n.pre,{className:\\"language-yaml\\",children:(0,e.jsxs)(n.code,{className:\\"language-yaml code-highlight\\",children:[(0,e.jsxs)(n.span,{className:\\"code-line\\",children:[(0,e.jsx)(n.span,{className:\\"token key atrule\\",children:\\"type\\"}),(0,e.jsx)(n.span,{className:\\"token punctuation\\",children:\\":\\"}),\\" \\",(0,e.jsx)(n.span,{className:\\"token string\\",children:\'\\"template\\"\'}),`\\n`]}),(0,e.jsxs)(n.span,{className:\\"code-line\\",children:[(0,e.jsx)(n.span,{className:\\"token key atrule\\",children:\\"options\\"}),(0,e.jsx)(n.span,{className:\\"token punctuation\\",children:\\":\\"}),`\\n`]}),(0,e.jsxs)(n.span,{className:\\"code-line\\",children:[\\"    \\",(0,e.jsx)(n.span,{className:\\"token key atrule\\",children:\\"type\\"}),(0,e.jsx)(n.span,{className:\\"token punctuation\\",children:\\":\\"}),\' \\"button\\" \',(0,e.jsx)(n.span,{className:\\"token punctuation\\",children:\\"|\\"}),` \\"confirm\\"\\n`]}),(0,e.jsxs)(n.span,{className:\\"code-line\\",children:[\\"    \\",(0,e.jsx)(n.span,{className:\\"token key atrule\\",children:\\"items\\"}),(0,e.jsx)(n.span,{className:\\"token punctuation\\",children:\\":\\"}),`\\n`]}),(0,e.jsxs)(n.span,{className:\\"code-line\\",children:[\\"        \\",(0,e.jsx)(n.span,{className:\\"token key atrule\\",children:\\"quickreply\\"}),(0,e.jsx)(n.span,{className:\\"token punctuation\\",children:\\":\\"}),`\\n`]}),(0,e.jsxs)(n.span,{className:\\"code-line\\",children:[\\"            \\",(0,e.jsx)(n.span,{className:\\"token punctuation\\",children:\\"-\\"}),\\" \\",(0,e.jsx)(n.span,{className:\\"token key atrule\\",children:\\"type\\"}),(0,e.jsx)(n.span,{className:\\"token punctuation\\",children:\\":\\"}),\\" \\",(0,e.jsx)(n.span,{className:\\"token string\\",children:\'\\"text\\"\'}),`\\n`]}),(0,e.jsxs)(n.span,{className:\\"code-line\\",children:[\\"              \\",(0,e.jsx)(n.span,{className:\\"token key atrule\\",children:\\"label\\"}),(0,e.jsx)(n.span,{className:\\"token punctuation\\",children:\\":\\"}),` string\\n`]}),(0,e.jsxs)(n.span,{className:\\"code-line\\",children:[\\"              \\",(0,e.jsx)(n.span,{className:\\"token key atrule\\",children:\\"payload\\"}),(0,e.jsx)(n.span,{className:\\"token punctuation\\",children:\\":\\"}),`\\n`]}),(0,e.jsxs)(n.span,{className:\\"code-line\\",children:[\\"                \\",(0,e.jsx)(n.span,{className:\\"token punctuation\\",children:\\"[\\"}),(0,e.jsx)(n.span,{className:\\"token key atrule\\",children:\\"key\\"}),\\" \\",(0,e.jsx)(n.span,{className:\\"token punctuation\\",children:\\":\\"}),\\" string\\",(0,e.jsx)(n.span,{className:\\"token punctuation\\",children:\\"]\\"}),(0,e.jsx)(n.span,{className:\\"token punctuation\\",children:\\":\\"}),` string\\n`]})]})}),`\\n`,(0,e.jsxs)(n.h3,{id:\\"how-to-get-metadata-time\\",children:[(0,e.jsx)(n.a,{className:\\"anchor\\",href:\\"#how-to-get-metadata-time\\",children:(0,e.jsx)(n.span,{className:\\"icon icon-link\\"})}),\\"How to get metadata time?\\"]}),`\\n`,(0,e.jsxs)(n.p,{children:[\\"You may use \\",(0,e.jsx)(n.code,{children:\\"metadata.channelType\\"}),\\" in Bot configuration\\"]}),`\\n`,(0,e.jsxs)(n.h3,{id:\\"how-to-use-flatten-in-nlus\\",children:[(0,e.jsx)(n.a,{className:\\"anchor\\",href:\\"#how-to-use-flatten-in-nlus\\",children:(0,e.jsx)(n.span,{className:\\"icon icon-link\\"})}),\\"How to use Flatten in NLUs?\\"]}),`\\n`,(0,e.jsxs)(n.h4,{id:\\"config-in-botyml\\",children:[(0,e.jsx)(n.a,{className:\\"anchor\\",href:\\"#config-in-botyml\\",children:(0,e.jsx)(n.span,{className:\\"icon icon-link\\"})}),\\"Config in bot.yml\\"]}),`\\n`,(0,e.jsx)(n.pre,{className:\\"language-yaml\\",children:(0,e.jsxs)(n.code,{className:\\"language-yaml code-highlight\\",children:[(0,e.jsxs)(n.span,{className:\\"code-line\\",children:[(0,e.jsx)(n.span,{className:\\"token key atrule\\",children:\\"nlus\\"}),(0,e.jsx)(n.span,{className:\\"token punctuation\\",children:\\":\\"}),`\\n`]}),(0,e.jsxs)(n.span,{className:\\"code-line\\",children:[\\"  \\",(0,e.jsx)(n.span,{className:\\"token key atrule\\",children:\\"mynl\\"}),(0,e.jsx)(n.span,{className:\\"token punctuation\\",children:\\":\\"}),`\\n`]}),(0,e.jsxs)(n.span,{className:\\"code-line\\",children:[\\"    \\",(0,e.jsx)(n.span,{className:\\"token key atrule\\",children:\\"type\\"}),(0,e.jsx)(n.span,{className:\\"token punctuation\\",children:\\":\\"}),` nl\\n`]}),(0,e.jsxs)(n.span,{className:\\"code-line\\",children:[\\"    \\",(0,e.jsx)(n.span,{className:\\"token key atrule\\",children:\\"options\\"}),(0,e.jsx)(n.span,{className:\\"token punctuation\\",children:\\":\\"}),\\" nluId\\",(0,e.jsx)(n.span,{className:\\"token punctuation\\",children:\\":\\"}),(0,e.jsx)(n.span,{className:\\"token string\\",children:\'\\"user:nlu-name\\"\'}),`\\n`]}),(0,e.jsxs)(n.span,{className:\\"code-line\\",children:[\\"      \\",(0,e.jsx)(n.span,{className:\\"token key atrule\\",children:\\"token\\"}),(0,e.jsx)(n.span,{className:\\"token punctuation\\",children:\\":\\"}),\\" \\",(0,e.jsx)(n.span,{className:\\"token string\\",children:\'\\"token\\"\'}),`\\n`]}),(0,e.jsxs)(n.span,{className:\\"code-line\\",children:[\\"      \\",(0,e.jsx)(n.span,{className:\\"token key atrule\\",children:\\"output\\"}),(0,e.jsx)(n.span,{className:\\"token punctuation\\",children:\\":\\"}),\\" <type\\",(0,e.jsx)(n.span,{className:\\"token punctuation\\",children:\\">\\"}),`\\n`]}),(0,e.jsxs)(n.span,{className:\\"code-line\\",children:[\\"      \\",(0,e.jsx)(n.span,{className:\\"token key atrule\\",children:\\"threshold\\"}),(0,e.jsx)(n.span,{className:\\"token punctuation\\",children:\\":\\"}),\\" <number\\",(0,e.jsx)(n.span,{className:\\"token punctuation\\",children:\\">\\"}),`\\n`]}),(0,e.jsxs)(n.span,{className:\\"code-line\\",children:[\\"      \\",(0,e.jsx)(n.span,{className:\\"token key atrule\\",children:\\"flatten\\"}),(0,e.jsx)(n.span,{className:\\"token punctuation\\",children:\\":\\"}),\\" \\",(0,e.jsx)(n.span,{className:\\"token boolean important\\",children:\\"true\\"}),\\" \\",(0,e.jsx)(n.span,{className:\\"token comment\\",children:\\"# optional, default false\\"}),`\\n`]})]})}),`\\n`,(0,e.jsx)(n.p,{children:\\"If flatten is enabled, first object in array will be the value of the entity with entity name as the key\\"}),`\\n`,(0,e.jsxs)(n.h4,{id:\\"output-type-raw\\",children:[(0,e.jsx)(n.a,{className:\\"anchor\\",href:\\"#output-type-raw\\",children:(0,e.jsx)(n.span,{className:\\"icon icon-link\\"})}),\\"Output Type: Raw\\"]}),`\\n`,(0,e.jsx)(n.p,{children:\\"flatten: false\\"}),`\\n`,(0,e.jsx)(n.pre,{children:(0,e.jsx)(n.code,{className:\\"code-highlight\\",children:(0,e.jsx)(n.span,{className:\\"code-line\\",children:`{ \'intent\': [{ \'type\': \'trait\', \'score\': 1, \'value\': \'mainMenu\' }] }\\n`})})}),`\\n`,(0,e.jsx)(n.p,{children:\\"flatten: true\\"}),`\\n`,(0,e.jsx)(n.pre,{children:(0,e.jsxs)(n.code,{className:\\"code-highlight\\",children:[(0,e.jsx)(n.span,{className:\\"code-line\\",children:`{\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`  \'intentArray\': [{ \'type\': \'trait\', \'score\': 1, \'value\': \'mainMenu\' }],\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`  \'intent\': { \'type\': \'trait\', \'score\': 1, \'value\': \'mainMenu\' },\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`}\\n`})]})}),`\\n`,(0,e.jsxs)(n.h4,{id:\\"output-type-value\\",children:[(0,e.jsx)(n.a,{className:\\"anchor\\",href:\\"#output-type-value\\",children:(0,e.jsx)(n.span,{className:\\"icon icon-link\\"})}),\\"Output Type: Value\\"]}),`\\n`,(0,e.jsx)(n.p,{children:\\"flatten: false\\"}),`\\n`,(0,e.jsx)(n.pre,{children:(0,e.jsx)(n.code,{className:\\"code-highlight\\",children:(0,e.jsx)(n.span,{className:\\"code-line\\",children:`{ \'intent\': [\'mainMenu\'] }\\n`})})}),`\\n`,(0,e.jsx)(n.p,{children:\\"flatten: true\\"}),`\\n`,(0,e.jsx)(n.pre,{children:(0,e.jsx)(n.code,{className:\\"code-highlight\\",children:(0,e.jsx)(n.span,{className:\\"code-line\\",children:`{ \'intentArray\': [\'mainMenu\'], \'intent\': \'mainMenu\' }\\n`})})}),`\\n`,(0,e.jsxs)(n.h3,{id:\\"how-to-reinit-session-in-katacli-\\",children:[(0,e.jsx)(n.a,{className:\\"anchor\\",href:\\"#how-to-reinit-session-in-katacli-\\",children:(0,e.jsx)(n.span,{className:\\"icon icon-link\\"})}),\\"How to reinit session in kataCLI ?\\"]}),`\\n`,(0,e.jsxs)(n.p,{children:[\\"Execute \\",(0,e.jsx)(n.code,{children:\\"kata console\\"}),\\" then \\",(0,e.jsx)(n.code,{children:\\"clear()\\"})]}),`\\n`,(0,e.jsxs)(n.h3,{id:\\"how-many-seconds-for-timeout-action-type-api-hit-in-kata\\",children:[(0,e.jsx)(n.a,{className:\\"anchor\\",href:\\"#how-many-seconds-for-timeout-action-type-api-hit-in-kata\\",children:(0,e.jsx)(n.span,{className:\\"icon icon-link\\"})}),\\"How many seconds for timeout action type API hit in Kata?\\"]}),`\\n`,(0,e.jsx)(n.p,{children:\\"Kata put 5 Seconds for timeout condition when hit API\\"}),`\\n`,(0,e.jsxs)(n.h3,{id:\\"how-to-login-as-team-in-kata-cli-\\",children:[(0,e.jsx)(n.a,{className:\\"anchor\\",href:\\"#how-to-login-as-team-in-kata-cli-\\",children:(0,e.jsx)(n.span,{className:\\"icon icon-link\\"})}),\\"How to login as team in Kata-CLI ?\\"]}),`\\n`,(0,e.jsxs)(n.ol,{children:[`\\n`,(0,e.jsxs)(n.li,{children:[\\"First, execute \\",(0,e.jsx)(n.code,{children:\\"kata login\\"}),\\" and login using your username\\"]}),`\\n`,(0,e.jsxs)(n.li,{children:[\\"Then, run \\",(0,e.jsx)(n.code,{children:\\"kata switch-team <TeamName>\\"}),\\" for switch into team user\\"]}),`\\n`]}),`\\n`,(0,e.jsxs)(n.h3,{id:\\"i-invited-by-someone-as-his-team-but-in-my-account-the-team-didnt-show-what-should-i-do-\\",children:[(0,e.jsx)(n.a,{className:\\"anchor\\",href:\\"#i-invited-by-someone-as-his-team-but-in-my-account-the-team-didnt-show-what-should-i-do-\\",children:(0,e.jsx)(n.span,{className:\\"icon icon-link\\"})}),\\"I invited by someone as his team, but in my account the team didn\'t show. What should I do ?\\"]}),`\\n`,(0,e.jsxs)(n.ol,{children:[`\\n`,(0,e.jsx)(n.li,{children:\\"Try to relogin (read : logout then login again)\\"}),`\\n`,(0,e.jsx)(n.li,{children:\\"Then, you shall see your team is available in account switcher\\"}),`\\n`]}),`\\n`,(0,e.jsxs)(n.h3,{id:\\"i-got-an-error-which-written-errror-max-recursion-of-3-is-reached-how-to-fix-this-error-\\",children:[(0,e.jsx)(n.a,{className:\\"anchor\\",href:\\"#i-got-an-error-which-written-errror-max-recursion-of-3-is-reached-how-to-fix-this-error-\\",children:(0,e.jsx)(n.span,{className:\\"icon icon-link\\"})}),\'I got an error which written \\"Errror: Max Recursion of 3 is reached\\". How to fix this error ?\']}),`\\n`,(0,e.jsx)(n.p,{children:\\"This error defines when your bot is move to another state more than 3 times. Solutions :\\"}),`\\n`,(0,e.jsxs)(n.ol,{children:[`\\n`,(0,e.jsx)(n.li,{children:\\"Go to bot configuration\\"}),`\\n`,(0,e.jsxs)(n.li,{children:[\\"Write : \\",(0,e.jsx)(n.code,{children:\\"maxRecursion: 10\\"})]}),`\\n`]})]})}}var x=b;function v(a,s){throw new Error(\\"Expected \\"+(s?\\"component\\":\\"object\\")+\\" `\\"+a+\\"` to be defined: you likely forgot to import, pass, or provide it.\\")}return f(I);})();\\n;return Component;"},"_id":"kata-platform/faqs/bot-development-faqs.mdx","_raw":{"sourceFilePath":"kata-platform/faqs/bot-development-faqs.mdx","sourceFileName":"bot-development-faqs.mdx","sourceFileDir":"kata-platform/faqs","contentType":"mdx","flattenedPath":"kata-platform/faqs/bot-development-faqs"},"type":"KataPlatform","slug":["faqs","bot-development-faqs"],"excerpt":"\\n### What is the best practice for making a flow?\\n\\nA flow should be “volatile” which means it gets closed when switching to another flow.\\n\\n```yaml\\nvolatile: true\\n```\\n\\n### How to remove a context after a specific time?\\n\\nYou may use `invalidate` function and filled it with timestamp type\\n\\n```yaml\\ninvalidate: 152053926476\\n```\\n\\n### How to handle the intent that cannot catch user\'s input?\\n\\nAlways use a transition to the state itself named “default” if there are any branching state"}');
;// CONCATENATED MODULE: ./.contentlayer/generated/KataPlatform/kata-platform__faqs__general-faqs.mdx.json
const kata_platform_faqs_general_faqs_mdx_namespaceObject = JSON.parse('{"id":"general-faqs","section":"FAQs","title":"General FAQs","prev":"how-to-change-error-messages-in-your-chatbot","next":"bot-development-faqs","body":{"raw":"\\n### Is it possible to use NL from different projects?\\n\\nYou may define them in NLUs. Learn more about how to integrate chatbots using NLU.\\n\\n### How do I give access to anyone to access and update content on my CMS Client Dashboard?\\n\\nYou can invite anyone registered to Kata Platform or unregistered to access your CMS Client under the User menu on Kata CMS.\\n\\n### Can I roll back to the previous version?\\n\\nYes, you can roll back to previous versions on the Version Page. However, please note this action will create a new version using the old version setup. For example, you’re on version 1.0.1 now and would like to roll back to version 1.0.0. When you hit that roll back button, it will create a new version, 1.0.2, with the same setup as version 1.0.0.\\n\\n### What is TPS (Transaction per Second) in the Kata Platform?\\n\\nTPS stands for Transaction per Second. A transaction consists of incoming & outgoing message traffic through the Kata Platform. So, we have a limit for the transaction happening in each project in the Kata Platform.\\n\\n### What do you mean by the limit for the transaction?\\n\\nWe limit the incoming & outgoing message traffic in the Kata Platform. Think of it as bandwidth. The bigger your project’s TPS limit, the bigger your bandwidth for message traffic processing.\\n\\n### How do we know the TPS limit for our project?\\n\\nWe separate the categories of the project into two: Paid Project & Free Project.\\n\\n- We offer an exclusive TPS limit for each **Paid Project**. Also, all paid projects will have a verified badge in the Kata Platform.\\n\\n<FigureImage\\n  alt=\\"Image 1 Alt\\"\\n  src=\\"/assets/images/products/kata-platform/faqs/general-faqs/image1.webp\\"\\n  caption={{ title: \'Figure 1\', description: \'Badge for a paid project.\' }}\\n  layout=\\"responsive\\"\\n  naturalHeight={782}\\n  naturalWidth={1177}\\n/>\\n\\n- **For Free Project**: we offer a shared TPS limit across the Free Project’s users.\\n  Should you need help to upgrade from Free Project to Paid Project or upgrade your TPS limit, please contact us (business@kata.ai), and we’ll be happy to assist you.\\n\\n### What is the impact of the TPS limit on my project?\\n\\nWhen your project has reached the TPS limit, the following message will have to wait until the previous message has done processing—resulting in your user experiencing a delay in receiving or sending the message. So, the bigger your TPS limit, the bigger your project’s bandwidth to process the message, resulting in less delay. It’s essential if your project has a significant customer base. We will also send an email notification to the project creator when the Paid Project has reached the TPS limit.\\n\\n### Does the TPS limit apply to all channels in the Kata Platform?\\n\\nYes, the TPS limit applies to all channels through the Kata Platform and are used by FIFO (First In First Out) method (e.g., if the first message is from WhatsApp and the second is from Facebook Messenger. Then the message from WhatsApp is processed first, followed by the message from Facebook Messenger)\\n\\n### Can I switch from Paid Project to Free Project?\\n\\nUnfortunately, no, but you’re free to choose among the available subscription plans.\\n\\n### How do I upgrade my Free Project to Paid Project?\\n\\nWe’re glad you have decided to support us! Please let us know your interest via email: business@kata.ai, and we would be happy to assist you.\\n\\n### Does using the emulator in the Kata Platform count as transaction usage?\\n\\nNo, emulator usage isn’t affected by the TPS limiter.\\n\\n### Does the TPS limiter also apply for on-premise deployment?\\n\\nCurrently no, TPS limiter only applies to cloud deployment.\\n","code":"var Component=(()=>{var d=Object.create;var r=Object.defineProperty;var p=Object.getOwnPropertyDescriptor;var m=Object.getOwnPropertyNames;var u=Object.getPrototypeOf,f=Object.prototype.hasOwnProperty;var s=a=>r(a,\\"__esModule\\",{value:!0});var g=(a,o)=>()=>(o||a((o={exports:{}}).exports,o),o.exports),y=(a,o)=>{for(var n in o)r(a,n,{get:o[n],enumerable:!0})},c=(a,o,n,t)=>{if(o&&typeof o==\\"object\\"||typeof o==\\"function\\")for(let i of m(o))!f.call(a,i)&&(n||i!==\\"default\\")&&r(a,i,{get:()=>o[i],enumerable:!(t=p(o,i))||t.enumerable});return a},w=(a,o)=>c(s(r(a!=null?d(u(a)):{},\\"default\\",!o&&a&&a.__esModule?{get:()=>a.default,enumerable:!0}:{value:a,enumerable:!0})),a),b=(a=>(o,n)=>a&&a.get(o)||(n=c(s({}),o,1),a&&a.set(o,n),n))(typeof WeakMap!=\\"undefined\\"?new WeakMap:0);var h=g((F,l)=>{l.exports=_jsx_runtime});var N={};y(N,{default:()=>k,frontmatter:()=>j});var e=w(h()),j={id:\\"general-faqs\\",title:\\"General FAQs\\",prev:\\"how-to-change-error-messages-in-your-chatbot\\",next:\\"bot-development-faqs\\",section:\\"FAQs\\"};function P(a={}){let{wrapper:o}=a.components||{};return o?(0,e.jsx)(o,Object.assign({},a,{children:(0,e.jsx)(n,{})})):n();function n(){let t=Object.assign({h3:\\"h3\\",a:\\"a\\",span:\\"span\\",p:\\"p\\",ul:\\"ul\\",li:\\"li\\",strong:\\"strong\\"},a.components),{FigureImage:i}=t;return i||v(\\"FigureImage\\",!0),(0,e.jsxs)(e.Fragment,{children:[(0,e.jsxs)(t.h3,{id:\\"is-it-possible-to-use-nl-from-different-projects\\",children:[(0,e.jsx)(t.a,{className:\\"anchor\\",href:\\"#is-it-possible-to-use-nl-from-different-projects\\",children:(0,e.jsx)(t.span,{className:\\"icon icon-link\\"})}),\\"Is it possible to use NL from different projects?\\"]}),`\\n`,(0,e.jsx)(t.p,{children:\\"You may define them in NLUs. Learn more about how to integrate chatbots using NLU.\\"}),`\\n`,(0,e.jsxs)(t.h3,{id:\\"how-do-i-give-access-to-anyone-to-access-and-update-content-on-my-cms-client-dashboard\\",children:[(0,e.jsx)(t.a,{className:\\"anchor\\",href:\\"#how-do-i-give-access-to-anyone-to-access-and-update-content-on-my-cms-client-dashboard\\",children:(0,e.jsx)(t.span,{className:\\"icon icon-link\\"})}),\\"How do I give access to anyone to access and update content on my CMS Client Dashboard?\\"]}),`\\n`,(0,e.jsx)(t.p,{children:\\"You can invite anyone registered to Kata Platform or unregistered to access your CMS Client under the User menu on Kata CMS.\\"}),`\\n`,(0,e.jsxs)(t.h3,{id:\\"can-i-roll-back-to-the-previous-version\\",children:[(0,e.jsx)(t.a,{className:\\"anchor\\",href:\\"#can-i-roll-back-to-the-previous-version\\",children:(0,e.jsx)(t.span,{className:\\"icon icon-link\\"})}),\\"Can I roll back to the previous version?\\"]}),`\\n`,(0,e.jsx)(t.p,{children:\\"Yes, you can roll back to previous versions on the Version Page. However, please note this action will create a new version using the old version setup. For example, you\\\\u2019re on version 1.0.1 now and would like to roll back to version 1.0.0. When you hit that roll back button, it will create a new version, 1.0.2, with the same setup as version 1.0.0.\\"}),`\\n`,(0,e.jsxs)(t.h3,{id:\\"what-is-tps-transaction-per-second-in-the-kata-platform\\",children:[(0,e.jsx)(t.a,{className:\\"anchor\\",href:\\"#what-is-tps-transaction-per-second-in-the-kata-platform\\",children:(0,e.jsx)(t.span,{className:\\"icon icon-link\\"})}),\\"What is TPS (Transaction per Second) in the Kata Platform?\\"]}),`\\n`,(0,e.jsx)(t.p,{children:\\"TPS stands for Transaction per Second. A transaction consists of incoming & outgoing message traffic through the Kata Platform. So, we have a limit for the transaction happening in each project in the Kata Platform.\\"}),`\\n`,(0,e.jsxs)(t.h3,{id:\\"what-do-you-mean-by-the-limit-for-the-transaction\\",children:[(0,e.jsx)(t.a,{className:\\"anchor\\",href:\\"#what-do-you-mean-by-the-limit-for-the-transaction\\",children:(0,e.jsx)(t.span,{className:\\"icon icon-link\\"})}),\\"What do you mean by the limit for the transaction?\\"]}),`\\n`,(0,e.jsx)(t.p,{children:\\"We limit the incoming & outgoing message traffic in the Kata Platform. Think of it as bandwidth. The bigger your project\\\\u2019s TPS limit, the bigger your bandwidth for message traffic processing.\\"}),`\\n`,(0,e.jsxs)(t.h3,{id:\\"how-do-we-know-the-tps-limit-for-our-project\\",children:[(0,e.jsx)(t.a,{className:\\"anchor\\",href:\\"#how-do-we-know-the-tps-limit-for-our-project\\",children:(0,e.jsx)(t.span,{className:\\"icon icon-link\\"})}),\\"How do we know the TPS limit for our project?\\"]}),`\\n`,(0,e.jsx)(t.p,{children:\\"We separate the categories of the project into two: Paid Project & Free Project.\\"}),`\\n`,(0,e.jsxs)(t.ul,{children:[`\\n`,(0,e.jsxs)(t.li,{children:[\\"We offer an exclusive TPS limit for each \\",(0,e.jsx)(t.strong,{children:\\"Paid Project\\"}),\\". Also, all paid projects will have a verified badge in the Kata Platform.\\"]}),`\\n`]}),`\\n`,(0,e.jsx)(i,{alt:\\"Image 1 Alt\\",src:\\"/assets/images/products/kata-platform/faqs/general-faqs/image1.webp\\",caption:{title:\\"Figure 1\\",description:\\"Badge for a paid project.\\"},layout:\\"responsive\\",naturalHeight:782,naturalWidth:1177}),`\\n`,(0,e.jsxs)(t.ul,{children:[`\\n`,(0,e.jsxs)(t.li,{children:[(0,e.jsx)(t.strong,{children:\\"For Free Project\\"}),`: we offer a shared TPS limit across the Free Project\\\\u2019s users.\\nShould you need help to upgrade from Free Project to Paid Project or upgrade your TPS limit, please contact us (`,(0,e.jsx)(t.a,{href:\\"mailto:business@kata.ai\\",children:\\"business@kata.ai\\"}),\\"), and we\\\\u2019ll be happy to assist you.\\"]}),`\\n`]}),`\\n`,(0,e.jsxs)(t.h3,{id:\\"what-is-the-impact-of-the-tps-limit-on-my-project\\",children:[(0,e.jsx)(t.a,{className:\\"anchor\\",href:\\"#what-is-the-impact-of-the-tps-limit-on-my-project\\",children:(0,e.jsx)(t.span,{className:\\"icon icon-link\\"})}),\\"What is the impact of the TPS limit on my project?\\"]}),`\\n`,(0,e.jsx)(t.p,{children:\\"When your project has reached the TPS limit, the following message will have to wait until the previous message has done processing\\\\u2014resulting in your user experiencing a delay in receiving or sending the message. So, the bigger your TPS limit, the bigger your project\\\\u2019s bandwidth to process the message, resulting in less delay. It\\\\u2019s essential if your project has a significant customer base. We will also send an email notification to the project creator when the Paid Project has reached the TPS limit.\\"}),`\\n`,(0,e.jsxs)(t.h3,{id:\\"does-the-tps-limit-apply-to-all-channels-in-the-kata-platform\\",children:[(0,e.jsx)(t.a,{className:\\"anchor\\",href:\\"#does-the-tps-limit-apply-to-all-channels-in-the-kata-platform\\",children:(0,e.jsx)(t.span,{className:\\"icon icon-link\\"})}),\\"Does the TPS limit apply to all channels in the Kata Platform?\\"]}),`\\n`,(0,e.jsx)(t.p,{children:\\"Yes, the TPS limit applies to all channels through the Kata Platform and are used by FIFO (First In First Out) method (e.g., if the first message is from WhatsApp and the second is from Facebook Messenger. Then the message from WhatsApp is processed first, followed by the message from Facebook Messenger)\\"}),`\\n`,(0,e.jsxs)(t.h3,{id:\\"can-i-switch-from-paid-project-to-free-project\\",children:[(0,e.jsx)(t.a,{className:\\"anchor\\",href:\\"#can-i-switch-from-paid-project-to-free-project\\",children:(0,e.jsx)(t.span,{className:\\"icon icon-link\\"})}),\\"Can I switch from Paid Project to Free Project?\\"]}),`\\n`,(0,e.jsx)(t.p,{children:\\"Unfortunately, no, but you\\\\u2019re free to choose among the available subscription plans.\\"}),`\\n`,(0,e.jsxs)(t.h3,{id:\\"how-do-i-upgrade-my-free-project-to-paid-project\\",children:[(0,e.jsx)(t.a,{className:\\"anchor\\",href:\\"#how-do-i-upgrade-my-free-project-to-paid-project\\",children:(0,e.jsx)(t.span,{className:\\"icon icon-link\\"})}),\\"How do I upgrade my Free Project to Paid Project?\\"]}),`\\n`,(0,e.jsxs)(t.p,{children:[\\"We\\\\u2019re glad you have decided to support us! Please let us know your interest via email: \\",(0,e.jsx)(t.a,{href:\\"mailto:business@kata.ai\\",children:\\"business@kata.ai\\"}),\\", and we would be happy to assist you.\\"]}),`\\n`,(0,e.jsxs)(t.h3,{id:\\"does-using-the-emulator-in-the-kata-platform-count-as-transaction-usage\\",children:[(0,e.jsx)(t.a,{className:\\"anchor\\",href:\\"#does-using-the-emulator-in-the-kata-platform-count-as-transaction-usage\\",children:(0,e.jsx)(t.span,{className:\\"icon icon-link\\"})}),\\"Does using the emulator in the Kata Platform count as transaction usage?\\"]}),`\\n`,(0,e.jsx)(t.p,{children:\\"No, emulator usage isn\\\\u2019t affected by the TPS limiter.\\"}),`\\n`,(0,e.jsxs)(t.h3,{id:\\"does-the-tps-limiter-also-apply-for-on-premise-deployment\\",children:[(0,e.jsx)(t.a,{className:\\"anchor\\",href:\\"#does-the-tps-limiter-also-apply-for-on-premise-deployment\\",children:(0,e.jsx)(t.span,{className:\\"icon icon-link\\"})}),\\"Does the TPS limiter also apply for on-premise deployment?\\"]}),`\\n`,(0,e.jsx)(t.p,{children:\\"Currently no, TPS limiter only applies to cloud deployment.\\"})]})}}var k=P;function v(a,o){throw new Error(\\"Expected \\"+(o?\\"component\\":\\"object\\")+\\" `\\"+a+\\"` to be defined: you likely forgot to import, pass, or provide it.\\")}return b(N);})();\\n;return Component;"},"_id":"kata-platform/faqs/general-faqs.mdx","_raw":{"sourceFilePath":"kata-platform/faqs/general-faqs.mdx","sourceFileName":"general-faqs.mdx","sourceFileDir":"kata-platform/faqs","contentType":"mdx","flattenedPath":"kata-platform/faqs/general-faqs"},"type":"KataPlatform","slug":["faqs","general-faqs"],"excerpt":"\\n### Is it possible to use NL from different projects?\\n\\nYou may define them in NLUs. Learn more about how to integrate chatbots using NLU"}');
;// CONCATENATED MODULE: ./.contentlayer/generated/KataPlatform/kata-platform__glossary__coming-soon.mdx.json
const kata_platform_glossary_coming_soon_mdx_namespaceObject = JSON.parse('{"id":"glossary-coming-soon","section":"Glossary","title":"Coming Soon","prev":"glossary-inside-kata-flow","next":"release-notes-version","body":{"raw":"\\nWe’re currently working to provide you with more explanations for these terms. Check this section regularly 😊\\n\\n- Intent in Flow\\n\\n  - Intent as Initial\\n  - Intent as Fallback\\n  - Intent Type\\n  - Text Intent\\n  - Data Intent\\n  - Command Intent\\n  - Condition\\n  - Classifiers\\n  - Attributes\\n  - Priority\\n\\n- NLUs\\n  - Keyword\\n  - NL\\n  - Regex\\n  - Multiple Regex\\n  - Wit Intent\\n  - Wit Entity\\n  - Method\\n- Action\\n- Method\\n  - Simple Method\\n  - Advanced Method\\n- Error Logs\\n- Configurations\\n- Kata NL\\n  - What is Kata NL?\\n  - Entity\\n    - Entity: Trait\\n    - Dictionary Entity\\n    - Phrase Entity\\n  - Inherit\\n  - Root\\n  - Belongs to\\n  - Labels\\n  - Kata Entity (Supermodel)\\n  - Training\\n  - Test NLU\\n  - Prediction Logs\\n  - Token\\n  - NLU ID\\n- Kata CMS\\n  - What is Kata CMS?\\n  - Pages\\n  - Forms\\n  - Elements\\n  - Label\\n","code":"var Component=(()=>{var a=Object.create;var c=Object.defineProperty;var p=Object.getOwnPropertyDescriptor;var u=Object.getOwnPropertyNames;var m=Object.getPrototypeOf,g=Object.prototype.hasOwnProperty;var d=l=>c(l,\\"__esModule\\",{value:!0});var y=(l,e)=>()=>(e||l((e={exports:{}}).exports,e),e.exports),x=(l,e)=>{for(var r in e)c(l,r,{get:e[r],enumerable:!0})},h=(l,e,r,i)=>{if(e&&typeof e==\\"object\\"||typeof e==\\"function\\")for(let t of u(e))!g.call(l,t)&&(r||t!==\\"default\\")&&c(l,t,{get:()=>e[t],enumerable:!(i=p(e,t))||i.enumerable});return l},I=(l,e)=>h(d(c(l!=null?a(m(l)):{},\\"default\\",!e&&l&&l.__esModule?{get:()=>l.default,enumerable:!0}:{value:l,enumerable:!0})),l),L=(l=>(e,r)=>l&&l.get(e)||(r=h(d({}),e,1),l&&l.set(e,r),r))(typeof WeakMap!=\\"undefined\\"?new WeakMap:0);var s=y((_,o)=>{o.exports=_jsx_runtime});var E={};x(E,{default:()=>f,frontmatter:()=>C});var n=I(s()),C={id:\\"glossary-coming-soon\\",title:\\"Coming Soon\\",prev:\\"glossary-inside-kata-flow\\",next:\\"release-notes-version\\",section:\\"Glossary\\"};function M(l={}){let{wrapper:e}=l.components||{};return e?(0,n.jsx)(e,Object.assign({},l,{children:(0,n.jsx)(r,{})})):r();function r(){let i=Object.assign({p:\\"p\\",ul:\\"ul\\",li:\\"li\\"},l.components);return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(i.p,{children:\\"We\\\\u2019re currently working to provide you with more explanations for these terms. Check this section regularly \\\\u{1F60A}\\"}),`\\n`,(0,n.jsxs)(i.ul,{children:[`\\n`,(0,n.jsxs)(i.li,{children:[`\\n`,(0,n.jsx)(i.p,{children:\\"Intent in Flow\\"}),`\\n`,(0,n.jsxs)(i.ul,{children:[`\\n`,(0,n.jsx)(i.li,{children:\\"Intent as Initial\\"}),`\\n`,(0,n.jsx)(i.li,{children:\\"Intent as Fallback\\"}),`\\n`,(0,n.jsx)(i.li,{children:\\"Intent Type\\"}),`\\n`,(0,n.jsx)(i.li,{children:\\"Text Intent\\"}),`\\n`,(0,n.jsx)(i.li,{children:\\"Data Intent\\"}),`\\n`,(0,n.jsx)(i.li,{children:\\"Command Intent\\"}),`\\n`,(0,n.jsx)(i.li,{children:\\"Condition\\"}),`\\n`,(0,n.jsx)(i.li,{children:\\"Classifiers\\"}),`\\n`,(0,n.jsx)(i.li,{children:\\"Attributes\\"}),`\\n`,(0,n.jsx)(i.li,{children:\\"Priority\\"}),`\\n`]}),`\\n`]}),`\\n`,(0,n.jsxs)(i.li,{children:[`\\n`,(0,n.jsx)(i.p,{children:\\"NLUs\\"}),`\\n`,(0,n.jsxs)(i.ul,{children:[`\\n`,(0,n.jsx)(i.li,{children:\\"Keyword\\"}),`\\n`,(0,n.jsx)(i.li,{children:\\"NL\\"}),`\\n`,(0,n.jsx)(i.li,{children:\\"Regex\\"}),`\\n`,(0,n.jsx)(i.li,{children:\\"Multiple Regex\\"}),`\\n`,(0,n.jsx)(i.li,{children:\\"Wit Intent\\"}),`\\n`,(0,n.jsx)(i.li,{children:\\"Wit Entity\\"}),`\\n`,(0,n.jsx)(i.li,{children:\\"Method\\"}),`\\n`]}),`\\n`]}),`\\n`,(0,n.jsxs)(i.li,{children:[`\\n`,(0,n.jsx)(i.p,{children:\\"Action\\"}),`\\n`]}),`\\n`,(0,n.jsxs)(i.li,{children:[`\\n`,(0,n.jsx)(i.p,{children:\\"Method\\"}),`\\n`,(0,n.jsxs)(i.ul,{children:[`\\n`,(0,n.jsx)(i.li,{children:\\"Simple Method\\"}),`\\n`,(0,n.jsx)(i.li,{children:\\"Advanced Method\\"}),`\\n`]}),`\\n`]}),`\\n`,(0,n.jsxs)(i.li,{children:[`\\n`,(0,n.jsx)(i.p,{children:\\"Error Logs\\"}),`\\n`]}),`\\n`,(0,n.jsxs)(i.li,{children:[`\\n`,(0,n.jsx)(i.p,{children:\\"Configurations\\"}),`\\n`]}),`\\n`,(0,n.jsxs)(i.li,{children:[`\\n`,(0,n.jsx)(i.p,{children:\\"Kata NL\\"}),`\\n`,(0,n.jsxs)(i.ul,{children:[`\\n`,(0,n.jsx)(i.li,{children:\\"What is Kata NL?\\"}),`\\n`,(0,n.jsxs)(i.li,{children:[\\"Entity\\",`\\n`,(0,n.jsxs)(i.ul,{children:[`\\n`,(0,n.jsx)(i.li,{children:\\"Entity: Trait\\"}),`\\n`,(0,n.jsx)(i.li,{children:\\"Dictionary Entity\\"}),`\\n`,(0,n.jsx)(i.li,{children:\\"Phrase Entity\\"}),`\\n`]}),`\\n`]}),`\\n`,(0,n.jsx)(i.li,{children:\\"Inherit\\"}),`\\n`,(0,n.jsx)(i.li,{children:\\"Root\\"}),`\\n`,(0,n.jsx)(i.li,{children:\\"Belongs to\\"}),`\\n`,(0,n.jsx)(i.li,{children:\\"Labels\\"}),`\\n`,(0,n.jsx)(i.li,{children:\\"Kata Entity (Supermodel)\\"}),`\\n`,(0,n.jsx)(i.li,{children:\\"Training\\"}),`\\n`,(0,n.jsx)(i.li,{children:\\"Test NLU\\"}),`\\n`,(0,n.jsx)(i.li,{children:\\"Prediction Logs\\"}),`\\n`,(0,n.jsx)(i.li,{children:\\"Token\\"}),`\\n`,(0,n.jsx)(i.li,{children:\\"NLU ID\\"}),`\\n`]}),`\\n`]}),`\\n`,(0,n.jsxs)(i.li,{children:[`\\n`,(0,n.jsx)(i.p,{children:\\"Kata CMS\\"}),`\\n`,(0,n.jsxs)(i.ul,{children:[`\\n`,(0,n.jsx)(i.li,{children:\\"What is Kata CMS?\\"}),`\\n`,(0,n.jsx)(i.li,{children:\\"Pages\\"}),`\\n`,(0,n.jsx)(i.li,{children:\\"Forms\\"}),`\\n`,(0,n.jsx)(i.li,{children:\\"Elements\\"}),`\\n`,(0,n.jsx)(i.li,{children:\\"Label\\"}),`\\n`]}),`\\n`]}),`\\n`]})]})}}var f=M;return L(E);})();\\n;return Component;"},"_id":"kata-platform/glossary/coming-soon.mdx","_raw":{"sourceFilePath":"kata-platform/glossary/coming-soon.mdx","sourceFileName":"coming-soon.mdx","sourceFileDir":"kata-platform/glossary","contentType":"mdx","flattenedPath":"kata-platform/glossary/coming-soon"},"type":"KataPlatform","slug":["glossary","coming-soon"],"excerpt":"\\nWe’re currently working to provide you with more explanations for these terms. Check this section regularly 😊\\n\\n- Intent in Flow\\n\\n  - Intent as Initial\\n  - Intent as Fallback\\n  - Intent Type\\n  - Text Intent\\n  - Data Intent\\n  - Command Intent\\n  - Condition\\n  - Classifiers\\n  - Attributes\\n  - Priority\\n\\n- NLUs\\n  - Keyword\\n  - NL\\n  - Regex\\n  - Multiple Regex\\n  - Wit Intent\\n  - Wit Entity\\n  - Method\\n- Action\\n- Method\\n  - Simple Method\\n  - Advanced Method\\n- Error Logs\\n- Configurations\\n- Kata NL\\n  - What is Kata NL?\\n  - Entity\\n    - Entity: Trait\\n    - Dictionary Entity\\n    - Phrase Entity\\n  - Inherit\\n  - Root\\n  - Belongs to\\n  - Labels\\n  - Kata Entity (Supermodel)\\n  - Training\\n  - Test NLU\\n  - Prediction Logs\\n  - Token\\n  - NLU ID\\n- Kata CMS\\n  - What is Kata CMS?\\n  - Pages\\n  - Forms\\n  - Elements\\n  - Label\\n"}');
;// CONCATENATED MODULE: ./.contentlayer/generated/KataPlatform/kata-platform__glossary__general.mdx.json
const kata_platform_glossary_general_mdx_namespaceObject = JSON.parse('{"id":"glossary-general","section":"Glossary","title":"General","prev":"bot-development-faqs","next":"glossary-kata-platform","body":{"raw":"\\n### API\\n\\nApplication Programming Interface is a type of software that connects computers to another computer program.\\n\\n### Bot\\n\\nA bot is a software application that runs automated tasks.\\n\\n### Chatbot\\n\\nA chatbot is an application that allows humans to have online conversations with a computer via text or voice.\\n\\n### Conversational AI\\n\\nConversational AI is a technology that allows interaction between humans and computers by making computers understand natural language and mimic human conversations. Conversational AI products communicate by recognizing voice and text, understanding intents, translating multiple languages, and responding to human conversations. Automated messaging apps, text-to-speech, or virtual assistants are examples of conversational AI products.\\n\\n### End-user\\n\\nIn conversational AI product development, an end-user is a person who ultimately uses or is intended to use the product.\\n\\n### Fallback\\n\\nFallback is a situation when the bot does not understand what the end-user said.\\n\\n### FAQ\\n\\nFrequently Asked Questions (FAQ) is a list of questions with answers relating to a particular subject.\\n\\n### FSD\\n\\nFunctional Specification Diagram is a document designed to give an overview of how the software works. This document outlines each of the features and shows a step-by-step flow.\\n\\n### Human-agent\\n\\nHuman-agent is a real person that interacts with end-users through conversational AI products such as chatbots.\\n\\n### Intent\\n\\nIntent is a purpose or goal. Within conversational AI, intent refers to what goal or purpose an end-user has in mind while interacting with a bot. This intent is extracted from the end-user utterance, and then the bot translates it to answer with the appropriate response. For example, an end-user wants to buy a pizza. You can build the bot with a designated reply that offers the pizza menu.\\nThere are two types of intents in the Kata Platform; Initial Intent and Follow-up Intent. An initial intent is the one you set at the beginning of the conversation, while follow-up is the following intent. A bot cannot start a conversation without an Initial Intent.\\n\\n### Kata CLI\\n\\nKata CLI is a command-line interface that users use to interact with the Kata Platform.\\n\\n### Kata Platform\\n\\nKata Platform is an ecosystem of applications and services developers use to build NLP products and conversational AI.\\n\\n### Kata ML\\n\\nKataML or Kata Markup Language is a computer language that uses tags or markup to write bot designs.\\n\\n### Message\\n\\nA message is a conversation unit delivered by bots to end-users or vice versa in text, voice, or media. It consists of incoming messages and outgoing messages.\\n\\n### NLP\\n\\nNatural Language Processing is a subfield of linguistics, computer science, and artificial intelligence involved with the interactions between computers and human language. NLP discusses how computers can process and analyze large amounts of natural language data.\\n\\n### Omnichannel\\n\\nOmnichannel is a multi-channel communication between end-users and human-agents. Kata Omnichat is an omnichannel product from Kata.ai which provides integrated channels such as Instagram and WhatsApp.\\n\\n### Session\\n\\nA session is an exchange of information between two or more communication devices or between a bot and an end-user. It has a start and an endpoint that you can define by a certain point. For example, Kata Platform measures one session from the start of a conversation until the end-user does not reply until 5 minutes.\\n\\n### Transcripts\\n\\nA transcript is a conversation context between chatbot and end-user that consists of text and media, in which users can download and show information based on filters.\\n","code":"var Component=(()=>{var d=Object.create;var o=Object.defineProperty;var m=Object.getOwnPropertyDescriptor;var p=Object.getOwnPropertyNames;var u=Object.getPrototypeOf,f=Object.prototype.hasOwnProperty;var c=e=>o(e,\\"__esModule\\",{value:!0});var g=(e,t)=>()=>(t||e((t={exports:{}}).exports,t),t.exports),w=(e,t)=>{for(var s in t)o(e,s,{get:t[s],enumerable:!0})},r=(e,t,s,a)=>{if(t&&typeof t==\\"object\\"||typeof t==\\"function\\")for(let i of p(t))!f.call(e,i)&&(s||i!==\\"default\\")&&o(e,i,{get:()=>t[i],enumerable:!(a=m(t,i))||a.enumerable});return e},b=(e,t)=>r(c(o(e!=null?d(u(e)):{},\\"default\\",!t&&e&&e.__esModule?{get:()=>e.default,enumerable:!0}:{value:e,enumerable:!0})),e),N=(e=>(t,s)=>e&&e.get(t)||(s=r(c({}),t,1),e&&e.set(t,s),s))(typeof WeakMap!=\\"undefined\\"?new WeakMap:0);var h=g((y,l)=>{l.exports=_jsx_runtime});var A={};w(A,{default:()=>I,frontmatter:()=>v});var n=b(h()),v={id:\\"glossary-general\\",title:\\"General\\",prev:\\"bot-development-faqs\\",next:\\"glossary-kata-platform\\",section:\\"Glossary\\"};function k(e={}){let{wrapper:t}=e.components||{};return t?(0,n.jsx)(t,Object.assign({},e,{children:(0,n.jsx)(s,{})})):s();function s(){let a=Object.assign({h3:\\"h3\\",a:\\"a\\",span:\\"span\\",p:\\"p\\"},e.components);return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsxs)(a.h3,{id:\\"api\\",children:[(0,n.jsx)(a.a,{className:\\"anchor\\",href:\\"#api\\",children:(0,n.jsx)(a.span,{className:\\"icon icon-link\\"})}),\\"API\\"]}),`\\n`,(0,n.jsx)(a.p,{children:\\"Application Programming Interface is a type of software that connects computers to another computer program.\\"}),`\\n`,(0,n.jsxs)(a.h3,{id:\\"bot\\",children:[(0,n.jsx)(a.a,{className:\\"anchor\\",href:\\"#bot\\",children:(0,n.jsx)(a.span,{className:\\"icon icon-link\\"})}),\\"Bot\\"]}),`\\n`,(0,n.jsx)(a.p,{children:\\"A bot is a software application that runs automated tasks.\\"}),`\\n`,(0,n.jsxs)(a.h3,{id:\\"chatbot\\",children:[(0,n.jsx)(a.a,{className:\\"anchor\\",href:\\"#chatbot\\",children:(0,n.jsx)(a.span,{className:\\"icon icon-link\\"})}),\\"Chatbot\\"]}),`\\n`,(0,n.jsx)(a.p,{children:\\"A chatbot is an application that allows humans to have online conversations with a computer via text or voice.\\"}),`\\n`,(0,n.jsxs)(a.h3,{id:\\"conversational-ai\\",children:[(0,n.jsx)(a.a,{className:\\"anchor\\",href:\\"#conversational-ai\\",children:(0,n.jsx)(a.span,{className:\\"icon icon-link\\"})}),\\"Conversational AI\\"]}),`\\n`,(0,n.jsx)(a.p,{children:\\"Conversational AI is a technology that allows interaction between humans and computers by making computers understand natural language and mimic human conversations. Conversational AI products communicate by recognizing voice and text, understanding intents, translating multiple languages, and responding to human conversations. Automated messaging apps, text-to-speech, or virtual assistants are examples of conversational AI products.\\"}),`\\n`,(0,n.jsxs)(a.h3,{id:\\"end-user\\",children:[(0,n.jsx)(a.a,{className:\\"anchor\\",href:\\"#end-user\\",children:(0,n.jsx)(a.span,{className:\\"icon icon-link\\"})}),\\"End-user\\"]}),`\\n`,(0,n.jsx)(a.p,{children:\\"In conversational AI product development, an end-user is a person who ultimately uses or is intended to use the product.\\"}),`\\n`,(0,n.jsxs)(a.h3,{id:\\"fallback\\",children:[(0,n.jsx)(a.a,{className:\\"anchor\\",href:\\"#fallback\\",children:(0,n.jsx)(a.span,{className:\\"icon icon-link\\"})}),\\"Fallback\\"]}),`\\n`,(0,n.jsx)(a.p,{children:\\"Fallback is a situation when the bot does not understand what the end-user said.\\"}),`\\n`,(0,n.jsxs)(a.h3,{id:\\"faq\\",children:[(0,n.jsx)(a.a,{className:\\"anchor\\",href:\\"#faq\\",children:(0,n.jsx)(a.span,{className:\\"icon icon-link\\"})}),\\"FAQ\\"]}),`\\n`,(0,n.jsx)(a.p,{children:\\"Frequently Asked Questions (FAQ) is a list of questions with answers relating to a particular subject.\\"}),`\\n`,(0,n.jsxs)(a.h3,{id:\\"fsd\\",children:[(0,n.jsx)(a.a,{className:\\"anchor\\",href:\\"#fsd\\",children:(0,n.jsx)(a.span,{className:\\"icon icon-link\\"})}),\\"FSD\\"]}),`\\n`,(0,n.jsx)(a.p,{children:\\"Functional Specification Diagram is a document designed to give an overview of how the software works. This document outlines each of the features and shows a step-by-step flow.\\"}),`\\n`,(0,n.jsxs)(a.h3,{id:\\"human-agent\\",children:[(0,n.jsx)(a.a,{className:\\"anchor\\",href:\\"#human-agent\\",children:(0,n.jsx)(a.span,{className:\\"icon icon-link\\"})}),\\"Human-agent\\"]}),`\\n`,(0,n.jsx)(a.p,{children:\\"Human-agent is a real person that interacts with end-users through conversational AI products such as chatbots.\\"}),`\\n`,(0,n.jsxs)(a.h3,{id:\\"intent\\",children:[(0,n.jsx)(a.a,{className:\\"anchor\\",href:\\"#intent\\",children:(0,n.jsx)(a.span,{className:\\"icon icon-link\\"})}),\\"Intent\\"]}),`\\n`,(0,n.jsx)(a.p,{children:`Intent is a purpose or goal. Within conversational AI, intent refers to what goal or purpose an end-user has in mind while interacting with a bot. This intent is extracted from the end-user utterance, and then the bot translates it to answer with the appropriate response. For example, an end-user wants to buy a pizza. You can build the bot with a designated reply that offers the pizza menu.\\nThere are two types of intents in the Kata Platform; Initial Intent and Follow-up Intent. An initial intent is the one you set at the beginning of the conversation, while follow-up is the following intent. A bot cannot start a conversation without an Initial Intent.`}),`\\n`,(0,n.jsxs)(a.h3,{id:\\"kata-cli\\",children:[(0,n.jsx)(a.a,{className:\\"anchor\\",href:\\"#kata-cli\\",children:(0,n.jsx)(a.span,{className:\\"icon icon-link\\"})}),\\"Kata CLI\\"]}),`\\n`,(0,n.jsx)(a.p,{children:\\"Kata CLI is a command-line interface that users use to interact with the Kata Platform.\\"}),`\\n`,(0,n.jsxs)(a.h3,{id:\\"kata-platform\\",children:[(0,n.jsx)(a.a,{className:\\"anchor\\",href:\\"#kata-platform\\",children:(0,n.jsx)(a.span,{className:\\"icon icon-link\\"})}),\\"Kata Platform\\"]}),`\\n`,(0,n.jsx)(a.p,{children:\\"Kata Platform is an ecosystem of applications and services developers use to build NLP products and conversational AI.\\"}),`\\n`,(0,n.jsxs)(a.h3,{id:\\"kata-ml\\",children:[(0,n.jsx)(a.a,{className:\\"anchor\\",href:\\"#kata-ml\\",children:(0,n.jsx)(a.span,{className:\\"icon icon-link\\"})}),\\"Kata ML\\"]}),`\\n`,(0,n.jsx)(a.p,{children:\\"KataML or Kata Markup Language is a computer language that uses tags or markup to write bot designs.\\"}),`\\n`,(0,n.jsxs)(a.h3,{id:\\"message\\",children:[(0,n.jsx)(a.a,{className:\\"anchor\\",href:\\"#message\\",children:(0,n.jsx)(a.span,{className:\\"icon icon-link\\"})}),\\"Message\\"]}),`\\n`,(0,n.jsx)(a.p,{children:\\"A message is a conversation unit delivered by bots to end-users or vice versa in text, voice, or media. It consists of incoming messages and outgoing messages.\\"}),`\\n`,(0,n.jsxs)(a.h3,{id:\\"nlp\\",children:[(0,n.jsx)(a.a,{className:\\"anchor\\",href:\\"#nlp\\",children:(0,n.jsx)(a.span,{className:\\"icon icon-link\\"})}),\\"NLP\\"]}),`\\n`,(0,n.jsx)(a.p,{children:\\"Natural Language Processing is a subfield of linguistics, computer science, and artificial intelligence involved with the interactions between computers and human language. NLP discusses how computers can process and analyze large amounts of natural language data.\\"}),`\\n`,(0,n.jsxs)(a.h3,{id:\\"omnichannel\\",children:[(0,n.jsx)(a.a,{className:\\"anchor\\",href:\\"#omnichannel\\",children:(0,n.jsx)(a.span,{className:\\"icon icon-link\\"})}),\\"Omnichannel\\"]}),`\\n`,(0,n.jsx)(a.p,{children:\\"Omnichannel is a multi-channel communication between end-users and human-agents. Kata Omnichat is an omnichannel product from Kata.ai which provides integrated channels such as Instagram and WhatsApp.\\"}),`\\n`,(0,n.jsxs)(a.h3,{id:\\"session\\",children:[(0,n.jsx)(a.a,{className:\\"anchor\\",href:\\"#session\\",children:(0,n.jsx)(a.span,{className:\\"icon icon-link\\"})}),\\"Session\\"]}),`\\n`,(0,n.jsx)(a.p,{children:\\"A session is an exchange of information between two or more communication devices or between a bot and an end-user. It has a start and an endpoint that you can define by a certain point. For example, Kata Platform measures one session from the start of a conversation until the end-user does not reply until 5 minutes.\\"}),`\\n`,(0,n.jsxs)(a.h3,{id:\\"transcripts\\",children:[(0,n.jsx)(a.a,{className:\\"anchor\\",href:\\"#transcripts\\",children:(0,n.jsx)(a.span,{className:\\"icon icon-link\\"})}),\\"Transcripts\\"]}),`\\n`,(0,n.jsx)(a.p,{children:\\"A transcript is a conversation context between chatbot and end-user that consists of text and media, in which users can download and show information based on filters.\\"})]})}}var I=k;return N(A);})();\\n;return Component;"},"_id":"kata-platform/glossary/general.mdx","_raw":{"sourceFilePath":"kata-platform/glossary/general.mdx","sourceFileName":"general.mdx","sourceFileDir":"kata-platform/glossary","contentType":"mdx","flattenedPath":"kata-platform/glossary/general"},"type":"KataPlatform","slug":["glossary","general"],"excerpt":"\\n### API\\n\\nApplication Programming Interface is a type of software that connects computers to another computer program.\\n\\n### Bot\\n\\nA bot is a software application that runs automated tasks"}');
;// CONCATENATED MODULE: ./.contentlayer/generated/KataPlatform/kata-platform__glossary__inside-kata-flow.mdx.json
const kata_platform_glossary_inside_kata_flow_mdx_namespaceObject = JSON.parse('{"id":"glossary-inside-kata-flow","section":"Glossary","title":"Inside Kata Flow","prev":"glossary-kata-platform","next":"glossary-coming-soon","body":{"raw":"\\n### API\\n\\nAPI is an action type to call an external API when the chatbot meet with specific condition. It can be used in all messaging channels.\\n\\n<br />\\nThere are 3 action API types in the Kata Platform:\\n\\n#### Handover\\n\\nHandover API is used to shift conversations from chatbot to human agent via Kata Omnichat. For more info and tutorial, please check this link\\n\\n#### Sync\\n\\nSync API is a default API process and makes the response API saved in the metadata. It will need to wait for the API results before the chatbot continues to the next state.\\n\\n#### Async\\n\\nAsync API is used to make the response API send via command without waiting for the API results to move to the next state (a more seamless API call process).\\n\\n<FigureImage\\n  alt=\\"Image 1 alt\\"\\n  src=\\"/assets/images/products/kata-platform/release-notes/platform-3.26.0/image1.webp\\"\\n  caption={{ title: \'Figure 1\', description: \'Handover, Sync, Async Tab in Action API\' }}\\n  layout=\\"responsive\\"\\n  naturalHeight={1111}\\n  naturalWidth={664}\\n/>\\n\\n### Conversation Flow\\n\\nConversation Flows contain a collection of conversation flows and actions in a bot. You can create a new flow by clicking the Create Flow button.\\n\\n#### Active Flow\\n\\nActive Flow works as an indicator for active and functioning flow inside the bot. If the Active Flow toggle is green, the flow is running. On the other hand, if the Active Flow toggle is off, the flow is inaccessible in the bot.\\n\\n#### Persistent Flow\\n\\nPersistent Flow is used to make the flow repeat the last state if the end-user gives an inappropriate response. You can build this by turning on the Persistent toggle on Create Flow window.\\n\\n#### Default Flow\\n\\nDefault is the flow that has been provided by Kata Platform. You can find it on the Conversation Flow screen. Meanwhile, the Default toggle box on the Create Flow screen serves to activate the default mode of flow. The default mode will run when no other flow can respond to end-user input.\\n\\n### Transition\\n\\nTransition is the process of moving between different states or the state itself (self-transition). In Kata Platform, you can use a transition to connect two states by drawing lines between them or define it through the Transition tab in Create State window.\\nEvery time you draw a line from one state to another on the Conversation Flow screen, you must create a Transition. This transition between states requires conditions to make the bot move along the path.\\nOn the Transitions tab in the Create States window, you can choose from two types of transitions: Self Transition and Floating Transition. Both of these features are optional.\\n\\n#### Self Transition\\n\\nThis feature lets you create a looping state if the end-users input an utterance that doesn’t meet the bot condition. For example, you create a bot that requires an end-user email address. To avoid inappropriate end-user answers, you can make this state keep repeating the same question until the end-user provides the correct answer.\\n\\n#### Floating Transition\\n\\nFloating Transition allows you to create a state that a bot can access freely from any prior state. You can find this feature on the Transition tab while you open the Create or Edit State window.\\n\\n### Mapping\\n\\nMapping is a procedure to store a value in a destined variable. For example, you want to input 0 in A variable, which is called “value”, then store it into the destined variable, which is “key”. Mapping in the Kata Platform can be found when creating or editing Transition and creating or editing a State.\\n\\n#### Simple Mapping\\n\\nSimple Mapping is a Mapping process with inputting key and value.\\n\\n#### Method Mapping\\n\\nMethod is JS code that is embedded into the chatbot to perform a certain operation while method mapping is a way to run the methods that have been created in the chatbot.\\n\\n#### OnEnter Mapping\\n\\nThe mapping process occurs when the bot enters a state.\\n\\n#### OnExit Mapping\\n\\nThe mapping process occurs after the bot finds a transition from one state to another.\\n\\n### States\\n\\nState represents the stage of the conversation.\\n\\n#### Initial State\\n\\nInitial state acts as a flow starter. Each flow has to build one initial state.\\n\\n#### End State\\n\\nEnd state indicates the end of one session of conversation.\\n","code":"var Component=(()=>{var d=Object.create;var s=Object.defineProperty;var p=Object.getOwnPropertyDescriptor;var m=Object.getOwnPropertyNames;var f=Object.getPrototypeOf,u=Object.prototype.hasOwnProperty;var r=a=>s(a,\\"__esModule\\",{value:!0});var w=(a,t)=>()=>(t||a((t={exports:{}}).exports,t),t.exports),g=(a,t)=>{for(var i in t)s(a,i,{get:t[i],enumerable:!0})},c=(a,t,i,n)=>{if(t&&typeof t==\\"object\\"||typeof t==\\"function\\")for(let o of m(t))!u.call(a,o)&&(i||o!==\\"default\\")&&s(a,o,{get:()=>t[o],enumerable:!(n=p(t,o))||n.enumerable});return a},b=(a,t)=>c(r(s(a!=null?d(f(a)):{},\\"default\\",!t&&a&&a.__esModule?{get:()=>a.default,enumerable:!0}:{value:a,enumerable:!0})),a),v=(a=>(t,i)=>a&&a.get(t)||(i=c(r({}),t,1),a&&a.set(t,i),i))(typeof WeakMap!=\\"undefined\\"?new WeakMap:0);var h=w((x,l)=>{l.exports=_jsx_runtime});var I={};g(I,{default:()=>k,frontmatter:()=>y});var e=b(h()),y={id:\\"glossary-inside-kata-flow\\",title:\\"Inside Kata Flow\\",prev:\\"glossary-kata-platform\\",next:\\"glossary-coming-soon\\",section:\\"Glossary\\"};function N(a={}){let{wrapper:t}=a.components||{};return t?(0,e.jsx)(t,Object.assign({},a,{children:(0,e.jsx)(i,{})})):i();function i(){let n=Object.assign({h3:\\"h3\\",a:\\"a\\",span:\\"span\\",p:\\"p\\",h4:\\"h4\\"},a.components),{FigureImage:o}=n;return o||F(\\"FigureImage\\",!0),(0,e.jsxs)(e.Fragment,{children:[(0,e.jsxs)(n.h3,{id:\\"api\\",children:[(0,e.jsx)(n.a,{className:\\"anchor\\",href:\\"#api\\",children:(0,e.jsx)(n.span,{className:\\"icon icon-link\\"})}),\\"API\\"]}),`\\n`,(0,e.jsx)(n.p,{children:\\"API is an action type to call an external API when the chatbot meet with specific condition. It can be used in all messaging channels.\\"}),`\\n`,(0,e.jsx)(\\"br\\",{}),`\\n`,(0,e.jsx)(n.p,{children:\\"There are 3 action API types in the Kata Platform:\\"}),`\\n`,(0,e.jsxs)(n.h4,{id:\\"handover\\",children:[(0,e.jsx)(n.a,{className:\\"anchor\\",href:\\"#handover\\",children:(0,e.jsx)(n.span,{className:\\"icon icon-link\\"})}),\\"Handover\\"]}),`\\n`,(0,e.jsx)(n.p,{children:\\"Handover API is used to shift conversations from chatbot to human agent via Kata Omnichat. For more info and tutorial, please check this link\\"}),`\\n`,(0,e.jsxs)(n.h4,{id:\\"sync\\",children:[(0,e.jsx)(n.a,{className:\\"anchor\\",href:\\"#sync\\",children:(0,e.jsx)(n.span,{className:\\"icon icon-link\\"})}),\\"Sync\\"]}),`\\n`,(0,e.jsx)(n.p,{children:\\"Sync API is a default API process and makes the response API saved in the metadata. It will need to wait for the API results before the chatbot continues to the next state.\\"}),`\\n`,(0,e.jsxs)(n.h4,{id:\\"async\\",children:[(0,e.jsx)(n.a,{className:\\"anchor\\",href:\\"#async\\",children:(0,e.jsx)(n.span,{className:\\"icon icon-link\\"})}),\\"Async\\"]}),`\\n`,(0,e.jsx)(n.p,{children:\\"Async API is used to make the response API send via command without waiting for the API results to move to the next state (a more seamless API call process).\\"}),`\\n`,(0,e.jsx)(o,{alt:\\"Image 1 alt\\",src:\\"/assets/images/products/kata-platform/release-notes/platform-3.26.0/image1.webp\\",caption:{title:\\"Figure 1\\",description:\\"Handover, Sync, Async Tab in Action API\\"},layout:\\"responsive\\",naturalHeight:1111,naturalWidth:664}),`\\n`,(0,e.jsxs)(n.h3,{id:\\"conversation-flow\\",children:[(0,e.jsx)(n.a,{className:\\"anchor\\",href:\\"#conversation-flow\\",children:(0,e.jsx)(n.span,{className:\\"icon icon-link\\"})}),\\"Conversation Flow\\"]}),`\\n`,(0,e.jsx)(n.p,{children:\\"Conversation Flows contain a collection of conversation flows and actions in a bot. You can create a new flow by clicking the Create Flow button.\\"}),`\\n`,(0,e.jsxs)(n.h4,{id:\\"active-flow\\",children:[(0,e.jsx)(n.a,{className:\\"anchor\\",href:\\"#active-flow\\",children:(0,e.jsx)(n.span,{className:\\"icon icon-link\\"})}),\\"Active Flow\\"]}),`\\n`,(0,e.jsx)(n.p,{children:\\"Active Flow works as an indicator for active and functioning flow inside the bot. If the Active Flow toggle is green, the flow is running. On the other hand, if the Active Flow toggle is off, the flow is inaccessible in the bot.\\"}),`\\n`,(0,e.jsxs)(n.h4,{id:\\"persistent-flow\\",children:[(0,e.jsx)(n.a,{className:\\"anchor\\",href:\\"#persistent-flow\\",children:(0,e.jsx)(n.span,{className:\\"icon icon-link\\"})}),\\"Persistent Flow\\"]}),`\\n`,(0,e.jsx)(n.p,{children:\\"Persistent Flow is used to make the flow repeat the last state if the end-user gives an inappropriate response. You can build this by turning on the Persistent toggle on Create Flow window.\\"}),`\\n`,(0,e.jsxs)(n.h4,{id:\\"default-flow\\",children:[(0,e.jsx)(n.a,{className:\\"anchor\\",href:\\"#default-flow\\",children:(0,e.jsx)(n.span,{className:\\"icon icon-link\\"})}),\\"Default Flow\\"]}),`\\n`,(0,e.jsx)(n.p,{children:\\"Default is the flow that has been provided by Kata Platform. You can find it on the Conversation Flow screen. Meanwhile, the Default toggle box on the Create Flow screen serves to activate the default mode of flow. The default mode will run when no other flow can respond to end-user input.\\"}),`\\n`,(0,e.jsxs)(n.h3,{id:\\"transition\\",children:[(0,e.jsx)(n.a,{className:\\"anchor\\",href:\\"#transition\\",children:(0,e.jsx)(n.span,{className:\\"icon icon-link\\"})}),\\"Transition\\"]}),`\\n`,(0,e.jsx)(n.p,{children:`Transition is the process of moving between different states or the state itself (self-transition). In Kata Platform, you can use a transition to connect two states by drawing lines between them or define it through the Transition tab in Create State window.\\nEvery time you draw a line from one state to another on the Conversation Flow screen, you must create a Transition. This transition between states requires conditions to make the bot move along the path.\\nOn the Transitions tab in the Create States window, you can choose from two types of transitions: Self Transition and Floating Transition. Both of these features are optional.`}),`\\n`,(0,e.jsxs)(n.h4,{id:\\"self-transition\\",children:[(0,e.jsx)(n.a,{className:\\"anchor\\",href:\\"#self-transition\\",children:(0,e.jsx)(n.span,{className:\\"icon icon-link\\"})}),\\"Self Transition\\"]}),`\\n`,(0,e.jsx)(n.p,{children:\\"This feature lets you create a looping state if the end-users input an utterance that doesn\\\\u2019t meet the bot condition. For example, you create a bot that requires an end-user email address. To avoid inappropriate end-user answers, you can make this state keep repeating the same question until the end-user provides the correct answer.\\"}),`\\n`,(0,e.jsxs)(n.h4,{id:\\"floating-transition\\",children:[(0,e.jsx)(n.a,{className:\\"anchor\\",href:\\"#floating-transition\\",children:(0,e.jsx)(n.span,{className:\\"icon icon-link\\"})}),\\"Floating Transition\\"]}),`\\n`,(0,e.jsx)(n.p,{children:\\"Floating Transition allows you to create a state that a bot can access freely from any prior state. You can find this feature on the Transition tab while you open the Create or Edit State window.\\"}),`\\n`,(0,e.jsxs)(n.h3,{id:\\"mapping\\",children:[(0,e.jsx)(n.a,{className:\\"anchor\\",href:\\"#mapping\\",children:(0,e.jsx)(n.span,{className:\\"icon icon-link\\"})}),\\"Mapping\\"]}),`\\n`,(0,e.jsx)(n.p,{children:\\"Mapping is a procedure to store a value in a destined variable. For example, you want to input 0 in A variable, which is called \\\\u201Cvalue\\\\u201D, then store it into the destined variable, which is \\\\u201Ckey\\\\u201D. Mapping in the Kata Platform can be found when creating or editing Transition and creating or editing a State.\\"}),`\\n`,(0,e.jsxs)(n.h4,{id:\\"simple-mapping\\",children:[(0,e.jsx)(n.a,{className:\\"anchor\\",href:\\"#simple-mapping\\",children:(0,e.jsx)(n.span,{className:\\"icon icon-link\\"})}),\\"Simple Mapping\\"]}),`\\n`,(0,e.jsx)(n.p,{children:\\"Simple Mapping is a Mapping process with inputting key and value.\\"}),`\\n`,(0,e.jsxs)(n.h4,{id:\\"method-mapping\\",children:[(0,e.jsx)(n.a,{className:\\"anchor\\",href:\\"#method-mapping\\",children:(0,e.jsx)(n.span,{className:\\"icon icon-link\\"})}),\\"Method Mapping\\"]}),`\\n`,(0,e.jsx)(n.p,{children:\\"Method is JS code that is embedded into the chatbot to perform a certain operation while method mapping is a way to run the methods that have been created in the chatbot.\\"}),`\\n`,(0,e.jsxs)(n.h4,{id:\\"onenter-mapping\\",children:[(0,e.jsx)(n.a,{className:\\"anchor\\",href:\\"#onenter-mapping\\",children:(0,e.jsx)(n.span,{className:\\"icon icon-link\\"})}),\\"OnEnter Mapping\\"]}),`\\n`,(0,e.jsx)(n.p,{children:\\"The mapping process occurs when the bot enters a state.\\"}),`\\n`,(0,e.jsxs)(n.h4,{id:\\"onexit-mapping\\",children:[(0,e.jsx)(n.a,{className:\\"anchor\\",href:\\"#onexit-mapping\\",children:(0,e.jsx)(n.span,{className:\\"icon icon-link\\"})}),\\"OnExit Mapping\\"]}),`\\n`,(0,e.jsx)(n.p,{children:\\"The mapping process occurs after the bot finds a transition from one state to another.\\"}),`\\n`,(0,e.jsxs)(n.h3,{id:\\"states\\",children:[(0,e.jsx)(n.a,{className:\\"anchor\\",href:\\"#states\\",children:(0,e.jsx)(n.span,{className:\\"icon icon-link\\"})}),\\"States\\"]}),`\\n`,(0,e.jsx)(n.p,{children:\\"State represents the stage of the conversation.\\"}),`\\n`,(0,e.jsxs)(n.h4,{id:\\"initial-state\\",children:[(0,e.jsx)(n.a,{className:\\"anchor\\",href:\\"#initial-state\\",children:(0,e.jsx)(n.span,{className:\\"icon icon-link\\"})}),\\"Initial State\\"]}),`\\n`,(0,e.jsx)(n.p,{children:\\"Initial state acts as a flow starter. Each flow has to build one initial state.\\"}),`\\n`,(0,e.jsxs)(n.h4,{id:\\"end-state\\",children:[(0,e.jsx)(n.a,{className:\\"anchor\\",href:\\"#end-state\\",children:(0,e.jsx)(n.span,{className:\\"icon icon-link\\"})}),\\"End State\\"]}),`\\n`,(0,e.jsx)(n.p,{children:\\"End state indicates the end of one session of conversation.\\"})]})}}var k=N;function F(a,t){throw new Error(\\"Expected \\"+(t?\\"component\\":\\"object\\")+\\" `\\"+a+\\"` to be defined: you likely forgot to import, pass, or provide it.\\")}return v(I);})();\\n;return Component;"},"_id":"kata-platform/glossary/inside-kata-flow.mdx","_raw":{"sourceFilePath":"kata-platform/glossary/inside-kata-flow.mdx","sourceFileName":"inside-kata-flow.mdx","sourceFileDir":"kata-platform/glossary","contentType":"mdx","flattenedPath":"kata-platform/glossary/inside-kata-flow"},"type":"KataPlatform","slug":["glossary","inside-kata-flow"],"excerpt":"\\n### API\\n\\nAPI is an action type to call an external API when the chatbot meet with specific condition. It can be used in all messaging channels"}');
;// CONCATENATED MODULE: ./.contentlayer/generated/KataPlatform/kata-platform__glossary__kata-platform.mdx.json
const kata_platform_glossary_kata_platform_mdx_namespaceObject = JSON.parse('{"id":"glossary-kata-platform","section":"Glossary","title":"Kata Platform","prev":"glossary-general","next":"glossary-inside-kata-flow","body":{"raw":"\\n### Analytics\\n\\nA feature to analyze end-users behavior. This data analysis set can be used to enhance conversational AI product quality.\\n\\n### Flow\\n\\nFlow is a feature to create bot flow, integrate bot with NLU and create data mapping for bot needs. Flow provides an Error Log to see any errors when bot development or bot has been released.\\n\\n### NLU\\n\\nNatural Language Understanding is a capability that a computer possesses to transform a text message into a structured object. In the Kata Platform, NLU is a place for users to design and build their NLU capability for their conversational AI product.\\n\\n### NLUs\\n\\nNLUs is a feature which enables you to integrate chatbot using keyword and regex. Also, NLUs enables you to add NLU model in your chatbot\\n\\n### Channels\\n\\nA channel is an instant messaging application that can be integrated with Kata Platform, such as WhatsApp, Telegram, LINE, Facebook Messenger, Instagram, etc.\\n\\n### Deploy\\n\\nDeploy is a feature in the Kata Platform to do Deployment which merges all Revisions in Revision List.\\n\\n### Deployment\\n\\nDeployment is a step to merge all Revisions in Flow, NLU, and CMS so that bots can be integrated into the channel. Before starting channel integration, chatbots must at least have 1 deployment.\\n\\n### Environment\\n\\nAn environment is a zone in computer science that provides a place to run integrated applications. Kata Platform has 3 environments: development, staging, and production.\\n\\n### Project\\n\\nProject is a feature to start your bot or NLP project. A Project can consist of Flow, NLU, and CMS.\\n\\n### Publish\\n\\nPublish is a command button to save changes in bot and NLU.\\n\\n### Revision List\\n\\nRevision List is a feature to list available revisions.\\n","code":"var Component=(()=>{var d=Object.create;var o=Object.defineProperty;var p=Object.getOwnPropertyDescriptor;var m=Object.getOwnPropertyNames;var u=Object.getPrototypeOf,f=Object.prototype.hasOwnProperty;var r=a=>o(a,\\"__esModule\\",{value:!0});var N=(a,s)=>()=>(s||a((s={exports:{}}).exports,s),s.exports),g=(a,s)=>{for(var i in s)o(a,i,{get:s[i],enumerable:!0})},l=(a,s,i,e)=>{if(s&&typeof s==\\"object\\"||typeof s==\\"function\\")for(let t of m(s))!f.call(a,t)&&(i||t!==\\"default\\")&&o(a,t,{get:()=>s[t],enumerable:!(e=p(s,t))||e.enumerable});return a},b=(a,s)=>l(r(o(a!=null?d(u(a)):{},\\"default\\",!s&&a&&a.__esModule?{get:()=>a.default,enumerable:!0}:{value:a,enumerable:!0})),a),y=(a=>(s,i)=>a&&a.get(s)||(i=l(r({}),s,1),a&&a.set(s,i),i))(typeof WeakMap!=\\"undefined\\"?new WeakMap:0);var h=N((x,c)=>{c.exports=_jsx_runtime});var k={};g(k,{default:()=>w,frontmatter:()=>v});var n=b(h()),v={id:\\"glossary-kata-platform\\",title:\\"Kata Platform\\",prev:\\"glossary-general\\",next:\\"glossary-inside-kata-flow\\",section:\\"Glossary\\"};function L(a={}){let{wrapper:s}=a.components||{};return s?(0,n.jsx)(s,Object.assign({},a,{children:(0,n.jsx)(i,{})})):i();function i(){let e=Object.assign({h3:\\"h3\\",a:\\"a\\",span:\\"span\\",p:\\"p\\"},a.components);return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsxs)(e.h3,{id:\\"analytics\\",children:[(0,n.jsx)(e.a,{className:\\"anchor\\",href:\\"#analytics\\",children:(0,n.jsx)(e.span,{className:\\"icon icon-link\\"})}),\\"Analytics\\"]}),`\\n`,(0,n.jsx)(e.p,{children:\\"A feature to analyze end-users behavior. This data analysis set can be used to enhance conversational AI product quality.\\"}),`\\n`,(0,n.jsxs)(e.h3,{id:\\"flow\\",children:[(0,n.jsx)(e.a,{className:\\"anchor\\",href:\\"#flow\\",children:(0,n.jsx)(e.span,{className:\\"icon icon-link\\"})}),\\"Flow\\"]}),`\\n`,(0,n.jsx)(e.p,{children:\\"Flow is a feature to create bot flow, integrate bot with NLU and create data mapping for bot needs. Flow provides an Error Log to see any errors when bot development or bot has been released.\\"}),`\\n`,(0,n.jsxs)(e.h3,{id:\\"nlu\\",children:[(0,n.jsx)(e.a,{className:\\"anchor\\",href:\\"#nlu\\",children:(0,n.jsx)(e.span,{className:\\"icon icon-link\\"})}),\\"NLU\\"]}),`\\n`,(0,n.jsx)(e.p,{children:\\"Natural Language Understanding is a capability that a computer possesses to transform a text message into a structured object. In the Kata Platform, NLU is a place for users to design and build their NLU capability for their conversational AI product.\\"}),`\\n`,(0,n.jsxs)(e.h3,{id:\\"nlus\\",children:[(0,n.jsx)(e.a,{className:\\"anchor\\",href:\\"#nlus\\",children:(0,n.jsx)(e.span,{className:\\"icon icon-link\\"})}),\\"NLUs\\"]}),`\\n`,(0,n.jsx)(e.p,{children:\\"NLUs is a feature which enables you to integrate chatbot using keyword and regex. Also, NLUs enables you to add NLU model in your chatbot\\"}),`\\n`,(0,n.jsxs)(e.h3,{id:\\"channels\\",children:[(0,n.jsx)(e.a,{className:\\"anchor\\",href:\\"#channels\\",children:(0,n.jsx)(e.span,{className:\\"icon icon-link\\"})}),\\"Channels\\"]}),`\\n`,(0,n.jsx)(e.p,{children:\\"A channel is an instant messaging application that can be integrated with Kata Platform, such as WhatsApp, Telegram, LINE, Facebook Messenger, Instagram, etc.\\"}),`\\n`,(0,n.jsxs)(e.h3,{id:\\"deploy\\",children:[(0,n.jsx)(e.a,{className:\\"anchor\\",href:\\"#deploy\\",children:(0,n.jsx)(e.span,{className:\\"icon icon-link\\"})}),\\"Deploy\\"]}),`\\n`,(0,n.jsx)(e.p,{children:\\"Deploy is a feature in the Kata Platform to do Deployment which merges all Revisions in Revision List.\\"}),`\\n`,(0,n.jsxs)(e.h3,{id:\\"deployment\\",children:[(0,n.jsx)(e.a,{className:\\"anchor\\",href:\\"#deployment\\",children:(0,n.jsx)(e.span,{className:\\"icon icon-link\\"})}),\\"Deployment\\"]}),`\\n`,(0,n.jsx)(e.p,{children:\\"Deployment is a step to merge all Revisions in Flow, NLU, and CMS so that bots can be integrated into the channel. Before starting channel integration, chatbots must at least have 1 deployment.\\"}),`\\n`,(0,n.jsxs)(e.h3,{id:\\"environment\\",children:[(0,n.jsx)(e.a,{className:\\"anchor\\",href:\\"#environment\\",children:(0,n.jsx)(e.span,{className:\\"icon icon-link\\"})}),\\"Environment\\"]}),`\\n`,(0,n.jsx)(e.p,{children:\\"An environment is a zone in computer science that provides a place to run integrated applications. Kata Platform has 3 environments: development, staging, and production.\\"}),`\\n`,(0,n.jsxs)(e.h3,{id:\\"project\\",children:[(0,n.jsx)(e.a,{className:\\"anchor\\",href:\\"#project\\",children:(0,n.jsx)(e.span,{className:\\"icon icon-link\\"})}),\\"Project\\"]}),`\\n`,(0,n.jsx)(e.p,{children:\\"Project is a feature to start your bot or NLP project. A Project can consist of Flow, NLU, and CMS.\\"}),`\\n`,(0,n.jsxs)(e.h3,{id:\\"publish\\",children:[(0,n.jsx)(e.a,{className:\\"anchor\\",href:\\"#publish\\",children:(0,n.jsx)(e.span,{className:\\"icon icon-link\\"})}),\\"Publish\\"]}),`\\n`,(0,n.jsx)(e.p,{children:\\"Publish is a command button to save changes in bot and NLU.\\"}),`\\n`,(0,n.jsxs)(e.h3,{id:\\"revision-list\\",children:[(0,n.jsx)(e.a,{className:\\"anchor\\",href:\\"#revision-list\\",children:(0,n.jsx)(e.span,{className:\\"icon icon-link\\"})}),\\"Revision List\\"]}),`\\n`,(0,n.jsx)(e.p,{children:\\"Revision List is a feature to list available revisions.\\"})]})}}var w=L;return y(k);})();\\n;return Component;"},"_id":"kata-platform/glossary/kata-platform.mdx","_raw":{"sourceFilePath":"kata-platform/glossary/kata-platform.mdx","sourceFileName":"kata-platform.mdx","sourceFileDir":"kata-platform/glossary","contentType":"mdx","flattenedPath":"kata-platform/glossary/kata-platform"},"type":"KataPlatform","slug":["glossary","kata-platform"],"excerpt":"\\n### Analytics\\n\\nA feature to analyze end-users behavior. This data analysis set can be used to enhance conversational AI product quality"}');
;// CONCATENATED MODULE: ./.contentlayer/generated/KataPlatform/kata-platform__how-to__how-to-change-error-messages-in-your-chatbot.mdx.json
const kata_platform_how_to_how_to_change_error_messages_in_your_chatbot_mdx_namespaceObject = JSON.parse('{"id":"how-to-change-error-messages-in-your-chatbot","section":"How To","title":"How to Change Error Messages in Your Chatbot to Match Them With Chatbot Persona","prev":"using-sync-api-to-access-third-party-application","next":"general-faqs","body":{"raw":"\\nIn Kata Platform, we have a default error message which will show to end-users “Maaf terjadi kesalahan pada sistem” and “Maaf pesan kamu akan diproses beberapa saat lagi yaa”, then you can check it in the Error Log feature in Kata Platform. Learn more about error messages in the Kata Platform.\\n\\nYou can change the default error message into your language or based on the chatbot\'s persona. Let’s start.\\n\\n## Change Default Error Message\\n\\nThese steps are to change the default error message “Maaf terjadi kesalahan pada sistem”.\\n\\n1. Go to your project, then click the **Flow** menu.\\n\\n<FigureImage\\n  alt=\\"Image 1 Alt\\"\\n  src=\\"/assets/images/products/kata-platform/how-to/how-to-change-error-messages-in-your-chatbot/image1.webp\\"\\n  caption={{ title: \'Figure 1\', description: \'Flow menu located.\' }}\\n  layout=\\"responsive\\"\\n  naturalHeight={1090}\\n  naturalWidth={1748}\\n/>\\n\\n2. In this Flow menu, click the **Configurations** sub-menu.\\n\\n<FigureImage\\n  alt=\\"Image 2 Alt\\"\\n  src=\\"/assets/images/products/kata-platform/how-to/how-to-change-error-messages-in-your-chatbot/image2.webp\\"\\n  caption={{ title: \'Figure 2\', description: \'Configuration menu located.\' }}\\n  layout=\\"responsive\\"\\n  naturalHeight={1057}\\n  naturalWidth={1999}\\n/>\\n\\n3. Write this code about what you wanted to change.\\n\\n```\\ndefaultErrorMessage: \'Sorry, there is an error. Please try again.\'\\n```\\n\\n4. Click **Save** to save the configuration.\\n\\n## Change Default Timeout Message\\n\\nThese steps are to change the default timeout message “Maaf pesan kamu sedang diproses yaa”.\\n\\n1. Go to the **Configurations** sub-menu again.\\n2. Write this code about what you want to change.\\n\\n```\\ndefaultTimeoutMessage: \'Sorry, there is an error. Please try again.\'\\n```\\n\\n3. Click **Save** to save the configuration.\\n\\nThis is the end of the guidance. You can contact <a href=\\"mailto:support@kata.ai\\">support@kata.ai</a> if you have any difficulties when implementing this.\\n","code":"var Component=(()=>{var d=Object.create;var i=Object.defineProperty;var g=Object.getOwnPropertyDescriptor;var u=Object.getOwnPropertyNames;var m=Object.getPrototypeOf,p=Object.prototype.hasOwnProperty;var s=t=>i(t,\\"__esModule\\",{value:!0});var f=(t,n)=>()=>(n||t((n={exports:{}}).exports,n),n.exports),w=(t,n)=>{for(var r in n)i(t,r,{get:n[r],enumerable:!0})},c=(t,n,r,a)=>{if(n&&typeof n==\\"object\\"||typeof n==\\"function\\")for(let o of u(n))!p.call(t,o)&&(r||o!==\\"default\\")&&i(t,o,{get:()=>n[o],enumerable:!(a=g(n,o))||a.enumerable});return t},y=(t,n)=>c(s(i(t!=null?d(m(t)):{},\\"default\\",!n&&t&&t.__esModule?{get:()=>t.default,enumerable:!0}:{value:t,enumerable:!0})),t),b=(t=>(n,r)=>t&&t.get(n)||(r=c(s({}),n,1),t&&t.set(n,r),r))(typeof WeakMap!=\\"undefined\\"?new WeakMap:0);var h=f((F,l)=>{l.exports=_jsx_runtime});var j={};w(j,{default:()=>x,frontmatter:()=>k});var e=y(h()),k={id:\\"how-to-change-error-messages-in-your-chatbot\\",title:\\"How to Change Error Messages in Your Chatbot to Match Them With Chatbot Persona\\",prev:\\"using-sync-api-to-access-third-party-application\\",next:\\"general-faqs\\",section:\\"How To\\"};function M(t={}){let{wrapper:n}=t.components||{};return n?(0,e.jsx)(n,Object.assign({},t,{children:(0,e.jsx)(r,{})})):r();function r(){let a=Object.assign({p:\\"p\\",h2:\\"h2\\",a:\\"a\\",span:\\"span\\",ol:\\"ol\\",li:\\"li\\",strong:\\"strong\\",pre:\\"pre\\",code:\\"code\\"},t.components),{FigureImage:o}=a;return o||C(\\"FigureImage\\",!0),(0,e.jsxs)(e.Fragment,{children:[(0,e.jsx)(a.p,{children:\\"In Kata Platform, we have a default error message which will show to end-users \\\\u201CMaaf terjadi kesalahan pada sistem\\\\u201D and \\\\u201CMaaf pesan kamu akan diproses beberapa saat lagi yaa\\\\u201D, then you can check it in the Error Log feature in Kata Platform. Learn more about error messages in the Kata Platform.\\"}),`\\n`,(0,e.jsx)(a.p,{children:\\"You can change the default error message into your language or based on the chatbot\'s persona. Let\\\\u2019s start.\\"}),`\\n`,(0,e.jsxs)(a.h2,{id:\\"change-default-error-message\\",children:[(0,e.jsx)(a.a,{className:\\"anchor\\",href:\\"#change-default-error-message\\",children:(0,e.jsx)(a.span,{className:\\"icon icon-link\\"})}),\\"Change Default Error Message\\"]}),`\\n`,(0,e.jsx)(a.p,{children:\\"These steps are to change the default error message \\\\u201CMaaf terjadi kesalahan pada sistem\\\\u201D.\\"}),`\\n`,(0,e.jsxs)(a.ol,{children:[`\\n`,(0,e.jsxs)(a.li,{children:[\\"Go to your project, then click the \\",(0,e.jsx)(a.strong,{children:\\"Flow\\"}),\\" menu.\\"]}),`\\n`]}),`\\n`,(0,e.jsx)(o,{alt:\\"Image 1 Alt\\",src:\\"/assets/images/products/kata-platform/how-to/how-to-change-error-messages-in-your-chatbot/image1.webp\\",caption:{title:\\"Figure 1\\",description:\\"Flow menu located.\\"},layout:\\"responsive\\",naturalHeight:1090,naturalWidth:1748}),`\\n`,(0,e.jsxs)(a.ol,{start:\\"2\\",children:[`\\n`,(0,e.jsxs)(a.li,{children:[\\"In this Flow menu, click the \\",(0,e.jsx)(a.strong,{children:\\"Configurations\\"}),\\" sub-menu.\\"]}),`\\n`]}),`\\n`,(0,e.jsx)(o,{alt:\\"Image 2 Alt\\",src:\\"/assets/images/products/kata-platform/how-to/how-to-change-error-messages-in-your-chatbot/image2.webp\\",caption:{title:\\"Figure 2\\",description:\\"Configuration menu located.\\"},layout:\\"responsive\\",naturalHeight:1057,naturalWidth:1999}),`\\n`,(0,e.jsxs)(a.ol,{start:\\"3\\",children:[`\\n`,(0,e.jsx)(a.li,{children:\\"Write this code about what you wanted to change.\\"}),`\\n`]}),`\\n`,(0,e.jsx)(a.pre,{children:(0,e.jsx)(a.code,{className:\\"code-highlight\\",children:(0,e.jsx)(a.span,{className:\\"code-line\\",children:`defaultErrorMessage: \'Sorry, there is an error. Please try again.\'\\n`})})}),`\\n`,(0,e.jsxs)(a.ol,{start:\\"4\\",children:[`\\n`,(0,e.jsxs)(a.li,{children:[\\"Click \\",(0,e.jsx)(a.strong,{children:\\"Save\\"}),\\" to save the configuration.\\"]}),`\\n`]}),`\\n`,(0,e.jsxs)(a.h2,{id:\\"change-default-timeout-message\\",children:[(0,e.jsx)(a.a,{className:\\"anchor\\",href:\\"#change-default-timeout-message\\",children:(0,e.jsx)(a.span,{className:\\"icon icon-link\\"})}),\\"Change Default Timeout Message\\"]}),`\\n`,(0,e.jsx)(a.p,{children:\\"These steps are to change the default timeout message \\\\u201CMaaf pesan kamu sedang diproses yaa\\\\u201D.\\"}),`\\n`,(0,e.jsxs)(a.ol,{children:[`\\n`,(0,e.jsxs)(a.li,{children:[\\"Go to the \\",(0,e.jsx)(a.strong,{children:\\"Configurations\\"}),\\" sub-menu again.\\"]}),`\\n`,(0,e.jsx)(a.li,{children:\\"Write this code about what you want to change.\\"}),`\\n`]}),`\\n`,(0,e.jsx)(a.pre,{children:(0,e.jsx)(a.code,{className:\\"code-highlight\\",children:(0,e.jsx)(a.span,{className:\\"code-line\\",children:`defaultTimeoutMessage: \'Sorry, there is an error. Please try again.\'\\n`})})}),`\\n`,(0,e.jsxs)(a.ol,{start:\\"3\\",children:[`\\n`,(0,e.jsxs)(a.li,{children:[\\"Click \\",(0,e.jsx)(a.strong,{children:\\"Save\\"}),\\" to save the configuration.\\"]}),`\\n`]}),`\\n`,(0,e.jsxs)(a.p,{children:[\\"This is the end of the guidance. You can contact \\",(0,e.jsx)(\\"a\\",{href:\\"mailto:support@kata.ai\\",children:(0,e.jsx)(a.a,{href:\\"mailto:support@kata.ai\\",children:\\"support@kata.ai\\"})}),\\" if you have any difficulties when implementing this.\\"]})]})}}var x=M;function C(t,n){throw new Error(\\"Expected \\"+(n?\\"component\\":\\"object\\")+\\" `\\"+t+\\"` to be defined: you likely forgot to import, pass, or provide it.\\")}return b(j);})();\\n;return Component;"},"_id":"kata-platform/how-to/how-to-change-error-messages-in-your-chatbot.mdx","_raw":{"sourceFilePath":"kata-platform/how-to/how-to-change-error-messages-in-your-chatbot.mdx","sourceFileName":"how-to-change-error-messages-in-your-chatbot.mdx","sourceFileDir":"kata-platform/how-to","contentType":"mdx","flattenedPath":"kata-platform/how-to/how-to-change-error-messages-in-your-chatbot"},"type":"KataPlatform","slug":["how-to","how-to-change-error-messages-in-your-chatbot"],"excerpt":"\\nIn Kata Platform, we have a default error message which will show to end-users “Maaf terjadi kesalahan pada sistem” and “Maaf pesan kamu akan diproses beberapa saat lagi yaa”, then you can check it in the Error Log feature in Kata Platform. Learn more about error messages in the Kata Platform"}');
;// CONCATENATED MODULE: ./.contentlayer/generated/KataPlatform/kata-platform__how-to__how-to-deploy-your-chatbot-using-generic-channel.mdx.json
const kata_platform_how_to_how_to_deploy_your_chatbot_using_generic_channel_mdx_namespaceObject = JSON.parse('{"id":"how-to-deploy-your-chatbot-using-generic-channel","section":"How To","title":"How to Deploy Your Chatbot Using Generic Channel","prev":"error-log","next":"how-to-improve-your-chatbot-intelligence-by-training-your-nlu","body":{"raw":"\\n## Introduction\\n\\nThis documentation will teach you how to build a chatbot app using the Kata Platform and connect it to Generic Channel. You can use Generic Channel for the channel not yet available in Kata Platform so that you can make a “wrapper.” This tutorial will deploy your chatbot to a generic channel using NestJs and connect it with a chatbot.\\n\\n<div className=\\"info\\">\\n  <img className=\\"borderless\\" src=\\"/assets/images/icon-info.svg\\" />\\n  <p>Important: There is no limitation in programming languages or frameworks if you want to create the app.</p>\\n</div>\\n\\n## Deploy Your Chatbot in Kata Platform\\n\\nIf you have already developed your chatbot, you must deploy your bot.\\n\\n### Create a Deployment\\n\\n1. Click the **Deploy** menu in the left sidebar\\n2. On the Deploy page, click on the **New Deployment** button in the top right corner. It will open up the Create Deployment menu.\\n3. Choose any deployment version you want to deploy and fill in the changelog.\\n\\n<FigureImage\\n  alt=\\"Image 1 Alt\\"\\n  src=\\"/assets/images/products/kata-platform/how-to/deploy-your-chatbot-in-generic-channel/image1.webp\\"\\n  caption={{ title: \'Figure 1\', description: \'Create a new deployment\' }}\\n  layout=\\"responsive\\"\\n  naturalHeight={1600}\\n  naturalWidth={1133}\\n/>\\n\\n4. Click **Submit** to finish the deployment.\\n\\n### Create a New Environment\\n\\nIf you already have an environment created, skip these steps.\\n\\n1. Go to the **Deployments > Environment** menu.\\n\\n<FigureImage\\n  alt=\\"Image 2 Alt\\"\\n  src=\\"/assets/images/products/kata-platform/how-to/deploy-your-chatbot-in-generic-channel/image2.webp\\"\\n  caption={{ title: \'Figure 2\', description: \'Set up the environment, then set up Generic channel\' }}\\n  layout=\\"responsive\\"\\n  naturalHeight={505}\\n  naturalWidth={1600}\\n/>\\n\\n2. Click the **Create Environment** button in any environment. You will see a drawer to create a new environment.\\n3. Choose the **development version** you want (in this tutorial, we use the 1.0.0 version)\\n4. Fill in the **environment URL**. This environment URL is used for CMS. Learn more about CMS.\\n5. Click **Create** to create the environment.\\n6. Created environment now has a **Create Channel** button.\\n\\n### Finalize Generic channel deployment\\n\\n1. Click the **Create Channel** button to start adding channels to the environment. It will open up the Channel menu within the environment.\\n2. Click the **”+ Create Channel”** button in the channel table list. It will show a menu to set up the channel.\\n3. Choose Generic in Channel Type. Fill the form to create your channel:\\n\\n<Table>\\n  <TableHead>\\n    <TableHeadCell>Field Name</TableHeadCell>\\n    <TableHeadCell>Functionality</TableHeadCell>\\n    <TableHeadCell>Limitation</TableHeadCell>\\n  </TableHead>\\n  <TableBody>\\n    <TableBodyRow>\\n      <TableBodyCell>Name</TableBodyCell>\\n      <TableBodyCell>Channel Name</TableBodyCell>\\n      <TableBodyCell>\\n        Max. 30 characters must contain only alphanumeric characters (A-Z, a-z, 0-9), `-`, and `_`.\\n      </TableBodyCell>\\n    </TableBodyRow>\\n    <TableBodyRow>\\n      <TableBodyCell>Token (optional)</TableBodyCell>\\n      <TableBodyCell>Access token from a third-party app.</TableBodyCell>\\n      <TableBodyCell>-</TableBodyCell>\\n    </TableBodyRow>\\n    <TableBodyRow>\\n      <TableBodyCell>Refresh Token (optional)</TableBodyCell>\\n      <TableBodyCell>Refresh token, if any.</TableBodyCell>\\n      <TableBodyCell>-</TableBodyCell>\\n    </TableBodyRow>\\n    <TableBodyRow>\\n      <TableBodyCell>Secret (optional)</TableBodyCell>\\n      <TableBodyCell>Secret key from a third-party app</TableBodyCell>\\n      <TableBodyCell>-</TableBodyCell>\\n    </TableBodyRow>\\n    <TableBodyRow>\\n      <TableBodyCell>URL</TableBodyCell>\\n      <TableBodyCell>\\n        Your endpoint to retrieve data from webhook, for example, `http://your_domain/message/retrieveMessage`\\n      </TableBodyCell>\\n      <TableBodyCell>Make sure your endpoint has public access to retrieve data from the webhook.</TableBodyCell>\\n    </TableBodyRow>\\n  </TableBody>\\n</Table>\\n\\n4. Click **Save** to continue. After successfully making a channel, you will get a webhook. Copy this to be used for your app.\\n\\n<FigureImage\\n  alt=\\"Image 3 Alt\\"\\n  src=\\"/assets/images/products/kata-platform/how-to/deploy-your-chatbot-in-generic-channel/image3.webp\\"\\n  caption={{ title: \'Figure 3\', description: \'Click the copy button to copy the webhook.\' }}\\n  layout=\\"responsive\\"\\n  naturalHeight={1010}\\n  naturalWidth={1999}\\n/>\\n\\n### Parameters\\n\\nTo send a message to a chatbot, you must have some parameters. See the parameter below:\\n\\n#### URL(POST REQUEST)\\n\\n```\\nhttps://kanal.kata.ai/receive_message/webhookId\\nREQUEST BODY\\n{\\n    \\"userId\\": \\"someUserId\\",\\n    \\"messages\\": [messageObject]\\n}\\n```\\n\\nHere is the detail of messageObject that you can send to the Kata Platform:\\n\\n##### Text Message\\n\\n```\\n{\\n    \\"type\\": \\"text\\",\\n    \\"content\\": \\"Halo\\"\\n}\\n```\\n\\n##### Data message (Postback Button Pressed)\\n\\n```\\n{\\n    \\"type\\": \\"data\\",\\n    \\"payload\\": {\\n        \\"key1\\": \\"value1\\",\\n        \\"key2\\": \\"value2\\",\\n    }\\n}\\n```\\n\\n##### Data message (Share Location)\\n\\n```\\n{\\n    \\"type\\": \\"data\\",\\n    \\"payload\\": {\\n        \\"type\\": \\"location\\",\\n        \\"latitude\\": \\"-6.187011099999999\\",\\n        \\"longitude\\": \\"106.84574350000003\\"\\n    }\\n}\\n```\\n\\n##### Data message (File Attachment)\\n\\n```\\n{\\n    \\"type\\": \\"data\\",\\n    \\"payload\\": {\\n        \\"type\\": \\"image\\", // you can use image, audio, video, and file\\n        \\"url\\": \\"https://somelocation.com/file\\"\\n    }\\n}\\n```\\n\\n### Reply Message to Generic Channel\\n\\nKata Platform will hit your webhook (POST Request) that registered in Generic Channel with request body below:\\n\\n#### Request Body\\n\\n```\\n{\\n    \\"messages\\": [messageObject, messageObject, messageObject],\\n    \\"userId\\": \\"someUserId\\"\\n}\\n```\\n\\n##### Text Message\\n\\n```\\n{\\n    \\"type\\": \\"text\\",\\n    \\"content\\": \\"Maaf, saya tidak mengerti kata-kata anda...\\"\\n}\\n```\\n\\n##### Button Message\\n\\n```\\n{\\n    \\"type\\": \\"data\\",\\n    \\"payload\\": {\\n        \\"type\\": \\"template\\",\\n        \\"template_type\\": \\"button\\",\\n        \\"items\\": {\\n        \\"title\\": \\"Title\\",\\n        \\"text\\": \\"Some text\\",\\n        \\"actions\\": [\\n                {\\n                    \\"type\\": \\"postback\\",\\n                    \\"label\\": \\"Label\\",\\n                    \\"payload\\": {\\n                        \\"key1\\": \\"value1\\",\\n                        \\"key2\\": \\"value2\\"\\n                    }\\n                },\\n                {\\n                    \\"type\\": \\"url\\",\\n                    \\"label\\": \\"Label\\",\\n                    \\"url\\": \\"http://google.com\\"\\n                },\\n                {\\n                    \\"type\\": \\"message\\",\\n                    \\"label\\": \\"Label\\",\\n                    \\"text\\": \\"Your message\\"\\n                }\\n            ]\\n        }\\n    }\\n}\\n```\\n\\n##### Carousel Message\\n\\n```\\n{\\n    \\"type\\": \\"data\\",\\n    \\"payload\\": {\\n        \\"type\\": \\"template\\",\\n        \\"template_type\\": \\"carousel\\",\\n        \\"items\\": [\\n            {\\n                \\"title\\": \\"Title\\",\\n                \\"text\\": \\"Some text\\",\\n                \\"thumbnailImageUrl\\": \\"https://pbs.twimg.com/profile_images/980544485108064256/jfiHHXbR_400x400.jpg\\",\\n                \\"actions\\": [\\n                    {\\n                        \\"type\\": \\"postback\\",\\n                        \\"label\\": \\"Label\\",\\n                        \\"payload\\": {\\n                        \\"key1\\": \\"value1\\",\\n                        \\"key2\\": \\"value2\\"\\n                        }\\n                    },\\n                    {\\n                        \\"type\\": \\"url\\",\\n                        \\"label\\": \\"Label\\",\\n                        \\"url\\": \\"http://google.com\\"\\n                    }\\n                ]\\n            },\\n            {\\n                \\"title\\": \\"Title\\",\\n                \\"text\\": \\"Some text\\",\\n                \\"thumbnailImageUrl\\": \\"https://pbs.twimg.com/profile_images/980544485108064256/jfiHHXbR_400x400.jpg\\",\\n                \\"actions\\": [\\n                    {\\n                        \\"type\\": \\"postback\\",\\n                        \\"label\\": \\"Label\\",\\n                        \\"payload\\": {\\n                        \\"key1\\": \\"value1\\",\\n                        \\"key2\\": \\"value2\\"\\n                        }\\n                    },\\n                    {\\n                        \\"type\\": \\"url\\",\\n                        \\"label\\": \\"Label\\",\\n                        \\"url\\": \\"http://google.com\\"\\n                    }\\n                ]\\n            }\\n        ]\\n    }\\n}\\n```\\n\\n##### Image Message\\n\\n```\\n{\\n    \\"type\\": \\"data\\",\\n    \\"payload\\": {\\n        \\"type\\": \\"template\\",\\n        \\"template_type\\": \\"image\\",\\n        \\"items\\": {\\n        \\"originalContentUrl\\": \\"https://pbs.twimg.com/profile_images/980544485108064256/jfiHHXbR_400x400.jpg\\",\\n        \\"previewImageUrl\\": \\"https://pbs.twimg.com/profile_images/980544485108064256/jfiHHXbR_400x400.jpg\\"\\n        }\\n    }\\n}\\n```\\n\\n##### Audio Message\\n\\n```\\n{\\n    \\"type\\": \\"data\\",\\n    \\"payload\\": {\\n        \\"type\\": \\"template\\",\\n        \\"template_type\\": \\"audio\\",\\n        \\"items\\": {\\n        \\"originalContentUrl\\": \\"http://www.noiseaddicts.com/samples_1w72b820/4936.mp3\\",\\n        \\"duration\\": \\"10000\\"\\n        }\\n    }\\n}\\n```\\n\\n##### Video Message\\n\\n```\\n{\\n    \\"type\\": \\"data\\",\\n    \\"payload\\": {\\n        \\"type\\": \\"template\\",\\n        \\"template_type\\": \\"video\\",\\n        \\"items\\": {\\n            \\"originalContentUrl\\": \\"http://techslides.com/demos/sample-videos/small.mp4\\",\\n            \\"previewImageUrl\\": \\"https://pbs.twimg.com/profile_images/980544485108064256/jfiHHXbR_400x400.jpg\\"\\n        }\\n    }\\n}\\n```\\n\\n##### Location Message\\n\\n```\\n{\\n    \\"type\\": \\"data\\",\\n    \\"payload\\": {\\n        \\"type\\": \\"template\\",\\n        \\"template_type\\": \\"location\\",\\n        \\"items\\": {\\n            \\"title\\": \\"Title\\",\\n            \\"address\\": \\"Address\\",\\n            \\"latitude\\": \\"-6.187011099999999\\",\\n            \\"longitude\\": \\"106.84574350000003\\",\\n            \\"locationImageUrl\\": \\"https://maps.googleapis.com/maps/api/staticmap?size=512x512&maptype=roadmap&markers=color:red%7C-6.187011099999999,106.84574350000003&zoom=18\\"\\n        }\\n    }\\n}\\n```\\n\\n### Generic Channel App\\n\\nHere is an example of a generic channel app built with NestJs framework. The source code: https://github.com/Farhanramadhana/Generic-Channel\\n\\nSource code below is the Controller /message that has 2 functions:\\n\\n1. `/message/retrieveMessage` endpoint with POST method to retrieve data from chatBot\\n2. `/message/sendMessage` endpoint with POST method to send data to ChatBot\\n\\n```\\n@Controller(\'message\')\\nexport class AppController {\\n  constructor(private readonly appService: AppService) {}\\n\\n  @Post(\'retrieveMessage\')\\n  retrieveMessage(@Req() request: Request) {\\n    console.log(request.body);\\n  }\\n\\n  @Post(\'sendMessage\')\\n  sendMessage(@Req() request: Request) {\\n    let data = request.body;\\n    return this.appService.sendMessage(data);\\n  }\\n}\\n```\\n\\nsendMessage() function will send a user message to a chatbot.\\n\\n```\\nsendMessage(data) {\\n    let options = {\\n      method: \'POST\',\\n      uri:\\n        \'<enter_your_webhook_here>\',\\n      json: true,\\n      body: {\\n        \\"userId\\": data.userId,\\n        \\"messages\\":[\\n          {\\n            \\"type\\": data.messages[0].type,\\n            \\"content\\": data.messages[0].content\\n          }\\n        ]\\n      }\\n    }\\n\\n    return rp(options)\\n      .then(function (parsedBody){\\n          data = {\\n            \\"status\\" : \\"Success\\",\\n            \\"messages\\" : parsedBody\\n          }\\n          return data\\n      })\\n      .catch(function(err) {\\n          data = {\\n            \\"status\\" : \\"error\\",\\n            \\"messages\\" : err\\n          }\\n          return data\\n      })\\n  }\\n```\\n\\n## Testing Generic Channel with Postman app\\n\\nIn this section, you can use <a href=\\"https://www.postman.com/\\" target=\\"_blank\\">Postman</a> to test sending messages to your chatbot.\\n\\n<FigureImage\\n  alt=\\"Image 4 Alt\\"\\n  src=\\"/assets/images/products/kata-platform/how-to/deploy-your-chatbot-in-generic-channel/image4.webp\\"\\n  caption={{ title: \'Figure 4\', description: \'Testing your bot\' }}\\n  layout=\\"responsive\\"\\n  naturalHeight={317}\\n  naturalWidth={1047}\\n/>\\n\\nFinally, you will get a response from the chatbot to your app.\\n\\nThis is the end of the guidance. You can contact <a href=\\"mailto:support@kata.ai\\">support@kata.ai</a> if you have any difficulties when implementing this.\\n","code":"var Component=(()=>{var b=Object.create;var t=Object.defineProperty;var f=Object.getOwnPropertyDescriptor;var k=Object.getOwnPropertyNames;var w=Object.getPrototypeOf,v=Object.prototype.hasOwnProperty;var N=a=>t(a,\\"__esModule\\",{value:!0});var C=(a,l)=>()=>(l||a((l={exports:{}}).exports,l),l.exports),T=(a,l)=>{for(var c in l)t(a,c,{get:l[c],enumerable:!0})},g=(a,l,c,n)=>{if(l&&typeof l==\\"object\\"||typeof l==\\"function\\")for(let i of k(l))!v.call(a,i)&&(c||i!==\\"default\\")&&t(a,i,{get:()=>l[i],enumerable:!(n=f(l,i))||n.enumerable});return a},x=(a,l)=>g(N(t(a!=null?b(w(a)):{},\\"default\\",!l&&a&&a.__esModule?{get:()=>a.default,enumerable:!0}:{value:a,enumerable:!0})),a),_=(a=>(l,c)=>a&&a.get(l)||(c=g(N({}),l,1),a&&a.set(l,c),c))(typeof WeakMap!=\\"undefined\\"?new WeakMap:0);var y=C((R,u)=>{u.exports=_jsx_runtime});var S={};T(S,{default:()=>j,frontmatter:()=>M});var e=x(y()),M={id:\\"how-to-deploy-your-chatbot-using-generic-channel\\",title:\\"How to Deploy Your Chatbot Using Generic Channel\\",prev:\\"error-log\\",next:\\"how-to-improve-your-chatbot-intelligence-by-training-your-nlu\\",section:\\"How To\\"};function I(a={}){let{wrapper:l}=a.components||{};return l?(0,e.jsx)(l,Object.assign({},a,{children:(0,e.jsx)(c,{})})):c();function c(){let n=Object.assign({h2:\\"h2\\",a:\\"a\\",span:\\"span\\",p:\\"p\\",h3:\\"h3\\",ol:\\"ol\\",li:\\"li\\",strong:\\"strong\\",code:\\"code\\",h4:\\"h4\\",pre:\\"pre\\",h5:\\"h5\\"},a.components),{FigureImage:i,Table:h,TableHead:p,TableHeadCell:r,TableBody:m,TableBodyRow:d,TableBodyCell:s}=n;return i||o(\\"FigureImage\\",!0),h||o(\\"Table\\",!0),m||o(\\"TableBody\\",!0),s||o(\\"TableBodyCell\\",!0),d||o(\\"TableBodyRow\\",!0),p||o(\\"TableHead\\",!0),r||o(\\"TableHeadCell\\",!0),(0,e.jsxs)(e.Fragment,{children:[(0,e.jsxs)(n.h2,{id:\\"introduction\\",children:[(0,e.jsx)(n.a,{className:\\"anchor\\",href:\\"#introduction\\",children:(0,e.jsx)(n.span,{className:\\"icon icon-link\\"})}),\\"Introduction\\"]}),`\\n`,(0,e.jsx)(n.p,{children:\\"This documentation will teach you how to build a chatbot app using the Kata Platform and connect it to Generic Channel. You can use Generic Channel for the channel not yet available in Kata Platform so that you can make a \\\\u201Cwrapper.\\\\u201D This tutorial will deploy your chatbot to a generic channel using NestJs and connect it with a chatbot.\\"}),`\\n`,(0,e.jsxs)(\\"div\\",{className:\\"info\\",children:[(0,e.jsx)(\\"img\\",{className:\\"borderless\\",src:\\"/assets/images/icon-info.svg\\"}),(0,e.jsx)(\\"p\\",{children:\\"Important: There is no limitation in programming languages or frameworks if you want to create the app.\\"})]}),`\\n`,(0,e.jsxs)(n.h2,{id:\\"deploy-your-chatbot-in-kata-platform\\",children:[(0,e.jsx)(n.a,{className:\\"anchor\\",href:\\"#deploy-your-chatbot-in-kata-platform\\",children:(0,e.jsx)(n.span,{className:\\"icon icon-link\\"})}),\\"Deploy Your Chatbot in Kata Platform\\"]}),`\\n`,(0,e.jsx)(n.p,{children:\\"If you have already developed your chatbot, you must deploy your bot.\\"}),`\\n`,(0,e.jsxs)(n.h3,{id:\\"create-a-deployment\\",children:[(0,e.jsx)(n.a,{className:\\"anchor\\",href:\\"#create-a-deployment\\",children:(0,e.jsx)(n.span,{className:\\"icon icon-link\\"})}),\\"Create a Deployment\\"]}),`\\n`,(0,e.jsxs)(n.ol,{children:[`\\n`,(0,e.jsxs)(n.li,{children:[\\"Click the \\",(0,e.jsx)(n.strong,{children:\\"Deploy\\"}),\\" menu in the left sidebar\\"]}),`\\n`,(0,e.jsxs)(n.li,{children:[\\"On the Deploy page, click on the \\",(0,e.jsx)(n.strong,{children:\\"New Deployment\\"}),\\" button in the top right corner. It will open up the Create Deployment menu.\\"]}),`\\n`,(0,e.jsx)(n.li,{children:\\"Choose any deployment version you want to deploy and fill in the changelog.\\"}),`\\n`]}),`\\n`,(0,e.jsx)(i,{alt:\\"Image 1 Alt\\",src:\\"/assets/images/products/kata-platform/how-to/deploy-your-chatbot-in-generic-channel/image1.webp\\",caption:{title:\\"Figure 1\\",description:\\"Create a new deployment\\"},layout:\\"responsive\\",naturalHeight:1600,naturalWidth:1133}),`\\n`,(0,e.jsxs)(n.ol,{start:\\"4\\",children:[`\\n`,(0,e.jsxs)(n.li,{children:[\\"Click \\",(0,e.jsx)(n.strong,{children:\\"Submit\\"}),\\" to finish the deployment.\\"]}),`\\n`]}),`\\n`,(0,e.jsxs)(n.h3,{id:\\"create-a-new-environment\\",children:[(0,e.jsx)(n.a,{className:\\"anchor\\",href:\\"#create-a-new-environment\\",children:(0,e.jsx)(n.span,{className:\\"icon icon-link\\"})}),\\"Create a New Environment\\"]}),`\\n`,(0,e.jsx)(n.p,{children:\\"If you already have an environment created, skip these steps.\\"}),`\\n`,(0,e.jsxs)(n.ol,{children:[`\\n`,(0,e.jsxs)(n.li,{children:[\\"Go to the \\",(0,e.jsx)(n.strong,{children:\\"Deployments > Environment\\"}),\\" menu.\\"]}),`\\n`]}),`\\n`,(0,e.jsx)(i,{alt:\\"Image 2 Alt\\",src:\\"/assets/images/products/kata-platform/how-to/deploy-your-chatbot-in-generic-channel/image2.webp\\",caption:{title:\\"Figure 2\\",description:\\"Set up the environment, then set up Generic channel\\"},layout:\\"responsive\\",naturalHeight:505,naturalWidth:1600}),`\\n`,(0,e.jsxs)(n.ol,{start:\\"2\\",children:[`\\n`,(0,e.jsxs)(n.li,{children:[\\"Click the \\",(0,e.jsx)(n.strong,{children:\\"Create Environment\\"}),\\" button in any environment. You will see a drawer to create a new environment.\\"]}),`\\n`,(0,e.jsxs)(n.li,{children:[\\"Choose the \\",(0,e.jsx)(n.strong,{children:\\"development version\\"}),\\" you want (in this tutorial, we use the 1.0.0 version)\\"]}),`\\n`,(0,e.jsxs)(n.li,{children:[\\"Fill in the \\",(0,e.jsx)(n.strong,{children:\\"environment URL\\"}),\\". This environment URL is used for CMS. Learn more about CMS.\\"]}),`\\n`,(0,e.jsxs)(n.li,{children:[\\"Click \\",(0,e.jsx)(n.strong,{children:\\"Create\\"}),\\" to create the environment.\\"]}),`\\n`,(0,e.jsxs)(n.li,{children:[\\"Created environment now has a \\",(0,e.jsx)(n.strong,{children:\\"Create Channel\\"}),\\" button.\\"]}),`\\n`]}),`\\n`,(0,e.jsxs)(n.h3,{id:\\"finalize-generic-channel-deployment\\",children:[(0,e.jsx)(n.a,{className:\\"anchor\\",href:\\"#finalize-generic-channel-deployment\\",children:(0,e.jsx)(n.span,{className:\\"icon icon-link\\"})}),\\"Finalize Generic channel deployment\\"]}),`\\n`,(0,e.jsxs)(n.ol,{children:[`\\n`,(0,e.jsxs)(n.li,{children:[\\"Click the \\",(0,e.jsx)(n.strong,{children:\\"Create Channel\\"}),\\" button to start adding channels to the environment. It will open up the Channel menu within the environment.\\"]}),`\\n`,(0,e.jsxs)(n.li,{children:[\\"Click the \\",(0,e.jsx)(n.strong,{children:\\"\\\\u201D+ Create Channel\\\\u201D\\"}),\\" button in the channel table list. It will show a menu to set up the channel.\\"]}),`\\n`,(0,e.jsx)(n.li,{children:\\"Choose Generic in Channel Type. Fill the form to create your channel:\\"}),`\\n`]}),`\\n`,(0,e.jsxs)(h,{children:[(0,e.jsxs)(p,{children:[(0,e.jsx)(r,{children:\\"Field Name\\"}),`\\n`,(0,e.jsx)(r,{children:\\"Functionality\\"}),`\\n`,(0,e.jsx)(r,{children:\\"Limitation\\"})]}),(0,e.jsxs)(m,{children:[(0,e.jsxs)(d,{children:[(0,e.jsx)(s,{children:\\"Name\\"}),`\\n`,(0,e.jsx)(s,{children:\\"Channel Name\\"}),(0,e.jsx)(s,{children:(0,e.jsxs)(n.p,{children:[\\"Max. 30 characters must contain only alphanumeric characters (A-Z, a-z, 0-9), \\",(0,e.jsx)(n.code,{children:\\"-\\"}),\\", and \\",(0,e.jsx)(n.code,{children:\\"_\\"}),\\".\\"]})})]}),(0,e.jsxs)(d,{children:[(0,e.jsx)(s,{children:\\"Token (optional)\\"}),`\\n`,(0,e.jsx)(s,{children:\\"Access token from a third-party app.\\"}),`\\n`,(0,e.jsx)(s,{children:\\"-\\"})]}),(0,e.jsxs)(d,{children:[(0,e.jsx)(s,{children:\\"Refresh Token (optional)\\"}),`\\n`,(0,e.jsx)(s,{children:\\"Refresh token, if any.\\"}),`\\n`,(0,e.jsx)(s,{children:\\"-\\"})]}),(0,e.jsxs)(d,{children:[(0,e.jsx)(s,{children:\\"Secret (optional)\\"}),`\\n`,(0,e.jsx)(s,{children:\\"Secret key from a third-party app\\"}),`\\n`,(0,e.jsx)(s,{children:\\"-\\"})]}),(0,e.jsxs)(d,{children:[(0,e.jsx)(s,{children:\\"URL\\"}),(0,e.jsx)(s,{children:(0,e.jsxs)(n.p,{children:[\\"Your endpoint to retrieve data from webhook, for example, \\",(0,e.jsx)(n.code,{children:\\"http://your_domain/message/retrieveMessage\\"})]})}),(0,e.jsx)(s,{children:\\"Make sure your endpoint has public access to retrieve data from the webhook.\\"})]})]})]}),`\\n`,(0,e.jsxs)(n.ol,{start:\\"4\\",children:[`\\n`,(0,e.jsxs)(n.li,{children:[\\"Click \\",(0,e.jsx)(n.strong,{children:\\"Save\\"}),\\" to continue. After successfully making a channel, you will get a webhook. Copy this to be used for your app.\\"]}),`\\n`]}),`\\n`,(0,e.jsx)(i,{alt:\\"Image 3 Alt\\",src:\\"/assets/images/products/kata-platform/how-to/deploy-your-chatbot-in-generic-channel/image3.webp\\",caption:{title:\\"Figure 3\\",description:\\"Click the copy button to copy the webhook.\\"},layout:\\"responsive\\",naturalHeight:1010,naturalWidth:1999}),`\\n`,(0,e.jsxs)(n.h3,{id:\\"parameters\\",children:[(0,e.jsx)(n.a,{className:\\"anchor\\",href:\\"#parameters\\",children:(0,e.jsx)(n.span,{className:\\"icon icon-link\\"})}),\\"Parameters\\"]}),`\\n`,(0,e.jsx)(n.p,{children:\\"To send a message to a chatbot, you must have some parameters. See the parameter below:\\"}),`\\n`,(0,e.jsxs)(n.h4,{id:\\"urlpost-request\\",children:[(0,e.jsx)(n.a,{className:\\"anchor\\",href:\\"#urlpost-request\\",children:(0,e.jsx)(n.span,{className:\\"icon icon-link\\"})}),\\"URL(POST REQUEST)\\"]}),`\\n`,(0,e.jsx)(n.pre,{children:(0,e.jsxs)(n.code,{className:\\"code-highlight\\",children:[(0,e.jsx)(n.span,{className:\\"code-line\\",children:`https://kanal.kata.ai/receive_message/webhookId\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`REQUEST BODY\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`{\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`    \\"userId\\": \\"someUserId\\",\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`    \\"messages\\": [messageObject]\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`}\\n`})]})}),`\\n`,(0,e.jsx)(n.p,{children:\\"Here is the detail of messageObject that you can send to the Kata Platform:\\"}),`\\n`,(0,e.jsxs)(n.h5,{id:\\"text-message\\",children:[(0,e.jsx)(n.a,{className:\\"anchor\\",href:\\"#text-message\\",children:(0,e.jsx)(n.span,{className:\\"icon icon-link\\"})}),\\"Text Message\\"]}),`\\n`,(0,e.jsx)(n.pre,{children:(0,e.jsxs)(n.code,{className:\\"code-highlight\\",children:[(0,e.jsx)(n.span,{className:\\"code-line\\",children:`{\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`    \\"type\\": \\"text\\",\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`    \\"content\\": \\"Halo\\"\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`}\\n`})]})}),`\\n`,(0,e.jsxs)(n.h5,{id:\\"data-message-postback-button-pressed\\",children:[(0,e.jsx)(n.a,{className:\\"anchor\\",href:\\"#data-message-postback-button-pressed\\",children:(0,e.jsx)(n.span,{className:\\"icon icon-link\\"})}),\\"Data message (Postback Button Pressed)\\"]}),`\\n`,(0,e.jsx)(n.pre,{children:(0,e.jsxs)(n.code,{className:\\"code-highlight\\",children:[(0,e.jsx)(n.span,{className:\\"code-line\\",children:`{\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`    \\"type\\": \\"data\\",\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`    \\"payload\\": {\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`        \\"key1\\": \\"value1\\",\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`        \\"key2\\": \\"value2\\",\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`    }\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`}\\n`})]})}),`\\n`,(0,e.jsxs)(n.h5,{id:\\"data-message-share-location\\",children:[(0,e.jsx)(n.a,{className:\\"anchor\\",href:\\"#data-message-share-location\\",children:(0,e.jsx)(n.span,{className:\\"icon icon-link\\"})}),\\"Data message (Share Location)\\"]}),`\\n`,(0,e.jsx)(n.pre,{children:(0,e.jsxs)(n.code,{className:\\"code-highlight\\",children:[(0,e.jsx)(n.span,{className:\\"code-line\\",children:`{\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`    \\"type\\": \\"data\\",\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`    \\"payload\\": {\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`        \\"type\\": \\"location\\",\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`        \\"latitude\\": \\"-6.187011099999999\\",\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`        \\"longitude\\": \\"106.84574350000003\\"\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`    }\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`}\\n`})]})}),`\\n`,(0,e.jsxs)(n.h5,{id:\\"data-message-file-attachment\\",children:[(0,e.jsx)(n.a,{className:\\"anchor\\",href:\\"#data-message-file-attachment\\",children:(0,e.jsx)(n.span,{className:\\"icon icon-link\\"})}),\\"Data message (File Attachment)\\"]}),`\\n`,(0,e.jsx)(n.pre,{children:(0,e.jsxs)(n.code,{className:\\"code-highlight\\",children:[(0,e.jsx)(n.span,{className:\\"code-line\\",children:`{\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`    \\"type\\": \\"data\\",\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`    \\"payload\\": {\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`        \\"type\\": \\"image\\", // you can use image, audio, video, and file\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`        \\"url\\": \\"https://somelocation.com/file\\"\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`    }\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`}\\n`})]})}),`\\n`,(0,e.jsxs)(n.h3,{id:\\"reply-message-to-generic-channel\\",children:[(0,e.jsx)(n.a,{className:\\"anchor\\",href:\\"#reply-message-to-generic-channel\\",children:(0,e.jsx)(n.span,{className:\\"icon icon-link\\"})}),\\"Reply Message to Generic Channel\\"]}),`\\n`,(0,e.jsx)(n.p,{children:\\"Kata Platform will hit your webhook (POST Request) that registered in Generic Channel with request body below:\\"}),`\\n`,(0,e.jsxs)(n.h4,{id:\\"request-body\\",children:[(0,e.jsx)(n.a,{className:\\"anchor\\",href:\\"#request-body\\",children:(0,e.jsx)(n.span,{className:\\"icon icon-link\\"})}),\\"Request Body\\"]}),`\\n`,(0,e.jsx)(n.pre,{children:(0,e.jsxs)(n.code,{className:\\"code-highlight\\",children:[(0,e.jsx)(n.span,{className:\\"code-line\\",children:`{\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`    \\"messages\\": [messageObject, messageObject, messageObject],\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`    \\"userId\\": \\"someUserId\\"\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`}\\n`})]})}),`\\n`,(0,e.jsxs)(n.h5,{id:\\"text-message-1\\",children:[(0,e.jsx)(n.a,{className:\\"anchor\\",href:\\"#text-message-1\\",children:(0,e.jsx)(n.span,{className:\\"icon icon-link\\"})}),\\"Text Message\\"]}),`\\n`,(0,e.jsx)(n.pre,{children:(0,e.jsxs)(n.code,{className:\\"code-highlight\\",children:[(0,e.jsx)(n.span,{className:\\"code-line\\",children:`{\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`    \\"type\\": \\"text\\",\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`    \\"content\\": \\"Maaf, saya tidak mengerti kata-kata anda...\\"\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`}\\n`})]})}),`\\n`,(0,e.jsxs)(n.h5,{id:\\"button-message\\",children:[(0,e.jsx)(n.a,{className:\\"anchor\\",href:\\"#button-message\\",children:(0,e.jsx)(n.span,{className:\\"icon icon-link\\"})}),\\"Button Message\\"]}),`\\n`,(0,e.jsx)(n.pre,{children:(0,e.jsxs)(n.code,{className:\\"code-highlight\\",children:[(0,e.jsx)(n.span,{className:\\"code-line\\",children:`{\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`    \\"type\\": \\"data\\",\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`    \\"payload\\": {\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`        \\"type\\": \\"template\\",\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`        \\"template_type\\": \\"button\\",\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`        \\"items\\": {\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`        \\"title\\": \\"Title\\",\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`        \\"text\\": \\"Some text\\",\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`        \\"actions\\": [\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`                {\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`                    \\"type\\": \\"postback\\",\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`                    \\"label\\": \\"Label\\",\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`                    \\"payload\\": {\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`                        \\"key1\\": \\"value1\\",\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`                        \\"key2\\": \\"value2\\"\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`                    }\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`                },\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`                {\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`                    \\"type\\": \\"url\\",\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`                    \\"label\\": \\"Label\\",\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`                    \\"url\\": \\"http://google.com\\"\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`                },\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`                {\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`                    \\"type\\": \\"message\\",\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`                    \\"label\\": \\"Label\\",\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`                    \\"text\\": \\"Your message\\"\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`                }\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`            ]\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`        }\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`    }\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`}\\n`})]})}),`\\n`,(0,e.jsxs)(n.h5,{id:\\"carousel-message\\",children:[(0,e.jsx)(n.a,{className:\\"anchor\\",href:\\"#carousel-message\\",children:(0,e.jsx)(n.span,{className:\\"icon icon-link\\"})}),\\"Carousel Message\\"]}),`\\n`,(0,e.jsx)(n.pre,{children:(0,e.jsxs)(n.code,{className:\\"code-highlight\\",children:[(0,e.jsx)(n.span,{className:\\"code-line\\",children:`{\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`    \\"type\\": \\"data\\",\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`    \\"payload\\": {\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`        \\"type\\": \\"template\\",\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`        \\"template_type\\": \\"carousel\\",\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`        \\"items\\": [\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`            {\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`                \\"title\\": \\"Title\\",\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`                \\"text\\": \\"Some text\\",\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`                \\"thumbnailImageUrl\\": \\"https://pbs.twimg.com/profile_images/980544485108064256/jfiHHXbR_400x400.jpg\\",\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`                \\"actions\\": [\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`                    {\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`                        \\"type\\": \\"postback\\",\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`                        \\"label\\": \\"Label\\",\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`                        \\"payload\\": {\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`                        \\"key1\\": \\"value1\\",\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`                        \\"key2\\": \\"value2\\"\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`                        }\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`                    },\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`                    {\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`                        \\"type\\": \\"url\\",\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`                        \\"label\\": \\"Label\\",\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`                        \\"url\\": \\"http://google.com\\"\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`                    }\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`                ]\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`            },\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`            {\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`                \\"title\\": \\"Title\\",\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`                \\"text\\": \\"Some text\\",\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`                \\"thumbnailImageUrl\\": \\"https://pbs.twimg.com/profile_images/980544485108064256/jfiHHXbR_400x400.jpg\\",\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`                \\"actions\\": [\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`                    {\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`                        \\"type\\": \\"postback\\",\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`                        \\"label\\": \\"Label\\",\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`                        \\"payload\\": {\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`                        \\"key1\\": \\"value1\\",\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`                        \\"key2\\": \\"value2\\"\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`                        }\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`                    },\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`                    {\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`                        \\"type\\": \\"url\\",\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`                        \\"label\\": \\"Label\\",\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`                        \\"url\\": \\"http://google.com\\"\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`                    }\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`                ]\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`            }\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`        ]\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`    }\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`}\\n`})]})}),`\\n`,(0,e.jsxs)(n.h5,{id:\\"image-message\\",children:[(0,e.jsx)(n.a,{className:\\"anchor\\",href:\\"#image-message\\",children:(0,e.jsx)(n.span,{className:\\"icon icon-link\\"})}),\\"Image Message\\"]}),`\\n`,(0,e.jsx)(n.pre,{children:(0,e.jsxs)(n.code,{className:\\"code-highlight\\",children:[(0,e.jsx)(n.span,{className:\\"code-line\\",children:`{\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`    \\"type\\": \\"data\\",\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`    \\"payload\\": {\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`        \\"type\\": \\"template\\",\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`        \\"template_type\\": \\"image\\",\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`        \\"items\\": {\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`        \\"originalContentUrl\\": \\"https://pbs.twimg.com/profile_images/980544485108064256/jfiHHXbR_400x400.jpg\\",\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`        \\"previewImageUrl\\": \\"https://pbs.twimg.com/profile_images/980544485108064256/jfiHHXbR_400x400.jpg\\"\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`        }\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`    }\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`}\\n`})]})}),`\\n`,(0,e.jsxs)(n.h5,{id:\\"audio-message\\",children:[(0,e.jsx)(n.a,{className:\\"anchor\\",href:\\"#audio-message\\",children:(0,e.jsx)(n.span,{className:\\"icon icon-link\\"})}),\\"Audio Message\\"]}),`\\n`,(0,e.jsx)(n.pre,{children:(0,e.jsxs)(n.code,{className:\\"code-highlight\\",children:[(0,e.jsx)(n.span,{className:\\"code-line\\",children:`{\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`    \\"type\\": \\"data\\",\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`    \\"payload\\": {\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`        \\"type\\": \\"template\\",\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`        \\"template_type\\": \\"audio\\",\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`        \\"items\\": {\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`        \\"originalContentUrl\\": \\"http://www.noiseaddicts.com/samples_1w72b820/4936.mp3\\",\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`        \\"duration\\": \\"10000\\"\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`        }\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`    }\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`}\\n`})]})}),`\\n`,(0,e.jsxs)(n.h5,{id:\\"video-message\\",children:[(0,e.jsx)(n.a,{className:\\"anchor\\",href:\\"#video-message\\",children:(0,e.jsx)(n.span,{className:\\"icon icon-link\\"})}),\\"Video Message\\"]}),`\\n`,(0,e.jsx)(n.pre,{children:(0,e.jsxs)(n.code,{className:\\"code-highlight\\",children:[(0,e.jsx)(n.span,{className:\\"code-line\\",children:`{\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`    \\"type\\": \\"data\\",\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`    \\"payload\\": {\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`        \\"type\\": \\"template\\",\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`        \\"template_type\\": \\"video\\",\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`        \\"items\\": {\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`            \\"originalContentUrl\\": \\"http://techslides.com/demos/sample-videos/small.mp4\\",\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`            \\"previewImageUrl\\": \\"https://pbs.twimg.com/profile_images/980544485108064256/jfiHHXbR_400x400.jpg\\"\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`        }\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`    }\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`}\\n`})]})}),`\\n`,(0,e.jsxs)(n.h5,{id:\\"location-message\\",children:[(0,e.jsx)(n.a,{className:\\"anchor\\",href:\\"#location-message\\",children:(0,e.jsx)(n.span,{className:\\"icon icon-link\\"})}),\\"Location Message\\"]}),`\\n`,(0,e.jsx)(n.pre,{children:(0,e.jsxs)(n.code,{className:\\"code-highlight\\",children:[(0,e.jsx)(n.span,{className:\\"code-line\\",children:`{\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`    \\"type\\": \\"data\\",\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`    \\"payload\\": {\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`        \\"type\\": \\"template\\",\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`        \\"template_type\\": \\"location\\",\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`        \\"items\\": {\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`            \\"title\\": \\"Title\\",\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`            \\"address\\": \\"Address\\",\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`            \\"latitude\\": \\"-6.187011099999999\\",\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`            \\"longitude\\": \\"106.84574350000003\\",\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`            \\"locationImageUrl\\": \\"https://maps.googleapis.com/maps/api/staticmap?size=512x512&maptype=roadmap&markers=color:red%7C-6.187011099999999,106.84574350000003&zoom=18\\"\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`        }\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`    }\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`}\\n`})]})}),`\\n`,(0,e.jsxs)(n.h3,{id:\\"generic-channel-app\\",children:[(0,e.jsx)(n.a,{className:\\"anchor\\",href:\\"#generic-channel-app\\",children:(0,e.jsx)(n.span,{className:\\"icon icon-link\\"})}),\\"Generic Channel App\\"]}),`\\n`,(0,e.jsxs)(n.p,{children:[\\"Here is an example of a generic channel app built with NestJs framework. The source code: \\",(0,e.jsx)(n.a,{href:\\"https://github.com/Farhanramadhana/Generic-Channel\\",children:\\"https://github.com/Farhanramadhana/Generic-Channel\\"})]}),`\\n`,(0,e.jsx)(n.p,{children:\\"Source code below is the Controller /message that has 2 functions:\\"}),`\\n`,(0,e.jsxs)(n.ol,{children:[`\\n`,(0,e.jsxs)(n.li,{children:[(0,e.jsx)(n.code,{children:\\"/message/retrieveMessage\\"}),\\" endpoint with POST method to retrieve data from chatBot\\"]}),`\\n`,(0,e.jsxs)(n.li,{children:[(0,e.jsx)(n.code,{children:\\"/message/sendMessage\\"}),\\" endpoint with POST method to send data to ChatBot\\"]}),`\\n`]}),`\\n`,(0,e.jsx)(n.pre,{children:(0,e.jsxs)(n.code,{className:\\"code-highlight\\",children:[(0,e.jsx)(n.span,{className:\\"code-line\\",children:`@Controller(\'message\')\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`export class AppController {\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`  constructor(private readonly appService: AppService) {}\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`  @Post(\'retrieveMessage\')\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`  retrieveMessage(@Req() request: Request) {\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`    console.log(request.body);\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`  }\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`  @Post(\'sendMessage\')\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`  sendMessage(@Req() request: Request) {\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`    let data = request.body;\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`    return this.appService.sendMessage(data);\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`  }\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`}\\n`})]})}),`\\n`,(0,e.jsx)(n.p,{children:\\"sendMessage() function will send a user message to a chatbot.\\"}),`\\n`,(0,e.jsx)(n.pre,{children:(0,e.jsxs)(n.code,{className:\\"code-highlight\\",children:[(0,e.jsx)(n.span,{className:\\"code-line\\",children:`sendMessage(data) {\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`    let options = {\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`      method: \'POST\',\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`      uri:\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`        \'<enter_your_webhook_here>\',\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`      json: true,\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`      body: {\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`        \\"userId\\": data.userId,\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`        \\"messages\\":[\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`          {\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`            \\"type\\": data.messages[0].type,\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`            \\"content\\": data.messages[0].content\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`          }\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`        ]\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`      }\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`    }\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`    return rp(options)\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`      .then(function (parsedBody){\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`          data = {\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`            \\"status\\" : \\"Success\\",\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`            \\"messages\\" : parsedBody\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`          }\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`          return data\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`      })\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`      .catch(function(err) {\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`          data = {\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`            \\"status\\" : \\"error\\",\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`            \\"messages\\" : err\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`          }\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`          return data\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`      })\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`  }\\n`})]})}),`\\n`,(0,e.jsxs)(n.h2,{id:\\"testing-generic-channel-with-postman-app\\",children:[(0,e.jsx)(n.a,{className:\\"anchor\\",href:\\"#testing-generic-channel-with-postman-app\\",children:(0,e.jsx)(n.span,{className:\\"icon icon-link\\"})}),\\"Testing Generic Channel with Postman app\\"]}),`\\n`,(0,e.jsxs)(n.p,{children:[\\"In this section, you can use \\",(0,e.jsx)(\\"a\\",{href:\\"https://www.postman.com/\\",target:\\"_blank\\",children:\\"Postman\\"}),\\" to test sending messages to your chatbot.\\"]}),`\\n`,(0,e.jsx)(i,{alt:\\"Image 4 Alt\\",src:\\"/assets/images/products/kata-platform/how-to/deploy-your-chatbot-in-generic-channel/image4.webp\\",caption:{title:\\"Figure 4\\",description:\\"Testing your bot\\"},layout:\\"responsive\\",naturalHeight:317,naturalWidth:1047}),`\\n`,(0,e.jsx)(n.p,{children:\\"Finally, you will get a response from the chatbot to your app.\\"}),`\\n`,(0,e.jsxs)(n.p,{children:[\\"This is the end of the guidance. You can contact \\",(0,e.jsx)(\\"a\\",{href:\\"mailto:support@kata.ai\\",children:(0,e.jsx)(n.a,{href:\\"mailto:support@kata.ai\\",children:\\"support@kata.ai\\"})}),\\" if you have any difficulties when implementing this.\\"]})]})}}var j=I;function o(a,l){throw new Error(\\"Expected \\"+(l?\\"component\\":\\"object\\")+\\" `\\"+a+\\"` to be defined: you likely forgot to import, pass, or provide it.\\")}return _(S);})();\\n;return Component;"},"_id":"kata-platform/how-to/how-to-deploy-your-chatbot-using-generic-channel.mdx","_raw":{"sourceFilePath":"kata-platform/how-to/how-to-deploy-your-chatbot-using-generic-channel.mdx","sourceFileName":"how-to-deploy-your-chatbot-using-generic-channel.mdx","sourceFileDir":"kata-platform/how-to","contentType":"mdx","flattenedPath":"kata-platform/how-to/how-to-deploy-your-chatbot-using-generic-channel"},"type":"KataPlatform","slug":["how-to","how-to-deploy-your-chatbot-using-generic-channel"],"excerpt":"\\n## Introduction\\n\\nThis documentation will teach you how to build a chatbot app using the Kata Platform and connect it to Generic Channel. You can use Generic Channel for the channel not yet available in Kata Platform so that you can make a “wrapper"}');
;// CONCATENATED MODULE: ./.contentlayer/generated/KataPlatform/kata-platform__how-to__how-to-improve-your-chatbot-intelligence-by-training-your-nlu.mdx.json
const kata_platform_how_to_how_to_improve_your_chatbot_intelligence_by_training_your_nlu_mdx_namespaceObject = JSON.parse('{"id":"how-to-improve-your-chatbot-intelligence-by-training-your-nlu","section":"How To","title":"How to Improve Your Chatbot Intelligence by Training Your NLU","prev":"how-to-deploy-your-chatbot-using-generic-channel","next":"how-to-use-nlu-threshold-to-enhance-customer-experience","body":{"raw":"\\n## Introduction\\n\\nNatural Language Understanding (NLU) is a computer\'s ability to transform a text message into a structured object. In the Kata Platform, NLU is a place for users to design and build their NLU capability for their conversational AI product. ‘\\n\\n## How to Use\\n\\nThis guide will teach you how to integrate NLU into your chatbot to recognize specific end-users input. Before you start, you will need to create at least one entity.\\n\\n1. To create an entity, go to the **NLU** menu. Then, click the **Entity** menu.\\n\\n<FigureImage\\n  alt=\\"Image 1 Alt\\"\\n  src=\\"/assets/images/products/kata-platform/how-to/how-to-improve-your-chatbot-intelligence-by-training-your-nlu/image1.webp\\"\\n  caption={{ title: \'Figure 1\', description: \'NLU and entity menu.\' }}\\n  layout=\\"responsive\\"\\n  naturalHeight={556}\\n  naturalWidth={1600}\\n/>\\n\\n2. Click **Create Entity** to set up a new entity. It will show a form on the right screen. Fill in the entity name.\\n3. **Inherit** lets you copy an entity from any public NLU on the Kata Platform. To inherit an NLU, type the NLU ID with `[username]:[project name]`. Inherited entities will sync to the original entity, including the labels and training data. For example, in the [getting started chatbot](/kata-platform/documentation-content/start-your-first-chatbot) section, your NLU ID format is `muhfadhiilkata:test_simple_bot`.\\n4. **Type** is intended for the entity type. We have 3 entity types in the Kata Platform:\\n   - **Trait** is a text classifier to classify a sentence into a particular labels. This type is suitable for making your bot recognize nuance in a sentence.\\n   - **Dictionary** is a word tagger which has keys and labels. It will form an array.\\n   - The **Phrase** is a word tagger.\\n\\n<FigureImage\\n  alt=\\"Image 2 Alt\\"\\n  src=\\"/assets/images/products/kata-platform/how-to/how-to-improve-your-chatbot-intelligence-by-training-your-nlu/image2.webp\\"\\n  caption={{ title: \'Figure 2\', description: \'Entity type “dictionary”\' }}\\n  layout=\\"responsive\\"\\n  naturalHeight={1400}\\n  naturalWidth={1600}\\n/>\\n\\n5. The **Profile** is an AI model that is available to use by users. Depending on data training and your dataset, you can choose any profiles you want.\\n   - The “default” profile is suitable for many data samples so that this profile is available in all entity types.\\n   - “intent” profile is suitable for entity type “trait.”\\n   - “default_v2” profile is our newest profile and is suitable if you have a large amount of data.\\n6. **Root** enables you to create an entity using other users\' NLU to copy the training data and add new labels. Therefore, it is suitable if you have a trained NLU and want to add more labels in the NLU. You can type an NLU ID which consists of username and project with format `[username]:[project name]`.\\n7. **Labels** are a feature to determine classes or categories from an entity. To add a new label, you can type and press “enter” on your keyboard.\\n   If you choose entity type “dictionary,” it will show a dropdown name **Belongs to**. This feature enables you to define relationships () between entities. Belongs to feature can only be used for entities in the same NLU with entity type “phrase” or “dictionary.” It is suitable if your data sample is like this:\\n\\n```\\nSaya mau beli es kopi susu 2 dan less sugar\\n```\\n\\n`Es kopi susu` is the main menu. `2 and less sugar` are modifiers to detailing the order. So in Belongs To concept, you will tag 2 and choose belongsTo\\n\\n## Training your NLU\\n\\nAfter creating an entity and labels, you have to train them.\\n\\n1. Go to **NLU > Training** menu.\\n\\n<FigureImage\\n  alt=\\"Image 3 Alt\\"\\n  src=\\"/assets/images/products/kata-platform/how-to/how-to-improve-your-chatbot-intelligence-by-training-your-nlu/image3.webp\\"\\n  caption={{ title: \'Figure 3\', description: \'Training model position.\' }}\\n  layout=\\"responsive\\"\\n  naturalHeight={551}\\n  naturalWidth={1600}\\n/>\\n\\n2. Then, you will see 2 choices to train your entities:\\n   - **Single training** is a way to train sentences (training data) one by one.\\n   - **Bulk training** is a way to train up to 200 sentences (training data) by uploading a .txt file with annotations inside the file.\\n\\nThese are steps to train your NLU using single training:\\n\\n1. For example, to train 1 sentence for your NLU, type a sentence, then press “enter” on the keyboard to review the training. For example `Saya ingin membeli kopi susu`.\\n\\n<FigureImage\\n  alt=\\"Image 4 Alt\\"\\n  src=\\"/assets/images/products/kata-platform/how-to/how-to-improve-your-chatbot-intelligence-by-training-your-nlu/image4.webp\\"\\n  caption={{ title: \'Figure 4\', description: \'Training box.\' }}\\n  layout=\\"responsive\\"\\n  naturalHeight={470}\\n  naturalWidth={1600}\\n/>\\n\\n2. Next, you can preview the sentence first and tag your entities. You can block or double click in a word to tag a word. Then, it will show a dropdown to choose entities and labels in format `[entity name]:[label name]`. You can select a dropdown at the bottom of the entities list for tagging a sentence.\\n\\n<FigureImage\\n  alt=\\"Image 5 Alt\\"\\n  src=\\"/assets/images/products/kata-platform/how-to/how-to-improve-your-chatbot-intelligence-by-training-your-nlu/image5.webp\\"\\n  caption={{ title: \'Figure 5\', description: \'Tag a word using an entity type dictionary or phrase.\' }}\\n  layout=\\"responsive\\"\\n  naturalHeight={527}\\n  naturalWidth={1600}\\n/>\\n\\n<FigureImage\\n  alt=\\"Image 6 Alt\\"\\n  src=\\"/assets/images/products/kata-platform/how-to/how-to-improve-your-chatbot-intelligence-by-training-your-nlu/image6.webp\\"\\n  caption={{ title: \'Figure 6\', description: \'Tag a sentence using entity type trait.\' }}\\n  layout=\\"responsive\\"\\n  naturalHeight={695}\\n  naturalWidth={1600}\\n/>\\n\\n3. Click the **Train** button to submit training data.\\n\\nThese are steps to train your NLU using bulk training:\\n\\n1. First, open your text and source code editor (Notepad, <a href=\\"https://notepad-plus-plus.org/downloads/\\" target=\\"_blank\\">notepad++</a>, <a href=\\"https://www.sublimetext.com/\\" target=\\"_blank\\">sublime</a>)\\n2. Create a new file.\\n3. You will create training data using a simple syntax. ”#’ for entity type “trait” and ”@” for entity type “phrase.”\\n   - Example for entity type trait: `Saya mau pesan pizza #intent:order`. It means the sentence is classified into an entity named “intent” with the label “order.”\\n   - Example for entity type phrase and dictionary: `Saya mau pesan tiket ke (@destination Malang) atas nama (@ner:person Budi) #intent:order`. It means the word “Malang” is tagged for entity name “destination” and “Budi” is tagged for entity name “ner” with label “person.”\\n4. Save the following training data into `training-data-example.txt`\\n5. Go to **NLU > Training** in Platform. Then, click on the **Bulk Training** button.\\n6. Click on the **Browse** button to open the file explorer/finder or drag and drop the file into the browse file dialog.\\n7. Wait for the upload process.\\n8. After the upload is complete, you can review the training data file in the Platform.\\n\\n<FigureImage\\n  alt=\\"Image 7 Alt\\"\\n  src=\\"/assets/images/products/kata-platform/how-to/how-to-improve-your-chatbot-intelligence-by-training-your-nlu/image7.webp\\"\\n  caption={{ title: \'Figure 7\', description: \'Review training data\' }}\\n  layout=\\"responsive\\"\\n  naturalHeight={641}\\n  naturalWidth={1140}\\n/>\\n\\n9. Click on the **Train** button to train the data.\\n10. You will see a customer satisfaction survey after using the feature. Fill in the survey, then click **X** to close the dialog.\\n11. You have successfully trained your NLU with the uploaded data.\\n\\n<FigureImage\\n  alt=\\"Image 8 Alt\\"\\n  src=\\"/assets/images/products/kata-platform/how-to/how-to-improve-your-chatbot-intelligence-by-training-your-nlu/image8.webp\\"\\n  caption={{ title: \'Figure 8\', description: \'Successfully trained.\' }}\\n  layout=\\"responsive\\"\\n  naturalHeight={719}\\n  naturalWidth={1140}\\n/>\\n\\nEvery training will make your NLU smarter, measured by a confidence score. The confidence score is how the NLU recognizes end-users input between 0 and 1.\\n\\n## Test Your NLU\\n\\nYou can test if your NLU is good enough or wrong in the Kata Platform by using the Test NLU feature. These are the steps:\\n\\n1. Click the **Test NLU** button on the right bottom of your screen.\\n\\n<FigureImage\\n  alt=\\"Image 9 Alt\\"\\n  src=\\"/assets/images/products/kata-platform/how-to/how-to-improve-your-chatbot-intelligence-by-training-your-nlu/image9.webp\\"\\n  caption={{ title: \'Figure 9\', description: \'Test NLU location.\' }}\\n  layout=\\"responsive\\"\\n  naturalHeight={688}\\n  naturalWidth={1600}\\n/>\\n\\n2. Then, it will show a chat window.\\n3. Type in the chatbox a sentence to test your NLU. The best practice is to prepare data training and data testing separately, but they must have similarities.\\n\\nWhen you enter a sentence or data testing, a result is shown. For example, here is how to read the result from the test NLU example:\\n\\n```\\n{\\n  \\"id\\": \\"abf78\\",\\n  \\"input\\": \\"halo\\",\\n  \\"output\\": {\\n    \\"kata\\": [],\\n    \\"product\\": [],\\n    \\"Intent\\": [\\n      {\\n        \\"type\\": \\"trait\\",\\n        \\"value\\": \\"bayar\\",\\n        \\"start\\": 0,\\n        \\"end\\": 4,\\n        \\"score\\": 0.8116588592529297,\\n        \\"label\\": \\"bayar\\"\\n      }\\n    ]\\n  }\\n}\\n```\\n\\nLet’s break them down!\\n\\n1. It is a sentence or word that you typed.\\n\\n```\\n\\"input\\": \\"halo\\",\\n```\\n\\n2. Two entities are not detected by your input “halo” so that the results are null.\\n\\n```\\n\\"output\\": {\\n    \\"kata\\": [],\\n    \\"product\\": [],\\n}\\n```\\n\\n3. There is a detected entity called “Intent” and the entity type is “trait.” Then, “start” and “end” mean character count from “hello”. Next, score means a confidence score from the NL model to predict the sentence or word from end-users. Lastly, the label labels under the entity that the word or sentence detected.\\n\\n```\\n\\"Intent\\": [\\n      {\\n        \\"type\\": \\"trait\\",\\n        \\"value\\": \\"bayar\\",\\n        \\"start\\": 0,\\n        \\"end\\": 4,\\n        \\"score\\": 0.8116588592529297,\\n        \\"label\\": \\"bayar\\"\\n      }\\n]\\n```\\n\\nFinally, you understand the basics of creating NLU and how to train it. Now, let’s improve your knowledge by following our advanced guidelines to design NLU and training it.\\n\\n## Advanced guidelines to design and train your NLU\\n\\n### Designing NLU\\n\\nYou can create NLU depending on your needs. The more complex an NLU, the larger training data is required to build it. A few things you must consider when designing an NLU are\\n\\n1. The total number of labels in an entity.\\n2. NLU complexity impacts training process complexity as well.\\n3. The total number of entities in an NLU. An entity will have its model, so the more entities you owned, then the longer the training process.\\n\\nIn the next part, you will learn several suggestions to reduce complexity and make the training process easier.\\n\\n#### First suggestion: Dividing entity type “trait” into a few entities\\n\\nIf an entity has too many labels (e.g., 50 labels), it will require at least 50 training data. Moreover, you will need larger training data to reach a high prediction result score if sentences between labels are alike. To help this problem, you can break down labels from an entity into a few entities.\\n\\nFor example, you have an entity type “intent” as follows\\n\\nNLU name: `nl-1`\\n\\nEntity name: `intent`\\n\\nEntity type: `trait`\\n\\nEntity profile: `intent`\\n\\nLabels:\\n\\n- `lupa_pin`\\n- `ganti_pin`\\n- `kartu_hilang`\\n- `buku_tabungan_hilang`\\n- `ganti_kartu`\\n- `ganti_buku_tabungan`\\n- `buat_kartu`\\n- `cara_daftar_nasabah`\\n\\nYou can break down it into 2 differents entities as follows\\n\\nNLU name: `nl-2`\\n\\n**First entity**\\n\\nEntity name: `intent`\\n\\nEntity type: `trait`\\n\\nEntity profile: `intent`\\n\\nLabels:\\n\\n- `lupa`\\n- `ganti`\\n- `ganti`\\n- `buat`\\n- `hilang`\\n\\n**Second Entity**\\n\\nEntity name: `topic`\\n\\nEntity type: `trait`\\n\\nEntity profile: `topic`\\n\\nLabels:\\n\\n- `pin`\\n- `kartu`\\n- `buku_tabungan`\\n- `nasabah`\\n\\nThis method can increase your model prediction score by dividing the score into several groups of labels. From the example above, the first NLU `nl-1` will divide the prediction score 1.00 into 8 different labels for the `intent` entity. Otherwise, the second NLU `nl-2` will divide the prediction score 1.00 into 4 labels for the intent entity and 4 labels for the `topic` entity.\\n\\n<div className=\\"info\\">\\n  <img className=\\"borderless\\" src=\\"/assets/images/icon-info.svg\\" />\\n  <p>\\n    Important note: This suggestion is recommended if you have limited training data. If you have a large amount of\\n    training data or there are no problems with your current training data, this suggestion is unnecessary.\\n  </p>\\n</div>\\n\\n#### Second suggestion: Utilize profile “intent”\\n\\nAnother tip is to use an “intent” profile which is influenced by predictions from other models (type “phrase” or type “dictionary”). This way can make the training process if training data is limited and sentences form alike.\\n\\n<div className=\\"info\\">\\n  <img className=\\"borderless\\" src=\\"/assets/images/icon-info.svg\\" />\\n  <p>Important note: This suggestion applies to entity type “trait” with “intent” profile only.</p>\\n</div>\\n\\nFirst example, given a training data\\n\\n```\\ndimana tempat perpanjang sim paling dekat? #ask_nearby_simstnk\\ndimana tempat perpanjang stnk sekitar sini? #ask_nearby_simstnk\\ndimana kantor polisi terdekat? #ask_nearby_polisi\\n```\\n\\nAnd you have an NLU with the detail as follows:\\n\\nNLU name: `nl-v1`\\n\\nEntity name: `intent`\\n\\nEntity type: `trait`\\n\\nEntity profile: `intent`\\n\\nLabels:\\n\\n- `ask_nearby_simstnk`\\n- `ask_nearby_polisi`\\n\\nThis NLU can be changed into:\\n\\nNLU name: `nl-v2`\\n\\n**First entity**\\n\\nEntity name: `simstnk`\\n\\nEntity type: `dict`\\n\\nEntity profile: `default`\\n\\nKey: `sim`\\n\\nLabels:\\n\\n- `sim`\\n- `surat izin mengemudi`\\n\\nKey: `stnk`\\n\\nLabels:\\n\\n- `stnk`\\n- `surat tanda kendaraan bermotor`\\n\\n**Second entity**\\n\\nEntity name: `intent`\\n\\nEntity type: `trait`\\n\\nEntity profile: `intent`\\n\\nLabels\\n\\n- `ask_nearby_simstnk`\\n- `ask_nearby_polisi`\\n\\nNLU `nl-v2` will make the training process faster because the words `sim` and `stnk` are in one similar category which is `simstnk`.\\n\\nHowever, there is a case that you need to be aware of. An “intent” profile **can remove** the detailed information. Here is an example.\\n\\nThe second example, given training data.\\n\\n```\\nresep untuk membuat pizza bbq apa ya? #ask_bbq_recipe\\npizza pepperoni gimana cara buatnya ya? #ask_pepperoni_recipe\\nkasih tau dong resep pizza aas buatanmu #ask_aas_recipe\\n```\\n\\nThen, you will have an NLU.\\n\\nNLU name: `nl-v1`\\n\\nEntity name: `intent`\\n\\nEntity type: `trait`\\n\\nEntity profile: `intent`\\n\\nLabels:\\n\\n- `ask_bbq_recipe`\\n- `ask_pepperoni_recipe`\\n- `ask_aas_recipe`\\n\\nNext, you change the NLU structure into this:\\n\\nNLU name: `nl-v2`\\n\\n**First entity**\\n\\nEntity name: `pizza`\\n\\nEntity type: `dict`\\n\\nEntity profile: `default`\\n\\nKey: `bbq`\\n\\nLabels:\\n\\n- `bbq`\\n- `barbeque`\\n- Key: `pepperoni`\\n\\nLabels:\\n\\n- `pepperoni`\\n- `peperoni`\\n\\nKey: `aas`\\n\\nLabels:\\n\\n- `aas`\\n- `american all star`\\n\\n**Second entity**\\n\\nEntity name: `intent`\\n\\nEntity type: `trait`\\n\\nEntity profile: `intent`\\n\\nLabels:\\n\\n- `ask_bbq_recipe`\\n- `ask_pepperoni_recipe`\\n- `ask_aas_recipe`\\n\\nThe `intent` entity in `nlu-v1` can recognize the differentiation between labels. Otherwise, `nl-v2` cannot acknowledge it because `bbq`, `pepperoni` and `aas` are set up as one category `pizza`. If users input a sentence `resep buat bbq apa ya?`, the score will show the same results from all labels.\\n\\nIf you still want to use “dictionary” type for this second example, you can try this way.\\n\\nNLU name: `nl-v3`\\n\\n**First entity**\\n\\nEntity name: `pizza`\\n\\nEntity type: `dict`\\n\\nEntity profile: `default`\\n\\nKey: `bbq`\\n\\nLabels:\\n\\n- `bbq`\\n- `barbeque`\\n\\nKey: `pepperoni`\\n\\nLabels:\\n\\n- `pepperoni`\\n- `peperoni`\\n\\nKey: `aas`\\n\\nLabels:\\n\\n- `aas`\\n- `american all star`\\n\\n**Second entity**\\n\\nEntity name: `intent`\\n\\nEntity type: `trait`\\n\\nEntity profile: `intent`\\n\\nLabels:\\n\\n- `ask_pizza_recipe`\\n\\nThe `nl-v3` can recognize a sentence has `ask_pizza_recipe` intent and can specify which pizza by using `pizza` entity.\\n\\nThis method is helpful to make your bot easy to understand limited words such as product names. Otherwise, this suggestion is not recommended if you’re using generic words.\\n\\n#### Third suggestion: Dividing NLU\\n\\nA bot can have multiple NLU. Here are a few cases in which NLU can be divided.\\n\\n##### Use specific NLU for certain flows\\n\\nSome flows in a bot may have a particular NLU for a flow, which means input to trigger the flow is different from other flows. This way can reduce the number of listed labels in an entity and ease the prediction process. Examples:\\n\\n- Using `credential` NLU which is executed when the user first interacts with the bot.\\n- Using `order` NLU in commerce bot will be executed when the user chooses the order menu.\\n\\n##### Use specific NLU for certain states\\n\\nFew states in a bot may have similar input, but have different meanings depending on what states are running. You can configure the NLU in state condition. Examples:\\n\\n- `YesNo` NLU can be used in overall flows but shall be specified in states that require end-users confirmation.\\n\\n<div className=\\"info\\">\\n  <img className=\\"borderless\\" src=\\"/assets/images/icon-info.svg\\" />\\n  <p>\\n    Note: You can use these methods if you have too many labels, data between labels are alike, a limited number of\\n    training data, predictions result is not optimal yet, or found other problems. But if your NLU is fine, you can\\n    create an entity with many labels.\\n  </p>\\n</div>\\n\\n### Training Guideline\\n\\nThe training process is required to make a bot response to end-users messages and requires training data.\\n\\nIn NLU, a training process will also train all models (read: entities). For example,\\n`NLU-A` has `entity-1`, `entity-2`, and `entity-3`. Because each entity owns its models, `NLU-A` has 3 models that run individually. If you input training data for `NLU-A`, you train `entity-1`, `entity-2`, and `entity-3` models.\\n\\nHere are suggestions that you need to consider in the training process\\n\\n#### Add various forms of language\\n\\nInput training data with various forms such as formal, informal, slang, long or short sentences. If you only train a form (e.g., formal), then the model may understand formal sentences.\\n\\n#### Avoid imbalanced data between labels\\n\\nThe imbalanced data affect bias between labels. A small amount of imbalanced data is not a problem. However, if you have a large amount of imbalanced data, the predictions result too significant on specific labels and a bias.\\n\\n#### Add “counter-training”\\n\\nCounter-training means you input training data that is not classified to current labels. For example,\\n\\n- You have an entity that can predict book genres into 3 categories (read: labels) `horror`, `fiction`, and `biography`. Each label has been trained and can recognize each genre.\\n- Then, an input is entered with a new category named `history`.\\n- Because the model only distinguishes between the 3 labels and assumes that each book must be categorized into 3 labels, the model cannot answer not `all three` or `none`.\\n\\nTo make the model understand `history` input, you have to enter training data without giving any intent/tags.\\n\\n#### Add a new label to the trained entity\\n\\nIf you want to add a new label, train the label with a similar total amount of training with current labels. For example,\\n\\n- You have an entity with 5 labels. Each label has 10 training data.\\n- Then, you add a new label. Your next step will be to train the label equal to or more than 10 training data.\\n- The final step is to train the other 5 labels with a few training data.\\n\\n#### Ambiguous data\\n\\nAvoid preparing ambiguous training data into different labels. Ambiguous data means you input the same training data, but the context depends on what end-users asked. For example,\\n\\n- End-user sends the word `sudah` if your bot asks a question about `apakah sudah makan?` (Smalltalk flow) or `apakah sudah menikah?` (Credential flow).\\n- Both sentences can be recognized as `intent:doneEating` (read: entity `intent` with label `doneEating`) or `intent:married` (read: entity `intent` with label `married`).\\n\\nTo reduce this ambiguity case, you shall prepare training data as follows\\n\\n- Input training data such as `sudah menikah` in `intent: married`. There is an additional word `menikah` that could distinguish the labels.\\n- For the word `sudah`, train it to a different label such as `intent:done`. For the bot implementation, you shall put a condition `intent == “done”` for states executed when end-users said `sudah` word.\\n\\n### Relationship between bot, NL, and training process.\\n\\n- **Bot development**, **used NL in bot**, and **training process is influencing each other**. Bot implementation can process some limitations encountered in NL results through the bot.\\n- **NL complexity is affected by bot complexity**. So, the more complex a bot, the more complex the NL will be and the more training data.\\n- For NL, **it is possible to mispredict a few data**. It is a **usual** case. You can solve this by adding training data or post-processing in the bot.\\n\\nThis is the end of the guidance. You can contact support@kata.ai if you have any difficulties when implementing this.\\n","code":"var Component=(()=>{var h=Object.create;var l=Object.defineProperty;var p=Object.getOwnPropertyDescriptor;var u=Object.getOwnPropertyNames;var m=Object.getPrototypeOf,g=Object.prototype.hasOwnProperty;var c=i=>l(i,\\"__esModule\\",{value:!0});var y=(i,t)=>()=>(t||i((t={exports:{}}).exports,t),t.exports),b=(i,t)=>{for(var r in t)l(i,r,{get:t[r],enumerable:!0})},o=(i,t,r,n)=>{if(t&&typeof t==\\"object\\"||typeof t==\\"function\\")for(let a of u(t))!g.call(i,a)&&(r||a!==\\"default\\")&&l(i,a,{get:()=>t[a],enumerable:!(n=p(t,a))||n.enumerable});return i},f=(i,t)=>o(c(l(i!=null?h(m(i)):{},\\"default\\",!t&&i&&i.__esModule?{get:()=>i.default,enumerable:!0}:{value:i,enumerable:!0})),i),w=(i=>(t,r)=>i&&i.get(t)||(r=o(c({}),t,1),i&&i.set(t,r),r))(typeof WeakMap!=\\"undefined\\"?new WeakMap:0);var s=y((_,d)=>{d.exports=_jsx_runtime});var U={};b(U,{default:()=>v,frontmatter:()=>N});var e=f(s()),N={id:\\"how-to-improve-your-chatbot-intelligence-by-training-your-nlu\\",title:\\"How to Improve Your Chatbot Intelligence by Training Your NLU\\",prev:\\"how-to-deploy-your-chatbot-using-generic-channel\\",next:\\"how-to-use-nlu-threshold-to-enhance-customer-experience\\",section:\\"How To\\"};function k(i={}){let{wrapper:t}=i.components||{};return t?(0,e.jsx)(t,Object.assign({},i,{children:(0,e.jsx)(r,{})})):r();function r(){let n=Object.assign({h2:\\"h2\\",a:\\"a\\",span:\\"span\\",p:\\"p\\",ol:\\"ol\\",li:\\"li\\",strong:\\"strong\\",code:\\"code\\",ul:\\"ul\\",pre:\\"pre\\",h3:\\"h3\\",h4:\\"h4\\",h5:\\"h5\\"},i.components),{FigureImage:a}=n;return a||L(\\"FigureImage\\",!0),(0,e.jsxs)(e.Fragment,{children:[(0,e.jsxs)(n.h2,{id:\\"introduction\\",children:[(0,e.jsx)(n.a,{className:\\"anchor\\",href:\\"#introduction\\",children:(0,e.jsx)(n.span,{className:\\"icon icon-link\\"})}),\\"Introduction\\"]}),`\\n`,(0,e.jsx)(n.p,{children:\\"Natural Language Understanding (NLU) is a computer\'s ability to transform a text message into a structured object. In the Kata Platform, NLU is a place for users to design and build their NLU capability for their conversational AI product. \\\\u2018\\"}),`\\n`,(0,e.jsxs)(n.h2,{id:\\"how-to-use\\",children:[(0,e.jsx)(n.a,{className:\\"anchor\\",href:\\"#how-to-use\\",children:(0,e.jsx)(n.span,{className:\\"icon icon-link\\"})}),\\"How to Use\\"]}),`\\n`,(0,e.jsx)(n.p,{children:\\"This guide will teach you how to integrate NLU into your chatbot to recognize specific end-users input. Before you start, you will need to create at least one entity.\\"}),`\\n`,(0,e.jsxs)(n.ol,{children:[`\\n`,(0,e.jsxs)(n.li,{children:[\\"To create an entity, go to the \\",(0,e.jsx)(n.strong,{children:\\"NLU\\"}),\\" menu. Then, click the \\",(0,e.jsx)(n.strong,{children:\\"Entity\\"}),\\" menu.\\"]}),`\\n`]}),`\\n`,(0,e.jsx)(a,{alt:\\"Image 1 Alt\\",src:\\"/assets/images/products/kata-platform/how-to/how-to-improve-your-chatbot-intelligence-by-training-your-nlu/image1.webp\\",caption:{title:\\"Figure 1\\",description:\\"NLU and entity menu.\\"},layout:\\"responsive\\",naturalHeight:556,naturalWidth:1600}),`\\n`,(0,e.jsxs)(n.ol,{start:\\"2\\",children:[`\\n`,(0,e.jsxs)(n.li,{children:[\\"Click \\",(0,e.jsx)(n.strong,{children:\\"Create Entity\\"}),\\" to set up a new entity. It will show a form on the right screen. Fill in the entity name.\\"]}),`\\n`,(0,e.jsxs)(n.li,{children:[(0,e.jsx)(n.strong,{children:\\"Inherit\\"}),\\" lets you copy an entity from any public NLU on the Kata Platform. To inherit an NLU, type the NLU ID with \\",(0,e.jsx)(n.code,{children:\\"[username]:[project name]\\"}),\\". Inherited entities will sync to the original entity, including the labels and training data. For example, in the \\",(0,e.jsx)(n.a,{href:\\"/kata-platform/documentation-content/start-your-first-chatbot\\",children:\\"getting started chatbot\\"}),\\" section, your NLU ID format is \\",(0,e.jsx)(n.code,{children:\\"muhfadhiilkata:test_simple_bot\\"}),\\".\\"]}),`\\n`,(0,e.jsxs)(n.li,{children:[(0,e.jsx)(n.strong,{children:\\"Type\\"}),\\" is intended for the entity type. We have 3 entity types in the Kata Platform:\\",`\\n`,(0,e.jsxs)(n.ul,{children:[`\\n`,(0,e.jsxs)(n.li,{children:[(0,e.jsx)(n.strong,{children:\\"Trait\\"}),\\" is a text classifier to classify a sentence into a particular labels. This type is suitable for making your bot recognize nuance in a sentence.\\"]}),`\\n`,(0,e.jsxs)(n.li,{children:[(0,e.jsx)(n.strong,{children:\\"Dictionary\\"}),\\" is a word tagger which has keys and labels. It will form an array.\\"]}),`\\n`,(0,e.jsxs)(n.li,{children:[\\"The \\",(0,e.jsx)(n.strong,{children:\\"Phrase\\"}),\\" is a word tagger.\\"]}),`\\n`]}),`\\n`]}),`\\n`]}),`\\n`,(0,e.jsx)(a,{alt:\\"Image 2 Alt\\",src:\\"/assets/images/products/kata-platform/how-to/how-to-improve-your-chatbot-intelligence-by-training-your-nlu/image2.webp\\",caption:{title:\\"Figure 2\\",description:\\"Entity type \\\\u201Cdictionary\\\\u201D\\"},layout:\\"responsive\\",naturalHeight:1400,naturalWidth:1600}),`\\n`,(0,e.jsxs)(n.ol,{start:\\"5\\",children:[`\\n`,(0,e.jsxs)(n.li,{children:[\\"The \\",(0,e.jsx)(n.strong,{children:\\"Profile\\"}),\\" is an AI model that is available to use by users. Depending on data training and your dataset, you can choose any profiles you want.\\",`\\n`,(0,e.jsxs)(n.ul,{children:[`\\n`,(0,e.jsx)(n.li,{children:\\"The \\\\u201Cdefault\\\\u201D profile is suitable for many data samples so that this profile is available in all entity types.\\"}),`\\n`,(0,e.jsx)(n.li,{children:\\"\\\\u201Cintent\\\\u201D profile is suitable for entity type \\\\u201Ctrait.\\\\u201D\\"}),`\\n`,(0,e.jsx)(n.li,{children:\\"\\\\u201Cdefault_v2\\\\u201D profile is our newest profile and is suitable if you have a large amount of data.\\"}),`\\n`]}),`\\n`]}),`\\n`,(0,e.jsxs)(n.li,{children:[(0,e.jsx)(n.strong,{children:\\"Root\\"}),\\" enables you to create an entity using other users\' NLU to copy the training data and add new labels. Therefore, it is suitable if you have a trained NLU and want to add more labels in the NLU. You can type an NLU ID which consists of username and project with format \\",(0,e.jsx)(n.code,{children:\\"[username]:[project name]\\"}),\\".\\"]}),`\\n`,(0,e.jsxs)(n.li,{children:[(0,e.jsx)(n.strong,{children:\\"Labels\\"}),` are a feature to determine classes or categories from an entity. To add a new label, you can type and press \\\\u201Center\\\\u201D on your keyboard.\\nIf you choose entity type \\\\u201Cdictionary,\\\\u201D it will show a dropdown name `,(0,e.jsx)(n.strong,{children:\\"Belongs to\\"}),\\". This feature enables you to define relationships () between entities. Belongs to feature can only be used for entities in the same NLU with entity type \\\\u201Cphrase\\\\u201D or \\\\u201Cdictionary.\\\\u201D It is suitable if your data sample is like this:\\"]}),`\\n`]}),`\\n`,(0,e.jsx)(n.pre,{children:(0,e.jsx)(n.code,{className:\\"code-highlight\\",children:(0,e.jsx)(n.span,{className:\\"code-line\\",children:`Saya mau beli es kopi susu 2 dan less sugar\\n`})})}),`\\n`,(0,e.jsxs)(n.p,{children:[(0,e.jsx)(n.code,{children:\\"Es kopi susu\\"}),\\" is the main menu. \\",(0,e.jsx)(n.code,{children:\\"2 and less sugar\\"}),\\" are modifiers to detailing the order. So in Belongs To concept, you will tag 2 and choose belongsTo\\"]}),`\\n`,(0,e.jsxs)(n.h2,{id:\\"training-your-nlu\\",children:[(0,e.jsx)(n.a,{className:\\"anchor\\",href:\\"#training-your-nlu\\",children:(0,e.jsx)(n.span,{className:\\"icon icon-link\\"})}),\\"Training your NLU\\"]}),`\\n`,(0,e.jsx)(n.p,{children:\\"After creating an entity and labels, you have to train them.\\"}),`\\n`,(0,e.jsxs)(n.ol,{children:[`\\n`,(0,e.jsxs)(n.li,{children:[\\"Go to \\",(0,e.jsx)(n.strong,{children:\\"NLU > Training\\"}),\\" menu.\\"]}),`\\n`]}),`\\n`,(0,e.jsx)(a,{alt:\\"Image 3 Alt\\",src:\\"/assets/images/products/kata-platform/how-to/how-to-improve-your-chatbot-intelligence-by-training-your-nlu/image3.webp\\",caption:{title:\\"Figure 3\\",description:\\"Training model position.\\"},layout:\\"responsive\\",naturalHeight:551,naturalWidth:1600}),`\\n`,(0,e.jsxs)(n.ol,{start:\\"2\\",children:[`\\n`,(0,e.jsxs)(n.li,{children:[\\"Then, you will see 2 choices to train your entities:\\",`\\n`,(0,e.jsxs)(n.ul,{children:[`\\n`,(0,e.jsxs)(n.li,{children:[(0,e.jsx)(n.strong,{children:\\"Single training\\"}),\\" is a way to train sentences (training data) one by one.\\"]}),`\\n`,(0,e.jsxs)(n.li,{children:[(0,e.jsx)(n.strong,{children:\\"Bulk training\\"}),\\" is a way to train up to 200 sentences (training data) by uploading a .txt file with annotations inside the file.\\"]}),`\\n`]}),`\\n`]}),`\\n`]}),`\\n`,(0,e.jsx)(n.p,{children:\\"These are steps to train your NLU using single training:\\"}),`\\n`,(0,e.jsxs)(n.ol,{children:[`\\n`,(0,e.jsxs)(n.li,{children:[\\"For example, to train 1 sentence for your NLU, type a sentence, then press \\\\u201Center\\\\u201D on the keyboard to review the training. For example \\",(0,e.jsx)(n.code,{children:\\"Saya ingin membeli kopi susu\\"}),\\".\\"]}),`\\n`]}),`\\n`,(0,e.jsx)(a,{alt:\\"Image 4 Alt\\",src:\\"/assets/images/products/kata-platform/how-to/how-to-improve-your-chatbot-intelligence-by-training-your-nlu/image4.webp\\",caption:{title:\\"Figure 4\\",description:\\"Training box.\\"},layout:\\"responsive\\",naturalHeight:470,naturalWidth:1600}),`\\n`,(0,e.jsxs)(n.ol,{start:\\"2\\",children:[`\\n`,(0,e.jsxs)(n.li,{children:[\\"Next, you can preview the sentence first and tag your entities. You can block or double click in a word to tag a word. Then, it will show a dropdown to choose entities and labels in format \\",(0,e.jsx)(n.code,{children:\\"[entity name]:[label name]\\"}),\\". You can select a dropdown at the bottom of the entities list for tagging a sentence.\\"]}),`\\n`]}),`\\n`,(0,e.jsx)(a,{alt:\\"Image 5 Alt\\",src:\\"/assets/images/products/kata-platform/how-to/how-to-improve-your-chatbot-intelligence-by-training-your-nlu/image5.webp\\",caption:{title:\\"Figure 5\\",description:\\"Tag a word using an entity type dictionary or phrase.\\"},layout:\\"responsive\\",naturalHeight:527,naturalWidth:1600}),`\\n`,(0,e.jsx)(a,{alt:\\"Image 6 Alt\\",src:\\"/assets/images/products/kata-platform/how-to/how-to-improve-your-chatbot-intelligence-by-training-your-nlu/image6.webp\\",caption:{title:\\"Figure 6\\",description:\\"Tag a sentence using entity type trait.\\"},layout:\\"responsive\\",naturalHeight:695,naturalWidth:1600}),`\\n`,(0,e.jsxs)(n.ol,{start:\\"3\\",children:[`\\n`,(0,e.jsxs)(n.li,{children:[\\"Click the \\",(0,e.jsx)(n.strong,{children:\\"Train\\"}),\\" button to submit training data.\\"]}),`\\n`]}),`\\n`,(0,e.jsx)(n.p,{children:\\"These are steps to train your NLU using bulk training:\\"}),`\\n`,(0,e.jsxs)(n.ol,{children:[`\\n`,(0,e.jsxs)(n.li,{children:[\\"First, open your text and source code editor (Notepad, \\",(0,e.jsx)(\\"a\\",{href:\\"https://notepad-plus-plus.org/downloads/\\",target:\\"_blank\\",children:\\"notepad++\\"}),\\", \\",(0,e.jsx)(\\"a\\",{href:\\"https://www.sublimetext.com/\\",target:\\"_blank\\",children:\\"sublime\\"}),\\")\\"]}),`\\n`,(0,e.jsx)(n.li,{children:\\"Create a new file.\\"}),`\\n`,(0,e.jsxs)(n.li,{children:[\\"You will create training data using a simple syntax. \\\\u201D#\\\\u2019 for entity type \\\\u201Ctrait\\\\u201D and \\\\u201D@\\\\u201D for entity type \\\\u201Cphrase.\\\\u201D\\",`\\n`,(0,e.jsxs)(n.ul,{children:[`\\n`,(0,e.jsxs)(n.li,{children:[\\"Example for entity type trait: \\",(0,e.jsx)(n.code,{children:\\"Saya mau pesan pizza #intent:order\\"}),\\". It means the sentence is classified into an entity named \\\\u201Cintent\\\\u201D with the label \\\\u201Corder.\\\\u201D\\"]}),`\\n`,(0,e.jsxs)(n.li,{children:[\\"Example for entity type phrase and dictionary: \\",(0,e.jsx)(n.code,{children:\\"Saya mau pesan tiket ke (@destination Malang) atas nama (@ner:person Budi) #intent:order\\"}),\\". It means the word \\\\u201CMalang\\\\u201D is tagged for entity name \\\\u201Cdestination\\\\u201D and \\\\u201CBudi\\\\u201D is tagged for entity name \\\\u201Cner\\\\u201D with label \\\\u201Cperson.\\\\u201D\\"]}),`\\n`]}),`\\n`]}),`\\n`,(0,e.jsxs)(n.li,{children:[\\"Save the following training data into \\",(0,e.jsx)(n.code,{children:\\"training-data-example.txt\\"})]}),`\\n`,(0,e.jsxs)(n.li,{children:[\\"Go to \\",(0,e.jsx)(n.strong,{children:\\"NLU > Training\\"}),\\" in Platform. Then, click on the \\",(0,e.jsx)(n.strong,{children:\\"Bulk Training\\"}),\\" button.\\"]}),`\\n`,(0,e.jsxs)(n.li,{children:[\\"Click on the \\",(0,e.jsx)(n.strong,{children:\\"Browse\\"}),\\" button to open the file explorer/finder or drag and drop the file into the browse file dialog.\\"]}),`\\n`,(0,e.jsx)(n.li,{children:\\"Wait for the upload process.\\"}),`\\n`,(0,e.jsx)(n.li,{children:\\"After the upload is complete, you can review the training data file in the Platform.\\"}),`\\n`]}),`\\n`,(0,e.jsx)(a,{alt:\\"Image 7 Alt\\",src:\\"/assets/images/products/kata-platform/how-to/how-to-improve-your-chatbot-intelligence-by-training-your-nlu/image7.webp\\",caption:{title:\\"Figure 7\\",description:\\"Review training data\\"},layout:\\"responsive\\",naturalHeight:641,naturalWidth:1140}),`\\n`,(0,e.jsxs)(n.ol,{start:\\"9\\",children:[`\\n`,(0,e.jsxs)(n.li,{children:[\\"Click on the \\",(0,e.jsx)(n.strong,{children:\\"Train\\"}),\\" button to train the data.\\"]}),`\\n`,(0,e.jsxs)(n.li,{children:[\\"You will see a customer satisfaction survey after using the feature. Fill in the survey, then click \\",(0,e.jsx)(n.strong,{children:\\"X\\"}),\\" to close the dialog.\\"]}),`\\n`,(0,e.jsx)(n.li,{children:\\"You have successfully trained your NLU with the uploaded data.\\"}),`\\n`]}),`\\n`,(0,e.jsx)(a,{alt:\\"Image 8 Alt\\",src:\\"/assets/images/products/kata-platform/how-to/how-to-improve-your-chatbot-intelligence-by-training-your-nlu/image8.webp\\",caption:{title:\\"Figure 8\\",description:\\"Successfully trained.\\"},layout:\\"responsive\\",naturalHeight:719,naturalWidth:1140}),`\\n`,(0,e.jsx)(n.p,{children:\\"Every training will make your NLU smarter, measured by a confidence score. The confidence score is how the NLU recognizes end-users input between 0 and 1.\\"}),`\\n`,(0,e.jsxs)(n.h2,{id:\\"test-your-nlu\\",children:[(0,e.jsx)(n.a,{className:\\"anchor\\",href:\\"#test-your-nlu\\",children:(0,e.jsx)(n.span,{className:\\"icon icon-link\\"})}),\\"Test Your NLU\\"]}),`\\n`,(0,e.jsx)(n.p,{children:\\"You can test if your NLU is good enough or wrong in the Kata Platform by using the Test NLU feature. These are the steps:\\"}),`\\n`,(0,e.jsxs)(n.ol,{children:[`\\n`,(0,e.jsxs)(n.li,{children:[\\"Click the \\",(0,e.jsx)(n.strong,{children:\\"Test NLU\\"}),\\" button on the right bottom of your screen.\\"]}),`\\n`]}),`\\n`,(0,e.jsx)(a,{alt:\\"Image 9 Alt\\",src:\\"/assets/images/products/kata-platform/how-to/how-to-improve-your-chatbot-intelligence-by-training-your-nlu/image9.webp\\",caption:{title:\\"Figure 9\\",description:\\"Test NLU location.\\"},layout:\\"responsive\\",naturalHeight:688,naturalWidth:1600}),`\\n`,(0,e.jsxs)(n.ol,{start:\\"2\\",children:[`\\n`,(0,e.jsx)(n.li,{children:\\"Then, it will show a chat window.\\"}),`\\n`,(0,e.jsx)(n.li,{children:\\"Type in the chatbox a sentence to test your NLU. The best practice is to prepare data training and data testing separately, but they must have similarities.\\"}),`\\n`]}),`\\n`,(0,e.jsx)(n.p,{children:\\"When you enter a sentence or data testing, a result is shown. For example, here is how to read the result from the test NLU example:\\"}),`\\n`,(0,e.jsx)(n.pre,{children:(0,e.jsxs)(n.code,{className:\\"code-highlight\\",children:[(0,e.jsx)(n.span,{className:\\"code-line\\",children:`{\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`  \\"id\\": \\"abf78\\",\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`  \\"input\\": \\"halo\\",\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`  \\"output\\": {\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`    \\"kata\\": [],\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`    \\"product\\": [],\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`    \\"Intent\\": [\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`      {\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`        \\"type\\": \\"trait\\",\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`        \\"value\\": \\"bayar\\",\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`        \\"start\\": 0,\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`        \\"end\\": 4,\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`        \\"score\\": 0.8116588592529297,\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`        \\"label\\": \\"bayar\\"\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`      }\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`    ]\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`  }\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`}\\n`})]})}),`\\n`,(0,e.jsx)(n.p,{children:\\"Let\\\\u2019s break them down!\\"}),`\\n`,(0,e.jsxs)(n.ol,{children:[`\\n`,(0,e.jsx)(n.li,{children:\\"It is a sentence or word that you typed.\\"}),`\\n`]}),`\\n`,(0,e.jsx)(n.pre,{children:(0,e.jsx)(n.code,{className:\\"code-highlight\\",children:(0,e.jsx)(n.span,{className:\\"code-line\\",children:`\\"input\\": \\"halo\\",\\n`})})}),`\\n`,(0,e.jsxs)(n.ol,{start:\\"2\\",children:[`\\n`,(0,e.jsx)(n.li,{children:\\"Two entities are not detected by your input \\\\u201Chalo\\\\u201D so that the results are null.\\"}),`\\n`]}),`\\n`,(0,e.jsx)(n.pre,{children:(0,e.jsxs)(n.code,{className:\\"code-highlight\\",children:[(0,e.jsx)(n.span,{className:\\"code-line\\",children:`\\"output\\": {\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`    \\"kata\\": [],\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`    \\"product\\": [],\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`}\\n`})]})}),`\\n`,(0,e.jsxs)(n.ol,{start:\\"3\\",children:[`\\n`,(0,e.jsx)(n.li,{children:\\"There is a detected entity called \\\\u201CIntent\\\\u201D and the entity type is \\\\u201Ctrait.\\\\u201D Then, \\\\u201Cstart\\\\u201D and \\\\u201Cend\\\\u201D mean character count from \\\\u201Chello\\\\u201D. Next, score means a confidence score from the NL model to predict the sentence or word from end-users. Lastly, the label labels under the entity that the word or sentence detected.\\"}),`\\n`]}),`\\n`,(0,e.jsx)(n.pre,{children:(0,e.jsxs)(n.code,{className:\\"code-highlight\\",children:[(0,e.jsx)(n.span,{className:\\"code-line\\",children:`\\"Intent\\": [\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`      {\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`        \\"type\\": \\"trait\\",\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`        \\"value\\": \\"bayar\\",\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`        \\"start\\": 0,\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`        \\"end\\": 4,\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`        \\"score\\": 0.8116588592529297,\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`        \\"label\\": \\"bayar\\"\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`      }\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`]\\n`})]})}),`\\n`,(0,e.jsx)(n.p,{children:\\"Finally, you understand the basics of creating NLU and how to train it. Now, let\\\\u2019s improve your knowledge by following our advanced guidelines to design NLU and training it.\\"}),`\\n`,(0,e.jsxs)(n.h2,{id:\\"advanced-guidelines-to-design-and-train-your-nlu\\",children:[(0,e.jsx)(n.a,{className:\\"anchor\\",href:\\"#advanced-guidelines-to-design-and-train-your-nlu\\",children:(0,e.jsx)(n.span,{className:\\"icon icon-link\\"})}),\\"Advanced guidelines to design and train your NLU\\"]}),`\\n`,(0,e.jsxs)(n.h3,{id:\\"designing-nlu\\",children:[(0,e.jsx)(n.a,{className:\\"anchor\\",href:\\"#designing-nlu\\",children:(0,e.jsx)(n.span,{className:\\"icon icon-link\\"})}),\\"Designing NLU\\"]}),`\\n`,(0,e.jsx)(n.p,{children:\\"You can create NLU depending on your needs. The more complex an NLU, the larger training data is required to build it. A few things you must consider when designing an NLU are\\"}),`\\n`,(0,e.jsxs)(n.ol,{children:[`\\n`,(0,e.jsx)(n.li,{children:\\"The total number of labels in an entity.\\"}),`\\n`,(0,e.jsx)(n.li,{children:\\"NLU complexity impacts training process complexity as well.\\"}),`\\n`,(0,e.jsx)(n.li,{children:\\"The total number of entities in an NLU. An entity will have its model, so the more entities you owned, then the longer the training process.\\"}),`\\n`]}),`\\n`,(0,e.jsx)(n.p,{children:\\"In the next part, you will learn several suggestions to reduce complexity and make the training process easier.\\"}),`\\n`,(0,e.jsxs)(n.h4,{id:\\"first-suggestion-dividing-entity-type-trait-into-a-few-entities\\",children:[(0,e.jsx)(n.a,{className:\\"anchor\\",href:\\"#first-suggestion-dividing-entity-type-trait-into-a-few-entities\\",children:(0,e.jsx)(n.span,{className:\\"icon icon-link\\"})}),\\"First suggestion: Dividing entity type \\\\u201Ctrait\\\\u201D into a few entities\\"]}),`\\n`,(0,e.jsx)(n.p,{children:\\"If an entity has too many labels (e.g., 50 labels), it will require at least 50 training data. Moreover, you will need larger training data to reach a high prediction result score if sentences between labels are alike. To help this problem, you can break down labels from an entity into a few entities.\\"}),`\\n`,(0,e.jsx)(n.p,{children:\\"For example, you have an entity type \\\\u201Cintent\\\\u201D as follows\\"}),`\\n`,(0,e.jsxs)(n.p,{children:[\\"NLU name: \\",(0,e.jsx)(n.code,{children:\\"nl-1\\"})]}),`\\n`,(0,e.jsxs)(n.p,{children:[\\"Entity name: \\",(0,e.jsx)(n.code,{children:\\"intent\\"})]}),`\\n`,(0,e.jsxs)(n.p,{children:[\\"Entity type: \\",(0,e.jsx)(n.code,{children:\\"trait\\"})]}),`\\n`,(0,e.jsxs)(n.p,{children:[\\"Entity profile: \\",(0,e.jsx)(n.code,{children:\\"intent\\"})]}),`\\n`,(0,e.jsx)(n.p,{children:\\"Labels:\\"}),`\\n`,(0,e.jsxs)(n.ul,{children:[`\\n`,(0,e.jsx)(n.li,{children:(0,e.jsx)(n.code,{children:\\"lupa_pin\\"})}),`\\n`,(0,e.jsx)(n.li,{children:(0,e.jsx)(n.code,{children:\\"ganti_pin\\"})}),`\\n`,(0,e.jsx)(n.li,{children:(0,e.jsx)(n.code,{children:\\"kartu_hilang\\"})}),`\\n`,(0,e.jsx)(n.li,{children:(0,e.jsx)(n.code,{children:\\"buku_tabungan_hilang\\"})}),`\\n`,(0,e.jsx)(n.li,{children:(0,e.jsx)(n.code,{children:\\"ganti_kartu\\"})}),`\\n`,(0,e.jsx)(n.li,{children:(0,e.jsx)(n.code,{children:\\"ganti_buku_tabungan\\"})}),`\\n`,(0,e.jsx)(n.li,{children:(0,e.jsx)(n.code,{children:\\"buat_kartu\\"})}),`\\n`,(0,e.jsx)(n.li,{children:(0,e.jsx)(n.code,{children:\\"cara_daftar_nasabah\\"})}),`\\n`]}),`\\n`,(0,e.jsx)(n.p,{children:\\"You can break down it into 2 differents entities as follows\\"}),`\\n`,(0,e.jsxs)(n.p,{children:[\\"NLU name: \\",(0,e.jsx)(n.code,{children:\\"nl-2\\"})]}),`\\n`,(0,e.jsx)(n.p,{children:(0,e.jsx)(n.strong,{children:\\"First entity\\"})}),`\\n`,(0,e.jsxs)(n.p,{children:[\\"Entity name: \\",(0,e.jsx)(n.code,{children:\\"intent\\"})]}),`\\n`,(0,e.jsxs)(n.p,{children:[\\"Entity type: \\",(0,e.jsx)(n.code,{children:\\"trait\\"})]}),`\\n`,(0,e.jsxs)(n.p,{children:[\\"Entity profile: \\",(0,e.jsx)(n.code,{children:\\"intent\\"})]}),`\\n`,(0,e.jsx)(n.p,{children:\\"Labels:\\"}),`\\n`,(0,e.jsxs)(n.ul,{children:[`\\n`,(0,e.jsx)(n.li,{children:(0,e.jsx)(n.code,{children:\\"lupa\\"})}),`\\n`,(0,e.jsx)(n.li,{children:(0,e.jsx)(n.code,{children:\\"ganti\\"})}),`\\n`,(0,e.jsx)(n.li,{children:(0,e.jsx)(n.code,{children:\\"ganti\\"})}),`\\n`,(0,e.jsx)(n.li,{children:(0,e.jsx)(n.code,{children:\\"buat\\"})}),`\\n`,(0,e.jsx)(n.li,{children:(0,e.jsx)(n.code,{children:\\"hilang\\"})}),`\\n`]}),`\\n`,(0,e.jsx)(n.p,{children:(0,e.jsx)(n.strong,{children:\\"Second Entity\\"})}),`\\n`,(0,e.jsxs)(n.p,{children:[\\"Entity name: \\",(0,e.jsx)(n.code,{children:\\"topic\\"})]}),`\\n`,(0,e.jsxs)(n.p,{children:[\\"Entity type: \\",(0,e.jsx)(n.code,{children:\\"trait\\"})]}),`\\n`,(0,e.jsxs)(n.p,{children:[\\"Entity profile: \\",(0,e.jsx)(n.code,{children:\\"topic\\"})]}),`\\n`,(0,e.jsx)(n.p,{children:\\"Labels:\\"}),`\\n`,(0,e.jsxs)(n.ul,{children:[`\\n`,(0,e.jsx)(n.li,{children:(0,e.jsx)(n.code,{children:\\"pin\\"})}),`\\n`,(0,e.jsx)(n.li,{children:(0,e.jsx)(n.code,{children:\\"kartu\\"})}),`\\n`,(0,e.jsx)(n.li,{children:(0,e.jsx)(n.code,{children:\\"buku_tabungan\\"})}),`\\n`,(0,e.jsx)(n.li,{children:(0,e.jsx)(n.code,{children:\\"nasabah\\"})}),`\\n`]}),`\\n`,(0,e.jsxs)(n.p,{children:[\\"This method can increase your model prediction score by dividing the score into several groups of labels. From the example above, the first NLU \\",(0,e.jsx)(n.code,{children:\\"nl-1\\"}),\\" will divide the prediction score 1.00 into 8 different labels for the \\",(0,e.jsx)(n.code,{children:\\"intent\\"}),\\" entity. Otherwise, the second NLU \\",(0,e.jsx)(n.code,{children:\\"nl-2\\"}),\\" will divide the prediction score 1.00 into 4 labels for the intent entity and 4 labels for the \\",(0,e.jsx)(n.code,{children:\\"topic\\"}),\\" entity.\\"]}),`\\n`,(0,e.jsxs)(\\"div\\",{className:\\"info\\",children:[(0,e.jsx)(\\"img\\",{className:\\"borderless\\",src:\\"/assets/images/icon-info.svg\\"}),(0,e.jsx)(\\"p\\",{children:(0,e.jsx)(n.p,{children:`Important note: This suggestion is recommended if you have limited training data. If you have a large amount of\\ntraining data or there are no problems with your current training data, this suggestion is unnecessary.`})})]}),`\\n`,(0,e.jsxs)(n.h4,{id:\\"second-suggestion-utilize-profile-intent\\",children:[(0,e.jsx)(n.a,{className:\\"anchor\\",href:\\"#second-suggestion-utilize-profile-intent\\",children:(0,e.jsx)(n.span,{className:\\"icon icon-link\\"})}),\\"Second suggestion: Utilize profile \\\\u201Cintent\\\\u201D\\"]}),`\\n`,(0,e.jsx)(n.p,{children:\\"Another tip is to use an \\\\u201Cintent\\\\u201D profile which is influenced by predictions from other models (type \\\\u201Cphrase\\\\u201D or type \\\\u201Cdictionary\\\\u201D). This way can make the training process if training data is limited and sentences form alike.\\"}),`\\n`,(0,e.jsxs)(\\"div\\",{className:\\"info\\",children:[(0,e.jsx)(\\"img\\",{className:\\"borderless\\",src:\\"/assets/images/icon-info.svg\\"}),(0,e.jsx)(\\"p\\",{children:\\"Important note: This suggestion applies to entity type \\\\u201Ctrait\\\\u201D with \\\\u201Cintent\\\\u201D profile only.\\"})]}),`\\n`,(0,e.jsx)(n.p,{children:\\"First example, given a training data\\"}),`\\n`,(0,e.jsx)(n.pre,{children:(0,e.jsxs)(n.code,{className:\\"code-highlight\\",children:[(0,e.jsx)(n.span,{className:\\"code-line\\",children:`dimana tempat perpanjang sim paling dekat? #ask_nearby_simstnk\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`dimana tempat perpanjang stnk sekitar sini? #ask_nearby_simstnk\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`dimana kantor polisi terdekat? #ask_nearby_polisi\\n`})]})}),`\\n`,(0,e.jsx)(n.p,{children:\\"And you have an NLU with the detail as follows:\\"}),`\\n`,(0,e.jsxs)(n.p,{children:[\\"NLU name: \\",(0,e.jsx)(n.code,{children:\\"nl-v1\\"})]}),`\\n`,(0,e.jsxs)(n.p,{children:[\\"Entity name: \\",(0,e.jsx)(n.code,{children:\\"intent\\"})]}),`\\n`,(0,e.jsxs)(n.p,{children:[\\"Entity type: \\",(0,e.jsx)(n.code,{children:\\"trait\\"})]}),`\\n`,(0,e.jsxs)(n.p,{children:[\\"Entity profile: \\",(0,e.jsx)(n.code,{children:\\"intent\\"})]}),`\\n`,(0,e.jsx)(n.p,{children:\\"Labels:\\"}),`\\n`,(0,e.jsxs)(n.ul,{children:[`\\n`,(0,e.jsx)(n.li,{children:(0,e.jsx)(n.code,{children:\\"ask_nearby_simstnk\\"})}),`\\n`,(0,e.jsx)(n.li,{children:(0,e.jsx)(n.code,{children:\\"ask_nearby_polisi\\"})}),`\\n`]}),`\\n`,(0,e.jsx)(n.p,{children:\\"This NLU can be changed into:\\"}),`\\n`,(0,e.jsxs)(n.p,{children:[\\"NLU name: \\",(0,e.jsx)(n.code,{children:\\"nl-v2\\"})]}),`\\n`,(0,e.jsx)(n.p,{children:(0,e.jsx)(n.strong,{children:\\"First entity\\"})}),`\\n`,(0,e.jsxs)(n.p,{children:[\\"Entity name: \\",(0,e.jsx)(n.code,{children:\\"simstnk\\"})]}),`\\n`,(0,e.jsxs)(n.p,{children:[\\"Entity type: \\",(0,e.jsx)(n.code,{children:\\"dict\\"})]}),`\\n`,(0,e.jsxs)(n.p,{children:[\\"Entity profile: \\",(0,e.jsx)(n.code,{children:\\"default\\"})]}),`\\n`,(0,e.jsxs)(n.p,{children:[\\"Key: \\",(0,e.jsx)(n.code,{children:\\"sim\\"})]}),`\\n`,(0,e.jsx)(n.p,{children:\\"Labels:\\"}),`\\n`,(0,e.jsxs)(n.ul,{children:[`\\n`,(0,e.jsx)(n.li,{children:(0,e.jsx)(n.code,{children:\\"sim\\"})}),`\\n`,(0,e.jsx)(n.li,{children:(0,e.jsx)(n.code,{children:\\"surat izin mengemudi\\"})}),`\\n`]}),`\\n`,(0,e.jsxs)(n.p,{children:[\\"Key: \\",(0,e.jsx)(n.code,{children:\\"stnk\\"})]}),`\\n`,(0,e.jsx)(n.p,{children:\\"Labels:\\"}),`\\n`,(0,e.jsxs)(n.ul,{children:[`\\n`,(0,e.jsx)(n.li,{children:(0,e.jsx)(n.code,{children:\\"stnk\\"})}),`\\n`,(0,e.jsx)(n.li,{children:(0,e.jsx)(n.code,{children:\\"surat tanda kendaraan bermotor\\"})}),`\\n`]}),`\\n`,(0,e.jsx)(n.p,{children:(0,e.jsx)(n.strong,{children:\\"Second entity\\"})}),`\\n`,(0,e.jsxs)(n.p,{children:[\\"Entity name: \\",(0,e.jsx)(n.code,{children:\\"intent\\"})]}),`\\n`,(0,e.jsxs)(n.p,{children:[\\"Entity type: \\",(0,e.jsx)(n.code,{children:\\"trait\\"})]}),`\\n`,(0,e.jsxs)(n.p,{children:[\\"Entity profile: \\",(0,e.jsx)(n.code,{children:\\"intent\\"})]}),`\\n`,(0,e.jsx)(n.p,{children:\\"Labels\\"}),`\\n`,(0,e.jsxs)(n.ul,{children:[`\\n`,(0,e.jsx)(n.li,{children:(0,e.jsx)(n.code,{children:\\"ask_nearby_simstnk\\"})}),`\\n`,(0,e.jsx)(n.li,{children:(0,e.jsx)(n.code,{children:\\"ask_nearby_polisi\\"})}),`\\n`]}),`\\n`,(0,e.jsxs)(n.p,{children:[\\"NLU \\",(0,e.jsx)(n.code,{children:\\"nl-v2\\"}),\\" will make the training process faster because the words \\",(0,e.jsx)(n.code,{children:\\"sim\\"}),\\" and \\",(0,e.jsx)(n.code,{children:\\"stnk\\"}),\\" are in one similar category which is \\",(0,e.jsx)(n.code,{children:\\"simstnk\\"}),\\".\\"]}),`\\n`,(0,e.jsxs)(n.p,{children:[\\"However, there is a case that you need to be aware of. An \\\\u201Cintent\\\\u201D profile \\",(0,e.jsx)(n.strong,{children:\\"can remove\\"}),\\" the detailed information. Here is an example.\\"]}),`\\n`,(0,e.jsx)(n.p,{children:\\"The second example, given training data.\\"}),`\\n`,(0,e.jsx)(n.pre,{children:(0,e.jsxs)(n.code,{className:\\"code-highlight\\",children:[(0,e.jsx)(n.span,{className:\\"code-line\\",children:`resep untuk membuat pizza bbq apa ya? #ask_bbq_recipe\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`pizza pepperoni gimana cara buatnya ya? #ask_pepperoni_recipe\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`kasih tau dong resep pizza aas buatanmu #ask_aas_recipe\\n`})]})}),`\\n`,(0,e.jsx)(n.p,{children:\\"Then, you will have an NLU.\\"}),`\\n`,(0,e.jsxs)(n.p,{children:[\\"NLU name: \\",(0,e.jsx)(n.code,{children:\\"nl-v1\\"})]}),`\\n`,(0,e.jsxs)(n.p,{children:[\\"Entity name: \\",(0,e.jsx)(n.code,{children:\\"intent\\"})]}),`\\n`,(0,e.jsxs)(n.p,{children:[\\"Entity type: \\",(0,e.jsx)(n.code,{children:\\"trait\\"})]}),`\\n`,(0,e.jsxs)(n.p,{children:[\\"Entity profile: \\",(0,e.jsx)(n.code,{children:\\"intent\\"})]}),`\\n`,(0,e.jsx)(n.p,{children:\\"Labels:\\"}),`\\n`,(0,e.jsxs)(n.ul,{children:[`\\n`,(0,e.jsx)(n.li,{children:(0,e.jsx)(n.code,{children:\\"ask_bbq_recipe\\"})}),`\\n`,(0,e.jsx)(n.li,{children:(0,e.jsx)(n.code,{children:\\"ask_pepperoni_recipe\\"})}),`\\n`,(0,e.jsx)(n.li,{children:(0,e.jsx)(n.code,{children:\\"ask_aas_recipe\\"})}),`\\n`]}),`\\n`,(0,e.jsx)(n.p,{children:\\"Next, you change the NLU structure into this:\\"}),`\\n`,(0,e.jsxs)(n.p,{children:[\\"NLU name: \\",(0,e.jsx)(n.code,{children:\\"nl-v2\\"})]}),`\\n`,(0,e.jsx)(n.p,{children:(0,e.jsx)(n.strong,{children:\\"First entity\\"})}),`\\n`,(0,e.jsxs)(n.p,{children:[\\"Entity name: \\",(0,e.jsx)(n.code,{children:\\"pizza\\"})]}),`\\n`,(0,e.jsxs)(n.p,{children:[\\"Entity type: \\",(0,e.jsx)(n.code,{children:\\"dict\\"})]}),`\\n`,(0,e.jsxs)(n.p,{children:[\\"Entity profile: \\",(0,e.jsx)(n.code,{children:\\"default\\"})]}),`\\n`,(0,e.jsxs)(n.p,{children:[\\"Key: \\",(0,e.jsx)(n.code,{children:\\"bbq\\"})]}),`\\n`,(0,e.jsx)(n.p,{children:\\"Labels:\\"}),`\\n`,(0,e.jsxs)(n.ul,{children:[`\\n`,(0,e.jsx)(n.li,{children:(0,e.jsx)(n.code,{children:\\"bbq\\"})}),`\\n`,(0,e.jsx)(n.li,{children:(0,e.jsx)(n.code,{children:\\"barbeque\\"})}),`\\n`,(0,e.jsxs)(n.li,{children:[\\"Key: \\",(0,e.jsx)(n.code,{children:\\"pepperoni\\"})]}),`\\n`]}),`\\n`,(0,e.jsx)(n.p,{children:\\"Labels:\\"}),`\\n`,(0,e.jsxs)(n.ul,{children:[`\\n`,(0,e.jsx)(n.li,{children:(0,e.jsx)(n.code,{children:\\"pepperoni\\"})}),`\\n`,(0,e.jsx)(n.li,{children:(0,e.jsx)(n.code,{children:\\"peperoni\\"})}),`\\n`]}),`\\n`,(0,e.jsxs)(n.p,{children:[\\"Key: \\",(0,e.jsx)(n.code,{children:\\"aas\\"})]}),`\\n`,(0,e.jsx)(n.p,{children:\\"Labels:\\"}),`\\n`,(0,e.jsxs)(n.ul,{children:[`\\n`,(0,e.jsx)(n.li,{children:(0,e.jsx)(n.code,{children:\\"aas\\"})}),`\\n`,(0,e.jsx)(n.li,{children:(0,e.jsx)(n.code,{children:\\"american all star\\"})}),`\\n`]}),`\\n`,(0,e.jsx)(n.p,{children:(0,e.jsx)(n.strong,{children:\\"Second entity\\"})}),`\\n`,(0,e.jsxs)(n.p,{children:[\\"Entity name: \\",(0,e.jsx)(n.code,{children:\\"intent\\"})]}),`\\n`,(0,e.jsxs)(n.p,{children:[\\"Entity type: \\",(0,e.jsx)(n.code,{children:\\"trait\\"})]}),`\\n`,(0,e.jsxs)(n.p,{children:[\\"Entity profile: \\",(0,e.jsx)(n.code,{children:\\"intent\\"})]}),`\\n`,(0,e.jsx)(n.p,{children:\\"Labels:\\"}),`\\n`,(0,e.jsxs)(n.ul,{children:[`\\n`,(0,e.jsx)(n.li,{children:(0,e.jsx)(n.code,{children:\\"ask_bbq_recipe\\"})}),`\\n`,(0,e.jsx)(n.li,{children:(0,e.jsx)(n.code,{children:\\"ask_pepperoni_recipe\\"})}),`\\n`,(0,e.jsx)(n.li,{children:(0,e.jsx)(n.code,{children:\\"ask_aas_recipe\\"})}),`\\n`]}),`\\n`,(0,e.jsxs)(n.p,{children:[\\"The \\",(0,e.jsx)(n.code,{children:\\"intent\\"}),\\" entity in \\",(0,e.jsx)(n.code,{children:\\"nlu-v1\\"}),\\" can recognize the differentiation between labels. Otherwise, \\",(0,e.jsx)(n.code,{children:\\"nl-v2\\"}),\\" cannot acknowledge it because \\",(0,e.jsx)(n.code,{children:\\"bbq\\"}),\\", \\",(0,e.jsx)(n.code,{children:\\"pepperoni\\"}),\\" and \\",(0,e.jsx)(n.code,{children:\\"aas\\"}),\\" are set up as one category \\",(0,e.jsx)(n.code,{children:\\"pizza\\"}),\\". If users input a sentence \\",(0,e.jsx)(n.code,{children:\\"resep buat bbq apa ya?\\"}),\\", the score will show the same results from all labels.\\"]}),`\\n`,(0,e.jsx)(n.p,{children:\\"If you still want to use \\\\u201Cdictionary\\\\u201D type for this second example, you can try this way.\\"}),`\\n`,(0,e.jsxs)(n.p,{children:[\\"NLU name: \\",(0,e.jsx)(n.code,{children:\\"nl-v3\\"})]}),`\\n`,(0,e.jsx)(n.p,{children:(0,e.jsx)(n.strong,{children:\\"First entity\\"})}),`\\n`,(0,e.jsxs)(n.p,{children:[\\"Entity name: \\",(0,e.jsx)(n.code,{children:\\"pizza\\"})]}),`\\n`,(0,e.jsxs)(n.p,{children:[\\"Entity type: \\",(0,e.jsx)(n.code,{children:\\"dict\\"})]}),`\\n`,(0,e.jsxs)(n.p,{children:[\\"Entity profile: \\",(0,e.jsx)(n.code,{children:\\"default\\"})]}),`\\n`,(0,e.jsxs)(n.p,{children:[\\"Key: \\",(0,e.jsx)(n.code,{children:\\"bbq\\"})]}),`\\n`,(0,e.jsx)(n.p,{children:\\"Labels:\\"}),`\\n`,(0,e.jsxs)(n.ul,{children:[`\\n`,(0,e.jsx)(n.li,{children:(0,e.jsx)(n.code,{children:\\"bbq\\"})}),`\\n`,(0,e.jsx)(n.li,{children:(0,e.jsx)(n.code,{children:\\"barbeque\\"})}),`\\n`]}),`\\n`,(0,e.jsxs)(n.p,{children:[\\"Key: \\",(0,e.jsx)(n.code,{children:\\"pepperoni\\"})]}),`\\n`,(0,e.jsx)(n.p,{children:\\"Labels:\\"}),`\\n`,(0,e.jsxs)(n.ul,{children:[`\\n`,(0,e.jsx)(n.li,{children:(0,e.jsx)(n.code,{children:\\"pepperoni\\"})}),`\\n`,(0,e.jsx)(n.li,{children:(0,e.jsx)(n.code,{children:\\"peperoni\\"})}),`\\n`]}),`\\n`,(0,e.jsxs)(n.p,{children:[\\"Key: \\",(0,e.jsx)(n.code,{children:\\"aas\\"})]}),`\\n`,(0,e.jsx)(n.p,{children:\\"Labels:\\"}),`\\n`,(0,e.jsxs)(n.ul,{children:[`\\n`,(0,e.jsx)(n.li,{children:(0,e.jsx)(n.code,{children:\\"aas\\"})}),`\\n`,(0,e.jsx)(n.li,{children:(0,e.jsx)(n.code,{children:\\"american all star\\"})}),`\\n`]}),`\\n`,(0,e.jsx)(n.p,{children:(0,e.jsx)(n.strong,{children:\\"Second entity\\"})}),`\\n`,(0,e.jsxs)(n.p,{children:[\\"Entity name: \\",(0,e.jsx)(n.code,{children:\\"intent\\"})]}),`\\n`,(0,e.jsxs)(n.p,{children:[\\"Entity type: \\",(0,e.jsx)(n.code,{children:\\"trait\\"})]}),`\\n`,(0,e.jsxs)(n.p,{children:[\\"Entity profile: \\",(0,e.jsx)(n.code,{children:\\"intent\\"})]}),`\\n`,(0,e.jsx)(n.p,{children:\\"Labels:\\"}),`\\n`,(0,e.jsxs)(n.ul,{children:[`\\n`,(0,e.jsx)(n.li,{children:(0,e.jsx)(n.code,{children:\\"ask_pizza_recipe\\"})}),`\\n`]}),`\\n`,(0,e.jsxs)(n.p,{children:[\\"The \\",(0,e.jsx)(n.code,{children:\\"nl-v3\\"}),\\" can recognize a sentence has \\",(0,e.jsx)(n.code,{children:\\"ask_pizza_recipe\\"}),\\" intent and can specify which pizza by using \\",(0,e.jsx)(n.code,{children:\\"pizza\\"}),\\" entity.\\"]}),`\\n`,(0,e.jsx)(n.p,{children:\\"This method is helpful to make your bot easy to understand limited words such as product names. Otherwise, this suggestion is not recommended if you\\\\u2019re using generic words.\\"}),`\\n`,(0,e.jsxs)(n.h4,{id:\\"third-suggestion-dividing-nlu\\",children:[(0,e.jsx)(n.a,{className:\\"anchor\\",href:\\"#third-suggestion-dividing-nlu\\",children:(0,e.jsx)(n.span,{className:\\"icon icon-link\\"})}),\\"Third suggestion: Dividing NLU\\"]}),`\\n`,(0,e.jsx)(n.p,{children:\\"A bot can have multiple NLU. Here are a few cases in which NLU can be divided.\\"}),`\\n`,(0,e.jsxs)(n.h5,{id:\\"use-specific-nlu-for-certain-flows\\",children:[(0,e.jsx)(n.a,{className:\\"anchor\\",href:\\"#use-specific-nlu-for-certain-flows\\",children:(0,e.jsx)(n.span,{className:\\"icon icon-link\\"})}),\\"Use specific NLU for certain flows\\"]}),`\\n`,(0,e.jsx)(n.p,{children:\\"Some flows in a bot may have a particular NLU for a flow, which means input to trigger the flow is different from other flows. This way can reduce the number of listed labels in an entity and ease the prediction process. Examples:\\"}),`\\n`,(0,e.jsxs)(n.ul,{children:[`\\n`,(0,e.jsxs)(n.li,{children:[\\"Using \\",(0,e.jsx)(n.code,{children:\\"credential\\"}),\\" NLU which is executed when the user first interacts with the bot.\\"]}),`\\n`,(0,e.jsxs)(n.li,{children:[\\"Using \\",(0,e.jsx)(n.code,{children:\\"order\\"}),\\" NLU in commerce bot will be executed when the user chooses the order menu.\\"]}),`\\n`]}),`\\n`,(0,e.jsxs)(n.h5,{id:\\"use-specific-nlu-for-certain-states\\",children:[(0,e.jsx)(n.a,{className:\\"anchor\\",href:\\"#use-specific-nlu-for-certain-states\\",children:(0,e.jsx)(n.span,{className:\\"icon icon-link\\"})}),\\"Use specific NLU for certain states\\"]}),`\\n`,(0,e.jsx)(n.p,{children:\\"Few states in a bot may have similar input, but have different meanings depending on what states are running. You can configure the NLU in state condition. Examples:\\"}),`\\n`,(0,e.jsxs)(n.ul,{children:[`\\n`,(0,e.jsxs)(n.li,{children:[(0,e.jsx)(n.code,{children:\\"YesNo\\"}),\\" NLU can be used in overall flows but shall be specified in states that require end-users confirmation.\\"]}),`\\n`]}),`\\n`,(0,e.jsxs)(\\"div\\",{className:\\"info\\",children:[(0,e.jsx)(\\"img\\",{className:\\"borderless\\",src:\\"/assets/images/icon-info.svg\\"}),(0,e.jsx)(\\"p\\",{children:(0,e.jsx)(n.p,{children:`Note: You can use these methods if you have too many labels, data between labels are alike, a limited number of\\ntraining data, predictions result is not optimal yet, or found other problems. But if your NLU is fine, you can\\ncreate an entity with many labels.`})})]}),`\\n`,(0,e.jsxs)(n.h3,{id:\\"training-guideline\\",children:[(0,e.jsx)(n.a,{className:\\"anchor\\",href:\\"#training-guideline\\",children:(0,e.jsx)(n.span,{className:\\"icon icon-link\\"})}),\\"Training Guideline\\"]}),`\\n`,(0,e.jsx)(n.p,{children:\\"The training process is required to make a bot response to end-users messages and requires training data.\\"}),`\\n`,(0,e.jsxs)(n.p,{children:[`In NLU, a training process will also train all models (read: entities). For example,\\n`,(0,e.jsx)(n.code,{children:\\"NLU-A\\"}),\\" has \\",(0,e.jsx)(n.code,{children:\\"entity-1\\"}),\\", \\",(0,e.jsx)(n.code,{children:\\"entity-2\\"}),\\", and \\",(0,e.jsx)(n.code,{children:\\"entity-3\\"}),\\". Because each entity owns its models, \\",(0,e.jsx)(n.code,{children:\\"NLU-A\\"}),\\" has 3 models that run individually. If you input training data for \\",(0,e.jsx)(n.code,{children:\\"NLU-A\\"}),\\", you train \\",(0,e.jsx)(n.code,{children:\\"entity-1\\"}),\\", \\",(0,e.jsx)(n.code,{children:\\"entity-2\\"}),\\", and \\",(0,e.jsx)(n.code,{children:\\"entity-3\\"}),\\" models.\\"]}),`\\n`,(0,e.jsx)(n.p,{children:\\"Here are suggestions that you need to consider in the training process\\"}),`\\n`,(0,e.jsxs)(n.h4,{id:\\"add-various-forms-of-language\\",children:[(0,e.jsx)(n.a,{className:\\"anchor\\",href:\\"#add-various-forms-of-language\\",children:(0,e.jsx)(n.span,{className:\\"icon icon-link\\"})}),\\"Add various forms of language\\"]}),`\\n`,(0,e.jsx)(n.p,{children:\\"Input training data with various forms such as formal, informal, slang, long or short sentences. If you only train a form (e.g., formal), then the model may understand formal sentences.\\"}),`\\n`,(0,e.jsxs)(n.h4,{id:\\"avoid-imbalanced-data-between-labels\\",children:[(0,e.jsx)(n.a,{className:\\"anchor\\",href:\\"#avoid-imbalanced-data-between-labels\\",children:(0,e.jsx)(n.span,{className:\\"icon icon-link\\"})}),\\"Avoid imbalanced data between labels\\"]}),`\\n`,(0,e.jsx)(n.p,{children:\\"The imbalanced data affect bias between labels. A small amount of imbalanced data is not a problem. However, if you have a large amount of imbalanced data, the predictions result too significant on specific labels and a bias.\\"}),`\\n`,(0,e.jsxs)(n.h4,{id:\\"add-counter-training\\",children:[(0,e.jsx)(n.a,{className:\\"anchor\\",href:\\"#add-counter-training\\",children:(0,e.jsx)(n.span,{className:\\"icon icon-link\\"})}),\\"Add \\\\u201Ccounter-training\\\\u201D\\"]}),`\\n`,(0,e.jsx)(n.p,{children:\\"Counter-training means you input training data that is not classified to current labels. For example,\\"}),`\\n`,(0,e.jsxs)(n.ul,{children:[`\\n`,(0,e.jsxs)(n.li,{children:[\\"You have an entity that can predict book genres into 3 categories (read: labels) \\",(0,e.jsx)(n.code,{children:\\"horror\\"}),\\", \\",(0,e.jsx)(n.code,{children:\\"fiction\\"}),\\", and \\",(0,e.jsx)(n.code,{children:\\"biography\\"}),\\". Each label has been trained and can recognize each genre.\\"]}),`\\n`,(0,e.jsxs)(n.li,{children:[\\"Then, an input is entered with a new category named \\",(0,e.jsx)(n.code,{children:\\"history\\"}),\\".\\"]}),`\\n`,(0,e.jsxs)(n.li,{children:[\\"Because the model only distinguishes between the 3 labels and assumes that each book must be categorized into 3 labels, the model cannot answer not \\",(0,e.jsx)(n.code,{children:\\"all three\\"}),\\" or \\",(0,e.jsx)(n.code,{children:\\"none\\"}),\\".\\"]}),`\\n`]}),`\\n`,(0,e.jsxs)(n.p,{children:[\\"To make the model understand \\",(0,e.jsx)(n.code,{children:\\"history\\"}),\\" input, you have to enter training data without giving any intent/tags.\\"]}),`\\n`,(0,e.jsxs)(n.h4,{id:\\"add-a-new-label-to-the-trained-entity\\",children:[(0,e.jsx)(n.a,{className:\\"anchor\\",href:\\"#add-a-new-label-to-the-trained-entity\\",children:(0,e.jsx)(n.span,{className:\\"icon icon-link\\"})}),\\"Add a new label to the trained entity\\"]}),`\\n`,(0,e.jsx)(n.p,{children:\\"If you want to add a new label, train the label with a similar total amount of training with current labels. For example,\\"}),`\\n`,(0,e.jsxs)(n.ul,{children:[`\\n`,(0,e.jsx)(n.li,{children:\\"You have an entity with 5 labels. Each label has 10 training data.\\"}),`\\n`,(0,e.jsx)(n.li,{children:\\"Then, you add a new label. Your next step will be to train the label equal to or more than 10 training data.\\"}),`\\n`,(0,e.jsx)(n.li,{children:\\"The final step is to train the other 5 labels with a few training data.\\"}),`\\n`]}),`\\n`,(0,e.jsxs)(n.h4,{id:\\"ambiguous-data\\",children:[(0,e.jsx)(n.a,{className:\\"anchor\\",href:\\"#ambiguous-data\\",children:(0,e.jsx)(n.span,{className:\\"icon icon-link\\"})}),\\"Ambiguous data\\"]}),`\\n`,(0,e.jsx)(n.p,{children:\\"Avoid preparing ambiguous training data into different labels. Ambiguous data means you input the same training data, but the context depends on what end-users asked. For example,\\"}),`\\n`,(0,e.jsxs)(n.ul,{children:[`\\n`,(0,e.jsxs)(n.li,{children:[\\"End-user sends the word \\",(0,e.jsx)(n.code,{children:\\"sudah\\"}),\\" if your bot asks a question about \\",(0,e.jsx)(n.code,{children:\\"apakah sudah makan?\\"}),\\" (Smalltalk flow) or \\",(0,e.jsx)(n.code,{children:\\"apakah sudah menikah?\\"}),\\" (Credential flow).\\"]}),`\\n`,(0,e.jsxs)(n.li,{children:[\\"Both sentences can be recognized as \\",(0,e.jsx)(n.code,{children:\\"intent:doneEating\\"}),\\" (read: entity \\",(0,e.jsx)(n.code,{children:\\"intent\\"}),\\" with label \\",(0,e.jsx)(n.code,{children:\\"doneEating\\"}),\\") or \\",(0,e.jsx)(n.code,{children:\\"intent:married\\"}),\\" (read: entity \\",(0,e.jsx)(n.code,{children:\\"intent\\"}),\\" with label \\",(0,e.jsx)(n.code,{children:\\"married\\"}),\\").\\"]}),`\\n`]}),`\\n`,(0,e.jsx)(n.p,{children:\\"To reduce this ambiguity case, you shall prepare training data as follows\\"}),`\\n`,(0,e.jsxs)(n.ul,{children:[`\\n`,(0,e.jsxs)(n.li,{children:[\\"Input training data such as \\",(0,e.jsx)(n.code,{children:\\"sudah menikah\\"}),\\" in \\",(0,e.jsx)(n.code,{children:\\"intent: married\\"}),\\". There is an additional word \\",(0,e.jsx)(n.code,{children:\\"menikah\\"}),\\" that could distinguish the labels.\\"]}),`\\n`,(0,e.jsxs)(n.li,{children:[\\"For the word \\",(0,e.jsx)(n.code,{children:\\"sudah\\"}),\\", train it to a different label such as \\",(0,e.jsx)(n.code,{children:\\"intent:done\\"}),\\". For the bot implementation, you shall put a condition \\",(0,e.jsx)(n.code,{children:\\"intent == \\\\u201Cdone\\\\u201D\\"}),\\" for states executed when end-users said \\",(0,e.jsx)(n.code,{children:\\"sudah\\"}),\\" word.\\"]}),`\\n`]}),`\\n`,(0,e.jsxs)(n.h3,{id:\\"relationship-between-bot-nl-and-training-process\\",children:[(0,e.jsx)(n.a,{className:\\"anchor\\",href:\\"#relationship-between-bot-nl-and-training-process\\",children:(0,e.jsx)(n.span,{className:\\"icon icon-link\\"})}),\\"Relationship between bot, NL, and training process.\\"]}),`\\n`,(0,e.jsxs)(n.ul,{children:[`\\n`,(0,e.jsxs)(n.li,{children:[(0,e.jsx)(n.strong,{children:\\"Bot development\\"}),\\", \\",(0,e.jsx)(n.strong,{children:\\"used NL in bot\\"}),\\", and \\",(0,e.jsx)(n.strong,{children:\\"training process is influencing each other\\"}),\\". Bot implementation can process some limitations encountered in NL results through the bot.\\"]}),`\\n`,(0,e.jsxs)(n.li,{children:[(0,e.jsx)(n.strong,{children:\\"NL complexity is affected by bot complexity\\"}),\\". So, the more complex a bot, the more complex the NL will be and the more training data.\\"]}),`\\n`,(0,e.jsxs)(n.li,{children:[\\"For NL, \\",(0,e.jsx)(n.strong,{children:\\"it is possible to mispredict a few data\\"}),\\". It is a \\",(0,e.jsx)(n.strong,{children:\\"usual\\"}),\\" case. You can solve this by adding training data or post-processing in the bot.\\"]}),`\\n`]}),`\\n`,(0,e.jsxs)(n.p,{children:[\\"This is the end of the guidance. You can contact \\",(0,e.jsx)(n.a,{href:\\"mailto:support@kata.ai\\",children:\\"support@kata.ai\\"}),\\" if you have any difficulties when implementing this.\\"]})]})}}var v=k;function L(i,t){throw new Error(\\"Expected \\"+(t?\\"component\\":\\"object\\")+\\" `\\"+i+\\"` to be defined: you likely forgot to import, pass, or provide it.\\")}return w(U);})();\\n;return Component;"},"_id":"kata-platform/how-to/how-to-improve-your-chatbot-intelligence-by-training-your-nlu.mdx","_raw":{"sourceFilePath":"kata-platform/how-to/how-to-improve-your-chatbot-intelligence-by-training-your-nlu.mdx","sourceFileName":"how-to-improve-your-chatbot-intelligence-by-training-your-nlu.mdx","sourceFileDir":"kata-platform/how-to","contentType":"mdx","flattenedPath":"kata-platform/how-to/how-to-improve-your-chatbot-intelligence-by-training-your-nlu"},"type":"KataPlatform","slug":["how-to","how-to-improve-your-chatbot-intelligence-by-training-your-nlu"],"excerpt":"\\n## Introduction\\n\\nNatural Language Understanding (NLU) is a computer\'s ability to transform a text message into a structured object. In the Kata Platform, NLU is a place for users to design and build their NLU capability for their conversational AI product"}');
;// CONCATENATED MODULE: ./.contentlayer/generated/KataPlatform/kata-platform__how-to__how-to-use-bulk-training-for-faster-training-process.mdx.json
const kata_platform_how_to_how_to_use_bulk_training_for_faster_training_process_mdx_namespaceObject = JSON.parse('{"id":"how-to-use-bulk-training-for-faster-training-process","section":"How To","title":"How to Use Bulk Training to the Faster Training Process","prev":"how-to-use-training-data-generator-to-automate-generating-training-data","next":"using-sync-api-to-access-third-party-application","body":{"raw":"\\n## What is Bulk Training\\n\\nGreat NL models are a fundamental part of making a great chatbot and approximately 70% of all chatbot projects use NL models instead of a keyword-based approach, based on our Kata.ai projects data.\\n\\nPreviously, the bulk training process was very technical because developers needed to use KataCLI and view the results on the Platform GUI (<a href=\\"https://platform.kata.ai\\" target=\\"_blank\\"><span>http</span>s://platform.kata.ai</a>). This back and forth switching of tools was required to do training.\\n\\nNow, you can use the new Bulk Training on the Platform GUI itself to train more than 200 sentences/training data at once. These are the screenshots of our newest feature.\\n\\n{\' \'}\\n\\n<FigureImage\\n  alt=\\"Image 1 Alt\\"\\n  src=\\"/assets/images/products/kata-platform/how-to/how-to-use-bulk-training-to-the-faster-training-process/image1.webp\\"\\n  caption={{ title: \'Figure 1\', description: \'Upload training data file\' }}\\n  layout=\\"responsive\\"\\n  naturalHeight={512}\\n  naturalWidth={550}\\n/>\\n\\n{\' \'}\\n\\n<FigureImage\\n  alt=\\"Image 2 Alt\\"\\n  src=\\"/assets/images/products/kata-platform/how-to/how-to-use-bulk-training-to-the-faster-training-process/image2.webp\\"\\n  caption={{ title: \'Figure 2\', description: \'Preview from uploaded training data from file\' }}\\n  layout=\\"responsive\\"\\n  naturalHeight={662}\\n  naturalWidth={1816}\\n/>\\n\\nYou can click on this <a href=\\"https://www.youtube.com/watch?v=qcxQqMI-Khs\\" target=\\"_blank\\">video tutorial</a> or go to the **NLU -> Training menu** (check the screenshot below).\\n\\n{\' \'}\\n\\n<FigureImage\\n  alt=\\"Image 3 Alt\\"\\n  src=\\"/assets/images/products/kata-platform/how-to/how-to-use-bulk-training-to-the-faster-training-process/image3.webp\\"\\n  caption={{ title: \'Figure 3\', description: \'Video tutorial in bulk training\' }}\\n  layout=\\"responsive\\"\\n  naturalHeight={1306}\\n  naturalWidth={1999}\\n/>\\n\\n## How Bulk Training Might Help You?\\n\\nTraining NL models is one of the most time-consuming processes in chatbot development, which could take approximately 6 weeks. On average, a complex chatbot project requires 1,000 data for their NL models. It’s not ideal to train the sentences one by one, as a typical 1,000-sentence NL model would easily take more than 4 hours to train.\\n\\nHence, bulk training can significantly reduce the training effort with a simplified user flow\\n\\n## How to Use Bulk Training\\n\\n### Create a Project\\n\\nMission: Create a new project.\\nPrerequisite: You already have a Platform account and have logged in.\\n\\n1. Click on the **Create Project** button.\\n2. Fill in the required fields for the project.\\n3. Click **Create Project**.\\n\\n### Create Entities And Labels With Type \\"trait\\"\\n\\nMission: Create NL models to be trained and type entity “trait”. Learn more about entity type “trait”.\\nPrerequisites: You already have a project.\\n\\n1. Go to **NLU**.\\n2. Click on **Entities**.\\n3. Click the **Create Entity** button to start creating entities and labels. Learn more about entities and labels or you may want to explore how to design the NLU.\\n4. Fill in fields with this example.\\n\\n```\\nEntity name: intent\\nType: trait\\nProfile: default - Text classification\\n```\\n\\n5. To create labels, you need to type and press “enter” to save a new label. Fill in with these examples.\\n\\n```\\nLabels: greetings, thank you\\n```\\n\\n6. The result goes here:\\n\\n{\' \'}\\n\\n<FigureImage\\n  alt=\\"Image 4 Alt\\"\\n  src=\\"/assets/images/products/kata-platform/how-to/how-to-use-bulk-training-to-the-faster-training-process/image4.webp\\"\\n  caption={{ title: \'Figure 4\', description: \'Create entity type “trait”\' }}\\n  layout=\\"responsive\\"\\n  naturalHeight={1260}\\n  naturalWidth={1999}\\n/>\\n\\n7. Click **Create** to create a new entity with \\"greetings\\" and \\"thank you\\" labels.\\n\\n### Create Entities And Labels With Type \\"phrase\\"\\n\\nMission: Create NL models to be trained and type entity “phrase”. Learn more about entity type “trait”.\\nPrerequisites: You already have a project.\\n\\n1. Click the **Create Entity** button to start creating entities and labels. Learn more about entities and labels or you may want to explore how to design the NLU\\n2. Fill in fields with these examples:\\n\\n```\\nEntity name: object\\nType: phrase\\nProfile: default - Default phrase\\n```\\n\\n3. To create labels, you need to type and press “enter” to save a new pile. Fill in with this example:\\n\\n```\\nLabels: person\\n```\\n\\n4. The result goes here:\\n\\n{\' \'}\\n\\n<FigureImage\\n  alt=\\"Image 5 Alt\\"\\n  src=\\"/assets/images/products/kata-platform/how-to/how-to-use-bulk-training-to-the-faster-training-process/image5.webp\\"\\n  caption={{ title: \'Figure 5\', description: \'Create entity type “phrase”\' }}\\n  layout=\\"responsive\\"\\n  naturalHeight={1222}\\n  naturalWidth={1999}\\n/>\\n\\n### Guideline to Create a Training Data\\n\\nBefore we use the NL bulk training, we will create training data using a simple syntax. “#’ for entity type “trait” and “@” for entity type “phrase”. Learn more about entity type “trait” and entity type “phrase”.\\n\\nThis syntax is only allowed for entity type “trait”\\n\\n```\\nSaya mau pesan pizza #intent:order\\n```\\n\\nThis means that the sentence is classified into **entity name: intent** with **label: order**\\n\\n```\\nTotalnya berapa ya? #intent:ask #questionType:how_much\\n```\\n\\nThis means that the sentence is classified into **entity name: intent** with **label: order** and **entity name: questionType** with **label: how_much**\\n\\nThis syntax is only allowed for entity type “phrase”\\n\\n```\\nSaya mau pesan tiket ke (@destination Malang) atas nama (@ner:person Budi) #intent:order\\n```\\n\\nThis means that the word “Malang” is tagged for **entity name: destination** and “Budi” is tagged for **entity name: ner** with **label: person**\\n\\n### Create New Training Data\\n\\nMission: Create new training data in a .txt extension file. In this step, you will need to open a text and source code editor such as Notepad (in Windows), <a href=\\"https://notepad-plus-plus.org/downloads/\\" target=\\"_blank\\">notepad++</a>, <a href=\\"https://www.sublimetext.com/\\" target=\\"_blank\\">Sublime</a>, etc.\\nPrerequisites: You already have a project and entities.\\n\\n1. Open your text and source code editor (Notepad, notepad++, sublime, etc.)\\n2. Create a new file.\\n3. Type following sentences example to create training data to train our NL models. You can add up to 200 sentences/training data. Or, you can download <a href=\\"https://drive.google.com/file/d/1ErLuDwa6_1hyfnV7zVNBrlleE7l3KCb0/view\\" target=\\"_blank\\">this example</a>.\\n\\n```\\nselamat pagi #intent:greetings\\nwelcome #intent:greetings\\nnama saya (@object:person amanda), salam kenal ya #intent:greetings\\nkemarin saya lihat (@object:person amanda) dan (@object:person rizyan) bercengkerama\\nhari ini cerah ya kata (@object:person destri)\\nmorning everyone!! #intent:greetings\\n```\\n\\n4. Save the following training data into a file named: training-data-example.txt\\n\\n### Upload Training Data And Perform Data Training\\n\\nMission: Upload training data to be previewed in Platform GUI.\\nPrerequisites: Training data has been created as a .txt extension file.\\n\\n1. Go to **NLU > Training** in Platform.\\n2. Click on the **Bulk Training** button.\\n3. Click on **Browse** button to open the file explorer/finder or drag and drop the file into the browse file dialog.\\n4. Wait for the upload process.\\n5. After the upload is complete, you can review the training data file in Platform GUI.\\n\\n{\' \'}\\n\\n<FigureImage\\n  alt=\\"Image 6 Alt\\"\\n  src=\\"/assets/images/products/kata-platform/how-to/how-to-use-bulk-training-to-the-faster-training-process/image6.webp\\"\\n  caption={{ title: \'Figure 6\', description: \'Preview training data\' }}\\n  layout=\\"responsive\\"\\n  naturalHeight={1125}\\n  naturalWidth={1999}\\n/>\\n\\n6. Click on the **Train** button to train the data.\\n7. You will see a customer satisfaction survey after using the feature.\\n8. Fill in the survey, then click **X** to close the dialog.\\n9. You have successfully trained your NL model with the uploaded data.\\n\\n{\' \'}\\n\\n<FigureImage\\n  alt=\\"Image 7 Alt\\"\\n  src=\\"/assets/images/products/kata-platform/how-to/how-to-use-bulk-training-to-the-faster-training-process/image7.webp\\"\\n  caption={{ title: \'Figure 7\', description: \'Successfully trained the training data\' }}\\n  layout=\\"responsive\\"\\n  naturalHeight={1261}\\n  naturalWidth={1999}\\n/>\\n\\n## Error Messages\\n\\nDuring the upload process, you might receive any of the error messages below. Let’s see what they are and how to solve each one of the errors.\\n\\n### Your File Won’t Be Uploaded if You Close The Dialog Box Now.\\n\\nIt will show if you’re trying to close the upload dialog box or click the **X** symbol during the file uploading process. Please do not click the **X** button.\\n\\n{\' \'}\\n\\n<FigureImage\\n  alt=\\"Image 8 Alt\\"\\n  src=\\"/assets/images/products/kata-platform/how-to/how-to-use-bulk-training-to-the-faster-training-process/image8.webp\\"\\n  caption={{ title: \'Figure 8\', description: \'Showing warning message if you click “x” button.\' }}\\n  layout=\\"responsive\\"\\n  naturalHeight={1306}\\n  naturalWidth={1999}\\n/>\\n\\n### Invalid File Format. Only .txt Files Are Supported.\\n\\nThis error message will be displayed if you uploaded different types of files. Bulk Training feature only accept .txt file format.\\n\\n{\' \'}\\n\\n<FigureImage\\n  alt=\\"Image 9 Alt\\"\\n  src=\\"/assets/images/products/kata-platform/how-to/how-to-use-bulk-training-to-the-faster-training-process/image9.webp\\"\\n  caption={{ title: \'Figure 9\', description: \'Showing error message if you’re uploading not .txt format.\' }}\\n  layout=\\"responsive\\"\\n  naturalHeight={1306}\\n  naturalWidth={1999}\\n/>\\n\\n### Your .txt File is Empty\\n\\nIf you uploaded an empty .txt file, this error message will be shown. Please check and make sure you have written the data training content in the .txt file. For more about the data training file format, please refer to the [#guideline-to-create-a-training-data](guideline to create training data).\\n\\n{\' \'}\\n\\n<FigureImage\\n  alt=\\"Image 10 Alt\\"\\n  src=\\"/assets/images/products/kata-platform/how-to/how-to-use-bulk-training-to-the-faster-training-process/image10.webp\\"\\n  caption={{ title: \'Figure 10\', description: \'Showing error that your file does not have any script inside it.\' }}\\n  layout=\\"responsive\\"\\n  naturalHeight={1306}\\n  naturalWidth={1999}\\n/>\\n\\n### Your Connection Was Interrupted. Please Check Your Connection. Try again.\\n\\nIf your internet connection was interrupted during the upload process, this error message will be shown. Please make sure that your internet connection is stable and re-upload the data training file again.\\n\\n{\' \'}\\n\\n<FigureImage\\n  alt=\\"Image 11 Alt\\"\\n  src=\\"/assets/images/products/kata-platform/how-to/how-to-use-bulk-training-to-the-faster-training-process/image11.webp\\"\\n  caption={{\\n    title: \'Figure 11\',\\n    description:\\n      \'Showing error message that your connection is bad and has interrupted training data uploading process.\',\\n  }}\\n  layout=\\"responsive\\"\\n  naturalHeight={1306}\\n  naturalWidth={1999}\\n/>\\n\\n### The .txt File Contains Entities or Labels That You Don\'t Currently Have. Please Check Your File or Entities.\\n\\nThis error message will be displayed if your data training file contains no entities or labels that matched your current entities on the project. Please check your NL project then go to the entities menu and create the entities or labels that you want to train with the Bulk Training feature.\\n\\nThis is the end of the guidance. You can contact <a href=\\"mailto:support@kata.ai\\">support@kata.ai</a> if you have any difficulties when implementing this.\\n","code":"var Component=(()=>{var d=Object.create;var o=Object.defineProperty;var p=Object.getOwnPropertyDescriptor;var u=Object.getOwnPropertyNames;var g=Object.getPrototypeOf,m=Object.prototype.hasOwnProperty;var l=t=>o(t,\\"__esModule\\",{value:!0});var f=(t,a)=>()=>(a||t((a={exports:{}}).exports,a),a.exports),y=(t,a)=>{for(var r in a)o(t,r,{get:a[r],enumerable:!0})},s=(t,a,r,n)=>{if(a&&typeof a==\\"object\\"||typeof a==\\"function\\")for(let i of u(a))!m.call(t,i)&&(r||i!==\\"default\\")&&o(t,i,{get:()=>a[i],enumerable:!(n=p(a,i))||n.enumerable});return t},w=(t,a)=>s(l(o(t!=null?d(g(t)):{},\\"default\\",!a&&t&&t.__esModule?{get:()=>t.default,enumerable:!0}:{value:t,enumerable:!0})),t),b=(t=>(a,r)=>t&&t.get(a)||(r=s(l({}),a,1),t&&t.set(a,r),r))(typeof WeakMap!=\\"undefined\\"?new WeakMap:0);var h=f((F,c)=>{c.exports=_jsx_runtime});var T={};y(T,{default:()=>x,frontmatter:()=>k});var e=w(h()),k={id:\\"how-to-use-bulk-training-for-faster-training-process\\",title:\\"How to Use Bulk Training to the Faster Training Process\\",prev:\\"how-to-use-training-data-generator-to-automate-generating-training-data\\",next:\\"using-sync-api-to-access-third-party-application\\",section:\\"How To\\"};function N(t={}){let{wrapper:a}=t.components||{};return a?(0,e.jsx)(a,Object.assign({},t,{children:(0,e.jsx)(r,{})})):r();function r(){let n=Object.assign({h2:\\"h2\\",a:\\"a\\",span:\\"span\\",p:\\"p\\",strong:\\"strong\\",h3:\\"h3\\",ol:\\"ol\\",li:\\"li\\",pre:\\"pre\\",code:\\"code\\"},t.components),{FigureImage:i}=n;return i||v(\\"FigureImage\\",!0),(0,e.jsxs)(e.Fragment,{children:[(0,e.jsxs)(n.h2,{id:\\"what-is-bulk-training\\",children:[(0,e.jsx)(n.a,{className:\\"anchor\\",href:\\"#what-is-bulk-training\\",children:(0,e.jsx)(n.span,{className:\\"icon icon-link\\"})}),\\"What is Bulk Training\\"]}),`\\n`,(0,e.jsx)(n.p,{children:\\"Great NL models are a fundamental part of making a great chatbot and approximately 70% of all chatbot projects use NL models instead of a keyword-based approach, based on our Kata.ai projects data.\\"}),`\\n`,(0,e.jsxs)(n.p,{children:[\\"Previously, the bulk training process was very technical because developers needed to use KataCLI and view the results on the Platform GUI (\\",(0,e.jsxs)(\\"a\\",{href:\\"https://platform.kata.ai\\",target:\\"_blank\\",children:[(0,e.jsx)(\\"span\\",{children:\\"http\\"}),\\"s://platform.kata.ai\\"]}),\\"). This back and forth switching of tools was required to do training.\\"]}),`\\n`,(0,e.jsx)(n.p,{children:\\"Now, you can use the new Bulk Training on the Platform GUI itself to train more than 200 sentences/training data at once. These are the screenshots of our newest feature.\\"}),`\\n`,\\" \\",`\\n`,(0,e.jsx)(i,{alt:\\"Image 1 Alt\\",src:\\"/assets/images/products/kata-platform/how-to/how-to-use-bulk-training-to-the-faster-training-process/image1.webp\\",caption:{title:\\"Figure 1\\",description:\\"Upload training data file\\"},layout:\\"responsive\\",naturalHeight:512,naturalWidth:550}),`\\n`,\\" \\",`\\n`,(0,e.jsx)(i,{alt:\\"Image 2 Alt\\",src:\\"/assets/images/products/kata-platform/how-to/how-to-use-bulk-training-to-the-faster-training-process/image2.webp\\",caption:{title:\\"Figure 2\\",description:\\"Preview from uploaded training data from file\\"},layout:\\"responsive\\",naturalHeight:662,naturalWidth:1816}),`\\n`,(0,e.jsxs)(n.p,{children:[\\"You can click on this \\",(0,e.jsx)(\\"a\\",{href:\\"https://www.youtube.com/watch?v=qcxQqMI-Khs\\",target:\\"_blank\\",children:\\"video tutorial\\"}),\\" or go to the \\",(0,e.jsx)(n.strong,{children:\\"NLU -> Training menu\\"}),\\" (check the screenshot below).\\"]}),`\\n`,\\" \\",`\\n`,(0,e.jsx)(i,{alt:\\"Image 3 Alt\\",src:\\"/assets/images/products/kata-platform/how-to/how-to-use-bulk-training-to-the-faster-training-process/image3.webp\\",caption:{title:\\"Figure 3\\",description:\\"Video tutorial in bulk training\\"},layout:\\"responsive\\",naturalHeight:1306,naturalWidth:1999}),`\\n`,(0,e.jsxs)(n.h2,{id:\\"how-bulk-training-might-help-you\\",children:[(0,e.jsx)(n.a,{className:\\"anchor\\",href:\\"#how-bulk-training-might-help-you\\",children:(0,e.jsx)(n.span,{className:\\"icon icon-link\\"})}),\\"How Bulk Training Might Help You?\\"]}),`\\n`,(0,e.jsx)(n.p,{children:\\"Training NL models is one of the most time-consuming processes in chatbot development, which could take approximately 6 weeks. On average, a complex chatbot project requires 1,000 data for their NL models. It\\\\u2019s not ideal to train the sentences one by one, as a typical 1,000-sentence NL model would easily take more than 4 hours to train.\\"}),`\\n`,(0,e.jsx)(n.p,{children:\\"Hence, bulk training can significantly reduce the training effort with a simplified user flow\\"}),`\\n`,(0,e.jsxs)(n.h2,{id:\\"how-to-use-bulk-training\\",children:[(0,e.jsx)(n.a,{className:\\"anchor\\",href:\\"#how-to-use-bulk-training\\",children:(0,e.jsx)(n.span,{className:\\"icon icon-link\\"})}),\\"How to Use Bulk Training\\"]}),`\\n`,(0,e.jsxs)(n.h3,{id:\\"create-a-project\\",children:[(0,e.jsx)(n.a,{className:\\"anchor\\",href:\\"#create-a-project\\",children:(0,e.jsx)(n.span,{className:\\"icon icon-link\\"})}),\\"Create a Project\\"]}),`\\n`,(0,e.jsx)(n.p,{children:`Mission: Create a new project.\\nPrerequisite: You already have a Platform account and have logged in.`}),`\\n`,(0,e.jsxs)(n.ol,{children:[`\\n`,(0,e.jsxs)(n.li,{children:[\\"Click on the \\",(0,e.jsx)(n.strong,{children:\\"Create Project\\"}),\\" button.\\"]}),`\\n`,(0,e.jsx)(n.li,{children:\\"Fill in the required fields for the project.\\"}),`\\n`,(0,e.jsxs)(n.li,{children:[\\"Click \\",(0,e.jsx)(n.strong,{children:\\"Create Project\\"}),\\".\\"]}),`\\n`]}),`\\n`,(0,e.jsxs)(n.h3,{id:\\"create-entities-and-labels-with-type-trait\\",children:[(0,e.jsx)(n.a,{className:\\"anchor\\",href:\\"#create-entities-and-labels-with-type-trait\\",children:(0,e.jsx)(n.span,{className:\\"icon icon-link\\"})}),\'Create Entities And Labels With Type \\"trait\\"\']}),`\\n`,(0,e.jsx)(n.p,{children:`Mission: Create NL models to be trained and type entity \\\\u201Ctrait\\\\u201D. Learn more about entity type \\\\u201Ctrait\\\\u201D.\\nPrerequisites: You already have a project.`}),`\\n`,(0,e.jsxs)(n.ol,{children:[`\\n`,(0,e.jsxs)(n.li,{children:[\\"Go to \\",(0,e.jsx)(n.strong,{children:\\"NLU\\"}),\\".\\"]}),`\\n`,(0,e.jsxs)(n.li,{children:[\\"Click on \\",(0,e.jsx)(n.strong,{children:\\"Entities\\"}),\\".\\"]}),`\\n`,(0,e.jsxs)(n.li,{children:[\\"Click the \\",(0,e.jsx)(n.strong,{children:\\"Create Entity\\"}),\\" button to start creating entities and labels. Learn more about entities and labels or you may want to explore how to design the NLU.\\"]}),`\\n`,(0,e.jsx)(n.li,{children:\\"Fill in fields with this example.\\"}),`\\n`]}),`\\n`,(0,e.jsx)(n.pre,{children:(0,e.jsxs)(n.code,{className:\\"code-highlight\\",children:[(0,e.jsx)(n.span,{className:\\"code-line\\",children:`Entity name: intent\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`Type: trait\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`Profile: default - Text classification\\n`})]})}),`\\n`,(0,e.jsxs)(n.ol,{start:\\"5\\",children:[`\\n`,(0,e.jsx)(n.li,{children:\\"To create labels, you need to type and press \\\\u201Center\\\\u201D to save a new label. Fill in with these examples.\\"}),`\\n`]}),`\\n`,(0,e.jsx)(n.pre,{children:(0,e.jsx)(n.code,{className:\\"code-highlight\\",children:(0,e.jsx)(n.span,{className:\\"code-line\\",children:`Labels: greetings, thank you\\n`})})}),`\\n`,(0,e.jsxs)(n.ol,{start:\\"6\\",children:[`\\n`,(0,e.jsx)(n.li,{children:\\"The result goes here:\\"}),`\\n`]}),`\\n`,\\" \\",`\\n`,(0,e.jsx)(i,{alt:\\"Image 4 Alt\\",src:\\"/assets/images/products/kata-platform/how-to/how-to-use-bulk-training-to-the-faster-training-process/image4.webp\\",caption:{title:\\"Figure 4\\",description:\\"Create entity type \\\\u201Ctrait\\\\u201D\\"},layout:\\"responsive\\",naturalHeight:1260,naturalWidth:1999}),`\\n`,(0,e.jsxs)(n.ol,{start:\\"7\\",children:[`\\n`,(0,e.jsxs)(n.li,{children:[\\"Click \\",(0,e.jsx)(n.strong,{children:\\"Create\\"}),\' to create a new entity with \\"greetings\\" and \\"thank you\\" labels.\']}),`\\n`]}),`\\n`,(0,e.jsxs)(n.h3,{id:\\"create-entities-and-labels-with-type-phrase\\",children:[(0,e.jsx)(n.a,{className:\\"anchor\\",href:\\"#create-entities-and-labels-with-type-phrase\\",children:(0,e.jsx)(n.span,{className:\\"icon icon-link\\"})}),\'Create Entities And Labels With Type \\"phrase\\"\']}),`\\n`,(0,e.jsx)(n.p,{children:`Mission: Create NL models to be trained and type entity \\\\u201Cphrase\\\\u201D. Learn more about entity type \\\\u201Ctrait\\\\u201D.\\nPrerequisites: You already have a project.`}),`\\n`,(0,e.jsxs)(n.ol,{children:[`\\n`,(0,e.jsxs)(n.li,{children:[\\"Click the \\",(0,e.jsx)(n.strong,{children:\\"Create Entity\\"}),\\" button to start creating entities and labels. Learn more about entities and labels or you may want to explore how to design the NLU\\"]}),`\\n`,(0,e.jsx)(n.li,{children:\\"Fill in fields with these examples:\\"}),`\\n`]}),`\\n`,(0,e.jsx)(n.pre,{children:(0,e.jsxs)(n.code,{className:\\"code-highlight\\",children:[(0,e.jsx)(n.span,{className:\\"code-line\\",children:`Entity name: object\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`Type: phrase\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`Profile: default - Default phrase\\n`})]})}),`\\n`,(0,e.jsxs)(n.ol,{start:\\"3\\",children:[`\\n`,(0,e.jsx)(n.li,{children:\\"To create labels, you need to type and press \\\\u201Center\\\\u201D to save a new pile. Fill in with this example:\\"}),`\\n`]}),`\\n`,(0,e.jsx)(n.pre,{children:(0,e.jsx)(n.code,{className:\\"code-highlight\\",children:(0,e.jsx)(n.span,{className:\\"code-line\\",children:`Labels: person\\n`})})}),`\\n`,(0,e.jsxs)(n.ol,{start:\\"4\\",children:[`\\n`,(0,e.jsx)(n.li,{children:\\"The result goes here:\\"}),`\\n`]}),`\\n`,\\" \\",`\\n`,(0,e.jsx)(i,{alt:\\"Image 5 Alt\\",src:\\"/assets/images/products/kata-platform/how-to/how-to-use-bulk-training-to-the-faster-training-process/image5.webp\\",caption:{title:\\"Figure 5\\",description:\\"Create entity type \\\\u201Cphrase\\\\u201D\\"},layout:\\"responsive\\",naturalHeight:1222,naturalWidth:1999}),`\\n`,(0,e.jsxs)(n.h3,{id:\\"guideline-to-create-a-training-data\\",children:[(0,e.jsx)(n.a,{className:\\"anchor\\",href:\\"#guideline-to-create-a-training-data\\",children:(0,e.jsx)(n.span,{className:\\"icon icon-link\\"})}),\\"Guideline to Create a Training Data\\"]}),`\\n`,(0,e.jsx)(n.p,{children:\\"Before we use the NL bulk training, we will create training data using a simple syntax. \\\\u201C#\\\\u2019 for entity type \\\\u201Ctrait\\\\u201D and \\\\u201C@\\\\u201D for entity type \\\\u201Cphrase\\\\u201D. Learn more about entity type \\\\u201Ctrait\\\\u201D and entity type \\\\u201Cphrase\\\\u201D.\\"}),`\\n`,(0,e.jsx)(n.p,{children:\\"This syntax is only allowed for entity type \\\\u201Ctrait\\\\u201D\\"}),`\\n`,(0,e.jsx)(n.pre,{children:(0,e.jsx)(n.code,{className:\\"code-highlight\\",children:(0,e.jsx)(n.span,{className:\\"code-line\\",children:`Saya mau pesan pizza #intent:order\\n`})})}),`\\n`,(0,e.jsxs)(n.p,{children:[\\"This means that the sentence is classified into \\",(0,e.jsx)(n.strong,{children:\\"entity name: intent\\"}),\\" with \\",(0,e.jsx)(n.strong,{children:\\"label: order\\"})]}),`\\n`,(0,e.jsx)(n.pre,{children:(0,e.jsx)(n.code,{className:\\"code-highlight\\",children:(0,e.jsx)(n.span,{className:\\"code-line\\",children:`Totalnya berapa ya? #intent:ask #questionType:how_much\\n`})})}),`\\n`,(0,e.jsxs)(n.p,{children:[\\"This means that the sentence is classified into \\",(0,e.jsx)(n.strong,{children:\\"entity name: intent\\"}),\\" with \\",(0,e.jsx)(n.strong,{children:\\"label: order\\"}),\\" and \\",(0,e.jsx)(n.strong,{children:\\"entity name: questionType\\"}),\\" with \\",(0,e.jsx)(n.strong,{children:\\"label: how_much\\"})]}),`\\n`,(0,e.jsx)(n.p,{children:\\"This syntax is only allowed for entity type \\\\u201Cphrase\\\\u201D\\"}),`\\n`,(0,e.jsx)(n.pre,{children:(0,e.jsx)(n.code,{className:\\"code-highlight\\",children:(0,e.jsx)(n.span,{className:\\"code-line\\",children:`Saya mau pesan tiket ke (@destination Malang) atas nama (@ner:person Budi) #intent:order\\n`})})}),`\\n`,(0,e.jsxs)(n.p,{children:[\\"This means that the word \\\\u201CMalang\\\\u201D is tagged for \\",(0,e.jsx)(n.strong,{children:\\"entity name: destination\\"}),\\" and \\\\u201CBudi\\\\u201D is tagged for \\",(0,e.jsx)(n.strong,{children:\\"entity name: ner\\"}),\\" with \\",(0,e.jsx)(n.strong,{children:\\"label: person\\"})]}),`\\n`,(0,e.jsxs)(n.h3,{id:\\"create-new-training-data\\",children:[(0,e.jsx)(n.a,{className:\\"anchor\\",href:\\"#create-new-training-data\\",children:(0,e.jsx)(n.span,{className:\\"icon icon-link\\"})}),\\"Create New Training Data\\"]}),`\\n`,(0,e.jsxs)(n.p,{children:[\\"Mission: Create new training data in a .txt extension file. In this step, you will need to open a text and source code editor such as Notepad (in Windows), \\",(0,e.jsx)(\\"a\\",{href:\\"https://notepad-plus-plus.org/downloads/\\",target:\\"_blank\\",children:\\"notepad++\\"}),\\", \\",(0,e.jsx)(\\"a\\",{href:\\"https://www.sublimetext.com/\\",target:\\"_blank\\",children:\\"Sublime\\"}),`, etc.\\nPrerequisites: You already have a project and entities.`]}),`\\n`,(0,e.jsxs)(n.ol,{children:[`\\n`,(0,e.jsx)(n.li,{children:\\"Open your text and source code editor (Notepad, notepad++, sublime, etc.)\\"}),`\\n`,(0,e.jsx)(n.li,{children:\\"Create a new file.\\"}),`\\n`,(0,e.jsxs)(n.li,{children:[\\"Type following sentences example to create training data to train our NL models. You can add up to 200 sentences/training data. Or, you can download \\",(0,e.jsx)(\\"a\\",{href:\\"https://drive.google.com/file/d/1ErLuDwa6_1hyfnV7zVNBrlleE7l3KCb0/view\\",target:\\"_blank\\",children:\\"this example\\"}),\\".\\"]}),`\\n`]}),`\\n`,(0,e.jsx)(n.pre,{children:(0,e.jsxs)(n.code,{className:\\"code-highlight\\",children:[(0,e.jsx)(n.span,{className:\\"code-line\\",children:`selamat pagi #intent:greetings\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`welcome #intent:greetings\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`nama saya (@object:person amanda), salam kenal ya #intent:greetings\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`kemarin saya lihat (@object:person amanda) dan (@object:person rizyan) bercengkerama\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`hari ini cerah ya kata (@object:person destri)\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`morning everyone!! #intent:greetings\\n`})]})}),`\\n`,(0,e.jsxs)(n.ol,{start:\\"4\\",children:[`\\n`,(0,e.jsx)(n.li,{children:\\"Save the following training data into a file named: training-data-example.txt\\"}),`\\n`]}),`\\n`,(0,e.jsxs)(n.h3,{id:\\"upload-training-data-and-perform-data-training\\",children:[(0,e.jsx)(n.a,{className:\\"anchor\\",href:\\"#upload-training-data-and-perform-data-training\\",children:(0,e.jsx)(n.span,{className:\\"icon icon-link\\"})}),\\"Upload Training Data And Perform Data Training\\"]}),`\\n`,(0,e.jsx)(n.p,{children:`Mission: Upload training data to be previewed in Platform GUI.\\nPrerequisites: Training data has been created as a .txt extension file.`}),`\\n`,(0,e.jsxs)(n.ol,{children:[`\\n`,(0,e.jsxs)(n.li,{children:[\\"Go to \\",(0,e.jsx)(n.strong,{children:\\"NLU > Training\\"}),\\" in Platform.\\"]}),`\\n`,(0,e.jsxs)(n.li,{children:[\\"Click on the \\",(0,e.jsx)(n.strong,{children:\\"Bulk Training\\"}),\\" button.\\"]}),`\\n`,(0,e.jsxs)(n.li,{children:[\\"Click on \\",(0,e.jsx)(n.strong,{children:\\"Browse\\"}),\\" button to open the file explorer/finder or drag and drop the file into the browse file dialog.\\"]}),`\\n`,(0,e.jsx)(n.li,{children:\\"Wait for the upload process.\\"}),`\\n`,(0,e.jsx)(n.li,{children:\\"After the upload is complete, you can review the training data file in Platform GUI.\\"}),`\\n`]}),`\\n`,\\" \\",`\\n`,(0,e.jsx)(i,{alt:\\"Image 6 Alt\\",src:\\"/assets/images/products/kata-platform/how-to/how-to-use-bulk-training-to-the-faster-training-process/image6.webp\\",caption:{title:\\"Figure 6\\",description:\\"Preview training data\\"},layout:\\"responsive\\",naturalHeight:1125,naturalWidth:1999}),`\\n`,(0,e.jsxs)(n.ol,{start:\\"6\\",children:[`\\n`,(0,e.jsxs)(n.li,{children:[\\"Click on the \\",(0,e.jsx)(n.strong,{children:\\"Train\\"}),\\" button to train the data.\\"]}),`\\n`,(0,e.jsx)(n.li,{children:\\"You will see a customer satisfaction survey after using the feature.\\"}),`\\n`,(0,e.jsxs)(n.li,{children:[\\"Fill in the survey, then click \\",(0,e.jsx)(n.strong,{children:\\"X\\"}),\\" to close the dialog.\\"]}),`\\n`,(0,e.jsx)(n.li,{children:\\"You have successfully trained your NL model with the uploaded data.\\"}),`\\n`]}),`\\n`,\\" \\",`\\n`,(0,e.jsx)(i,{alt:\\"Image 7 Alt\\",src:\\"/assets/images/products/kata-platform/how-to/how-to-use-bulk-training-to-the-faster-training-process/image7.webp\\",caption:{title:\\"Figure 7\\",description:\\"Successfully trained the training data\\"},layout:\\"responsive\\",naturalHeight:1261,naturalWidth:1999}),`\\n`,(0,e.jsxs)(n.h2,{id:\\"error-messages\\",children:[(0,e.jsx)(n.a,{className:\\"anchor\\",href:\\"#error-messages\\",children:(0,e.jsx)(n.span,{className:\\"icon icon-link\\"})}),\\"Error Messages\\"]}),`\\n`,(0,e.jsx)(n.p,{children:\\"During the upload process, you might receive any of the error messages below. Let\\\\u2019s see what they are and how to solve each one of the errors.\\"}),`\\n`,(0,e.jsxs)(n.h3,{id:\\"your-file-wont-be-uploaded-if-you-close-the-dialog-box-now\\",children:[(0,e.jsx)(n.a,{className:\\"anchor\\",href:\\"#your-file-wont-be-uploaded-if-you-close-the-dialog-box-now\\",children:(0,e.jsx)(n.span,{className:\\"icon icon-link\\"})}),\\"Your File Won\\\\u2019t Be Uploaded if You Close The Dialog Box Now.\\"]}),`\\n`,(0,e.jsxs)(n.p,{children:[\\"It will show if you\\\\u2019re trying to close the upload dialog box or click the \\",(0,e.jsx)(n.strong,{children:\\"X\\"}),\\" symbol during the file uploading process. Please do not click the \\",(0,e.jsx)(n.strong,{children:\\"X\\"}),\\" button.\\"]}),`\\n`,\\" \\",`\\n`,(0,e.jsx)(i,{alt:\\"Image 8 Alt\\",src:\\"/assets/images/products/kata-platform/how-to/how-to-use-bulk-training-to-the-faster-training-process/image8.webp\\",caption:{title:\\"Figure 8\\",description:\\"Showing warning message if you click \\\\u201Cx\\\\u201D button.\\"},layout:\\"responsive\\",naturalHeight:1306,naturalWidth:1999}),`\\n`,(0,e.jsxs)(n.h3,{id:\\"invalid-file-format-only-txt-files-are-supported\\",children:[(0,e.jsx)(n.a,{className:\\"anchor\\",href:\\"#invalid-file-format-only-txt-files-are-supported\\",children:(0,e.jsx)(n.span,{className:\\"icon icon-link\\"})}),\\"Invalid File Format. Only .txt Files Are Supported.\\"]}),`\\n`,(0,e.jsx)(n.p,{children:\\"This error message will be displayed if you uploaded different types of files. Bulk Training feature only accept .txt file format.\\"}),`\\n`,\\" \\",`\\n`,(0,e.jsx)(i,{alt:\\"Image 9 Alt\\",src:\\"/assets/images/products/kata-platform/how-to/how-to-use-bulk-training-to-the-faster-training-process/image9.webp\\",caption:{title:\\"Figure 9\\",description:\\"Showing error message if you\\\\u2019re uploading not .txt format.\\"},layout:\\"responsive\\",naturalHeight:1306,naturalWidth:1999}),`\\n`,(0,e.jsxs)(n.h3,{id:\\"your-txt-file-is-empty\\",children:[(0,e.jsx)(n.a,{className:\\"anchor\\",href:\\"#your-txt-file-is-empty\\",children:(0,e.jsx)(n.span,{className:\\"icon icon-link\\"})}),\\"Your .txt File is Empty\\"]}),`\\n`,(0,e.jsx)(n.p,{children:\\"If you uploaded an empty .txt file, this error message will be shown. Please check and make sure you have written the data training content in the .txt file. For more about the data training file format, please refer to the [#guideline-to-create-a-training-data](guideline to create training data).\\"}),`\\n`,\\" \\",`\\n`,(0,e.jsx)(i,{alt:\\"Image 10 Alt\\",src:\\"/assets/images/products/kata-platform/how-to/how-to-use-bulk-training-to-the-faster-training-process/image10.webp\\",caption:{title:\\"Figure 10\\",description:\\"Showing error that your file does not have any script inside it.\\"},layout:\\"responsive\\",naturalHeight:1306,naturalWidth:1999}),`\\n`,(0,e.jsxs)(n.h3,{id:\\"your-connection-was-interrupted-please-check-your-connection-try-again\\",children:[(0,e.jsx)(n.a,{className:\\"anchor\\",href:\\"#your-connection-was-interrupted-please-check-your-connection-try-again\\",children:(0,e.jsx)(n.span,{className:\\"icon icon-link\\"})}),\\"Your Connection Was Interrupted. Please Check Your Connection. Try again.\\"]}),`\\n`,(0,e.jsx)(n.p,{children:\\"If your internet connection was interrupted during the upload process, this error message will be shown. Please make sure that your internet connection is stable and re-upload the data training file again.\\"}),`\\n`,\\" \\",`\\n`,(0,e.jsx)(i,{alt:\\"Image 11 Alt\\",src:\\"/assets/images/products/kata-platform/how-to/how-to-use-bulk-training-to-the-faster-training-process/image11.webp\\",caption:{title:\\"Figure 11\\",description:\\"Showing error message that your connection is bad and has interrupted training data uploading process.\\"},layout:\\"responsive\\",naturalHeight:1306,naturalWidth:1999}),`\\n`,(0,e.jsxs)(n.h3,{id:\\"the-txt-file-contains-entities-or-labels-that-you-dont-currently-have-please-check-your-file-or-entities\\",children:[(0,e.jsx)(n.a,{className:\\"anchor\\",href:\\"#the-txt-file-contains-entities-or-labels-that-you-dont-currently-have-please-check-your-file-or-entities\\",children:(0,e.jsx)(n.span,{className:\\"icon icon-link\\"})}),\\"The .txt File Contains Entities or Labels That You Don\'t Currently Have. Please Check Your File or Entities.\\"]}),`\\n`,(0,e.jsx)(n.p,{children:\\"This error message will be displayed if your data training file contains no entities or labels that matched your current entities on the project. Please check your NL project then go to the entities menu and create the entities or labels that you want to train with the Bulk Training feature.\\"}),`\\n`,(0,e.jsxs)(n.p,{children:[\\"This is the end of the guidance. You can contact \\",(0,e.jsx)(\\"a\\",{href:\\"mailto:support@kata.ai\\",children:(0,e.jsx)(n.a,{href:\\"mailto:support@kata.ai\\",children:\\"support@kata.ai\\"})}),\\" if you have any difficulties when implementing this.\\"]})]})}}var x=N;function v(t,a){throw new Error(\\"Expected \\"+(a?\\"component\\":\\"object\\")+\\" `\\"+t+\\"` to be defined: you likely forgot to import, pass, or provide it.\\")}return b(T);})();\\n;return Component;"},"_id":"kata-platform/how-to/how-to-use-bulk-training-for-faster-training-process.mdx","_raw":{"sourceFilePath":"kata-platform/how-to/how-to-use-bulk-training-for-faster-training-process.mdx","sourceFileName":"how-to-use-bulk-training-for-faster-training-process.mdx","sourceFileDir":"kata-platform/how-to","contentType":"mdx","flattenedPath":"kata-platform/how-to/how-to-use-bulk-training-for-faster-training-process"},"type":"KataPlatform","slug":["how-to","how-to-use-bulk-training-for-faster-training-process"],"excerpt":"\\n## What is Bulk Training\\n\\nGreat NL models are a fundamental part of making a great chatbot and approximately 70% of all chatbot projects use NL models instead of a keyword-based approach, based on our Kata.ai projects data"}');
;// CONCATENATED MODULE: ./.contentlayer/generated/KataPlatform/kata-platform__how-to__how-to-use-kataml-to-build-your-chatbot.mdx.json
const kata_platform_how_to_how_to_use_kataml_to_build_your_chatbot_mdx_namespaceObject = JSON.parse('{"id":"how-to-use-kataml-to-build-your-chatbot","section":"How To","title":"How to Use KataML to Build Your Chatbot","prev":"how-to-use-nl-prediction-api-to-help-you-using-the-nlu-in-your-app","next":"general-faqs","body":{"raw":"\\nKata ML is a descriptive YAML-based language for defining bots. The entry-point of KataML-based bot is the bot.yml file.\\n\\n## Specification\\n\\nThe root structure of bot.yml is as following:\\n\\n```\\n# kataML schema definition\\nschema: kata.ai/schema/kataml/1.0\\n\\n# Bot name\\nname: test-bot\\n# Bot description\\ndesc: Some Bot\\n# Bot language\\nlang: id\\n\\n# Flow definition\\nflows:\\n\\t # flowName and description\\n\\t someFlow:\\n\\t\\t# you can include other files using $include directive\\n\\t\\tintents: $include(./some/path)\\n\\n# Method definitions\\nmethods:\\n\\t # method definition in javascript\\n\\t someMethod(x): x*x\\n\\n# NLU definition\\nnlus:\\n\\t # define NLU to be used in this bot\\n\\t someNlu: ...\\n\\n# Config\\nconfig:\\n\\t # free to define your nested configuration\\n\\n```\\n\\n## Include Directive\\n\\nKataML support `$include` directive to include definition from other files. Using this directive it is easier to structure your bot project.\\nExample:\\n\\n```\\nconfig: $include(./config.yml)\\n```\\n\\n## Building a flow\\n\\nA flow consists of following definitions:\\n\\n- `intents` :`Dict<Intent>` which means intent definitions.\\n- `states` : `Dict<State>` which means state definitions.\\n- `actions` : `Dict<Action>` which means action definitions.\\n- `methods` : `Dict<string>` which means Flow-specific method definitions\\n  Additionally a flow can be set as following:\\n- `active` : `boolean` which means you can enable/disable a flow by setting the active field of a flow.\\n- `volatile` : `boolean` which means you can set it to true, then it will close the flow whenever it’s outside the flow.\\n- `expire` : `number` which means it will set flow to expire after a specified number of milliseconds.\\n\\n## Building an intent\\n\\nIntent can be defined as following:\\n\\n```\\nintents:\\n <name>: <Intent>\\n```\\n\\nThe intent description contains following fields:\\n\\n- `type` : `\\"text\\" | \\"command\\" | \\"data\\"` which is to define type of the message to be associated with this intent.\\n- `condition` : `string | string[]` which is condition filter to rule out certain intents to be selected.\\n- `classifier` : `Classifier | Classifier[]` which is classifier definition.\\n- `attributes` : `Dict<Attribute>` which is attributes / slot filling associated with the intent.\\n- `fallback` : `boolean` which means define intent as fallback intent.\\n- `priority` : `number` which means set priority of an intent for the selection process\\n- `initial` : `boolean` which means set whether intent can be triggered only in current flow or from other flow as well.\\n\\n## Defining condition\\n\\nCondition is every valid javascript expression returning a boolean. Available variables are:\\n\\n- `type` : `string` which is a message type.\\n- `payload` : `JsonObject` which means message payload.\\n- `content` : `string` which means message content.\\n- `context` : `JsonObject` which means flow context.\\n- `data` : `JsonObject` which means session data.\\n- `config` : `JsonObject` which means bot config.\\n  Example:\\n\\n```\\ncondition: type == \'text\' && content == \'hello\' && !context.completed\\n```\\n\\n## Building classifier\\n\\nClassifier consists of following fields:\\n\\n- `nlu` : `string` which means name of defined NLU or NLU-type.\\n- `hint` : `string` which means prepend message with a text fragment.\\n- `match` : `string` which means match the result of the classifier with a specific string.\\n- `options` : `JsonObject` which means override NLU options.\\n- `process` : `method | method[]` which means postprocess intent using methods.\\n  Example:\\n\\n```\\nclassifier:\\n\\t nlu: topicClassifier\\n\\t match: food\\n\\t options:\\n\\t\\tlowerCase: true\\n\\t\\tthreshold: 0.8\\n```\\n\\nExample Multiple Classifiers:\\n\\n```\\nclassifier:\\n - nlu: topicClassifier\\n\\tmatch: food\\n - nlu: keywordClassifier\\n\\tmatch: food\\n```\\n\\nExample mapping label using dict:\\n\\n```\\nclassifier:\\n\\tnlu: topicClassifier\\n\\tmatch: food\\n\\tdict:\\n\\t food: [food_a, food_b], # group multiple classes to one\\n\\t test: testing # change label\\n```\\n\\n## Defining attributes\\n\\nAttribute consist of following fields:\\n\\n- `nlu` : `string` which means name of defined NLU or NLU-type.\\n- `hint` : `string` which means prepend message with a text fragment.\\n- `path` : `string` which means result path to be taken.\\n- `options` : `JsonObject` which means override NLU options.\\n- `process` : `method | method[]` which means postprocess intent using methods.\\n  Example:\\n\\n```\\nattributes:\\ncity:\\n\\tnlu: genericNER\\n\\tpath: LOCATION\\n\\toptions:\\n\\tthreshold: 0.6\\n\\tprocess:\\n\\t  - filterCity\\n\\t  - capitalize\\n```\\n\\nExample normalizing using dict:\\n\\n```\\nattributes:\\n\\t city:\\n\\t\\tnlu: genericNER\\n\\t\\tpath: location\\n\\t\\toptions:\\n\\t\\t  threshold: 0.6\\n\\t\\tdict:\\n\\t\\t  jakarta: [jkt, jekardah, jakarta]\\n\\t\\t  bandung: [bdg, bandung]\\n\\t\\t  default: invalid\\n```\\n\\n## Building a state\\n\\nStates can be defined as following:\\n\\n```\\nstates:\\n\\t<name>: <State>\\n```\\n\\nThe state description contains following fields:\\n\\n- `initial` : `boolean` which means specify initial state.\\n- `action` : `string | StateAction | StateAction[]` which means specify action to be executed.\\n- `end` : `boolean` which means specify end state.\\n- `transitions` : `Dict<Transition|string>` which means specify transitions.\\n- `float` : `Transition` which means specify floating transition\\n- `enter` : `Mapping | method` which means specify mapping or method to be executed when state is entered.\\n- `transit` : `Mapping | method` which means specify mapping or method to be executed when transition is started.\\n- `exit` : `Mapping | method` which means specify mapping or method to be executed when state is exited.\\n\\n## Defining mapping\\n\\nMapping is a procedure to update context / data. available variables are:\\n\\n- `attributes` : `JsonObject` which is attributes that is captured by intent\\n- `intent` : `string` which is captured intent\\n- `content` : `string` which is message content\\n- `payload` : `JsonObject` which is message payload\\n- `context` : `JsonObject` which is flow context\\n- `data` : `JsonObject` which is session data\\n  Example:\\n\\n```\\nenter:\\n\\t data.name: attributes.name\\n\\t context.count: (context.count || 0)++\\n```\\n\\nExample using method:\\n\\n```\\nenter: someMapping\\n```\\n\\nmethod definition:\\n\\n```\\nmethods:\\n\\tsomeMapping(ctx): > # {intent, attributes, content, payload, data, context}\\n\\t\\tctx.data.name = ctx.attributes.name;\\n\\t\\tctx.context.count++;\\n\\t\\treturn ctx;\\n```\\n\\n## Building state actions\\n\\nAction can be defined as a single action or multiple actions. The state action definition contains following fields:\\n\\n- `name` : `string` is name of defined action or action type\\n- `condition` : `string` is condition filter\\n- `options` : `JsonObject` is override action options\\n  Example:\\n\\n```\\naction:\\n\\t name: reply\\n\\t options:\\n\\t\\ttext: \'hi!\'\\n```\\n\\nExample multiple actions:\\n\\n```\\naction:\\n\\t - name: reply\\n\\t\\tcondition: context.mood = \'good\'\\n\\t\\toptions:\\n\\t\\t  text: \'hi $(data.name)!\'\\n\\t - name: reply\\n\\t\\tcondition: context.mood = \'bad\'\\n\\t\\toptions:\\n\\t\\t  text: \'apaan sih kamu!\'\\n```\\n\\nYou can simplify state actions (if you only have 1 action in some states) :\\n\\n```\\naction: someAction\\n```\\n\\n## Building transition\\n\\nTransition define condition that leads to moving from one state to the other state. A transition is defined as following:\\n\\n```\\ntransitions:\\n\\t <destination>: <Transition>\\n```\\n\\nField definition:\\n\\n- `condition` : `string` which means condition that trigger the transition\\n- `priority` : `number` which means priority for transition selection\\n- `fallback` : `boolean` which means define fallback when no other transition matches\\n- `mapping` : `Mapping | method` which means define mapping or method that is triggered during this transition\\n  Example:\\n\\n```\\ntransitions:\\n\\t askDob:\\n\\t\\tcondition: \\"intent == \'yes\' && !context.personGender && context.verifyGender\\"\\n\\t\\tmapping:\\n\\t\\t  context.personGender: \'context.verifyGender\'\\n\\t\\t  context.verifyGender: \'null\'\\n```\\n\\nYou can simplify transitions definition :\\n\\n```\\ntransitions\\n\\taskDob: \\"intent == \'yes\' && !context.personGender\\"\\n```\\n\\n## Building a floating State\\n\\nNormally it is tedious if we have to define a transition to a state that is available in every state. e.g. Cancel state. To mitigate this we can define a floating transition. The system will automatically attach this transition in every state.\\n\\n```\\nfloat: <Transition>\\n```\\n\\n## Defining events\\n\\nWe can define a mapping or method that is triggered during these events:\\n\\n- `enter` which means this event is triggered when entering a state\\n- `transit` which means this event is triggered before transition process\\n- `exit` which means this event is triggered after transition process\\n\\n## Building Meta Context\\n\\nAdditional meta context accessible in states at `context.<meta>`:\\n\\n- `$start` : `boolean` which means true if state is initial state\\n- `$to` : `string` which means describe destination state. Available during exit\\n- `$from` : `string` which means describe origin state. Available during enter\\n- `$end` : `boolean` which means true if state is end state\\n  Example:\\n\\n```\\nstates:\\n\\t stateA:\\n\\t\\tenter:\\n\\t\\t  context.stateACount: (context.stateACount || 0)++\\n\\t\\ttransit:\\n\\t\\t  context.name: attributes.name || null\\n\\t\\texit:\\n\\t\\t  context.stateA.to: context.$to\\n```\\n\\n## Building actions\\n\\nActions can be defined as following:\\n\\n```\\nactions:\\n <name>: <Action>\\n```\\n\\nFollowing fields are available:\\n\\n- `type` : `string` which means action type.\\n- `method` : `method` which means specify if action type is method\\n- `options`: `JsonObject` which means action options\\n- `condition` : `string` which means action condition\\n  Example:\\n\\n```\\nactions:\\n\\t askName:\\n\\t\\ttype: reply\\n\\t\\toptions:\\n\\t\\t  text: \'nama kamu siapa?\'\\n```\\n\\n## Flow Switching\\n\\nWhenever bot reaches a state that is not an end state, the flow will stay open. The following message will trigger a transition to the next state. There is a case where the incoming message cannot be handled by any intents in current flow. In that case it will try to find a flow with a matching intent. When the second flow closes, the system will create internal message reenter.\\n\\n```\\n{\\n\\ttype: \\"command\\",\\n\\tcontent: \\"reenter\\",\\n\\tpayload: null\\n}\\n```\\n\\nthis reenter need to be catched by the previous flow that is open:\\n\\n```\\nintents:\\n\\treenter:\\n\\t\\ttype: command\\n\\t\\tcondition: content == \\"reenter\\"\\n```\\n\\n## Building NLU\\n\\n### Definition\\n\\nA NLU consists of following definitions:\\n\\n- `type`: `string` which means NLU Type\\n- `method` : `method` which means method name\\n- `options` : `JsonObject` which means Override NLU options\\n- `process` : `method | method[]` which means Postprocess intent using methods\\n  Example:\\n\\n```\\nnlus:\\n\\t genericNer:\\n\\t\\ttype: verstandTagger\\n\\t\\toptions:\\n\\t\\tmodel: <id>\\n```\\n\\n### Keyword NLU\\n\\n```\\nmyNLU:\\n\\ttype: keyword\\n\\toptions:\\n\\t\\tcase: boolean # true for case sensitive\\n\\t\\texact: boolean # true to match only exact message\\n\\t\\tdefault: string # default key if nothing match\\n\\t\\tkeywords: # <key> : [<match values>]\\n\\t\\t<key>: string[]\\n```\\n\\nOutput:\\n\\n```\\nstring\\n```\\n\\nExample:\\n\\n```\\noptions:\\n\\t keywords:\\n\\t\\t\'American Thin Crust\':\\n\\t\\t  - thin crust\\n\\t\\t  - american thin crust\\n\\t\\t  - american\\n\\t\\t\'Hawaiian\':\\n\\t\\t  - hawai\\n\\t\\t  - hawaiian\\n```\\n\\n### Regex NLU\\n\\n```\\nmyRegex:\\n\\t type: regex\\n\\t options:\\n\\t\\tregex: <regex as string>\\n\\t\\tindex: number # optional\\n```\\n\\nor\\n\\n```\\nmyRegex:\\n\\ttype: regex\\n\\toptions:\\n\\t\\tregex: <regex as string>\\n\\t\\tindex:\\n\\t\\t<key>: number\\n```\\n\\nor\\n\\n```\\nmyRegex:\\n\\t type: regex\\n\\t options:\\n\\t\\tregex:\\n\\t\\t <key>: <regex as string>\\n```\\n\\nExample with index:\\n\\n```\\nnlus:\\n\\t nameNLU:\\n\\t\\ttype: regex\\n\\t\\toptions:\\n\\t\\t  regex: \'nama saya (.+)\'\\n\\t\\t  index: 1\\n\\n## usage in intent\\nintents:\\n\\t giveName:\\n\\t\\tattributes:\\n\\t\\t  name:\\n\\t\\t  nlu: nameNLU\\n```\\n\\nExample with multiple index:\\n\\n```\\nnlus:\\n\\t nameNLU:\\n\\t\\ttype: regex\\n\\t\\toptions:\\n\\t\\t  regex: \'nama (saya|kamu) (.+)\'\\n\\t\\t  index:\\n\\t\\t  who: 1\\n\\t\\t  name: 2\\n\\n## usage in intent\\nintents:\\n\\t giveName:\\n\\t\\tattributes:\\n\\t\\t  name:\\n\\t\\t  nlu: nameNLU\\n\\t\\t  path: who\\n\\t\\t  who:\\n\\t\\t  nlu: nameNLU\\n\\t\\t  path: name\\n```\\n\\nExample with multiple regex:\\n\\n```\\nnlus:\\n\\t regexNlu:\\n\\ttype: regex\\n\\toptions:\\n\\t\\t  regex:\\n\\t\\t  name: \'nama saya (.+)\'\\n\\t\\t  email: \'w+@w+.w+\'\\n\\n## usage in intent\\nintents:\\n\\t giveName:\\n\\t\\tattributes:\\n\\t\\t  name:\\n\\t\\t  nlu: regexNlu\\n\\t\\t  path: name\\n\\t\\t  who:\\n\\t\\t  nlu: regexNLU\\n\\t\\t  path: email\\n```\\n\\n### NL Studio NLU\\n\\n```\\nmynl:\\n\\t type: nl\\n\\t options:\\n\\t\\tnluId: <nluId>\\n\\t\\ttoken: <nluToken>\\n\\t\\toutput:\\n\\t\\t  <type>\\n\\t\\t  # raw - return the raw prediction result from NL Studio\\n\\t\\t  # value - return the value of each NLU\'s entity\\n\\t\\t  # phrase - only for NL Studio entity type \'phrase\'\\n\\t\\tentity: <entityName> # only for output: phrase\\n\\t\\tthreshold: <number> # confidence rate, if less than treshold bot wouldn\'t recognize as this intent\\n\\t\\tflatten: true # optional, default false\\n```\\n\\nExamples:\\n\\n```\\n## usage in intent for output type value\\nnlus:\\n\\t mynl:\\n\\t\\ttype: nl\\n\\t\\toptions:\\n\\t\\t  nluId: <nluId>\\n\\t\\t  output: value\\n\\t\\t  threshold: 0.5\\n\\t\\t  flatten: true\\n\\nintents:\\n\\t yes:\\n\\t\\tclassifier:\\n\\t\\t  nlu: mynl\\n\\t\\t  expression: \\"intent == \'yes\'\\" # <entityName> == <label> of entity type \'trait\'\\n\\t name:\\n\\t\\tclassifier:\\n\\t\\t  nlu: mynl\\n\\t\\t  expression: ner # <entityName> of entity type \'phrase\'\\n\\t\\tattributes:\\n\\t\\t  person:\\n\\t\\t  nlu: mynl\\n\\t\\t  path: ner # <entityName>\\n\\n## usage in intent for output type phrase\\nnlus:\\n\\t mynl2:\\n\\t\\ttype: nl\\n\\t\\toptions:\\n\\t\\t  nluId: <nluId>\\n\\t\\t  output: phrase\\n\\t\\t  entity: <entityName>\\n\\t\\t  threshold: 0.7\\n\\nintents:\\n\\tcredentials:\\n\\t\\tclassifier:\\n\\t\\t  nlu: mynl # use the previous bot\'s nlu\\n\\t\\t  expression: \\"intent == \'giveCredentials\'\\"\\n\\t\\tattributes:\\n\\t\\t  person:\\n\\t\\t  nlu: mynl2\\n\\t\\t  path: person   # <label> of mynl2\'s entity <enityName>\\n\\t\\t  location:\\n\\t\\t  nlu: mynl2\\n\\t\\t  path: location # <label> of mynl2\'s entity <enityName>\\n\\t\\t name:\\n\\t\\tclassifier:\\n\\t\\t  nlu: mynl2\\n\\t\\t  expression: person # <label> of mynl2\'s entity <enityName>\\n\\t\\tattributes:\\n\\t\\t  person:\\n\\t\\t  nlu: mynl2\\n\\t\\t  path: person # <label>\\n\\n# alternative approach\\nnlus:\\n\\tmynl3:\\n\\t\\ttype: nl\\n\\t\\toptions:\\n\\t\\tnluId: <nluId>\\n\\nintents:\\n\\t yes:\\n\\t\\tclassifier:\\n\\t\\t  nlu: mynl3\\n\\t\\t  options:\\n\\t\\t  output: value\\n\\t\\t  threshold: 0.5\\n\\t\\t  flatten: true\\n\\t\\t  expression: \\"intent == \'yes\'\\"\\n\\t\\tattributes:\\n\\t\\t  person:\\n\\t\\t  nlu: mynl3\\n\\t\\t  path: person\\n\\t\\t  options:\\n\\t\\t\\t  output: phrase\\n\\t\\t\\t  entity: ner\\n\\t\\t\\t  threshold: 0.7\\n```\\n\\n## Method\\n\\n### Inline Method\\n\\nExample:\\n\\n```\\nmethods:\\n\\tsomeMethod(x): \\"\\n\\t  return x*x;\\n\\t\\"\\n```\\n\\n### Method from File\\n\\nExample:\\n\\n```\\nmethod:\\n\\t otherMethod(x):\\n\\t\\tcode: $include(./some/code.js)\\n\\t\\tentry: module.exports\\n\\n// ./some/code.js\\n\\nfunction otherMethod(x) {\\n\\t return x * x;\\n}\\nmodule.exports = otherMethod;\\n```\\n","code":"var Component=(()=>{var r=Object.create;var s=Object.defineProperty;var m=Object.getOwnPropertyDescriptor;var p=Object.getOwnPropertyNames;var N=Object.getPrototypeOf,g=Object.prototype.hasOwnProperty;var d=i=>s(i,\\"__esModule\\",{value:!0});var u=(i,c)=>()=>(c||i((c={exports:{}}).exports,c),c.exports),f=(i,c)=>{for(var l in c)s(i,l,{get:c[l],enumerable:!0})},t=(i,c,l,n)=>{if(c&&typeof c==\\"object\\"||typeof c==\\"function\\")for(let a of p(c))!g.call(i,a)&&(l||a!==\\"default\\")&&s(i,a,{get:()=>c[a],enumerable:!(n=m(c,a))||n.enumerable});return i},w=(i,c)=>t(d(s(i!=null?r(N(i)):{},\\"default\\",!c&&i&&i.__esModule?{get:()=>i.default,enumerable:!0}:{value:i,enumerable:!0})),i),y=(i=>(c,l)=>i&&i.get(c)||(l=t(d({}),c,1),i&&i.set(c,l),l))(typeof WeakMap!=\\"undefined\\"?new WeakMap:0);var h=u((j,o)=>{o.exports=_jsx_runtime});var k={};f(k,{default:()=>v,frontmatter:()=>b});var e=w(h()),b={id:\\"how-to-use-kataml-to-build-your-chatbot\\",title:\\"How to Use KataML to Build Your Chatbot\\",prev:\\"how-to-use-nl-prediction-api-to-help-you-using-the-nlu-in-your-app\\",next:\\"general-faqs\\",section:\\"How To\\"};function x(i={}){let{wrapper:c}=i.components||{};return c?(0,e.jsx)(c,Object.assign({},i,{children:(0,e.jsx)(l,{})})):l();function l(){let n=Object.assign({p:\\"p\\",h2:\\"h2\\",a:\\"a\\",span:\\"span\\",pre:\\"pre\\",code:\\"code\\",ul:\\"ul\\",li:\\"li\\",h3:\\"h3\\"},i.components);return(0,e.jsxs)(e.Fragment,{children:[(0,e.jsx)(n.p,{children:\\"Kata ML is a descriptive YAML-based language for defining bots. The entry-point of KataML-based bot is the bot.yml file.\\"}),`\\n`,(0,e.jsxs)(n.h2,{id:\\"specification\\",children:[(0,e.jsx)(n.a,{className:\\"anchor\\",href:\\"#specification\\",children:(0,e.jsx)(n.span,{className:\\"icon icon-link\\"})}),\\"Specification\\"]}),`\\n`,(0,e.jsx)(n.p,{children:\\"The root structure of bot.yml is as following:\\"}),`\\n`,(0,e.jsx)(n.pre,{children:(0,e.jsxs)(n.code,{className:\\"code-highlight\\",children:[(0,e.jsx)(n.span,{className:\\"code-line\\",children:`# kataML schema definition\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`schema: kata.ai/schema/kataml/1.0\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`# Bot name\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`name: test-bot\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`# Bot description\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`desc: Some Bot\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`# Bot language\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`lang: id\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`# Flow definition\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`flows:\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`\\t # flowName and description\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`\\t someFlow:\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`\\t\\t# you can include other files using $include directive\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`\\t\\tintents: $include(./some/path)\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`# Method definitions\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`methods:\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`\\t # method definition in javascript\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`\\t someMethod(x): x*x\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`# NLU definition\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`nlus:\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`\\t # define NLU to be used in this bot\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`\\t someNlu: ...\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`# Config\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`config:\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`\\t # free to define your nested configuration\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`\\n`})]})}),`\\n`,(0,e.jsxs)(n.h2,{id:\\"include-directive\\",children:[(0,e.jsx)(n.a,{className:\\"anchor\\",href:\\"#include-directive\\",children:(0,e.jsx)(n.span,{className:\\"icon icon-link\\"})}),\\"Include Directive\\"]}),`\\n`,(0,e.jsxs)(n.p,{children:[\\"KataML support \\",(0,e.jsx)(n.code,{children:\\"$include\\"}),` directive to include definition from other files. Using this directive it is easier to structure your bot project.\\nExample:`]}),`\\n`,(0,e.jsx)(n.pre,{children:(0,e.jsx)(n.code,{className:\\"code-highlight\\",children:(0,e.jsx)(n.span,{className:\\"code-line\\",children:`config: $include(./config.yml)\\n`})})}),`\\n`,(0,e.jsxs)(n.h2,{id:\\"building-a-flow\\",children:[(0,e.jsx)(n.a,{className:\\"anchor\\",href:\\"#building-a-flow\\",children:(0,e.jsx)(n.span,{className:\\"icon icon-link\\"})}),\\"Building a flow\\"]}),`\\n`,(0,e.jsx)(n.p,{children:\\"A flow consists of following definitions:\\"}),`\\n`,(0,e.jsxs)(n.ul,{children:[`\\n`,(0,e.jsxs)(n.li,{children:[(0,e.jsx)(n.code,{children:\\"intents\\"}),\\" :\\",(0,e.jsx)(n.code,{children:\\"Dict<Intent>\\"}),\\" which means intent definitions.\\"]}),`\\n`,(0,e.jsxs)(n.li,{children:[(0,e.jsx)(n.code,{children:\\"states\\"}),\\" : \\",(0,e.jsx)(n.code,{children:\\"Dict<State>\\"}),\\" which means state definitions.\\"]}),`\\n`,(0,e.jsxs)(n.li,{children:[(0,e.jsx)(n.code,{children:\\"actions\\"}),\\" : \\",(0,e.jsx)(n.code,{children:\\"Dict<Action>\\"}),\\" which means action definitions.\\"]}),`\\n`,(0,e.jsxs)(n.li,{children:[(0,e.jsx)(n.code,{children:\\"methods\\"}),\\" : \\",(0,e.jsx)(n.code,{children:\\"Dict<string>\\"}),` which means Flow-specific method definitions\\nAdditionally a flow can be set as following:`]}),`\\n`,(0,e.jsxs)(n.li,{children:[(0,e.jsx)(n.code,{children:\\"active\\"}),\\" : \\",(0,e.jsx)(n.code,{children:\\"boolean\\"}),\\" which means you can enable/disable a flow by setting the active field of a flow.\\"]}),`\\n`,(0,e.jsxs)(n.li,{children:[(0,e.jsx)(n.code,{children:\\"volatile\\"}),\\" : \\",(0,e.jsx)(n.code,{children:\\"boolean\\"}),\\" which means you can set it to true, then it will close the flow whenever it\\\\u2019s outside the flow.\\"]}),`\\n`,(0,e.jsxs)(n.li,{children:[(0,e.jsx)(n.code,{children:\\"expire\\"}),\\" : \\",(0,e.jsx)(n.code,{children:\\"number\\"}),\\" which means it will set flow to expire after a specified number of milliseconds.\\"]}),`\\n`]}),`\\n`,(0,e.jsxs)(n.h2,{id:\\"building-an-intent\\",children:[(0,e.jsx)(n.a,{className:\\"anchor\\",href:\\"#building-an-intent\\",children:(0,e.jsx)(n.span,{className:\\"icon icon-link\\"})}),\\"Building an intent\\"]}),`\\n`,(0,e.jsx)(n.p,{children:\\"Intent can be defined as following:\\"}),`\\n`,(0,e.jsx)(n.pre,{children:(0,e.jsxs)(n.code,{className:\\"code-highlight\\",children:[(0,e.jsx)(n.span,{className:\\"code-line\\",children:`intents:\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:` <name>: <Intent>\\n`})]})}),`\\n`,(0,e.jsx)(n.p,{children:\\"The intent description contains following fields:\\"}),`\\n`,(0,e.jsxs)(n.ul,{children:[`\\n`,(0,e.jsxs)(n.li,{children:[(0,e.jsx)(n.code,{children:\\"type\\"}),\\" : \\",(0,e.jsx)(n.code,{children:\'\\"text\\" | \\"command\\" | \\"data\\"\'}),\\" which is to define type of the message to be associated with this intent.\\"]}),`\\n`,(0,e.jsxs)(n.li,{children:[(0,e.jsx)(n.code,{children:\\"condition\\"}),\\" : \\",(0,e.jsx)(n.code,{children:\\"string | string[]\\"}),\\" which is condition filter to rule out certain intents to be selected.\\"]}),`\\n`,(0,e.jsxs)(n.li,{children:[(0,e.jsx)(n.code,{children:\\"classifier\\"}),\\" : \\",(0,e.jsx)(n.code,{children:\\"Classifier | Classifier[]\\"}),\\" which is classifier definition.\\"]}),`\\n`,(0,e.jsxs)(n.li,{children:[(0,e.jsx)(n.code,{children:\\"attributes\\"}),\\" : \\",(0,e.jsx)(n.code,{children:\\"Dict<Attribute>\\"}),\\" which is attributes / slot filling associated with the intent.\\"]}),`\\n`,(0,e.jsxs)(n.li,{children:[(0,e.jsx)(n.code,{children:\\"fallback\\"}),\\" : \\",(0,e.jsx)(n.code,{children:\\"boolean\\"}),\\" which means define intent as fallback intent.\\"]}),`\\n`,(0,e.jsxs)(n.li,{children:[(0,e.jsx)(n.code,{children:\\"priority\\"}),\\" : \\",(0,e.jsx)(n.code,{children:\\"number\\"}),\\" which means set priority of an intent for the selection process\\"]}),`\\n`,(0,e.jsxs)(n.li,{children:[(0,e.jsx)(n.code,{children:\\"initial\\"}),\\" : \\",(0,e.jsx)(n.code,{children:\\"boolean\\"}),\\" which means set whether intent can be triggered only in current flow or from other flow as well.\\"]}),`\\n`]}),`\\n`,(0,e.jsxs)(n.h2,{id:\\"defining-condition\\",children:[(0,e.jsx)(n.a,{className:\\"anchor\\",href:\\"#defining-condition\\",children:(0,e.jsx)(n.span,{className:\\"icon icon-link\\"})}),\\"Defining condition\\"]}),`\\n`,(0,e.jsx)(n.p,{children:\\"Condition is every valid javascript expression returning a boolean. Available variables are:\\"}),`\\n`,(0,e.jsxs)(n.ul,{children:[`\\n`,(0,e.jsxs)(n.li,{children:[(0,e.jsx)(n.code,{children:\\"type\\"}),\\" : \\",(0,e.jsx)(n.code,{children:\\"string\\"}),\\" which is a message type.\\"]}),`\\n`,(0,e.jsxs)(n.li,{children:[(0,e.jsx)(n.code,{children:\\"payload\\"}),\\" : \\",(0,e.jsx)(n.code,{children:\\"JsonObject\\"}),\\" which means message payload.\\"]}),`\\n`,(0,e.jsxs)(n.li,{children:[(0,e.jsx)(n.code,{children:\\"content\\"}),\\" : \\",(0,e.jsx)(n.code,{children:\\"string\\"}),\\" which means message content.\\"]}),`\\n`,(0,e.jsxs)(n.li,{children:[(0,e.jsx)(n.code,{children:\\"context\\"}),\\" : \\",(0,e.jsx)(n.code,{children:\\"JsonObject\\"}),\\" which means flow context.\\"]}),`\\n`,(0,e.jsxs)(n.li,{children:[(0,e.jsx)(n.code,{children:\\"data\\"}),\\" : \\",(0,e.jsx)(n.code,{children:\\"JsonObject\\"}),\\" which means session data.\\"]}),`\\n`,(0,e.jsxs)(n.li,{children:[(0,e.jsx)(n.code,{children:\\"config\\"}),\\" : \\",(0,e.jsx)(n.code,{children:\\"JsonObject\\"}),` which means bot config.\\nExample:`]}),`\\n`]}),`\\n`,(0,e.jsx)(n.pre,{children:(0,e.jsx)(n.code,{className:\\"code-highlight\\",children:(0,e.jsx)(n.span,{className:\\"code-line\\",children:`condition: type == \'text\' && content == \'hello\' && !context.completed\\n`})})}),`\\n`,(0,e.jsxs)(n.h2,{id:\\"building-classifier\\",children:[(0,e.jsx)(n.a,{className:\\"anchor\\",href:\\"#building-classifier\\",children:(0,e.jsx)(n.span,{className:\\"icon icon-link\\"})}),\\"Building classifier\\"]}),`\\n`,(0,e.jsx)(n.p,{children:\\"Classifier consists of following fields:\\"}),`\\n`,(0,e.jsxs)(n.ul,{children:[`\\n`,(0,e.jsxs)(n.li,{children:[(0,e.jsx)(n.code,{children:\\"nlu\\"}),\\" : \\",(0,e.jsx)(n.code,{children:\\"string\\"}),\\" which means name of defined NLU or NLU-type.\\"]}),`\\n`,(0,e.jsxs)(n.li,{children:[(0,e.jsx)(n.code,{children:\\"hint\\"}),\\" : \\",(0,e.jsx)(n.code,{children:\\"string\\"}),\\" which means prepend message with a text fragment.\\"]}),`\\n`,(0,e.jsxs)(n.li,{children:[(0,e.jsx)(n.code,{children:\\"match\\"}),\\" : \\",(0,e.jsx)(n.code,{children:\\"string\\"}),\\" which means match the result of the classifier with a specific string.\\"]}),`\\n`,(0,e.jsxs)(n.li,{children:[(0,e.jsx)(n.code,{children:\\"options\\"}),\\" : \\",(0,e.jsx)(n.code,{children:\\"JsonObject\\"}),\\" which means override NLU options.\\"]}),`\\n`,(0,e.jsxs)(n.li,{children:[(0,e.jsx)(n.code,{children:\\"process\\"}),\\" : \\",(0,e.jsx)(n.code,{children:\\"method | method[]\\"}),` which means postprocess intent using methods.\\nExample:`]}),`\\n`]}),`\\n`,(0,e.jsx)(n.pre,{children:(0,e.jsxs)(n.code,{className:\\"code-highlight\\",children:[(0,e.jsx)(n.span,{className:\\"code-line\\",children:`classifier:\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`\\t nlu: topicClassifier\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`\\t match: food\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`\\t options:\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`\\t\\tlowerCase: true\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`\\t\\tthreshold: 0.8\\n`})]})}),`\\n`,(0,e.jsx)(n.p,{children:\\"Example Multiple Classifiers:\\"}),`\\n`,(0,e.jsx)(n.pre,{children:(0,e.jsxs)(n.code,{className:\\"code-highlight\\",children:[(0,e.jsx)(n.span,{className:\\"code-line\\",children:`classifier:\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:` - nlu: topicClassifier\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`\\tmatch: food\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:` - nlu: keywordClassifier\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`\\tmatch: food\\n`})]})}),`\\n`,(0,e.jsx)(n.p,{children:\\"Example mapping label using dict:\\"}),`\\n`,(0,e.jsx)(n.pre,{children:(0,e.jsxs)(n.code,{className:\\"code-highlight\\",children:[(0,e.jsx)(n.span,{className:\\"code-line\\",children:`classifier:\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`\\tnlu: topicClassifier\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`\\tmatch: food\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`\\tdict:\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`\\t food: [food_a, food_b], # group multiple classes to one\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`\\t test: testing # change label\\n`})]})}),`\\n`,(0,e.jsxs)(n.h2,{id:\\"defining-attributes\\",children:[(0,e.jsx)(n.a,{className:\\"anchor\\",href:\\"#defining-attributes\\",children:(0,e.jsx)(n.span,{className:\\"icon icon-link\\"})}),\\"Defining attributes\\"]}),`\\n`,(0,e.jsx)(n.p,{children:\\"Attribute consist of following fields:\\"}),`\\n`,(0,e.jsxs)(n.ul,{children:[`\\n`,(0,e.jsxs)(n.li,{children:[(0,e.jsx)(n.code,{children:\\"nlu\\"}),\\" : \\",(0,e.jsx)(n.code,{children:\\"string\\"}),\\" which means name of defined NLU or NLU-type.\\"]}),`\\n`,(0,e.jsxs)(n.li,{children:[(0,e.jsx)(n.code,{children:\\"hint\\"}),\\" : \\",(0,e.jsx)(n.code,{children:\\"string\\"}),\\" which means prepend message with a text fragment.\\"]}),`\\n`,(0,e.jsxs)(n.li,{children:[(0,e.jsx)(n.code,{children:\\"path\\"}),\\" : \\",(0,e.jsx)(n.code,{children:\\"string\\"}),\\" which means result path to be taken.\\"]}),`\\n`,(0,e.jsxs)(n.li,{children:[(0,e.jsx)(n.code,{children:\\"options\\"}),\\" : \\",(0,e.jsx)(n.code,{children:\\"JsonObject\\"}),\\" which means override NLU options.\\"]}),`\\n`,(0,e.jsxs)(n.li,{children:[(0,e.jsx)(n.code,{children:\\"process\\"}),\\" : \\",(0,e.jsx)(n.code,{children:\\"method | method[]\\"}),` which means postprocess intent using methods.\\nExample:`]}),`\\n`]}),`\\n`,(0,e.jsx)(n.pre,{children:(0,e.jsxs)(n.code,{className:\\"code-highlight\\",children:[(0,e.jsx)(n.span,{className:\\"code-line\\",children:`attributes:\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`city:\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`\\tnlu: genericNER\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`\\tpath: LOCATION\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`\\toptions:\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`\\tthreshold: 0.6\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`\\tprocess:\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`\\t  - filterCity\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`\\t  - capitalize\\n`})]})}),`\\n`,(0,e.jsx)(n.p,{children:\\"Example normalizing using dict:\\"}),`\\n`,(0,e.jsx)(n.pre,{children:(0,e.jsxs)(n.code,{className:\\"code-highlight\\",children:[(0,e.jsx)(n.span,{className:\\"code-line\\",children:`attributes:\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`\\t city:\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`\\t\\tnlu: genericNER\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`\\t\\tpath: location\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`\\t\\toptions:\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`\\t\\t  threshold: 0.6\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`\\t\\tdict:\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`\\t\\t  jakarta: [jkt, jekardah, jakarta]\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`\\t\\t  bandung: [bdg, bandung]\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`\\t\\t  default: invalid\\n`})]})}),`\\n`,(0,e.jsxs)(n.h2,{id:\\"building-a-state\\",children:[(0,e.jsx)(n.a,{className:\\"anchor\\",href:\\"#building-a-state\\",children:(0,e.jsx)(n.span,{className:\\"icon icon-link\\"})}),\\"Building a state\\"]}),`\\n`,(0,e.jsx)(n.p,{children:\\"States can be defined as following:\\"}),`\\n`,(0,e.jsx)(n.pre,{children:(0,e.jsxs)(n.code,{className:\\"code-highlight\\",children:[(0,e.jsx)(n.span,{className:\\"code-line\\",children:`states:\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`\\t<name>: <State>\\n`})]})}),`\\n`,(0,e.jsx)(n.p,{children:\\"The state description contains following fields:\\"}),`\\n`,(0,e.jsxs)(n.ul,{children:[`\\n`,(0,e.jsxs)(n.li,{children:[(0,e.jsx)(n.code,{children:\\"initial\\"}),\\" : \\",(0,e.jsx)(n.code,{children:\\"boolean\\"}),\\" which means specify initial state.\\"]}),`\\n`,(0,e.jsxs)(n.li,{children:[(0,e.jsx)(n.code,{children:\\"action\\"}),\\" : \\",(0,e.jsx)(n.code,{children:\\"string | StateAction | StateAction[]\\"}),\\" which means specify action to be executed.\\"]}),`\\n`,(0,e.jsxs)(n.li,{children:[(0,e.jsx)(n.code,{children:\\"end\\"}),\\" : \\",(0,e.jsx)(n.code,{children:\\"boolean\\"}),\\" which means specify end state.\\"]}),`\\n`,(0,e.jsxs)(n.li,{children:[(0,e.jsx)(n.code,{children:\\"transitions\\"}),\\" : \\",(0,e.jsx)(n.code,{children:\\"Dict<Transition|string>\\"}),\\" which means specify transitions.\\"]}),`\\n`,(0,e.jsxs)(n.li,{children:[(0,e.jsx)(n.code,{children:\\"float\\"}),\\" : \\",(0,e.jsx)(n.code,{children:\\"Transition\\"}),\\" which means specify floating transition\\"]}),`\\n`,(0,e.jsxs)(n.li,{children:[(0,e.jsx)(n.code,{children:\\"enter\\"}),\\" : \\",(0,e.jsx)(n.code,{children:\\"Mapping | method\\"}),\\" which means specify mapping or method to be executed when state is entered.\\"]}),`\\n`,(0,e.jsxs)(n.li,{children:[(0,e.jsx)(n.code,{children:\\"transit\\"}),\\" : \\",(0,e.jsx)(n.code,{children:\\"Mapping | method\\"}),\\" which means specify mapping or method to be executed when transition is started.\\"]}),`\\n`,(0,e.jsxs)(n.li,{children:[(0,e.jsx)(n.code,{children:\\"exit\\"}),\\" : \\",(0,e.jsx)(n.code,{children:\\"Mapping | method\\"}),\\" which means specify mapping or method to be executed when state is exited.\\"]}),`\\n`]}),`\\n`,(0,e.jsxs)(n.h2,{id:\\"defining-mapping\\",children:[(0,e.jsx)(n.a,{className:\\"anchor\\",href:\\"#defining-mapping\\",children:(0,e.jsx)(n.span,{className:\\"icon icon-link\\"})}),\\"Defining mapping\\"]}),`\\n`,(0,e.jsx)(n.p,{children:\\"Mapping is a procedure to update context / data. available variables are:\\"}),`\\n`,(0,e.jsxs)(n.ul,{children:[`\\n`,(0,e.jsxs)(n.li,{children:[(0,e.jsx)(n.code,{children:\\"attributes\\"}),\\" : \\",(0,e.jsx)(n.code,{children:\\"JsonObject\\"}),\\" which is attributes that is captured by intent\\"]}),`\\n`,(0,e.jsxs)(n.li,{children:[(0,e.jsx)(n.code,{children:\\"intent\\"}),\\" : \\",(0,e.jsx)(n.code,{children:\\"string\\"}),\\" which is captured intent\\"]}),`\\n`,(0,e.jsxs)(n.li,{children:[(0,e.jsx)(n.code,{children:\\"content\\"}),\\" : \\",(0,e.jsx)(n.code,{children:\\"string\\"}),\\" which is message content\\"]}),`\\n`,(0,e.jsxs)(n.li,{children:[(0,e.jsx)(n.code,{children:\\"payload\\"}),\\" : \\",(0,e.jsx)(n.code,{children:\\"JsonObject\\"}),\\" which is message payload\\"]}),`\\n`,(0,e.jsxs)(n.li,{children:[(0,e.jsx)(n.code,{children:\\"context\\"}),\\" : \\",(0,e.jsx)(n.code,{children:\\"JsonObject\\"}),\\" which is flow context\\"]}),`\\n`,(0,e.jsxs)(n.li,{children:[(0,e.jsx)(n.code,{children:\\"data\\"}),\\" : \\",(0,e.jsx)(n.code,{children:\\"JsonObject\\"}),` which is session data\\nExample:`]}),`\\n`]}),`\\n`,(0,e.jsx)(n.pre,{children:(0,e.jsxs)(n.code,{className:\\"code-highlight\\",children:[(0,e.jsx)(n.span,{className:\\"code-line\\",children:`enter:\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`\\t data.name: attributes.name\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`\\t context.count: (context.count || 0)++\\n`})]})}),`\\n`,(0,e.jsx)(n.p,{children:\\"Example using method:\\"}),`\\n`,(0,e.jsx)(n.pre,{children:(0,e.jsx)(n.code,{className:\\"code-highlight\\",children:(0,e.jsx)(n.span,{className:\\"code-line\\",children:`enter: someMapping\\n`})})}),`\\n`,(0,e.jsx)(n.p,{children:\\"method definition:\\"}),`\\n`,(0,e.jsx)(n.pre,{children:(0,e.jsxs)(n.code,{className:\\"code-highlight\\",children:[(0,e.jsx)(n.span,{className:\\"code-line\\",children:`methods:\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`\\tsomeMapping(ctx): > # {intent, attributes, content, payload, data, context}\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`\\t\\tctx.data.name = ctx.attributes.name;\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`\\t\\tctx.context.count++;\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`\\t\\treturn ctx;\\n`})]})}),`\\n`,(0,e.jsxs)(n.h2,{id:\\"building-state-actions\\",children:[(0,e.jsx)(n.a,{className:\\"anchor\\",href:\\"#building-state-actions\\",children:(0,e.jsx)(n.span,{className:\\"icon icon-link\\"})}),\\"Building state actions\\"]}),`\\n`,(0,e.jsx)(n.p,{children:\\"Action can be defined as a single action or multiple actions. The state action definition contains following fields:\\"}),`\\n`,(0,e.jsxs)(n.ul,{children:[`\\n`,(0,e.jsxs)(n.li,{children:[(0,e.jsx)(n.code,{children:\\"name\\"}),\\" : \\",(0,e.jsx)(n.code,{children:\\"string\\"}),\\" is name of defined action or action type\\"]}),`\\n`,(0,e.jsxs)(n.li,{children:[(0,e.jsx)(n.code,{children:\\"condition\\"}),\\" : \\",(0,e.jsx)(n.code,{children:\\"string\\"}),\\" is condition filter\\"]}),`\\n`,(0,e.jsxs)(n.li,{children:[(0,e.jsx)(n.code,{children:\\"options\\"}),\\" : \\",(0,e.jsx)(n.code,{children:\\"JsonObject\\"}),` is override action options\\nExample:`]}),`\\n`]}),`\\n`,(0,e.jsx)(n.pre,{children:(0,e.jsxs)(n.code,{className:\\"code-highlight\\",children:[(0,e.jsx)(n.span,{className:\\"code-line\\",children:`action:\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`\\t name: reply\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`\\t options:\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`\\t\\ttext: \'hi!\'\\n`})]})}),`\\n`,(0,e.jsx)(n.p,{children:\\"Example multiple actions:\\"}),`\\n`,(0,e.jsx)(n.pre,{children:(0,e.jsxs)(n.code,{className:\\"code-highlight\\",children:[(0,e.jsx)(n.span,{className:\\"code-line\\",children:`action:\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`\\t - name: reply\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`\\t\\tcondition: context.mood = \'good\'\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`\\t\\toptions:\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`\\t\\t  text: \'hi $(data.name)!\'\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`\\t - name: reply\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`\\t\\tcondition: context.mood = \'bad\'\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`\\t\\toptions:\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`\\t\\t  text: \'apaan sih kamu!\'\\n`})]})}),`\\n`,(0,e.jsx)(n.p,{children:\\"You can simplify state actions (if you only have 1 action in some states) :\\"}),`\\n`,(0,e.jsx)(n.pre,{children:(0,e.jsx)(n.code,{className:\\"code-highlight\\",children:(0,e.jsx)(n.span,{className:\\"code-line\\",children:`action: someAction\\n`})})}),`\\n`,(0,e.jsxs)(n.h2,{id:\\"building-transition\\",children:[(0,e.jsx)(n.a,{className:\\"anchor\\",href:\\"#building-transition\\",children:(0,e.jsx)(n.span,{className:\\"icon icon-link\\"})}),\\"Building transition\\"]}),`\\n`,(0,e.jsx)(n.p,{children:\\"Transition define condition that leads to moving from one state to the other state. A transition is defined as following:\\"}),`\\n`,(0,e.jsx)(n.pre,{children:(0,e.jsxs)(n.code,{className:\\"code-highlight\\",children:[(0,e.jsx)(n.span,{className:\\"code-line\\",children:`transitions:\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`\\t <destination>: <Transition>\\n`})]})}),`\\n`,(0,e.jsx)(n.p,{children:\\"Field definition:\\"}),`\\n`,(0,e.jsxs)(n.ul,{children:[`\\n`,(0,e.jsxs)(n.li,{children:[(0,e.jsx)(n.code,{children:\\"condition\\"}),\\" : \\",(0,e.jsx)(n.code,{children:\\"string\\"}),\\" which means condition that trigger the transition\\"]}),`\\n`,(0,e.jsxs)(n.li,{children:[(0,e.jsx)(n.code,{children:\\"priority\\"}),\\" : \\",(0,e.jsx)(n.code,{children:\\"number\\"}),\\" which means priority for transition selection\\"]}),`\\n`,(0,e.jsxs)(n.li,{children:[(0,e.jsx)(n.code,{children:\\"fallback\\"}),\\" : \\",(0,e.jsx)(n.code,{children:\\"boolean\\"}),\\" which means define fallback when no other transition matches\\"]}),`\\n`,(0,e.jsxs)(n.li,{children:[(0,e.jsx)(n.code,{children:\\"mapping\\"}),\\" : \\",(0,e.jsx)(n.code,{children:\\"Mapping | method\\"}),` which means define mapping or method that is triggered during this transition\\nExample:`]}),`\\n`]}),`\\n`,(0,e.jsx)(n.pre,{children:(0,e.jsxs)(n.code,{className:\\"code-highlight\\",children:[(0,e.jsx)(n.span,{className:\\"code-line\\",children:`transitions:\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`\\t askDob:\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`\\t\\tcondition: \\"intent == \'yes\' && !context.personGender && context.verifyGender\\"\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`\\t\\tmapping:\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`\\t\\t  context.personGender: \'context.verifyGender\'\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`\\t\\t  context.verifyGender: \'null\'\\n`})]})}),`\\n`,(0,e.jsx)(n.p,{children:\\"You can simplify transitions definition :\\"}),`\\n`,(0,e.jsx)(n.pre,{children:(0,e.jsxs)(n.code,{className:\\"code-highlight\\",children:[(0,e.jsx)(n.span,{className:\\"code-line\\",children:`transitions\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`\\taskDob: \\"intent == \'yes\' && !context.personGender\\"\\n`})]})}),`\\n`,(0,e.jsxs)(n.h2,{id:\\"building-a-floating-state\\",children:[(0,e.jsx)(n.a,{className:\\"anchor\\",href:\\"#building-a-floating-state\\",children:(0,e.jsx)(n.span,{className:\\"icon icon-link\\"})}),\\"Building a floating State\\"]}),`\\n`,(0,e.jsx)(n.p,{children:\\"Normally it is tedious if we have to define a transition to a state that is available in every state. e.g. Cancel state. To mitigate this we can define a floating transition. The system will automatically attach this transition in every state.\\"}),`\\n`,(0,e.jsx)(n.pre,{children:(0,e.jsx)(n.code,{className:\\"code-highlight\\",children:(0,e.jsx)(n.span,{className:\\"code-line\\",children:`float: <Transition>\\n`})})}),`\\n`,(0,e.jsxs)(n.h2,{id:\\"defining-events\\",children:[(0,e.jsx)(n.a,{className:\\"anchor\\",href:\\"#defining-events\\",children:(0,e.jsx)(n.span,{className:\\"icon icon-link\\"})}),\\"Defining events\\"]}),`\\n`,(0,e.jsx)(n.p,{children:\\"We can define a mapping or method that is triggered during these events:\\"}),`\\n`,(0,e.jsxs)(n.ul,{children:[`\\n`,(0,e.jsxs)(n.li,{children:[(0,e.jsx)(n.code,{children:\\"enter\\"}),\\" which means this event is triggered when entering a state\\"]}),`\\n`,(0,e.jsxs)(n.li,{children:[(0,e.jsx)(n.code,{children:\\"transit\\"}),\\" which means this event is triggered before transition process\\"]}),`\\n`,(0,e.jsxs)(n.li,{children:[(0,e.jsx)(n.code,{children:\\"exit\\"}),\\" which means this event is triggered after transition process\\"]}),`\\n`]}),`\\n`,(0,e.jsxs)(n.h2,{id:\\"building-meta-context\\",children:[(0,e.jsx)(n.a,{className:\\"anchor\\",href:\\"#building-meta-context\\",children:(0,e.jsx)(n.span,{className:\\"icon icon-link\\"})}),\\"Building Meta Context\\"]}),`\\n`,(0,e.jsxs)(n.p,{children:[\\"Additional meta context accessible in states at \\",(0,e.jsx)(n.code,{children:\\"context.<meta>\\"}),\\":\\"]}),`\\n`,(0,e.jsxs)(n.ul,{children:[`\\n`,(0,e.jsxs)(n.li,{children:[(0,e.jsx)(n.code,{children:\\"$start\\"}),\\" : \\",(0,e.jsx)(n.code,{children:\\"boolean\\"}),\\" which means true if state is initial state\\"]}),`\\n`,(0,e.jsxs)(n.li,{children:[(0,e.jsx)(n.code,{children:\\"$to\\"}),\\" : \\",(0,e.jsx)(n.code,{children:\\"string\\"}),\\" which means describe destination state. Available during exit\\"]}),`\\n`,(0,e.jsxs)(n.li,{children:[(0,e.jsx)(n.code,{children:\\"$from\\"}),\\" : \\",(0,e.jsx)(n.code,{children:\\"string\\"}),\\" which means describe origin state. Available during enter\\"]}),`\\n`,(0,e.jsxs)(n.li,{children:[(0,e.jsx)(n.code,{children:\\"$end\\"}),\\" : \\",(0,e.jsx)(n.code,{children:\\"boolean\\"}),` which means true if state is end state\\nExample:`]}),`\\n`]}),`\\n`,(0,e.jsx)(n.pre,{children:(0,e.jsxs)(n.code,{className:\\"code-highlight\\",children:[(0,e.jsx)(n.span,{className:\\"code-line\\",children:`states:\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`\\t stateA:\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`\\t\\tenter:\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`\\t\\t  context.stateACount: (context.stateACount || 0)++\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`\\t\\ttransit:\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`\\t\\t  context.name: attributes.name || null\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`\\t\\texit:\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`\\t\\t  context.stateA.to: context.$to\\n`})]})}),`\\n`,(0,e.jsxs)(n.h2,{id:\\"building-actions\\",children:[(0,e.jsx)(n.a,{className:\\"anchor\\",href:\\"#building-actions\\",children:(0,e.jsx)(n.span,{className:\\"icon icon-link\\"})}),\\"Building actions\\"]}),`\\n`,(0,e.jsx)(n.p,{children:\\"Actions can be defined as following:\\"}),`\\n`,(0,e.jsx)(n.pre,{children:(0,e.jsxs)(n.code,{className:\\"code-highlight\\",children:[(0,e.jsx)(n.span,{className:\\"code-line\\",children:`actions:\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:` <name>: <Action>\\n`})]})}),`\\n`,(0,e.jsx)(n.p,{children:\\"Following fields are available:\\"}),`\\n`,(0,e.jsxs)(n.ul,{children:[`\\n`,(0,e.jsxs)(n.li,{children:[(0,e.jsx)(n.code,{children:\\"type\\"}),\\" : \\",(0,e.jsx)(n.code,{children:\\"string\\"}),\\" which means action type.\\"]}),`\\n`,(0,e.jsxs)(n.li,{children:[(0,e.jsx)(n.code,{children:\\"method\\"}),\\" : \\",(0,e.jsx)(n.code,{children:\\"method\\"}),\\" which means specify if action type is method\\"]}),`\\n`,(0,e.jsxs)(n.li,{children:[(0,e.jsx)(n.code,{children:\\"options\\"}),\\": \\",(0,e.jsx)(n.code,{children:\\"JsonObject\\"}),\\" which means action options\\"]}),`\\n`,(0,e.jsxs)(n.li,{children:[(0,e.jsx)(n.code,{children:\\"condition\\"}),\\" : \\",(0,e.jsx)(n.code,{children:\\"string\\"}),` which means action condition\\nExample:`]}),`\\n`]}),`\\n`,(0,e.jsx)(n.pre,{children:(0,e.jsxs)(n.code,{className:\\"code-highlight\\",children:[(0,e.jsx)(n.span,{className:\\"code-line\\",children:`actions:\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`\\t askName:\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`\\t\\ttype: reply\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`\\t\\toptions:\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`\\t\\t  text: \'nama kamu siapa?\'\\n`})]})}),`\\n`,(0,e.jsxs)(n.h2,{id:\\"flow-switching\\",children:[(0,e.jsx)(n.a,{className:\\"anchor\\",href:\\"#flow-switching\\",children:(0,e.jsx)(n.span,{className:\\"icon icon-link\\"})}),\\"Flow Switching\\"]}),`\\n`,(0,e.jsx)(n.p,{children:\\"Whenever bot reaches a state that is not an end state, the flow will stay open. The following message will trigger a transition to the next state. There is a case where the incoming message cannot be handled by any intents in current flow. In that case it will try to find a flow with a matching intent. When the second flow closes, the system will create internal message reenter.\\"}),`\\n`,(0,e.jsx)(n.pre,{children:(0,e.jsxs)(n.code,{className:\\"code-highlight\\",children:[(0,e.jsx)(n.span,{className:\\"code-line\\",children:`{\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`\\ttype: \\"command\\",\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`\\tcontent: \\"reenter\\",\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`\\tpayload: null\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`}\\n`})]})}),`\\n`,(0,e.jsx)(n.p,{children:\\"this reenter need to be catched by the previous flow that is open:\\"}),`\\n`,(0,e.jsx)(n.pre,{children:(0,e.jsxs)(n.code,{className:\\"code-highlight\\",children:[(0,e.jsx)(n.span,{className:\\"code-line\\",children:`intents:\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`\\treenter:\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`\\t\\ttype: command\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`\\t\\tcondition: content == \\"reenter\\"\\n`})]})}),`\\n`,(0,e.jsxs)(n.h2,{id:\\"building-nlu\\",children:[(0,e.jsx)(n.a,{className:\\"anchor\\",href:\\"#building-nlu\\",children:(0,e.jsx)(n.span,{className:\\"icon icon-link\\"})}),\\"Building NLU\\"]}),`\\n`,(0,e.jsxs)(n.h3,{id:\\"definition\\",children:[(0,e.jsx)(n.a,{className:\\"anchor\\",href:\\"#definition\\",children:(0,e.jsx)(n.span,{className:\\"icon icon-link\\"})}),\\"Definition\\"]}),`\\n`,(0,e.jsx)(n.p,{children:\\"A NLU consists of following definitions:\\"}),`\\n`,(0,e.jsxs)(n.ul,{children:[`\\n`,(0,e.jsxs)(n.li,{children:[(0,e.jsx)(n.code,{children:\\"type\\"}),\\": \\",(0,e.jsx)(n.code,{children:\\"string\\"}),\\" which means NLU Type\\"]}),`\\n`,(0,e.jsxs)(n.li,{children:[(0,e.jsx)(n.code,{children:\\"method\\"}),\\" : \\",(0,e.jsx)(n.code,{children:\\"method\\"}),\\" which means method name\\"]}),`\\n`,(0,e.jsxs)(n.li,{children:[(0,e.jsx)(n.code,{children:\\"options\\"}),\\" : \\",(0,e.jsx)(n.code,{children:\\"JsonObject\\"}),\\" which means Override NLU options\\"]}),`\\n`,(0,e.jsxs)(n.li,{children:[(0,e.jsx)(n.code,{children:\\"process\\"}),\\" : \\",(0,e.jsx)(n.code,{children:\\"method | method[]\\"}),` which means Postprocess intent using methods\\nExample:`]}),`\\n`]}),`\\n`,(0,e.jsx)(n.pre,{children:(0,e.jsxs)(n.code,{className:\\"code-highlight\\",children:[(0,e.jsx)(n.span,{className:\\"code-line\\",children:`nlus:\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`\\t genericNer:\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`\\t\\ttype: verstandTagger\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`\\t\\toptions:\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`\\t\\tmodel: <id>\\n`})]})}),`\\n`,(0,e.jsxs)(n.h3,{id:\\"keyword-nlu\\",children:[(0,e.jsx)(n.a,{className:\\"anchor\\",href:\\"#keyword-nlu\\",children:(0,e.jsx)(n.span,{className:\\"icon icon-link\\"})}),\\"Keyword NLU\\"]}),`\\n`,(0,e.jsx)(n.pre,{children:(0,e.jsxs)(n.code,{className:\\"code-highlight\\",children:[(0,e.jsx)(n.span,{className:\\"code-line\\",children:`myNLU:\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`\\ttype: keyword\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`\\toptions:\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`\\t\\tcase: boolean # true for case sensitive\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`\\t\\texact: boolean # true to match only exact message\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`\\t\\tdefault: string # default key if nothing match\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`\\t\\tkeywords: # <key> : [<match values>]\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`\\t\\t<key>: string[]\\n`})]})}),`\\n`,(0,e.jsx)(n.p,{children:\\"Output:\\"}),`\\n`,(0,e.jsx)(n.pre,{children:(0,e.jsx)(n.code,{className:\\"code-highlight\\",children:(0,e.jsx)(n.span,{className:\\"code-line\\",children:`string\\n`})})}),`\\n`,(0,e.jsx)(n.p,{children:\\"Example:\\"}),`\\n`,(0,e.jsx)(n.pre,{children:(0,e.jsxs)(n.code,{className:\\"code-highlight\\",children:[(0,e.jsx)(n.span,{className:\\"code-line\\",children:`options:\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`\\t keywords:\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`\\t\\t\'American Thin Crust\':\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`\\t\\t  - thin crust\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`\\t\\t  - american thin crust\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`\\t\\t  - american\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`\\t\\t\'Hawaiian\':\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`\\t\\t  - hawai\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`\\t\\t  - hawaiian\\n`})]})}),`\\n`,(0,e.jsxs)(n.h3,{id:\\"regex-nlu\\",children:[(0,e.jsx)(n.a,{className:\\"anchor\\",href:\\"#regex-nlu\\",children:(0,e.jsx)(n.span,{className:\\"icon icon-link\\"})}),\\"Regex NLU\\"]}),`\\n`,(0,e.jsx)(n.pre,{children:(0,e.jsxs)(n.code,{className:\\"code-highlight\\",children:[(0,e.jsx)(n.span,{className:\\"code-line\\",children:`myRegex:\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`\\t type: regex\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`\\t options:\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`\\t\\tregex: <regex as string>\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`\\t\\tindex: number # optional\\n`})]})}),`\\n`,(0,e.jsx)(n.p,{children:\\"or\\"}),`\\n`,(0,e.jsx)(n.pre,{children:(0,e.jsxs)(n.code,{className:\\"code-highlight\\",children:[(0,e.jsx)(n.span,{className:\\"code-line\\",children:`myRegex:\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`\\ttype: regex\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`\\toptions:\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`\\t\\tregex: <regex as string>\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`\\t\\tindex:\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`\\t\\t<key>: number\\n`})]})}),`\\n`,(0,e.jsx)(n.p,{children:\\"or\\"}),`\\n`,(0,e.jsx)(n.pre,{children:(0,e.jsxs)(n.code,{className:\\"code-highlight\\",children:[(0,e.jsx)(n.span,{className:\\"code-line\\",children:`myRegex:\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`\\t type: regex\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`\\t options:\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`\\t\\tregex:\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`\\t\\t <key>: <regex as string>\\n`})]})}),`\\n`,(0,e.jsx)(n.p,{children:\\"Example with index:\\"}),`\\n`,(0,e.jsx)(n.pre,{children:(0,e.jsxs)(n.code,{className:\\"code-highlight\\",children:[(0,e.jsx)(n.span,{className:\\"code-line\\",children:`nlus:\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`\\t nameNLU:\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`\\t\\ttype: regex\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`\\t\\toptions:\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`\\t\\t  regex: \'nama saya (.+)\'\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`\\t\\t  index: 1\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`## usage in intent\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`intents:\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`\\t giveName:\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`\\t\\tattributes:\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`\\t\\t  name:\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`\\t\\t  nlu: nameNLU\\n`})]})}),`\\n`,(0,e.jsx)(n.p,{children:\\"Example with multiple index:\\"}),`\\n`,(0,e.jsx)(n.pre,{children:(0,e.jsxs)(n.code,{className:\\"code-highlight\\",children:[(0,e.jsx)(n.span,{className:\\"code-line\\",children:`nlus:\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`\\t nameNLU:\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`\\t\\ttype: regex\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`\\t\\toptions:\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`\\t\\t  regex: \'nama (saya|kamu) (.+)\'\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`\\t\\t  index:\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`\\t\\t  who: 1\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`\\t\\t  name: 2\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`## usage in intent\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`intents:\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`\\t giveName:\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`\\t\\tattributes:\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`\\t\\t  name:\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`\\t\\t  nlu: nameNLU\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`\\t\\t  path: who\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`\\t\\t  who:\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`\\t\\t  nlu: nameNLU\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`\\t\\t  path: name\\n`})]})}),`\\n`,(0,e.jsx)(n.p,{children:\\"Example with multiple regex:\\"}),`\\n`,(0,e.jsx)(n.pre,{children:(0,e.jsxs)(n.code,{className:\\"code-highlight\\",children:[(0,e.jsx)(n.span,{className:\\"code-line\\",children:`nlus:\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`\\t regexNlu:\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`\\ttype: regex\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`\\toptions:\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`\\t\\t  regex:\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`\\t\\t  name: \'nama saya (.+)\'\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`\\t\\t  email: \'w+@w+.w+\'\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`## usage in intent\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`intents:\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`\\t giveName:\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`\\t\\tattributes:\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`\\t\\t  name:\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`\\t\\t  nlu: regexNlu\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`\\t\\t  path: name\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`\\t\\t  who:\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`\\t\\t  nlu: regexNLU\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`\\t\\t  path: email\\n`})]})}),`\\n`,(0,e.jsxs)(n.h3,{id:\\"nl-studio-nlu\\",children:[(0,e.jsx)(n.a,{className:\\"anchor\\",href:\\"#nl-studio-nlu\\",children:(0,e.jsx)(n.span,{className:\\"icon icon-link\\"})}),\\"NL Studio NLU\\"]}),`\\n`,(0,e.jsx)(n.pre,{children:(0,e.jsxs)(n.code,{className:\\"code-highlight\\",children:[(0,e.jsx)(n.span,{className:\\"code-line\\",children:`mynl:\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`\\t type: nl\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`\\t options:\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`\\t\\tnluId: <nluId>\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`\\t\\ttoken: <nluToken>\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`\\t\\toutput:\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`\\t\\t  <type>\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`\\t\\t  # raw - return the raw prediction result from NL Studio\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`\\t\\t  # value - return the value of each NLU\'s entity\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`\\t\\t  # phrase - only for NL Studio entity type \'phrase\'\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`\\t\\tentity: <entityName> # only for output: phrase\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`\\t\\tthreshold: <number> # confidence rate, if less than treshold bot wouldn\'t recognize as this intent\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`\\t\\tflatten: true # optional, default false\\n`})]})}),`\\n`,(0,e.jsx)(n.p,{children:\\"Examples:\\"}),`\\n`,(0,e.jsx)(n.pre,{children:(0,e.jsxs)(n.code,{className:\\"code-highlight\\",children:[(0,e.jsx)(n.span,{className:\\"code-line\\",children:`## usage in intent for output type value\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`nlus:\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`\\t mynl:\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`\\t\\ttype: nl\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`\\t\\toptions:\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`\\t\\t  nluId: <nluId>\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`\\t\\t  output: value\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`\\t\\t  threshold: 0.5\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`\\t\\t  flatten: true\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`intents:\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`\\t yes:\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`\\t\\tclassifier:\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`\\t\\t  nlu: mynl\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`\\t\\t  expression: \\"intent == \'yes\'\\" # <entityName> == <label> of entity type \'trait\'\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`\\t name:\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`\\t\\tclassifier:\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`\\t\\t  nlu: mynl\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`\\t\\t  expression: ner # <entityName> of entity type \'phrase\'\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`\\t\\tattributes:\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`\\t\\t  person:\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`\\t\\t  nlu: mynl\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`\\t\\t  path: ner # <entityName>\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`## usage in intent for output type phrase\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`nlus:\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`\\t mynl2:\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`\\t\\ttype: nl\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`\\t\\toptions:\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`\\t\\t  nluId: <nluId>\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`\\t\\t  output: phrase\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`\\t\\t  entity: <entityName>\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`\\t\\t  threshold: 0.7\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`intents:\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`\\tcredentials:\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`\\t\\tclassifier:\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`\\t\\t  nlu: mynl # use the previous bot\'s nlu\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`\\t\\t  expression: \\"intent == \'giveCredentials\'\\"\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`\\t\\tattributes:\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`\\t\\t  person:\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`\\t\\t  nlu: mynl2\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`\\t\\t  path: person \\\\xA0 # <label> of mynl2\'s entity <enityName>\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`\\t\\t  location:\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`\\t\\t  nlu: mynl2\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`\\t\\t  path: location # <label> of mynl2\'s entity <enityName>\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`\\t\\t name:\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`\\t\\tclassifier:\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`\\t\\t  nlu: mynl2\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`\\t\\t  expression: person # <label> of mynl2\'s entity <enityName>\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`\\t\\tattributes:\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`\\t\\t  person:\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`\\t\\t  nlu: mynl2\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`\\t\\t  path: person # <label>\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`# alternative approach\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`nlus:\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`\\tmynl3:\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`\\t\\ttype: nl\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`\\t\\toptions:\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`\\t\\tnluId: <nluId>\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`intents:\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`\\t yes:\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`\\t\\tclassifier:\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`\\t\\t  nlu: mynl3\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`\\t\\t  options:\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`\\t\\t  output: value\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`\\t\\t  threshold: 0.5\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`\\t\\t  flatten: true\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`\\t\\t  expression: \\"intent == \'yes\'\\"\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`\\t\\tattributes:\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`\\t\\t  person:\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`\\t\\t  nlu: mynl3\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`\\t\\t  path: person\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`\\t\\t  options:\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`\\t\\t\\t  output: phrase\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`\\t\\t\\t  entity: ner\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`\\t\\t\\t  threshold: 0.7\\n`})]})}),`\\n`,(0,e.jsxs)(n.h2,{id:\\"method\\",children:[(0,e.jsx)(n.a,{className:\\"anchor\\",href:\\"#method\\",children:(0,e.jsx)(n.span,{className:\\"icon icon-link\\"})}),\\"Method\\"]}),`\\n`,(0,e.jsxs)(n.h3,{id:\\"inline-method\\",children:[(0,e.jsx)(n.a,{className:\\"anchor\\",href:\\"#inline-method\\",children:(0,e.jsx)(n.span,{className:\\"icon icon-link\\"})}),\\"Inline Method\\"]}),`\\n`,(0,e.jsx)(n.p,{children:\\"Example:\\"}),`\\n`,(0,e.jsx)(n.pre,{children:(0,e.jsxs)(n.code,{className:\\"code-highlight\\",children:[(0,e.jsx)(n.span,{className:\\"code-line\\",children:`methods:\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`\\tsomeMethod(x): \\"\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`\\t  return x*x;\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`\\t\\"\\n`})]})}),`\\n`,(0,e.jsxs)(n.h3,{id:\\"method-from-file\\",children:[(0,e.jsx)(n.a,{className:\\"anchor\\",href:\\"#method-from-file\\",children:(0,e.jsx)(n.span,{className:\\"icon icon-link\\"})}),\\"Method from File\\"]}),`\\n`,(0,e.jsx)(n.p,{children:\\"Example:\\"}),`\\n`,(0,e.jsx)(n.pre,{children:(0,e.jsxs)(n.code,{className:\\"code-highlight\\",children:[(0,e.jsx)(n.span,{className:\\"code-line\\",children:`method:\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`\\t otherMethod(x):\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`\\t\\tcode: $include(./some/code.js)\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`\\t\\tentry: module.exports\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`// ./some/code.js\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`function otherMethod(x) {\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`\\t return x * x;\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`}\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`module.exports = otherMethod;\\n`})]})})]})}}var v=x;return y(k);})();\\n;return Component;"},"_id":"kata-platform/how-to/how-to-use-kataml-to-build-your-chatbot.mdx","_raw":{"sourceFilePath":"kata-platform/how-to/how-to-use-kataml-to-build-your-chatbot.mdx","sourceFileName":"how-to-use-kataml-to-build-your-chatbot.mdx","sourceFileDir":"kata-platform/how-to","contentType":"mdx","flattenedPath":"kata-platform/how-to/how-to-use-kataml-to-build-your-chatbot"},"type":"KataPlatform","slug":["how-to","how-to-use-kataml-to-build-your-chatbot"],"excerpt":"\\nKata ML is a descriptive YAML-based language for defining bots. The entry-point of KataML-based bot is the bot"}');
;// CONCATENATED MODULE: ./.contentlayer/generated/KataPlatform/kata-platform__how-to__how-to-use-nl-prediction-api-to-help-you-using-the-nlu-in-your-app.mdx.json
const kata_platform_how_to_how_to_use_nl_prediction_api_to_help_you_using_the_nlu_in_your_app_mdx_namespaceObject = JSON.parse('{"id":"how-to-use-nl-prediction-api-to-help-you-using-the-nlu-in-your-app","section":"How To","title":"How to Use NL Prediction API to Help You using The NLU in Your App","prev":"how-to-change-error-messages-in-your-chatbot","next":"how-to-use-kataml-to-build-your-chatbot","body":{"raw":"\\nNow you can use your Natural Language Model everywhere. We provide an NL Prediction API, so you can integrate this to your application.\\n\\nTo get your API Token:\\n\\n- Go to NL Studio\\n- Go to Settings Menu\\n- Get your Token\\n\\n<FigureImage\\n  alt=\\"How to Use NL Prediction API to Help You using The NLU in Your App\\"\\n  src=\\"/assets/images/products/kata-platform/how-to/how-to-use-nl-prediction-api-to-help-you-using-the-nlu-in-your-app/image0.webp\\"\\n  caption={{ title: \'Figure 1\' }}\\n  naturalHeight={1176}\\n  naturalWidth={1164}\\n/>\\n\\n## Request Format\\n\\nUse this format to predict:\\n\\n**Endpoint**\\n\\n```\\nhttps://geist.kata.ai/nlus/{nluId}/predict\\n```\\n\\n**Header**\\n\\n```\\nAuthorization: Bearer <token>\\n```\\n\\n**Body**\\n\\n```json\\n{\\n  \\"text\\": \\"test sentence\\"\\n}\\n```\\n\\n**Response**\\n\\n```\\n{\\n  result: {\\n    entity1:\\n    [\\n      {\\n        type: \'trait\' | \'dict\' | \'phrase\',\\n        start: number,\\n        end: number,\\n        score: number,\\n        value: string,\\n        label: string,        // optional\\n        belongsTo: {          // optional\\n          name: string\\n          index: number\\n          score: number\\n        },\\n        resolved: JsonObject  // optional\\n      }\\n    ],\\n    // entity2: ...\\n  }\\n}\\n```\\n\\n## Example\\n\\n**Body**\\n\\n```json\\n{\\n  \\"text\\": \\"ada satu bebek dan lima kucing di sawah\\"\\n}\\n```\\n\\n**Response**\\n\\n```json\\n{\\n  \\"result\\": {\\n    \\"ner\\": [\\n      {\\n        \\"type\\": \\"phrase\\",\\n        \\"score\\": 0.9999965645021311,\\n        \\"value\\": \\"sawah\\",\\n        \\"label\\": \\"LOCATION\\",\\n        \\"start\\": 34,\\n        \\"end\\": 39\\n      }\\n    ],\\n    \\"animal\\": [\\n      {\\n        \\"type\\": \\"dict\\",\\n        \\"score\\": 0.7501584501364904,\\n        \\"value\\": \\"bebek\\",\\n        \\"start\\": 9,\\n        \\"end\\": 14,\\n        \\"resolved\\": {\\n          \\"dictKey\\": \\"duck\\"\\n        }\\n      },\\n      {\\n        \\"type\\": \\"dict\\",\\n        \\"score\\": 0.7246852050864251,\\n        \\"value\\": \\"kucing\\",\\n        \\"start\\": 24,\\n        \\"end\\": 30,\\n        \\"resolved\\": {\\n          \\"dictKey\\": \\"cat\\"\\n        }\\n      }\\n    ],\\n    \\"number\\": [\\n      {\\n        \\"type\\": \\"phrase\\",\\n        \\"score\\": 0.9376105664167582,\\n        \\"value\\": \\"satu\\",\\n        \\"start\\": 4,\\n        \\"end\\": 8,\\n        \\"belongsTo\\": {\\n          \\"name\\": \\"animal\\",\\n          \\"index\\": 0,\\n          \\"score\\": 0.6410337624317093\\n        }\\n      },\\n      {\\n        \\"type\\": \\"phrase\\",\\n        \\"score\\": 0.9378051647076224,\\n        \\"value\\": \\"lima\\",\\n        \\"start\\": 19,\\n        \\"end\\": 23,\\n        \\"belongsTo\\": {\\n          \\"name\\": \\"animal\\",\\n          \\"index\\": 1,\\n          \\"score\\": 0.6193946079043309\\n        }\\n      }\\n    ],\\n    \\"qisg\\": [\\n      {\\n        \\"type\\": \\"trait\\",\\n        \\"start\\": 0,\\n        \\"end\\": 39,\\n        \\"score\\": 0.9999999997454097,\\n        \\"value\\": \\"statement\\"\\n      }\\n    ]\\n  }\\n}\\n```\\n","code":"var Component=(()=>{var d=Object.create;var r=Object.defineProperty;var h=Object.getOwnPropertyDescriptor;var m=Object.getOwnPropertyNames;var N=Object.getPrototypeOf,u=Object.prototype.hasOwnProperty;var o=a=>r(a,\\"__esModule\\",{value:!0});var k=(a,s)=>()=>(s||a((s={exports:{}}).exports,s),s.exports),g=(a,s)=>{for(var c in s)r(a,c,{get:s[c],enumerable:!0})},t=(a,s,c,n)=>{if(s&&typeof s==\\"object\\"||typeof s==\\"function\\")for(let l of m(s))!u.call(a,l)&&(c||l!==\\"default\\")&&r(a,l,{get:()=>s[l],enumerable:!(n=h(s,l))||n.enumerable});return a},y=(a,s)=>t(o(r(a!=null?d(N(a)):{},\\"default\\",!s&&a&&a.__esModule?{get:()=>a.default,enumerable:!0}:{value:a,enumerable:!0})),a),b=(a=>(s,c)=>a&&a.get(s)||(c=t(o({}),s,1),a&&a.set(s,c),c))(typeof WeakMap!=\\"undefined\\"?new WeakMap:0);var p=k((L,i)=>{i.exports=_jsx_runtime});var v={};g(v,{default:()=>w,frontmatter:()=>x});var e=y(p()),x={id:\\"how-to-use-nl-prediction-api-to-help-you-using-the-nlu-in-your-app\\",title:\\"How to Use NL Prediction API to Help You using The NLU in Your App\\",prev:\\"how-to-change-error-messages-in-your-chatbot\\",next:\\"how-to-use-kataml-to-build-your-chatbot\\",section:\\"How To\\"};function f(a={}){let{wrapper:s}=a.components||{};return s?(0,e.jsx)(s,Object.assign({},a,{children:(0,e.jsx)(c,{})})):c();function c(){let n=Object.assign({p:\\"p\\",ul:\\"ul\\",li:\\"li\\",h2:\\"h2\\",a:\\"a\\",span:\\"span\\",strong:\\"strong\\",pre:\\"pre\\",code:\\"code\\"},a.components),{FigureImage:l}=n;return l||j(\\"FigureImage\\",!0),(0,e.jsxs)(e.Fragment,{children:[(0,e.jsx)(n.p,{children:\\"Now you can use your Natural Language Model everywhere. We provide an NL Prediction API, so you can integrate this to your application.\\"}),`\\n`,(0,e.jsx)(n.p,{children:\\"To get your API Token:\\"}),`\\n`,(0,e.jsxs)(n.ul,{children:[`\\n`,(0,e.jsx)(n.li,{children:\\"Go to NL Studio\\"}),`\\n`,(0,e.jsx)(n.li,{children:\\"Go to Settings Menu\\"}),`\\n`,(0,e.jsx)(n.li,{children:\\"Get your Token\\"}),`\\n`]}),`\\n`,(0,e.jsx)(l,{alt:\\"How to Use NL Prediction API to Help You using The NLU in Your App\\",src:\\"/assets/images/products/kata-platform/how-to/how-to-use-nl-prediction-api-to-help-you-using-the-nlu-in-your-app/image0.webp\\",caption:{title:\\"Figure 1\\"},naturalHeight:1176,naturalWidth:1164}),`\\n`,(0,e.jsxs)(n.h2,{id:\\"request-format\\",children:[(0,e.jsx)(n.a,{className:\\"anchor\\",href:\\"#request-format\\",children:(0,e.jsx)(n.span,{className:\\"icon icon-link\\"})}),\\"Request Format\\"]}),`\\n`,(0,e.jsx)(n.p,{children:\\"Use this format to predict:\\"}),`\\n`,(0,e.jsx)(n.p,{children:(0,e.jsx)(n.strong,{children:\\"Endpoint\\"})}),`\\n`,(0,e.jsx)(n.pre,{children:(0,e.jsx)(n.code,{className:\\"code-highlight\\",children:(0,e.jsx)(n.span,{className:\\"code-line\\",children:`https://geist.kata.ai/nlus/{nluId}/predict\\n`})})}),`\\n`,(0,e.jsx)(n.p,{children:(0,e.jsx)(n.strong,{children:\\"Header\\"})}),`\\n`,(0,e.jsx)(n.pre,{children:(0,e.jsx)(n.code,{className:\\"code-highlight\\",children:(0,e.jsx)(n.span,{className:\\"code-line\\",children:`Authorization: Bearer <token>\\n`})})}),`\\n`,(0,e.jsx)(n.p,{children:(0,e.jsx)(n.strong,{children:\\"Body\\"})}),`\\n`,(0,e.jsx)(n.pre,{className:\\"language-json\\",children:(0,e.jsxs)(n.code,{className:\\"language-json code-highlight\\",children:[(0,e.jsxs)(n.span,{className:\\"code-line\\",children:[(0,e.jsx)(n.span,{className:\\"token punctuation\\",children:\\"{\\"}),`\\n`]}),(0,e.jsxs)(n.span,{className:\\"code-line\\",children:[\\"  \\",(0,e.jsx)(n.span,{className:\\"token property\\",children:\'\\"text\\"\'}),(0,e.jsx)(n.span,{className:\\"token operator\\",children:\\":\\"}),\\" \\",(0,e.jsx)(n.span,{className:\\"token string\\",children:\'\\"test sentence\\"\'}),`\\n`]}),(0,e.jsxs)(n.span,{className:\\"code-line\\",children:[(0,e.jsx)(n.span,{className:\\"token punctuation\\",children:\\"}\\"}),`\\n`]})]})}),`\\n`,(0,e.jsx)(n.p,{children:(0,e.jsx)(n.strong,{children:\\"Response\\"})}),`\\n`,(0,e.jsx)(n.pre,{children:(0,e.jsxs)(n.code,{className:\\"code-highlight\\",children:[(0,e.jsx)(n.span,{className:\\"code-line\\",children:`{\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`  result: {\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`    entity1:\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`    [\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`      {\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`        type: \'trait\' | \'dict\' | \'phrase\',\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`        start: number,\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`        end: number,\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`        score: number,\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`        value: string,\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`        label: string,        // optional\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`        belongsTo: {          // optional\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`          name: string\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`          index: number\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`          score: number\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`        },\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`        resolved: JsonObject  // optional\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`      }\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`    ],\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`    // entity2: ...\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`  }\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`}\\n`})]})}),`\\n`,(0,e.jsxs)(n.h2,{id:\\"example\\",children:[(0,e.jsx)(n.a,{className:\\"anchor\\",href:\\"#example\\",children:(0,e.jsx)(n.span,{className:\\"icon icon-link\\"})}),\\"Example\\"]}),`\\n`,(0,e.jsx)(n.p,{children:(0,e.jsx)(n.strong,{children:\\"Body\\"})}),`\\n`,(0,e.jsx)(n.pre,{className:\\"language-json\\",children:(0,e.jsxs)(n.code,{className:\\"language-json code-highlight\\",children:[(0,e.jsxs)(n.span,{className:\\"code-line\\",children:[(0,e.jsx)(n.span,{className:\\"token punctuation\\",children:\\"{\\"}),`\\n`]}),(0,e.jsxs)(n.span,{className:\\"code-line\\",children:[\\"  \\",(0,e.jsx)(n.span,{className:\\"token property\\",children:\'\\"text\\"\'}),(0,e.jsx)(n.span,{className:\\"token operator\\",children:\\":\\"}),\\" \\",(0,e.jsx)(n.span,{className:\\"token string\\",children:\'\\"ada satu bebek dan lima kucing di sawah\\"\'}),`\\n`]}),(0,e.jsxs)(n.span,{className:\\"code-line\\",children:[(0,e.jsx)(n.span,{className:\\"token punctuation\\",children:\\"}\\"}),`\\n`]})]})}),`\\n`,(0,e.jsx)(n.p,{children:(0,e.jsx)(n.strong,{children:\\"Response\\"})}),`\\n`,(0,e.jsx)(n.pre,{className:\\"language-json\\",children:(0,e.jsxs)(n.code,{className:\\"language-json code-highlight\\",children:[(0,e.jsxs)(n.span,{className:\\"code-line\\",children:[(0,e.jsx)(n.span,{className:\\"token punctuation\\",children:\\"{\\"}),`\\n`]}),(0,e.jsxs)(n.span,{className:\\"code-line\\",children:[\\"  \\",(0,e.jsx)(n.span,{className:\\"token property\\",children:\'\\"result\\"\'}),(0,e.jsx)(n.span,{className:\\"token operator\\",children:\\":\\"}),\\" \\",(0,e.jsx)(n.span,{className:\\"token punctuation\\",children:\\"{\\"}),`\\n`]}),(0,e.jsxs)(n.span,{className:\\"code-line\\",children:[\\"    \\",(0,e.jsx)(n.span,{className:\\"token property\\",children:\'\\"ner\\"\'}),(0,e.jsx)(n.span,{className:\\"token operator\\",children:\\":\\"}),\\" \\",(0,e.jsx)(n.span,{className:\\"token punctuation\\",children:\\"[\\"}),`\\n`]}),(0,e.jsxs)(n.span,{className:\\"code-line\\",children:[\\"      \\",(0,e.jsx)(n.span,{className:\\"token punctuation\\",children:\\"{\\"}),`\\n`]}),(0,e.jsxs)(n.span,{className:\\"code-line\\",children:[\\"        \\",(0,e.jsx)(n.span,{className:\\"token property\\",children:\'\\"type\\"\'}),(0,e.jsx)(n.span,{className:\\"token operator\\",children:\\":\\"}),\\" \\",(0,e.jsx)(n.span,{className:\\"token string\\",children:\'\\"phrase\\"\'}),(0,e.jsx)(n.span,{className:\\"token punctuation\\",children:\\",\\"}),`\\n`]}),(0,e.jsxs)(n.span,{className:\\"code-line\\",children:[\\"        \\",(0,e.jsx)(n.span,{className:\\"token property\\",children:\'\\"score\\"\'}),(0,e.jsx)(n.span,{className:\\"token operator\\",children:\\":\\"}),\\" \\",(0,e.jsx)(n.span,{className:\\"token number\\",children:\\"0.9999965645021311\\"}),(0,e.jsx)(n.span,{className:\\"token punctuation\\",children:\\",\\"}),`\\n`]}),(0,e.jsxs)(n.span,{className:\\"code-line\\",children:[\\"        \\",(0,e.jsx)(n.span,{className:\\"token property\\",children:\'\\"value\\"\'}),(0,e.jsx)(n.span,{className:\\"token operator\\",children:\\":\\"}),\\" \\",(0,e.jsx)(n.span,{className:\\"token string\\",children:\'\\"sawah\\"\'}),(0,e.jsx)(n.span,{className:\\"token punctuation\\",children:\\",\\"}),`\\n`]}),(0,e.jsxs)(n.span,{className:\\"code-line\\",children:[\\"        \\",(0,e.jsx)(n.span,{className:\\"token property\\",children:\'\\"label\\"\'}),(0,e.jsx)(n.span,{className:\\"token operator\\",children:\\":\\"}),\\" \\",(0,e.jsx)(n.span,{className:\\"token string\\",children:\'\\"LOCATION\\"\'}),(0,e.jsx)(n.span,{className:\\"token punctuation\\",children:\\",\\"}),`\\n`]}),(0,e.jsxs)(n.span,{className:\\"code-line\\",children:[\\"        \\",(0,e.jsx)(n.span,{className:\\"token property\\",children:\'\\"start\\"\'}),(0,e.jsx)(n.span,{className:\\"token operator\\",children:\\":\\"}),\\" \\",(0,e.jsx)(n.span,{className:\\"token number\\",children:\\"34\\"}),(0,e.jsx)(n.span,{className:\\"token punctuation\\",children:\\",\\"}),`\\n`]}),(0,e.jsxs)(n.span,{className:\\"code-line\\",children:[\\"        \\",(0,e.jsx)(n.span,{className:\\"token property\\",children:\'\\"end\\"\'}),(0,e.jsx)(n.span,{className:\\"token operator\\",children:\\":\\"}),\\" \\",(0,e.jsx)(n.span,{className:\\"token number\\",children:\\"39\\"}),`\\n`]}),(0,e.jsxs)(n.span,{className:\\"code-line\\",children:[\\"      \\",(0,e.jsx)(n.span,{className:\\"token punctuation\\",children:\\"}\\"}),`\\n`]}),(0,e.jsxs)(n.span,{className:\\"code-line\\",children:[\\"    \\",(0,e.jsx)(n.span,{className:\\"token punctuation\\",children:\\"]\\"}),(0,e.jsx)(n.span,{className:\\"token punctuation\\",children:\\",\\"}),`\\n`]}),(0,e.jsxs)(n.span,{className:\\"code-line\\",children:[\\"    \\",(0,e.jsx)(n.span,{className:\\"token property\\",children:\'\\"animal\\"\'}),(0,e.jsx)(n.span,{className:\\"token operator\\",children:\\":\\"}),\\" \\",(0,e.jsx)(n.span,{className:\\"token punctuation\\",children:\\"[\\"}),`\\n`]}),(0,e.jsxs)(n.span,{className:\\"code-line\\",children:[\\"      \\",(0,e.jsx)(n.span,{className:\\"token punctuation\\",children:\\"{\\"}),`\\n`]}),(0,e.jsxs)(n.span,{className:\\"code-line\\",children:[\\"        \\",(0,e.jsx)(n.span,{className:\\"token property\\",children:\'\\"type\\"\'}),(0,e.jsx)(n.span,{className:\\"token operator\\",children:\\":\\"}),\\" \\",(0,e.jsx)(n.span,{className:\\"token string\\",children:\'\\"dict\\"\'}),(0,e.jsx)(n.span,{className:\\"token punctuation\\",children:\\",\\"}),`\\n`]}),(0,e.jsxs)(n.span,{className:\\"code-line\\",children:[\\"        \\",(0,e.jsx)(n.span,{className:\\"token property\\",children:\'\\"score\\"\'}),(0,e.jsx)(n.span,{className:\\"token operator\\",children:\\":\\"}),\\" \\",(0,e.jsx)(n.span,{className:\\"token number\\",children:\\"0.7501584501364904\\"}),(0,e.jsx)(n.span,{className:\\"token punctuation\\",children:\\",\\"}),`\\n`]}),(0,e.jsxs)(n.span,{className:\\"code-line\\",children:[\\"        \\",(0,e.jsx)(n.span,{className:\\"token property\\",children:\'\\"value\\"\'}),(0,e.jsx)(n.span,{className:\\"token operator\\",children:\\":\\"}),\\" \\",(0,e.jsx)(n.span,{className:\\"token string\\",children:\'\\"bebek\\"\'}),(0,e.jsx)(n.span,{className:\\"token punctuation\\",children:\\",\\"}),`\\n`]}),(0,e.jsxs)(n.span,{className:\\"code-line\\",children:[\\"        \\",(0,e.jsx)(n.span,{className:\\"token property\\",children:\'\\"start\\"\'}),(0,e.jsx)(n.span,{className:\\"token operator\\",children:\\":\\"}),\\" \\",(0,e.jsx)(n.span,{className:\\"token number\\",children:\\"9\\"}),(0,e.jsx)(n.span,{className:\\"token punctuation\\",children:\\",\\"}),`\\n`]}),(0,e.jsxs)(n.span,{className:\\"code-line\\",children:[\\"        \\",(0,e.jsx)(n.span,{className:\\"token property\\",children:\'\\"end\\"\'}),(0,e.jsx)(n.span,{className:\\"token operator\\",children:\\":\\"}),\\" \\",(0,e.jsx)(n.span,{className:\\"token number\\",children:\\"14\\"}),(0,e.jsx)(n.span,{className:\\"token punctuation\\",children:\\",\\"}),`\\n`]}),(0,e.jsxs)(n.span,{className:\\"code-line\\",children:[\\"        \\",(0,e.jsx)(n.span,{className:\\"token property\\",children:\'\\"resolved\\"\'}),(0,e.jsx)(n.span,{className:\\"token operator\\",children:\\":\\"}),\\" \\",(0,e.jsx)(n.span,{className:\\"token punctuation\\",children:\\"{\\"}),`\\n`]}),(0,e.jsxs)(n.span,{className:\\"code-line\\",children:[\\"          \\",(0,e.jsx)(n.span,{className:\\"token property\\",children:\'\\"dictKey\\"\'}),(0,e.jsx)(n.span,{className:\\"token operator\\",children:\\":\\"}),\\" \\",(0,e.jsx)(n.span,{className:\\"token string\\",children:\'\\"duck\\"\'}),`\\n`]}),(0,e.jsxs)(n.span,{className:\\"code-line\\",children:[\\"        \\",(0,e.jsx)(n.span,{className:\\"token punctuation\\",children:\\"}\\"}),`\\n`]}),(0,e.jsxs)(n.span,{className:\\"code-line\\",children:[\\"      \\",(0,e.jsx)(n.span,{className:\\"token punctuation\\",children:\\"}\\"}),(0,e.jsx)(n.span,{className:\\"token punctuation\\",children:\\",\\"}),`\\n`]}),(0,e.jsxs)(n.span,{className:\\"code-line\\",children:[\\"      \\",(0,e.jsx)(n.span,{className:\\"token punctuation\\",children:\\"{\\"}),`\\n`]}),(0,e.jsxs)(n.span,{className:\\"code-line\\",children:[\\"        \\",(0,e.jsx)(n.span,{className:\\"token property\\",children:\'\\"type\\"\'}),(0,e.jsx)(n.span,{className:\\"token operator\\",children:\\":\\"}),\\" \\",(0,e.jsx)(n.span,{className:\\"token string\\",children:\'\\"dict\\"\'}),(0,e.jsx)(n.span,{className:\\"token punctuation\\",children:\\",\\"}),`\\n`]}),(0,e.jsxs)(n.span,{className:\\"code-line\\",children:[\\"        \\",(0,e.jsx)(n.span,{className:\\"token property\\",children:\'\\"score\\"\'}),(0,e.jsx)(n.span,{className:\\"token operator\\",children:\\":\\"}),\\" \\",(0,e.jsx)(n.span,{className:\\"token number\\",children:\\"0.7246852050864251\\"}),(0,e.jsx)(n.span,{className:\\"token punctuation\\",children:\\",\\"}),`\\n`]}),(0,e.jsxs)(n.span,{className:\\"code-line\\",children:[\\"        \\",(0,e.jsx)(n.span,{className:\\"token property\\",children:\'\\"value\\"\'}),(0,e.jsx)(n.span,{className:\\"token operator\\",children:\\":\\"}),\\" \\",(0,e.jsx)(n.span,{className:\\"token string\\",children:\'\\"kucing\\"\'}),(0,e.jsx)(n.span,{className:\\"token punctuation\\",children:\\",\\"}),`\\n`]}),(0,e.jsxs)(n.span,{className:\\"code-line\\",children:[\\"        \\",(0,e.jsx)(n.span,{className:\\"token property\\",children:\'\\"start\\"\'}),(0,e.jsx)(n.span,{className:\\"token operator\\",children:\\":\\"}),\\" \\",(0,e.jsx)(n.span,{className:\\"token number\\",children:\\"24\\"}),(0,e.jsx)(n.span,{className:\\"token punctuation\\",children:\\",\\"}),`\\n`]}),(0,e.jsxs)(n.span,{className:\\"code-line\\",children:[\\"        \\",(0,e.jsx)(n.span,{className:\\"token property\\",children:\'\\"end\\"\'}),(0,e.jsx)(n.span,{className:\\"token operator\\",children:\\":\\"}),\\" \\",(0,e.jsx)(n.span,{className:\\"token number\\",children:\\"30\\"}),(0,e.jsx)(n.span,{className:\\"token punctuation\\",children:\\",\\"}),`\\n`]}),(0,e.jsxs)(n.span,{className:\\"code-line\\",children:[\\"        \\",(0,e.jsx)(n.span,{className:\\"token property\\",children:\'\\"resolved\\"\'}),(0,e.jsx)(n.span,{className:\\"token operator\\",children:\\":\\"}),\\" \\",(0,e.jsx)(n.span,{className:\\"token punctuation\\",children:\\"{\\"}),`\\n`]}),(0,e.jsxs)(n.span,{className:\\"code-line\\",children:[\\"          \\",(0,e.jsx)(n.span,{className:\\"token property\\",children:\'\\"dictKey\\"\'}),(0,e.jsx)(n.span,{className:\\"token operator\\",children:\\":\\"}),\\" \\",(0,e.jsx)(n.span,{className:\\"token string\\",children:\'\\"cat\\"\'}),`\\n`]}),(0,e.jsxs)(n.span,{className:\\"code-line\\",children:[\\"        \\",(0,e.jsx)(n.span,{className:\\"token punctuation\\",children:\\"}\\"}),`\\n`]}),(0,e.jsxs)(n.span,{className:\\"code-line\\",children:[\\"      \\",(0,e.jsx)(n.span,{className:\\"token punctuation\\",children:\\"}\\"}),`\\n`]}),(0,e.jsxs)(n.span,{className:\\"code-line\\",children:[\\"    \\",(0,e.jsx)(n.span,{className:\\"token punctuation\\",children:\\"]\\"}),(0,e.jsx)(n.span,{className:\\"token punctuation\\",children:\\",\\"}),`\\n`]}),(0,e.jsxs)(n.span,{className:\\"code-line\\",children:[\\"    \\",(0,e.jsx)(n.span,{className:\\"token property\\",children:\'\\"number\\"\'}),(0,e.jsx)(n.span,{className:\\"token operator\\",children:\\":\\"}),\\" \\",(0,e.jsx)(n.span,{className:\\"token punctuation\\",children:\\"[\\"}),`\\n`]}),(0,e.jsxs)(n.span,{className:\\"code-line\\",children:[\\"      \\",(0,e.jsx)(n.span,{className:\\"token punctuation\\",children:\\"{\\"}),`\\n`]}),(0,e.jsxs)(n.span,{className:\\"code-line\\",children:[\\"        \\",(0,e.jsx)(n.span,{className:\\"token property\\",children:\'\\"type\\"\'}),(0,e.jsx)(n.span,{className:\\"token operator\\",children:\\":\\"}),\\" \\",(0,e.jsx)(n.span,{className:\\"token string\\",children:\'\\"phrase\\"\'}),(0,e.jsx)(n.span,{className:\\"token punctuation\\",children:\\",\\"}),`\\n`]}),(0,e.jsxs)(n.span,{className:\\"code-line\\",children:[\\"        \\",(0,e.jsx)(n.span,{className:\\"token property\\",children:\'\\"score\\"\'}),(0,e.jsx)(n.span,{className:\\"token operator\\",children:\\":\\"}),\\" \\",(0,e.jsx)(n.span,{className:\\"token number\\",children:\\"0.9376105664167582\\"}),(0,e.jsx)(n.span,{className:\\"token punctuation\\",children:\\",\\"}),`\\n`]}),(0,e.jsxs)(n.span,{className:\\"code-line\\",children:[\\"        \\",(0,e.jsx)(n.span,{className:\\"token property\\",children:\'\\"value\\"\'}),(0,e.jsx)(n.span,{className:\\"token operator\\",children:\\":\\"}),\\" \\",(0,e.jsx)(n.span,{className:\\"token string\\",children:\'\\"satu\\"\'}),(0,e.jsx)(n.span,{className:\\"token punctuation\\",children:\\",\\"}),`\\n`]}),(0,e.jsxs)(n.span,{className:\\"code-line\\",children:[\\"        \\",(0,e.jsx)(n.span,{className:\\"token property\\",children:\'\\"start\\"\'}),(0,e.jsx)(n.span,{className:\\"token operator\\",children:\\":\\"}),\\" \\",(0,e.jsx)(n.span,{className:\\"token number\\",children:\\"4\\"}),(0,e.jsx)(n.span,{className:\\"token punctuation\\",children:\\",\\"}),`\\n`]}),(0,e.jsxs)(n.span,{className:\\"code-line\\",children:[\\"        \\",(0,e.jsx)(n.span,{className:\\"token property\\",children:\'\\"end\\"\'}),(0,e.jsx)(n.span,{className:\\"token operator\\",children:\\":\\"}),\\" \\",(0,e.jsx)(n.span,{className:\\"token number\\",children:\\"8\\"}),(0,e.jsx)(n.span,{className:\\"token punctuation\\",children:\\",\\"}),`\\n`]}),(0,e.jsxs)(n.span,{className:\\"code-line\\",children:[\\"        \\",(0,e.jsx)(n.span,{className:\\"token property\\",children:\'\\"belongsTo\\"\'}),(0,e.jsx)(n.span,{className:\\"token operator\\",children:\\":\\"}),\\" \\",(0,e.jsx)(n.span,{className:\\"token punctuation\\",children:\\"{\\"}),`\\n`]}),(0,e.jsxs)(n.span,{className:\\"code-line\\",children:[\\"          \\",(0,e.jsx)(n.span,{className:\\"token property\\",children:\'\\"name\\"\'}),(0,e.jsx)(n.span,{className:\\"token operator\\",children:\\":\\"}),\\" \\",(0,e.jsx)(n.span,{className:\\"token string\\",children:\'\\"animal\\"\'}),(0,e.jsx)(n.span,{className:\\"token punctuation\\",children:\\",\\"}),`\\n`]}),(0,e.jsxs)(n.span,{className:\\"code-line\\",children:[\\"          \\",(0,e.jsx)(n.span,{className:\\"token property\\",children:\'\\"index\\"\'}),(0,e.jsx)(n.span,{className:\\"token operator\\",children:\\":\\"}),\\" \\",(0,e.jsx)(n.span,{className:\\"token number\\",children:\\"0\\"}),(0,e.jsx)(n.span,{className:\\"token punctuation\\",children:\\",\\"}),`\\n`]}),(0,e.jsxs)(n.span,{className:\\"code-line\\",children:[\\"          \\",(0,e.jsx)(n.span,{className:\\"token property\\",children:\'\\"score\\"\'}),(0,e.jsx)(n.span,{className:\\"token operator\\",children:\\":\\"}),\\" \\",(0,e.jsx)(n.span,{className:\\"token number\\",children:\\"0.6410337624317093\\"}),`\\n`]}),(0,e.jsxs)(n.span,{className:\\"code-line\\",children:[\\"        \\",(0,e.jsx)(n.span,{className:\\"token punctuation\\",children:\\"}\\"}),`\\n`]}),(0,e.jsxs)(n.span,{className:\\"code-line\\",children:[\\"      \\",(0,e.jsx)(n.span,{className:\\"token punctuation\\",children:\\"}\\"}),(0,e.jsx)(n.span,{className:\\"token punctuation\\",children:\\",\\"}),`\\n`]}),(0,e.jsxs)(n.span,{className:\\"code-line\\",children:[\\"      \\",(0,e.jsx)(n.span,{className:\\"token punctuation\\",children:\\"{\\"}),`\\n`]}),(0,e.jsxs)(n.span,{className:\\"code-line\\",children:[\\"        \\",(0,e.jsx)(n.span,{className:\\"token property\\",children:\'\\"type\\"\'}),(0,e.jsx)(n.span,{className:\\"token operator\\",children:\\":\\"}),\\" \\",(0,e.jsx)(n.span,{className:\\"token string\\",children:\'\\"phrase\\"\'}),(0,e.jsx)(n.span,{className:\\"token punctuation\\",children:\\",\\"}),`\\n`]}),(0,e.jsxs)(n.span,{className:\\"code-line\\",children:[\\"        \\",(0,e.jsx)(n.span,{className:\\"token property\\",children:\'\\"score\\"\'}),(0,e.jsx)(n.span,{className:\\"token operator\\",children:\\":\\"}),\\" \\",(0,e.jsx)(n.span,{className:\\"token number\\",children:\\"0.9378051647076224\\"}),(0,e.jsx)(n.span,{className:\\"token punctuation\\",children:\\",\\"}),`\\n`]}),(0,e.jsxs)(n.span,{className:\\"code-line\\",children:[\\"        \\",(0,e.jsx)(n.span,{className:\\"token property\\",children:\'\\"value\\"\'}),(0,e.jsx)(n.span,{className:\\"token operator\\",children:\\":\\"}),\\" \\",(0,e.jsx)(n.span,{className:\\"token string\\",children:\'\\"lima\\"\'}),(0,e.jsx)(n.span,{className:\\"token punctuation\\",children:\\",\\"}),`\\n`]}),(0,e.jsxs)(n.span,{className:\\"code-line\\",children:[\\"        \\",(0,e.jsx)(n.span,{className:\\"token property\\",children:\'\\"start\\"\'}),(0,e.jsx)(n.span,{className:\\"token operator\\",children:\\":\\"}),\\" \\",(0,e.jsx)(n.span,{className:\\"token number\\",children:\\"19\\"}),(0,e.jsx)(n.span,{className:\\"token punctuation\\",children:\\",\\"}),`\\n`]}),(0,e.jsxs)(n.span,{className:\\"code-line\\",children:[\\"        \\",(0,e.jsx)(n.span,{className:\\"token property\\",children:\'\\"end\\"\'}),(0,e.jsx)(n.span,{className:\\"token operator\\",children:\\":\\"}),\\" \\",(0,e.jsx)(n.span,{className:\\"token number\\",children:\\"23\\"}),(0,e.jsx)(n.span,{className:\\"token punctuation\\",children:\\",\\"}),`\\n`]}),(0,e.jsxs)(n.span,{className:\\"code-line\\",children:[\\"        \\",(0,e.jsx)(n.span,{className:\\"token property\\",children:\'\\"belongsTo\\"\'}),(0,e.jsx)(n.span,{className:\\"token operator\\",children:\\":\\"}),\\" \\",(0,e.jsx)(n.span,{className:\\"token punctuation\\",children:\\"{\\"}),`\\n`]}),(0,e.jsxs)(n.span,{className:\\"code-line\\",children:[\\"          \\",(0,e.jsx)(n.span,{className:\\"token property\\",children:\'\\"name\\"\'}),(0,e.jsx)(n.span,{className:\\"token operator\\",children:\\":\\"}),\\" \\",(0,e.jsx)(n.span,{className:\\"token string\\",children:\'\\"animal\\"\'}),(0,e.jsx)(n.span,{className:\\"token punctuation\\",children:\\",\\"}),`\\n`]}),(0,e.jsxs)(n.span,{className:\\"code-line\\",children:[\\"          \\",(0,e.jsx)(n.span,{className:\\"token property\\",children:\'\\"index\\"\'}),(0,e.jsx)(n.span,{className:\\"token operator\\",children:\\":\\"}),\\" \\",(0,e.jsx)(n.span,{className:\\"token number\\",children:\\"1\\"}),(0,e.jsx)(n.span,{className:\\"token punctuation\\",children:\\",\\"}),`\\n`]}),(0,e.jsxs)(n.span,{className:\\"code-line\\",children:[\\"          \\",(0,e.jsx)(n.span,{className:\\"token property\\",children:\'\\"score\\"\'}),(0,e.jsx)(n.span,{className:\\"token operator\\",children:\\":\\"}),\\" \\",(0,e.jsx)(n.span,{className:\\"token number\\",children:\\"0.6193946079043309\\"}),`\\n`]}),(0,e.jsxs)(n.span,{className:\\"code-line\\",children:[\\"        \\",(0,e.jsx)(n.span,{className:\\"token punctuation\\",children:\\"}\\"}),`\\n`]}),(0,e.jsxs)(n.span,{className:\\"code-line\\",children:[\\"      \\",(0,e.jsx)(n.span,{className:\\"token punctuation\\",children:\\"}\\"}),`\\n`]}),(0,e.jsxs)(n.span,{className:\\"code-line\\",children:[\\"    \\",(0,e.jsx)(n.span,{className:\\"token punctuation\\",children:\\"]\\"}),(0,e.jsx)(n.span,{className:\\"token punctuation\\",children:\\",\\"}),`\\n`]}),(0,e.jsxs)(n.span,{className:\\"code-line\\",children:[\\"    \\",(0,e.jsx)(n.span,{className:\\"token property\\",children:\'\\"qisg\\"\'}),(0,e.jsx)(n.span,{className:\\"token operator\\",children:\\":\\"}),\\" \\",(0,e.jsx)(n.span,{className:\\"token punctuation\\",children:\\"[\\"}),`\\n`]}),(0,e.jsxs)(n.span,{className:\\"code-line\\",children:[\\"      \\",(0,e.jsx)(n.span,{className:\\"token punctuation\\",children:\\"{\\"}),`\\n`]}),(0,e.jsxs)(n.span,{className:\\"code-line\\",children:[\\"        \\",(0,e.jsx)(n.span,{className:\\"token property\\",children:\'\\"type\\"\'}),(0,e.jsx)(n.span,{className:\\"token operator\\",children:\\":\\"}),\\" \\",(0,e.jsx)(n.span,{className:\\"token string\\",children:\'\\"trait\\"\'}),(0,e.jsx)(n.span,{className:\\"token punctuation\\",children:\\",\\"}),`\\n`]}),(0,e.jsxs)(n.span,{className:\\"code-line\\",children:[\\"        \\",(0,e.jsx)(n.span,{className:\\"token property\\",children:\'\\"start\\"\'}),(0,e.jsx)(n.span,{className:\\"token operator\\",children:\\":\\"}),\\" \\",(0,e.jsx)(n.span,{className:\\"token number\\",children:\\"0\\"}),(0,e.jsx)(n.span,{className:\\"token punctuation\\",children:\\",\\"}),`\\n`]}),(0,e.jsxs)(n.span,{className:\\"code-line\\",children:[\\"        \\",(0,e.jsx)(n.span,{className:\\"token property\\",children:\'\\"end\\"\'}),(0,e.jsx)(n.span,{className:\\"token operator\\",children:\\":\\"}),\\" \\",(0,e.jsx)(n.span,{className:\\"token number\\",children:\\"39\\"}),(0,e.jsx)(n.span,{className:\\"token punctuation\\",children:\\",\\"}),`\\n`]}),(0,e.jsxs)(n.span,{className:\\"code-line\\",children:[\\"        \\",(0,e.jsx)(n.span,{className:\\"token property\\",children:\'\\"score\\"\'}),(0,e.jsx)(n.span,{className:\\"token operator\\",children:\\":\\"}),\\" \\",(0,e.jsx)(n.span,{className:\\"token number\\",children:\\"0.9999999997454097\\"}),(0,e.jsx)(n.span,{className:\\"token punctuation\\",children:\\",\\"}),`\\n`]}),(0,e.jsxs)(n.span,{className:\\"code-line\\",children:[\\"        \\",(0,e.jsx)(n.span,{className:\\"token property\\",children:\'\\"value\\"\'}),(0,e.jsx)(n.span,{className:\\"token operator\\",children:\\":\\"}),\\" \\",(0,e.jsx)(n.span,{className:\\"token string\\",children:\'\\"statement\\"\'}),`\\n`]}),(0,e.jsxs)(n.span,{className:\\"code-line\\",children:[\\"      \\",(0,e.jsx)(n.span,{className:\\"token punctuation\\",children:\\"}\\"}),`\\n`]}),(0,e.jsxs)(n.span,{className:\\"code-line\\",children:[\\"    \\",(0,e.jsx)(n.span,{className:\\"token punctuation\\",children:\\"]\\"}),`\\n`]}),(0,e.jsxs)(n.span,{className:\\"code-line\\",children:[\\"  \\",(0,e.jsx)(n.span,{className:\\"token punctuation\\",children:\\"}\\"}),`\\n`]}),(0,e.jsxs)(n.span,{className:\\"code-line\\",children:[(0,e.jsx)(n.span,{className:\\"token punctuation\\",children:\\"}\\"}),`\\n`]})]})})]})}}var w=f;function j(a,s){throw new Error(\\"Expected \\"+(s?\\"component\\":\\"object\\")+\\" `\\"+a+\\"` to be defined: you likely forgot to import, pass, or provide it.\\")}return b(v);})();\\n;return Component;"},"_id":"kata-platform/how-to/how-to-use-nl-prediction-api-to-help-you-using-the-nlu-in-your-app.mdx","_raw":{"sourceFilePath":"kata-platform/how-to/how-to-use-nl-prediction-api-to-help-you-using-the-nlu-in-your-app.mdx","sourceFileName":"how-to-use-nl-prediction-api-to-help-you-using-the-nlu-in-your-app.mdx","sourceFileDir":"kata-platform/how-to","contentType":"mdx","flattenedPath":"kata-platform/how-to/how-to-use-nl-prediction-api-to-help-you-using-the-nlu-in-your-app"},"type":"KataPlatform","slug":["how-to","how-to-use-nl-prediction-api-to-help-you-using-the-nlu-in-your-app"],"excerpt":"\\nNow you can use your Natural Language Model everywhere. We provide an NL Prediction API, so you can integrate this to your application"}');
;// CONCATENATED MODULE: ./.contentlayer/generated/KataPlatform/kata-platform__how-to__how-to-use-nlu-threshold-to-enhance-customer-experience.mdx.json
const kata_platform_how_to_how_to_use_nlu_threshold_to_enhance_customer_experience_mdx_namespaceObject = JSON.parse('{"id":"how-to-use-nlu-threshold-to-enhance-customer-experience","section":"How To","title":"How to Use NLU Threshold to Enhance Customer Experience","prev":"how-to-improve-your-chatbot-intelligence-by-training-your-nlu","next":"how-to-use-super-model-to-improve-your-bot-intelligence","body":{"raw":"\\n## Introduction\\n\\nIn general, the incoming message flow is:\\n\\n1. An incoming message is caught by intent.\\n2. Next, the intent will check in NLUs previously added using Add classifier and Add attribute features. You can add more than 1 NLUs. Then it enables the intent to check all NLUs.\\n3. Then, NLUs will check the threshold. The threshold can act as a confidence level, and these values range from 0.0 (completely uncertain) to 1.0 (completely confident). This confidence level is usually set between 0.7 to 0.8. Finally, NLUs will check whether the confidence score from the incoming message is lower or higher than the threshold?\\n   - If an incoming message is **lower** than the threshold, NLUs will send bot information that the incoming message is incorrect with what NLU had recognized. Then, the intent will be checked by other NLUs.\\n   - If an incoming message is **equal to or higher** than the threshold, NLUs will send information that the condition is correct.\\n4. If NLUs condition has matched, then intent will send information to a bot that incoming message from the end-user is recognized as intent `“yesNL”` (for example).\\n5. Then, the bot will check the following action if an intent condition has been fulfilled. For example, if the transition has condition `intent==‘yesNL’`, then the bot will execute the next state connected between the transition. Check the image below for more detail.\\n\\n<FigureImage\\n  alt=\\"Image 1 Alt\\"\\n  src=\\"/assets/images/products/kata-platform/how-to/how-to-use-nlu-threshold-to-enhance-customer-experience/image1.webp\\"\\n  caption={{ title: \'Figure 1\', description: \'Transition example which condition has intent using NLU.\' }}\\n  layout=\\"responsive\\"\\n  naturalHeight={1110}\\n  naturalWidth={1328}\\n/>\\n\\n## How to Use\\n\\nTo integrate NLU can be implemented in chatbot, these are the steps:\\n\\n1. First, in the Kata Platform, go to the **Flow** menu. Then, click the **NLUs** menu in the sidebar.\\n\\n<FigureImage\\n  alt=\\"Image 2 Alt\\"\\n  src=\\"/assets/images/products/kata-platform/how-to/how-to-use-nlu-threshold-to-enhance-customer-experience/image2.webp\\"\\n  caption={{ title: \'Figure 2\', description: \'NLUs position in sidebar.\' }}\\n  layout=\\"responsive\\"\\n  naturalHeight={670}\\n  naturalWidth={1600}\\n/>\\n\\n2. Click on the **Create NLU** button. Then it will show a form on the right screen.\\n3. Fill in NLUs name and choose an NLU Type. For this guide, you will select **NL**.\\n4. On the **NLU ID** search and dropdown, you will search your NLU to integrate it into your chatbot. NLU ID consists of username and project with format `[username]:[project name]`. For example, in the [getting started chatbot section](/kata-platform/documentation-content/start-your-first-chatbot), your NLU ID format is `muhfadhiilkata:test_simple_bot`. You can use NLU ID from another project as long as the project is set as public.\\n5. **Threshold** can act as a confidence level, and these values range from 0.0 (completely uncertain) to 1.0 (completely confident). This confidence level is usually set between 0.7 to 0.8. So the data that falls under 0.7/0.8 will not be detected by the bot. The field only allows numbers and decimals to separate using the “.” character.\\n6. **As Intent** is a feature to collect available labels in the NLU. The field only allows alphanumerics.\\n7. **Output** has several output types, depending on the entity type you used.\\n\\n<Table>\\n  <TableHead>\\n    <TableHeadCell>Output Types</TableHeadCell>\\n    <TableHeadCell>Functionals</TableHeadCell>\\n  </TableHead>\\n  <TableBody>\\n    <TableBodyRow>\\n      <TableBodyCell>Raw</TableBodyCell>\\n      <TableBodyCell>\\n        Use this output type if your entity type is “trait”. It will result in raw sentences.\\n      </TableBodyCell>\\n    </TableBodyRow>\\n    <TableBodyRow>\\n      <TableBodyCell>Dictionary</TableBodyCell>\\n      <TableBodyCell>\\n        Use this output type if your entity type is “dictionary”. It will result in an array consisting of keys and\\n        labels.\\n      </TableBodyCell>\\n    </TableBodyRow>\\n    <TableBodyRow>\\n      <TableBodyCell>Phrase</TableBodyCell>\\n      <TableBodyCell>Using supermodel “kata entity”, you must use this output type.</TableBodyCell>\\n    </TableBodyRow>\\n  </TableBody>\\n</Table>\\n\\n8. **Path** is a feature to support integration with Supermodel.\\n9. Click **Create** to finish your NLUs.\\n\\nFor example, you must integrate an NLU ID `muhfadhiilkata:test_simple_bot`, which has 1 entity name “topic” and entity type is “trait”, to an intent named “topic”. The entity “topic” has 2 labels: `FAQ`, `order`, and `buy`.\\n\\nThe first step is you will fill in the NLUs form as follows:\\n\\n```\\nNLU Name: topic-nl\\nNLU Type: NL\\nNLU ID: muhfadhiilkata:test_simple_bot\\nThreshold: 0.8\\nAs Intent: topic\\nOutput: Raw\\n```\\n\\nNext, you will define this NLU inside an intent. So, you will create an intent named “topic”.\\n\\n1. Go to the **Conversation Flows** menu, then click on the **Intent** tab.\\n\\n<FigureImage\\n  alt=\\"Image 3 Alt\\"\\n  src=\\"/assets/images/products/kata-platform/how-to/how-to-use-nlu-threshold-to-enhance-customer-experience/image3.webp\\"\\n  caption={{ title: \'Figure 3\', description: \'Intent tab position.\' }}\\n  layout=\\"responsive\\"\\n  naturalHeight={552}\\n  naturalWidth={1600}\\n/>\\n\\n2. Click the **Create Intent** button. Then a form will show on the right screen.\\n3. In Intent **Type**, choose **Text** to start setup.\\n4. Next, click the button **Add classifier**. This feature enables you to insert your NLUs inside the intent, so intent can match whether end-user input is understandable by the NLU or not. First, there is a dropdown to choose available NLUs, then select “topic-nl”.\\n\\n<FigureImage\\n  alt=\\"Image 4 Alt\\"\\n  src=\\"/assets/images/products/kata-platform/how-to/how-to-use-nlu-threshold-to-enhance-customer-experience/image4.webp\\"\\n  caption={{ title: \'Figure 4\', description: \'Add classifier feature.\' }}\\n  layout=\\"responsive\\"\\n  naturalHeight={973}\\n  naturalWidth={1600}\\n/>\\n\\n5. Then, click the button **Add attribute**. This feature enables you to insert your NLUs inside the intent, similar to the Add Classifier feature, with differentiation that bot developers can create a condition in the state or transition by using the entity’s label. It is because an attribute is a variable that has an array form.\\n\\n<FigureImage\\n  alt=\\"Image 5 Alt\\"\\n  src=\\"/assets/images/products/kata-platform/how-to/how-to-use-nlu-threshold-to-enhance-customer-experience/image5.webp\\"\\n  caption={{ title: \'Figure 5\', description: \'Add classifier feature.\' }}\\n  layout=\\"responsive\\"\\n  naturalHeight={1563}\\n  naturalWidth={1600}\\n/>\\n\\n6. Click **Create** to create an intent.\\n\\n## Test Your Chatbot\\n\\n1. To test your chatbot, you can see it in the bottom right corner of your screen.\\n\\n<FigureImage\\n  alt=\\"Image 6 Alt\\"\\n  src=\\"/assets/images/products/kata-platform/how-to/how-to-use-nlu-threshold-to-enhance-customer-experience/image6.webp\\"\\n  caption={{ title: \'Figure 6\', description: \'Emulator location.\' }}\\n  layout=\\"responsive\\"\\n  naturalHeight={1007}\\n  naturalWidth={1600}\\n/>\\n\\n2. Click the **Test Chatbot** to start.\\n3. Type a sentence or word.\\n4. You can see incoming messages that you typed (blue color) and bot response (white color) by clicking the eye icon under the message bubble.\\n\\n<FigureImage\\n  alt=\\"Image 7 Alt\\"\\n  src=\\"/assets/images/products/kata-platform/how-to/how-to-use-nlu-threshold-to-enhance-customer-experience/image7.webp\\"\\n  caption={{ title: \'Figure 7\', description: \'View detail in incoming message and outgoing message.\' }}\\n  layout=\\"responsive\\"\\n  naturalHeight={977}\\n  naturalWidth={1600}\\n/>\\n\\nHere is how to read the incoming message:\\n\\n<FigureImage\\n  alt=\\"Image 8 Alt\\"\\n  src=\\"/assets/images/products/kata-platform/how-to/how-to-use-nlu-threshold-to-enhance-customer-experience/image8.webp\\"\\n  caption={{ title: \'Figure 8\', description: \'Incoming message example.\' }}\\n  layout=\\"responsive\\"\\n  naturalHeight={408}\\n  naturalWidth={632}\\n/>\\n\\n- “type” means message source which is from the emulator\\n- “owner” means the account that typed the message.\\n\\nFor outgoing messages or bot responses, here is how to read them.\\n\\n<FigureImage\\n  alt=\\"Image 9 Alt\\"\\n  src=\\"/assets/images/products/kata-platform/how-to/how-to-use-nlu-threshold-to-enhance-customer-experience/image9.webp\\"\\n  caption={{ title: \'Figure 9\', description: \'Incoming message example.\' }}\\n  layout=\\"responsive\\"\\n  naturalHeight={580}\\n  naturalWidth={848}\\n/>\\n\\n- **“type”** means executed action type. For this example, it uses a text action type.\\n- **“content”** means your message to test the bot.\\n- **“action”** means executed action name.\\n- **“flow”** means executed flow name.\\n- **“intent”** means which intent recognized your message.\\n\\nThis is the end of the guidance. You can contact <a href=\\"mailto:support@kata.ai\\">support@kata.ai</a> if you have any difficulties when implementing this.\\n","code":"var Component=(()=>{var w=Object.create;var c=Object.defineProperty;var b=Object.getOwnPropertyDescriptor;var N=Object.getOwnPropertyNames;var T=Object.getPrototypeOf,x=Object.prototype.hasOwnProperty;var p=n=>c(n,\\"__esModule\\",{value:!0});var L=(n,i)=>()=>(i||n((i={exports:{}}).exports,i),i.exports),U=(n,i)=>{for(var a in i)c(n,a,{get:i[a],enumerable:!0})},g=(n,i,a,t)=>{if(i&&typeof i==\\"object\\"||typeof i==\\"function\\")for(let o of N(i))!x.call(n,o)&&(a||o!==\\"default\\")&&c(n,o,{get:()=>i[o],enumerable:!(t=b(i,o))||t.enumerable});return n},k=(n,i)=>g(p(c(n!=null?w(T(n)):{},\\"default\\",!i&&n&&n.__esModule?{get:()=>n.default,enumerable:!0}:{value:n,enumerable:!0})),n),I=(n=>(i,a)=>n&&n.get(i)||(a=g(p({}),i,1),n&&n.set(i,a),a))(typeof WeakMap!=\\"undefined\\"?new WeakMap:0);var y=L((_,f)=>{f.exports=_jsx_runtime});var A={};U(A,{default:()=>C,frontmatter:()=>v});var e=k(y()),v={id:\\"how-to-use-nlu-threshold-to-enhance-customer-experience\\",title:\\"How to Use NLU Threshold to Enhance Customer Experience\\",prev:\\"how-to-improve-your-chatbot-intelligence-by-training-your-nlu\\",next:\\"how-to-use-super-model-to-improve-your-bot-intelligence\\",section:\\"How To\\"};function F(n={}){let{wrapper:i}=n.components||{};return i?(0,e.jsx)(i,Object.assign({},n,{children:(0,e.jsx)(a,{})})):a();function a(){let t=Object.assign({h2:\\"h2\\",a:\\"a\\",span:\\"span\\",p:\\"p\\",ol:\\"ol\\",li:\\"li\\",ul:\\"ul\\",strong:\\"strong\\",code:\\"code\\",pre:\\"pre\\"},n.components),{FigureImage:o,Table:d,TableHead:u,TableHeadCell:h,TableBody:m,TableBodyRow:s,TableBodyCell:r}=t;return o||l(\\"FigureImage\\",!0),d||l(\\"Table\\",!0),m||l(\\"TableBody\\",!0),r||l(\\"TableBodyCell\\",!0),s||l(\\"TableBodyRow\\",!0),u||l(\\"TableHead\\",!0),h||l(\\"TableHeadCell\\",!0),(0,e.jsxs)(e.Fragment,{children:[(0,e.jsxs)(t.h2,{id:\\"introduction\\",children:[(0,e.jsx)(t.a,{className:\\"anchor\\",href:\\"#introduction\\",children:(0,e.jsx)(t.span,{className:\\"icon icon-link\\"})}),\\"Introduction\\"]}),`\\n`,(0,e.jsx)(t.p,{children:\\"In general, the incoming message flow is:\\"}),`\\n`,(0,e.jsxs)(t.ol,{children:[`\\n`,(0,e.jsx)(t.li,{children:\\"An incoming message is caught by intent.\\"}),`\\n`,(0,e.jsx)(t.li,{children:\\"Next, the intent will check in NLUs previously added using Add classifier and Add attribute features. You can add more than 1 NLUs. Then it enables the intent to check all NLUs.\\"}),`\\n`,(0,e.jsxs)(t.li,{children:[\\"Then, NLUs will check the threshold. The threshold can act as a confidence level, and these values range from 0.0 (completely uncertain) to 1.0 (completely confident). This confidence level is usually set between 0.7 to 0.8. Finally, NLUs will check whether the confidence score from the incoming message is lower or higher than the threshold?\\",`\\n`,(0,e.jsxs)(t.ul,{children:[`\\n`,(0,e.jsxs)(t.li,{children:[\\"If an incoming message is \\",(0,e.jsx)(t.strong,{children:\\"lower\\"}),\\" than the threshold, NLUs will send bot information that the incoming message is incorrect with what NLU had recognized. Then, the intent will be checked by other NLUs.\\"]}),`\\n`,(0,e.jsxs)(t.li,{children:[\\"If an incoming message is \\",(0,e.jsx)(t.strong,{children:\\"equal to or higher\\"}),\\" than the threshold, NLUs will send information that the condition is correct.\\"]}),`\\n`]}),`\\n`]}),`\\n`,(0,e.jsxs)(t.li,{children:[\\"If NLUs condition has matched, then intent will send information to a bot that incoming message from the end-user is recognized as intent \\",(0,e.jsx)(t.code,{children:\\"\\\\u201CyesNL\\\\u201D\\"}),\\" (for example).\\"]}),`\\n`,(0,e.jsxs)(t.li,{children:[\\"Then, the bot will check the following action if an intent condition has been fulfilled. For example, if the transition has condition \\",(0,e.jsx)(t.code,{children:\\"intent==\\\\u2018yesNL\\\\u2019\\"}),\\", then the bot will execute the next state connected between the transition. Check the image below for more detail.\\"]}),`\\n`]}),`\\n`,(0,e.jsx)(o,{alt:\\"Image 1 Alt\\",src:\\"/assets/images/products/kata-platform/how-to/how-to-use-nlu-threshold-to-enhance-customer-experience/image1.webp\\",caption:{title:\\"Figure 1\\",description:\\"Transition example which condition has intent using NLU.\\"},layout:\\"responsive\\",naturalHeight:1110,naturalWidth:1328}),`\\n`,(0,e.jsxs)(t.h2,{id:\\"how-to-use\\",children:[(0,e.jsx)(t.a,{className:\\"anchor\\",href:\\"#how-to-use\\",children:(0,e.jsx)(t.span,{className:\\"icon icon-link\\"})}),\\"How to Use\\"]}),`\\n`,(0,e.jsx)(t.p,{children:\\"To integrate NLU can be implemented in chatbot, these are the steps:\\"}),`\\n`,(0,e.jsxs)(t.ol,{children:[`\\n`,(0,e.jsxs)(t.li,{children:[\\"First, in the Kata Platform, go to the \\",(0,e.jsx)(t.strong,{children:\\"Flow\\"}),\\" menu. Then, click the \\",(0,e.jsx)(t.strong,{children:\\"NLUs\\"}),\\" menu in the sidebar.\\"]}),`\\n`]}),`\\n`,(0,e.jsx)(o,{alt:\\"Image 2 Alt\\",src:\\"/assets/images/products/kata-platform/how-to/how-to-use-nlu-threshold-to-enhance-customer-experience/image2.webp\\",caption:{title:\\"Figure 2\\",description:\\"NLUs position in sidebar.\\"},layout:\\"responsive\\",naturalHeight:670,naturalWidth:1600}),`\\n`,(0,e.jsxs)(t.ol,{start:\\"2\\",children:[`\\n`,(0,e.jsxs)(t.li,{children:[\\"Click on the \\",(0,e.jsx)(t.strong,{children:\\"Create NLU\\"}),\\" button. Then it will show a form on the right screen.\\"]}),`\\n`,(0,e.jsxs)(t.li,{children:[\\"Fill in NLUs name and choose an NLU Type. For this guide, you will select \\",(0,e.jsx)(t.strong,{children:\\"NL\\"}),\\".\\"]}),`\\n`,(0,e.jsxs)(t.li,{children:[\\"On the \\",(0,e.jsx)(t.strong,{children:\\"NLU ID\\"}),\\" search and dropdown, you will search your NLU to integrate it into your chatbot. NLU ID consists of username and project with format \\",(0,e.jsx)(t.code,{children:\\"[username]:[project name]\\"}),\\". For example, in the \\",(0,e.jsx)(t.a,{href:\\"/kata-platform/documentation-content/start-your-first-chatbot\\",children:\\"getting started chatbot section\\"}),\\", your NLU ID format is \\",(0,e.jsx)(t.code,{children:\\"muhfadhiilkata:test_simple_bot\\"}),\\". You can use NLU ID from another project as long as the project is set as public.\\"]}),`\\n`,(0,e.jsxs)(t.li,{children:[(0,e.jsx)(t.strong,{children:\\"Threshold\\"}),\\" can act as a confidence level, and these values range from 0.0 (completely uncertain) to 1.0 (completely confident). This confidence level is usually set between 0.7 to 0.8. So the data that falls under 0.7/0.8 will not be detected by the bot. The field only allows numbers and decimals to separate using the \\\\u201C.\\\\u201D character.\\"]}),`\\n`,(0,e.jsxs)(t.li,{children:[(0,e.jsx)(t.strong,{children:\\"As Intent\\"}),\\" is a feature to collect available labels in the NLU. The field only allows alphanumerics.\\"]}),`\\n`,(0,e.jsxs)(t.li,{children:[(0,e.jsx)(t.strong,{children:\\"Output\\"}),\\" has several output types, depending on the entity type you used.\\"]}),`\\n`]}),`\\n`,(0,e.jsxs)(d,{children:[(0,e.jsxs)(u,{children:[(0,e.jsx)(h,{children:\\"Output Types\\"}),`\\n`,(0,e.jsx)(h,{children:\\"Functionals\\"})]}),(0,e.jsxs)(m,{children:[(0,e.jsxs)(s,{children:[(0,e.jsx)(r,{children:\\"Raw\\"}),(0,e.jsx)(r,{children:(0,e.jsx)(t.p,{children:\\"Use this output type if your entity type is \\\\u201Ctrait\\\\u201D. It will result in raw sentences.\\"})})]}),(0,e.jsxs)(s,{children:[(0,e.jsx)(r,{children:\\"Dictionary\\"}),(0,e.jsx)(r,{children:(0,e.jsx)(t.p,{children:`Use this output type if your entity type is \\\\u201Cdictionary\\\\u201D. It will result in an array consisting of keys and\\nlabels.`})})]}),(0,e.jsxs)(s,{children:[(0,e.jsx)(r,{children:\\"Phrase\\"}),`\\n`,(0,e.jsx)(r,{children:\\"Using supermodel \\\\u201Ckata entity\\\\u201D, you must use this output type.\\"})]})]})]}),`\\n`,(0,e.jsxs)(t.ol,{start:\\"8\\",children:[`\\n`,(0,e.jsxs)(t.li,{children:[(0,e.jsx)(t.strong,{children:\\"Path\\"}),\\" is a feature to support integration with Supermodel.\\"]}),`\\n`,(0,e.jsxs)(t.li,{children:[\\"Click \\",(0,e.jsx)(t.strong,{children:\\"Create\\"}),\\" to finish your NLUs.\\"]}),`\\n`]}),`\\n`,(0,e.jsxs)(t.p,{children:[\\"For example, you must integrate an NLU ID \\",(0,e.jsx)(t.code,{children:\\"muhfadhiilkata:test_simple_bot\\"}),\\", which has 1 entity name \\\\u201Ctopic\\\\u201D and entity type is \\\\u201Ctrait\\\\u201D, to an intent named \\\\u201Ctopic\\\\u201D. The entity \\\\u201Ctopic\\\\u201D has 2 labels: \\",(0,e.jsx)(t.code,{children:\\"FAQ\\"}),\\", \\",(0,e.jsx)(t.code,{children:\\"order\\"}),\\", and \\",(0,e.jsx)(t.code,{children:\\"buy\\"}),\\".\\"]}),`\\n`,(0,e.jsx)(t.p,{children:\\"The first step is you will fill in the NLUs form as follows:\\"}),`\\n`,(0,e.jsx)(t.pre,{children:(0,e.jsxs)(t.code,{className:\\"code-highlight\\",children:[(0,e.jsx)(t.span,{className:\\"code-line\\",children:`NLU Name: topic-nl\\n`}),(0,e.jsx)(t.span,{className:\\"code-line\\",children:`NLU Type: NL\\n`}),(0,e.jsx)(t.span,{className:\\"code-line\\",children:`NLU ID: muhfadhiilkata:test_simple_bot\\n`}),(0,e.jsx)(t.span,{className:\\"code-line\\",children:`Threshold: 0.8\\n`}),(0,e.jsx)(t.span,{className:\\"code-line\\",children:`As Intent: topic\\n`}),(0,e.jsx)(t.span,{className:\\"code-line\\",children:`Output: Raw\\n`})]})}),`\\n`,(0,e.jsx)(t.p,{children:\\"Next, you will define this NLU inside an intent. So, you will create an intent named \\\\u201Ctopic\\\\u201D.\\"}),`\\n`,(0,e.jsxs)(t.ol,{children:[`\\n`,(0,e.jsxs)(t.li,{children:[\\"Go to the \\",(0,e.jsx)(t.strong,{children:\\"Conversation Flows\\"}),\\" menu, then click on the \\",(0,e.jsx)(t.strong,{children:\\"Intent\\"}),\\" tab.\\"]}),`\\n`]}),`\\n`,(0,e.jsx)(o,{alt:\\"Image 3 Alt\\",src:\\"/assets/images/products/kata-platform/how-to/how-to-use-nlu-threshold-to-enhance-customer-experience/image3.webp\\",caption:{title:\\"Figure 3\\",description:\\"Intent tab position.\\"},layout:\\"responsive\\",naturalHeight:552,naturalWidth:1600}),`\\n`,(0,e.jsxs)(t.ol,{start:\\"2\\",children:[`\\n`,(0,e.jsxs)(t.li,{children:[\\"Click the \\",(0,e.jsx)(t.strong,{children:\\"Create Intent\\"}),\\" button. Then a form will show on the right screen.\\"]}),`\\n`,(0,e.jsxs)(t.li,{children:[\\"In Intent \\",(0,e.jsx)(t.strong,{children:\\"Type\\"}),\\", choose \\",(0,e.jsx)(t.strong,{children:\\"Text\\"}),\\" to start setup.\\"]}),`\\n`,(0,e.jsxs)(t.li,{children:[\\"Next, click the button \\",(0,e.jsx)(t.strong,{children:\\"Add classifier\\"}),\\". This feature enables you to insert your NLUs inside the intent, so intent can match whether end-user input is understandable by the NLU or not. First, there is a dropdown to choose available NLUs, then select \\\\u201Ctopic-nl\\\\u201D.\\"]}),`\\n`]}),`\\n`,(0,e.jsx)(o,{alt:\\"Image 4 Alt\\",src:\\"/assets/images/products/kata-platform/how-to/how-to-use-nlu-threshold-to-enhance-customer-experience/image4.webp\\",caption:{title:\\"Figure 4\\",description:\\"Add classifier feature.\\"},layout:\\"responsive\\",naturalHeight:973,naturalWidth:1600}),`\\n`,(0,e.jsxs)(t.ol,{start:\\"5\\",children:[`\\n`,(0,e.jsxs)(t.li,{children:[\\"Then, click the button \\",(0,e.jsx)(t.strong,{children:\\"Add attribute\\"}),\\". This feature enables you to insert your NLUs inside the intent, similar to the Add Classifier feature, with differentiation that bot developers can create a condition in the state or transition by using the entity\\\\u2019s label. It is because an attribute is a variable that has an array form.\\"]}),`\\n`]}),`\\n`,(0,e.jsx)(o,{alt:\\"Image 5 Alt\\",src:\\"/assets/images/products/kata-platform/how-to/how-to-use-nlu-threshold-to-enhance-customer-experience/image5.webp\\",caption:{title:\\"Figure 5\\",description:\\"Add classifier feature.\\"},layout:\\"responsive\\",naturalHeight:1563,naturalWidth:1600}),`\\n`,(0,e.jsxs)(t.ol,{start:\\"6\\",children:[`\\n`,(0,e.jsxs)(t.li,{children:[\\"Click \\",(0,e.jsx)(t.strong,{children:\\"Create\\"}),\\" to create an intent.\\"]}),`\\n`]}),`\\n`,(0,e.jsxs)(t.h2,{id:\\"test-your-chatbot\\",children:[(0,e.jsx)(t.a,{className:\\"anchor\\",href:\\"#test-your-chatbot\\",children:(0,e.jsx)(t.span,{className:\\"icon icon-link\\"})}),\\"Test Your Chatbot\\"]}),`\\n`,(0,e.jsxs)(t.ol,{children:[`\\n`,(0,e.jsx)(t.li,{children:\\"To test your chatbot, you can see it in the bottom right corner of your screen.\\"}),`\\n`]}),`\\n`,(0,e.jsx)(o,{alt:\\"Image 6 Alt\\",src:\\"/assets/images/products/kata-platform/how-to/how-to-use-nlu-threshold-to-enhance-customer-experience/image6.webp\\",caption:{title:\\"Figure 6\\",description:\\"Emulator location.\\"},layout:\\"responsive\\",naturalHeight:1007,naturalWidth:1600}),`\\n`,(0,e.jsxs)(t.ol,{start:\\"2\\",children:[`\\n`,(0,e.jsxs)(t.li,{children:[\\"Click the \\",(0,e.jsx)(t.strong,{children:\\"Test Chatbot\\"}),\\" to start.\\"]}),`\\n`,(0,e.jsx)(t.li,{children:\\"Type a sentence or word.\\"}),`\\n`,(0,e.jsx)(t.li,{children:\\"You can see incoming messages that you typed (blue color) and bot response (white color) by clicking the eye icon under the message bubble.\\"}),`\\n`]}),`\\n`,(0,e.jsx)(o,{alt:\\"Image 7 Alt\\",src:\\"/assets/images/products/kata-platform/how-to/how-to-use-nlu-threshold-to-enhance-customer-experience/image7.webp\\",caption:{title:\\"Figure 7\\",description:\\"View detail in incoming message and outgoing message.\\"},layout:\\"responsive\\",naturalHeight:977,naturalWidth:1600}),`\\n`,(0,e.jsx)(t.p,{children:\\"Here is how to read the incoming message:\\"}),`\\n`,(0,e.jsx)(o,{alt:\\"Image 8 Alt\\",src:\\"/assets/images/products/kata-platform/how-to/how-to-use-nlu-threshold-to-enhance-customer-experience/image8.webp\\",caption:{title:\\"Figure 8\\",description:\\"Incoming message example.\\"},layout:\\"responsive\\",naturalHeight:408,naturalWidth:632}),`\\n`,(0,e.jsxs)(t.ul,{children:[`\\n`,(0,e.jsx)(t.li,{children:\\"\\\\u201Ctype\\\\u201D means message source which is from the emulator\\"}),`\\n`,(0,e.jsx)(t.li,{children:\\"\\\\u201Cowner\\\\u201D means the account that typed the message.\\"}),`\\n`]}),`\\n`,(0,e.jsx)(t.p,{children:\\"For outgoing messages or bot responses, here is how to read them.\\"}),`\\n`,(0,e.jsx)(o,{alt:\\"Image 9 Alt\\",src:\\"/assets/images/products/kata-platform/how-to/how-to-use-nlu-threshold-to-enhance-customer-experience/image9.webp\\",caption:{title:\\"Figure 9\\",description:\\"Incoming message example.\\"},layout:\\"responsive\\",naturalHeight:580,naturalWidth:848}),`\\n`,(0,e.jsxs)(t.ul,{children:[`\\n`,(0,e.jsxs)(t.li,{children:[(0,e.jsx)(t.strong,{children:\\"\\\\u201Ctype\\\\u201D\\"}),\\" means executed action type. For this example, it uses a text action type.\\"]}),`\\n`,(0,e.jsxs)(t.li,{children:[(0,e.jsx)(t.strong,{children:\\"\\\\u201Ccontent\\\\u201D\\"}),\\" means your message to test the bot.\\"]}),`\\n`,(0,e.jsxs)(t.li,{children:[(0,e.jsx)(t.strong,{children:\\"\\\\u201Caction\\\\u201D\\"}),\\" means executed action name.\\"]}),`\\n`,(0,e.jsxs)(t.li,{children:[(0,e.jsx)(t.strong,{children:\\"\\\\u201Cflow\\\\u201D\\"}),\\" means executed flow name.\\"]}),`\\n`,(0,e.jsxs)(t.li,{children:[(0,e.jsx)(t.strong,{children:\\"\\\\u201Cintent\\\\u201D\\"}),\\" means which intent recognized your message.\\"]}),`\\n`]}),`\\n`,(0,e.jsxs)(t.p,{children:[\\"This is the end of the guidance. You can contact \\",(0,e.jsx)(\\"a\\",{href:\\"mailto:support@kata.ai\\",children:(0,e.jsx)(t.a,{href:\\"mailto:support@kata.ai\\",children:\\"support@kata.ai\\"})}),\\" if you have any difficulties when implementing this.\\"]})]})}}var C=F;function l(n,i){throw new Error(\\"Expected \\"+(i?\\"component\\":\\"object\\")+\\" `\\"+n+\\"` to be defined: you likely forgot to import, pass, or provide it.\\")}return I(A);})();\\n;return Component;"},"_id":"kata-platform/how-to/how-to-use-nlu-threshold-to-enhance-customer-experience.mdx","_raw":{"sourceFilePath":"kata-platform/how-to/how-to-use-nlu-threshold-to-enhance-customer-experience.mdx","sourceFileName":"how-to-use-nlu-threshold-to-enhance-customer-experience.mdx","sourceFileDir":"kata-platform/how-to","contentType":"mdx","flattenedPath":"kata-platform/how-to/how-to-use-nlu-threshold-to-enhance-customer-experience"},"type":"KataPlatform","slug":["how-to","how-to-use-nlu-threshold-to-enhance-customer-experience"],"excerpt":"\\n## Introduction\\n\\nIn general, the incoming message flow is:\\n\\n1. An incoming message is caught by intent"}');
;// CONCATENATED MODULE: ./.contentlayer/generated/KataPlatform/kata-platform__how-to__how-to-use-super-model-to-improve-your-bot-intelligence.mdx.json
const kata_platform_how_to_how_to_use_super_model_to_improve_your_bot_intelligence_mdx_namespaceObject = JSON.parse('{"id":"how-to-use-super-model-to-improve-your-bot-intelligence","section":"How To","title":"How to Use Super Model (“Kata Entity”) to Improve Your Bot Intelligence","prev":"how-to-use-nlu-threshold-to-enhance-customer-experience","next":"how-to-use-training-data-generator-to-automate-generating-training-data","body":{"raw":"\\n## Introduction\\n\\nSuper Model or Kata Entity is a highly maintained entity that you can use right out of the box. This feature lets you build your NL faster and easier without training. This model lets you extract specific words in a sentence, like a person’s name, location, and more.\\n\\nThis entity will be added automatically when you create a new project on the Entities page. Also, you can use this entity right away without adding any training data. Kata maintains the model for this entity, and all users will automatically get the updated version whenever Kata improves it.\\n\\n<div className=\\"info\\">\\n  <img className=\\"borderless\\" src=\\"/assets/images/icon-info.svg\\" />\\n  <div>\\n    <p>\\n      Important:\\n      <ul>\\n        <li>\\n          Training this entity won’t affect the prediction result, but we encourage you to do so if you find any\\n          mispredictions, as we will use it to improve the models.\\n        </li>\\n        <li>\\n          Once you <b>delete</b> this entity, you can’t retrieve it back, be careful when doing this. If you want to use\\n          the entity, you can create a new project again.\\n        </li>\\n      </ul>\\n    </p>\\n  </div>\\n</div>\\n\\nThese are steps to access the feature:\\n\\n1. First, go to your **project**, then click **NLU**.\\n2. You will see an automatically generated entity named “kata”, the supermodel.\\n3. You can see the model detail by clicking the card. Then it will show available labels.\\n\\nHere is the explanation of each label and examples of what the Super Model can automatically identify words.\\n\\n<Table>\\n  <TableHead>\\n    <TableHeadCell>Label</TableHeadCell>\\n    <TableHeadCell>Description</TableHeadCell>\\n    <TableHeadCell>Examples</TableHeadCell>\\n  </TableHead>\\n  <TableBody>\\n    <TableBodyRow>\\n      <TableBodyCell>Person</TableBodyCell>\\n      <TableBodyCell>Person’s name</TableBodyCell>\\n      <TableBodyCell>Budi, Siti, Rina Putri</TableBodyCell>\\n    </TableBodyRow>\\n    <TableBodyRow>\\n      <TableBodyCell>Location</TableBodyCell>\\n      <TableBodyCell>General location, city, country, address</TableBodyCell>\\n      <TableBodyCell>Jakarta, Indonesia, Jln Pangeran Antasari 18A</TableBodyCell>\\n    </TableBodyRow>\\n    <TableBodyRow>\\n      <TableBodyCell>Email</TableBodyCell>\\n      <TableBodyCell>General email</TableBodyCell>\\n      <TableBodyCell>business@mail.com, jobs@company.com</TableBodyCell>\\n    </TableBodyRow>\\n    <TableBodyRow>\\n      <TableBodyCell>Phone</TableBodyCell>\\n      <TableBodyCell>General phone</TableBodyCell>\\n      <TableBodyCell>+62 80123456789, (021) 3456789, 021-5678-9012</TableBodyCell>\\n    </TableBodyRow>\\n    <TableBodyRow>\\n      <TableBodyCell>Datetime</TableBodyCell>\\n      <TableBodyCell>Date and time</TableBodyCell>\\n      <TableBodyCell>hari ini, 17 Agustus 1945, tahun 2019, besok, 17/9/45, jam 3 siang, pagi ini, 19:00</TableBodyCell>\\n    </TableBodyRow>\\n    <TableBodyRow>\\n      <TableBodyCell>Number</TableBodyCell>\\n      <TableBodyCell>Number in digit, number in word, sequence of number, mix number in digit and word</TableBodyCell>\\n      <TableBodyCell>123, 92, 9.000, satu, dua, tiga ribu, dua tiga, delapan tujuh, 9 juta, 5rb</TableBodyCell>\\n    </TableBodyRow>\\n    <TableBodyRow>\\n      <TableBodyCell>Currency</TableBodyCell>\\n      <TableBodyCell>Currency name, money</TableBodyCell>\\n      <TableBodyCell>IDR, SGD, rupiah, US dollar, Rp 5000, 5 ribu rupihah, $3, 9 USD</TableBodyCell>\\n    </TableBodyRow>\\n    <TableBodyRow>\\n      <TableBodyCell>Area</TableBodyCell>\\n      <TableBodyCell>Unit area</TableBodyCell>\\n      <TableBodyCell>5 meter persegi, sepuluh m2, 200 ha</TableBodyCell>\\n    </TableBodyRow>\\n    <TableBodyRow>\\n      <TableBodyCell>Duration</TableBodyCell>\\n      <TableBodyCell>Unit duration</TableBodyCell>\\n      <TableBodyCell>3 jam, 10 detik, 5 jam 30 menit, sehari, dua hari</TableBodyCell>\\n    </TableBodyRow>\\n    <TableBodyRow>\\n      <TableBodyCell>Length</TableBodyCell>\\n      <TableBodyCell>Unit length</TableBodyCell>\\n      <TableBodyCell>5 meter, delapan cm</TableBodyCell>\\n    </TableBodyRow>\\n    <TableBodyRow>\\n      <TableBodyCell>Temperature</TableBodyCell>\\n      <TableBodyCell>Unit temperature</TableBodyCell>\\n      <TableBodyCell>40 derajat celcius, -5 derajat</TableBodyCell>\\n    </TableBodyRow>\\n    <TableBodyRow>\\n      <TableBodyCell>Volume</TableBodyCell>\\n      <TableBodyCell>Unit volume</TableBodyCell>\\n      <TableBodyCell>6 liter</TableBodyCell>\\n    </TableBodyRow>\\n    <TableBodyRow>\\n      <TableBodyCell>Weight</TableBodyCell>\\n      <TableBodyCell>Unit weight</TableBodyCell>\\n      <TableBodyCell>tujuh kilogram, 5 gr, 9kg</TableBodyCell>\\n    </TableBodyRow>\\n  </TableBody>\\n</Table>\\n\\n## How to Use\\n\\nIn this guidance, you will implement a bot that uses Super Model.\\n\\nHere is how.\\n\\n1. In Kata Platform, go to the **Flow** menu. Then, click the **NLUs** menu in the sidebar.\\n\\n<FigureImage\\n  alt=\\"Image 1 Alt\\"\\n  src=\\"/assets/images/products/kata-platform/how-to/how-to-use-super-model-to-improve-your-bot-intelligence/image1.webp\\"\\n  caption={{ title: \'Figure 1\', description: \'NLUs position in sidebar.\' }}\\n  layout=\\"responsive\\"\\n  naturalHeight={837}\\n  naturalWidth={1999}\\n/>\\n\\n2. Click on the **Create NLU** button. Then it will show a form on the right screen.\\n3. Fill in NLUs name and choose an NLU Type. For this guide, fill in “supermodel” for the name and choose **NL**.\\n4. On the **NLU ID** search and dropdown, you will search your NLU to integrate it into your chatbot. NLU ID consists of username and project with format `[username]:[project name]`. For example, in the getting started chatbot section, your NLU ID format is `muhfadhiilkata:test_simple_bot`.\\n5. **Threshold** can act as a confidence level, and these values range from 0.0 (completely uncertain) to 1.0 (completely confident). This confidence level is usually set between 0.7 to 0.8. So the data that falls under 0.7/0.8 will not be detected by the bot. The field only allows numbers and decimals to separate using “.” character. Fill in 0.8 in this field.\\n6. **Output** has several output types, depending on the entity type you used. For example, for Super Model implementation, choose Phrase.\\n\\n<Table>\\n  <TableHead>\\n    <TableHeadCell>Output Types</TableHeadCell>\\n    <TableHeadCell>Functionals</TableHeadCell>\\n  </TableHead>\\n  <TableBody>\\n    <TableBodyRow>\\n      <TableBodyCell>Raw</TableBodyCell>\\n      <TableBodyCell>\\n        Use this output type if your entity type is “trait”. It will result in raw sentences.\\n      </TableBodyCell>\\n    </TableBodyRow>\\n    <TableBodyRow>\\n      <TableBodyCell>Dictionary</TableBodyCell>\\n      <TableBodyCell>\\n        Use this output type if your entity type is “dictionary”. It will result in an array consisting of keys and\\n        labels.\\n      </TableBodyCell>\\n    </TableBodyRow>\\n    <TableBodyRow>\\n      <TableBodyCell>Phrase</TableBodyCell>\\n      <TableBodyCell>Using supermodel “kata entity”, you must use this output type.</TableBodyCell>\\n    </TableBodyRow>\\n  </TableBody>\\n</Table>\\n\\n7. **Entity Name** is a feature to define the entity name when choosing a Super Model. Fill in with “kata”.\\n8. Click **Create** to finish your NLUs.\\n\\nNext, you will define this NLU inside an intent. So, you will create an intent name “supermodNL”, for example.\\n\\n1. Go to the **Conversation Flows** menu, then click on the **Intent** tab.\\n\\n<FigureImage\\n  alt=\\"Image 2 Alt\\"\\n  src=\\"/assets/images/products/kata-platform/how-to/how-to-use-super-model-to-improve-your-bot-intelligence/image2.webp\\"\\n  caption={{ title: \'Figure 2\', description: \'Intent tab position.\' }}\\n  layout=\\"responsive\\"\\n  naturalHeight={636}\\n  naturalWidth={1844}\\n/>\\n\\n2. Click the **Create Intent** button. Then a form will show on the right screen\\n3. In **Intent Type**, choose **Text** to start setup.\\n4. Next, click the button **Add classifier**. This feature enables you to insert your NLUs inside the intent, so intent can match whether end-user input is understandable by the NLU or not. First, there is a dropdown to choose available NLUs, then select “supermodel”.\\n5. **Match with** feature enables you to specify which label in supermodel that you want to use in your intent. For example, if you want your bot to identify a person\'s name, you will use a person label. Fill in with person.\\n6. Next, click on the kebab menu to choose **Add custom option**. It will show a code block. Fill the code box as follows:\\n\\n   ```\\n   labels: true\\n   ```\\n\\n7. Your result when creating a classifier will be as follows:\\n\\n<FigureImage\\n  alt=\\"Image 3 Alt\\"\\n  src=\\"/assets/images/products/kata-platform/how-to/how-to-use-super-model-to-improve-your-bot-intelligence/image3.webp\\"\\n  caption={{ title: \'Figure 3\', description: \'Add classifier example.\' }}\\n  layout=\\"responsive\\"\\n  naturalHeight={1496}\\n  naturalWidth={1802}\\n/>\\n\\n8. Then, click the button **Add attribute**. This feature enables you to insert your NLUs inside the intent, similar to the Add Classifier feature, with differentiation that bot developers can create a condition in state or transition by using the entity’s label. It is because an attribute is a variable that has an array form. In the 5th step, you will use person label from Super Model, then fill in the field as follows:\\n\\n   ```\\n   Name: name\\n   NLU: supermodNL\\n   Path: person\\n   ```\\n\\n9. Your result after creating the attribute will be as follows:\\n\\n<FigureImage\\n  alt=\\"Image 4 Alt\\"\\n  src=\\"/assets/images/products/kata-platform/how-to/how-to-use-super-model-to-improve-your-bot-intelligence/image3.webp\\"\\n  caption={{ title: \'Figure 4\', description: \'Add attribute example.\' }}\\n  layout=\\"responsive\\"\\n  naturalHeight={1496}\\n  naturalWidth={1802}\\n/>\\n\\n10. Click **Create** to create an intent.\\n\\nThe next step is to use the intent as a condition in transition (most common). If you want to create your chatbot, recognize a person’s name by filling in the condition as follows:\\n\\n    ```\\n    intent==‘supermodNL’\\n    ```\\n\\nThis is the end of the guidance. You can contact <a href=\\"mailto:support@kata.ai\\">support@kata.ai</a> if you have any difficulties when implementing this.\\n","code":"var Component=(()=>{var b=Object.create;var d=Object.defineProperty;var w=Object.getOwnPropertyDescriptor;var N=Object.getOwnPropertyNames;var k=Object.getPrototypeOf,T=Object.prototype.hasOwnProperty;var m=t=>d(t,\\"__esModule\\",{value:!0});var v=(t,r)=>()=>(r||t((r={exports:{}}).exports,r),r.exports),x=(t,r)=>{for(var a in r)d(t,a,{get:r[a],enumerable:!0})},g=(t,r,a,n)=>{if(r&&typeof r==\\"object\\"||typeof r==\\"function\\")for(let o of N(r))!T.call(t,o)&&(a||o!==\\"default\\")&&d(t,o,{get:()=>r[o],enumerable:!(n=w(r,o))||n.enumerable});return t},U=(t,r)=>g(m(d(t!=null?b(k(t)):{},\\"default\\",!r&&t&&t.__esModule?{get:()=>t.default,enumerable:!0}:{value:t,enumerable:!0})),t),I=(t=>(r,a)=>t&&t.get(r)||(a=g(m({}),r,1),t&&t.set(r,a),a))(typeof WeakMap!=\\"undefined\\"?new WeakMap:0);var f=v((D,y)=>{y.exports=_jsx_runtime});var C={};x(C,{default:()=>F,frontmatter:()=>L});var e=U(f()),L={id:\\"how-to-use-super-model-to-improve-your-bot-intelligence\\",title:\\"How to Use Super Model (\\\\u201CKata Entity\\\\u201D) to Improve Your Bot Intelligence\\",prev:\\"how-to-use-nlu-threshold-to-enhance-customer-experience\\",next:\\"how-to-use-training-data-generator-to-automate-generating-training-data\\",section:\\"How To\\"};function j(t={}){let{wrapper:r}=t.components||{};return r?(0,e.jsx)(r,Object.assign({},t,{children:(0,e.jsx)(a,{})})):a();function a(){let n=Object.assign({h2:\\"h2\\",a:\\"a\\",span:\\"span\\",p:\\"p\\",ol:\\"ol\\",li:\\"li\\",strong:\\"strong\\",code:\\"code\\",pre:\\"pre\\"},t.components),{Table:o,TableHead:u,TableHeadCell:c,TableBody:p,TableBodyRow:l,TableBodyCell:i,FigureImage:h}=n;return h||s(\\"FigureImage\\",!0),o||s(\\"Table\\",!0),p||s(\\"TableBody\\",!0),i||s(\\"TableBodyCell\\",!0),l||s(\\"TableBodyRow\\",!0),u||s(\\"TableHead\\",!0),c||s(\\"TableHeadCell\\",!0),(0,e.jsxs)(e.Fragment,{children:[(0,e.jsxs)(n.h2,{id:\\"introduction\\",children:[(0,e.jsx)(n.a,{className:\\"anchor\\",href:\\"#introduction\\",children:(0,e.jsx)(n.span,{className:\\"icon icon-link\\"})}),\\"Introduction\\"]}),`\\n`,(0,e.jsx)(n.p,{children:\\"Super Model or Kata Entity is a highly maintained entity that you can use right out of the box. This feature lets you build your NL faster and easier without training. This model lets you extract specific words in a sentence, like a person\\\\u2019s name, location, and more.\\"}),`\\n`,(0,e.jsx)(n.p,{children:\\"This entity will be added automatically when you create a new project on the Entities page. Also, you can use this entity right away without adding any training data. Kata maintains the model for this entity, and all users will automatically get the updated version whenever Kata improves it.\\"}),`\\n`,(0,e.jsxs)(\\"div\\",{className:\\"info\\",children:[(0,e.jsx)(\\"img\\",{className:\\"borderless\\",src:\\"/assets/images/icon-info.svg\\"}),(0,e.jsx)(\\"div\\",{children:(0,e.jsxs)(\\"p\\",{children:[(0,e.jsx)(n.p,{children:\\"Important:\\"}),(0,e.jsxs)(\\"ul\\",{children:[(0,e.jsx)(\\"li\\",{children:(0,e.jsx)(n.p,{children:`Training this entity won\\\\u2019t affect the prediction result, but we encourage you to do so if you find any\\nmispredictions, as we will use it to improve the models.`})}),(0,e.jsx)(\\"li\\",{children:(0,e.jsxs)(n.p,{children:[\\"Once you \\",(0,e.jsx)(\\"b\\",{children:\\"delete\\"}),` this entity, you can\\\\u2019t retrieve it back, be careful when doing this. If you want to use\\nthe entity, you can create a new project again.`]})})]})]})})]}),`\\n`,(0,e.jsx)(n.p,{children:\\"These are steps to access the feature:\\"}),`\\n`,(0,e.jsxs)(n.ol,{children:[`\\n`,(0,e.jsxs)(n.li,{children:[\\"First, go to your \\",(0,e.jsx)(n.strong,{children:\\"project\\"}),\\", then click \\",(0,e.jsx)(n.strong,{children:\\"NLU\\"}),\\".\\"]}),`\\n`,(0,e.jsx)(n.li,{children:\\"You will see an automatically generated entity named \\\\u201Ckata\\\\u201D, the supermodel.\\"}),`\\n`,(0,e.jsx)(n.li,{children:\\"You can see the model detail by clicking the card. Then it will show available labels.\\"}),`\\n`]}),`\\n`,(0,e.jsx)(n.p,{children:\\"Here is the explanation of each label and examples of what the Super Model can automatically identify words.\\"}),`\\n`,(0,e.jsxs)(o,{children:[(0,e.jsxs)(u,{children:[(0,e.jsx)(c,{children:\\"Label\\"}),`\\n`,(0,e.jsx)(c,{children:\\"Description\\"}),`\\n`,(0,e.jsx)(c,{children:\\"Examples\\"})]}),(0,e.jsxs)(p,{children:[(0,e.jsxs)(l,{children:[(0,e.jsx)(i,{children:\\"Person\\"}),`\\n`,(0,e.jsx)(i,{children:\\"Person\\\\u2019s name\\"}),`\\n`,(0,e.jsx)(i,{children:\\"Budi, Siti, Rina Putri\\"})]}),(0,e.jsxs)(l,{children:[(0,e.jsx)(i,{children:\\"Location\\"}),`\\n`,(0,e.jsx)(i,{children:\\"General location, city, country, address\\"}),`\\n`,(0,e.jsx)(i,{children:\\"Jakarta, Indonesia, Jln Pangeran Antasari 18A\\"})]}),(0,e.jsxs)(l,{children:[(0,e.jsx)(i,{children:\\"Email\\"}),`\\n`,(0,e.jsx)(i,{children:\\"General email\\"}),`\\n`,(0,e.jsxs)(i,{children:[(0,e.jsx)(n.a,{href:\\"mailto:business@mail.com\\",children:\\"business@mail.com\\"}),\\", \\",(0,e.jsx)(n.a,{href:\\"mailto:jobs@company.com\\",children:\\"jobs@company.com\\"})]})]}),(0,e.jsxs)(l,{children:[(0,e.jsx)(i,{children:\\"Phone\\"}),`\\n`,(0,e.jsx)(i,{children:\\"General phone\\"}),`\\n`,(0,e.jsx)(i,{children:\\"+62 80123456789, (021) 3456789, 021-5678-9012\\"})]}),(0,e.jsxs)(l,{children:[(0,e.jsx)(i,{children:\\"Datetime\\"}),`\\n`,(0,e.jsx)(i,{children:\\"Date and time\\"}),`\\n`,(0,e.jsx)(i,{children:\\"hari ini, 17 Agustus 1945, tahun 2019, besok, 17/9/45, jam 3 siang, pagi ini, 19:00\\"})]}),(0,e.jsxs)(l,{children:[(0,e.jsx)(i,{children:\\"Number\\"}),`\\n`,(0,e.jsx)(i,{children:\\"Number in digit, number in word, sequence of number, mix number in digit and word\\"}),`\\n`,(0,e.jsx)(i,{children:\\"123, 92, 9.000, satu, dua, tiga ribu, dua tiga, delapan tujuh, 9 juta, 5rb\\"})]}),(0,e.jsxs)(l,{children:[(0,e.jsx)(i,{children:\\"Currency\\"}),`\\n`,(0,e.jsx)(i,{children:\\"Currency name, money\\"}),`\\n`,(0,e.jsx)(i,{children:\\"IDR, SGD, rupiah, US dollar, Rp 5000, 5 ribu rupihah, $3, 9 USD\\"})]}),(0,e.jsxs)(l,{children:[(0,e.jsx)(i,{children:\\"Area\\"}),`\\n`,(0,e.jsx)(i,{children:\\"Unit area\\"}),`\\n`,(0,e.jsx)(i,{children:\\"5 meter persegi, sepuluh m2, 200 ha\\"})]}),(0,e.jsxs)(l,{children:[(0,e.jsx)(i,{children:\\"Duration\\"}),`\\n`,(0,e.jsx)(i,{children:\\"Unit duration\\"}),`\\n`,(0,e.jsx)(i,{children:\\"3 jam, 10 detik, 5 jam 30 menit, sehari, dua hari\\"})]}),(0,e.jsxs)(l,{children:[(0,e.jsx)(i,{children:\\"Length\\"}),`\\n`,(0,e.jsx)(i,{children:\\"Unit length\\"}),`\\n`,(0,e.jsx)(i,{children:\\"5 meter, delapan cm\\"})]}),(0,e.jsxs)(l,{children:[(0,e.jsx)(i,{children:\\"Temperature\\"}),`\\n`,(0,e.jsx)(i,{children:\\"Unit temperature\\"}),`\\n`,(0,e.jsx)(i,{children:\\"40 derajat celcius, -5 derajat\\"})]}),(0,e.jsxs)(l,{children:[(0,e.jsx)(i,{children:\\"Volume\\"}),`\\n`,(0,e.jsx)(i,{children:\\"Unit volume\\"}),`\\n`,(0,e.jsx)(i,{children:\\"6 liter\\"})]}),(0,e.jsxs)(l,{children:[(0,e.jsx)(i,{children:\\"Weight\\"}),`\\n`,(0,e.jsx)(i,{children:\\"Unit weight\\"}),`\\n`,(0,e.jsx)(i,{children:\\"tujuh kilogram, 5 gr, 9kg\\"})]})]})]}),`\\n`,(0,e.jsxs)(n.h2,{id:\\"how-to-use\\",children:[(0,e.jsx)(n.a,{className:\\"anchor\\",href:\\"#how-to-use\\",children:(0,e.jsx)(n.span,{className:\\"icon icon-link\\"})}),\\"How to Use\\"]}),`\\n`,(0,e.jsx)(n.p,{children:\\"In this guidance, you will implement a bot that uses Super Model.\\"}),`\\n`,(0,e.jsx)(n.p,{children:\\"Here is how.\\"}),`\\n`,(0,e.jsxs)(n.ol,{children:[`\\n`,(0,e.jsxs)(n.li,{children:[\\"In Kata Platform, go to the \\",(0,e.jsx)(n.strong,{children:\\"Flow\\"}),\\" menu. Then, click the \\",(0,e.jsx)(n.strong,{children:\\"NLUs\\"}),\\" menu in the sidebar.\\"]}),`\\n`]}),`\\n`,(0,e.jsx)(h,{alt:\\"Image 1 Alt\\",src:\\"/assets/images/products/kata-platform/how-to/how-to-use-super-model-to-improve-your-bot-intelligence/image1.webp\\",caption:{title:\\"Figure 1\\",description:\\"NLUs position in sidebar.\\"},layout:\\"responsive\\",naturalHeight:837,naturalWidth:1999}),`\\n`,(0,e.jsxs)(n.ol,{start:\\"2\\",children:[`\\n`,(0,e.jsxs)(n.li,{children:[\\"Click on the \\",(0,e.jsx)(n.strong,{children:\\"Create NLU\\"}),\\" button. Then it will show a form on the right screen.\\"]}),`\\n`,(0,e.jsxs)(n.li,{children:[\\"Fill in NLUs name and choose an NLU Type. For this guide, fill in \\\\u201Csupermodel\\\\u201D for the name and choose \\",(0,e.jsx)(n.strong,{children:\\"NL\\"}),\\".\\"]}),`\\n`,(0,e.jsxs)(n.li,{children:[\\"On the \\",(0,e.jsx)(n.strong,{children:\\"NLU ID\\"}),\\" search and dropdown, you will search your NLU to integrate it into your chatbot. NLU ID consists of username and project with format \\",(0,e.jsx)(n.code,{children:\\"[username]:[project name]\\"}),\\". For example, in the getting started chatbot section, your NLU ID format is \\",(0,e.jsx)(n.code,{children:\\"muhfadhiilkata:test_simple_bot\\"}),\\".\\"]}),`\\n`,(0,e.jsxs)(n.li,{children:[(0,e.jsx)(n.strong,{children:\\"Threshold\\"}),\\" can act as a confidence level, and these values range from 0.0 (completely uncertain) to 1.0 (completely confident). This confidence level is usually set between 0.7 to 0.8. So the data that falls under 0.7/0.8 will not be detected by the bot. The field only allows numbers and decimals to separate using \\\\u201C.\\\\u201D character. Fill in 0.8 in this field.\\"]}),`\\n`,(0,e.jsxs)(n.li,{children:[(0,e.jsx)(n.strong,{children:\\"Output\\"}),\\" has several output types, depending on the entity type you used. For example, for Super Model implementation, choose Phrase.\\"]}),`\\n`]}),`\\n`,(0,e.jsxs)(o,{children:[(0,e.jsxs)(u,{children:[(0,e.jsx)(c,{children:\\"Output Types\\"}),`\\n`,(0,e.jsx)(c,{children:\\"Functionals\\"})]}),(0,e.jsxs)(p,{children:[(0,e.jsxs)(l,{children:[(0,e.jsx)(i,{children:\\"Raw\\"}),(0,e.jsx)(i,{children:(0,e.jsx)(n.p,{children:\\"Use this output type if your entity type is \\\\u201Ctrait\\\\u201D. It will result in raw sentences.\\"})})]}),(0,e.jsxs)(l,{children:[(0,e.jsx)(i,{children:\\"Dictionary\\"}),(0,e.jsx)(i,{children:(0,e.jsx)(n.p,{children:`Use this output type if your entity type is \\\\u201Cdictionary\\\\u201D. It will result in an array consisting of keys and\\nlabels.`})})]}),(0,e.jsxs)(l,{children:[(0,e.jsx)(i,{children:\\"Phrase\\"}),`\\n`,(0,e.jsx)(i,{children:\\"Using supermodel \\\\u201Ckata entity\\\\u201D, you must use this output type.\\"})]})]})]}),`\\n`,(0,e.jsxs)(n.ol,{start:\\"7\\",children:[`\\n`,(0,e.jsxs)(n.li,{children:[(0,e.jsx)(n.strong,{children:\\"Entity Name\\"}),\\" is a feature to define the entity name when choosing a Super Model. Fill in with \\\\u201Ckata\\\\u201D.\\"]}),`\\n`,(0,e.jsxs)(n.li,{children:[\\"Click \\",(0,e.jsx)(n.strong,{children:\\"Create\\"}),\\" to finish your NLUs.\\"]}),`\\n`]}),`\\n`,(0,e.jsx)(n.p,{children:\\"Next, you will define this NLU inside an intent. So, you will create an intent name \\\\u201CsupermodNL\\\\u201D, for example.\\"}),`\\n`,(0,e.jsxs)(n.ol,{children:[`\\n`,(0,e.jsxs)(n.li,{children:[\\"Go to the \\",(0,e.jsx)(n.strong,{children:\\"Conversation Flows\\"}),\\" menu, then click on the \\",(0,e.jsx)(n.strong,{children:\\"Intent\\"}),\\" tab.\\"]}),`\\n`]}),`\\n`,(0,e.jsx)(h,{alt:\\"Image 2 Alt\\",src:\\"/assets/images/products/kata-platform/how-to/how-to-use-super-model-to-improve-your-bot-intelligence/image2.webp\\",caption:{title:\\"Figure 2\\",description:\\"Intent tab position.\\"},layout:\\"responsive\\",naturalHeight:636,naturalWidth:1844}),`\\n`,(0,e.jsxs)(n.ol,{start:\\"2\\",children:[`\\n`,(0,e.jsxs)(n.li,{children:[`\\n`,(0,e.jsxs)(n.p,{children:[\\"Click the \\",(0,e.jsx)(n.strong,{children:\\"Create Intent\\"}),\\" button. Then a form will show on the right screen\\"]}),`\\n`]}),`\\n`,(0,e.jsxs)(n.li,{children:[`\\n`,(0,e.jsxs)(n.p,{children:[\\"In \\",(0,e.jsx)(n.strong,{children:\\"Intent Type\\"}),\\", choose \\",(0,e.jsx)(n.strong,{children:\\"Text\\"}),\\" to start setup.\\"]}),`\\n`]}),`\\n`,(0,e.jsxs)(n.li,{children:[`\\n`,(0,e.jsxs)(n.p,{children:[\\"Next, click the button \\",(0,e.jsx)(n.strong,{children:\\"Add classifier\\"}),\\". This feature enables you to insert your NLUs inside the intent, so intent can match whether end-user input is understandable by the NLU or not. First, there is a dropdown to choose available NLUs, then select \\\\u201Csupermodel\\\\u201D.\\"]}),`\\n`]}),`\\n`,(0,e.jsxs)(n.li,{children:[`\\n`,(0,e.jsxs)(n.p,{children:[(0,e.jsx)(n.strong,{children:\\"Match with\\"}),\\" feature enables you to specify which label in supermodel that you want to use in your intent. For example, if you want your bot to identify a person\'s name, you will use a person label. Fill in with person.\\"]}),`\\n`]}),`\\n`,(0,e.jsxs)(n.li,{children:[`\\n`,(0,e.jsxs)(n.p,{children:[\\"Next, click on the kebab menu to choose \\",(0,e.jsx)(n.strong,{children:\\"Add custom option\\"}),\\". It will show a code block. Fill the code box as follows:\\"]}),`\\n`,(0,e.jsx)(n.pre,{children:(0,e.jsx)(n.code,{className:\\"code-highlight\\",children:(0,e.jsx)(n.span,{className:\\"code-line\\",children:`labels: true\\n`})})}),`\\n`]}),`\\n`,(0,e.jsxs)(n.li,{children:[`\\n`,(0,e.jsx)(n.p,{children:\\"Your result when creating a classifier will be as follows:\\"}),`\\n`]}),`\\n`]}),`\\n`,(0,e.jsx)(h,{alt:\\"Image 3 Alt\\",src:\\"/assets/images/products/kata-platform/how-to/how-to-use-super-model-to-improve-your-bot-intelligence/image3.webp\\",caption:{title:\\"Figure 3\\",description:\\"Add classifier example.\\"},layout:\\"responsive\\",naturalHeight:1496,naturalWidth:1802}),`\\n`,(0,e.jsxs)(n.ol,{start:\\"8\\",children:[`\\n`,(0,e.jsxs)(n.li,{children:[`\\n`,(0,e.jsxs)(n.p,{children:[\\"Then, click the button \\",(0,e.jsx)(n.strong,{children:\\"Add attribute\\"}),\\". This feature enables you to insert your NLUs inside the intent, similar to the Add Classifier feature, with differentiation that bot developers can create a condition in state or transition by using the entity\\\\u2019s label. It is because an attribute is a variable that has an array form. In the 5th step, you will use person label from Super Model, then fill in the field as follows:\\"]}),`\\n`,(0,e.jsx)(n.pre,{children:(0,e.jsxs)(n.code,{className:\\"code-highlight\\",children:[(0,e.jsx)(n.span,{className:\\"code-line\\",children:`Name: name\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`NLU: supermodNL\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`Path: person\\n`})]})}),`\\n`]}),`\\n`,(0,e.jsxs)(n.li,{children:[`\\n`,(0,e.jsx)(n.p,{children:\\"Your result after creating the attribute will be as follows:\\"}),`\\n`]}),`\\n`]}),`\\n`,(0,e.jsx)(h,{alt:\\"Image 4 Alt\\",src:\\"/assets/images/products/kata-platform/how-to/how-to-use-super-model-to-improve-your-bot-intelligence/image3.webp\\",caption:{title:\\"Figure 4\\",description:\\"Add attribute example.\\"},layout:\\"responsive\\",naturalHeight:1496,naturalWidth:1802}),`\\n`,(0,e.jsxs)(n.ol,{start:\\"10\\",children:[`\\n`,(0,e.jsxs)(n.li,{children:[\\"Click \\",(0,e.jsx)(n.strong,{children:\\"Create\\"}),\\" to create an intent.\\"]}),`\\n`]}),`\\n`,(0,e.jsx)(n.p,{children:\\"The next step is to use the intent as a condition in transition (most common). If you want to create your chatbot, recognize a person\\\\u2019s name by filling in the condition as follows:\\"}),`\\n`,(0,e.jsx)(n.pre,{children:(0,e.jsx)(n.code,{className:\\"code-highlight\\",children:(0,e.jsx)(n.span,{className:\\"code-line\\",children:`intent==\\\\u2018supermodNL\\\\u2019\\n`})})}),`\\n`,(0,e.jsxs)(n.p,{children:[\\"This is the end of the guidance. You can contact \\",(0,e.jsx)(\\"a\\",{href:\\"mailto:support@kata.ai\\",children:(0,e.jsx)(n.a,{href:\\"mailto:support@kata.ai\\",children:\\"support@kata.ai\\"})}),\\" if you have any difficulties when implementing this.\\"]})]})}}var F=j;function s(t,r){throw new Error(\\"Expected \\"+(r?\\"component\\":\\"object\\")+\\" `\\"+t+\\"` to be defined: you likely forgot to import, pass, or provide it.\\")}return I(C);})();\\n;return Component;"},"_id":"kata-platform/how-to/how-to-use-super-model-to-improve-your-bot-intelligence.mdx","_raw":{"sourceFilePath":"kata-platform/how-to/how-to-use-super-model-to-improve-your-bot-intelligence.mdx","sourceFileName":"how-to-use-super-model-to-improve-your-bot-intelligence.mdx","sourceFileDir":"kata-platform/how-to","contentType":"mdx","flattenedPath":"kata-platform/how-to/how-to-use-super-model-to-improve-your-bot-intelligence"},"type":"KataPlatform","slug":["how-to","how-to-use-super-model-to-improve-your-bot-intelligence"],"excerpt":"\\n## Introduction\\n\\nSuper Model or Kata Entity is a highly maintained entity that you can use right out of the box. This feature lets you build your NL faster and easier without training"}');
;// CONCATENATED MODULE: ./.contentlayer/generated/KataPlatform/kata-platform__how-to__how-to-use-training-data-generator-to-automate-generating-training-data.mdx.json
const kata_platform_how_to_how_to_use_training_data_generator_to_automate_generating_training_data_mdx_namespaceObject = JSON.parse('{"id":"how-to-use-training-data-generator-to-automate-generating-training-data","section":"How To","title":"How to Use Training Data Generator to Automate Generating Training Data","prev":"how-to-use-super-model-to-improve-your-bot-intelligence","next":"how-to-use-bulk-training-for-faster-training-process","body":{"raw":"\\n## Introduction\\n\\nTraining Data Generator is a feature that enables you to automatically generate training data up to 100 data using sentence samples, or we call it data samples.\\n\\nBefore creating a data sample, you will need to define the keyword and synonyms inside the “word bank” feature. Why is it required? We do permutations from data samples and keyword variants to generate the training data. Let’s try a case:\\n\\n1. You create a word bank from Kenapa which consists of variant words or synonyms from Kenapa. For example: knp, ngap, ngaps, kenaps. So, you have 4 word variants.\\n2. Next, you create a data sample. For example: @Kenapa ATM saya bermasalah ya.\\n3. We will create a permutation or combination from a data sample with variant words. For example, expected generated data will be like this:\\n   - `knp ATM saya bermasalah`\\n   - `ngap ATM saya bermasalah`\\n   - `ATM saya bermasalah ngaps`\\n   - `kenaps ATM saya bermasalah`\\n   - And many more\\n4. Also, we have a feature that is bulk tagging to tag all generated training data with your available entities and labels. It enables faster tagging rather than manually annotating.\\n\\nThis guidance will elaborate on how to use training data generators and do bulk tagging after generated data shows up. Let’s get started.\\n\\n## Create Entity and Labels\\n\\nBefore you start, you will need to create at least one entity.\\n\\n1. To create an entity, go to the **NLU > Models** menu. Then, click the **Entity** menu.\\n\\n<FigureImage\\n  alt=\\"Image 1 Alt\\"\\n  src=\\"/assets/images/products/kata-platform/how-to/how-to-use-training-data-generator-to-automate-generating-training-data/image1.webp\\"\\n  caption={{ title: \'Figure 1\', description: \'Models menu.\' }}\\n  layout=\\"responsive\\"\\n  naturalHeight={853}\\n  naturalWidth={1999}\\n/>\\n\\n2. Click **Create Entity** to set up a new entity. It will show a form on the right screen. Fill in the entity name.\\n\\nHere is the explanation of each field\\n\\n1. **Inherit** lets you copy an entity from any public NLU on the Kata Platform. To inherit an NLU, simply type the NLU ID with `[username]:[project name]`. Inherited entities will sync to the original entity, including the labels and training data. For example, in the [getting started chatbot section](/kata-platform/documentation-content/start-your-first-chatbot), your NLU ID format is `muhfadhiilkata:test_simple_bot`.\\n2. **Type** is intended for the entity type. In Kata Platform, we have 3 entity types which are\\n   - **Trait** is a text classifier that classifies a sentence into particular labels. This type is suitable for making your bot recognize nuance in a sentence.\\n   - **Dictionary** is a word tagger which has keys and labels. It will form an array.\\n   - The **Phrase** is a word tagger.\\n\\n<FigureImage\\n  alt=\\"Image 2 Alt\\"\\n  src=\\"/assets/images/products/kata-platform/how-to/how-to-use-training-data-generator-to-automate-generating-training-data/image2.webp\\"\\n  caption={{ title: \'Figure 2\', description: \'Entity type \\"dictionary\\"\' }}\\n  layout=\\"responsive\\"\\n  naturalHeight={1400}\\n  naturalWidth={1600}\\n/>\\n\\n3. The **Profile** is an AI model that is available to use by users. You can choose any profiles you want depending on data training and the dataset you have.\\n\\n   - The “default” profile is suitable for a large number of data samples so that this profile is available in all entity types.\\n   - “intent” profile is suitable for entity type “trait”.\\n   - “default_v2” profile is our newest profile and is suitable if you have a large amount of data.\\n\\n4. **Root** enables you to create an entity using other users\' NLU to copy the training data and add new labels. Therefore, it is suitable if you have a trained NLU and want to add more labels in the NLU. To use this, you can type an NLU ID which consists of username and project with format `[username]:[project name]`.\\n5. **Labels** is a feature to determine classes or categories from an entity. To add a new label, you can type and press “enter” on your keyboard.\\n6. If you choose entity type “dictionary”, it will show a dropdown name **Belongs to**. This feature enables you to define relationships () between entities. Belongs to feature can only be used for entities in the same NLU with entity type “phrase” or “dictionary”. It is suitable if your data sample is like this:\\n\\n```\\nSaya mau beli es kopi susu 2 dan less sugar\\n```\\n\\n`Es kopi susu` is the main menu. `2 and less sugar` are modifiers to detailing the order. So in **Belongs To** concept, you will tag 2 and choose `belongsTo`.\\n\\nFor this guide, you will create 1 entity type “trait” to extract sentences, 1 entity type “phrase” and 1 entity type “dictionary” to extract words.\\n\\n1. Click the **Create Entity** button.\\n2. Then, fill in as follows for the first entity:\\n\\n```\\nName: intent\\nType: Trait\\nLabel: statement\\n```\\n\\nHere is the screenshot:\\n\\n<FigureImage\\n  alt=\\"Image 3 Alt\\"\\n  src=\\"/assets/images/products/kata-platform/how-to/how-to-use-training-data-generator-to-automate-generating-training-data/image3.webp\\"\\n  caption={{ title: \'Figure 3\', description: \'Create an entity.\' }}\\n  layout=\\"responsive\\"\\n  naturalHeight={1262}\\n  naturalWidth={1999}\\n/>\\n\\n3. Click the **Create Entity** button to create the following entity.\\n4. Fill in as follows for the second entity:\\n\\n```\\nName: object\\nType: phrase\\nLabel: person\\n```\\n\\nHere is the screenshot:\\n\\n<FigureImage\\n  alt=\\"Image 4 Alt\\"\\n  src=\\"/assets/images/products/kata-platform/how-to/how-to-use-training-data-generator-to-automate-generating-training-data/image4.webp\\"\\n  caption={{ title: \'Figure 4\', description: \'Create an entity.\' }}\\n  layout=\\"responsive\\"\\n  naturalHeight={1424}\\n  naturalWidth={1970}\\n/>\\n\\n5. Fill in as follows for the last entity:\\n\\n```\\nName: things\\nType: dictionary\\nKey: car\\nLabels: suv, van, lcgc\\n```\\n\\nHere is the screenshot:\\n\\n<FigureImage\\n  alt=\\"Image 5 Alt\\"\\n  src=\\"/assets/images/products/kata-platform/how-to/how-to-use-training-data-generator-to-automate-generating-training-data/image5.webp\\"\\n  caption={{ title: \'Figure 5\', description: \'Create an entity.\' }}\\n  layout=\\"responsive\\"\\n  naturalHeight={1628}\\n  naturalWidth={1922}\\n/>\\n\\n6. Click **Create** to finalize.\\n\\nThe next step is to create a word bank when you’re done.\\n\\n## Create a Word Bank\\n\\nIn this part, you will create synonyms or variants from the keyword. Here is the guidance for adding variants:\\n\\n- You can add 2 words as 1 variant by using space. Maximum 20 characters.\\n- You must create at least 2 variants to create a word bank with a maximum of 20 characters for each variant.\\n- You can remove a variant by clicking the “x” button next to the word.\\n\\nStep by step to create a word bank:\\n\\n1. Click the Word Bank tab, then click the Create button. It will show a dialog.\\n2. Fill in the name for your word bank. For example, you can fill in Kenapa.\\n3. Then, create variants by typing a synonym from Kenapa word. For example:\\n\\n```\\nngaps\\nngapa\\nkenp\\nknp\\nkenopo\\n```\\n\\n4. Press “Enter” on your keyboard.\\n\\n<FigureImage\\n  alt=\\"Image 6 Alt\\"\\n  src=\\"/assets/images/products/kata-platform/how-to/how-to-use-training-data-generator-to-automate-generating-training-data/image6.webp\\"\\n  caption={{ title: \'Figure 6\', description: \'Create a word bank.\' }}\\n  layout=\\"responsive\\"\\n  naturalHeight={1067}\\n  naturalWidth={1999}\\n/>\\n\\n5. Finally, you have variants. Then, click the **Create** button to create a word bank.\\n\\n## Create a Data Sample\\n\\nOnce you’ve created a word bank, now you’re ready to make a data sample. Data sample is a sample sentence that consists of a word bank and several words as a base to generate training data or called a “pattern”. Here are the steps:\\n\\n1. Go to **NLU > Training**.\\n2. Click on **Bulk Training** dropdown, then choose **Data Generator**.\\n\\n<FigureImage\\n  alt=\\"Image 7 Alt\\"\\n  src=\\"/assets/images/products/kata-platform/how-to/how-to-use-training-data-generator-to-automate-generating-training-data/image7.webp\\"\\n  caption={{ title: \'Figure 7\', description: \'Go to Data Generator feature.\' }}\\n  layout=\\"responsive\\"\\n  naturalHeight={845}\\n  naturalWidth={1999}\\n/>\\n\\n3. You will see a row to input a data sample. For example, to add your available word bank, type “@“ to show the word bank list.\\n\\n<FigureImage\\n  alt=\\"Image 8 Alt\\"\\n  src=\\"/assets/images/products/kata-platform/how-to/how-to-use-training-data-generator-to-automate-generating-training-data/image8.webp\\"\\n  caption={{ title: \'Figure 8\', description: \'Type “@” to show word bank list.\' }}\\n  layout=\\"responsive\\"\\n  naturalHeight={823}\\n  naturalWidth={1999}\\n/>\\n\\n4. Input a data sample, for example:\\n\\n```\\n@Kenapa kemarin Sinta tidak sekolah\\n```\\n\\n<FigureImage\\n  alt=\\"Image 9 Alt\\"\\n  src=\\"/assets/images/products/kata-platform/how-to/how-to-use-training-data-generator-to-automate-generating-training-data/image9.webp\\"\\n  caption={{ title: \'Figure 9\', description: \'Type a data sample.\' }}\\n  layout=\\"responsive\\"\\n  naturalHeight={712}\\n  naturalWidth={1999}\\n/>\\n\\n5. Press “Add Row” to submit.\\n6. You can edit or delete your data sample after it has been created.\\n\\n<FigureImage\\n  alt=\\"Image 10 Alt\\"\\n  src=\\"/assets/images/products/kata-platform/how-to/how-to-use-training-data-generator-to-automate-generating-training-data/image10.webp\\"\\n  caption={{ title: \'Figure 10\', description: \'Update and delete data sample.\' }}\\n  layout=\\"responsive\\"\\n  naturalHeight={802}\\n  naturalWidth={1999}\\n/>\\n\\nOn the data sample page, there is information:\\n\\n- **Total data possibilities** mean total generated data that can be created from available data samples. So for this example, you have 2 data samples multiplied with 1 word bank, then multiply again with 5 word variants. So finally, there will be 10 data possibilities.\\n\\n<FigureImage\\n  alt=\\"Image 11 Alt\\"\\n  src=\\"/assets/images/products/kata-platform/how-to/how-to-use-training-data-generator-to-automate-generating-training-data/image11.webp\\"\\n  caption={{ title: \'Figure 11\', description: \'Total data possibilities from available data samples.\' }}\\n  layout=\\"responsive\\"\\n  naturalHeight={871}\\n  naturalWidth={1999}\\n/>\\n\\n- **Data to Generate** is several generated data that you wanted. The number must be below or equal to the total data possibilities.\\n\\n<FigureImage\\n  alt=\\"Image 12 Alt\\"\\n  src=\\"/assets/images/products/kata-platform/how-to/how-to-use-training-data-generator-to-automate-generating-training-data/image12.webp\\"\\n  caption={{\\n    title: \'Figure 12\',\\n    description: \'Data to generate must be equal to or below than total data possibilities.\',\\n  }}\\n  layout=\\"responsive\\"\\n  naturalHeight={779}\\n  naturalWidth={1999}\\n/>\\n\\n**Important note:**\\n\\nMake sure you put a space before the next word or after the previous word. Example: `@Kenapa Sinta tidak sekolah?` or `Aku lagi @Kenapa ya hari ini`\\n\\n## Generate Training Data\\n\\nThis step will guide you to generate training data from created data samples. Generated training data might not match your expectations because we are duplicating words. However, you can prepare the training data and do bulk training instead if you want specific training data. Learn more about bulk training.\\n\\n1. Before you start, ensure your data samples are created. The generate button will enable if data samples are available and data to generate is equal to or below the total data possibilities.\\n2. Let’s put 10 data to generate.\\n3. Click the **Generate** button on the top right of your screen.\\n\\n<FigureImage\\n  alt=\\"Image 13 Alt\\"\\n  src=\\"/assets/images/products/kata-platform/how-to/how-to-use-training-data-generator-to-automate-generating-training-data/image13.webp\\"\\n  caption={{ title: \'Figure 13\', description: \'Generate button.\' }}\\n  layout=\\"responsive\\"\\n  naturalHeight={890}\\n  naturalWidth={1999}\\n/>\\n\\n4. It redirects you to the Generated Data page, where you can train using the bulk labeling feature.\\n5. You will see a training data list as follows.\\n\\n<FigureImage\\n  alt=\\"Image 14 Alt\\"\\n  src=\\"/assets/images/products/kata-platform/how-to/how-to-use-training-data-generator-to-automate-generating-training-data/image14.webp\\"\\n  caption={{ title: \'Figure 14\', description: \'Generated data from data sample and a word bank.\' }}\\n  layout=\\"responsive\\"\\n  naturalHeight={1049}\\n  naturalWidth={1999}\\n/>\\n\\n6. You can delete generated data by clicking on the remove button in the list.Bulk labeling\\n\\nYou’re going to train generated data by using bulk labeling. Bulk labeling is a feature to tag entity type “trait”, “phrase” or “dictionary”, by doing it at once.\\n\\nLet’s start to tag an entity type “trait” that you’ve created before.\\n\\n1. In the **Bulk Labeling** section, select the entity name intent. This entity type is “trait”.\\n2. Next, it will show available labels in the entity. Because you only create 1 label, then select the statement label.\\n\\n<div className=\\"info\\">\\n  <img className=\\"borderless\\" src=\\"/assets/images/icon-info.svg\\" />\\n  <p>\\n    <b>Important note</b>: Bulk labeling for entity type “trait” will tag all generated data.\\n  </p>\\n</div>\\n\\n<FigureImage\\n  alt=\\"Image 15 Alt\\"\\n  src=\\"/assets/images/products/kata-platform/how-to/how-to-use-training-data-generator-to-automate-generating-training-data/image15.webp\\"\\n  caption={{ title: \'Figure 15\', description: \'Tag entity type “trait”.\' }}\\n  layout=\\"responsive\\"\\n  naturalHeight={1057}\\n  naturalWidth={1999}\\n/>\\n\\n3. Click the button **Add more entity**. Then, select the entity name object.\\n4. Next, select the person label. Then, it will show a text area named **Words to Tag**. Words to Tag is a feature to search words you want to tag. For example, you will tag `sinta` word.\\n5. Press “Enter” on your keyboard to submit the word. It will show like this.\\n\\n<FigureImage\\n  alt=\\"Image 16 Alt\\"\\n  src=\\"/assets/images/products/kata-platform/how-to/how-to-use-training-data-generator-to-automate-generating-training-data/image16.webp\\"\\n  caption={{ title: \'Figure 16\', description: \'Tag `sinta` word in bulk labeling.\' }}\\n  layout=\\"responsive\\"\\n  naturalHeight={851}\\n  naturalWidth={1999}\\n/>\\n\\n<div className=\\"info\\">\\n  <img className=\\"borderless\\" src=\\"/assets/images/icon-info.svg\\" />\\n  <p>\\n    <b>Important note</b>: Bulk labeling for entity type “phrase” and “dictionary” will tag words only.\\n  </p>\\n</div>\\n\\n6. Then, add the entity “dictionary” type. Click **Add more Entity** to start. Then, select entity name things. Then, it will show a text area named **Words to Tag**. Words to Tag is a feature to search words you want to tag. For example, you will tag a `sekolah` word.\\n\\n<div className=\\"info\\">\\n  <img className=\\"borderless\\" src=\\"/assets/images/icon-info.svg\\" />\\n  <p>\\n    <b>Important note</b>: Bulk labeling for entity type “dictionary” will not show specific labels to tag. So, it will\\n    train the entity.\\n  </p>\\n</div>\\n\\n<FigureImage\\n  alt=\\"Image 17 Alt\\"\\n  src=\\"/assets/images/products/kata-platform/how-to/how-to-use-training-data-generator-to-automate-generating-training-data/image17.webp\\"\\n  caption={{ title: \'Figure 17\', description: \'Tag `sekolah` word in bulk labeling.\' }}\\n  layout=\\"responsive\\"\\n  naturalHeight={898}\\n  naturalWidth={1999}\\n/>\\n\\n7. Finally, you can click the button **Train**. It will train all generated data into entity `intent` with `statement` label and entity `object` with `person` label.\\n8. When successfully trained, you will redirect to the **Training** page. On this page, you can see the generated data has been trained.\\n\\n<FigureImage\\n  alt=\\"Image 18 Alt\\"\\n  src=\\"/assets/images/products/kata-platform/how-to/how-to-use-training-data-generator-to-automate-generating-training-data/image18.webp\\"\\n  caption={{\\n    title: \'Figure 18\',\\n    description: \'Data has been trained as `intent:statement`, `object:person` and `things`.\',\\n  }}\\n  layout=\\"responsive\\"\\n  naturalHeight={1123}\\n  naturalWidth={1999}\\n/>\\n\\n9. You can click the arrow on the right of the box to open the trained data detail.\\n\\n<FigureImage\\n  alt=\\"Image 19 Alt\\"\\n  src=\\"/assets/images/products/kata-platform/how-to/how-to-use-training-data-generator-to-automate-generating-training-data/image19.webp\\"\\n  caption={{ title: \'Figure 19\', description: \'How to show trained data detail.\' }}\\n  layout=\\"responsive\\"\\n  naturalHeight={1136}\\n  naturalWidth={1999}\\n/>\\n\\n<FigureImage\\n  alt=\\"Image 20 Alt\\"\\n  src=\\"/assets/images/products/kata-platform/how-to/how-to-use-training-data-generator-to-automate-generating-training-data/image20.webp\\"\\n  caption={{ title: \'Figure 20\', description: \'Trained data detail.\' }}\\n  layout=\\"responsive\\"\\n  naturalHeight={703}\\n  naturalWidth={1999}\\n/>\\n\\n## Limitations\\n\\nThere are several important notes when using a data generator, such as:\\n\\n- You can create unlimited data samples and word banks, but the system only generates up to 100 training data.\\n- You can create data again if you want to add more than 100 generated training data or sentences. It recommended using new data samples when generating new training data to make similar combination training data or sentence results.\\n- If you’re not satisfied with generated training data, we recommend these approaches:\\n  - Create a new data sample with a different pattern from previous data samples.\\n  - If you want a specific sentence, but the system does not show what you want, then we recommend you to use the training feature in **NLU > Training** instead.\\n- If you have another NLU and want to use word banks or data samples from the current project, it cannot be done now.\\n- The bulk labeling feature is only for the Data Generator feature. You cannot use it for now independently.\\n\\nThis is the end of the guidance. You can contact <a href=\\"mailto:support@kata.ai\\">support@kata.ai</a> if you have any difficulties when implementing this.\\n","code":"var Component=(()=>{var h=Object.create;var o=Object.defineProperty;var g=Object.getOwnPropertyDescriptor;var u=Object.getOwnPropertyNames;var p=Object.getPrototypeOf,m=Object.prototype.hasOwnProperty;var l=t=>o(t,\\"__esModule\\",{value:!0});var y=(t,i)=>()=>(i||t((i={exports:{}}).exports,i),i.exports),w=(t,i)=>{for(var r in i)o(t,r,{get:i[r],enumerable:!0})},s=(t,i,r,a)=>{if(i&&typeof i==\\"object\\"||typeof i==\\"function\\")for(let n of u(i))!m.call(t,n)&&(r||n!==\\"default\\")&&o(t,n,{get:()=>i[n],enumerable:!(a=g(i,n))||a.enumerable});return t},b=(t,i)=>s(l(o(t!=null?h(p(t)):{},\\"default\\",!i&&t&&t.__esModule?{get:()=>t.default,enumerable:!0}:{value:t,enumerable:!0})),t),f=(t=>(i,r)=>t&&t.get(i)||(r=s(l({}),i,1),t&&t.set(i,r),r))(typeof WeakMap!=\\"undefined\\"?new WeakMap:0);var c=y((F,d)=>{d.exports=_jsx_runtime});var I={};w(I,{default:()=>T,frontmatter:()=>k});var e=b(c()),k={id:\\"how-to-use-training-data-generator-to-automate-generating-training-data\\",title:\\"How to Use Training Data Generator to Automate Generating Training Data\\",prev:\\"how-to-use-super-model-to-improve-your-bot-intelligence\\",next:\\"how-to-use-bulk-training-for-faster-training-process\\",section:\\"How To\\"};function v(t={}){let{wrapper:i}=t.components||{};return i?(0,e.jsx)(i,Object.assign({},t,{children:(0,e.jsx)(r,{})})):r();function r(){let a=Object.assign({h2:\\"h2\\",a:\\"a\\",span:\\"span\\",p:\\"p\\",ol:\\"ol\\",li:\\"li\\",ul:\\"ul\\",code:\\"code\\",strong:\\"strong\\",pre:\\"pre\\"},t.components),{FigureImage:n}=a;return n||N(\\"FigureImage\\",!0),(0,e.jsxs)(e.Fragment,{children:[(0,e.jsxs)(a.h2,{id:\\"introduction\\",children:[(0,e.jsx)(a.a,{className:\\"anchor\\",href:\\"#introduction\\",children:(0,e.jsx)(a.span,{className:\\"icon icon-link\\"})}),\\"Introduction\\"]}),`\\n`,(0,e.jsx)(a.p,{children:\\"Training Data Generator is a feature that enables you to automatically generate training data up to 100 data using sentence samples, or we call it data samples.\\"}),`\\n`,(0,e.jsx)(a.p,{children:\\"Before creating a data sample, you will need to define the keyword and synonyms inside the \\\\u201Cword bank\\\\u201D feature. Why is it required? We do permutations from data samples and keyword variants to generate the training data. Let\\\\u2019s try a case:\\"}),`\\n`,(0,e.jsxs)(a.ol,{children:[`\\n`,(0,e.jsx)(a.li,{children:\\"You create a word bank from Kenapa which consists of variant words or synonyms from Kenapa. For example: knp, ngap, ngaps, kenaps. So, you have 4 word variants.\\"}),`\\n`,(0,e.jsx)(a.li,{children:\\"Next, you create a data sample. For example: @Kenapa ATM saya bermasalah ya.\\"}),`\\n`,(0,e.jsxs)(a.li,{children:[\\"We will create a permutation or combination from a data sample with variant words. For example, expected generated data will be like this:\\",`\\n`,(0,e.jsxs)(a.ul,{children:[`\\n`,(0,e.jsx)(a.li,{children:(0,e.jsx)(a.code,{children:\\"knp ATM saya bermasalah\\"})}),`\\n`,(0,e.jsx)(a.li,{children:(0,e.jsx)(a.code,{children:\\"ngap ATM saya bermasalah\\"})}),`\\n`,(0,e.jsx)(a.li,{children:(0,e.jsx)(a.code,{children:\\"ATM saya bermasalah ngaps\\"})}),`\\n`,(0,e.jsx)(a.li,{children:(0,e.jsx)(a.code,{children:\\"kenaps ATM saya bermasalah\\"})}),`\\n`,(0,e.jsx)(a.li,{children:\\"And many more\\"}),`\\n`]}),`\\n`]}),`\\n`,(0,e.jsx)(a.li,{children:\\"Also, we have a feature that is bulk tagging to tag all generated training data with your available entities and labels. It enables faster tagging rather than manually annotating.\\"}),`\\n`]}),`\\n`,(0,e.jsx)(a.p,{children:\\"This guidance will elaborate on how to use training data generators and do bulk tagging after generated data shows up. Let\\\\u2019s get started.\\"}),`\\n`,(0,e.jsxs)(a.h2,{id:\\"create-entity-and-labels\\",children:[(0,e.jsx)(a.a,{className:\\"anchor\\",href:\\"#create-entity-and-labels\\",children:(0,e.jsx)(a.span,{className:\\"icon icon-link\\"})}),\\"Create Entity and Labels\\"]}),`\\n`,(0,e.jsx)(a.p,{children:\\"Before you start, you will need to create at least one entity.\\"}),`\\n`,(0,e.jsxs)(a.ol,{children:[`\\n`,(0,e.jsxs)(a.li,{children:[\\"To create an entity, go to the \\",(0,e.jsx)(a.strong,{children:\\"NLU > Models\\"}),\\" menu. Then, click the \\",(0,e.jsx)(a.strong,{children:\\"Entity\\"}),\\" menu.\\"]}),`\\n`]}),`\\n`,(0,e.jsx)(n,{alt:\\"Image 1 Alt\\",src:\\"/assets/images/products/kata-platform/how-to/how-to-use-training-data-generator-to-automate-generating-training-data/image1.webp\\",caption:{title:\\"Figure 1\\",description:\\"Models menu.\\"},layout:\\"responsive\\",naturalHeight:853,naturalWidth:1999}),`\\n`,(0,e.jsxs)(a.ol,{start:\\"2\\",children:[`\\n`,(0,e.jsxs)(a.li,{children:[\\"Click \\",(0,e.jsx)(a.strong,{children:\\"Create Entity\\"}),\\" to set up a new entity. It will show a form on the right screen. Fill in the entity name.\\"]}),`\\n`]}),`\\n`,(0,e.jsx)(a.p,{children:\\"Here is the explanation of each field\\"}),`\\n`,(0,e.jsxs)(a.ol,{children:[`\\n`,(0,e.jsxs)(a.li,{children:[(0,e.jsx)(a.strong,{children:\\"Inherit\\"}),\\" lets you copy an entity from any public NLU on the Kata Platform. To inherit an NLU, simply type the NLU ID with \\",(0,e.jsx)(a.code,{children:\\"[username]:[project name]\\"}),\\". Inherited entities will sync to the original entity, including the labels and training data. For example, in the \\",(0,e.jsx)(a.a,{href:\\"/kata-platform/documentation-content/start-your-first-chatbot\\",children:\\"getting started chatbot section\\"}),\\", your NLU ID format is \\",(0,e.jsx)(a.code,{children:\\"muhfadhiilkata:test_simple_bot\\"}),\\".\\"]}),`\\n`,(0,e.jsxs)(a.li,{children:[(0,e.jsx)(a.strong,{children:\\"Type\\"}),\\" is intended for the entity type. In Kata Platform, we have 3 entity types which are\\",`\\n`,(0,e.jsxs)(a.ul,{children:[`\\n`,(0,e.jsxs)(a.li,{children:[(0,e.jsx)(a.strong,{children:\\"Trait\\"}),\\" is a text classifier that classifies a sentence into particular labels. This type is suitable for making your bot recognize nuance in a sentence.\\"]}),`\\n`,(0,e.jsxs)(a.li,{children:[(0,e.jsx)(a.strong,{children:\\"Dictionary\\"}),\\" is a word tagger which has keys and labels. It will form an array.\\"]}),`\\n`,(0,e.jsxs)(a.li,{children:[\\"The \\",(0,e.jsx)(a.strong,{children:\\"Phrase\\"}),\\" is a word tagger.\\"]}),`\\n`]}),`\\n`]}),`\\n`]}),`\\n`,(0,e.jsx)(n,{alt:\\"Image 2 Alt\\",src:\\"/assets/images/products/kata-platform/how-to/how-to-use-training-data-generator-to-automate-generating-training-data/image2.webp\\",caption:{title:\\"Figure 2\\",description:\'Entity type \\"dictionary\\"\'},layout:\\"responsive\\",naturalHeight:1400,naturalWidth:1600}),`\\n`,(0,e.jsxs)(a.ol,{start:\\"3\\",children:[`\\n`,(0,e.jsxs)(a.li,{children:[`\\n`,(0,e.jsxs)(a.p,{children:[\\"The \\",(0,e.jsx)(a.strong,{children:\\"Profile\\"}),\\" is an AI model that is available to use by users. You can choose any profiles you want depending on data training and the dataset you have.\\"]}),`\\n`,(0,e.jsxs)(a.ul,{children:[`\\n`,(0,e.jsx)(a.li,{children:\\"The \\\\u201Cdefault\\\\u201D profile is suitable for a large number of data samples so that this profile is available in all entity types.\\"}),`\\n`,(0,e.jsx)(a.li,{children:\\"\\\\u201Cintent\\\\u201D profile is suitable for entity type \\\\u201Ctrait\\\\u201D.\\"}),`\\n`,(0,e.jsx)(a.li,{children:\\"\\\\u201Cdefault_v2\\\\u201D profile is our newest profile and is suitable if you have a large amount of data.\\"}),`\\n`]}),`\\n`]}),`\\n`,(0,e.jsxs)(a.li,{children:[`\\n`,(0,e.jsxs)(a.p,{children:[(0,e.jsx)(a.strong,{children:\\"Root\\"}),\\" enables you to create an entity using other users\' NLU to copy the training data and add new labels. Therefore, it is suitable if you have a trained NLU and want to add more labels in the NLU. To use this, you can type an NLU ID which consists of username and project with format \\",(0,e.jsx)(a.code,{children:\\"[username]:[project name]\\"}),\\".\\"]}),`\\n`]}),`\\n`,(0,e.jsxs)(a.li,{children:[`\\n`,(0,e.jsxs)(a.p,{children:[(0,e.jsx)(a.strong,{children:\\"Labels\\"}),\\" is a feature to determine classes or categories from an entity. To add a new label, you can type and press \\\\u201Center\\\\u201D on your keyboard.\\"]}),`\\n`]}),`\\n`,(0,e.jsxs)(a.li,{children:[`\\n`,(0,e.jsxs)(a.p,{children:[\\"If you choose entity type \\\\u201Cdictionary\\\\u201D, it will show a dropdown name \\",(0,e.jsx)(a.strong,{children:\\"Belongs to\\"}),\\". This feature enables you to define relationships () between entities. Belongs to feature can only be used for entities in the same NLU with entity type \\\\u201Cphrase\\\\u201D or \\\\u201Cdictionary\\\\u201D. It is suitable if your data sample is like this:\\"]}),`\\n`]}),`\\n`]}),`\\n`,(0,e.jsx)(a.pre,{children:(0,e.jsx)(a.code,{className:\\"code-highlight\\",children:(0,e.jsx)(a.span,{className:\\"code-line\\",children:`Saya mau beli es kopi susu 2 dan less sugar\\n`})})}),`\\n`,(0,e.jsxs)(a.p,{children:[(0,e.jsx)(a.code,{children:\\"Es kopi susu\\"}),\\" is the main menu. \\",(0,e.jsx)(a.code,{children:\\"2 and less sugar\\"}),\\" are modifiers to detailing the order. So in \\",(0,e.jsx)(a.strong,{children:\\"Belongs To\\"}),\\" concept, you will tag 2 and choose \\",(0,e.jsx)(a.code,{children:\\"belongsTo\\"}),\\".\\"]}),`\\n`,(0,e.jsx)(a.p,{children:\\"For this guide, you will create 1 entity type \\\\u201Ctrait\\\\u201D to extract sentences, 1 entity type \\\\u201Cphrase\\\\u201D and 1 entity type \\\\u201Cdictionary\\\\u201D to extract words.\\"}),`\\n`,(0,e.jsxs)(a.ol,{children:[`\\n`,(0,e.jsxs)(a.li,{children:[\\"Click the \\",(0,e.jsx)(a.strong,{children:\\"Create Entity\\"}),\\" button.\\"]}),`\\n`,(0,e.jsx)(a.li,{children:\\"Then, fill in as follows for the first entity:\\"}),`\\n`]}),`\\n`,(0,e.jsx)(a.pre,{children:(0,e.jsxs)(a.code,{className:\\"code-highlight\\",children:[(0,e.jsx)(a.span,{className:\\"code-line\\",children:`Name: intent\\n`}),(0,e.jsx)(a.span,{className:\\"code-line\\",children:`Type: Trait\\n`}),(0,e.jsx)(a.span,{className:\\"code-line\\",children:`Label: statement\\n`})]})}),`\\n`,(0,e.jsx)(a.p,{children:\\"Here is the screenshot:\\"}),`\\n`,(0,e.jsx)(n,{alt:\\"Image 3 Alt\\",src:\\"/assets/images/products/kata-platform/how-to/how-to-use-training-data-generator-to-automate-generating-training-data/image3.webp\\",caption:{title:\\"Figure 3\\",description:\\"Create an entity.\\"},layout:\\"responsive\\",naturalHeight:1262,naturalWidth:1999}),`\\n`,(0,e.jsxs)(a.ol,{start:\\"3\\",children:[`\\n`,(0,e.jsxs)(a.li,{children:[\\"Click the \\",(0,e.jsx)(a.strong,{children:\\"Create Entity\\"}),\\" button to create the following entity.\\"]}),`\\n`,(0,e.jsx)(a.li,{children:\\"Fill in as follows for the second entity:\\"}),`\\n`]}),`\\n`,(0,e.jsx)(a.pre,{children:(0,e.jsxs)(a.code,{className:\\"code-highlight\\",children:[(0,e.jsx)(a.span,{className:\\"code-line\\",children:`Name: object\\n`}),(0,e.jsx)(a.span,{className:\\"code-line\\",children:`Type: phrase\\n`}),(0,e.jsx)(a.span,{className:\\"code-line\\",children:`Label: person\\n`})]})}),`\\n`,(0,e.jsx)(a.p,{children:\\"Here is the screenshot:\\"}),`\\n`,(0,e.jsx)(n,{alt:\\"Image 4 Alt\\",src:\\"/assets/images/products/kata-platform/how-to/how-to-use-training-data-generator-to-automate-generating-training-data/image4.webp\\",caption:{title:\\"Figure 4\\",description:\\"Create an entity.\\"},layout:\\"responsive\\",naturalHeight:1424,naturalWidth:1970}),`\\n`,(0,e.jsxs)(a.ol,{start:\\"5\\",children:[`\\n`,(0,e.jsx)(a.li,{children:\\"Fill in as follows for the last entity:\\"}),`\\n`]}),`\\n`,(0,e.jsx)(a.pre,{children:(0,e.jsxs)(a.code,{className:\\"code-highlight\\",children:[(0,e.jsx)(a.span,{className:\\"code-line\\",children:`Name: things\\n`}),(0,e.jsx)(a.span,{className:\\"code-line\\",children:`Type: dictionary\\n`}),(0,e.jsx)(a.span,{className:\\"code-line\\",children:`Key: car\\n`}),(0,e.jsx)(a.span,{className:\\"code-line\\",children:`Labels: suv, van, lcgc\\n`})]})}),`\\n`,(0,e.jsx)(a.p,{children:\\"Here is the screenshot:\\"}),`\\n`,(0,e.jsx)(n,{alt:\\"Image 5 Alt\\",src:\\"/assets/images/products/kata-platform/how-to/how-to-use-training-data-generator-to-automate-generating-training-data/image5.webp\\",caption:{title:\\"Figure 5\\",description:\\"Create an entity.\\"},layout:\\"responsive\\",naturalHeight:1628,naturalWidth:1922}),`\\n`,(0,e.jsxs)(a.ol,{start:\\"6\\",children:[`\\n`,(0,e.jsxs)(a.li,{children:[\\"Click \\",(0,e.jsx)(a.strong,{children:\\"Create\\"}),\\" to finalize.\\"]}),`\\n`]}),`\\n`,(0,e.jsx)(a.p,{children:\\"The next step is to create a word bank when you\\\\u2019re done.\\"}),`\\n`,(0,e.jsxs)(a.h2,{id:\\"create-a-word-bank\\",children:[(0,e.jsx)(a.a,{className:\\"anchor\\",href:\\"#create-a-word-bank\\",children:(0,e.jsx)(a.span,{className:\\"icon icon-link\\"})}),\\"Create a Word Bank\\"]}),`\\n`,(0,e.jsx)(a.p,{children:\\"In this part, you will create synonyms or variants from the keyword. Here is the guidance for adding variants:\\"}),`\\n`,(0,e.jsxs)(a.ul,{children:[`\\n`,(0,e.jsx)(a.li,{children:\\"You can add 2 words as 1 variant by using space. Maximum 20 characters.\\"}),`\\n`,(0,e.jsx)(a.li,{children:\\"You must create at least 2 variants to create a word bank with a maximum of 20 characters for each variant.\\"}),`\\n`,(0,e.jsx)(a.li,{children:\\"You can remove a variant by clicking the \\\\u201Cx\\\\u201D button next to the word.\\"}),`\\n`]}),`\\n`,(0,e.jsx)(a.p,{children:\\"Step by step to create a word bank:\\"}),`\\n`,(0,e.jsxs)(a.ol,{children:[`\\n`,(0,e.jsx)(a.li,{children:\\"Click the Word Bank tab, then click the Create button. It will show a dialog.\\"}),`\\n`,(0,e.jsx)(a.li,{children:\\"Fill in the name for your word bank. For example, you can fill in Kenapa.\\"}),`\\n`,(0,e.jsx)(a.li,{children:\\"Then, create variants by typing a synonym from Kenapa word. For example:\\"}),`\\n`]}),`\\n`,(0,e.jsx)(a.pre,{children:(0,e.jsxs)(a.code,{className:\\"code-highlight\\",children:[(0,e.jsx)(a.span,{className:\\"code-line\\",children:`ngaps\\n`}),(0,e.jsx)(a.span,{className:\\"code-line\\",children:`ngapa\\n`}),(0,e.jsx)(a.span,{className:\\"code-line\\",children:`kenp\\n`}),(0,e.jsx)(a.span,{className:\\"code-line\\",children:`knp\\n`}),(0,e.jsx)(a.span,{className:\\"code-line\\",children:`kenopo\\n`})]})}),`\\n`,(0,e.jsxs)(a.ol,{start:\\"4\\",children:[`\\n`,(0,e.jsx)(a.li,{children:\\"Press \\\\u201CEnter\\\\u201D on your keyboard.\\"}),`\\n`]}),`\\n`,(0,e.jsx)(n,{alt:\\"Image 6 Alt\\",src:\\"/assets/images/products/kata-platform/how-to/how-to-use-training-data-generator-to-automate-generating-training-data/image6.webp\\",caption:{title:\\"Figure 6\\",description:\\"Create a word bank.\\"},layout:\\"responsive\\",naturalHeight:1067,naturalWidth:1999}),`\\n`,(0,e.jsxs)(a.ol,{start:\\"5\\",children:[`\\n`,(0,e.jsxs)(a.li,{children:[\\"Finally, you have variants. Then, click the \\",(0,e.jsx)(a.strong,{children:\\"Create\\"}),\\" button to create a word bank.\\"]}),`\\n`]}),`\\n`,(0,e.jsxs)(a.h2,{id:\\"create-a-data-sample\\",children:[(0,e.jsx)(a.a,{className:\\"anchor\\",href:\\"#create-a-data-sample\\",children:(0,e.jsx)(a.span,{className:\\"icon icon-link\\"})}),\\"Create a Data Sample\\"]}),`\\n`,(0,e.jsx)(a.p,{children:\\"Once you\\\\u2019ve created a word bank, now you\\\\u2019re ready to make a data sample. Data sample is a sample sentence that consists of a word bank and several words as a base to generate training data or called a \\\\u201Cpattern\\\\u201D. Here are the steps:\\"}),`\\n`,(0,e.jsxs)(a.ol,{children:[`\\n`,(0,e.jsxs)(a.li,{children:[\\"Go to \\",(0,e.jsx)(a.strong,{children:\\"NLU > Training\\"}),\\".\\"]}),`\\n`,(0,e.jsxs)(a.li,{children:[\\"Click on \\",(0,e.jsx)(a.strong,{children:\\"Bulk Training\\"}),\\" dropdown, then choose \\",(0,e.jsx)(a.strong,{children:\\"Data Generator\\"}),\\".\\"]}),`\\n`]}),`\\n`,(0,e.jsx)(n,{alt:\\"Image 7 Alt\\",src:\\"/assets/images/products/kata-platform/how-to/how-to-use-training-data-generator-to-automate-generating-training-data/image7.webp\\",caption:{title:\\"Figure 7\\",description:\\"Go to Data Generator feature.\\"},layout:\\"responsive\\",naturalHeight:845,naturalWidth:1999}),`\\n`,(0,e.jsxs)(a.ol,{start:\\"3\\",children:[`\\n`,(0,e.jsx)(a.li,{children:\\"You will see a row to input a data sample. For example, to add your available word bank, type \\\\u201C@\\\\u201C to show the word bank list.\\"}),`\\n`]}),`\\n`,(0,e.jsx)(n,{alt:\\"Image 8 Alt\\",src:\\"/assets/images/products/kata-platform/how-to/how-to-use-training-data-generator-to-automate-generating-training-data/image8.webp\\",caption:{title:\\"Figure 8\\",description:\\"Type \\\\u201C@\\\\u201D to show word bank list.\\"},layout:\\"responsive\\",naturalHeight:823,naturalWidth:1999}),`\\n`,(0,e.jsxs)(a.ol,{start:\\"4\\",children:[`\\n`,(0,e.jsx)(a.li,{children:\\"Input a data sample, for example:\\"}),`\\n`]}),`\\n`,(0,e.jsx)(a.pre,{children:(0,e.jsx)(a.code,{className:\\"code-highlight\\",children:(0,e.jsx)(a.span,{className:\\"code-line\\",children:`@Kenapa kemarin Sinta tidak sekolah\\n`})})}),`\\n`,(0,e.jsx)(n,{alt:\\"Image 9 Alt\\",src:\\"/assets/images/products/kata-platform/how-to/how-to-use-training-data-generator-to-automate-generating-training-data/image9.webp\\",caption:{title:\\"Figure 9\\",description:\\"Type a data sample.\\"},layout:\\"responsive\\",naturalHeight:712,naturalWidth:1999}),`\\n`,(0,e.jsxs)(a.ol,{start:\\"5\\",children:[`\\n`,(0,e.jsx)(a.li,{children:\\"Press \\\\u201CAdd Row\\\\u201D to submit.\\"}),`\\n`,(0,e.jsx)(a.li,{children:\\"You can edit or delete your data sample after it has been created.\\"}),`\\n`]}),`\\n`,(0,e.jsx)(n,{alt:\\"Image 10 Alt\\",src:\\"/assets/images/products/kata-platform/how-to/how-to-use-training-data-generator-to-automate-generating-training-data/image10.webp\\",caption:{title:\\"Figure 10\\",description:\\"Update and delete data sample.\\"},layout:\\"responsive\\",naturalHeight:802,naturalWidth:1999}),`\\n`,(0,e.jsx)(a.p,{children:\\"On the data sample page, there is information:\\"}),`\\n`,(0,e.jsxs)(a.ul,{children:[`\\n`,(0,e.jsxs)(a.li,{children:[(0,e.jsx)(a.strong,{children:\\"Total data possibilities\\"}),\\" mean total generated data that can be created from available data samples. So for this example, you have 2 data samples multiplied with 1 word bank, then multiply again with 5 word variants. So finally, there will be 10 data possibilities.\\"]}),`\\n`]}),`\\n`,(0,e.jsx)(n,{alt:\\"Image 11 Alt\\",src:\\"/assets/images/products/kata-platform/how-to/how-to-use-training-data-generator-to-automate-generating-training-data/image11.webp\\",caption:{title:\\"Figure 11\\",description:\\"Total data possibilities from available data samples.\\"},layout:\\"responsive\\",naturalHeight:871,naturalWidth:1999}),`\\n`,(0,e.jsxs)(a.ul,{children:[`\\n`,(0,e.jsxs)(a.li,{children:[(0,e.jsx)(a.strong,{children:\\"Data to Generate\\"}),\\" is several generated data that you wanted. The number must be below or equal to the total data possibilities.\\"]}),`\\n`]}),`\\n`,(0,e.jsx)(n,{alt:\\"Image 12 Alt\\",src:\\"/assets/images/products/kata-platform/how-to/how-to-use-training-data-generator-to-automate-generating-training-data/image12.webp\\",caption:{title:\\"Figure 12\\",description:\\"Data to generate must be equal to or below than total data possibilities.\\"},layout:\\"responsive\\",naturalHeight:779,naturalWidth:1999}),`\\n`,(0,e.jsx)(a.p,{children:(0,e.jsx)(a.strong,{children:\\"Important note:\\"})}),`\\n`,(0,e.jsxs)(a.p,{children:[\\"Make sure you put a space before the next word or after the previous word. Example: \\",(0,e.jsx)(a.code,{children:\\"@Kenapa Sinta tidak sekolah?\\"}),\\" or \\",(0,e.jsx)(a.code,{children:\\"Aku lagi @Kenapa ya hari ini\\"})]}),`\\n`,(0,e.jsxs)(a.h2,{id:\\"generate-training-data\\",children:[(0,e.jsx)(a.a,{className:\\"anchor\\",href:\\"#generate-training-data\\",children:(0,e.jsx)(a.span,{className:\\"icon icon-link\\"})}),\\"Generate Training Data\\"]}),`\\n`,(0,e.jsx)(a.p,{children:\\"This step will guide you to generate training data from created data samples. Generated training data might not match your expectations because we are duplicating words. However, you can prepare the training data and do bulk training instead if you want specific training data. Learn more about bulk training.\\"}),`\\n`,(0,e.jsxs)(a.ol,{children:[`\\n`,(0,e.jsx)(a.li,{children:\\"Before you start, ensure your data samples are created. The generate button will enable if data samples are available and data to generate is equal to or below the total data possibilities.\\"}),`\\n`,(0,e.jsx)(a.li,{children:\\"Let\\\\u2019s put 10 data to generate.\\"}),`\\n`,(0,e.jsxs)(a.li,{children:[\\"Click the \\",(0,e.jsx)(a.strong,{children:\\"Generate\\"}),\\" button on the top right of your screen.\\"]}),`\\n`]}),`\\n`,(0,e.jsx)(n,{alt:\\"Image 13 Alt\\",src:\\"/assets/images/products/kata-platform/how-to/how-to-use-training-data-generator-to-automate-generating-training-data/image13.webp\\",caption:{title:\\"Figure 13\\",description:\\"Generate button.\\"},layout:\\"responsive\\",naturalHeight:890,naturalWidth:1999}),`\\n`,(0,e.jsxs)(a.ol,{start:\\"4\\",children:[`\\n`,(0,e.jsx)(a.li,{children:\\"It redirects you to the Generated Data page, where you can train using the bulk labeling feature.\\"}),`\\n`,(0,e.jsx)(a.li,{children:\\"You will see a training data list as follows.\\"}),`\\n`]}),`\\n`,(0,e.jsx)(n,{alt:\\"Image 14 Alt\\",src:\\"/assets/images/products/kata-platform/how-to/how-to-use-training-data-generator-to-automate-generating-training-data/image14.webp\\",caption:{title:\\"Figure 14\\",description:\\"Generated data from data sample and a word bank.\\"},layout:\\"responsive\\",naturalHeight:1049,naturalWidth:1999}),`\\n`,(0,e.jsxs)(a.ol,{start:\\"6\\",children:[`\\n`,(0,e.jsx)(a.li,{children:\\"You can delete generated data by clicking on the remove button in the list.Bulk labeling\\"}),`\\n`]}),`\\n`,(0,e.jsx)(a.p,{children:\\"You\\\\u2019re going to train generated data by using bulk labeling. Bulk labeling is a feature to tag entity type \\\\u201Ctrait\\\\u201D, \\\\u201Cphrase\\\\u201D or \\\\u201Cdictionary\\\\u201D, by doing it at once.\\"}),`\\n`,(0,e.jsx)(a.p,{children:\\"Let\\\\u2019s start to tag an entity type \\\\u201Ctrait\\\\u201D that you\\\\u2019ve created before.\\"}),`\\n`,(0,e.jsxs)(a.ol,{children:[`\\n`,(0,e.jsxs)(a.li,{children:[\\"In the \\",(0,e.jsx)(a.strong,{children:\\"Bulk Labeling\\"}),\\" section, select the entity name intent. This entity type is \\\\u201Ctrait\\\\u201D.\\"]}),`\\n`,(0,e.jsx)(a.li,{children:\\"Next, it will show available labels in the entity. Because you only create 1 label, then select the statement label.\\"}),`\\n`]}),`\\n`,(0,e.jsxs)(\\"div\\",{className:\\"info\\",children:[(0,e.jsx)(\\"img\\",{className:\\"borderless\\",src:\\"/assets/images/icon-info.svg\\"}),(0,e.jsx)(\\"p\\",{children:(0,e.jsxs)(a.p,{children:[(0,e.jsx)(\\"b\\",{children:\\"Important note\\"}),\\": Bulk labeling for entity type \\\\u201Ctrait\\\\u201D will tag all generated data.\\"]})})]}),`\\n`,(0,e.jsx)(n,{alt:\\"Image 15 Alt\\",src:\\"/assets/images/products/kata-platform/how-to/how-to-use-training-data-generator-to-automate-generating-training-data/image15.webp\\",caption:{title:\\"Figure 15\\",description:\\"Tag entity type \\\\u201Ctrait\\\\u201D.\\"},layout:\\"responsive\\",naturalHeight:1057,naturalWidth:1999}),`\\n`,(0,e.jsxs)(a.ol,{start:\\"3\\",children:[`\\n`,(0,e.jsxs)(a.li,{children:[\\"Click the button \\",(0,e.jsx)(a.strong,{children:\\"Add more entity\\"}),\\". Then, select the entity name object.\\"]}),`\\n`,(0,e.jsxs)(a.li,{children:[\\"Next, select the person label. Then, it will show a text area named \\",(0,e.jsx)(a.strong,{children:\\"Words to Tag\\"}),\\". Words to Tag is a feature to search words you want to tag. For example, you will tag \\",(0,e.jsx)(a.code,{children:\\"sinta\\"}),\\" word.\\"]}),`\\n`,(0,e.jsx)(a.li,{children:\\"Press \\\\u201CEnter\\\\u201D on your keyboard to submit the word. It will show like this.\\"}),`\\n`]}),`\\n`,(0,e.jsx)(n,{alt:\\"Image 16 Alt\\",src:\\"/assets/images/products/kata-platform/how-to/how-to-use-training-data-generator-to-automate-generating-training-data/image16.webp\\",caption:{title:\\"Figure 16\\",description:\\"Tag `sinta` word in bulk labeling.\\"},layout:\\"responsive\\",naturalHeight:851,naturalWidth:1999}),`\\n`,(0,e.jsxs)(\\"div\\",{className:\\"info\\",children:[(0,e.jsx)(\\"img\\",{className:\\"borderless\\",src:\\"/assets/images/icon-info.svg\\"}),(0,e.jsx)(\\"p\\",{children:(0,e.jsxs)(a.p,{children:[(0,e.jsx)(\\"b\\",{children:\\"Important note\\"}),\\": Bulk labeling for entity type \\\\u201Cphrase\\\\u201D and \\\\u201Cdictionary\\\\u201D will tag words only.\\"]})})]}),`\\n`,(0,e.jsxs)(a.ol,{start:\\"6\\",children:[`\\n`,(0,e.jsxs)(a.li,{children:[\\"Then, add the entity \\\\u201Cdictionary\\\\u201D type. Click \\",(0,e.jsx)(a.strong,{children:\\"Add more Entity\\"}),\\" to start. Then, select entity name things. Then, it will show a text area named \\",(0,e.jsx)(a.strong,{children:\\"Words to Tag\\"}),\\". Words to Tag is a feature to search words you want to tag. For example, you will tag a \\",(0,e.jsx)(a.code,{children:\\"sekolah\\"}),\\" word.\\"]}),`\\n`]}),`\\n`,(0,e.jsxs)(\\"div\\",{className:\\"info\\",children:[(0,e.jsx)(\\"img\\",{className:\\"borderless\\",src:\\"/assets/images/icon-info.svg\\"}),(0,e.jsx)(\\"p\\",{children:(0,e.jsxs)(a.p,{children:[(0,e.jsx)(\\"b\\",{children:\\"Important note\\"}),`: Bulk labeling for entity type \\\\u201Cdictionary\\\\u201D will not show specific labels to tag. So, it will\\ntrain the entity.`]})})]}),`\\n`,(0,e.jsx)(n,{alt:\\"Image 17 Alt\\",src:\\"/assets/images/products/kata-platform/how-to/how-to-use-training-data-generator-to-automate-generating-training-data/image17.webp\\",caption:{title:\\"Figure 17\\",description:\\"Tag `sekolah` word in bulk labeling.\\"},layout:\\"responsive\\",naturalHeight:898,naturalWidth:1999}),`\\n`,(0,e.jsxs)(a.ol,{start:\\"7\\",children:[`\\n`,(0,e.jsxs)(a.li,{children:[\\"Finally, you can click the button \\",(0,e.jsx)(a.strong,{children:\\"Train\\"}),\\". It will train all generated data into entity \\",(0,e.jsx)(a.code,{children:\\"intent\\"}),\\" with \\",(0,e.jsx)(a.code,{children:\\"statement\\"}),\\" label and entity \\",(0,e.jsx)(a.code,{children:\\"object\\"}),\\" with \\",(0,e.jsx)(a.code,{children:\\"person\\"}),\\" label.\\"]}),`\\n`,(0,e.jsxs)(a.li,{children:[\\"When successfully trained, you will redirect to the \\",(0,e.jsx)(a.strong,{children:\\"Training\\"}),\\" page. On this page, you can see the generated data has been trained.\\"]}),`\\n`]}),`\\n`,(0,e.jsx)(n,{alt:\\"Image 18 Alt\\",src:\\"/assets/images/products/kata-platform/how-to/how-to-use-training-data-generator-to-automate-generating-training-data/image18.webp\\",caption:{title:\\"Figure 18\\",description:\\"Data has been trained as `intent:statement`, `object:person` and `things`.\\"},layout:\\"responsive\\",naturalHeight:1123,naturalWidth:1999}),`\\n`,(0,e.jsxs)(a.ol,{start:\\"9\\",children:[`\\n`,(0,e.jsx)(a.li,{children:\\"You can click the arrow on the right of the box to open the trained data detail.\\"}),`\\n`]}),`\\n`,(0,e.jsx)(n,{alt:\\"Image 19 Alt\\",src:\\"/assets/images/products/kata-platform/how-to/how-to-use-training-data-generator-to-automate-generating-training-data/image19.webp\\",caption:{title:\\"Figure 19\\",description:\\"How to show trained data detail.\\"},layout:\\"responsive\\",naturalHeight:1136,naturalWidth:1999}),`\\n`,(0,e.jsx)(n,{alt:\\"Image 20 Alt\\",src:\\"/assets/images/products/kata-platform/how-to/how-to-use-training-data-generator-to-automate-generating-training-data/image20.webp\\",caption:{title:\\"Figure 20\\",description:\\"Trained data detail.\\"},layout:\\"responsive\\",naturalHeight:703,naturalWidth:1999}),`\\n`,(0,e.jsxs)(a.h2,{id:\\"limitations\\",children:[(0,e.jsx)(a.a,{className:\\"anchor\\",href:\\"#limitations\\",children:(0,e.jsx)(a.span,{className:\\"icon icon-link\\"})}),\\"Limitations\\"]}),`\\n`,(0,e.jsx)(a.p,{children:\\"There are several important notes when using a data generator, such as:\\"}),`\\n`,(0,e.jsxs)(a.ul,{children:[`\\n`,(0,e.jsx)(a.li,{children:\\"You can create unlimited data samples and word banks, but the system only generates up to 100 training data.\\"}),`\\n`,(0,e.jsx)(a.li,{children:\\"You can create data again if you want to add more than 100 generated training data or sentences. It recommended using new data samples when generating new training data to make similar combination training data or sentence results.\\"}),`\\n`,(0,e.jsxs)(a.li,{children:[\\"If you\\\\u2019re not satisfied with generated training data, we recommend these approaches:\\",`\\n`,(0,e.jsxs)(a.ul,{children:[`\\n`,(0,e.jsx)(a.li,{children:\\"Create a new data sample with a different pattern from previous data samples.\\"}),`\\n`,(0,e.jsxs)(a.li,{children:[\\"If you want a specific sentence, but the system does not show what you want, then we recommend you to use the training feature in \\",(0,e.jsx)(a.strong,{children:\\"NLU > Training\\"}),\\" instead.\\"]}),`\\n`]}),`\\n`]}),`\\n`,(0,e.jsx)(a.li,{children:\\"If you have another NLU and want to use word banks or data samples from the current project, it cannot be done now.\\"}),`\\n`,(0,e.jsx)(a.li,{children:\\"The bulk labeling feature is only for the Data Generator feature. You cannot use it for now independently.\\"}),`\\n`]}),`\\n`,(0,e.jsxs)(a.p,{children:[\\"This is the end of the guidance. You can contact \\",(0,e.jsx)(\\"a\\",{href:\\"mailto:support@kata.ai\\",children:(0,e.jsx)(a.a,{href:\\"mailto:support@kata.ai\\",children:\\"support@kata.ai\\"})}),\\" if you have any difficulties when implementing this.\\"]})]})}}var T=v;function N(t,i){throw new Error(\\"Expected \\"+(i?\\"component\\":\\"object\\")+\\" `\\"+t+\\"` to be defined: you likely forgot to import, pass, or provide it.\\")}return f(I);})();\\n;return Component;"},"_id":"kata-platform/how-to/how-to-use-training-data-generator-to-automate-generating-training-data.mdx","_raw":{"sourceFilePath":"kata-platform/how-to/how-to-use-training-data-generator-to-automate-generating-training-data.mdx","sourceFileName":"how-to-use-training-data-generator-to-automate-generating-training-data.mdx","sourceFileDir":"kata-platform/how-to","contentType":"mdx","flattenedPath":"kata-platform/how-to/how-to-use-training-data-generator-to-automate-generating-training-data"},"type":"KataPlatform","slug":["how-to","how-to-use-training-data-generator-to-automate-generating-training-data"],"excerpt":"\\n## Introduction\\n\\nTraining Data Generator is a feature that enables you to automatically generate training data up to 100 data using sentence samples, or we call it data samples.\\n\\nBefore creating a data sample, you will need to define the keyword and synonyms inside the “word bank” feature"}');
;// CONCATENATED MODULE: ./.contentlayer/generated/KataPlatform/kata-platform__how-to__using-async-api-to-access-third-party-application.mdx.json
const kata_platform_how_to_using_async_api_to_access_third_party_application_mdx_namespaceObject = JSON.parse('{"id":"using-async-api-to-access-third-party-application","section":"How To","title":"Using Async API to Access Third-Party Application","prev":"using-sync-api-to-access-third-party-application","next":"how-to-change-error-messages-in-your-chatbot","body":{"raw":"\\nIn this guidance, you will be able to implement a bot that uses an action type Async API. Async API is used to make the response API send via command without waiting for the API results to move to the next state (a more seamless API call process).\\n\\n## Introduction\\n\\nFor using an API to access third-party applications from your chatbot, you will need to create an action API. Also, a state must be created before creating an action\\n\\n## How to Use\\n\\nIn this guidance, you will learn how to integrate NLU in your chatbot to recognize specific end-users input. Before you start, you will need to create at least one entity and it is already trained.\\n\\n1. Go to your **project**, then click **Flow**.\\n2. Create a state, for example a `apiExample` state. Click **+** icon in bottom right to create new state\\n3. Click **+** in the action box to create a new action.\\n4. When all actions available are shown, then choose **API**\\n5. Click tab **Async API**\\n\\nEach field explanation:\\n\\n<Table>\\n  <TableHead>\\n    <TableHeadCell>Field Name</TableHeadCell>\\n    <TableHeadCell>Description</TableHeadCell>\\n  </TableHead>\\n  <TableBody>\\n    <TableBodyRow>\\n      <TableBodyCell>Action name</TableBodyCell>\\n      <TableBodyCell>Name of your action. Max. 30 characters with alphanumeric.</TableBodyCell>\\n    </TableBodyRow>\\n    <TableBodyRow>\\n      <TableBodyCell>Condition</TableBodyCell>\\n      <TableBodyCell>Which condition can trigger this action</TableBodyCell>\\n    </TableBodyRow>\\n    <TableBodyRow>\\n      <TableBodyCell>URI</TableBodyCell>\\n      <TableBodyCell>Your API URL</TableBodyCell>\\n    </TableBodyRow>\\n    <TableBodyRow>\\n      <TableBodyCell>Method</TableBodyCell>\\n      <TableBodyCell>Choose POST or GET</TableBodyCell>\\n    </TableBodyRow>\\n    <TableBodyRow>\\n      <TableBodyCell>Body</TableBodyCell>\\n      <TableBodyCell>Input API body by creating key and value.</TableBodyCell>\\n    </TableBodyRow>\\n    <TableBodyRow>\\n      <TableBodyCell>Headers</TableBodyCell>\\n      <TableBodyCell>Input API headers by creating key and value.</TableBodyCell>\\n    </TableBodyRow>\\n    <TableBodyRow>\\n      <TableBodyCell>Headers</TableBodyCell>\\n      <TableBodyCell>Input API headers by creating key and value.</TableBodyCell>\\n    </TableBodyRow>\\n    <TableBodyRow>\\n      <TableBodyCell>Query</TableBodyCell>\\n      <TableBodyCell>-</TableBodyCell>\\n    </TableBodyRow>\\n    <TableBodyRow>\\n      <TableBodyCell>Form Data</TableBodyCell>\\n      <TableBodyCell>-</TableBodyCell>\\n    </TableBodyRow>\\n    <TableBodyRow>\\n      <TableBodyCell>Result Path</TableBodyCell>\\n      <TableBodyCell>-</TableBodyCell>\\n    </TableBodyRow>\\n    <TableBodyRow>\\n      <TableBodyCell>Command</TableBodyCell>\\n      <TableBodyCell>The API result will be sent to command.</TableBodyCell>\\n    </TableBodyRow>\\n  </TableBody>\\n</Table>\\n\\n6. Click the **Create Action** button to create action.\\n7. Click the **Create** to finalize state creation.\\n\\n## How to Collect Async API Result\\n\\nIf you want to collect API results, you just need to create an Intent to receive results from Command. For example:\\n\\n<FigureImage\\n  alt=\\"Image 1 Alt\\"\\n  src=\\"/assets/images/products/kata-platform/how-to/using-async-api-to-access-third-party-application/image1.webp\\"\\n  caption={{\\n    title: \'Figure 1\',\\n    description: \'Example of Intent Command type with the condition to get the API result\',\\n  }}\\n  layout=\\"responsive\\"\\n  naturalHeight={1472}\\n  naturalWidth={1442}\\n/>\\n\\nTo access the value, the API result can be stored in payload, then you can access it by writing `payload`. For example:\\n\\n<FigureImage\\n  alt=\\"Image 2 Alt\\"\\n  src=\\"/assets/images/products/kata-platform/how-to/using-async-api-to-access-third-party-application/image2.webp\\"\\n  caption={{ title: \'Figure 2\', description: \'Example of the API result storage in payload\' }}\\n  layout=\\"responsive\\"\\n  naturalHeight={1970}\\n  naturalWidth={1442}\\n/>\\n\\n```yaml\\ntodoList:\\n  active: true\\n  volatile: true\\n  intents:\\n    todoListIntent:\\n      type: text\\n      initial: true\\n      fallback: false\\n      condition: \'content === \\"#todoList\\"\'\\n    freeTextIntent:\\n      type: text\\n      initial: false\\n      fallback: false\\n    apiResultIntent:\\n      type: command\\n      initial: true\\n      fallback: false\\n      condition: \'content === \\"apiResult\\"\'\\n  states:\\n    init:\\n      transitions:\\n        inputTask:\\n          condition: \'intent === \\"todoListIntent\\"\'\\n        apiResultState:\\n          condition: \'intent === \\"apiResultIntent\\"\'\\n      initial: true\\n    saveTask:\\n      transitions: {}\\n      action: addTodoList\\n      end: true\\n    inputTask:\\n      transitions:\\n        saveTask:\\n          condition: \'intent === \\"freeTextIntent\\"\'\\n          mapping:\\n            payload.task: content\\n      action: inputTask\\n    apiResultState:\\n      transitions: {}\\n      action: apiResult\\n      end: true\\n  actions:\\n    addTodoList:\\n      type: asyncApi\\n      options:\\n        uri: \'http://www.example.com/api/v1/todo\'\\n        method: POST\\n        body:\\n          - key: task\\n            value: $(payload.task)\\n        headers: []\\n        command: apiResult\\n    inputTask:\\n      type: text\\n      options:\\n        text: \'Enter a new task\'\\n    apiResult:\\n      type: text\\n      options:\\n        text: $(payload.status)\\n  methods: {}\\n```\\n\\n**Figure 3** Example of Async API use in YAML codes\\n\\nThis is the end of the guidance. You can contact <a href=\\"mailto:support@kata.ai\\">support@kata.ai</a> if you have any difficulties when implementing this.\\n","code":"var Component=(()=>{var g=Object.create;var r=Object.defineProperty;var b=Object.getOwnPropertyDescriptor;var f=Object.getOwnPropertyNames;var I=Object.getPrototypeOf,w=Object.prototype.hasOwnProperty;var m=a=>r(a,\\"__esModule\\",{value:!0});var A=(a,s)=>()=>(s||a((s={exports:{}}).exports,s),s.exports),x=(a,s)=>{for(var t in s)r(a,t,{get:s[t],enumerable:!0})},k=(a,s,t,n)=>{if(s&&typeof s==\\"object\\"||typeof s==\\"function\\")for(let i of f(s))!w.call(a,i)&&(t||i!==\\"default\\")&&r(a,i,{get:()=>s[i],enumerable:!(n=b(s,i))||n.enumerable});return a},T=(a,s)=>k(m(r(a!=null?g(I(a)):{},\\"default\\",!s&&a&&a.__esModule?{get:()=>a.default,enumerable:!0}:{value:a,enumerable:!0})),a),P=(a=>(s,t)=>a&&a.get(s)||(t=k(m({}),s,1),a&&a.set(s,t),t))(typeof WeakMap!=\\"undefined\\"?new WeakMap:0);var y=A((j,N)=>{N.exports=_jsx_runtime});var F={};x(F,{default:()=>R,frontmatter:()=>C});var e=T(y()),C={id:\\"using-async-api-to-access-third-party-application\\",title:\\"Using Async API to Access Third-Party Application\\",prev:\\"using-sync-api-to-access-third-party-application\\",next:\\"how-to-change-error-messages-in-your-chatbot\\",section:\\"How To\\"};function v(a={}){let{wrapper:s}=a.components||{};return s?(0,e.jsx)(s,Object.assign({},a,{children:(0,e.jsx)(t,{})})):t();function t(){let n=Object.assign({p:\\"p\\",h2:\\"h2\\",a:\\"a\\",span:\\"span\\",ol:\\"ol\\",li:\\"li\\",strong:\\"strong\\",code:\\"code\\",pre:\\"pre\\"},a.components),{Table:i,TableHead:h,TableHeadCell:d,TableBody:u,TableBodyRow:c,TableBodyCell:l,FigureImage:p}=n;return p||o(\\"FigureImage\\",!0),i||o(\\"Table\\",!0),u||o(\\"TableBody\\",!0),l||o(\\"TableBodyCell\\",!0),c||o(\\"TableBodyRow\\",!0),h||o(\\"TableHead\\",!0),d||o(\\"TableHeadCell\\",!0),(0,e.jsxs)(e.Fragment,{children:[(0,e.jsx)(n.p,{children:\\"In this guidance, you will be able to implement a bot that uses an action type Async API. Async API is used to make the response API send via command without waiting for the API results to move to the next state (a more seamless API call process).\\"}),`\\n`,(0,e.jsxs)(n.h2,{id:\\"introduction\\",children:[(0,e.jsx)(n.a,{className:\\"anchor\\",href:\\"#introduction\\",children:(0,e.jsx)(n.span,{className:\\"icon icon-link\\"})}),\\"Introduction\\"]}),`\\n`,(0,e.jsx)(n.p,{children:\\"For using an API to access third-party applications from your chatbot, you will need to create an action API. Also, a state must be created before creating an action\\"}),`\\n`,(0,e.jsxs)(n.h2,{id:\\"how-to-use\\",children:[(0,e.jsx)(n.a,{className:\\"anchor\\",href:\\"#how-to-use\\",children:(0,e.jsx)(n.span,{className:\\"icon icon-link\\"})}),\\"How to Use\\"]}),`\\n`,(0,e.jsx)(n.p,{children:\\"In this guidance, you will learn how to integrate NLU in your chatbot to recognize specific end-users input. Before you start, you will need to create at least one entity and it is already trained.\\"}),`\\n`,(0,e.jsxs)(n.ol,{children:[`\\n`,(0,e.jsxs)(n.li,{children:[\\"Go to your \\",(0,e.jsx)(n.strong,{children:\\"project\\"}),\\", then click \\",(0,e.jsx)(n.strong,{children:\\"Flow\\"}),\\".\\"]}),`\\n`,(0,e.jsxs)(n.li,{children:[\\"Create a state, for example a \\",(0,e.jsx)(n.code,{children:\\"apiExample\\"}),\\" state. Click \\",(0,e.jsx)(n.strong,{children:\\"+\\"}),\\" icon in bottom right to create new state\\"]}),`\\n`,(0,e.jsxs)(n.li,{children:[\\"Click \\",(0,e.jsx)(n.strong,{children:\\"+\\"}),\\" in the action box to create a new action.\\"]}),`\\n`,(0,e.jsxs)(n.li,{children:[\\"When all actions available are shown, then choose \\",(0,e.jsx)(n.strong,{children:\\"API\\"})]}),`\\n`,(0,e.jsxs)(n.li,{children:[\\"Click tab \\",(0,e.jsx)(n.strong,{children:\\"Async API\\"})]}),`\\n`]}),`\\n`,(0,e.jsx)(n.p,{children:\\"Each field explanation:\\"}),`\\n`,(0,e.jsxs)(i,{children:[(0,e.jsxs)(h,{children:[(0,e.jsx)(d,{children:\\"Field Name\\"}),`\\n`,(0,e.jsx)(d,{children:\\"Description\\"})]}),(0,e.jsxs)(u,{children:[(0,e.jsxs)(c,{children:[(0,e.jsx)(l,{children:\\"Action name\\"}),`\\n`,(0,e.jsx)(l,{children:\\"Name of your action. Max. 30 characters with alphanumeric.\\"})]}),(0,e.jsxs)(c,{children:[(0,e.jsx)(l,{children:\\"Condition\\"}),`\\n`,(0,e.jsx)(l,{children:\\"Which condition can trigger this action\\"})]}),(0,e.jsxs)(c,{children:[(0,e.jsx)(l,{children:\\"URI\\"}),`\\n`,(0,e.jsx)(l,{children:\\"Your API URL\\"})]}),(0,e.jsxs)(c,{children:[(0,e.jsx)(l,{children:\\"Method\\"}),`\\n`,(0,e.jsx)(l,{children:\\"Choose POST or GET\\"})]}),(0,e.jsxs)(c,{children:[(0,e.jsx)(l,{children:\\"Body\\"}),`\\n`,(0,e.jsx)(l,{children:\\"Input API body by creating key and value.\\"})]}),(0,e.jsxs)(c,{children:[(0,e.jsx)(l,{children:\\"Headers\\"}),`\\n`,(0,e.jsx)(l,{children:\\"Input API headers by creating key and value.\\"})]}),(0,e.jsxs)(c,{children:[(0,e.jsx)(l,{children:\\"Headers\\"}),`\\n`,(0,e.jsx)(l,{children:\\"Input API headers by creating key and value.\\"})]}),(0,e.jsxs)(c,{children:[(0,e.jsx)(l,{children:\\"Query\\"}),`\\n`,(0,e.jsx)(l,{children:\\"-\\"})]}),(0,e.jsxs)(c,{children:[(0,e.jsx)(l,{children:\\"Form Data\\"}),`\\n`,(0,e.jsx)(l,{children:\\"-\\"})]}),(0,e.jsxs)(c,{children:[(0,e.jsx)(l,{children:\\"Result Path\\"}),`\\n`,(0,e.jsx)(l,{children:\\"-\\"})]}),(0,e.jsxs)(c,{children:[(0,e.jsx)(l,{children:\\"Command\\"}),`\\n`,(0,e.jsx)(l,{children:\\"The API result will be sent to command.\\"})]})]})]}),`\\n`,(0,e.jsxs)(n.ol,{start:\\"6\\",children:[`\\n`,(0,e.jsxs)(n.li,{children:[\\"Click the \\",(0,e.jsx)(n.strong,{children:\\"Create Action\\"}),\\" button to create action.\\"]}),`\\n`,(0,e.jsxs)(n.li,{children:[\\"Click the \\",(0,e.jsx)(n.strong,{children:\\"Create\\"}),\\" to finalize state creation.\\"]}),`\\n`]}),`\\n`,(0,e.jsxs)(n.h2,{id:\\"how-to-collect-async-api-result\\",children:[(0,e.jsx)(n.a,{className:\\"anchor\\",href:\\"#how-to-collect-async-api-result\\",children:(0,e.jsx)(n.span,{className:\\"icon icon-link\\"})}),\\"How to Collect Async API Result\\"]}),`\\n`,(0,e.jsx)(n.p,{children:\\"If you want to collect API results, you just need to create an Intent to receive results from Command. For example:\\"}),`\\n`,(0,e.jsx)(p,{alt:\\"Image 1 Alt\\",src:\\"/assets/images/products/kata-platform/how-to/using-async-api-to-access-third-party-application/image1.webp\\",caption:{title:\\"Figure 1\\",description:\\"Example of Intent Command type with the condition to get the API result\\"},layout:\\"responsive\\",naturalHeight:1472,naturalWidth:1442}),`\\n`,(0,e.jsxs)(n.p,{children:[\\"To access the value, the API result can be stored in payload, then you can access it by writing \\",(0,e.jsx)(n.code,{children:\\"payload\\"}),\\". For example:\\"]}),`\\n`,(0,e.jsx)(p,{alt:\\"Image 2 Alt\\",src:\\"/assets/images/products/kata-platform/how-to/using-async-api-to-access-third-party-application/image2.webp\\",caption:{title:\\"Figure 2\\",description:\\"Example of the API result storage in payload\\"},layout:\\"responsive\\",naturalHeight:1970,naturalWidth:1442}),`\\n`,(0,e.jsx)(n.pre,{className:\\"language-yaml\\",children:(0,e.jsxs)(n.code,{className:\\"language-yaml code-highlight\\",children:[(0,e.jsxs)(n.span,{className:\\"code-line\\",children:[(0,e.jsx)(n.span,{className:\\"token key atrule\\",children:\\"todoList\\"}),(0,e.jsx)(n.span,{className:\\"token punctuation\\",children:\\":\\"}),`\\n`]}),(0,e.jsxs)(n.span,{className:\\"code-line\\",children:[\\"  \\",(0,e.jsx)(n.span,{className:\\"token key atrule\\",children:\\"active\\"}),(0,e.jsx)(n.span,{className:\\"token punctuation\\",children:\\":\\"}),\\" \\",(0,e.jsx)(n.span,{className:\\"token boolean important\\",children:\\"true\\"}),`\\n`]}),(0,e.jsxs)(n.span,{className:\\"code-line\\",children:[\\"  \\",(0,e.jsx)(n.span,{className:\\"token key atrule\\",children:\\"volatile\\"}),(0,e.jsx)(n.span,{className:\\"token punctuation\\",children:\\":\\"}),\\" \\",(0,e.jsx)(n.span,{className:\\"token boolean important\\",children:\\"true\\"}),`\\n`]}),(0,e.jsxs)(n.span,{className:\\"code-line\\",children:[\\"  \\",(0,e.jsx)(n.span,{className:\\"token key atrule\\",children:\\"intents\\"}),(0,e.jsx)(n.span,{className:\\"token punctuation\\",children:\\":\\"}),`\\n`]}),(0,e.jsxs)(n.span,{className:\\"code-line\\",children:[\\"    \\",(0,e.jsx)(n.span,{className:\\"token key atrule\\",children:\\"todoListIntent\\"}),(0,e.jsx)(n.span,{className:\\"token punctuation\\",children:\\":\\"}),`\\n`]}),(0,e.jsxs)(n.span,{className:\\"code-line\\",children:[\\"      \\",(0,e.jsx)(n.span,{className:\\"token key atrule\\",children:\\"type\\"}),(0,e.jsx)(n.span,{className:\\"token punctuation\\",children:\\":\\"}),` text\\n`]}),(0,e.jsxs)(n.span,{className:\\"code-line\\",children:[\\"      \\",(0,e.jsx)(n.span,{className:\\"token key atrule\\",children:\\"initial\\"}),(0,e.jsx)(n.span,{className:\\"token punctuation\\",children:\\":\\"}),\\" \\",(0,e.jsx)(n.span,{className:\\"token boolean important\\",children:\\"true\\"}),`\\n`]}),(0,e.jsxs)(n.span,{className:\\"code-line\\",children:[\\"      \\",(0,e.jsx)(n.span,{className:\\"token key atrule\\",children:\\"fallback\\"}),(0,e.jsx)(n.span,{className:\\"token punctuation\\",children:\\":\\"}),\\" \\",(0,e.jsx)(n.span,{className:\\"token boolean important\\",children:\\"false\\"}),`\\n`]}),(0,e.jsxs)(n.span,{className:\\"code-line\\",children:[\\"      \\",(0,e.jsx)(n.span,{className:\\"token key atrule\\",children:\\"condition\\"}),(0,e.jsx)(n.span,{className:\\"token punctuation\\",children:\\":\\"}),\\" \\",(0,e.jsx)(n.span,{className:\\"token string\\",children:`\'content === \\"#todoList\\"\'`}),`\\n`]}),(0,e.jsxs)(n.span,{className:\\"code-line\\",children:[\\"    \\",(0,e.jsx)(n.span,{className:\\"token key atrule\\",children:\\"freeTextIntent\\"}),(0,e.jsx)(n.span,{className:\\"token punctuation\\",children:\\":\\"}),`\\n`]}),(0,e.jsxs)(n.span,{className:\\"code-line\\",children:[\\"      \\",(0,e.jsx)(n.span,{className:\\"token key atrule\\",children:\\"type\\"}),(0,e.jsx)(n.span,{className:\\"token punctuation\\",children:\\":\\"}),` text\\n`]}),(0,e.jsxs)(n.span,{className:\\"code-line\\",children:[\\"      \\",(0,e.jsx)(n.span,{className:\\"token key atrule\\",children:\\"initial\\"}),(0,e.jsx)(n.span,{className:\\"token punctuation\\",children:\\":\\"}),\\" \\",(0,e.jsx)(n.span,{className:\\"token boolean important\\",children:\\"false\\"}),`\\n`]}),(0,e.jsxs)(n.span,{className:\\"code-line\\",children:[\\"      \\",(0,e.jsx)(n.span,{className:\\"token key atrule\\",children:\\"fallback\\"}),(0,e.jsx)(n.span,{className:\\"token punctuation\\",children:\\":\\"}),\\" \\",(0,e.jsx)(n.span,{className:\\"token boolean important\\",children:\\"false\\"}),`\\n`]}),(0,e.jsxs)(n.span,{className:\\"code-line\\",children:[\\"    \\",(0,e.jsx)(n.span,{className:\\"token key atrule\\",children:\\"apiResultIntent\\"}),(0,e.jsx)(n.span,{className:\\"token punctuation\\",children:\\":\\"}),`\\n`]}),(0,e.jsxs)(n.span,{className:\\"code-line\\",children:[\\"      \\",(0,e.jsx)(n.span,{className:\\"token key atrule\\",children:\\"type\\"}),(0,e.jsx)(n.span,{className:\\"token punctuation\\",children:\\":\\"}),` command\\n`]}),(0,e.jsxs)(n.span,{className:\\"code-line\\",children:[\\"      \\",(0,e.jsx)(n.span,{className:\\"token key atrule\\",children:\\"initial\\"}),(0,e.jsx)(n.span,{className:\\"token punctuation\\",children:\\":\\"}),\\" \\",(0,e.jsx)(n.span,{className:\\"token boolean important\\",children:\\"true\\"}),`\\n`]}),(0,e.jsxs)(n.span,{className:\\"code-line\\",children:[\\"      \\",(0,e.jsx)(n.span,{className:\\"token key atrule\\",children:\\"fallback\\"}),(0,e.jsx)(n.span,{className:\\"token punctuation\\",children:\\":\\"}),\\" \\",(0,e.jsx)(n.span,{className:\\"token boolean important\\",children:\\"false\\"}),`\\n`]}),(0,e.jsxs)(n.span,{className:\\"code-line\\",children:[\\"      \\",(0,e.jsx)(n.span,{className:\\"token key atrule\\",children:\\"condition\\"}),(0,e.jsx)(n.span,{className:\\"token punctuation\\",children:\\":\\"}),\\" \\",(0,e.jsx)(n.span,{className:\\"token string\\",children:`\'content === \\"apiResult\\"\'`}),`\\n`]}),(0,e.jsxs)(n.span,{className:\\"code-line\\",children:[\\"  \\",(0,e.jsx)(n.span,{className:\\"token key atrule\\",children:\\"states\\"}),(0,e.jsx)(n.span,{className:\\"token punctuation\\",children:\\":\\"}),`\\n`]}),(0,e.jsxs)(n.span,{className:\\"code-line\\",children:[\\"    \\",(0,e.jsx)(n.span,{className:\\"token key atrule\\",children:\\"init\\"}),(0,e.jsx)(n.span,{className:\\"token punctuation\\",children:\\":\\"}),`\\n`]}),(0,e.jsxs)(n.span,{className:\\"code-line\\",children:[\\"      \\",(0,e.jsx)(n.span,{className:\\"token key atrule\\",children:\\"transitions\\"}),(0,e.jsx)(n.span,{className:\\"token punctuation\\",children:\\":\\"}),`\\n`]}),(0,e.jsxs)(n.span,{className:\\"code-line\\",children:[\\"        \\",(0,e.jsx)(n.span,{className:\\"token key atrule\\",children:\\"inputTask\\"}),(0,e.jsx)(n.span,{className:\\"token punctuation\\",children:\\":\\"}),`\\n`]}),(0,e.jsxs)(n.span,{className:\\"code-line\\",children:[\\"          \\",(0,e.jsx)(n.span,{className:\\"token key atrule\\",children:\\"condition\\"}),(0,e.jsx)(n.span,{className:\\"token punctuation\\",children:\\":\\"}),\\" \\",(0,e.jsx)(n.span,{className:\\"token string\\",children:`\'intent === \\"todoListIntent\\"\'`}),`\\n`]}),(0,e.jsxs)(n.span,{className:\\"code-line\\",children:[\\"        \\",(0,e.jsx)(n.span,{className:\\"token key atrule\\",children:\\"apiResultState\\"}),(0,e.jsx)(n.span,{className:\\"token punctuation\\",children:\\":\\"}),`\\n`]}),(0,e.jsxs)(n.span,{className:\\"code-line\\",children:[\\"          \\",(0,e.jsx)(n.span,{className:\\"token key atrule\\",children:\\"condition\\"}),(0,e.jsx)(n.span,{className:\\"token punctuation\\",children:\\":\\"}),\\" \\",(0,e.jsx)(n.span,{className:\\"token string\\",children:`\'intent === \\"apiResultIntent\\"\'`}),`\\n`]}),(0,e.jsxs)(n.span,{className:\\"code-line\\",children:[\\"      \\",(0,e.jsx)(n.span,{className:\\"token key atrule\\",children:\\"initial\\"}),(0,e.jsx)(n.span,{className:\\"token punctuation\\",children:\\":\\"}),\\" \\",(0,e.jsx)(n.span,{className:\\"token boolean important\\",children:\\"true\\"}),`\\n`]}),(0,e.jsxs)(n.span,{className:\\"code-line\\",children:[\\"    \\",(0,e.jsx)(n.span,{className:\\"token key atrule\\",children:\\"saveTask\\"}),(0,e.jsx)(n.span,{className:\\"token punctuation\\",children:\\":\\"}),`\\n`]}),(0,e.jsxs)(n.span,{className:\\"code-line\\",children:[\\"      \\",(0,e.jsx)(n.span,{className:\\"token key atrule\\",children:\\"transitions\\"}),(0,e.jsx)(n.span,{className:\\"token punctuation\\",children:\\":\\"}),\\" \\",(0,e.jsx)(n.span,{className:\\"token punctuation\\",children:\\"{\\"}),(0,e.jsx)(n.span,{className:\\"token punctuation\\",children:\\"}\\"}),`\\n`]}),(0,e.jsxs)(n.span,{className:\\"code-line\\",children:[\\"      \\",(0,e.jsx)(n.span,{className:\\"token key atrule\\",children:\\"action\\"}),(0,e.jsx)(n.span,{className:\\"token punctuation\\",children:\\":\\"}),` addTodoList\\n`]}),(0,e.jsxs)(n.span,{className:\\"code-line\\",children:[\\"      \\",(0,e.jsx)(n.span,{className:\\"token key atrule\\",children:\\"end\\"}),(0,e.jsx)(n.span,{className:\\"token punctuation\\",children:\\":\\"}),\\" \\",(0,e.jsx)(n.span,{className:\\"token boolean important\\",children:\\"true\\"}),`\\n`]}),(0,e.jsxs)(n.span,{className:\\"code-line\\",children:[\\"    \\",(0,e.jsx)(n.span,{className:\\"token key atrule\\",children:\\"inputTask\\"}),(0,e.jsx)(n.span,{className:\\"token punctuation\\",children:\\":\\"}),`\\n`]}),(0,e.jsxs)(n.span,{className:\\"code-line\\",children:[\\"      \\",(0,e.jsx)(n.span,{className:\\"token key atrule\\",children:\\"transitions\\"}),(0,e.jsx)(n.span,{className:\\"token punctuation\\",children:\\":\\"}),`\\n`]}),(0,e.jsxs)(n.span,{className:\\"code-line\\",children:[\\"        \\",(0,e.jsx)(n.span,{className:\\"token key atrule\\",children:\\"saveTask\\"}),(0,e.jsx)(n.span,{className:\\"token punctuation\\",children:\\":\\"}),`\\n`]}),(0,e.jsxs)(n.span,{className:\\"code-line\\",children:[\\"          \\",(0,e.jsx)(n.span,{className:\\"token key atrule\\",children:\\"condition\\"}),(0,e.jsx)(n.span,{className:\\"token punctuation\\",children:\\":\\"}),\\" \\",(0,e.jsx)(n.span,{className:\\"token string\\",children:`\'intent === \\"freeTextIntent\\"\'`}),`\\n`]}),(0,e.jsxs)(n.span,{className:\\"code-line\\",children:[\\"          \\",(0,e.jsx)(n.span,{className:\\"token key atrule\\",children:\\"mapping\\"}),(0,e.jsx)(n.span,{className:\\"token punctuation\\",children:\\":\\"}),`\\n`]}),(0,e.jsxs)(n.span,{className:\\"code-line\\",children:[\\"            \\",(0,e.jsx)(n.span,{className:\\"token key atrule\\",children:\\"payload.task\\"}),(0,e.jsx)(n.span,{className:\\"token punctuation\\",children:\\":\\"}),` content\\n`]}),(0,e.jsxs)(n.span,{className:\\"code-line\\",children:[\\"      \\",(0,e.jsx)(n.span,{className:\\"token key atrule\\",children:\\"action\\"}),(0,e.jsx)(n.span,{className:\\"token punctuation\\",children:\\":\\"}),` inputTask\\n`]}),(0,e.jsxs)(n.span,{className:\\"code-line\\",children:[\\"    \\",(0,e.jsx)(n.span,{className:\\"token key atrule\\",children:\\"apiResultState\\"}),(0,e.jsx)(n.span,{className:\\"token punctuation\\",children:\\":\\"}),`\\n`]}),(0,e.jsxs)(n.span,{className:\\"code-line\\",children:[\\"      \\",(0,e.jsx)(n.span,{className:\\"token key atrule\\",children:\\"transitions\\"}),(0,e.jsx)(n.span,{className:\\"token punctuation\\",children:\\":\\"}),\\" \\",(0,e.jsx)(n.span,{className:\\"token punctuation\\",children:\\"{\\"}),(0,e.jsx)(n.span,{className:\\"token punctuation\\",children:\\"}\\"}),`\\n`]}),(0,e.jsxs)(n.span,{className:\\"code-line\\",children:[\\"      \\",(0,e.jsx)(n.span,{className:\\"token key atrule\\",children:\\"action\\"}),(0,e.jsx)(n.span,{className:\\"token punctuation\\",children:\\":\\"}),` apiResult\\n`]}),(0,e.jsxs)(n.span,{className:\\"code-line\\",children:[\\"      \\",(0,e.jsx)(n.span,{className:\\"token key atrule\\",children:\\"end\\"}),(0,e.jsx)(n.span,{className:\\"token punctuation\\",children:\\":\\"}),\\" \\",(0,e.jsx)(n.span,{className:\\"token boolean important\\",children:\\"true\\"}),`\\n`]}),(0,e.jsxs)(n.span,{className:\\"code-line\\",children:[\\"  \\",(0,e.jsx)(n.span,{className:\\"token key atrule\\",children:\\"actions\\"}),(0,e.jsx)(n.span,{className:\\"token punctuation\\",children:\\":\\"}),`\\n`]}),(0,e.jsxs)(n.span,{className:\\"code-line\\",children:[\\"    \\",(0,e.jsx)(n.span,{className:\\"token key atrule\\",children:\\"addTodoList\\"}),(0,e.jsx)(n.span,{className:\\"token punctuation\\",children:\\":\\"}),`\\n`]}),(0,e.jsxs)(n.span,{className:\\"code-line\\",children:[\\"      \\",(0,e.jsx)(n.span,{className:\\"token key atrule\\",children:\\"type\\"}),(0,e.jsx)(n.span,{className:\\"token punctuation\\",children:\\":\\"}),` asyncApi\\n`]}),(0,e.jsxs)(n.span,{className:\\"code-line\\",children:[\\"      \\",(0,e.jsx)(n.span,{className:\\"token key atrule\\",children:\\"options\\"}),(0,e.jsx)(n.span,{className:\\"token punctuation\\",children:\\":\\"}),`\\n`]}),(0,e.jsxs)(n.span,{className:\\"code-line\\",children:[\\"        \\",(0,e.jsx)(n.span,{className:\\"token key atrule\\",children:\\"uri\\"}),(0,e.jsx)(n.span,{className:\\"token punctuation\\",children:\\":\\"}),\\" \\",(0,e.jsx)(n.span,{className:\\"token string\\",children:\\"\'http://www.example.com/api/v1/todo\'\\"}),`\\n`]}),(0,e.jsxs)(n.span,{className:\\"code-line\\",children:[\\"        \\",(0,e.jsx)(n.span,{className:\\"token key atrule\\",children:\\"method\\"}),(0,e.jsx)(n.span,{className:\\"token punctuation\\",children:\\":\\"}),` POST\\n`]}),(0,e.jsxs)(n.span,{className:\\"code-line\\",children:[\\"        \\",(0,e.jsx)(n.span,{className:\\"token key atrule\\",children:\\"body\\"}),(0,e.jsx)(n.span,{className:\\"token punctuation\\",children:\\":\\"}),`\\n`]}),(0,e.jsxs)(n.span,{className:\\"code-line\\",children:[\\"          \\",(0,e.jsx)(n.span,{className:\\"token punctuation\\",children:\\"-\\"}),\\" \\",(0,e.jsx)(n.span,{className:\\"token key atrule\\",children:\\"key\\"}),(0,e.jsx)(n.span,{className:\\"token punctuation\\",children:\\":\\"}),` task\\n`]}),(0,e.jsxs)(n.span,{className:\\"code-line\\",children:[\\"            \\",(0,e.jsx)(n.span,{className:\\"token key atrule\\",children:\\"value\\"}),(0,e.jsx)(n.span,{className:\\"token punctuation\\",children:\\":\\"}),` $(payload.task)\\n`]}),(0,e.jsxs)(n.span,{className:\\"code-line\\",children:[\\"        \\",(0,e.jsx)(n.span,{className:\\"token key atrule\\",children:\\"headers\\"}),(0,e.jsx)(n.span,{className:\\"token punctuation\\",children:\\":\\"}),\\" \\",(0,e.jsx)(n.span,{className:\\"token punctuation\\",children:\\"[\\"}),(0,e.jsx)(n.span,{className:\\"token punctuation\\",children:\\"]\\"}),`\\n`]}),(0,e.jsxs)(n.span,{className:\\"code-line\\",children:[\\"        \\",(0,e.jsx)(n.span,{className:\\"token key atrule\\",children:\\"command\\"}),(0,e.jsx)(n.span,{className:\\"token punctuation\\",children:\\":\\"}),` apiResult\\n`]}),(0,e.jsxs)(n.span,{className:\\"code-line\\",children:[\\"    \\",(0,e.jsx)(n.span,{className:\\"token key atrule\\",children:\\"inputTask\\"}),(0,e.jsx)(n.span,{className:\\"token punctuation\\",children:\\":\\"}),`\\n`]}),(0,e.jsxs)(n.span,{className:\\"code-line\\",children:[\\"      \\",(0,e.jsx)(n.span,{className:\\"token key atrule\\",children:\\"type\\"}),(0,e.jsx)(n.span,{className:\\"token punctuation\\",children:\\":\\"}),` text\\n`]}),(0,e.jsxs)(n.span,{className:\\"code-line\\",children:[\\"      \\",(0,e.jsx)(n.span,{className:\\"token key atrule\\",children:\\"options\\"}),(0,e.jsx)(n.span,{className:\\"token punctuation\\",children:\\":\\"}),`\\n`]}),(0,e.jsxs)(n.span,{className:\\"code-line\\",children:[\\"        \\",(0,e.jsx)(n.span,{className:\\"token key atrule\\",children:\\"text\\"}),(0,e.jsx)(n.span,{className:\\"token punctuation\\",children:\\":\\"}),\\" \\",(0,e.jsx)(n.span,{className:\\"token string\\",children:\\"\'Enter a new task\'\\"}),`\\n`]}),(0,e.jsxs)(n.span,{className:\\"code-line\\",children:[\\"    \\",(0,e.jsx)(n.span,{className:\\"token key atrule\\",children:\\"apiResult\\"}),(0,e.jsx)(n.span,{className:\\"token punctuation\\",children:\\":\\"}),`\\n`]}),(0,e.jsxs)(n.span,{className:\\"code-line\\",children:[\\"      \\",(0,e.jsx)(n.span,{className:\\"token key atrule\\",children:\\"type\\"}),(0,e.jsx)(n.span,{className:\\"token punctuation\\",children:\\":\\"}),` text\\n`]}),(0,e.jsxs)(n.span,{className:\\"code-line\\",children:[\\"      \\",(0,e.jsx)(n.span,{className:\\"token key atrule\\",children:\\"options\\"}),(0,e.jsx)(n.span,{className:\\"token punctuation\\",children:\\":\\"}),`\\n`]}),(0,e.jsxs)(n.span,{className:\\"code-line\\",children:[\\"        \\",(0,e.jsx)(n.span,{className:\\"token key atrule\\",children:\\"text\\"}),(0,e.jsx)(n.span,{className:\\"token punctuation\\",children:\\":\\"}),` $(payload.status)\\n`]}),(0,e.jsxs)(n.span,{className:\\"code-line\\",children:[\\"  \\",(0,e.jsx)(n.span,{className:\\"token key atrule\\",children:\\"methods\\"}),(0,e.jsx)(n.span,{className:\\"token punctuation\\",children:\\":\\"}),\\" \\",(0,e.jsx)(n.span,{className:\\"token punctuation\\",children:\\"{\\"}),(0,e.jsx)(n.span,{className:\\"token punctuation\\",children:\\"}\\"}),`\\n`]})]})}),`\\n`,(0,e.jsxs)(n.p,{children:[(0,e.jsx)(n.strong,{children:\\"Figure 3\\"}),\\" Example of Async API use in YAML codes\\"]}),`\\n`,(0,e.jsxs)(n.p,{children:[\\"This is the end of the guidance. You can contact \\",(0,e.jsx)(\\"a\\",{href:\\"mailto:support@kata.ai\\",children:(0,e.jsx)(n.a,{href:\\"mailto:support@kata.ai\\",children:\\"support@kata.ai\\"})}),\\" if you have any difficulties when implementing this.\\"]})]})}}var R=v;function o(a,s){throw new Error(\\"Expected \\"+(s?\\"component\\":\\"object\\")+\\" `\\"+a+\\"` to be defined: you likely forgot to import, pass, or provide it.\\")}return P(F);})();\\n;return Component;"},"_id":"kata-platform/how-to/using-async-api-to-access-third-party-application.mdx","_raw":{"sourceFilePath":"kata-platform/how-to/using-async-api-to-access-third-party-application.mdx","sourceFileName":"using-async-api-to-access-third-party-application.mdx","sourceFileDir":"kata-platform/how-to","contentType":"mdx","flattenedPath":"kata-platform/how-to/using-async-api-to-access-third-party-application"},"type":"KataPlatform","slug":["how-to","using-async-api-to-access-third-party-application"],"excerpt":"\\nIn this guidance, you will be able to implement a bot that uses an action type Async API. Async API is used to make the response API send via command without waiting for the API results to move to the next state (a more seamless API call process)"}');
;// CONCATENATED MODULE: ./.contentlayer/generated/KataPlatform/kata-platform__how-to__using-custom-api-to-access-third-party-application.mdx.json
const kata_platform_how_to_using_custom_api_to_access_third_party_application_mdx_namespaceObject = JSON.parse('{"id":"using-custom-api-to-access-third-party-application","section":"How To","title":"Using Custom API to Access Third-Party Application","prev":"how-to-use-bulk-training-for-faster-training-process","next":"how-to-change-error-messages-in-your-chatbot","body":{"raw":"\\nIn this guidance, you will be able to implement a bot that uses an action type API.\\n\\n## Introduction\\n\\nFor using an API to access third-party applications from your chatbot, you will need to create an action API. Also, a state must be created before creating an action\\n\\n<div className=\\"info\\">\\n  <img className=\\"borderless\\" src=\\"/assets/images/icon-info.svg\\" />\\n  <p>\\n    <b>Important</b>: Platform has a timeout API in 10 seconds. If your API result is shows more than 10 second to\\n    chatbot, it will show a automatic message from your chatbot:\\n    <code>Maaf pesan anda sedang diproses, tunggu beberapa saat lagi yaa</code>\\n  </p>\\n</div>\\n\\n## How to Use\\n\\n1. Go to your **project**, then click **Flow**.\\n2. Create a state, for example a `apiExample` state. Click **+** icon in bottom right to create new state\\n3. Click **+** in the action box to create a new action.\\n4. When all actions available are shown, then choose **API**\\n5. Click tab **Custom API**\\n\\nEach field explanation:\\n\\n<Table>\\n  <TableHead>\\n    <TableHeadCell>Field Name</TableHeadCell>\\n    <TableHeadCell>Description</TableHeadCell>\\n  </TableHead>\\n  <TableBody>\\n    <TableBodyRow>\\n      <TableBodyCell>Action name</TableBodyCell>\\n      <TableBodyCell>Name of your action. Max. 30 characters with alphanumeric.</TableBodyCell>\\n    </TableBodyRow>\\n    <TableBodyRow>\\n      <TableBodyCell>Condition</TableBodyCell>\\n      <TableBodyCell>Which condition can trigger this action</TableBodyCell>\\n    </TableBodyRow>\\n    <TableBodyRow>\\n      <TableBodyCell>URI</TableBodyCell>\\n      <TableBodyCell>Your API URL</TableBodyCell>\\n    </TableBodyRow>\\n    <TableBodyRow>\\n      <TableBodyCell>Method</TableBodyCell>\\n      <TableBodyCell>Choose POST or GET</TableBodyCell>\\n    </TableBodyRow>\\n    <TableBodyRow>\\n      <TableBodyCell>Body</TableBodyCell>\\n      <TableBodyCell>Input API body by creating key and value.</TableBodyCell>\\n    </TableBodyRow>\\n    <TableBodyRow>\\n      <TableBodyCell>Headers</TableBodyCell>\\n      <TableBodyCell>Input API headers by creating key and value.</TableBodyCell>\\n    </TableBodyRow>\\n    <TableBodyRow>\\n      <TableBodyCell>Headers</TableBodyCell>\\n      <TableBodyCell>Input API headers by creating key and value.</TableBodyCell>\\n    </TableBodyRow>\\n    <TableBodyRow>\\n      <TableBodyCell>Query</TableBodyCell>\\n      <TableBodyCell>-</TableBodyCell>\\n    </TableBodyRow>\\n    <TableBodyRow>\\n      <TableBodyCell>Form Data</TableBodyCell>\\n      <TableBodyCell>-</TableBodyCell>\\n    </TableBodyRow>\\n    <TableBodyRow>\\n      <TableBodyCell>Result Path</TableBodyCell>\\n      <TableBodyCell>-</TableBodyCell>\\n    </TableBodyRow>\\n  </TableBody>\\n</Table>\\n\\n6. Click the **Create Action** button to create action.\\n7. Click the **Create** to finalize state creation.\\n\\n## How to Collect API Result\\n\\nIf you want to collect API results, you just need to write `$(result)` in a variable you want to put it. For example, this is a case if the API result wants to implement an action type Command.\\n\\n<FigureImage\\n  alt=\\"Image 1 Alt\\"\\n  src=\\"/assets/images/products/kata-platform/how-to/using-custom-api-to-access-third-party-application/image1.webp\\"\\n  caption={{ title: \'Figure 1\', description: \'API result in action type Command.\' }}\\n  layout=\\"responsive\\"\\n  naturalHeight={860}\\n  naturalWidth={1166}\\n/>\\n\\nTo access the value, the API result can be stored in payload, then you can access it by writing `payload.result`. For example, this is a case if you want to access the first data from API result in action type Command.\\n\\n<FigureImage\\n  alt=\\"Image 2 Alt\\"\\n  src=\\"/assets/images/products/kata-platform/how-to/using-custom-api-to-access-third-party-application/image2.webp\\"\\n  caption={{ title: \'Figure 2\', description: \'Access value from API result.\' }}\\n  layout=\\"responsive\\"\\n  naturalHeight={826}\\n  naturalWidth={1146}\\n/>\\n\\nThis is the end of the guidance. You can contact <a href=\\"mailto:support@kata.ai\\">support@kata.ai</a> if you have any difficulties when implementing this.\\n","code":"var Component=(()=>{var b=Object.create;var s=Object.defineProperty;var w=Object.getOwnPropertyDescriptor;var I=Object.getOwnPropertyNames;var A=Object.getPrototypeOf,P=Object.prototype.hasOwnProperty;var m=t=>s(t,\\"__esModule\\",{value:!0});var C=(t,i)=>()=>(i||t((i={exports:{}}).exports,i),i.exports),k=(t,i)=>{for(var o in i)s(t,o,{get:i[o],enumerable:!0})},g=(t,i,o,n)=>{if(i&&typeof i==\\"object\\"||typeof i==\\"function\\")for(let c of I(i))!P.call(t,c)&&(o||c!==\\"default\\")&&s(t,c,{get:()=>i[c],enumerable:!(n=w(i,c))||n.enumerable});return t},x=(t,i)=>g(m(s(t!=null?b(A(t)):{},\\"default\\",!i&&t&&t.__esModule?{get:()=>t.default,enumerable:!0}:{value:t,enumerable:!0})),t),T=(t=>(i,o)=>t&&t.get(i)||(o=g(m({}),i,1),t&&t.set(i,o),o))(typeof WeakMap!=\\"undefined\\"?new WeakMap:0);var f=C((_,y)=>{y.exports=_jsx_runtime});var j={};k(j,{default:()=>H,frontmatter:()=>v});var e=x(f()),v={id:\\"using-custom-api-to-access-third-party-application\\",title:\\"Using Custom API to Access Third-Party Application\\",prev:\\"how-to-use-bulk-training-for-faster-training-process\\",next:\\"how-to-change-error-messages-in-your-chatbot\\",section:\\"How To\\"};function F(t={}){let{wrapper:i}=t.components||{};return i?(0,e.jsx)(i,Object.assign({},t,{children:(0,e.jsx)(o,{})})):o();function o(){let n=Object.assign({p:\\"p\\",h2:\\"h2\\",a:\\"a\\",span:\\"span\\",ol:\\"ol\\",li:\\"li\\",strong:\\"strong\\",code:\\"code\\"},t.components),{Table:c,TableHead:u,TableHeadCell:d,TableBody:p,TableBodyRow:r,TableBodyCell:a,FigureImage:h}=n;return h||l(\\"FigureImage\\",!0),c||l(\\"Table\\",!0),p||l(\\"TableBody\\",!0),a||l(\\"TableBodyCell\\",!0),r||l(\\"TableBodyRow\\",!0),u||l(\\"TableHead\\",!0),d||l(\\"TableHeadCell\\",!0),(0,e.jsxs)(e.Fragment,{children:[(0,e.jsx)(n.p,{children:\\"In this guidance, you will be able to implement a bot that uses an action type API.\\"}),`\\n`,(0,e.jsxs)(n.h2,{id:\\"introduction\\",children:[(0,e.jsx)(n.a,{className:\\"anchor\\",href:\\"#introduction\\",children:(0,e.jsx)(n.span,{className:\\"icon icon-link\\"})}),\\"Introduction\\"]}),`\\n`,(0,e.jsx)(n.p,{children:\\"For using an API to access third-party applications from your chatbot, you will need to create an action API. Also, a state must be created before creating an action\\"}),`\\n`,(0,e.jsxs)(\\"div\\",{className:\\"info\\",children:[(0,e.jsx)(\\"img\\",{className:\\"borderless\\",src:\\"/assets/images/icon-info.svg\\"}),(0,e.jsx)(\\"p\\",{children:(0,e.jsxs)(n.p,{children:[(0,e.jsx)(\\"b\\",{children:\\"Important\\"}),`: Platform has a timeout API in 10 seconds. If your API result is shows more than 10 second to\\nchatbot, it will show a automatic message from your chatbot:\\n`,(0,e.jsx)(\\"code\\",{children:\\"Maaf pesan anda sedang diproses, tunggu beberapa saat lagi yaa\\"})]})})]}),`\\n`,(0,e.jsxs)(n.h2,{id:\\"how-to-use\\",children:[(0,e.jsx)(n.a,{className:\\"anchor\\",href:\\"#how-to-use\\",children:(0,e.jsx)(n.span,{className:\\"icon icon-link\\"})}),\\"How to Use\\"]}),`\\n`,(0,e.jsxs)(n.ol,{children:[`\\n`,(0,e.jsxs)(n.li,{children:[\\"Go to your \\",(0,e.jsx)(n.strong,{children:\\"project\\"}),\\", then click \\",(0,e.jsx)(n.strong,{children:\\"Flow\\"}),\\".\\"]}),`\\n`,(0,e.jsxs)(n.li,{children:[\\"Create a state, for example a \\",(0,e.jsx)(n.code,{children:\\"apiExample\\"}),\\" state. Click \\",(0,e.jsx)(n.strong,{children:\\"+\\"}),\\" icon in bottom right to create new state\\"]}),`\\n`,(0,e.jsxs)(n.li,{children:[\\"Click \\",(0,e.jsx)(n.strong,{children:\\"+\\"}),\\" in the action box to create a new action.\\"]}),`\\n`,(0,e.jsxs)(n.li,{children:[\\"When all actions available are shown, then choose \\",(0,e.jsx)(n.strong,{children:\\"API\\"})]}),`\\n`,(0,e.jsxs)(n.li,{children:[\\"Click tab \\",(0,e.jsx)(n.strong,{children:\\"Custom API\\"})]}),`\\n`]}),`\\n`,(0,e.jsx)(n.p,{children:\\"Each field explanation:\\"}),`\\n`,(0,e.jsxs)(c,{children:[(0,e.jsxs)(u,{children:[(0,e.jsx)(d,{children:\\"Field Name\\"}),`\\n`,(0,e.jsx)(d,{children:\\"Description\\"})]}),(0,e.jsxs)(p,{children:[(0,e.jsxs)(r,{children:[(0,e.jsx)(a,{children:\\"Action name\\"}),`\\n`,(0,e.jsx)(a,{children:\\"Name of your action. Max. 30 characters with alphanumeric.\\"})]}),(0,e.jsxs)(r,{children:[(0,e.jsx)(a,{children:\\"Condition\\"}),`\\n`,(0,e.jsx)(a,{children:\\"Which condition can trigger this action\\"})]}),(0,e.jsxs)(r,{children:[(0,e.jsx)(a,{children:\\"URI\\"}),`\\n`,(0,e.jsx)(a,{children:\\"Your API URL\\"})]}),(0,e.jsxs)(r,{children:[(0,e.jsx)(a,{children:\\"Method\\"}),`\\n`,(0,e.jsx)(a,{children:\\"Choose POST or GET\\"})]}),(0,e.jsxs)(r,{children:[(0,e.jsx)(a,{children:\\"Body\\"}),`\\n`,(0,e.jsx)(a,{children:\\"Input API body by creating key and value.\\"})]}),(0,e.jsxs)(r,{children:[(0,e.jsx)(a,{children:\\"Headers\\"}),`\\n`,(0,e.jsx)(a,{children:\\"Input API headers by creating key and value.\\"})]}),(0,e.jsxs)(r,{children:[(0,e.jsx)(a,{children:\\"Headers\\"}),`\\n`,(0,e.jsx)(a,{children:\\"Input API headers by creating key and value.\\"})]}),(0,e.jsxs)(r,{children:[(0,e.jsx)(a,{children:\\"Query\\"}),`\\n`,(0,e.jsx)(a,{children:\\"-\\"})]}),(0,e.jsxs)(r,{children:[(0,e.jsx)(a,{children:\\"Form Data\\"}),`\\n`,(0,e.jsx)(a,{children:\\"-\\"})]}),(0,e.jsxs)(r,{children:[(0,e.jsx)(a,{children:\\"Result Path\\"}),`\\n`,(0,e.jsx)(a,{children:\\"-\\"})]})]})]}),`\\n`,(0,e.jsxs)(n.ol,{start:\\"6\\",children:[`\\n`,(0,e.jsxs)(n.li,{children:[\\"Click the \\",(0,e.jsx)(n.strong,{children:\\"Create Action\\"}),\\" button to create action.\\"]}),`\\n`,(0,e.jsxs)(n.li,{children:[\\"Click the \\",(0,e.jsx)(n.strong,{children:\\"Create\\"}),\\" to finalize state creation.\\"]}),`\\n`]}),`\\n`,(0,e.jsxs)(n.h2,{id:\\"how-to-collect-api-result\\",children:[(0,e.jsx)(n.a,{className:\\"anchor\\",href:\\"#how-to-collect-api-result\\",children:(0,e.jsx)(n.span,{className:\\"icon icon-link\\"})}),\\"How to Collect API Result\\"]}),`\\n`,(0,e.jsxs)(n.p,{children:[\\"If you want to collect API results, you just need to write \\",(0,e.jsx)(n.code,{children:\\"$(result)\\"}),\\" in a variable you want to put it. For example, this is a case if the API result wants to implement an action type Command.\\"]}),`\\n`,(0,e.jsx)(h,{alt:\\"Image 1 Alt\\",src:\\"/assets/images/products/kata-platform/how-to/using-custom-api-to-access-third-party-application/image1.webp\\",caption:{title:\\"Figure 1\\",description:\\"API result in action type Command.\\"},layout:\\"responsive\\",naturalHeight:860,naturalWidth:1166}),`\\n`,(0,e.jsxs)(n.p,{children:[\\"To access the value, the API result can be stored in payload, then you can access it by writing \\",(0,e.jsx)(n.code,{children:\\"payload.result\\"}),\\". For example, this is a case if you want to access the first data from API result in action type Command.\\"]}),`\\n`,(0,e.jsx)(h,{alt:\\"Image 2 Alt\\",src:\\"/assets/images/products/kata-platform/how-to/using-custom-api-to-access-third-party-application/image2.webp\\",caption:{title:\\"Figure 2\\",description:\\"Access value from API result.\\"},layout:\\"responsive\\",naturalHeight:826,naturalWidth:1146}),`\\n`,(0,e.jsxs)(n.p,{children:[\\"This is the end of the guidance. You can contact \\",(0,e.jsx)(\\"a\\",{href:\\"mailto:support@kata.ai\\",children:(0,e.jsx)(n.a,{href:\\"mailto:support@kata.ai\\",children:\\"support@kata.ai\\"})}),\\" if you have any difficulties when implementing this.\\"]})]})}}var H=F;function l(t,i){throw new Error(\\"Expected \\"+(i?\\"component\\":\\"object\\")+\\" `\\"+t+\\"` to be defined: you likely forgot to import, pass, or provide it.\\")}return T(j);})();\\n;return Component;"},"_id":"kata-platform/how-to/using-custom-api-to-access-third-party-application.mdx","_raw":{"sourceFilePath":"kata-platform/how-to/using-custom-api-to-access-third-party-application.mdx","sourceFileName":"using-custom-api-to-access-third-party-application.mdx","sourceFileDir":"kata-platform/how-to","contentType":"mdx","flattenedPath":"kata-platform/how-to/using-custom-api-to-access-third-party-application"},"type":"KataPlatform","slug":["how-to","using-custom-api-to-access-third-party-application"],"excerpt":"\\nIn this guidance, you will be able to implement a bot that uses an action type API.\\n\\n## Introduction\\n\\nFor using an API to access third-party applications from your chatbot, you will need to create an action API"}');
;// CONCATENATED MODULE: ./.contentlayer/generated/KataPlatform/kata-platform__how-to__using-sync-api-to-access-third-party-application.mdx.json
const kata_platform_how_to_using_sync_api_to_access_third_party_application_mdx_namespaceObject = JSON.parse('{"id":"using-sync-api-to-access-third-party-application","section":"How To","title":"Using Sync API to Access Third-Party Application","prev":"how-to-use-bulk-training-for-faster-training-process","next":"using-async-api-to-access-third-party-application","body":{"raw":"\\nIn this guidance, you will be able to implement a bot that uses an action type Sync API.\\n\\n## Introduction\\n\\nFor using an API to access third-party applications from your chatbot, you will need to create an action API. Also, a state must be created before creating an action\\n\\n<div className=\\"info\\">\\n  <img className=\\"borderless\\" src=\\"/assets/images/icon-info.svg\\" />\\n  <p>\\n    <b>Important</b>: Platform has a timeout API in 10 seconds. If your API result is shows more than 10 second to\\n    chatbot, it will show a automatic message from your chatbot:\\n    <code>Maaf pesan anda sedang diproses, tunggu beberapa saat lagi yaa</code>\\n  </p>\\n</div>\\n\\n## How to Use\\n\\n1. Go to your **project**, then click **Flow**.\\n2. Create a state, for example a `apiExample` state. Click **+** icon in bottom right to create new state\\n3. Click **+** in the action box to create a new action.\\n4. When all actions available are shown, then choose **API**\\n5. Click tab **Sync API**\\n\\nEach field explanation:\\n\\n<Table>\\n  <TableHead>\\n    <TableHeadCell>Field Name</TableHeadCell>\\n    <TableHeadCell>Description</TableHeadCell>\\n  </TableHead>\\n  <TableBody>\\n    <TableBodyRow>\\n      <TableBodyCell>Action name</TableBodyCell>\\n      <TableBodyCell>Name of your action. Max. 30 characters with alphanumeric.</TableBodyCell>\\n    </TableBodyRow>\\n    <TableBodyRow>\\n      <TableBodyCell>Condition</TableBodyCell>\\n      <TableBodyCell>Which condition can trigger this action</TableBodyCell>\\n    </TableBodyRow>\\n    <TableBodyRow>\\n      <TableBodyCell>URI</TableBodyCell>\\n      <TableBodyCell>Your API URL</TableBodyCell>\\n    </TableBodyRow>\\n    <TableBodyRow>\\n      <TableBodyCell>Method</TableBodyCell>\\n      <TableBodyCell>Choose POST or GET</TableBodyCell>\\n    </TableBodyRow>\\n    <TableBodyRow>\\n      <TableBodyCell>Body</TableBodyCell>\\n      <TableBodyCell>Input API body by creating key and value.</TableBodyCell>\\n    </TableBodyRow>\\n    <TableBodyRow>\\n      <TableBodyCell>Headers</TableBodyCell>\\n      <TableBodyCell>Input API headers by creating key and value.</TableBodyCell>\\n    </TableBodyRow>\\n    <TableBodyRow>\\n      <TableBodyCell>Headers</TableBodyCell>\\n      <TableBodyCell>Input API headers by creating key and value.</TableBodyCell>\\n    </TableBodyRow>\\n    <TableBodyRow>\\n      <TableBodyCell>Query</TableBodyCell>\\n      <TableBodyCell>-</TableBodyCell>\\n    </TableBodyRow>\\n    <TableBodyRow>\\n      <TableBodyCell>Form Data</TableBodyCell>\\n      <TableBodyCell>-</TableBodyCell>\\n    </TableBodyRow>\\n    <TableBodyRow>\\n      <TableBodyCell>Result Path</TableBodyCell>\\n      <TableBodyCell>-</TableBodyCell>\\n    </TableBodyRow>\\n  </TableBody>\\n</Table>\\n\\n6. Click the **Create Action** button to create action.\\n7. Click the **Create** to finalize state creation.\\n\\n## How to Collect Sync API Result\\n\\nIf you want to collect API results, you just need to write `$(result)` in a variable you want to put it. For example, this is a case if the API result wants to implement an action type Command.\\n\\n<FigureImage\\n  alt=\\"Image 1 Alt\\"\\n  src=\\"/assets/images/products/kata-platform/how-to/using-sync-api-to-access-third-party-application/image1.webp\\"\\n  caption={{ title: \'Figure 1\', description: \'API result in action type Command.\' }}\\n  layout=\\"responsive\\"\\n  naturalHeight={860}\\n  naturalWidth={1166}\\n/>\\n\\nTo access the value, the API result can be stored in payload, then you can access it by writing `payload.result`. For example, this is a case if you want to access the first data from API result in action type Command.\\n\\n<FigureImage\\n  alt=\\"Image 2 Alt\\"\\n  src=\\"/assets/images/products/kata-platform/how-to/using-sync-api-to-access-third-party-application/image2.webp\\"\\n  caption={{ title: \'Figure 2\', description: \'Access value from API result.\' }}\\n  layout=\\"responsive\\"\\n  naturalHeight={826}\\n  naturalWidth={1146}\\n/>\\n\\nThis is the end of the guidance. You can contact <a href=\\"mailto:support@kata.ai\\">support@kata.ai</a> if you have any difficulties when implementing this.\\n","code":"var Component=(()=>{var b=Object.create;var s=Object.defineProperty;var w=Object.getOwnPropertyDescriptor;var I=Object.getOwnPropertyNames;var A=Object.getPrototypeOf,P=Object.prototype.hasOwnProperty;var m=t=>s(t,\\"__esModule\\",{value:!0});var C=(t,i)=>()=>(i||t((i={exports:{}}).exports,i),i.exports),k=(t,i)=>{for(var r in i)s(t,r,{get:i[r],enumerable:!0})},y=(t,i,r,n)=>{if(i&&typeof i==\\"object\\"||typeof i==\\"function\\")for(let c of I(i))!P.call(t,c)&&(r||c!==\\"default\\")&&s(t,c,{get:()=>i[c],enumerable:!(n=w(i,c))||n.enumerable});return t},x=(t,i)=>y(m(s(t!=null?b(A(t)):{},\\"default\\",!i&&t&&t.__esModule?{get:()=>t.default,enumerable:!0}:{value:t,enumerable:!0})),t),T=(t=>(i,r)=>t&&t.get(i)||(r=y(m({}),i,1),t&&t.set(i,r),r))(typeof WeakMap!=\\"undefined\\"?new WeakMap:0);var f=C((_,g)=>{g.exports=_jsx_runtime});var j={};k(j,{default:()=>H,frontmatter:()=>v});var e=x(f()),v={id:\\"using-sync-api-to-access-third-party-application\\",title:\\"Using Sync API to Access Third-Party Application\\",prev:\\"how-to-use-bulk-training-for-faster-training-process\\",next:\\"using-async-api-to-access-third-party-application\\",section:\\"How To\\"};function F(t={}){let{wrapper:i}=t.components||{};return i?(0,e.jsx)(i,Object.assign({},t,{children:(0,e.jsx)(r,{})})):r();function r(){let n=Object.assign({p:\\"p\\",h2:\\"h2\\",a:\\"a\\",span:\\"span\\",ol:\\"ol\\",li:\\"li\\",strong:\\"strong\\",code:\\"code\\"},t.components),{Table:c,TableHead:p,TableHeadCell:d,TableBody:u,TableBodyRow:o,TableBodyCell:a,FigureImage:h}=n;return h||l(\\"FigureImage\\",!0),c||l(\\"Table\\",!0),u||l(\\"TableBody\\",!0),a||l(\\"TableBodyCell\\",!0),o||l(\\"TableBodyRow\\",!0),p||l(\\"TableHead\\",!0),d||l(\\"TableHeadCell\\",!0),(0,e.jsxs)(e.Fragment,{children:[(0,e.jsx)(n.p,{children:\\"In this guidance, you will be able to implement a bot that uses an action type Sync API.\\"}),`\\n`,(0,e.jsxs)(n.h2,{id:\\"introduction\\",children:[(0,e.jsx)(n.a,{className:\\"anchor\\",href:\\"#introduction\\",children:(0,e.jsx)(n.span,{className:\\"icon icon-link\\"})}),\\"Introduction\\"]}),`\\n`,(0,e.jsx)(n.p,{children:\\"For using an API to access third-party applications from your chatbot, you will need to create an action API. Also, a state must be created before creating an action\\"}),`\\n`,(0,e.jsxs)(\\"div\\",{className:\\"info\\",children:[(0,e.jsx)(\\"img\\",{className:\\"borderless\\",src:\\"/assets/images/icon-info.svg\\"}),(0,e.jsx)(\\"p\\",{children:(0,e.jsxs)(n.p,{children:[(0,e.jsx)(\\"b\\",{children:\\"Important\\"}),`: Platform has a timeout API in 10 seconds. If your API result is shows more than 10 second to\\nchatbot, it will show a automatic message from your chatbot:\\n`,(0,e.jsx)(\\"code\\",{children:\\"Maaf pesan anda sedang diproses, tunggu beberapa saat lagi yaa\\"})]})})]}),`\\n`,(0,e.jsxs)(n.h2,{id:\\"how-to-use\\",children:[(0,e.jsx)(n.a,{className:\\"anchor\\",href:\\"#how-to-use\\",children:(0,e.jsx)(n.span,{className:\\"icon icon-link\\"})}),\\"How to Use\\"]}),`\\n`,(0,e.jsxs)(n.ol,{children:[`\\n`,(0,e.jsxs)(n.li,{children:[\\"Go to your \\",(0,e.jsx)(n.strong,{children:\\"project\\"}),\\", then click \\",(0,e.jsx)(n.strong,{children:\\"Flow\\"}),\\".\\"]}),`\\n`,(0,e.jsxs)(n.li,{children:[\\"Create a state, for example a \\",(0,e.jsx)(n.code,{children:\\"apiExample\\"}),\\" state. Click \\",(0,e.jsx)(n.strong,{children:\\"+\\"}),\\" icon in bottom right to create new state\\"]}),`\\n`,(0,e.jsxs)(n.li,{children:[\\"Click \\",(0,e.jsx)(n.strong,{children:\\"+\\"}),\\" in the action box to create a new action.\\"]}),`\\n`,(0,e.jsxs)(n.li,{children:[\\"When all actions available are shown, then choose \\",(0,e.jsx)(n.strong,{children:\\"API\\"})]}),`\\n`,(0,e.jsxs)(n.li,{children:[\\"Click tab \\",(0,e.jsx)(n.strong,{children:\\"Sync API\\"})]}),`\\n`]}),`\\n`,(0,e.jsx)(n.p,{children:\\"Each field explanation:\\"}),`\\n`,(0,e.jsxs)(c,{children:[(0,e.jsxs)(p,{children:[(0,e.jsx)(d,{children:\\"Field Name\\"}),`\\n`,(0,e.jsx)(d,{children:\\"Description\\"})]}),(0,e.jsxs)(u,{children:[(0,e.jsxs)(o,{children:[(0,e.jsx)(a,{children:\\"Action name\\"}),`\\n`,(0,e.jsx)(a,{children:\\"Name of your action. Max. 30 characters with alphanumeric.\\"})]}),(0,e.jsxs)(o,{children:[(0,e.jsx)(a,{children:\\"Condition\\"}),`\\n`,(0,e.jsx)(a,{children:\\"Which condition can trigger this action\\"})]}),(0,e.jsxs)(o,{children:[(0,e.jsx)(a,{children:\\"URI\\"}),`\\n`,(0,e.jsx)(a,{children:\\"Your API URL\\"})]}),(0,e.jsxs)(o,{children:[(0,e.jsx)(a,{children:\\"Method\\"}),`\\n`,(0,e.jsx)(a,{children:\\"Choose POST or GET\\"})]}),(0,e.jsxs)(o,{children:[(0,e.jsx)(a,{children:\\"Body\\"}),`\\n`,(0,e.jsx)(a,{children:\\"Input API body by creating key and value.\\"})]}),(0,e.jsxs)(o,{children:[(0,e.jsx)(a,{children:\\"Headers\\"}),`\\n`,(0,e.jsx)(a,{children:\\"Input API headers by creating key and value.\\"})]}),(0,e.jsxs)(o,{children:[(0,e.jsx)(a,{children:\\"Headers\\"}),`\\n`,(0,e.jsx)(a,{children:\\"Input API headers by creating key and value.\\"})]}),(0,e.jsxs)(o,{children:[(0,e.jsx)(a,{children:\\"Query\\"}),`\\n`,(0,e.jsx)(a,{children:\\"-\\"})]}),(0,e.jsxs)(o,{children:[(0,e.jsx)(a,{children:\\"Form Data\\"}),`\\n`,(0,e.jsx)(a,{children:\\"-\\"})]}),(0,e.jsxs)(o,{children:[(0,e.jsx)(a,{children:\\"Result Path\\"}),`\\n`,(0,e.jsx)(a,{children:\\"-\\"})]})]})]}),`\\n`,(0,e.jsxs)(n.ol,{start:\\"6\\",children:[`\\n`,(0,e.jsxs)(n.li,{children:[\\"Click the \\",(0,e.jsx)(n.strong,{children:\\"Create Action\\"}),\\" button to create action.\\"]}),`\\n`,(0,e.jsxs)(n.li,{children:[\\"Click the \\",(0,e.jsx)(n.strong,{children:\\"Create\\"}),\\" to finalize state creation.\\"]}),`\\n`]}),`\\n`,(0,e.jsxs)(n.h2,{id:\\"how-to-collect-sync-api-result\\",children:[(0,e.jsx)(n.a,{className:\\"anchor\\",href:\\"#how-to-collect-sync-api-result\\",children:(0,e.jsx)(n.span,{className:\\"icon icon-link\\"})}),\\"How to Collect Sync API Result\\"]}),`\\n`,(0,e.jsxs)(n.p,{children:[\\"If you want to collect API results, you just need to write \\",(0,e.jsx)(n.code,{children:\\"$(result)\\"}),\\" in a variable you want to put it. For example, this is a case if the API result wants to implement an action type Command.\\"]}),`\\n`,(0,e.jsx)(h,{alt:\\"Image 1 Alt\\",src:\\"/assets/images/products/kata-platform/how-to/using-sync-api-to-access-third-party-application/image1.webp\\",caption:{title:\\"Figure 1\\",description:\\"API result in action type Command.\\"},layout:\\"responsive\\",naturalHeight:860,naturalWidth:1166}),`\\n`,(0,e.jsxs)(n.p,{children:[\\"To access the value, the API result can be stored in payload, then you can access it by writing \\",(0,e.jsx)(n.code,{children:\\"payload.result\\"}),\\". For example, this is a case if you want to access the first data from API result in action type Command.\\"]}),`\\n`,(0,e.jsx)(h,{alt:\\"Image 2 Alt\\",src:\\"/assets/images/products/kata-platform/how-to/using-sync-api-to-access-third-party-application/image2.webp\\",caption:{title:\\"Figure 2\\",description:\\"Access value from API result.\\"},layout:\\"responsive\\",naturalHeight:826,naturalWidth:1146}),`\\n`,(0,e.jsxs)(n.p,{children:[\\"This is the end of the guidance. You can contact \\",(0,e.jsx)(\\"a\\",{href:\\"mailto:support@kata.ai\\",children:(0,e.jsx)(n.a,{href:\\"mailto:support@kata.ai\\",children:\\"support@kata.ai\\"})}),\\" if you have any difficulties when implementing this.\\"]})]})}}var H=F;function l(t,i){throw new Error(\\"Expected \\"+(i?\\"component\\":\\"object\\")+\\" `\\"+t+\\"` to be defined: you likely forgot to import, pass, or provide it.\\")}return T(j);})();\\n;return Component;"},"_id":"kata-platform/how-to/using-sync-api-to-access-third-party-application.mdx","_raw":{"sourceFilePath":"kata-platform/how-to/using-sync-api-to-access-third-party-application.mdx","sourceFileName":"using-sync-api-to-access-third-party-application.mdx","sourceFileDir":"kata-platform/how-to","contentType":"mdx","flattenedPath":"kata-platform/how-to/using-sync-api-to-access-third-party-application"},"type":"KataPlatform","slug":["how-to","using-sync-api-to-access-third-party-application"],"excerpt":"\\nIn this guidance, you will be able to implement a bot that uses an action type Sync API.\\n\\n## Introduction\\n\\nFor using an API to access third-party applications from your chatbot, you will need to create an action API"}');
;// CONCATENATED MODULE: ./.contentlayer/generated/KataPlatform/kata-platform__introduction__about.mdx.json
const kata_platform_introduction_about_mdx_namespaceObject = JSON.parse('{"id":"about","section":"Introduction","title":"What is Kata Platform","next":"benefits-with-kata-platform","body":{"raw":"\\n<ImageWrapper>\\n  <NextImage\\n    src=\\"/assets/images/products/kata-platform/image0.webp\\"\\n    alt=\\"Kata-Platform Illustration\\"\\n    layout=\\"responsive\\"\\n    naturalHeight={1070}\\n    naturalWidth={2058}\\n  />\\n</ImageWrapper>\\n\\n# What is Kata Platform ?\\n\\nKata Platform is a bot-developing and Natural Language Understanding platform to help you design your conversational AI product. Using the Kata Platform, you can build automated text conversations, understand messages, and connect to messaging channels or APIs.\\n","code":"var Component=(()=>{var u=Object.create;var s=Object.defineProperty;var f=Object.getOwnPropertyDescriptor;var g=Object.getOwnPropertyNames;var h=Object.getPrototypeOf,x=Object.prototype.hasOwnProperty;var l=t=>s(t,\\"__esModule\\",{value:!0});var b=(t,a)=>()=>(a||t((a={exports:{}}).exports,a),a.exports),j=(t,a)=>{for(var n in a)s(t,n,{get:a[n],enumerable:!0})},c=(t,a,n,o)=>{if(a&&typeof a==\\"object\\"||typeof a==\\"function\\")for(let r of g(a))!x.call(t,r)&&(n||r!==\\"default\\")&&s(t,r,{get:()=>a[r],enumerable:!(o=f(a,r))||o.enumerable});return t},I=(t,a)=>c(l(s(t!=null?u(h(t)):{},\\"default\\",!a&&t&&t.__esModule?{get:()=>t.default,enumerable:!0}:{value:t,enumerable:!0})),t),_=(t=>(a,n)=>t&&t.get(a)||(n=c(l({}),a,1),t&&t.set(a,n),n))(typeof WeakMap!=\\"undefined\\"?new WeakMap:0);var p=b((K,m)=>{m.exports=_jsx_runtime});var P={};j(P,{default:()=>k,frontmatter:()=>w});var e=I(p()),w={id:\\"about\\",title:\\"What is Kata Platform\\",next:\\"benefits-with-kata-platform\\",section:\\"Introduction\\"};function y(t={}){let{wrapper:a}=t.components||{};return a?(0,e.jsx)(a,Object.assign({},t,{children:(0,e.jsx)(n,{})})):n();function n(){let o=Object.assign({h1:\\"h1\\",a:\\"a\\",span:\\"span\\",p:\\"p\\"},t.components),{ImageWrapper:r,NextImage:i}=o;return r||d(\\"ImageWrapper\\",!0),i||d(\\"NextImage\\",!0),(0,e.jsxs)(e.Fragment,{children:[(0,e.jsx)(r,{children:(0,e.jsx)(i,{src:\\"/assets/images/products/kata-platform/image0.webp\\",alt:\\"Kata-Platform Illustration\\",layout:\\"responsive\\",naturalHeight:1070,naturalWidth:2058})}),`\\n`,(0,e.jsxs)(o.h1,{id:\\"what-is-kata-platform-\\",children:[(0,e.jsx)(o.a,{className:\\"anchor\\",href:\\"#what-is-kata-platform-\\",children:(0,e.jsx)(o.span,{className:\\"icon icon-link\\"})}),\\"What is Kata Platform ?\\"]}),`\\n`,(0,e.jsx)(o.p,{children:\\"Kata Platform is a bot-developing and Natural Language Understanding platform to help you design your conversational AI product. Using the Kata Platform, you can build automated text conversations, understand messages, and connect to messaging channels or APIs.\\"})]})}}var k=y;function d(t,a){throw new Error(\\"Expected \\"+(a?\\"component\\":\\"object\\")+\\" `\\"+t+\\"` to be defined: you likely forgot to import, pass, or provide it.\\")}return _(P);})();\\n;return Component;"},"_id":"kata-platform/introduction/about.mdx","_raw":{"sourceFilePath":"kata-platform/introduction/about.mdx","sourceFileName":"about.mdx","sourceFileDir":"kata-platform/introduction","contentType":"mdx","flattenedPath":"kata-platform/introduction/about"},"type":"KataPlatform","slug":["introduction","about"],"excerpt":"\\n\\n  \\n\\n\\n# What is Kata Platform ?\\n\\nKata Platform is a bot-developing and Natural Language Understanding platform to help you design your conversational AI product"}');
;// CONCATENATED MODULE: ./.contentlayer/generated/KataPlatform/kata-platform__introduction__benefits-with-kata-platform.mdx.json
const kata_platform_introduction_benefits_with_kata_platform_mdx_namespaceObject = JSON.parse('{"id":"benefits-with-kata-platform","section":"Introduction","title":"Benefits With Kata Platform","prev":"about","next":"kata-platform-features","body":{"raw":"\\n## Deliver Naturally\\n\\nBuild more human and natural conversational experiences with products that support multimodal conversations backed up by deep learning technologies.\\n\\n## Connect Universally\\n\\nDecrease development time by using our drag and drop builder. Then deploy your product across messaging platforms, including web and mobile.\\n\\n## Monitor Comprehensively\\n\\nKeep track of your product from the pre-release to the post-release and conduct a continuous evaluation using our Analytics feature with easy-to-understand visualization.\\n","code":"var Component=(()=>{var u=Object.create;var i=Object.defineProperty;var p=Object.getOwnPropertyDescriptor;var h=Object.getOwnPropertyNames;var m=Object.getPrototypeOf,f=Object.prototype.hasOwnProperty;var s=e=>i(e,\\"__esModule\\",{value:!0});var y=(e,n)=>()=>(n||e((n={exports:{}}).exports,n),n.exports),v=(e,n)=>{for(var r in n)i(e,r,{get:n[r],enumerable:!0})},l=(e,n,r,t)=>{if(n&&typeof n==\\"object\\"||typeof n==\\"function\\")for(let o of h(n))!f.call(e,o)&&(r||o!==\\"default\\")&&i(e,o,{get:()=>n[o],enumerable:!(t=p(n,o))||t.enumerable});return e},g=(e,n)=>l(s(i(e!=null?u(m(e)):{},\\"default\\",!n&&e&&e.__esModule?{get:()=>e.default,enumerable:!0}:{value:e,enumerable:!0})),e),x=(e=>(n,r)=>e&&e.get(n)||(r=l(s({}),n,1),e&&e.set(n,r),r))(typeof WeakMap!=\\"undefined\\"?new WeakMap:0);var d=y((w,c)=>{c.exports=_jsx_runtime});var N={};v(N,{default:()=>k,frontmatter:()=>b});var a=g(d()),b={id:\\"benefits-with-kata-platform\\",title:\\"Benefits With Kata Platform\\",prev:\\"about\\",next:\\"kata-platform-features\\",section:\\"Introduction\\"};function j(e={}){let{wrapper:n}=e.components||{};return n?(0,a.jsx)(n,Object.assign({},e,{children:(0,a.jsx)(r,{})})):r();function r(){let t=Object.assign({h2:\\"h2\\",a:\\"a\\",span:\\"span\\",p:\\"p\\"},e.components);return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsxs)(t.h2,{id:\\"deliver-naturally\\",children:[(0,a.jsx)(t.a,{className:\\"anchor\\",href:\\"#deliver-naturally\\",children:(0,a.jsx)(t.span,{className:\\"icon icon-link\\"})}),\\"Deliver Naturally\\"]}),`\\n`,(0,a.jsx)(t.p,{children:\\"Build more human and natural conversational experiences with products that support multimodal conversations backed up by deep learning technologies.\\"}),`\\n`,(0,a.jsxs)(t.h2,{id:\\"connect-universally\\",children:[(0,a.jsx)(t.a,{className:\\"anchor\\",href:\\"#connect-universally\\",children:(0,a.jsx)(t.span,{className:\\"icon icon-link\\"})}),\\"Connect Universally\\"]}),`\\n`,(0,a.jsx)(t.p,{children:\\"Decrease development time by using our drag and drop builder. Then deploy your product across messaging platforms, including web and mobile.\\"}),`\\n`,(0,a.jsxs)(t.h2,{id:\\"monitor-comprehensively\\",children:[(0,a.jsx)(t.a,{className:\\"anchor\\",href:\\"#monitor-comprehensively\\",children:(0,a.jsx)(t.span,{className:\\"icon icon-link\\"})}),\\"Monitor Comprehensively\\"]}),`\\n`,(0,a.jsx)(t.p,{children:\\"Keep track of your product from the pre-release to the post-release and conduct a continuous evaluation using our Analytics feature with easy-to-understand visualization.\\"})]})}}var k=j;return x(N);})();\\n;return Component;"},"_id":"kata-platform/introduction/benefits-with-kata-platform.mdx","_raw":{"sourceFilePath":"kata-platform/introduction/benefits-with-kata-platform.mdx","sourceFileName":"benefits-with-kata-platform.mdx","sourceFileDir":"kata-platform/introduction","contentType":"mdx","flattenedPath":"kata-platform/introduction/benefits-with-kata-platform"},"type":"KataPlatform","slug":["introduction","benefits-with-kata-platform"],"excerpt":"\\n## Deliver Naturally\\n\\nBuild more human and natural conversational experiences with products that support multimodal conversations backed up by deep learning technologies.\\n\\n## Connect Universally\\n\\nDecrease development time by using our drag and drop builder"}');
;// CONCATENATED MODULE: ./.contentlayer/generated/KataPlatform/kata-platform__introduction__kata-platform-features.mdx.json
const kata_platform_introduction_kata_platform_features_mdx_namespaceObject = JSON.parse('{"id":"kata-platform-features","section":"Introduction","title":"Kata Platform Features","prev":"benefits-with-kata-platform","next":"all-use-cases","body":{"raw":"\\nHere are the key features:\\n\\n### Drag and drop visual\\n\\nLessen product development time with interactive drag and drop visualization. This feature allows users with minimum coding capability to build products quickly.\\n\\n### Basic or advanced conversational product\\n\\nBuild a simple chatbot or advanced virtual assistant according to the product’s goal and objective. You can build product ranges from an uncomplicated key ord-based bot to an advanced AI product with natural language understanding (NLU) knowledge.\\n\\n### Omnichannel integration\\n\\nCreate once and deploy everywhere. Integrate your bots seamlessly across web, mobile, or any messenger platforms.\\n\\n### Error log history\\n\\nInvestigating errors is made easy with our error log history. Monitor product errors that may occur and fix them by reading our documentation.\\n\\n### Product Analytics Tool\\n\\nAnalyze end-user activities with easy-to-understand visualization.\\n","code":"var Component=(()=>{var h=Object.create;var i=Object.defineProperty;var u=Object.getOwnPropertyDescriptor;var p=Object.getOwnPropertyNames;var m=Object.getPrototypeOf,g=Object.prototype.hasOwnProperty;var s=n=>i(n,\\"__esModule\\",{value:!0});var y=(n,r)=>()=>(r||n((r={exports:{}}).exports,r),r.exports),v=(n,r)=>{for(var o in r)i(n,o,{get:r[o],enumerable:!0})},c=(n,r,o,e)=>{if(r&&typeof r==\\"object\\"||typeof r==\\"function\\")for(let t of p(r))!g.call(n,t)&&(o||t!==\\"default\\")&&i(n,t,{get:()=>r[t],enumerable:!(e=u(r,t))||e.enumerable});return n},f=(n,r)=>c(s(i(n!=null?h(m(n)):{},\\"default\\",!r&&n&&n.__esModule?{get:()=>n.default,enumerable:!0}:{value:n,enumerable:!0})),n),b=(n=>(r,o)=>n&&n.get(r)||(o=c(s({}),r,1),n&&n.set(r,o),o))(typeof WeakMap!=\\"undefined\\"?new WeakMap:0);var d=y((_,l)=>{l.exports=_jsx_runtime});var N={};v(N,{default:()=>x,frontmatter:()=>k});var a=f(d()),k={id:\\"kata-platform-features\\",title:\\"Kata Platform Features\\",prev:\\"benefits-with-kata-platform\\",next:\\"all-use-cases\\",section:\\"Introduction\\"};function w(n={}){let{wrapper:r}=n.components||{};return r?(0,a.jsx)(r,Object.assign({},n,{children:(0,a.jsx)(o,{})})):o();function o(){let e=Object.assign({p:\\"p\\",h3:\\"h3\\",a:\\"a\\",span:\\"span\\"},n.components);return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(e.p,{children:\\"Here are the key features:\\"}),`\\n`,(0,a.jsxs)(e.h3,{id:\\"drag-and-drop-visual\\",children:[(0,a.jsx)(e.a,{className:\\"anchor\\",href:\\"#drag-and-drop-visual\\",children:(0,a.jsx)(e.span,{className:\\"icon icon-link\\"})}),\\"Drag and drop visual\\"]}),`\\n`,(0,a.jsx)(e.p,{children:\\"Lessen product development time with interactive drag and drop visualization. This feature allows users with minimum coding capability to build products quickly.\\"}),`\\n`,(0,a.jsxs)(e.h3,{id:\\"basic-or-advanced-conversational-product\\",children:[(0,a.jsx)(e.a,{className:\\"anchor\\",href:\\"#basic-or-advanced-conversational-product\\",children:(0,a.jsx)(e.span,{className:\\"icon icon-link\\"})}),\\"Basic or advanced conversational product\\"]}),`\\n`,(0,a.jsx)(e.p,{children:\\"Build a simple chatbot or advanced virtual assistant according to the product\\\\u2019s goal and objective. You can build product ranges from an uncomplicated key ord-based bot to an advanced AI product with natural language understanding (NLU) knowledge.\\"}),`\\n`,(0,a.jsxs)(e.h3,{id:\\"omnichannel-integration\\",children:[(0,a.jsx)(e.a,{className:\\"anchor\\",href:\\"#omnichannel-integration\\",children:(0,a.jsx)(e.span,{className:\\"icon icon-link\\"})}),\\"Omnichannel integration\\"]}),`\\n`,(0,a.jsx)(e.p,{children:\\"Create once and deploy everywhere. Integrate your bots seamlessly across web, mobile, or any messenger platforms.\\"}),`\\n`,(0,a.jsxs)(e.h3,{id:\\"error-log-history\\",children:[(0,a.jsx)(e.a,{className:\\"anchor\\",href:\\"#error-log-history\\",children:(0,a.jsx)(e.span,{className:\\"icon icon-link\\"})}),\\"Error log history\\"]}),`\\n`,(0,a.jsx)(e.p,{children:\\"Investigating errors is made easy with our error log history. Monitor product errors that may occur and fix them by reading our documentation.\\"}),`\\n`,(0,a.jsxs)(e.h3,{id:\\"product-analytics-tool\\",children:[(0,a.jsx)(e.a,{className:\\"anchor\\",href:\\"#product-analytics-tool\\",children:(0,a.jsx)(e.span,{className:\\"icon icon-link\\"})}),\\"Product Analytics Tool\\"]}),`\\n`,(0,a.jsx)(e.p,{children:\\"Analyze end-user activities with easy-to-understand visualization.\\"})]})}}var x=w;return b(N);})();\\n;return Component;"},"_id":"kata-platform/introduction/kata-platform-features.mdx","_raw":{"sourceFilePath":"kata-platform/introduction/kata-platform-features.mdx","sourceFileName":"kata-platform-features.mdx","sourceFileDir":"kata-platform/introduction","contentType":"mdx","flattenedPath":"kata-platform/introduction/kata-platform-features"},"type":"KataPlatform","slug":["introduction","kata-platform-features"],"excerpt":"\\nHere are the key features:\\n\\n### Drag and drop visual\\n\\nLessen product development time with interactive drag and drop visualization. This feature allows users with minimum coding capability to build products quickly"}');
;// CONCATENATED MODULE: ./.contentlayer/generated/KataPlatform/kata-platform__release-notes__version.mdx.json
const kata_platform_release_notes_version_mdx_namespaceObject = JSON.parse('{"id":"release-notes-version","section":"Release Notes","title":"Version","body":{"raw":"\\n## 3.26.3\\n\\n<ImageWrapper>\\n  <NextImage\\n    alt=\\"Kata Platform Illustration\\"\\n    src=\\"/assets/images/products/kata-platform/release-notes/platform-3.26.3/illustration.webp\\"\\n    layout=\\"responsive\\"\\n    naturalWidth={1440}\\n    naturalHeight={464}\\n  />\\n</ImageWrapper>\\n\\n### What’s been fixed 🛠\\n\\nFixed whatsapp action issue in Qiscus.\\n\\n## 3.26.2\\n\\n<ImageWrapper>\\n  <NextImage\\n    alt=\\"Kata Platform Illustration\\"\\n    src=\\"/assets/images/products/kata-platform/release-notes/platform-3.26.2/image0.webp\\"\\n    layout=\\"responsive\\"\\n    naturalWidth={1440}\\n    naturalHeight={464}\\n  />\\n</ImageWrapper>\\n\\n### What’s been fixed 🛠\\n\\nFixed issue to connect chatbot to slack.\\n\\n## 3.26.1\\n\\n<ImageWrapper>\\n  <NextImage\\n    alt=\\"Kata Platform Illustration\\"\\n    src=\\"/assets/images/products/kata-platform/release-notes/platform-3.26.1/image0.webp\\"\\n    layout=\\"responsive\\"\\n    naturalWidth={1440}\\n    naturalHeight={464}\\n  />\\n</ImageWrapper>\\n\\n### What’s been fixed 🛠\\n\\nFixed issue in Async API.\\n\\n## 3.26.0\\n\\n<ImageWrapper>\\n  <NextImage\\n    alt=\\"Kata Platform Illustration\\"\\n    src=\\"/assets/images/products/kata-platform/release-notes/platform-3.26.0/image0.webp\\"\\n    layout=\\"responsive\\"\\n    naturalWidth={1440}\\n    naturalHeight={464}\\n  />\\n</ImageWrapper>\\n\\n### What\'s New ⭐️\\n\\nAdded the new action API (Async API) used to make the response API send via command without waiting for the API results to move to the next state (a more seamless API call process).\\n\\n<br />\\nNow, there are 3 action API types in the Kata Platform: Handover API, Sync API, and Async API. For more information about\\nthese APIs please visit the documentation [here](https://docs.kata.ai/kata-platform/how-to/using-async-api-to-access-third-party-application).\\n\\n<FigureImage\\n  alt=\\"Image 1 Alt\\"\\n  src=\\"/assets/images/products/kata-platform/release-notes/platform-3.26.0/image1.webp\\"\\n  caption={{ description: \'Handover, Sync, Async option in Action API\' }}\\n  layout=\\"responsive\\"\\n  naturalHeight={1111}\\n  naturalWidth={664}\\n/>\\n\\n### What’s been fixed 🛠\\n\\nFixed issue in navigation menu bar.\\n\\n<br />\\n\\n## 3.25.1\\n\\n<ImageWrapper>\\n  <NextImage\\n    alt=\\"Kata Platform Illustration\\"\\n    src=\\"/assets/images/products/kata-platform/release-notes/platform-3.25.1/image0.webp\\"\\n    layout=\\"responsive\\"\\n    naturalWidth={1440}\\n    naturalHeight={464}\\n  />\\n</ImageWrapper>\\n\\n### What\'s New ⭐️\\n\\nQuickly fixed the urgent issue in the handover agent.\\n\\n### What\'s Been Fixed 🛠\\n\\nFixed issue in handover agent to prevent chatbot close the conversation session.\\n\\n<br />\\n## 3.25.0\\n\\n<ImageWrapper>\\n  <NextImage\\n    alt=\\"Kata Platform Illustration\\"\\n    src=\\"/assets/images/products/kata-platform/release-notes/platform-3.25.0/image0.webp\\"\\n    layout=\\"responsive\\"\\n    naturalWidth={2160}\\n    naturalHeight={696}\\n  />\\n</ImageWrapper>\\n\\n### What\'s New ⭐️\\n\\nWe have developed several improvements for the Kata Platform to enhance the experience better!\\n\\n#### Search project\\n\\nQuickly find the project with the search feature\\n\\n#### Collapse sidebar in Flow\\n\\nDecluttered and spacious workspace in Flow with hide/show sidebar\\n\\n#### Help navigation in project and sidebar\\n\\nAdd a quick help button for users in the project menu and sidebar\\n\\n### What\'s been fixed 🛠\\n\\nFixed issue when user got blank page after choosing channel in Analytics.\\n\\n<br />\\n## 3.24.2\\n\\n<ImageWrapper>\\n  <NextImage\\n    alt=\\"Kata Platform Illustration\\"\\n    src=\\"/assets/images/products/kata-platform/release-notes/kata-platform-illustration.webp\\"\\n    layout=\\"responsive\\"\\n    naturalWidth={2160}\\n    naturalHeight={696}\\n  />\\n</ImageWrapper>\\n\\n### What\'s New ⭐️\\n\\nWe bring back **delete project** feature to help you delete unused projects.\\n\\n### What\'s been fixed 🛠\\n\\n- Fixed issue when user reset password in Platform.\\n- Fixed a different timestamp issue between the prediction log interface and download file.\\n- Fixed blank page issue when users see “Topics” analytics after switching available channels.\\n\\n<br />\\n## 3.23.1\\n\\n<ImageWrapper>\\n  <NextImage\\n    alt=\\"Kata Platform Illustration\\"\\n    src=\\"/assets/images/products/kata-platform/release-notes/kata-platform-illustration.webp\\"\\n    layout=\\"responsive\\"\\n    naturalWidth={2160}\\n    naturalHeight={696}\\n  />\\n</ImageWrapper>\\n\\n### What\'s New ⭐️\\n\\nWe develop a lot of improvements for the Kata Platform in user experience and the newest action type for your bot, here is the list:\\n\\n- New action type: Instagram Sticker. Learn more about [Instagram Sticker](/tutorials/how-to-use-instagram-messaging-automation-in-your-project).\\n- Updating copy for better user experience.\\n- Enhance error messages when users publish bot and testing channels.\\n\\n### What\'s been fixed 🛠\\n\\n- Fixed users cannot download transcripts from Firefox and Chrome.\\n- Fixed issue when using dynamic carousel action type.\\n- Fixed issue in scheduler that sending repetitive messages to end-users.\\n\\n<br />\\n## 3.23.0\\n\\n<ImageWrapper>\\n  <NextImage\\n    alt=\\"Kata Platform Illustration\\"\\n    src=\\"/assets/images/products/kata-platform/release-notes/kata-platform-illustration.webp\\"\\n    layout=\\"responsive\\"\\n    naturalWidth={2160}\\n    naturalHeight={696}\\n  />\\n</ImageWrapper>\\n\\n### What\'s New ⭐️\\n\\nWe develop a lot of improvements for the Kata Platform in user experience and the newest action types for your bot, here is the list:\\n\\n- We’ve changed the **captcha validation** into the most powerful and secure captcha: hCaptcha. Please upgrade your KataCLI version to the 2.7.1 version too.\\n- The wait is over 🎉 You can **remove team admin or remove team members** if they are no longer involved in the project. You may **add more admin** in 1 project. These abilities are for team admin only.\\n- Yes, we heard you. We launched 2 newest action types for the WhatsApp bot: **List Messages** and **Reply Button**. You can create a less-typing experience through your end-users and get more engagement with it. Learn more about [List Messages](/tutorials/how-to-use-whatsapp-business-api-in-my-chatbot) and [Reply Button](/tutorials/how-to-use-whatsapp-business-api-in-my-chatbot).\\n- Now, you can add an image with a caption for your WhatsApp bot. Learn more about [the caption](/tutorials/how-to-use-whatsapp-business-api-in-my-chatbot).\\n\\n### What\'s been fixed 🛠\\n\\n- Fixed users cannot access the Team feature.\\n- Fixed users got an error when requesting a reset password but the email is sent.\\n- Fixed users cannot scroll down when adding transition mapping more than 5 mappings.\\n- Fixed several users who cannot log in after signing up.\\n\\n<br />\\n## 3.22.0\\n\\n<ImageWrapper>\\n  <NextImage\\n    alt=\\"Kata Platform Illustration\\"\\n    src=\\"/assets/images/products/kata-platform/release-notes/kata-platform-illustration.webp\\"\\n    layout=\\"responsive\\"\\n    naturalWidth={2160}\\n    naturalHeight={696}\\n  />\\n</ImageWrapper>\\n\\n### What\'s New ⭐️\\n\\nThe wait is over 🎉 A whole new integration chatbot channel to Omnichat, includes Instagram Direct Message automation. [Learn more about Omnichat](/kata-omnichat/introduction/what-is-kata-omnichat).\\n\\nHere are the new features:\\n\\n- As agents, you can receive message context from conversations between chatbot and end-users. Also, takeover conversations from chatbots to handle complaints effectively. Learn more about [Agent Bot](/kata-omnichat/configure-your-agent-chatbot/setup-agent-bot-in-kata-omnichat).\\n- A new Instagram automation that provides your end-users chatbot responses such as text, image, quick replies, ice breaker, and generic template (“carousel”). Learn more about [the Instagram channel](/tutorials/how-to-use-instagram-messaging-automation-in-your-project) and create a [chatbot Instagram handover to human agents](/tutorials/create-igdm-bot-handover-from-chatbot-to-agent).\\n- Handover API template for easier handover API to Kata Omnichat. Learn more about creating a [chatbot handover to agents](/tutorials/create-simple-bot-handover-from-chatbot-to-agent).\\n\\n### What\'s been fixed 🛠\\n\\n- Fixed users cannot log in or sign up using a captcha\\n- Fixed users cannot download bot code (.yml) in the Revision List\\n\\n<br />\\n## 3.21.0\\n\\n<ImageWrapper>\\n  <NextImage\\n    alt=\\"Kata Platform Illustration\\"\\n    src=\\"/assets/images/products/kata-platform/release-notes/kata-platform-illustration.webp\\"\\n    layout=\\"responsive\\"\\n    naturalWidth={2160}\\n    naturalHeight={696}\\n  />\\n</ImageWrapper>\\n\\n### What\'s New\\n\\nIf you\'re a user who trains natural language models with large amount of data on KataCLI, but don\'t know where you can see the results of the data training, this feature is suitable for you!\\n\\n**We\'re adding NL bulk training on the GUI,** so you can easily upload your training data (up to 200 sentences/lines) and directly see the results on the same GUI. Learn more about [NL bulk training in GUI](/kata-platform/how-to/how-to-use-bulk-training-for-faster-training-process).\\n\\n### What\'s been fixed\\n\\nImproved training speed for shorter retraining time\\n\\n#### Wait, what is retraining?\\n\\nWhen doing training for the NL models, you may incorrectly put a tag and prompt an automatic training for the tag. In that case, you can delete the incorrect sentence and the system will perform the _retraining_ process to all your NL models using the updated training data.\\n\\n<br />\\n## 3.19.0\\n\\n<ImageWrapper>\\n  <NextImage\\n    alt=\\"Kata Platform Illustration\\"\\n    src=\\"/assets/images/products/kata-platform/release-notes/kata-platform-illustration.webp\\"\\n    layout=\\"responsive\\"\\n    naturalWidth={2160}\\n    naturalHeight={696}\\n  />\\n</ImageWrapper>\\n\\nWe always listen to our customers for their pain points, bug findings, required fast improvements and so on. So that, were doing improvements and several bugfix in January until March 2021, here is the list:\\n\\n### Improvements\\n\\n- Login improvement on add captcha login\\n- User sign-up improvement on input validation\\n- Image validation improvement when user do uploading image in Kata Dashboard\\n- Deployment version can be shown up to 100 latest version\\n\\n### Bug fixes\\n\\n- Unable to connect Kata Platform webhook in LINE channel.\\n- Unable to continue to publish bot because input validation error in NLU training label, project name and state name\\n- Cannot delete CMS page element in Kata CMS\\n- Cannot choose action list due to available actions are hidden\\n- User cannot save bot and create new bot draft\\n- Unable to create environment in selected projects\\n- Some environments are not listed in Deployment feature\\n- New line character “\\\\n” is not shown in action text\\n- Some projects unable to load chatbot flow in Kata Flow\\n- Repeatedly shown character “\\\\” in action type which is not expected by user\\n- Some frontend elements in user interface in emulator and prediction log were missing\\n\\n<br />\\n## 3.15.0\\n\\n<ImageWrapper>\\n  <NextImage\\n    alt=\\"Kata Platform Illustration\\"\\n    src=\\"/assets/images/products/kata-platform/release-notes/kata-platform-illustration.webp\\"\\n    layout=\\"responsive\\"\\n    naturalWidth={2160}\\n    naturalHeight={696}\\n  />\\n</ImageWrapper>\\n\\nWe are proud to announce a whole new experience with our analytics platform.\\n\\nYou can see more detailed user data, namely: New and Returning Users. Here you can see the number of new and returning user, also the total of both of them, based on filtering environment, channels, and dates. You also be able to see the total number of Active Users, Sessions, New Users, and Messages.\\n\\n<ImageWrapper>\\n  <FigureImage\\n    src=\\"/assets/images/products/kata-platform/release-notes/platform-3.15.0/analytics-1.webp\\"\\n    alt=\\"Qios Illustration\\"\\n    layout=\\"responsive\\"\\n    naturalWidth={2386}\\n    naturalHeight={976}\\n  />\\n</ImageWrapper>\\n\\nYou can get daily user activity data based on the selected date range, showing in a line chart. Get daily data for sessions, messages, active users and the newest is the number of new users. The data is also available offline by downloading it first.\\n\\n<ImageWrapper>\\n  <FigureImage\\n    src=\\"/assets/images/products/kata-platform/release-notes/platform-3.15.0/analytics-2.webp\\"\\n    alt=\\"Qios Illustration\\"\\n    layout=\\"responsive\\"\\n    naturalWidth={2362}\\n    naturalHeight={1010}\\n  />\\n</ImageWrapper>\\n\\nGet insights to blast messages in peak hours by looking at the total messages in the 7 days and 24 hours. You can do a hover in each block to see the number of incoming messages you get every hour on the selected date range.\\n\\n<ImageWrapper>\\n  <FigureImage\\n    src=\\"/assets/images/products/kata-platform/release-notes/platform-3.15.0/analytics-3.webp\\"\\n    alt=\\"Qios Illustration\\"\\n    layout=\\"responsive\\"\\n    naturalWidth={2348}\\n    naturalHeight={1250}\\n  />\\n</ImageWrapper>\\n\\nDid you know that it\'s important to pay attention to how many users come back to chatting with the chatbot? Now we have a Cohort table to display this data. You can view user retention data from daily, weekly, and monthly.\\n\\n<ImageWrapper>\\n  <FigureImage\\n    src=\\"/assets/images/products/kata-platform/release-notes/platform-3.15.0/analytics-4.webp\\"\\n    alt=\\"Qios Illustration\\"\\n    layout=\\"responsive\\"\\n    naturalWidth={2366}\\n    naturalHeight={952}\\n  />\\n</ImageWrapper>\\n\\nIn the Topics menu, you can see the most topic that users are looking for. You can see the Top Flows, Top Intents, Top States, and Top Messages. Now, we also be able to download those insights into csv files.\\n\\n<ImageWrapper>\\n  <FigureImage\\n    src=\\"/assets/images/products/kata-platform/release-notes/platform-3.15.0/analytics-5.webp\\"\\n    alt=\\"Qios Illustration\\"\\n    layout=\\"responsive\\"\\n    naturalWidth={880}\\n    naturalHeight={565}\\n  />\\n</ImageWrapper>\\n\\nIn addition, we also have a Word Cloud so we see the most common words used by user at a glance.\\n\\n<ImageWrapper>\\n  <FigureImage\\n    src=\\"/assets/images/products/kata-platform/release-notes/platform-3.15.0/analytics-6.webp\\"\\n    alt=\\"Qios Illustration\\"\\n    layout=\\"responsive\\"\\n    naturalWidth={878}\\n    naturalHeight={327}\\n  />\\n</ImageWrapper>\\n\\nIn the Transcript menu, we can see the conversation history between user and chat bot. Now, we can sort the start date, end date, incoming, outgoing, and duration into ascending and descending sequence. We also be able to search transcript by user ID.\\n\\n<ImageWrapper>\\n  <FigureImage\\n    src=\\"/assets/images/products/kata-platform/release-notes/platform-3.15.0/analytics-7.webp\\"\\n    alt=\\"Qios Illustration\\"\\n    layout=\\"responsive\\"\\n    naturalWidth={885}\\n    naturalHeight={417}\\n  />\\n</ImageWrapper>\\n\\n<br />\\n## 3.9.0\\n\\n### Features\\n\\nAdded **Transcript List** which provides User ID, Start Date, End Date, Duration, Incoming, and Outgoing information.\\n\\n<ImageWrapper>\\n  <FigureImage\\n    src=\\"/assets/images/products/kata-platform/release-notes/platform-3.9.0/transcript-1.webp\\"\\n    alt=\\"Transcript Illustration\\"\\n    layout=\\"responsive\\"\\n    naturalWidth={133}\\n    naturalHeight={577}\\n  />\\n</ImageWrapper>\\n\\nBy clicking one of the Transcript List row, project owner can see **Transcript Detail** which provide the chat history of user and bot. Also, there is **eye icon** on the bottom of each bubble which shows message detail.\\n\\n<ImageWrapper>\\n  <FigureImage\\n    src=\\"/assets/images/products/kata-platform/release-notes/platform-3.9.0/transcript-2.webp\\"\\n    alt=\\"Transcript Illustration\\"\\n    layout=\\"responsive\\"\\n    naturalWidth={1284}\\n    naturalHeight={778}\\n  />\\n</ImageWrapper>\\n\\nFurthermore, project owner can **filter** the Transcript List by Environment, Channel, and Date. In the date picker, when project owner choose a date more than 2 months ago, there will be a **pop-up message** which inform them to contact us.\\n\\n<ImageWrapper>\\n  <FigureImage\\n    src=\\"/assets/images/products/kata-platform/release-notes/platform-3.9.0/transcript-3.webp\\"\\n    alt=\\"Transcript Illustration\\"\\n    layout=\\"responsive\\"\\n    naturalWidth={1301}\\n    naturalHeight={637}\\n  />\\n</ImageWrapper>\\n\\n<br />\\n## 3.8.0\\n\\n### What\'s New\\n\\nBasic analytics, which was previously available on Kata Platform 2.5, is now making a comeback on Kata Platform 3.0.\\n\\nYou can now see the total active users, total sessions, and total incoming messages of your bot (also available in line graph). Find it on **Analytics > Users** menu.\\n\\n<ImageWrapper>\\n  <FigureImage\\n    src=\\"/assets/images/products/kata-platform/release-notes/platform-3.8.0/analytics-1.webp\\"\\n    alt=\\"Analytics Illustration\\"\\n    layout=\\"responsive\\"\\n    naturalWidth={1179}\\n    naturalHeight={828}\\n  />\\n</ImageWrapper>\\n\\nGain high-level insights of your conversations by seeing top flows, top intents, top states, and top messages of your bot. You’ll see those stats on **Analytics > Conversation** menu.\\n\\n<ImageWrapper>\\n  <FigureImage\\n    src=\\"/assets/images/products/kata-platform/release-notes/platform-3.8.0/analytics-2.webp\\"\\n    alt=\\"Analytics Illustration\\"\\n    layout=\\"responsive\\"\\n    naturalWidth={1600}\\n    naturalHeight={1345}\\n  />\\n</ImageWrapper>\\n\\nSee the details of your conversations on **Analytics > Transcript** menu. Here, you’ll find the chat history between the user and your bot, from the duration of the conversation to the message details\\n\\n<ImageWrapper>\\n  <FigureImage\\n    src=\\"/assets/images/products/kata-platform/release-notes/platform-3.8.0/analytics-3.webp\\"\\n    alt=\\"Analytics Illustration\\"\\n    layout=\\"responsive\\"\\n    naturalWidth={1337}\\n    naturalHeight={577}\\n  />\\n</ImageWrapper>\\n\\n<ImageWrapper>\\n  <FigureImage\\n    src=\\"/assets/images/products/kata-platform/release-notes/platform-3.8.0/analytics-4.webp\\"\\n    alt=\\"Analytics Illustration\\"\\n    layout=\\"responsive\\"\\n    naturalWidth={1248}\\n    naturalHeight={778}\\n  />\\n</ImageWrapper>\\n\\n<br />\\n## 3.7.0\\n\\n### What\'s New\\n\\nVersion 3.7.0 is all about adding new channel for you to talk to your customers. Introducing, _new channel_ for Kata Platform channel integration: Freshchat.\\n\\nFreshchat provides live chat software that helps you to engage with your website visitors, provide assistance, and convert leads to happy customers. [Read more about the integration here](https://docs.kata.ai/channels/freshchat/).\\n\\n<ImageWrapper>\\n  <FigureImage\\n    src=\\"/assets/images/products/kata-platform/release-notes/platform-3.7.0/freshchat.webp\\"\\n    alt=\\"Freshchat Illustration\\"\\n    layout=\\"responsive\\"\\n    naturalWidth={1920}\\n    naturalHeight={1080}\\n  />\\n</ImageWrapper>\\n\\n<br />\\n## 3.6.3\\n\\n### What\'s New\\n\\nYou can now **delete trained data** on Kata NL. Some important notes:\\n\\n- You can’t undo this action. Deleted data can’t be restored.\\n- Once you delete trained data, your model will be retrained. You won’t be able to add, edit, or delete other data during the process.\\n- The retraining duration depends on the quantity of data you deleted. Deleting more data will take a longer time.\\n\\n<ImageWrapper>\\n  <FigureImage\\n    src=\\"/assets/images/products/kata-platform/release-notes/platform-3.6.3/delete-training-1.webp\\"\\n    alt=\\"Training Illustration\\"\\n    layout=\\"responsive\\"\\n    naturalWidth={2560}\\n    naturalHeight={1754}\\n  />\\n</ImageWrapper>\\n\\n<ImageWrapper>\\n  <FigureImage\\n    src=\\"/assets/images/products/kata-platform/release-notes/platform-3.6.3/delete-training-2.webp\\"\\n    alt=\\"Training Illustration\\"\\n    layout=\\"responsive\\"\\n    naturalWidth={2560}\\n    naturalHeight={1754}\\n  />\\n</ImageWrapper>\\n\\n<br />\\n## 3.5.6\\n\\n### What\'s New\\n\\nVersion 3.5.6 is about download feature on Prediction Logs, Platform Analytics and Kata Omnichat. Here’s what’s new:\\n\\n#### Kata Omnichat\\n\\nNow Kata Omnichat is available as a module. We can create Qiscus Account and activate the module once we’ve already add Kata Omnichat Module to Project.\\n\\n<ImageWrapper>\\n  <FigureImage\\n    src=\\"/assets/images/products/kata-platform/release-notes/platform-3.5.6/omnichat-1.webp\\"\\n    alt=\\"Omnichat Illustration\\"\\n    layout=\\"responsive\\"\\n    naturalWidth={1353}\\n    naturalHeight={600}\\n  />\\n</ImageWrapper>\\n\\n<ImageWrapper>\\n  <FigureImage\\n    src=\\"/assets/images/products/kata-platform/release-notes/platform-3.5.6/omnichat-2.webp\\"\\n    alt=\\"Omnichat Illustration\\"\\n    layout=\\"responsive\\"\\n    naturalWidth={1348}\\n    naturalHeight={600}\\n  />\\n</ImageWrapper>\\n\\n<ImageWrapper>\\n  <FigureImage\\n    src=\\"/assets/images/products/kata-platform/release-notes/platform-3.5.6/omnichat-3.webp\\"\\n    alt=\\"Omnichat Illustration\\"\\n    layout=\\"responsive\\"\\n    naturalWidth={1351}\\n    naturalHeight={600}\\n  />\\n</ImageWrapper>\\n\\nAutomatically adding `handover` to Kata Flow\\n\\n<ImageWrapper>\\n  <FigureImage\\n    src=\\"/assets/images/products/kata-platform/release-notes/platform-3.5.6/omnichat-4.webp\\"\\n    alt=\\"Omnichat Illustration\\"\\n    layout=\\"responsive\\"\\n    naturalWidth={1365}\\n    naturalHeight={658}\\n  />\\n</ImageWrapper>\\n\\nManaging agents in Dashboard if we’re an admin or supervisor\\n\\n<ImageWrapper>\\n  <FigureImage\\n    src=\\"/assets/images/products/kata-platform/release-notes/platform-3.5.6/omnichat-5.webp\\"\\n    alt=\\"Omnichat Illustration\\"\\n    layout=\\"responsive\\"\\n    naturalWidth={1348}\\n    naturalHeight={661}\\n  />\\n</ImageWrapper>\\n\\nShowing list of messages in Inbox menu. Also, do chatting with customer.\\n\\n<ImageWrapper>\\n  <FigureImage\\n    src=\\"/assets/images/products/kata-platform/release-notes/platform-3.5.6/omnichat-6.webp\\"\\n    alt=\\"Omnichat Illustration\\"\\n    layout=\\"responsive\\"\\n    naturalWidth={1350}\\n    naturalHeight={658}\\n  />\\n</ImageWrapper>\\n\\nSend subscription email to customer\\n\\n<ImageWrapper>\\n  <FigureImage\\n    src=\\"/assets/images/products/kata-platform/release-notes/platform-3.5.6/omnichat-7.webp\\"\\n    alt=\\"Omnichat Illustration\\"\\n    layout=\\"responsive\\"\\n    naturalWidth={2212}\\n    naturalHeight={1220}\\n  />\\n</ImageWrapper>\\n\\n<ImageWrapper>\\n  <FigureImage\\n    src=\\"/assets/images/products/kata-platform/release-notes/platform-3.5.6/omnichat-8.webp\\"\\n    alt=\\"Omnichat Illustration\\"\\n    layout=\\"responsive\\"\\n    naturalWidth={2230}\\n    naturalHeight={1184}\\n  />\\n</ImageWrapper>\\n\\n<ImageWrapper>\\n  <FigureImage\\n    src=\\"/assets/images/products/kata-platform/release-notes/platform-3.5.6/omnichat-9.webp\\"\\n    alt=\\"Omnichat Illustration\\"\\n    layout=\\"responsive\\"\\n    naturalWidth={2444}\\n    naturalHeight={1254}\\n  />\\n</ImageWrapper>\\n\\n#### Download Prediction Log\\n\\nWe can download the prediction log as CSV or JSON, within the time range or all of them\\n\\n<ImageWrapper>\\n  <FigureImage\\n    src=\\"/assets/images/products/kata-platform/release-notes/platform-3.5.6/prediction-log.webp\\"\\n    alt=\\"Prediction Log Illustration\\"\\n    layout=\\"responsive\\"\\n    naturalWidth={1439}\\n    naturalHeight={722}\\n  />\\n</ImageWrapper>\\n\\n#### Analytics\\n\\nBrings back Analytics menu in project with new user interface\\n\\n<ImageWrapper>\\n  <FigureImage\\n    src=\\"/assets/images/products/kata-platform/release-notes/platform-3.5.6/analytics-1.webp\\"\\n    alt=\\"Analytics Illustration\\"\\n    layout=\\"responsive\\"\\n    naturalWidth={3358}\\n    naturalHeight={1768}\\n  />\\n</ImageWrapper>\\n\\nShowing statistics in users and conversation under Analytics menu.\\n\\n<ImageWrapper>\\n  <FigureImage\\n    src=\\"/assets/images/products/kata-platform/release-notes/platform-3.5.6/analytics-2.webp\\"\\n    alt=\\"Analytics Illustration\\"\\n    layout=\\"responsive\\"\\n    naturalWidth={3358}\\n    naturalHeight={1768}\\n  />\\n</ImageWrapper>\\n\\nAnalytics can show conversation log for each session\\n\\n<ImageWrapper>\\n  <FigureImage\\n    src=\\"/assets/images/products/kata-platform/release-notes/platform-3.5.6/analytics-3.webp\\"\\n    alt=\\"Analytics Illustration\\"\\n    layout=\\"responsive\\"\\n    naturalWidth={3358}\\n    naturalHeight={1766}\\n  />\\n</ImageWrapper>\\n\\n<br />\\n## 3.5.5\\n\\n### What\'s New\\n\\nVersion 3.5.5 is dedicated for Kata CMS. Here’s what’s new:\\n\\n- Added CMS Image Single and Table (Carousel) Elements in Kata CMS and Kata Dashboard.\\n- You can now use our CMS with new image management feature straight from Kata Dashboard.\\n\\n<ImageWrapper>\\n  <FigureImage\\n    src=\\"/assets/images/products/kata-platform/release-notes/platform-3.5.5/cms-images-dashboard.webp\\"\\n    alt=\\"CMS Images in Kata Dashboard Illustration\\"\\n    layout=\\"responsive\\"\\n    naturalWidth={1920}\\n    naturalHeight={1504}\\n  />\\n</ImageWrapper>\\n\\n- Update image directly using Single Image & Image Table (Carousel) Elements in Kata Dashboard.\\n- Edit the button label and URL on CMS Image Table (Carousel) in Kata Dashboard.\\n- Set the carousel action with three types of action: URL, Postback, and Message on Kata CMS.\\n\\n<ImageWrapper>\\n  <FigureImage\\n    src=\\"/assets/images/products/kata-platform/release-notes/platform-3.5.5/cms-images-studio.webp\\"\\n    alt=\\"CMS Images in Kata CMS Illustration\\"\\n    layout=\\"responsive\\"\\n    naturalWidth={1920}\\n    naturalHeight={903}\\n  />\\n</ImageWrapper>\\n\\n<br />\\n## 3.4.0\\n\\n### What\'s New\\n\\nVersion 3.4.0 is all about Prediction Logs. Here’s what’s new:\\n\\n- Prediction Logs data now shows predicted labels, prediction score, plus the date and time it was predicted.\\n- You can now search and filter your Prediction Logs data by entities, training status, prediction score, and date.\\n- We added a new **Ignore** feature, so you can train your NL model to, _well_, ignore sentences that don’t belong to any label. This allows your NL model to learn and improve its algorithm, ultimately improving the accuracy of your NL model.\\n\\n<ImageWrapper>\\n  <FigureImage\\n    src=\\"/assets/images/products/kata-platform/release-notes/platform-3.4.0/nl-insight.webp\\"\\n    alt=\\"NL Insight Illustration\\"\\n    layout=\\"responsive\\"\\n    naturalWidth={2560}\\n    naturalHeight={1500}\\n  />\\n</ImageWrapper>\\n\\n### Bug Fixes\\n\\n- Fixed FAQ table cannot show more than 10 labels\\n- Fixed error when adding/deleting questions in FAQ table\\n- Fixed bot revision history only show last 10 snapshots\\n- Fixed error when accessing NL Studio\\n\\n<br />\\n## 3.3.0\\n\\nIn this release, we\'re highlighting our newest feature and some recent updates to Kata Platform.\\n\\n<ImageWrapper>\\n  <FigureImage\\n    src=\\"/assets/images/products/kata-platform/release-notes/platform-3.3.0/module.webp\\"\\n    alt=\\"Module Illustration\\"\\n    layout=\\"responsive\\"\\n    naturalWidth={1100}\\n    naturalHeight={612}\\n  />\\n</ImageWrapper>\\n\\n### Modules\\n\\nModules are prebuilt bot features, ready to be integrated into your project in just a few clicks. This way, you can create amazing conversational experiences even faster. In this beta-release, we\'re introducing modules for two of the most common chatbot features: FAQ and Location.\\n\\n#### FAQ Module\\n\\nFAQ Module lets your chatbot answer questions your customers often ask. It\'s excellent for anyone who wants to reduce the workload of their customer service department. With this module, you can build the knowledge-base to handle the repetitive questions, so your live agents can focus on more complex problems.\\n\\n#### Location Module\\n\\nLocation Module lets your users find the nearest location of your business. This module is ideal for any industries offering face-to-face customer experiences, such as banking and retail. Your users can share their location, and you can point them to your nearest establishments along with the Google Maps directions.\\n\\nAll of our modules are already integrated with CMS Studio. It means anyone on your team can collaborate on managing the content without the need for programming or technical skills. Further details and documentation about Modules can be found [here](https://docs.kata.ai/modules/introduction/).\\n\\n### Misc\\n\\n- Fixed \\\\n causing errors in Method.\\n- Emulator now lets you test each environment separately.\\n- Emulator now lets you test CMS content.\\n- Added emulator on client dashboard. Now your client can test changes they made directly on the dashboard.\\n\\nAs always, we\'re happy to chat with you to learn more about your use cases and feedback on Kata Platform. You can send us your thoughts via email to [support@kata.ai](mailto:support@kata.ai) or join our community on [Slack](http://bit.ly/JoinTemanKata).\\n\\n<br />\\n## 3.2.2\\n\\n### Bot Studio improvements\\n\\n- We\'ve added the Quickreply and Confirm Template action templates, compatible for LINE Messenger.\\n- Buttons can now be used to trigger a date/time picker.\\n- Added the option to add Phrase NLU output for NLU entities with type Phrase.\\n\\n### Deprecated NLU Types\\n\\nOn the Bot Studio NLU selector, we have deprecated NLU types `Verstand classifier`, `Verstand tagger` and `Verstand retrieval`. New NLUs created can no longer have these types.\\n\\n### Bug fixes\\n\\n- **Bot Studio:** Fixed incorrect KataML generated when creating CMS action.\\n- **Bot Studio:** Fixed issue where onEnter mapping is stringified.\\n- **NL Studio:** Fixed unable to inherit NLU.\\n- **NL Studio:** Fixed searching inherit and root NLU.\\n- **NL Studio:** Fixed various display issues with training + prediction log.\\n\\n<br />\\n## 3.2.0\\n\\n### Super Model\\n\\nSuper Model is a highly maintained pre-built entity for Users to use without training. New projects would automatically have a Kata Entity, named `kata`, for tagging common task like person name, location, datetime, email, number, etc. For more details, [click here](/nl-studio/super-model/).\\n\\n### Channel improvements\\n\\nAdded support for WhatsApp channel. You can now enter your WhatsApp channel details in the platform.\\n\\n### Bug fixes\\n\\n- **Bot Studio:** Fixed unable to update state in end state.\\n- **NL Studio:** Fixed missing field dictionary for entity type.\\n- **NL Studio:** NL settings now show the correct defined NLU language.\\n- **Bot Studio:** Fixed bug where some form errors were not shown correctly.\\n- **Bot Studio:** Fixed bug where the flows editor does not reflect the updates made in self-transition state.\\n\\n<br />\\n## 3.1.0\\n\\n### Bot Studio Improvements\\n\\n- Added \\"CMS\\" action. Now you can search/select CMS elements when creating action on Bot Studio.\\n- Bot Studio now auto-saves your work as a draft.\\n- CMS Studio now allows you to invite non-Kata Platform users to use Kata Dashboard.\\n\\n### kata-cli\\n\\nKata-CLI now shows bulk training status:\\n\\n- Information if there is any active training job.\\n- Error on specific training data.\\n\\n### Bug fixes\\n\\n- Fixed an issue that caused \\"Add Mapping\\" button to disappear after users click Single Mapping when creating method.\\n- Fixed an issue that caused users unable to search public NL when creating entity.\\n- Fixed an issue that caused display on keywords field to not expand when users add more than 1 lines.\\n- Fixed some display bugs.\\n- Fixed crash when creating transition & intent.\\n- **kata-cli:** Fixed a bug showing incorrect bot latest revision on Bot Studio after users push bot on Kata-CLI.\\n- **kata-cli:** Fixed data training order when users use bulk training feature. Now use last-in-first-out method.\\n\\n<br />\\n## 3.0.0\\n\\n**Kata Platform 3.0** is our biggest update yet. In this version, we are introducing several new features to help you build a more comprehensive solution for your needs.\\n\\n### What\'s New\\n\\n#### Projects\\n\\nManage your chatbot project under one roof. A project consists of one bot design, one NL, and one CMS. Each of them will have different versions you can maintain.\\n\\n<ImageWrapper>\\n  <FigureImage\\n    src=\\"/assets/images/products/kata-platform/release-notes/platform-3.0/kata-platform-3-0.jpg\\"\\n    alt=\\"Projects Image\\"\\n    layout=\\"responsive\\"\\n    naturalWidth={2560}\\n    naturalHeight={1500}\\n  />\\n</ImageWrapper>\\n\\n#### CMS Studio\\n\\nBuild your own CMS for your chatbot. Your client will have a full access to maintain the knowledge or content of your chatbot. Now you can build your own CMS based on your needs.\\n\\n<ImageWrapper>\\n  <FigureImage\\n    src=\\"/assets/images/products/kata-platform/release-notes/platform-3.0/cms-studio.webp\\"\\n    alt=\\"CMS Studio\\"\\n    layout=\\"responsive\\"\\n    naturalWidth={3358}\\n    naturalHeight={1844}\\n  />\\n</ImageWrapper>\\n\\nOnce you\'ve done building your own dashboard, you can invite users or clients to contribute to the dashboard and update your bot\'s knowledge easily. All in all, your dashboard will look like this:\\n\\n<ImageWrapper>\\n  <FigureImage\\n    src=\\"/assets/images/products/kata-platform/release-notes/platform-3.0/dashboard.jpg\\"\\n    alt=\\"Dashboard\\"\\n    layout=\\"responsive\\"\\n    naturalWidth={2880}\\n    naturalHeight={1500}\\n  />\\n</ImageWrapper>\\n\\n#### NL Prediction API\\n\\nBuild your own Natural Language using our NL Studio, and use it everywhere.\\nNow it supports:\\n\\n- Entity Recognition\\n- Intent Classification\\n- Sentiment Analysis\\n\\n#### Kata Design Language System\\n\\n##### Aksara\\n\\nAksara is our very own design language system. It contains foundations, voice and tone guidelines, component standards, and other guidelines that systematically improve quality, timeliness, and consistency to our product.\\n\\n##### Wicara\\n\\nPreviously known as kata-kit, Wicara is the implementation of Aksara Design Language using React framework. It is designed to be flexible and reusable react components.\\n\\nGo to http://aksara.kata.ai to see our Design Language System.\\n\\nWe hope Kata Platform 3.0 will help you build smarter chatbots in shorter development time. It is our mission to democratize AI and help the community to build chatbot solution. For any inquiries, contact us at [support@kata.ai](mailto:support@kata.ai).\\n","code":"var Component=(()=>{var p=Object.create;var l=Object.defineProperty;var g=Object.getOwnPropertyDescriptor;var f=Object.getOwnPropertyNames;var w=Object.getPrototypeOf,b=Object.prototype.hasOwnProperty;var h=i=>l(i,\\"__esModule\\",{value:!0});var y=(i,s)=>()=>(s||i((s={exports:{}}).exports,s),s.exports),k=(i,s)=>{for(var o in s)l(i,o,{get:s[o],enumerable:!0})},d=(i,s,o,a)=>{if(s&&typeof s==\\"object\\"||typeof s==\\"function\\")for(let n of f(s))!b.call(i,n)&&(o||n!==\\"default\\")&&l(i,n,{get:()=>s[n],enumerable:!(a=g(s,n))||a.enumerable});return i},N=(i,s)=>d(h(l(i!=null?p(w(i)):{},\\"default\\",!s&&i&&i.__esModule?{get:()=>i.default,enumerable:!0}:{value:i,enumerable:!0})),i),v=(i=>(s,o)=>i&&i.get(s)||(o=d(h({}),s,1),i&&i.set(s,o),o))(typeof WeakMap!=\\"undefined\\"?new WeakMap:0);var m=y((L,u)=>{u.exports=_jsx_runtime});var A={};k(A,{default:()=>W,frontmatter:()=>x});var e=N(m()),x={id:\\"release-notes-version\\",title:\\"Version\\",section:\\"Release Notes\\"};function I(i={}){let{wrapper:s}=i.components||{};return s?(0,e.jsx)(s,Object.assign({},i,{children:(0,e.jsx)(o,{})})):o();function o(){let a=Object.assign({h2:\\"h2\\",a:\\"a\\",span:\\"span\\",h3:\\"h3\\",p:\\"p\\",h4:\\"h4\\",strong:\\"strong\\",ul:\\"ul\\",li:\\"li\\",em:\\"em\\",code:\\"code\\",h5:\\"h5\\"},i.components),{ImageWrapper:n,NextImage:r,FigureImage:t}=a;return t||c(\\"FigureImage\\",!0),n||c(\\"ImageWrapper\\",!0),r||c(\\"NextImage\\",!0),(0,e.jsxs)(e.Fragment,{children:[(0,e.jsxs)(a.h2,{id:\\"3263\\",children:[(0,e.jsx)(a.a,{className:\\"anchor\\",href:\\"#3263\\",children:(0,e.jsx)(a.span,{className:\\"icon icon-link\\"})}),\\"3.26.3\\"]}),`\\n`,(0,e.jsx)(n,{children:(0,e.jsx)(r,{alt:\\"Kata Platform Illustration\\",src:\\"/assets/images/products/kata-platform/release-notes/platform-3.26.3/illustration.webp\\",layout:\\"responsive\\",naturalWidth:1440,naturalHeight:464})}),`\\n`,(0,e.jsxs)(a.h3,{id:\\"whats-been-fixed-\\",children:[(0,e.jsx)(a.a,{className:\\"anchor\\",href:\\"#whats-been-fixed-\\",children:(0,e.jsx)(a.span,{className:\\"icon icon-link\\"})}),\\"What\\\\u2019s been fixed \\\\u{1F6E0}\\"]}),`\\n`,(0,e.jsx)(a.p,{children:\\"Fixed whatsapp action issue in Qiscus.\\"}),`\\n`,(0,e.jsxs)(a.h2,{id:\\"3262\\",children:[(0,e.jsx)(a.a,{className:\\"anchor\\",href:\\"#3262\\",children:(0,e.jsx)(a.span,{className:\\"icon icon-link\\"})}),\\"3.26.2\\"]}),`\\n`,(0,e.jsx)(n,{children:(0,e.jsx)(r,{alt:\\"Kata Platform Illustration\\",src:\\"/assets/images/products/kata-platform/release-notes/platform-3.26.2/image0.webp\\",layout:\\"responsive\\",naturalWidth:1440,naturalHeight:464})}),`\\n`,(0,e.jsxs)(a.h3,{id:\\"whats-been-fixed--1\\",children:[(0,e.jsx)(a.a,{className:\\"anchor\\",href:\\"#whats-been-fixed--1\\",children:(0,e.jsx)(a.span,{className:\\"icon icon-link\\"})}),\\"What\\\\u2019s been fixed \\\\u{1F6E0}\\"]}),`\\n`,(0,e.jsx)(a.p,{children:\\"Fixed issue to connect chatbot to slack.\\"}),`\\n`,(0,e.jsxs)(a.h2,{id:\\"3261\\",children:[(0,e.jsx)(a.a,{className:\\"anchor\\",href:\\"#3261\\",children:(0,e.jsx)(a.span,{className:\\"icon icon-link\\"})}),\\"3.26.1\\"]}),`\\n`,(0,e.jsx)(n,{children:(0,e.jsx)(r,{alt:\\"Kata Platform Illustration\\",src:\\"/assets/images/products/kata-platform/release-notes/platform-3.26.1/image0.webp\\",layout:\\"responsive\\",naturalWidth:1440,naturalHeight:464})}),`\\n`,(0,e.jsxs)(a.h3,{id:\\"whats-been-fixed--2\\",children:[(0,e.jsx)(a.a,{className:\\"anchor\\",href:\\"#whats-been-fixed--2\\",children:(0,e.jsx)(a.span,{className:\\"icon icon-link\\"})}),\\"What\\\\u2019s been fixed \\\\u{1F6E0}\\"]}),`\\n`,(0,e.jsx)(a.p,{children:\\"Fixed issue in Async API.\\"}),`\\n`,(0,e.jsxs)(a.h2,{id:\\"3260\\",children:[(0,e.jsx)(a.a,{className:\\"anchor\\",href:\\"#3260\\",children:(0,e.jsx)(a.span,{className:\\"icon icon-link\\"})}),\\"3.26.0\\"]}),`\\n`,(0,e.jsx)(n,{children:(0,e.jsx)(r,{alt:\\"Kata Platform Illustration\\",src:\\"/assets/images/products/kata-platform/release-notes/platform-3.26.0/image0.webp\\",layout:\\"responsive\\",naturalWidth:1440,naturalHeight:464})}),`\\n`,(0,e.jsxs)(a.h3,{id:\\"whats-new-\\\\uFE0F\\",children:[(0,e.jsx)(a.a,{className:\\"anchor\\",href:\\"#whats-new-\\\\uFE0F\\",children:(0,e.jsx)(a.span,{className:\\"icon icon-link\\"})}),\\"What\'s New \\\\u2B50\\\\uFE0F\\"]}),`\\n`,(0,e.jsx)(a.p,{children:\\"Added the new action API (Async API) used to make the response API send via command without waiting for the API results to move to the next state (a more seamless API call process).\\"}),`\\n`,(0,e.jsx)(\\"br\\",{}),`\\n`,(0,e.jsxs)(a.p,{children:[`Now, there are 3 action API types in the Kata Platform: Handover API, Sync API, and Async API. For more information about\\nthese APIs please visit the documentation `,(0,e.jsx)(a.a,{href:\\"https://docs.kata.ai/kata-platform/how-to/using-async-api-to-access-third-party-application\\",children:\\"here\\"}),\\".\\"]}),`\\n`,(0,e.jsx)(t,{alt:\\"Image 1 Alt\\",src:\\"/assets/images/products/kata-platform/release-notes/platform-3.26.0/image1.webp\\",caption:{description:\\"Handover, Sync, Async option in Action API\\"},layout:\\"responsive\\",naturalHeight:1111,naturalWidth:664}),`\\n`,(0,e.jsxs)(a.h3,{id:\\"whats-been-fixed--3\\",children:[(0,e.jsx)(a.a,{className:\\"anchor\\",href:\\"#whats-been-fixed--3\\",children:(0,e.jsx)(a.span,{className:\\"icon icon-link\\"})}),\\"What\\\\u2019s been fixed \\\\u{1F6E0}\\"]}),`\\n`,(0,e.jsx)(a.p,{children:\\"Fixed issue in navigation menu bar.\\"}),`\\n`,(0,e.jsx)(\\"br\\",{}),`\\n`,(0,e.jsxs)(a.h2,{id:\\"3251\\",children:[(0,e.jsx)(a.a,{className:\\"anchor\\",href:\\"#3251\\",children:(0,e.jsx)(a.span,{className:\\"icon icon-link\\"})}),\\"3.25.1\\"]}),`\\n`,(0,e.jsx)(n,{children:(0,e.jsx)(r,{alt:\\"Kata Platform Illustration\\",src:\\"/assets/images/products/kata-platform/release-notes/platform-3.25.1/image0.webp\\",layout:\\"responsive\\",naturalWidth:1440,naturalHeight:464})}),`\\n`,(0,e.jsxs)(a.h3,{id:\\"whats-new-\\\\uFE0F-1\\",children:[(0,e.jsx)(a.a,{className:\\"anchor\\",href:\\"#whats-new-\\\\uFE0F-1\\",children:(0,e.jsx)(a.span,{className:\\"icon icon-link\\"})}),\\"What\'s New \\\\u2B50\\\\uFE0F\\"]}),`\\n`,(0,e.jsx)(a.p,{children:\\"Quickly fixed the urgent issue in the handover agent.\\"}),`\\n`,(0,e.jsxs)(a.h3,{id:\\"whats-been-fixed--4\\",children:[(0,e.jsx)(a.a,{className:\\"anchor\\",href:\\"#whats-been-fixed--4\\",children:(0,e.jsx)(a.span,{className:\\"icon icon-link\\"})}),\\"What\'s Been Fixed \\\\u{1F6E0}\\"]}),`\\n`,(0,e.jsx)(a.p,{children:\\"Fixed issue in handover agent to prevent chatbot close the conversation session.\\"}),`\\n`,(0,e.jsx)(\\"br\\",{}),`\\n`,(0,e.jsxs)(a.h2,{id:\\"3250\\",children:[(0,e.jsx)(a.a,{className:\\"anchor\\",href:\\"#3250\\",children:(0,e.jsx)(a.span,{className:\\"icon icon-link\\"})}),\\"3.25.0\\"]}),`\\n`,(0,e.jsx)(n,{children:(0,e.jsx)(r,{alt:\\"Kata Platform Illustration\\",src:\\"/assets/images/products/kata-platform/release-notes/platform-3.25.0/image0.webp\\",layout:\\"responsive\\",naturalWidth:2160,naturalHeight:696})}),`\\n`,(0,e.jsxs)(a.h3,{id:\\"whats-new-\\\\uFE0F-2\\",children:[(0,e.jsx)(a.a,{className:\\"anchor\\",href:\\"#whats-new-\\\\uFE0F-2\\",children:(0,e.jsx)(a.span,{className:\\"icon icon-link\\"})}),\\"What\'s New \\\\u2B50\\\\uFE0F\\"]}),`\\n`,(0,e.jsx)(a.p,{children:\\"We have developed several improvements for the Kata Platform to enhance the experience better!\\"}),`\\n`,(0,e.jsxs)(a.h4,{id:\\"search-project\\",children:[(0,e.jsx)(a.a,{className:\\"anchor\\",href:\\"#search-project\\",children:(0,e.jsx)(a.span,{className:\\"icon icon-link\\"})}),\\"Search project\\"]}),`\\n`,(0,e.jsx)(a.p,{children:\\"Quickly find the project with the search feature\\"}),`\\n`,(0,e.jsxs)(a.h4,{id:\\"collapse-sidebar-in-flow\\",children:[(0,e.jsx)(a.a,{className:\\"anchor\\",href:\\"#collapse-sidebar-in-flow\\",children:(0,e.jsx)(a.span,{className:\\"icon icon-link\\"})}),\\"Collapse sidebar in Flow\\"]}),`\\n`,(0,e.jsx)(a.p,{children:\\"Decluttered and spacious workspace in Flow with hide/show sidebar\\"}),`\\n`,(0,e.jsxs)(a.h4,{id:\\"help-navigation-in-project-and-sidebar\\",children:[(0,e.jsx)(a.a,{className:\\"anchor\\",href:\\"#help-navigation-in-project-and-sidebar\\",children:(0,e.jsx)(a.span,{className:\\"icon icon-link\\"})}),\\"Help navigation in project and sidebar\\"]}),`\\n`,(0,e.jsx)(a.p,{children:\\"Add a quick help button for users in the project menu and sidebar\\"}),`\\n`,(0,e.jsxs)(a.h3,{id:\\"whats-been-fixed--5\\",children:[(0,e.jsx)(a.a,{className:\\"anchor\\",href:\\"#whats-been-fixed--5\\",children:(0,e.jsx)(a.span,{className:\\"icon icon-link\\"})}),\\"What\'s been fixed \\\\u{1F6E0}\\"]}),`\\n`,(0,e.jsx)(a.p,{children:\\"Fixed issue when user got blank page after choosing channel in Analytics.\\"}),`\\n`,(0,e.jsx)(\\"br\\",{}),`\\n`,(0,e.jsxs)(a.h2,{id:\\"3242\\",children:[(0,e.jsx)(a.a,{className:\\"anchor\\",href:\\"#3242\\",children:(0,e.jsx)(a.span,{className:\\"icon icon-link\\"})}),\\"3.24.2\\"]}),`\\n`,(0,e.jsx)(n,{children:(0,e.jsx)(r,{alt:\\"Kata Platform Illustration\\",src:\\"/assets/images/products/kata-platform/release-notes/kata-platform-illustration.webp\\",layout:\\"responsive\\",naturalWidth:2160,naturalHeight:696})}),`\\n`,(0,e.jsxs)(a.h3,{id:\\"whats-new-\\\\uFE0F-3\\",children:[(0,e.jsx)(a.a,{className:\\"anchor\\",href:\\"#whats-new-\\\\uFE0F-3\\",children:(0,e.jsx)(a.span,{className:\\"icon icon-link\\"})}),\\"What\'s New \\\\u2B50\\\\uFE0F\\"]}),`\\n`,(0,e.jsxs)(a.p,{children:[\\"We bring back \\",(0,e.jsx)(a.strong,{children:\\"delete project\\"}),\\" feature to help you delete unused projects.\\"]}),`\\n`,(0,e.jsxs)(a.h3,{id:\\"whats-been-fixed--6\\",children:[(0,e.jsx)(a.a,{className:\\"anchor\\",href:\\"#whats-been-fixed--6\\",children:(0,e.jsx)(a.span,{className:\\"icon icon-link\\"})}),\\"What\'s been fixed \\\\u{1F6E0}\\"]}),`\\n`,(0,e.jsxs)(a.ul,{children:[`\\n`,(0,e.jsx)(a.li,{children:\\"Fixed issue when user reset password in Platform.\\"}),`\\n`,(0,e.jsx)(a.li,{children:\\"Fixed a different timestamp issue between the prediction log interface and download file.\\"}),`\\n`,(0,e.jsx)(a.li,{children:\\"Fixed blank page issue when users see \\\\u201CTopics\\\\u201D analytics after switching available channels.\\"}),`\\n`]}),`\\n`,(0,e.jsx)(\\"br\\",{}),`\\n`,(0,e.jsxs)(a.h2,{id:\\"3231\\",children:[(0,e.jsx)(a.a,{className:\\"anchor\\",href:\\"#3231\\",children:(0,e.jsx)(a.span,{className:\\"icon icon-link\\"})}),\\"3.23.1\\"]}),`\\n`,(0,e.jsx)(n,{children:(0,e.jsx)(r,{alt:\\"Kata Platform Illustration\\",src:\\"/assets/images/products/kata-platform/release-notes/kata-platform-illustration.webp\\",layout:\\"responsive\\",naturalWidth:2160,naturalHeight:696})}),`\\n`,(0,e.jsxs)(a.h3,{id:\\"whats-new-\\\\uFE0F-4\\",children:[(0,e.jsx)(a.a,{className:\\"anchor\\",href:\\"#whats-new-\\\\uFE0F-4\\",children:(0,e.jsx)(a.span,{className:\\"icon icon-link\\"})}),\\"What\'s New \\\\u2B50\\\\uFE0F\\"]}),`\\n`,(0,e.jsx)(a.p,{children:\\"We develop a lot of improvements for the Kata Platform in user experience and the newest action type for your bot, here is the list:\\"}),`\\n`,(0,e.jsxs)(a.ul,{children:[`\\n`,(0,e.jsxs)(a.li,{children:[\\"New action type: Instagram Sticker. Learn more about \\",(0,e.jsx)(a.a,{href:\\"/tutorials/how-to-use-instagram-messaging-automation-in-your-project\\",children:\\"Instagram Sticker\\"}),\\".\\"]}),`\\n`,(0,e.jsx)(a.li,{children:\\"Updating copy for better user experience.\\"}),`\\n`,(0,e.jsx)(a.li,{children:\\"Enhance error messages when users publish bot and testing channels.\\"}),`\\n`]}),`\\n`,(0,e.jsxs)(a.h3,{id:\\"whats-been-fixed--7\\",children:[(0,e.jsx)(a.a,{className:\\"anchor\\",href:\\"#whats-been-fixed--7\\",children:(0,e.jsx)(a.span,{className:\\"icon icon-link\\"})}),\\"What\'s been fixed \\\\u{1F6E0}\\"]}),`\\n`,(0,e.jsxs)(a.ul,{children:[`\\n`,(0,e.jsx)(a.li,{children:\\"Fixed users cannot download transcripts from Firefox and Chrome.\\"}),`\\n`,(0,e.jsx)(a.li,{children:\\"Fixed issue when using dynamic carousel action type.\\"}),`\\n`,(0,e.jsx)(a.li,{children:\\"Fixed issue in scheduler that sending repetitive messages to end-users.\\"}),`\\n`]}),`\\n`,(0,e.jsx)(\\"br\\",{}),`\\n`,(0,e.jsxs)(a.h2,{id:\\"3230\\",children:[(0,e.jsx)(a.a,{className:\\"anchor\\",href:\\"#3230\\",children:(0,e.jsx)(a.span,{className:\\"icon icon-link\\"})}),\\"3.23.0\\"]}),`\\n`,(0,e.jsx)(n,{children:(0,e.jsx)(r,{alt:\\"Kata Platform Illustration\\",src:\\"/assets/images/products/kata-platform/release-notes/kata-platform-illustration.webp\\",layout:\\"responsive\\",naturalWidth:2160,naturalHeight:696})}),`\\n`,(0,e.jsxs)(a.h3,{id:\\"whats-new-\\\\uFE0F-5\\",children:[(0,e.jsx)(a.a,{className:\\"anchor\\",href:\\"#whats-new-\\\\uFE0F-5\\",children:(0,e.jsx)(a.span,{className:\\"icon icon-link\\"})}),\\"What\'s New \\\\u2B50\\\\uFE0F\\"]}),`\\n`,(0,e.jsx)(a.p,{children:\\"We develop a lot of improvements for the Kata Platform in user experience and the newest action types for your bot, here is the list:\\"}),`\\n`,(0,e.jsxs)(a.ul,{children:[`\\n`,(0,e.jsxs)(a.li,{children:[\\"We\\\\u2019ve changed the \\",(0,e.jsx)(a.strong,{children:\\"captcha validation\\"}),\\" into the most powerful and secure captcha: hCaptcha. Please upgrade your KataCLI version to the 2.7.1 version too.\\"]}),`\\n`,(0,e.jsxs)(a.li,{children:[\\"The wait is over \\\\u{1F389} You can \\",(0,e.jsx)(a.strong,{children:\\"remove team admin or remove team members\\"}),\\" if they are no longer involved in the project. You may \\",(0,e.jsx)(a.strong,{children:\\"add more admin\\"}),\\" in 1 project. These abilities are for team admin only.\\"]}),`\\n`,(0,e.jsxs)(a.li,{children:[\\"Yes, we heard you. We launched 2 newest action types for the WhatsApp bot: \\",(0,e.jsx)(a.strong,{children:\\"List Messages\\"}),\\" and \\",(0,e.jsx)(a.strong,{children:\\"Reply Button\\"}),\\". You can create a less-typing experience through your end-users and get more engagement with it. Learn more about \\",(0,e.jsx)(a.a,{href:\\"/tutorials/how-to-use-whatsapp-business-api-in-my-chatbot\\",children:\\"List Messages\\"}),\\" and \\",(0,e.jsx)(a.a,{href:\\"/tutorials/how-to-use-whatsapp-business-api-in-my-chatbot\\",children:\\"Reply Button\\"}),\\".\\"]}),`\\n`,(0,e.jsxs)(a.li,{children:[\\"Now, you can add an image with a caption for your WhatsApp bot. Learn more about \\",(0,e.jsx)(a.a,{href:\\"/tutorials/how-to-use-whatsapp-business-api-in-my-chatbot\\",children:\\"the caption\\"}),\\".\\"]}),`\\n`]}),`\\n`,(0,e.jsxs)(a.h3,{id:\\"whats-been-fixed--8\\",children:[(0,e.jsx)(a.a,{className:\\"anchor\\",href:\\"#whats-been-fixed--8\\",children:(0,e.jsx)(a.span,{className:\\"icon icon-link\\"})}),\\"What\'s been fixed \\\\u{1F6E0}\\"]}),`\\n`,(0,e.jsxs)(a.ul,{children:[`\\n`,(0,e.jsx)(a.li,{children:\\"Fixed users cannot access the Team feature.\\"}),`\\n`,(0,e.jsx)(a.li,{children:\\"Fixed users got an error when requesting a reset password but the email is sent.\\"}),`\\n`,(0,e.jsx)(a.li,{children:\\"Fixed users cannot scroll down when adding transition mapping more than 5 mappings.\\"}),`\\n`,(0,e.jsx)(a.li,{children:\\"Fixed several users who cannot log in after signing up.\\"}),`\\n`]}),`\\n`,(0,e.jsx)(\\"br\\",{}),`\\n`,(0,e.jsxs)(a.h2,{id:\\"3220\\",children:[(0,e.jsx)(a.a,{className:\\"anchor\\",href:\\"#3220\\",children:(0,e.jsx)(a.span,{className:\\"icon icon-link\\"})}),\\"3.22.0\\"]}),`\\n`,(0,e.jsx)(n,{children:(0,e.jsx)(r,{alt:\\"Kata Platform Illustration\\",src:\\"/assets/images/products/kata-platform/release-notes/kata-platform-illustration.webp\\",layout:\\"responsive\\",naturalWidth:2160,naturalHeight:696})}),`\\n`,(0,e.jsxs)(a.h3,{id:\\"whats-new-\\\\uFE0F-6\\",children:[(0,e.jsx)(a.a,{className:\\"anchor\\",href:\\"#whats-new-\\\\uFE0F-6\\",children:(0,e.jsx)(a.span,{className:\\"icon icon-link\\"})}),\\"What\'s New \\\\u2B50\\\\uFE0F\\"]}),`\\n`,(0,e.jsxs)(a.p,{children:[\\"The wait is over \\\\u{1F389} A whole new integration chatbot channel to Omnichat, includes Instagram Direct Message automation. \\",(0,e.jsx)(a.a,{href:\\"/kata-omnichat/introduction/what-is-kata-omnichat\\",children:\\"Learn more about Omnichat\\"}),\\".\\"]}),`\\n`,(0,e.jsx)(a.p,{children:\\"Here are the new features:\\"}),`\\n`,(0,e.jsxs)(a.ul,{children:[`\\n`,(0,e.jsxs)(a.li,{children:[\\"As agents, you can receive message context from conversations between chatbot and end-users. Also, takeover conversations from chatbots to handle complaints effectively. Learn more about \\",(0,e.jsx)(a.a,{href:\\"/kata-omnichat/configure-your-agent-chatbot/setup-agent-bot-in-kata-omnichat\\",children:\\"Agent Bot\\"}),\\".\\"]}),`\\n`,(0,e.jsxs)(a.li,{children:[\\"A new Instagram automation that provides your end-users chatbot responses such as text, image, quick replies, ice breaker, and generic template (\\\\u201Ccarousel\\\\u201D). Learn more about \\",(0,e.jsx)(a.a,{href:\\"/tutorials/how-to-use-instagram-messaging-automation-in-your-project\\",children:\\"the Instagram channel\\"}),\\" and create a \\",(0,e.jsx)(a.a,{href:\\"/tutorials/create-igdm-bot-handover-from-chatbot-to-agent\\",children:\\"chatbot Instagram handover to human agents\\"}),\\".\\"]}),`\\n`,(0,e.jsxs)(a.li,{children:[\\"Handover API template for easier handover API to Kata Omnichat. Learn more about creating a \\",(0,e.jsx)(a.a,{href:\\"/tutorials/create-simple-bot-handover-from-chatbot-to-agent\\",children:\\"chatbot handover to agents\\"}),\\".\\"]}),`\\n`]}),`\\n`,(0,e.jsxs)(a.h3,{id:\\"whats-been-fixed--9\\",children:[(0,e.jsx)(a.a,{className:\\"anchor\\",href:\\"#whats-been-fixed--9\\",children:(0,e.jsx)(a.span,{className:\\"icon icon-link\\"})}),\\"What\'s been fixed \\\\u{1F6E0}\\"]}),`\\n`,(0,e.jsxs)(a.ul,{children:[`\\n`,(0,e.jsx)(a.li,{children:\\"Fixed users cannot log in or sign up using a captcha\\"}),`\\n`,(0,e.jsx)(a.li,{children:\\"Fixed users cannot download bot code (.yml) in the Revision List\\"}),`\\n`]}),`\\n`,(0,e.jsx)(\\"br\\",{}),`\\n`,(0,e.jsxs)(a.h2,{id:\\"3210\\",children:[(0,e.jsx)(a.a,{className:\\"anchor\\",href:\\"#3210\\",children:(0,e.jsx)(a.span,{className:\\"icon icon-link\\"})}),\\"3.21.0\\"]}),`\\n`,(0,e.jsx)(n,{children:(0,e.jsx)(r,{alt:\\"Kata Platform Illustration\\",src:\\"/assets/images/products/kata-platform/release-notes/kata-platform-illustration.webp\\",layout:\\"responsive\\",naturalWidth:2160,naturalHeight:696})}),`\\n`,(0,e.jsxs)(a.h3,{id:\\"whats-new\\",children:[(0,e.jsx)(a.a,{className:\\"anchor\\",href:\\"#whats-new\\",children:(0,e.jsx)(a.span,{className:\\"icon icon-link\\"})}),\\"What\'s New\\"]}),`\\n`,(0,e.jsx)(a.p,{children:\\"If you\'re a user who trains natural language models with large amount of data on KataCLI, but don\'t know where you can see the results of the data training, this feature is suitable for you!\\"}),`\\n`,(0,e.jsxs)(a.p,{children:[(0,e.jsx)(a.strong,{children:\\"We\'re adding NL bulk training on the GUI,\\"}),\\" so you can easily upload your training data (up to 200 sentences/lines) and directly see the results on the same GUI. Learn more about \\",(0,e.jsx)(a.a,{href:\\"/kata-platform/how-to/how-to-use-bulk-training-for-faster-training-process\\",children:\\"NL bulk training in GUI\\"}),\\".\\"]}),`\\n`,(0,e.jsxs)(a.h3,{id:\\"whats-been-fixed\\",children:[(0,e.jsx)(a.a,{className:\\"anchor\\",href:\\"#whats-been-fixed\\",children:(0,e.jsx)(a.span,{className:\\"icon icon-link\\"})}),\\"What\'s been fixed\\"]}),`\\n`,(0,e.jsx)(a.p,{children:\\"Improved training speed for shorter retraining time\\"}),`\\n`,(0,e.jsxs)(a.h4,{id:\\"wait-what-is-retraining\\",children:[(0,e.jsx)(a.a,{className:\\"anchor\\",href:\\"#wait-what-is-retraining\\",children:(0,e.jsx)(a.span,{className:\\"icon icon-link\\"})}),\\"Wait, what is retraining?\\"]}),`\\n`,(0,e.jsxs)(a.p,{children:[\\"When doing training for the NL models, you may incorrectly put a tag and prompt an automatic training for the tag. In that case, you can delete the incorrect sentence and the system will perform the \\",(0,e.jsx)(a.em,{children:\\"retraining\\"}),\\" process to all your NL models using the updated training data.\\"]}),`\\n`,(0,e.jsx)(\\"br\\",{}),`\\n`,(0,e.jsxs)(a.h2,{id:\\"3190\\",children:[(0,e.jsx)(a.a,{className:\\"anchor\\",href:\\"#3190\\",children:(0,e.jsx)(a.span,{className:\\"icon icon-link\\"})}),\\"3.19.0\\"]}),`\\n`,(0,e.jsx)(n,{children:(0,e.jsx)(r,{alt:\\"Kata Platform Illustration\\",src:\\"/assets/images/products/kata-platform/release-notes/kata-platform-illustration.webp\\",layout:\\"responsive\\",naturalWidth:2160,naturalHeight:696})}),`\\n`,(0,e.jsx)(a.p,{children:\\"We always listen to our customers for their pain points, bug findings, required fast improvements and so on. So that, were doing improvements and several bugfix in January until March 2021, here is the list:\\"}),`\\n`,(0,e.jsxs)(a.h3,{id:\\"improvements\\",children:[(0,e.jsx)(a.a,{className:\\"anchor\\",href:\\"#improvements\\",children:(0,e.jsx)(a.span,{className:\\"icon icon-link\\"})}),\\"Improvements\\"]}),`\\n`,(0,e.jsxs)(a.ul,{children:[`\\n`,(0,e.jsx)(a.li,{children:\\"Login improvement on add captcha login\\"}),`\\n`,(0,e.jsx)(a.li,{children:\\"User sign-up improvement on input validation\\"}),`\\n`,(0,e.jsx)(a.li,{children:\\"Image validation improvement when user do uploading image in Kata Dashboard\\"}),`\\n`,(0,e.jsx)(a.li,{children:\\"Deployment version can be shown up to 100 latest version\\"}),`\\n`]}),`\\n`,(0,e.jsxs)(a.h3,{id:\\"bug-fixes\\",children:[(0,e.jsx)(a.a,{className:\\"anchor\\",href:\\"#bug-fixes\\",children:(0,e.jsx)(a.span,{className:\\"icon icon-link\\"})}),\\"Bug fixes\\"]}),`\\n`,(0,e.jsxs)(a.ul,{children:[`\\n`,(0,e.jsx)(a.li,{children:\\"Unable to connect Kata Platform webhook in LINE channel.\\"}),`\\n`,(0,e.jsx)(a.li,{children:\\"Unable to continue to publish bot because input validation error in NLU training label, project name and state name\\"}),`\\n`,(0,e.jsx)(a.li,{children:\\"Cannot delete CMS page element in Kata CMS\\"}),`\\n`,(0,e.jsx)(a.li,{children:\\"Cannot choose action list due to available actions are hidden\\"}),`\\n`,(0,e.jsx)(a.li,{children:\\"User cannot save bot and create new bot draft\\"}),`\\n`,(0,e.jsx)(a.li,{children:\\"Unable to create environment in selected projects\\"}),`\\n`,(0,e.jsx)(a.li,{children:\\"Some environments are not listed in Deployment feature\\"}),`\\n`,(0,e.jsx)(a.li,{children:\\"New line character \\\\u201C\\\\\\\\n\\\\u201D is not shown in action text\\"}),`\\n`,(0,e.jsx)(a.li,{children:\\"Some projects unable to load chatbot flow in Kata Flow\\"}),`\\n`,(0,e.jsx)(a.li,{children:\\"Repeatedly shown character \\\\u201C\\\\\\\\\\\\u201D in action type which is not expected by user\\"}),`\\n`,(0,e.jsx)(a.li,{children:\\"Some frontend elements in user interface in emulator and prediction log were missing\\"}),`\\n`]}),`\\n`,(0,e.jsx)(\\"br\\",{}),`\\n`,(0,e.jsxs)(a.h2,{id:\\"3150\\",children:[(0,e.jsx)(a.a,{className:\\"anchor\\",href:\\"#3150\\",children:(0,e.jsx)(a.span,{className:\\"icon icon-link\\"})}),\\"3.15.0\\"]}),`\\n`,(0,e.jsx)(n,{children:(0,e.jsx)(r,{alt:\\"Kata Platform Illustration\\",src:\\"/assets/images/products/kata-platform/release-notes/kata-platform-illustration.webp\\",layout:\\"responsive\\",naturalWidth:2160,naturalHeight:696})}),`\\n`,(0,e.jsx)(a.p,{children:\\"We are proud to announce a whole new experience with our analytics platform.\\"}),`\\n`,(0,e.jsx)(a.p,{children:\\"You can see more detailed user data, namely: New and Returning Users. Here you can see the number of new and returning user, also the total of both of them, based on filtering environment, channels, and dates. You also be able to see the total number of Active Users, Sessions, New Users, and Messages.\\"}),`\\n`,(0,e.jsx)(n,{children:(0,e.jsx)(t,{src:\\"/assets/images/products/kata-platform/release-notes/platform-3.15.0/analytics-1.webp\\",alt:\\"Qios Illustration\\",layout:\\"responsive\\",naturalWidth:2386,naturalHeight:976})}),`\\n`,(0,e.jsx)(a.p,{children:\\"You can get daily user activity data based on the selected date range, showing in a line chart. Get daily data for sessions, messages, active users and the newest is the number of new users. The data is also available offline by downloading it first.\\"}),`\\n`,(0,e.jsx)(n,{children:(0,e.jsx)(t,{src:\\"/assets/images/products/kata-platform/release-notes/platform-3.15.0/analytics-2.webp\\",alt:\\"Qios Illustration\\",layout:\\"responsive\\",naturalWidth:2362,naturalHeight:1010})}),`\\n`,(0,e.jsx)(a.p,{children:\\"Get insights to blast messages in peak hours by looking at the total messages in the 7 days and 24 hours. You can do a hover in each block to see the number of incoming messages you get every hour on the selected date range.\\"}),`\\n`,(0,e.jsx)(n,{children:(0,e.jsx)(t,{src:\\"/assets/images/products/kata-platform/release-notes/platform-3.15.0/analytics-3.webp\\",alt:\\"Qios Illustration\\",layout:\\"responsive\\",naturalWidth:2348,naturalHeight:1250})}),`\\n`,(0,e.jsx)(a.p,{children:\\"Did you know that it\'s important to pay attention to how many users come back to chatting with the chatbot? Now we have a Cohort table to display this data. You can view user retention data from daily, weekly, and monthly.\\"}),`\\n`,(0,e.jsx)(n,{children:(0,e.jsx)(t,{src:\\"/assets/images/products/kata-platform/release-notes/platform-3.15.0/analytics-4.webp\\",alt:\\"Qios Illustration\\",layout:\\"responsive\\",naturalWidth:2366,naturalHeight:952})}),`\\n`,(0,e.jsx)(a.p,{children:\\"In the Topics menu, you can see the most topic that users are looking for. You can see the Top Flows, Top Intents, Top States, and Top Messages. Now, we also be able to download those insights into csv files.\\"}),`\\n`,(0,e.jsx)(n,{children:(0,e.jsx)(t,{src:\\"/assets/images/products/kata-platform/release-notes/platform-3.15.0/analytics-5.webp\\",alt:\\"Qios Illustration\\",layout:\\"responsive\\",naturalWidth:880,naturalHeight:565})}),`\\n`,(0,e.jsx)(a.p,{children:\\"In addition, we also have a Word Cloud so we see the most common words used by user at a glance.\\"}),`\\n`,(0,e.jsx)(n,{children:(0,e.jsx)(t,{src:\\"/assets/images/products/kata-platform/release-notes/platform-3.15.0/analytics-6.webp\\",alt:\\"Qios Illustration\\",layout:\\"responsive\\",naturalWidth:878,naturalHeight:327})}),`\\n`,(0,e.jsx)(a.p,{children:\\"In the Transcript menu, we can see the conversation history between user and chat bot. Now, we can sort the start date, end date, incoming, outgoing, and duration into ascending and descending sequence. We also be able to search transcript by user ID.\\"}),`\\n`,(0,e.jsx)(n,{children:(0,e.jsx)(t,{src:\\"/assets/images/products/kata-platform/release-notes/platform-3.15.0/analytics-7.webp\\",alt:\\"Qios Illustration\\",layout:\\"responsive\\",naturalWidth:885,naturalHeight:417})}),`\\n`,(0,e.jsx)(\\"br\\",{}),`\\n`,(0,e.jsxs)(a.h2,{id:\\"390\\",children:[(0,e.jsx)(a.a,{className:\\"anchor\\",href:\\"#390\\",children:(0,e.jsx)(a.span,{className:\\"icon icon-link\\"})}),\\"3.9.0\\"]}),`\\n`,(0,e.jsxs)(a.h3,{id:\\"features\\",children:[(0,e.jsx)(a.a,{className:\\"anchor\\",href:\\"#features\\",children:(0,e.jsx)(a.span,{className:\\"icon icon-link\\"})}),\\"Features\\"]}),`\\n`,(0,e.jsxs)(a.p,{children:[\\"Added \\",(0,e.jsx)(a.strong,{children:\\"Transcript List\\"}),\\" which provides User ID, Start Date, End Date, Duration, Incoming, and Outgoing information.\\"]}),`\\n`,(0,e.jsx)(n,{children:(0,e.jsx)(t,{src:\\"/assets/images/products/kata-platform/release-notes/platform-3.9.0/transcript-1.webp\\",alt:\\"Transcript Illustration\\",layout:\\"responsive\\",naturalWidth:133,naturalHeight:577})}),`\\n`,(0,e.jsxs)(a.p,{children:[\\"By clicking one of the Transcript List row, project owner can see \\",(0,e.jsx)(a.strong,{children:\\"Transcript Detail\\"}),\\" which provide the chat history of user and bot. Also, there is \\",(0,e.jsx)(a.strong,{children:\\"eye icon\\"}),\\" on the bottom of each bubble which shows message detail.\\"]}),`\\n`,(0,e.jsx)(n,{children:(0,e.jsx)(t,{src:\\"/assets/images/products/kata-platform/release-notes/platform-3.9.0/transcript-2.webp\\",alt:\\"Transcript Illustration\\",layout:\\"responsive\\",naturalWidth:1284,naturalHeight:778})}),`\\n`,(0,e.jsxs)(a.p,{children:[\\"Furthermore, project owner can \\",(0,e.jsx)(a.strong,{children:\\"filter\\"}),\\" the Transcript List by Environment, Channel, and Date. In the date picker, when project owner choose a date more than 2 months ago, there will be a \\",(0,e.jsx)(a.strong,{children:\\"pop-up message\\"}),\\" which inform them to contact us.\\"]}),`\\n`,(0,e.jsx)(n,{children:(0,e.jsx)(t,{src:\\"/assets/images/products/kata-platform/release-notes/platform-3.9.0/transcript-3.webp\\",alt:\\"Transcript Illustration\\",layout:\\"responsive\\",naturalWidth:1301,naturalHeight:637})}),`\\n`,(0,e.jsx)(\\"br\\",{}),`\\n`,(0,e.jsxs)(a.h2,{id:\\"380\\",children:[(0,e.jsx)(a.a,{className:\\"anchor\\",href:\\"#380\\",children:(0,e.jsx)(a.span,{className:\\"icon icon-link\\"})}),\\"3.8.0\\"]}),`\\n`,(0,e.jsxs)(a.h3,{id:\\"whats-new-1\\",children:[(0,e.jsx)(a.a,{className:\\"anchor\\",href:\\"#whats-new-1\\",children:(0,e.jsx)(a.span,{className:\\"icon icon-link\\"})}),\\"What\'s New\\"]}),`\\n`,(0,e.jsx)(a.p,{children:\\"Basic analytics, which was previously available on Kata Platform 2.5, is now making a comeback on Kata Platform 3.0.\\"}),`\\n`,(0,e.jsxs)(a.p,{children:[\\"You can now see the total active users, total sessions, and total incoming messages of your bot (also available in line graph). Find it on \\",(0,e.jsx)(a.strong,{children:\\"Analytics > Users\\"}),\\" menu.\\"]}),`\\n`,(0,e.jsx)(n,{children:(0,e.jsx)(t,{src:\\"/assets/images/products/kata-platform/release-notes/platform-3.8.0/analytics-1.webp\\",alt:\\"Analytics Illustration\\",layout:\\"responsive\\",naturalWidth:1179,naturalHeight:828})}),`\\n`,(0,e.jsxs)(a.p,{children:[\\"Gain high-level insights of your conversations by seeing top flows, top intents, top states, and top messages of your bot. You\\\\u2019ll see those stats on \\",(0,e.jsx)(a.strong,{children:\\"Analytics > Conversation\\"}),\\" menu.\\"]}),`\\n`,(0,e.jsx)(n,{children:(0,e.jsx)(t,{src:\\"/assets/images/products/kata-platform/release-notes/platform-3.8.0/analytics-2.webp\\",alt:\\"Analytics Illustration\\",layout:\\"responsive\\",naturalWidth:1600,naturalHeight:1345})}),`\\n`,(0,e.jsxs)(a.p,{children:[\\"See the details of your conversations on \\",(0,e.jsx)(a.strong,{children:\\"Analytics > Transcript\\"}),\\" menu. Here, you\\\\u2019ll find the chat history between the user and your bot, from the duration of the conversation to the message details\\"]}),`\\n`,(0,e.jsx)(n,{children:(0,e.jsx)(t,{src:\\"/assets/images/products/kata-platform/release-notes/platform-3.8.0/analytics-3.webp\\",alt:\\"Analytics Illustration\\",layout:\\"responsive\\",naturalWidth:1337,naturalHeight:577})}),`\\n`,(0,e.jsx)(n,{children:(0,e.jsx)(t,{src:\\"/assets/images/products/kata-platform/release-notes/platform-3.8.0/analytics-4.webp\\",alt:\\"Analytics Illustration\\",layout:\\"responsive\\",naturalWidth:1248,naturalHeight:778})}),`\\n`,(0,e.jsx)(\\"br\\",{}),`\\n`,(0,e.jsxs)(a.h2,{id:\\"370\\",children:[(0,e.jsx)(a.a,{className:\\"anchor\\",href:\\"#370\\",children:(0,e.jsx)(a.span,{className:\\"icon icon-link\\"})}),\\"3.7.0\\"]}),`\\n`,(0,e.jsxs)(a.h3,{id:\\"whats-new-2\\",children:[(0,e.jsx)(a.a,{className:\\"anchor\\",href:\\"#whats-new-2\\",children:(0,e.jsx)(a.span,{className:\\"icon icon-link\\"})}),\\"What\'s New\\"]}),`\\n`,(0,e.jsxs)(a.p,{children:[\\"Version 3.7.0 is all about adding new channel for you to talk to your customers. Introducing, \\",(0,e.jsx)(a.em,{children:\\"new channel\\"}),\\" for Kata Platform channel integration: Freshchat.\\"]}),`\\n`,(0,e.jsxs)(a.p,{children:[\\"Freshchat provides live chat software that helps you to engage with your website visitors, provide assistance, and convert leads to happy customers. \\",(0,e.jsx)(a.a,{href:\\"https://docs.kata.ai/channels/freshchat/\\",children:\\"Read more about the integration here\\"}),\\".\\"]}),`\\n`,(0,e.jsx)(n,{children:(0,e.jsx)(t,{src:\\"/assets/images/products/kata-platform/release-notes/platform-3.7.0/freshchat.webp\\",alt:\\"Freshchat Illustration\\",layout:\\"responsive\\",naturalWidth:1920,naturalHeight:1080})}),`\\n`,(0,e.jsx)(\\"br\\",{}),`\\n`,(0,e.jsxs)(a.h2,{id:\\"363\\",children:[(0,e.jsx)(a.a,{className:\\"anchor\\",href:\\"#363\\",children:(0,e.jsx)(a.span,{className:\\"icon icon-link\\"})}),\\"3.6.3\\"]}),`\\n`,(0,e.jsxs)(a.h3,{id:\\"whats-new-3\\",children:[(0,e.jsx)(a.a,{className:\\"anchor\\",href:\\"#whats-new-3\\",children:(0,e.jsx)(a.span,{className:\\"icon icon-link\\"})}),\\"What\'s New\\"]}),`\\n`,(0,e.jsxs)(a.p,{children:[\\"You can now \\",(0,e.jsx)(a.strong,{children:\\"delete trained data\\"}),\\" on Kata NL. Some important notes:\\"]}),`\\n`,(0,e.jsxs)(a.ul,{children:[`\\n`,(0,e.jsx)(a.li,{children:\\"You can\\\\u2019t undo this action. Deleted data can\\\\u2019t be restored.\\"}),`\\n`,(0,e.jsx)(a.li,{children:\\"Once you delete trained data, your model will be retrained. You won\\\\u2019t be able to add, edit, or delete other data during the process.\\"}),`\\n`,(0,e.jsx)(a.li,{children:\\"The retraining duration depends on the quantity of data you deleted. Deleting more data will take a longer time.\\"}),`\\n`]}),`\\n`,(0,e.jsx)(n,{children:(0,e.jsx)(t,{src:\\"/assets/images/products/kata-platform/release-notes/platform-3.6.3/delete-training-1.webp\\",alt:\\"Training Illustration\\",layout:\\"responsive\\",naturalWidth:2560,naturalHeight:1754})}),`\\n`,(0,e.jsx)(n,{children:(0,e.jsx)(t,{src:\\"/assets/images/products/kata-platform/release-notes/platform-3.6.3/delete-training-2.webp\\",alt:\\"Training Illustration\\",layout:\\"responsive\\",naturalWidth:2560,naturalHeight:1754})}),`\\n`,(0,e.jsx)(\\"br\\",{}),`\\n`,(0,e.jsxs)(a.h2,{id:\\"356\\",children:[(0,e.jsx)(a.a,{className:\\"anchor\\",href:\\"#356\\",children:(0,e.jsx)(a.span,{className:\\"icon icon-link\\"})}),\\"3.5.6\\"]}),`\\n`,(0,e.jsxs)(a.h3,{id:\\"whats-new-4\\",children:[(0,e.jsx)(a.a,{className:\\"anchor\\",href:\\"#whats-new-4\\",children:(0,e.jsx)(a.span,{className:\\"icon icon-link\\"})}),\\"What\'s New\\"]}),`\\n`,(0,e.jsx)(a.p,{children:\\"Version 3.5.6 is about download feature on Prediction Logs, Platform Analytics and Kata Omnichat. Here\\\\u2019s what\\\\u2019s new:\\"}),`\\n`,(0,e.jsxs)(a.h4,{id:\\"kata-omnichat\\",children:[(0,e.jsx)(a.a,{className:\\"anchor\\",href:\\"#kata-omnichat\\",children:(0,e.jsx)(a.span,{className:\\"icon icon-link\\"})}),\\"Kata Omnichat\\"]}),`\\n`,(0,e.jsx)(a.p,{children:\\"Now Kata Omnichat is available as a module. We can create Qiscus Account and activate the module once we\\\\u2019ve already add Kata Omnichat Module to Project.\\"}),`\\n`,(0,e.jsx)(n,{children:(0,e.jsx)(t,{src:\\"/assets/images/products/kata-platform/release-notes/platform-3.5.6/omnichat-1.webp\\",alt:\\"Omnichat Illustration\\",layout:\\"responsive\\",naturalWidth:1353,naturalHeight:600})}),`\\n`,(0,e.jsx)(n,{children:(0,e.jsx)(t,{src:\\"/assets/images/products/kata-platform/release-notes/platform-3.5.6/omnichat-2.webp\\",alt:\\"Omnichat Illustration\\",layout:\\"responsive\\",naturalWidth:1348,naturalHeight:600})}),`\\n`,(0,e.jsx)(n,{children:(0,e.jsx)(t,{src:\\"/assets/images/products/kata-platform/release-notes/platform-3.5.6/omnichat-3.webp\\",alt:\\"Omnichat Illustration\\",layout:\\"responsive\\",naturalWidth:1351,naturalHeight:600})}),`\\n`,(0,e.jsxs)(a.p,{children:[\\"Automatically adding \\",(0,e.jsx)(a.code,{children:\\"handover\\"}),\\" to Kata Flow\\"]}),`\\n`,(0,e.jsx)(n,{children:(0,e.jsx)(t,{src:\\"/assets/images/products/kata-platform/release-notes/platform-3.5.6/omnichat-4.webp\\",alt:\\"Omnichat Illustration\\",layout:\\"responsive\\",naturalWidth:1365,naturalHeight:658})}),`\\n`,(0,e.jsx)(a.p,{children:\\"Managing agents in Dashboard if we\\\\u2019re an admin or supervisor\\"}),`\\n`,(0,e.jsx)(n,{children:(0,e.jsx)(t,{src:\\"/assets/images/products/kata-platform/release-notes/platform-3.5.6/omnichat-5.webp\\",alt:\\"Omnichat Illustration\\",layout:\\"responsive\\",naturalWidth:1348,naturalHeight:661})}),`\\n`,(0,e.jsx)(a.p,{children:\\"Showing list of messages in Inbox menu. Also, do chatting with customer.\\"}),`\\n`,(0,e.jsx)(n,{children:(0,e.jsx)(t,{src:\\"/assets/images/products/kata-platform/release-notes/platform-3.5.6/omnichat-6.webp\\",alt:\\"Omnichat Illustration\\",layout:\\"responsive\\",naturalWidth:1350,naturalHeight:658})}),`\\n`,(0,e.jsx)(a.p,{children:\\"Send subscription email to customer\\"}),`\\n`,(0,e.jsx)(n,{children:(0,e.jsx)(t,{src:\\"/assets/images/products/kata-platform/release-notes/platform-3.5.6/omnichat-7.webp\\",alt:\\"Omnichat Illustration\\",layout:\\"responsive\\",naturalWidth:2212,naturalHeight:1220})}),`\\n`,(0,e.jsx)(n,{children:(0,e.jsx)(t,{src:\\"/assets/images/products/kata-platform/release-notes/platform-3.5.6/omnichat-8.webp\\",alt:\\"Omnichat Illustration\\",layout:\\"responsive\\",naturalWidth:2230,naturalHeight:1184})}),`\\n`,(0,e.jsx)(n,{children:(0,e.jsx)(t,{src:\\"/assets/images/products/kata-platform/release-notes/platform-3.5.6/omnichat-9.webp\\",alt:\\"Omnichat Illustration\\",layout:\\"responsive\\",naturalWidth:2444,naturalHeight:1254})}),`\\n`,(0,e.jsxs)(a.h4,{id:\\"download-prediction-log\\",children:[(0,e.jsx)(a.a,{className:\\"anchor\\",href:\\"#download-prediction-log\\",children:(0,e.jsx)(a.span,{className:\\"icon icon-link\\"})}),\\"Download Prediction Log\\"]}),`\\n`,(0,e.jsx)(a.p,{children:\\"We can download the prediction log as CSV or JSON, within the time range or all of them\\"}),`\\n`,(0,e.jsx)(n,{children:(0,e.jsx)(t,{src:\\"/assets/images/products/kata-platform/release-notes/platform-3.5.6/prediction-log.webp\\",alt:\\"Prediction Log Illustration\\",layout:\\"responsive\\",naturalWidth:1439,naturalHeight:722})}),`\\n`,(0,e.jsxs)(a.h4,{id:\\"analytics\\",children:[(0,e.jsx)(a.a,{className:\\"anchor\\",href:\\"#analytics\\",children:(0,e.jsx)(a.span,{className:\\"icon icon-link\\"})}),\\"Analytics\\"]}),`\\n`,(0,e.jsx)(a.p,{children:\\"Brings back Analytics menu in project with new user interface\\"}),`\\n`,(0,e.jsx)(n,{children:(0,e.jsx)(t,{src:\\"/assets/images/products/kata-platform/release-notes/platform-3.5.6/analytics-1.webp\\",alt:\\"Analytics Illustration\\",layout:\\"responsive\\",naturalWidth:3358,naturalHeight:1768})}),`\\n`,(0,e.jsx)(a.p,{children:\\"Showing statistics in users and conversation under Analytics menu.\\"}),`\\n`,(0,e.jsx)(n,{children:(0,e.jsx)(t,{src:\\"/assets/images/products/kata-platform/release-notes/platform-3.5.6/analytics-2.webp\\",alt:\\"Analytics Illustration\\",layout:\\"responsive\\",naturalWidth:3358,naturalHeight:1768})}),`\\n`,(0,e.jsx)(a.p,{children:\\"Analytics can show conversation log for each session\\"}),`\\n`,(0,e.jsx)(n,{children:(0,e.jsx)(t,{src:\\"/assets/images/products/kata-platform/release-notes/platform-3.5.6/analytics-3.webp\\",alt:\\"Analytics Illustration\\",layout:\\"responsive\\",naturalWidth:3358,naturalHeight:1766})}),`\\n`,(0,e.jsx)(\\"br\\",{}),`\\n`,(0,e.jsxs)(a.h2,{id:\\"355\\",children:[(0,e.jsx)(a.a,{className:\\"anchor\\",href:\\"#355\\",children:(0,e.jsx)(a.span,{className:\\"icon icon-link\\"})}),\\"3.5.5\\"]}),`\\n`,(0,e.jsxs)(a.h3,{id:\\"whats-new-5\\",children:[(0,e.jsx)(a.a,{className:\\"anchor\\",href:\\"#whats-new-5\\",children:(0,e.jsx)(a.span,{className:\\"icon icon-link\\"})}),\\"What\'s New\\"]}),`\\n`,(0,e.jsx)(a.p,{children:\\"Version 3.5.5 is dedicated for Kata CMS. Here\\\\u2019s what\\\\u2019s new:\\"}),`\\n`,(0,e.jsxs)(a.ul,{children:[`\\n`,(0,e.jsx)(a.li,{children:\\"Added CMS Image Single and Table (Carousel) Elements in Kata CMS and Kata Dashboard.\\"}),`\\n`,(0,e.jsx)(a.li,{children:\\"You can now use our CMS with new image management feature straight from Kata Dashboard.\\"}),`\\n`]}),`\\n`,(0,e.jsx)(n,{children:(0,e.jsx)(t,{src:\\"/assets/images/products/kata-platform/release-notes/platform-3.5.5/cms-images-dashboard.webp\\",alt:\\"CMS Images in Kata Dashboard Illustration\\",layout:\\"responsive\\",naturalWidth:1920,naturalHeight:1504})}),`\\n`,(0,e.jsxs)(a.ul,{children:[`\\n`,(0,e.jsx)(a.li,{children:\\"Update image directly using Single Image & Image Table (Carousel) Elements in Kata Dashboard.\\"}),`\\n`,(0,e.jsx)(a.li,{children:\\"Edit the button label and URL on CMS Image Table (Carousel) in Kata Dashboard.\\"}),`\\n`,(0,e.jsx)(a.li,{children:\\"Set the carousel action with three types of action: URL, Postback, and Message on Kata CMS.\\"}),`\\n`]}),`\\n`,(0,e.jsx)(n,{children:(0,e.jsx)(t,{src:\\"/assets/images/products/kata-platform/release-notes/platform-3.5.5/cms-images-studio.webp\\",alt:\\"CMS Images in Kata CMS Illustration\\",layout:\\"responsive\\",naturalWidth:1920,naturalHeight:903})}),`\\n`,(0,e.jsx)(\\"br\\",{}),`\\n`,(0,e.jsxs)(a.h2,{id:\\"340\\",children:[(0,e.jsx)(a.a,{className:\\"anchor\\",href:\\"#340\\",children:(0,e.jsx)(a.span,{className:\\"icon icon-link\\"})}),\\"3.4.0\\"]}),`\\n`,(0,e.jsxs)(a.h3,{id:\\"whats-new-6\\",children:[(0,e.jsx)(a.a,{className:\\"anchor\\",href:\\"#whats-new-6\\",children:(0,e.jsx)(a.span,{className:\\"icon icon-link\\"})}),\\"What\'s New\\"]}),`\\n`,(0,e.jsx)(a.p,{children:\\"Version 3.4.0 is all about Prediction Logs. Here\\\\u2019s what\\\\u2019s new:\\"}),`\\n`,(0,e.jsxs)(a.ul,{children:[`\\n`,(0,e.jsx)(a.li,{children:\\"Prediction Logs data now shows predicted labels, prediction score, plus the date and time it was predicted.\\"}),`\\n`,(0,e.jsx)(a.li,{children:\\"You can now search and filter your Prediction Logs data by entities, training status, prediction score, and date.\\"}),`\\n`,(0,e.jsxs)(a.li,{children:[\\"We added a new \\",(0,e.jsx)(a.strong,{children:\\"Ignore\\"}),\\" feature, so you can train your NL model to, \\",(0,e.jsx)(a.em,{children:\\"well\\"}),\\", ignore sentences that don\\\\u2019t belong to any label. This allows your NL model to learn and improve its algorithm, ultimately improving the accuracy of your NL model.\\"]}),`\\n`]}),`\\n`,(0,e.jsx)(n,{children:(0,e.jsx)(t,{src:\\"/assets/images/products/kata-platform/release-notes/platform-3.4.0/nl-insight.webp\\",alt:\\"NL Insight Illustration\\",layout:\\"responsive\\",naturalWidth:2560,naturalHeight:1500})}),`\\n`,(0,e.jsxs)(a.h3,{id:\\"bug-fixes-1\\",children:[(0,e.jsx)(a.a,{className:\\"anchor\\",href:\\"#bug-fixes-1\\",children:(0,e.jsx)(a.span,{className:\\"icon icon-link\\"})}),\\"Bug Fixes\\"]}),`\\n`,(0,e.jsxs)(a.ul,{children:[`\\n`,(0,e.jsx)(a.li,{children:\\"Fixed FAQ table cannot show more than 10 labels\\"}),`\\n`,(0,e.jsx)(a.li,{children:\\"Fixed error when adding/deleting questions in FAQ table\\"}),`\\n`,(0,e.jsx)(a.li,{children:\\"Fixed bot revision history only show last 10 snapshots\\"}),`\\n`,(0,e.jsx)(a.li,{children:\\"Fixed error when accessing NL Studio\\"}),`\\n`]}),`\\n`,(0,e.jsx)(\\"br\\",{}),`\\n`,(0,e.jsxs)(a.h2,{id:\\"330\\",children:[(0,e.jsx)(a.a,{className:\\"anchor\\",href:\\"#330\\",children:(0,e.jsx)(a.span,{className:\\"icon icon-link\\"})}),\\"3.3.0\\"]}),`\\n`,(0,e.jsx)(a.p,{children:\\"In this release, we\'re highlighting our newest feature and some recent updates to Kata Platform.\\"}),`\\n`,(0,e.jsx)(n,{children:(0,e.jsx)(t,{src:\\"/assets/images/products/kata-platform/release-notes/platform-3.3.0/module.webp\\",alt:\\"Module Illustration\\",layout:\\"responsive\\",naturalWidth:1100,naturalHeight:612})}),`\\n`,(0,e.jsxs)(a.h3,{id:\\"modules\\",children:[(0,e.jsx)(a.a,{className:\\"anchor\\",href:\\"#modules\\",children:(0,e.jsx)(a.span,{className:\\"icon icon-link\\"})}),\\"Modules\\"]}),`\\n`,(0,e.jsx)(a.p,{children:\\"Modules are prebuilt bot features, ready to be integrated into your project in just a few clicks. This way, you can create amazing conversational experiences even faster. In this beta-release, we\'re introducing modules for two of the most common chatbot features: FAQ and Location.\\"}),`\\n`,(0,e.jsxs)(a.h4,{id:\\"faq-module\\",children:[(0,e.jsx)(a.a,{className:\\"anchor\\",href:\\"#faq-module\\",children:(0,e.jsx)(a.span,{className:\\"icon icon-link\\"})}),\\"FAQ Module\\"]}),`\\n`,(0,e.jsx)(a.p,{children:\\"FAQ Module lets your chatbot answer questions your customers often ask. It\'s excellent for anyone who wants to reduce the workload of their customer service department. With this module, you can build the knowledge-base to handle the repetitive questions, so your live agents can focus on more complex problems.\\"}),`\\n`,(0,e.jsxs)(a.h4,{id:\\"location-module\\",children:[(0,e.jsx)(a.a,{className:\\"anchor\\",href:\\"#location-module\\",children:(0,e.jsx)(a.span,{className:\\"icon icon-link\\"})}),\\"Location Module\\"]}),`\\n`,(0,e.jsx)(a.p,{children:\\"Location Module lets your users find the nearest location of your business. This module is ideal for any industries offering face-to-face customer experiences, such as banking and retail. Your users can share their location, and you can point them to your nearest establishments along with the Google Maps directions.\\"}),`\\n`,(0,e.jsxs)(a.p,{children:[\\"All of our modules are already integrated with CMS Studio. It means anyone on your team can collaborate on managing the content without the need for programming or technical skills. Further details and documentation about Modules can be found \\",(0,e.jsx)(a.a,{href:\\"https://docs.kata.ai/modules/introduction/\\",children:\\"here\\"}),\\".\\"]}),`\\n`,(0,e.jsxs)(a.h3,{id:\\"misc\\",children:[(0,e.jsx)(a.a,{className:\\"anchor\\",href:\\"#misc\\",children:(0,e.jsx)(a.span,{className:\\"icon icon-link\\"})}),\\"Misc\\"]}),`\\n`,(0,e.jsxs)(a.ul,{children:[`\\n`,(0,e.jsx)(a.li,{children:\\"Fixed \\\\\\\\n causing errors in Method.\\"}),`\\n`,(0,e.jsx)(a.li,{children:\\"Emulator now lets you test each environment separately.\\"}),`\\n`,(0,e.jsx)(a.li,{children:\\"Emulator now lets you test CMS content.\\"}),`\\n`,(0,e.jsx)(a.li,{children:\\"Added emulator on client dashboard. Now your client can test changes they made directly on the dashboard.\\"}),`\\n`]}),`\\n`,(0,e.jsxs)(a.p,{children:[\\"As always, we\'re happy to chat with you to learn more about your use cases and feedback on Kata Platform. You can send us your thoughts via email to \\",(0,e.jsx)(a.a,{href:\\"mailto:support@kata.ai\\",children:\\"support@kata.ai\\"}),\\" or join our community on \\",(0,e.jsx)(a.a,{href:\\"http://bit.ly/JoinTemanKata\\",children:\\"Slack\\"}),\\".\\"]}),`\\n`,(0,e.jsx)(\\"br\\",{}),`\\n`,(0,e.jsxs)(a.h2,{id:\\"322\\",children:[(0,e.jsx)(a.a,{className:\\"anchor\\",href:\\"#322\\",children:(0,e.jsx)(a.span,{className:\\"icon icon-link\\"})}),\\"3.2.2\\"]}),`\\n`,(0,e.jsxs)(a.h3,{id:\\"bot-studio-improvements\\",children:[(0,e.jsx)(a.a,{className:\\"anchor\\",href:\\"#bot-studio-improvements\\",children:(0,e.jsx)(a.span,{className:\\"icon icon-link\\"})}),\\"Bot Studio improvements\\"]}),`\\n`,(0,e.jsxs)(a.ul,{children:[`\\n`,(0,e.jsx)(a.li,{children:\\"We\'ve added the Quickreply and Confirm Template action templates, compatible for LINE Messenger.\\"}),`\\n`,(0,e.jsx)(a.li,{children:\\"Buttons can now be used to trigger a date/time picker.\\"}),`\\n`,(0,e.jsx)(a.li,{children:\\"Added the option to add Phrase NLU output for NLU entities with type Phrase.\\"}),`\\n`]}),`\\n`,(0,e.jsxs)(a.h3,{id:\\"deprecated-nlu-types\\",children:[(0,e.jsx)(a.a,{className:\\"anchor\\",href:\\"#deprecated-nlu-types\\",children:(0,e.jsx)(a.span,{className:\\"icon icon-link\\"})}),\\"Deprecated NLU Types\\"]}),`\\n`,(0,e.jsxs)(a.p,{children:[\\"On the Bot Studio NLU selector, we have deprecated NLU types \\",(0,e.jsx)(a.code,{children:\\"Verstand classifier\\"}),\\", \\",(0,e.jsx)(a.code,{children:\\"Verstand tagger\\"}),\\" and \\",(0,e.jsx)(a.code,{children:\\"Verstand retrieval\\"}),\\". New NLUs created can no longer have these types.\\"]}),`\\n`,(0,e.jsxs)(a.h3,{id:\\"bug-fixes-2\\",children:[(0,e.jsx)(a.a,{className:\\"anchor\\",href:\\"#bug-fixes-2\\",children:(0,e.jsx)(a.span,{className:\\"icon icon-link\\"})}),\\"Bug fixes\\"]}),`\\n`,(0,e.jsxs)(a.ul,{children:[`\\n`,(0,e.jsxs)(a.li,{children:[(0,e.jsx)(a.strong,{children:\\"Bot Studio:\\"}),\\" Fixed incorrect KataML generated when creating CMS action.\\"]}),`\\n`,(0,e.jsxs)(a.li,{children:[(0,e.jsx)(a.strong,{children:\\"Bot Studio:\\"}),\\" Fixed issue where onEnter mapping is stringified.\\"]}),`\\n`,(0,e.jsxs)(a.li,{children:[(0,e.jsx)(a.strong,{children:\\"NL Studio:\\"}),\\" Fixed unable to inherit NLU.\\"]}),`\\n`,(0,e.jsxs)(a.li,{children:[(0,e.jsx)(a.strong,{children:\\"NL Studio:\\"}),\\" Fixed searching inherit and root NLU.\\"]}),`\\n`,(0,e.jsxs)(a.li,{children:[(0,e.jsx)(a.strong,{children:\\"NL Studio:\\"}),\\" Fixed various display issues with training + prediction log.\\"]}),`\\n`]}),`\\n`,(0,e.jsx)(\\"br\\",{}),`\\n`,(0,e.jsxs)(a.h2,{id:\\"320\\",children:[(0,e.jsx)(a.a,{className:\\"anchor\\",href:\\"#320\\",children:(0,e.jsx)(a.span,{className:\\"icon icon-link\\"})}),\\"3.2.0\\"]}),`\\n`,(0,e.jsxs)(a.h3,{id:\\"super-model\\",children:[(0,e.jsx)(a.a,{className:\\"anchor\\",href:\\"#super-model\\",children:(0,e.jsx)(a.span,{className:\\"icon icon-link\\"})}),\\"Super Model\\"]}),`\\n`,(0,e.jsxs)(a.p,{children:[\\"Super Model is a highly maintained pre-built entity for Users to use without training. New projects would automatically have a Kata Entity, named \\",(0,e.jsx)(a.code,{children:\\"kata\\"}),\\", for tagging common task like person name, location, datetime, email, number, etc. For more details, \\",(0,e.jsx)(a.a,{href:\\"/nl-studio/super-model/\\",children:\\"click here\\"}),\\".\\"]}),`\\n`,(0,e.jsxs)(a.h3,{id:\\"channel-improvements\\",children:[(0,e.jsx)(a.a,{className:\\"anchor\\",href:\\"#channel-improvements\\",children:(0,e.jsx)(a.span,{className:\\"icon icon-link\\"})}),\\"Channel improvements\\"]}),`\\n`,(0,e.jsx)(a.p,{children:\\"Added support for WhatsApp channel. You can now enter your WhatsApp channel details in the platform.\\"}),`\\n`,(0,e.jsxs)(a.h3,{id:\\"bug-fixes-3\\",children:[(0,e.jsx)(a.a,{className:\\"anchor\\",href:\\"#bug-fixes-3\\",children:(0,e.jsx)(a.span,{className:\\"icon icon-link\\"})}),\\"Bug fixes\\"]}),`\\n`,(0,e.jsxs)(a.ul,{children:[`\\n`,(0,e.jsxs)(a.li,{children:[(0,e.jsx)(a.strong,{children:\\"Bot Studio:\\"}),\\" Fixed unable to update state in end state.\\"]}),`\\n`,(0,e.jsxs)(a.li,{children:[(0,e.jsx)(a.strong,{children:\\"NL Studio:\\"}),\\" Fixed missing field dictionary for entity type.\\"]}),`\\n`,(0,e.jsxs)(a.li,{children:[(0,e.jsx)(a.strong,{children:\\"NL Studio:\\"}),\\" NL settings now show the correct defined NLU language.\\"]}),`\\n`,(0,e.jsxs)(a.li,{children:[(0,e.jsx)(a.strong,{children:\\"Bot Studio:\\"}),\\" Fixed bug where some form errors were not shown correctly.\\"]}),`\\n`,(0,e.jsxs)(a.li,{children:[(0,e.jsx)(a.strong,{children:\\"Bot Studio:\\"}),\\" Fixed bug where the flows editor does not reflect the updates made in self-transition state.\\"]}),`\\n`]}),`\\n`,(0,e.jsx)(\\"br\\",{}),`\\n`,(0,e.jsxs)(a.h2,{id:\\"310\\",children:[(0,e.jsx)(a.a,{className:\\"anchor\\",href:\\"#310\\",children:(0,e.jsx)(a.span,{className:\\"icon icon-link\\"})}),\\"3.1.0\\"]}),`\\n`,(0,e.jsxs)(a.h3,{id:\\"bot-studio-improvements-1\\",children:[(0,e.jsx)(a.a,{className:\\"anchor\\",href:\\"#bot-studio-improvements-1\\",children:(0,e.jsx)(a.span,{className:\\"icon icon-link\\"})}),\\"Bot Studio Improvements\\"]}),`\\n`,(0,e.jsxs)(a.ul,{children:[`\\n`,(0,e.jsx)(a.li,{children:\'Added \\"CMS\\" action. Now you can search/select CMS elements when creating action on Bot Studio.\'}),`\\n`,(0,e.jsx)(a.li,{children:\\"Bot Studio now auto-saves your work as a draft.\\"}),`\\n`,(0,e.jsx)(a.li,{children:\\"CMS Studio now allows you to invite non-Kata Platform users to use Kata Dashboard.\\"}),`\\n`]}),`\\n`,(0,e.jsxs)(a.h3,{id:\\"kata-cli\\",children:[(0,e.jsx)(a.a,{className:\\"anchor\\",href:\\"#kata-cli\\",children:(0,e.jsx)(a.span,{className:\\"icon icon-link\\"})}),\\"kata-cli\\"]}),`\\n`,(0,e.jsx)(a.p,{children:\\"Kata-CLI now shows bulk training status:\\"}),`\\n`,(0,e.jsxs)(a.ul,{children:[`\\n`,(0,e.jsx)(a.li,{children:\\"Information if there is any active training job.\\"}),`\\n`,(0,e.jsx)(a.li,{children:\\"Error on specific training data.\\"}),`\\n`]}),`\\n`,(0,e.jsxs)(a.h3,{id:\\"bug-fixes-4\\",children:[(0,e.jsx)(a.a,{className:\\"anchor\\",href:\\"#bug-fixes-4\\",children:(0,e.jsx)(a.span,{className:\\"icon icon-link\\"})}),\\"Bug fixes\\"]}),`\\n`,(0,e.jsxs)(a.ul,{children:[`\\n`,(0,e.jsx)(a.li,{children:\'Fixed an issue that caused \\"Add Mapping\\" button to disappear after users click Single Mapping when creating method.\'}),`\\n`,(0,e.jsx)(a.li,{children:\\"Fixed an issue that caused users unable to search public NL when creating entity.\\"}),`\\n`,(0,e.jsx)(a.li,{children:\\"Fixed an issue that caused display on keywords field to not expand when users add more than 1 lines.\\"}),`\\n`,(0,e.jsx)(a.li,{children:\\"Fixed some display bugs.\\"}),`\\n`,(0,e.jsx)(a.li,{children:\\"Fixed crash when creating transition & intent.\\"}),`\\n`,(0,e.jsxs)(a.li,{children:[(0,e.jsx)(a.strong,{children:\\"kata-cli:\\"}),\\" Fixed a bug showing incorrect bot latest revision on Bot Studio after users push bot on Kata-CLI.\\"]}),`\\n`,(0,e.jsxs)(a.li,{children:[(0,e.jsx)(a.strong,{children:\\"kata-cli:\\"}),\\" Fixed data training order when users use bulk training feature. Now use last-in-first-out method.\\"]}),`\\n`]}),`\\n`,(0,e.jsx)(\\"br\\",{}),`\\n`,(0,e.jsxs)(a.h2,{id:\\"300\\",children:[(0,e.jsx)(a.a,{className:\\"anchor\\",href:\\"#300\\",children:(0,e.jsx)(a.span,{className:\\"icon icon-link\\"})}),\\"3.0.0\\"]}),`\\n`,(0,e.jsxs)(a.p,{children:[(0,e.jsx)(a.strong,{children:\\"Kata Platform 3.0\\"}),\\" is our biggest update yet. In this version, we are introducing several new features to help you build a more comprehensive solution for your needs.\\"]}),`\\n`,(0,e.jsxs)(a.h3,{id:\\"whats-new-7\\",children:[(0,e.jsx)(a.a,{className:\\"anchor\\",href:\\"#whats-new-7\\",children:(0,e.jsx)(a.span,{className:\\"icon icon-link\\"})}),\\"What\'s New\\"]}),`\\n`,(0,e.jsxs)(a.h4,{id:\\"projects\\",children:[(0,e.jsx)(a.a,{className:\\"anchor\\",href:\\"#projects\\",children:(0,e.jsx)(a.span,{className:\\"icon icon-link\\"})}),\\"Projects\\"]}),`\\n`,(0,e.jsx)(a.p,{children:\\"Manage your chatbot project under one roof. A project consists of one bot design, one NL, and one CMS. Each of them will have different versions you can maintain.\\"}),`\\n`,(0,e.jsx)(n,{children:(0,e.jsx)(t,{src:\\"/assets/images/products/kata-platform/release-notes/platform-3.0/kata-platform-3-0.jpg\\",alt:\\"Projects Image\\",layout:\\"responsive\\",naturalWidth:2560,naturalHeight:1500})}),`\\n`,(0,e.jsxs)(a.h4,{id:\\"cms-studio\\",children:[(0,e.jsx)(a.a,{className:\\"anchor\\",href:\\"#cms-studio\\",children:(0,e.jsx)(a.span,{className:\\"icon icon-link\\"})}),\\"CMS Studio\\"]}),`\\n`,(0,e.jsx)(a.p,{children:\\"Build your own CMS for your chatbot. Your client will have a full access to maintain the knowledge or content of your chatbot. Now you can build your own CMS based on your needs.\\"}),`\\n`,(0,e.jsx)(n,{children:(0,e.jsx)(t,{src:\\"/assets/images/products/kata-platform/release-notes/platform-3.0/cms-studio.webp\\",alt:\\"CMS Studio\\",layout:\\"responsive\\",naturalWidth:3358,naturalHeight:1844})}),`\\n`,(0,e.jsx)(a.p,{children:\\"Once you\'ve done building your own dashboard, you can invite users or clients to contribute to the dashboard and update your bot\'s knowledge easily. All in all, your dashboard will look like this:\\"}),`\\n`,(0,e.jsx)(n,{children:(0,e.jsx)(t,{src:\\"/assets/images/products/kata-platform/release-notes/platform-3.0/dashboard.jpg\\",alt:\\"Dashboard\\",layout:\\"responsive\\",naturalWidth:2880,naturalHeight:1500})}),`\\n`,(0,e.jsxs)(a.h4,{id:\\"nl-prediction-api\\",children:[(0,e.jsx)(a.a,{className:\\"anchor\\",href:\\"#nl-prediction-api\\",children:(0,e.jsx)(a.span,{className:\\"icon icon-link\\"})}),\\"NL Prediction API\\"]}),`\\n`,(0,e.jsx)(a.p,{children:`Build your own Natural Language using our NL Studio, and use it everywhere.\\nNow it supports:`}),`\\n`,(0,e.jsxs)(a.ul,{children:[`\\n`,(0,e.jsx)(a.li,{children:\\"Entity Recognition\\"}),`\\n`,(0,e.jsx)(a.li,{children:\\"Intent Classification\\"}),`\\n`,(0,e.jsx)(a.li,{children:\\"Sentiment Analysis\\"}),`\\n`]}),`\\n`,(0,e.jsxs)(a.h4,{id:\\"kata-design-language-system\\",children:[(0,e.jsx)(a.a,{className:\\"anchor\\",href:\\"#kata-design-language-system\\",children:(0,e.jsx)(a.span,{className:\\"icon icon-link\\"})}),\\"Kata Design Language System\\"]}),`\\n`,(0,e.jsxs)(a.h5,{id:\\"aksara\\",children:[(0,e.jsx)(a.a,{className:\\"anchor\\",href:\\"#aksara\\",children:(0,e.jsx)(a.span,{className:\\"icon icon-link\\"})}),\\"Aksara\\"]}),`\\n`,(0,e.jsx)(a.p,{children:\\"Aksara is our very own design language system. It contains foundations, voice and tone guidelines, component standards, and other guidelines that systematically improve quality, timeliness, and consistency to our product.\\"}),`\\n`,(0,e.jsxs)(a.h5,{id:\\"wicara\\",children:[(0,e.jsx)(a.a,{className:\\"anchor\\",href:\\"#wicara\\",children:(0,e.jsx)(a.span,{className:\\"icon icon-link\\"})}),\\"Wicara\\"]}),`\\n`,(0,e.jsx)(a.p,{children:\\"Previously known as kata-kit, Wicara is the implementation of Aksara Design Language using React framework. It is designed to be flexible and reusable react components.\\"}),`\\n`,(0,e.jsxs)(a.p,{children:[\\"Go to \\",(0,e.jsx)(a.a,{href:\\"http://aksara.kata.ai\\",children:\\"http://aksara.kata.ai\\"}),\\" to see our Design Language System.\\"]}),`\\n`,(0,e.jsxs)(a.p,{children:[\\"We hope Kata Platform 3.0 will help you build smarter chatbots in shorter development time. It is our mission to democratize AI and help the community to build chatbot solution. For any inquiries, contact us at \\",(0,e.jsx)(a.a,{href:\\"mailto:support@kata.ai\\",children:\\"support@kata.ai\\"}),\\".\\"]})]})}}var W=I;function c(i,s){throw new Error(\\"Expected \\"+(s?\\"component\\":\\"object\\")+\\" `\\"+i+\\"` to be defined: you likely forgot to import, pass, or provide it.\\")}return v(A);})();\\n;return Component;"},"_id":"kata-platform/release-notes/version.mdx","_raw":{"sourceFilePath":"kata-platform/release-notes/version.mdx","sourceFileName":"version.mdx","sourceFileDir":"kata-platform/release-notes","contentType":"mdx","flattenedPath":"kata-platform/release-notes/version"},"type":"KataPlatform","slug":["release-notes","version"],"excerpt":"\\n## 3.26"}');
;// CONCATENATED MODULE: ./.contentlayer/generated/KataPlatform/kata-platform__use-case__all-use-cases.mdx.json
const kata_platform_use_case_all_use_cases_mdx_namespaceObject = JSON.parse('{"id":"all-use-cases","section":"Use Case","title":"All Use Cases","prev":"kata-platform-features","next":"what-is-conversation-design","body":{"raw":"\\n### **Chatbots For Customer Service**\\n\\nBuild 24/7 virtual agent service to accommodate customers’ needs, such as answering common questions, accessing specific information, or assisting simple requests with seamless handoffs to human agents for complex issues.\\n\\n### **Chatbots For Customer Engagement**\\n\\nEngage and support your customers on their preferred platform at any time. Whether to share the newest product information, engage customers in a marketing campaign, or deliver a relevant and personal conversational experience for your customers.\\n","code":"var Component=(()=>{var h=Object.create;var o=Object.defineProperty;var u=Object.getOwnPropertyDescriptor;var g=Object.getOwnPropertyNames;var p=Object.getPrototypeOf,d=Object.prototype.hasOwnProperty;var c=e=>o(e,\\"__esModule\\",{value:!0});var f=(e,s)=>()=>(s||e((s={exports:{}}).exports,s),s.exports),x=(e,s)=>{for(var r in s)o(e,r,{get:s[r],enumerable:!0})},i=(e,s,r,t)=>{if(s&&typeof s==\\"object\\"||typeof s==\\"function\\")for(let a of g(s))!d.call(e,a)&&(r||a!==\\"default\\")&&o(e,a,{get:()=>s[a],enumerable:!(t=u(s,a))||t.enumerable});return e},v=(e,s)=>i(c(o(e!=null?h(p(e)):{},\\"default\\",!s&&e&&e.__esModule?{get:()=>e.default,enumerable:!0}:{value:e,enumerable:!0})),e),b=(e=>(s,r)=>e&&e.get(s)||(r=i(c({}),s,1),e&&e.set(s,r),r))(typeof WeakMap!=\\"undefined\\"?new WeakMap:0);var l=f((y,m)=>{m.exports=_jsx_runtime});var w={};x(w,{default:()=>_,frontmatter:()=>C});var n=v(l()),C={id:\\"all-use-cases\\",title:\\"All Use Cases\\",prev:\\"kata-platform-features\\",next:\\"what-is-conversation-design\\",section:\\"Use Case\\"};function j(e={}){let{wrapper:s}=e.components||{};return s?(0,n.jsx)(s,Object.assign({},e,{children:(0,n.jsx)(r,{})})):r();function r(){let t=Object.assign({h3:\\"h3\\",a:\\"a\\",span:\\"span\\",strong:\\"strong\\",p:\\"p\\"},e.components);return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsxs)(t.h3,{id:\\"chatbots-for-customer-service\\",children:[(0,n.jsx)(t.a,{className:\\"anchor\\",href:\\"#chatbots-for-customer-service\\",children:(0,n.jsx)(t.span,{className:\\"icon icon-link\\"})}),(0,n.jsx)(t.strong,{children:\\"Chatbots For Customer Service\\"})]}),`\\n`,(0,n.jsx)(t.p,{children:\\"Build 24/7 virtual agent service to accommodate customers\\\\u2019 needs, such as answering common questions, accessing specific information, or assisting simple requests with seamless handoffs to human agents for complex issues.\\"}),`\\n`,(0,n.jsxs)(t.h3,{id:\\"chatbots-for-customer-engagement\\",children:[(0,n.jsx)(t.a,{className:\\"anchor\\",href:\\"#chatbots-for-customer-engagement\\",children:(0,n.jsx)(t.span,{className:\\"icon icon-link\\"})}),(0,n.jsx)(t.strong,{children:\\"Chatbots For Customer Engagement\\"})]}),`\\n`,(0,n.jsx)(t.p,{children:\\"Engage and support your customers on their preferred platform at any time. Whether to share the newest product information, engage customers in a marketing campaign, or deliver a relevant and personal conversational experience for your customers.\\"})]})}}var _=j;return b(w);})();\\n;return Component;"},"_id":"kata-platform/use-case/all-use-cases.mdx","_raw":{"sourceFilePath":"kata-platform/use-case/all-use-cases.mdx","sourceFileName":"all-use-cases.mdx","sourceFileDir":"kata-platform/use-case","contentType":"mdx","flattenedPath":"kata-platform/use-case/all-use-cases"},"type":"KataPlatform","slug":["use-case","all-use-cases"],"excerpt":"\\n### **Chatbots For Customer Service**\\n\\nBuild 24/7 virtual agent service to accommodate customers’ needs, such as answering common questions, accessing specific information, or assisting simple requests with seamless handoffs to human agents for complex issues.\\n\\n### **Chatbots For Customer Engagement**\\n\\nEngage and support your customers on their preferred platform at any time"}');
;// CONCATENATED MODULE: ./.contentlayer/generated/allKataPlatforms.mjs
// NOTE This file is auto-generated by the Contentlayer CLI



























const allKataPlatforms = [
    kata_platform_documentation_content_analyze_your_bot_conversations_mdx_namespaceObject,
    kata_platform_documentation_content_designing_conversation_mdx_namespaceObject,
    kata_platform_documentation_content_error_log_mdx_namespaceObject,
    kata_platform_documentation_content_start_your_first_chatbot_mdx_namespaceObject,
    kata_platform_faqs_bot_development_faqs_mdx_namespaceObject,
    kata_platform_faqs_general_faqs_mdx_namespaceObject,
    kata_platform_glossary_coming_soon_mdx_namespaceObject,
    kata_platform_glossary_general_mdx_namespaceObject,
    kata_platform_glossary_inside_kata_flow_mdx_namespaceObject,
    kata_platform_glossary_kata_platform_mdx_namespaceObject,
    kata_platform_how_to_how_to_change_error_messages_in_your_chatbot_mdx_namespaceObject,
    kata_platform_how_to_how_to_deploy_your_chatbot_using_generic_channel_mdx_namespaceObject,
    kata_platform_how_to_how_to_improve_your_chatbot_intelligence_by_training_your_nlu_mdx_namespaceObject,
    kata_platform_how_to_how_to_use_bulk_training_for_faster_training_process_mdx_namespaceObject,
    kata_platform_how_to_how_to_use_kataml_to_build_your_chatbot_mdx_namespaceObject,
    kata_platform_how_to_how_to_use_nl_prediction_api_to_help_you_using_the_nlu_in_your_app_mdx_namespaceObject,
    kata_platform_how_to_how_to_use_nlu_threshold_to_enhance_customer_experience_mdx_namespaceObject,
    kata_platform_how_to_how_to_use_super_model_to_improve_your_bot_intelligence_mdx_namespaceObject,
    kata_platform_how_to_how_to_use_training_data_generator_to_automate_generating_training_data_mdx_namespaceObject,
    kata_platform_how_to_using_async_api_to_access_third_party_application_mdx_namespaceObject,
    kata_platform_how_to_using_custom_api_to_access_third_party_application_mdx_namespaceObject,
    kata_platform_how_to_using_sync_api_to_access_third_party_application_mdx_namespaceObject,
    kata_platform_introduction_about_mdx_namespaceObject,
    kata_platform_introduction_benefits_with_kata_platform_mdx_namespaceObject,
    kata_platform_introduction_kata_platform_features_mdx_namespaceObject,
    kata_platform_release_notes_version_mdx_namespaceObject,
    kata_platform_use_case_all_use_cases_mdx_namespaceObject
];


/***/ }),

/***/ 3697:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {


// EXPORTS
__webpack_require__.d(__webpack_exports__, {
  "W": () => (/* binding */ allQios)
});

;// CONCATENATED MODULE: ./.contentlayer/generated/Qios/qios__how-to__activate-your-chatbot.mdx.json
const qios_how_to_activate_your_chatbot_mdx_namespaceObject = JSON.parse('{"id":"activate-your-chatbot","section":"How To","title":"How To Activate Your Chatbot","prev":"manage-store","next":"set-up-bank-account","body":{"raw":"\\n## Set Up Chatbot Preference\\n\\n<FigureImage\\n  src=\\"/assets/images/products/qios/image10.webp\\"\\n  alt=\\"Qios Illustration\\"\\n  caption={{ title: \'Figure 1.\', description: \'Chatbot Preferences\' }}\\n  naturalHeight={922}\\n  naturalWidth={1408}\\n/>\\n\\n1. Go to **Pengaturan > Chatbot**.\\n2. Choose the option for **“Panggilan pelanggan”** and **“Panggilan chatbot”**, whether you want to use default setting or you want to modify the customer’s name and chatbot’s name.\\n3. Fill in the maximum distance to accept the order (the maximum distance from system is up to 30 km)\\n\\n## Activate WABA and Agent Bot through Kata Omnichat Account\\n\\n<YoutubeEmbedWrapper>\\n  <YoutubeEmbed\\n    id=\\"viq53pfMOFw\\"\\n    params=\\"v=viq53pfMOFw&list=PLy86Ve1I7c3iZrOzmqE16D0ZVIjoDFRQw\\"\\n    title=\\"How to Activate Your Chatbot\\"\\n  />\\n</YoutubeEmbedWrapper>\\n\\n1. Before opening your store, you have to create a WABA inbox, then set up and activate the agent bot through Kata Omnichat. Learn more about [Kata Omnichat](/kata-omnichat/configure-your-agent-chatbot/setup-agent-bot-in-kata-omnichat) and [creating the agent bot](/tutorials/create-simple-bot-handover-from-chatbot-to-agent).\\n\\n2. Copy and paste the access token from agent bot in Kata Omnichat to Qios Dashboard in **Pengaturan > WhatsApp** Business API and click **_“Aktifkan webhook URL”_** button.\\n\\n<FigureImage\\n  src=\\"/assets/images/products/qios/image11.webp\\"\\n  alt=\\"Qios Illustration\\"\\n  caption={{ title: \'Figure 2.\', description: \'Input Access Token to Connect Chatbot to Qios\' }}\\n  naturalHeight={830}\\n  naturalWidth={1408}\\n/>\\n\\n3. Copy and paste the webhook URL that has been generated to Kata Omnichat in **Agent Bot configuration**.\\n\\n<FigureImage\\n  src=\\"/assets/images/products/qios/image12.webp\\"\\n  alt=\\"Qios Illustration\\"\\n  caption={{ title: \'Figure 3.\', description: \'Webhook URL Generated from Access Token\' }}\\n  naturalHeight={788}\\n  naturalWidth={1408}\\n/>\\n","code":"var Component=(()=>{var g=Object.create;var r=Object.defineProperty;var p=Object.getOwnPropertyDescriptor;var b=Object.getOwnPropertyNames;var f=Object.getPrototypeOf,w=Object.prototype.hasOwnProperty;var l=n=>r(n,\\"__esModule\\",{value:!0});var k=(n,a)=>()=>(a||n((a={exports:{}}).exports,a),a.exports),x=(n,a)=>{for(var o in a)r(n,o,{get:a[o],enumerable:!0})},u=(n,a,o,e)=>{if(a&&typeof a==\\"object\\"||typeof a==\\"function\\")for(let i of b(a))!w.call(n,i)&&(o||i!==\\"default\\")&&r(n,i,{get:()=>a[i],enumerable:!(e=p(a,i))||e.enumerable});return n},A=(n,a)=>u(l(r(n!=null?g(f(n)):{},\\"default\\",!a&&n&&n.__esModule?{get:()=>n.default,enumerable:!0}:{value:n,enumerable:!0})),n),v=(n=>(a,o)=>n&&n.get(a)||(o=u(l({}),a,1),n&&n.set(a,o),o))(typeof WeakMap!=\\"undefined\\"?new WeakMap:0);var m=k((I,d)=>{d.exports=_jsx_runtime});var O={};x(O,{default:()=>F,frontmatter:()=>y});var t=A(m()),y={prev:\\"manage-store\\",id:\\"activate-your-chatbot\\",title:\\"How To Activate Your Chatbot\\",next:\\"set-up-bank-account\\",section:\\"How To\\"};function C(n={}){let{wrapper:a}=n.components||{};return a?(0,t.jsx)(a,Object.assign({},n,{children:(0,t.jsx)(o,{})})):o();function o(){let e=Object.assign({h2:\\"h2\\",a:\\"a\\",span:\\"span\\",ol:\\"ol\\",li:\\"li\\",strong:\\"strong\\",p:\\"p\\",em:\\"em\\"},n.components),{FigureImage:i,YoutubeEmbedWrapper:s,YoutubeEmbed:h}=e;return i||c(\\"FigureImage\\",!0),h||c(\\"YoutubeEmbed\\",!0),s||c(\\"YoutubeEmbedWrapper\\",!0),(0,t.jsxs)(t.Fragment,{children:[(0,t.jsxs)(e.h2,{id:\\"set-up-chatbot-preference\\",children:[(0,t.jsx)(e.a,{className:\\"anchor\\",href:\\"#set-up-chatbot-preference\\",children:(0,t.jsx)(e.span,{className:\\"icon icon-link\\"})}),\\"Set Up Chatbot Preference\\"]}),`\\n`,(0,t.jsx)(i,{src:\\"/assets/images/products/qios/image10.webp\\",alt:\\"Qios Illustration\\",caption:{title:\\"Figure 1.\\",description:\\"Chatbot Preferences\\"},naturalHeight:922,naturalWidth:1408}),`\\n`,(0,t.jsxs)(e.ol,{children:[`\\n`,(0,t.jsxs)(e.li,{children:[\\"Go to \\",(0,t.jsx)(e.strong,{children:\\"Pengaturan > Chatbot\\"}),\\".\\"]}),`\\n`,(0,t.jsxs)(e.li,{children:[\\"Choose the option for \\",(0,t.jsx)(e.strong,{children:\\"\\\\u201CPanggilan pelanggan\\\\u201D\\"}),\\" and \\",(0,t.jsx)(e.strong,{children:\\"\\\\u201CPanggilan chatbot\\\\u201D\\"}),\\", whether you want to use default setting or you want to modify the customer\\\\u2019s name and chatbot\\\\u2019s name.\\"]}),`\\n`,(0,t.jsx)(e.li,{children:\\"Fill in the maximum distance to accept the order (the maximum distance from system is up to 30 km)\\"}),`\\n`]}),`\\n`,(0,t.jsxs)(e.h2,{id:\\"activate-waba-and-agent-bot-through-kata-omnichat-account\\",children:[(0,t.jsx)(e.a,{className:\\"anchor\\",href:\\"#activate-waba-and-agent-bot-through-kata-omnichat-account\\",children:(0,t.jsx)(e.span,{className:\\"icon icon-link\\"})}),\\"Activate WABA and Agent Bot through Kata Omnichat Account\\"]}),`\\n`,(0,t.jsx)(s,{children:(0,t.jsx)(h,{id:\\"viq53pfMOFw\\",params:\\"v=viq53pfMOFw&list=PLy86Ve1I7c3iZrOzmqE16D0ZVIjoDFRQw\\",title:\\"How to Activate Your Chatbot\\"})}),`\\n`,(0,t.jsxs)(e.ol,{children:[`\\n`,(0,t.jsxs)(e.li,{children:[`\\n`,(0,t.jsxs)(e.p,{children:[\\"Before opening your store, you have to create a WABA inbox, then set up and activate the agent bot through Kata Omnichat. Learn more about \\",(0,t.jsx)(e.a,{href:\\"/kata-omnichat/configure-your-agent-chatbot/setup-agent-bot-in-kata-omnichat\\",children:\\"Kata Omnichat\\"}),\\" and \\",(0,t.jsx)(e.a,{href:\\"/tutorials/create-simple-bot-handover-from-chatbot-to-agent\\",children:\\"creating the agent bot\\"}),\\".\\"]}),`\\n`]}),`\\n`,(0,t.jsxs)(e.li,{children:[`\\n`,(0,t.jsxs)(e.p,{children:[\\"Copy and paste the access token from agent bot in Kata Omnichat to Qios Dashboard in \\",(0,t.jsx)(e.strong,{children:\\"Pengaturan > WhatsApp\\"}),\\" Business API and click \\",(0,t.jsx)(e.strong,{children:(0,t.jsx)(e.em,{children:\\"\\\\u201CAktifkan webhook URL\\\\u201D\\"})}),\\" button.\\"]}),`\\n`]}),`\\n`]}),`\\n`,(0,t.jsx)(i,{src:\\"/assets/images/products/qios/image11.webp\\",alt:\\"Qios Illustration\\",caption:{title:\\"Figure 2.\\",description:\\"Input Access Token to Connect Chatbot to Qios\\"},naturalHeight:830,naturalWidth:1408}),`\\n`,(0,t.jsxs)(e.ol,{start:\\"3\\",children:[`\\n`,(0,t.jsxs)(e.li,{children:[\\"Copy and paste the webhook URL that has been generated to Kata Omnichat in \\",(0,t.jsx)(e.strong,{children:\\"Agent Bot configuration\\"}),\\".\\"]}),`\\n`]}),`\\n`,(0,t.jsx)(i,{src:\\"/assets/images/products/qios/image12.webp\\",alt:\\"Qios Illustration\\",caption:{title:\\"Figure 3.\\",description:\\"Webhook URL Generated from Access Token\\"},naturalHeight:788,naturalWidth:1408})]})}}var F=C;function c(n,a){throw new Error(\\"Expected \\"+(a?\\"component\\":\\"object\\")+\\" `\\"+n+\\"` to be defined: you likely forgot to import, pass, or provide it.\\")}return v(O);})();\\n;return Component;"},"_id":"qios/how-to/activate-your-chatbot.mdx","_raw":{"sourceFilePath":"qios/how-to/activate-your-chatbot.mdx","sourceFileName":"activate-your-chatbot.mdx","sourceFileDir":"qios/how-to","contentType":"mdx","flattenedPath":"qios/how-to/activate-your-chatbot"},"type":"Qios","slug":["how-to","activate-your-chatbot"],"excerpt":"\\n## Set Up Chatbot Preference\\n\\n"}');
;// CONCATENATED MODULE: ./.contentlayer/generated/Qios/qios__how-to__general-setup.mdx.json
const qios_how_to_general_setup_mdx_namespaceObject = JSON.parse('{"id":"general-setup","section":"How To","title":"How To Setup","prev":"about","next":"manage-product","body":{"raw":"\\n<YoutubeEmbedWrapper>\\n  <YoutubeEmbed\\n    id=\\"eFWbrAObOXg\\"\\n    params=\\"v=eFWbrAObOXg&list=PLy86Ve1I7c3iZrOzmqE16D0ZVIjoDFRQw\\"\\n    title=\\"Qios: How to Setup\\"\\n  />\\n</YoutubeEmbedWrapper>\\n\\n## Self-onboarding\\n\\n<FigureImage\\n  src=\\"/assets/images/products/qios/image1.webp\\"\\n  alt=\\"Qios Illustration\\"\\n  caption={{ title: \'Figure 1.\', description: \'Qios Sign Up Page\' }}\\n  naturalHeight={1305}\\n  naturalWidth={2112}\\n/>\\n\\n1. Go to [https://dashboard.qios.co/](https://dashboard.qios.co/) and click **\\"Daftar\\"**. After that, fill in your **email** and **Password.**\\n\\n2. After clicking the **Daftar** button, you will get an email to verify your account\\n\\n3. After you verified your email, you will be redirected to the **Onboarding** page\\n\\n4. In the **Onboarding** page, you have to fill in the **Personal Information**, **Business Information**, **Create Store** and do some set up for your chatbot\\n\\n<FigureImage\\n  src=\\"/assets/images/products/qios/image2.webp\\"\\n  alt=\\"Qios Illustration\\"\\n  caption={{ title: \'Figure 2.\', description: \'Qios Self-Onboarding Step: Tentang Bisnis Kamu\' }}\\n  naturalHeight={1713}\\n  naturalWidth={2112}\\n/>\\n\\n<FigureImage\\n  src=\\"/assets/images/products/qios/image3.webp\\"\\n  alt=\\"Qios Illustration\\"\\n  caption={{ title: \'Figure 3.\', description: \'Qios Self-Onboarding Step: Buat Toko Pertamamu\' }}\\n  naturalHeight={2106}\\n  naturalWidth={2112}\\n/>\\n\\n5. After you fill all the forms, you will be redirected to **Qios Homepage**.\\n\\n## Home\\n\\n<FigureImage\\n  src=\\"/assets/images/products/qios/image4.webp\\"\\n  alt=\\"Qios Illustration\\"\\n  caption={{ title: \'Figure 4.\', description: \'Qios Home Page\' }}\\n  naturalHeight={1353}\\n  naturalWidth={2112}\\n/>\\n\\n1. As a first-time user, you can see that you need to add your product first, then set up the bot by connecting to WhatsApp through setting up the agent bot in Kata Omnichat\\n\\n2. If you’ve already added your product and connect your bot to WhatsApp, then you will be ready to start selling your product\\n\\n3. You can track the new order, the order that is ready to proceed and the finished order in this homepage. Also, you can see the product with low stock, best seller product and basic report\\n\\n## Login\\n\\n<FigureImage\\n  src=\\"/assets/images/products/qios/image5.webp\\"\\n  alt=\\"Qios Illustration\\"\\n  caption={{ title: \'Figure 5.\', description: \'Login to Qios\' }}\\n  naturalHeight={1305}\\n  naturalWidth={2112}\\n/>\\n\\n1. Go to [https://dashboard.qios.co/](https://dashboard.qios.co/)\\n\\n2. Fill in **Email** and **Password**, then click **Masuk**\\n","code":"var Component=(()=>{var g=Object.create;var s=Object.defineProperty;var m=Object.getOwnPropertyDescriptor;var b=Object.getOwnPropertyNames;var f=Object.getPrototypeOf,y=Object.prototype.hasOwnProperty;var d=t=>s(t,\\"__esModule\\",{value:!0});var w=(t,i)=>()=>(i||t((i={exports:{}}).exports,i),i.exports),F=(t,i)=>{for(var o in i)s(t,o,{get:i[o],enumerable:!0})},h=(t,i,o,n)=>{if(i&&typeof i==\\"object\\"||typeof i==\\"function\\")for(let r of b(i))!y.call(t,r)&&(o||r!==\\"default\\")&&s(t,r,{get:()=>i[r],enumerable:!(n=m(i,r))||n.enumerable});return t},I=(t,i)=>h(d(s(t!=null?g(f(t)):{},\\"default\\",!i&&t&&t.__esModule?{get:()=>t.default,enumerable:!0}:{value:t,enumerable:!0})),t),Q=(t=>(i,o)=>t&&t.get(i)||(o=h(d({}),i,1),t&&t.set(i,o),o))(typeof WeakMap!=\\"undefined\\"?new WeakMap:0);var p=w((q,u)=>{u.exports=_jsx_runtime});var H={};F(H,{default:()=>k,frontmatter:()=>x});var e=I(p()),x={id:\\"general-setup\\",title:\\"How To Setup\\",prev:\\"about\\",next:\\"manage-product\\",section:\\"How To\\"};function O(t={}){let{wrapper:i}=t.components||{};return i?(0,e.jsx)(i,Object.assign({},t,{children:(0,e.jsx)(o,{})})):o();function o(){let n=Object.assign({h2:\\"h2\\",a:\\"a\\",span:\\"span\\",ol:\\"ol\\",li:\\"li\\",p:\\"p\\",strong:\\"strong\\"},t.components),{YoutubeEmbedWrapper:r,YoutubeEmbed:c,FigureImage:a}=n;return a||l(\\"FigureImage\\",!0),c||l(\\"YoutubeEmbed\\",!0),r||l(\\"YoutubeEmbedWrapper\\",!0),(0,e.jsxs)(e.Fragment,{children:[(0,e.jsx)(r,{children:(0,e.jsx)(c,{id:\\"eFWbrAObOXg\\",params:\\"v=eFWbrAObOXg&list=PLy86Ve1I7c3iZrOzmqE16D0ZVIjoDFRQw\\",title:\\"Qios: How to Setup\\"})}),`\\n`,(0,e.jsxs)(n.h2,{id:\\"self-onboarding\\",children:[(0,e.jsx)(n.a,{className:\\"anchor\\",href:\\"#self-onboarding\\",children:(0,e.jsx)(n.span,{className:\\"icon icon-link\\"})}),\\"Self-onboarding\\"]}),`\\n`,(0,e.jsx)(a,{src:\\"/assets/images/products/qios/image1.webp\\",alt:\\"Qios Illustration\\",caption:{title:\\"Figure 1.\\",description:\\"Qios Sign Up Page\\"},naturalHeight:1305,naturalWidth:2112}),`\\n`,(0,e.jsxs)(n.ol,{children:[`\\n`,(0,e.jsxs)(n.li,{children:[`\\n`,(0,e.jsxs)(n.p,{children:[\\"Go to \\",(0,e.jsx)(n.a,{href:\\"https://dashboard.qios.co/\\",children:\\"https://dashboard.qios.co/\\"}),\\" and click \\",(0,e.jsx)(n.strong,{children:\'\\"Daftar\\"\'}),\\". After that, fill in your \\",(0,e.jsx)(n.strong,{children:\\"email\\"}),\\" and \\",(0,e.jsx)(n.strong,{children:\\"Password.\\"})]}),`\\n`]}),`\\n`,(0,e.jsxs)(n.li,{children:[`\\n`,(0,e.jsxs)(n.p,{children:[\\"After clicking the \\",(0,e.jsx)(n.strong,{children:\\"Daftar\\"}),\\" button, you will get an email to verify your account\\"]}),`\\n`]}),`\\n`,(0,e.jsxs)(n.li,{children:[`\\n`,(0,e.jsxs)(n.p,{children:[\\"After you verified your email, you will be redirected to the \\",(0,e.jsx)(n.strong,{children:\\"Onboarding\\"}),\\" page\\"]}),`\\n`]}),`\\n`,(0,e.jsxs)(n.li,{children:[`\\n`,(0,e.jsxs)(n.p,{children:[\\"In the \\",(0,e.jsx)(n.strong,{children:\\"Onboarding\\"}),\\" page, you have to fill in the \\",(0,e.jsx)(n.strong,{children:\\"Personal Information\\"}),\\", \\",(0,e.jsx)(n.strong,{children:\\"Business Information\\"}),\\", \\",(0,e.jsx)(n.strong,{children:\\"Create Store\\"}),\\" and do some set up for your chatbot\\"]}),`\\n`]}),`\\n`]}),`\\n`,(0,e.jsx)(a,{src:\\"/assets/images/products/qios/image2.webp\\",alt:\\"Qios Illustration\\",caption:{title:\\"Figure 2.\\",description:\\"Qios Self-Onboarding Step: Tentang Bisnis Kamu\\"},naturalHeight:1713,naturalWidth:2112}),`\\n`,(0,e.jsx)(a,{src:\\"/assets/images/products/qios/image3.webp\\",alt:\\"Qios Illustration\\",caption:{title:\\"Figure 3.\\",description:\\"Qios Self-Onboarding Step: Buat Toko Pertamamu\\"},naturalHeight:2106,naturalWidth:2112}),`\\n`,(0,e.jsxs)(n.ol,{start:\\"5\\",children:[`\\n`,(0,e.jsxs)(n.li,{children:[\\"After you fill all the forms, you will be redirected to \\",(0,e.jsx)(n.strong,{children:\\"Qios Homepage\\"}),\\".\\"]}),`\\n`]}),`\\n`,(0,e.jsxs)(n.h2,{id:\\"home\\",children:[(0,e.jsx)(n.a,{className:\\"anchor\\",href:\\"#home\\",children:(0,e.jsx)(n.span,{className:\\"icon icon-link\\"})}),\\"Home\\"]}),`\\n`,(0,e.jsx)(a,{src:\\"/assets/images/products/qios/image4.webp\\",alt:\\"Qios Illustration\\",caption:{title:\\"Figure 4.\\",description:\\"Qios Home Page\\"},naturalHeight:1353,naturalWidth:2112}),`\\n`,(0,e.jsxs)(n.ol,{children:[`\\n`,(0,e.jsxs)(n.li,{children:[`\\n`,(0,e.jsx)(n.p,{children:\\"As a first-time user, you can see that you need to add your product first, then set up the bot by connecting to WhatsApp through setting up the agent bot in Kata Omnichat\\"}),`\\n`]}),`\\n`,(0,e.jsxs)(n.li,{children:[`\\n`,(0,e.jsx)(n.p,{children:\\"If you\\\\u2019ve already added your product and connect your bot to WhatsApp, then you will be ready to start selling your product\\"}),`\\n`]}),`\\n`,(0,e.jsxs)(n.li,{children:[`\\n`,(0,e.jsx)(n.p,{children:\\"You can track the new order, the order that is ready to proceed and the finished order in this homepage. Also, you can see the product with low stock, best seller product and basic report\\"}),`\\n`]}),`\\n`]}),`\\n`,(0,e.jsxs)(n.h2,{id:\\"login\\",children:[(0,e.jsx)(n.a,{className:\\"anchor\\",href:\\"#login\\",children:(0,e.jsx)(n.span,{className:\\"icon icon-link\\"})}),\\"Login\\"]}),`\\n`,(0,e.jsx)(a,{src:\\"/assets/images/products/qios/image5.webp\\",alt:\\"Qios Illustration\\",caption:{title:\\"Figure 5.\\",description:\\"Login to Qios\\"},naturalHeight:1305,naturalWidth:2112}),`\\n`,(0,e.jsxs)(n.ol,{children:[`\\n`,(0,e.jsxs)(n.li,{children:[`\\n`,(0,e.jsxs)(n.p,{children:[\\"Go to \\",(0,e.jsx)(n.a,{href:\\"https://dashboard.qios.co/\\",children:\\"https://dashboard.qios.co/\\"})]}),`\\n`]}),`\\n`,(0,e.jsxs)(n.li,{children:[`\\n`,(0,e.jsxs)(n.p,{children:[\\"Fill in \\",(0,e.jsx)(n.strong,{children:\\"Email\\"}),\\" and \\",(0,e.jsx)(n.strong,{children:\\"Password\\"}),\\", then click \\",(0,e.jsx)(n.strong,{children:\\"Masuk\\"})]}),`\\n`]}),`\\n`]})]})}}var k=O;function l(t,i){throw new Error(\\"Expected \\"+(i?\\"component\\":\\"object\\")+\\" `\\"+t+\\"` to be defined: you likely forgot to import, pass, or provide it.\\")}return Q(H);})();\\n;return Component;"},"_id":"qios/how-to/general-setup.mdx","_raw":{"sourceFilePath":"qios/how-to/general-setup.mdx","sourceFileName":"general-setup.mdx","sourceFileDir":"qios/how-to","contentType":"mdx","flattenedPath":"qios/how-to/general-setup"},"type":"Qios","slug":["how-to","general-setup"],"excerpt":"\\n\\n  \\n\\n\\n## Self-onboarding\\n\\n"}');
;// CONCATENATED MODULE: ./.contentlayer/generated/Qios/qios__how-to__manage-order.mdx.json
const qios_how_to_manage_order_mdx_namespaceObject = JSON.parse('{"id":"manage-order","section":"How To","title":"How To Manage Order","prev":"set-up-bank-account","next":"release-notes-version","body":{"raw":"\\n<YoutubeEmbedWrapper>\\n  <YoutubeEmbed\\n    id=\\"rz8yh7mZVpg\\"\\n    params=\\"v=rz8yh7mZVpg&list=PLy86Ve1I7c3iZrOzmqE16D0ZVIjoDFRQw\\"\\n    title=\\"Qios: How to Manage Order\\"\\n  />\\n</YoutubeEmbedWrapper>\\n\\n## New Order\\n\\n<FigureImage\\n  src=\\"/assets/images/products/qios/image14.webp\\"\\n  alt=\\"Qios Illustration\\"\\n  caption={{ title: \'Figure 1.\', description: \'Order Page\' }}\\n  naturalHeight={810}\\n  naturalWidth={1408}\\n/>\\n\\n1. When new order coming, you can see the push notification and this notification will be stayed in notification bar in the\\n   right top of the page. 2. You have to manually confirm the order to avoid any mismatch stock between system and real stock.\\n2. To accept all the order in one orderID, you can click **“Semua tersedia”** button. 4. To accept some and reject the rest\\n   of them, you have to click **“Ada stok Kosong”** and switch off the toggle for the products that were out of stock. 5. To\\n   reject all the order in one orderID, you can click **“Tolak Pesanan”** button. 6. As admin, you can see the order in all\\n   stores by selecting the store in the dropdown menu. But, for store employee you can only see the order in the store that\\n   was 7. assigned to you.\\n\\n## Ready to Proceed\\n\\n1. After you confirmed the order, customer will either pay or cancel it.\\n2. If customer paid the order, then the order will be moved to **“Siap Diproses”** tab.\\n\\n<FigureImage\\n  src=\\"/assets/images/products/qios/image15.webp\\"\\n  alt=\\"Qios Illustration\\"\\n  caption={{ title: \'Figure 2.\', description: \'Order Paid and Ready to Proceed\' }}\\n  naturalHeight={724}\\n  naturalWidth={1408}\\n/>\\n\\n3. Your team can proceed the order and after it’s ready you can click **“Pesan Kurir”** button.\\n4. The system will automatically search for the courier.\\n5. After the order moved to **“Dalam pengiriman”** tab, the system will proceed it automatically based on when the courier’s action.\\n\\n<FigureImage\\n  src=\\"/assets/images/products/qios/image16.webp\\"\\n  alt=\\"Qios Illustration\\"\\n  caption={{ title: \'Figure 3.\', description: \'Order Paid\' }}\\n  naturalHeight={724}\\n  naturalWidth={1408}\\n/>\\n\\n6. The order will be automatically moved to “Selesai” tab if courier has been finished from their own system.\\n7. The order will be automatically moved to “Dibatalkan” tab if either you or your customer cancel it.\\n","code":"var Component=(()=>{var p=Object.create;var s=Object.defineProperty;var g=Object.getOwnPropertyDescriptor;var y=Object.getOwnPropertyNames;var f=Object.getPrototypeOf,b=Object.prototype.hasOwnProperty;var d=r=>s(r,\\"__esModule\\",{value:!0});var w=(r,o)=>()=>(o||r((o={exports:{}}).exports,o),o.exports),k=(r,o)=>{for(var n in o)s(r,n,{get:o[n],enumerable:!0})},h=(r,o,n,t)=>{if(o&&typeof o==\\"object\\"||typeof o==\\"function\\")for(let i of y(o))!b.call(r,i)&&(n||i!==\\"default\\")&&s(r,i,{get:()=>o[i],enumerable:!(t=g(o,i))||t.enumerable});return r},x=(r,o)=>h(d(s(r!=null?p(f(r)):{},\\"default\\",!o&&r&&r.__esModule?{get:()=>r.default,enumerable:!0}:{value:r,enumerable:!0})),r),j=(r=>(o,n)=>r&&r.get(o)||(n=h(d({}),o,1),r&&r.set(o,n),n))(typeof WeakMap!=\\"undefined\\"?new WeakMap:0);var m=w((F,u)=>{u.exports=_jsx_runtime});var O={};k(O,{default:()=>D,frontmatter:()=>v});var e=x(m()),v={prev:\\"set-up-bank-account\\",next:\\"release-notes-version\\",id:\\"manage-order\\",title:\\"How To Manage Order\\",section:\\"How To\\"};function I(r={}){let{wrapper:o}=r.components||{};return o?(0,e.jsx)(o,Object.assign({},r,{children:(0,e.jsx)(n,{})})):n();function n(){let t=Object.assign({h2:\\"h2\\",a:\\"a\\",span:\\"span\\",ol:\\"ol\\",li:\\"li\\",strong:\\"strong\\"},r.components),{YoutubeEmbedWrapper:i,YoutubeEmbed:l,FigureImage:a}=t;return a||c(\\"FigureImage\\",!0),l||c(\\"YoutubeEmbed\\",!0),i||c(\\"YoutubeEmbedWrapper\\",!0),(0,e.jsxs)(e.Fragment,{children:[(0,e.jsx)(i,{children:(0,e.jsx)(l,{id:\\"rz8yh7mZVpg\\",params:\\"v=rz8yh7mZVpg&list=PLy86Ve1I7c3iZrOzmqE16D0ZVIjoDFRQw\\",title:\\"Qios: How to Manage Order\\"})}),`\\n`,(0,e.jsxs)(t.h2,{id:\\"new-order\\",children:[(0,e.jsx)(t.a,{className:\\"anchor\\",href:\\"#new-order\\",children:(0,e.jsx)(t.span,{className:\\"icon icon-link\\"})}),\\"New Order\\"]}),`\\n`,(0,e.jsx)(a,{src:\\"/assets/images/products/qios/image14.webp\\",alt:\\"Qios Illustration\\",caption:{title:\\"Figure 1.\\",description:\\"Order Page\\"},naturalHeight:810,naturalWidth:1408}),`\\n`,(0,e.jsxs)(t.ol,{children:[`\\n`,(0,e.jsx)(t.li,{children:`When new order coming, you can see the push notification and this notification will be stayed in notification bar in the\\nright top of the page. 2. You have to manually confirm the order to avoid any mismatch stock between system and real stock.`}),`\\n`,(0,e.jsxs)(t.li,{children:[\\"To accept all the order in one orderID, you can click \\",(0,e.jsx)(t.strong,{children:\\"\\\\u201CSemua tersedia\\\\u201D\\"}),` button. 4. To accept some and reject the rest\\nof them, you have to click `,(0,e.jsx)(t.strong,{children:\\"\\\\u201CAda stok Kosong\\\\u201D\\"}),` and switch off the toggle for the products that were out of stock. 5. To\\nreject all the order in one orderID, you can click `,(0,e.jsx)(t.strong,{children:\\"\\\\u201CTolak Pesanan\\\\u201D\\"}),` button. 6. As admin, you can see the order in all\\nstores by selecting the store in the dropdown menu. But, for store employee you can only see the order in the store that\\nwas 7. assigned to you.`]}),`\\n`]}),`\\n`,(0,e.jsxs)(t.h2,{id:\\"ready-to-proceed\\",children:[(0,e.jsx)(t.a,{className:\\"anchor\\",href:\\"#ready-to-proceed\\",children:(0,e.jsx)(t.span,{className:\\"icon icon-link\\"})}),\\"Ready to Proceed\\"]}),`\\n`,(0,e.jsxs)(t.ol,{children:[`\\n`,(0,e.jsx)(t.li,{children:\\"After you confirmed the order, customer will either pay or cancel it.\\"}),`\\n`,(0,e.jsxs)(t.li,{children:[\\"If customer paid the order, then the order will be moved to \\",(0,e.jsx)(t.strong,{children:\\"\\\\u201CSiap Diproses\\\\u201D\\"}),\\" tab.\\"]}),`\\n`]}),`\\n`,(0,e.jsx)(a,{src:\\"/assets/images/products/qios/image15.webp\\",alt:\\"Qios Illustration\\",caption:{title:\\"Figure 2.\\",description:\\"Order Paid and Ready to Proceed\\"},naturalHeight:724,naturalWidth:1408}),`\\n`,(0,e.jsxs)(t.ol,{start:\\"3\\",children:[`\\n`,(0,e.jsxs)(t.li,{children:[\\"Your team can proceed the order and after it\\\\u2019s ready you can click \\",(0,e.jsx)(t.strong,{children:\\"\\\\u201CPesan Kurir\\\\u201D\\"}),\\" button.\\"]}),`\\n`,(0,e.jsx)(t.li,{children:\\"The system will automatically search for the courier.\\"}),`\\n`,(0,e.jsxs)(t.li,{children:[\\"After the order moved to \\",(0,e.jsx)(t.strong,{children:\\"\\\\u201CDalam pengiriman\\\\u201D\\"}),\\" tab, the system will proceed it automatically based on when the courier\\\\u2019s action.\\"]}),`\\n`]}),`\\n`,(0,e.jsx)(a,{src:\\"/assets/images/products/qios/image16.webp\\",alt:\\"Qios Illustration\\",caption:{title:\\"Figure 3.\\",description:\\"Order Paid\\"},naturalHeight:724,naturalWidth:1408}),`\\n`,(0,e.jsxs)(t.ol,{start:\\"6\\",children:[`\\n`,(0,e.jsx)(t.li,{children:\\"The order will be automatically moved to \\\\u201CSelesai\\\\u201D tab if courier has been finished from their own system.\\"}),`\\n`,(0,e.jsx)(t.li,{children:\\"The order will be automatically moved to \\\\u201CDibatalkan\\\\u201D tab if either you or your customer cancel it.\\"}),`\\n`]})]})}}var D=I;function c(r,o){throw new Error(\\"Expected \\"+(o?\\"component\\":\\"object\\")+\\" `\\"+r+\\"` to be defined: you likely forgot to import, pass, or provide it.\\")}return j(O);})();\\n;return Component;"},"_id":"qios/how-to/manage-order.mdx","_raw":{"sourceFilePath":"qios/how-to/manage-order.mdx","sourceFileName":"manage-order.mdx","sourceFileDir":"qios/how-to","contentType":"mdx","flattenedPath":"qios/how-to/manage-order"},"type":"Qios","slug":["how-to","manage-order"],"excerpt":"\\n\\n  \\n\\n\\n## New Order\\n\\n"}');
;// CONCATENATED MODULE: ./.contentlayer/generated/Qios/qios__how-to__manage-product.mdx.json
const qios_how_to_manage_product_mdx_namespaceObject = JSON.parse('{"id":"manage-product","section":"How To","title":"How To Manage Product","prev":"general-setup","next":"manage-store","body":{"raw":"\\n## Add Product\\n\\n<YoutubeEmbedWrapper>\\n  <YoutubeEmbed\\n    id=\\"B3JUihKdwX4\\"\\n    params=\\"v=B3JUihKdwX4&list=PLy86Ve1I7c3iZrOzmqE16D0ZVIjoDFRQw\\"\\n    title=\\"Qios - Manage Product\\"\\n  />\\n</YoutubeEmbedWrapper>\\n\\n1. Click **“Produk”** and choose **“Tambah secara manual”** or **“Upload CSV”**.\\n\\n<FigureImage\\n  src=\\"/assets/images/products/qios/image6.webp\\"\\n  alt=\\"Qios Illustration\\"\\n  caption={{ title: \'Figure 1.\', description: \'Add New Product\' }}\\n  naturalHeight={804}\\n  naturalWidth={1408}\\n/>\\n\\n2. If you choose **“Tambah secara manual”**, you have to fill in the fields, then click **“Tambahkan produk”**\\n\\n3. To bulky add product, you can choose **“Upload CSV”** and follow this template.\\n\\n## Modify Product (Edit, Delete, Change Availability)\\n\\n<FigureImage\\n  src=\\"/assets/images/products/qios/image7.webp\\"\\n  alt=\\"Qios Illustration\\"\\n  caption={{ title: \'Figure 3.\', description: \'Edit Product\' }}\\n  naturalHeight={1032}\\n  naturalWidth={1408}\\n/>\\n\\n1. To edit the product, you have to click the hyperlink in the name of each product\\n2. To delete the product, you have to click the **“Delete”** hyperlink\\n3. To change the availability of each product, you have to switch on/off the toggle\\n\\n## Generate Catalogue for Chatbot\\n\\n<FigureImage\\n  src=\\"/assets/images/products/qios/image8.webp\\"\\n  alt=\\"Qios Illustration\\"\\n  caption={{ title: \'Figure 4.\', description: \'Product Catalogue\' }}\\n  naturalHeight={1904}\\n  naturalWidth={1408}\\n/>\\n\\n1. Click the “**Katalog”** tab besides the **“Daftar produk”** tab to see all the products that you’ve uploaded. You can manage the appearance of the catalog view in customer facing (bot) through this feature\\n2. You can drag and move the thumbnail to rearrange the order and click **“Simpan”**\\n3. You can click **“Preview katalog”** to see how it will be displayed in customer facing\\n","code":"var Component=(()=>{var p=Object.create;var l=Object.defineProperty;var m=Object.getOwnPropertyDescriptor;var f=Object.getOwnPropertyNames;var b=Object.getPrototypeOf,y=Object.prototype.hasOwnProperty;var s=n=>l(n,\\"__esModule\\",{value:!0});var k=(n,a)=>()=>(a||n((a={exports:{}}).exports,a),a.exports),w=(n,a)=>{for(var i in a)l(n,i,{get:a[i],enumerable:!0})},h=(n,a,i,t)=>{if(a&&typeof a==\\"object\\"||typeof a==\\"function\\")for(let o of f(a))!y.call(n,o)&&(i||o!==\\"default\\")&&l(n,o,{get:()=>a[o],enumerable:!(t=m(a,o))||t.enumerable});return n},v=(n,a)=>h(s(l(n!=null?p(b(n)):{},\\"default\\",!a&&n&&n.__esModule?{get:()=>n.default,enumerable:!0}:{value:n,enumerable:!0})),n),x=(n=>(a,i)=>n&&n.get(a)||(i=h(s({}),a,1),n&&n.set(a,i),i))(typeof WeakMap!=\\"undefined\\"?new WeakMap:0);var g=k((F,u)=>{u.exports=_jsx_runtime});var E={};w(E,{default:()=>j,frontmatter:()=>C});var e=v(g()),C={prev:\\"general-setup\\",id:\\"manage-product\\",title:\\"How To Manage Product\\",next:\\"manage-store\\",section:\\"How To\\"};function P(n={}){let{wrapper:a}=n.components||{};return a?(0,e.jsx)(a,Object.assign({},n,{children:(0,e.jsx)(i,{})})):i();function i(){let t=Object.assign({h2:\\"h2\\",a:\\"a\\",span:\\"span\\",ol:\\"ol\\",li:\\"li\\",strong:\\"strong\\",p:\\"p\\"},n.components),{YoutubeEmbedWrapper:o,YoutubeEmbed:d,FigureImage:r}=t;return r||c(\\"FigureImage\\",!0),d||c(\\"YoutubeEmbed\\",!0),o||c(\\"YoutubeEmbedWrapper\\",!0),(0,e.jsxs)(e.Fragment,{children:[(0,e.jsxs)(t.h2,{id:\\"add-product\\",children:[(0,e.jsx)(t.a,{className:\\"anchor\\",href:\\"#add-product\\",children:(0,e.jsx)(t.span,{className:\\"icon icon-link\\"})}),\\"Add Product\\"]}),`\\n`,(0,e.jsx)(o,{children:(0,e.jsx)(d,{id:\\"B3JUihKdwX4\\",params:\\"v=B3JUihKdwX4&list=PLy86Ve1I7c3iZrOzmqE16D0ZVIjoDFRQw\\",title:\\"Qios - Manage Product\\"})}),`\\n`,(0,e.jsxs)(t.ol,{children:[`\\n`,(0,e.jsxs)(t.li,{children:[\\"Click \\",(0,e.jsx)(t.strong,{children:\\"\\\\u201CProduk\\\\u201D\\"}),\\" and choose \\",(0,e.jsx)(t.strong,{children:\\"\\\\u201CTambah secara manual\\\\u201D\\"}),\\" or \\",(0,e.jsx)(t.strong,{children:\\"\\\\u201CUpload CSV\\\\u201D\\"}),\\".\\"]}),`\\n`]}),`\\n`,(0,e.jsx)(r,{src:\\"/assets/images/products/qios/image6.webp\\",alt:\\"Qios Illustration\\",caption:{title:\\"Figure 1.\\",description:\\"Add New Product\\"},naturalHeight:804,naturalWidth:1408}),`\\n`,(0,e.jsxs)(t.ol,{start:\\"2\\",children:[`\\n`,(0,e.jsxs)(t.li,{children:[`\\n`,(0,e.jsxs)(t.p,{children:[\\"If you choose \\",(0,e.jsx)(t.strong,{children:\\"\\\\u201CTambah secara manual\\\\u201D\\"}),\\", you have to fill in the fields, then click \\",(0,e.jsx)(t.strong,{children:\\"\\\\u201CTambahkan produk\\\\u201D\\"})]}),`\\n`]}),`\\n`,(0,e.jsxs)(t.li,{children:[`\\n`,(0,e.jsxs)(t.p,{children:[\\"To bulky add product, you can choose \\",(0,e.jsx)(t.strong,{children:\\"\\\\u201CUpload CSV\\\\u201D\\"}),\\" and follow this template.\\"]}),`\\n`]}),`\\n`]}),`\\n`,(0,e.jsxs)(t.h2,{id:\\"modify-product-edit-delete-change-availability\\",children:[(0,e.jsx)(t.a,{className:\\"anchor\\",href:\\"#modify-product-edit-delete-change-availability\\",children:(0,e.jsx)(t.span,{className:\\"icon icon-link\\"})}),\\"Modify Product (Edit, Delete, Change Availability)\\"]}),`\\n`,(0,e.jsx)(r,{src:\\"/assets/images/products/qios/image7.webp\\",alt:\\"Qios Illustration\\",caption:{title:\\"Figure 3.\\",description:\\"Edit Product\\"},naturalHeight:1032,naturalWidth:1408}),`\\n`,(0,e.jsxs)(t.ol,{children:[`\\n`,(0,e.jsx)(t.li,{children:\\"To edit the product, you have to click the hyperlink in the name of each product\\"}),`\\n`,(0,e.jsxs)(t.li,{children:[\\"To delete the product, you have to click the \\",(0,e.jsx)(t.strong,{children:\\"\\\\u201CDelete\\\\u201D\\"}),\\" hyperlink\\"]}),`\\n`,(0,e.jsx)(t.li,{children:\\"To change the availability of each product, you have to switch on/off the toggle\\"}),`\\n`]}),`\\n`,(0,e.jsxs)(t.h2,{id:\\"generate-catalogue-for-chatbot\\",children:[(0,e.jsx)(t.a,{className:\\"anchor\\",href:\\"#generate-catalogue-for-chatbot\\",children:(0,e.jsx)(t.span,{className:\\"icon icon-link\\"})}),\\"Generate Catalogue for Chatbot\\"]}),`\\n`,(0,e.jsx)(r,{src:\\"/assets/images/products/qios/image8.webp\\",alt:\\"Qios Illustration\\",caption:{title:\\"Figure 4.\\",description:\\"Product Catalogue\\"},naturalHeight:1904,naturalWidth:1408}),`\\n`,(0,e.jsxs)(t.ol,{children:[`\\n`,(0,e.jsxs)(t.li,{children:[\\"Click the \\\\u201C\\",(0,e.jsx)(t.strong,{children:\\"Katalog\\\\u201D\\"}),\\" tab besides the \\",(0,e.jsx)(t.strong,{children:\\"\\\\u201CDaftar produk\\\\u201D\\"}),\\" tab to see all the products that you\\\\u2019ve uploaded. You can manage the appearance of the catalog view in customer facing (bot) through this feature\\"]}),`\\n`,(0,e.jsxs)(t.li,{children:[\\"You can drag and move the thumbnail to rearrange the order and click \\",(0,e.jsx)(t.strong,{children:\\"\\\\u201CSimpan\\\\u201D\\"})]}),`\\n`,(0,e.jsxs)(t.li,{children:[\\"You can click \\",(0,e.jsx)(t.strong,{children:\\"\\\\u201CPreview katalog\\\\u201D\\"}),\\" to see how it will be displayed in customer facing\\"]}),`\\n`]})]})}}var j=P;function c(n,a){throw new Error(\\"Expected \\"+(a?\\"component\\":\\"object\\")+\\" `\\"+n+\\"` to be defined: you likely forgot to import, pass, or provide it.\\")}return x(E);})();\\n;return Component;"},"_id":"qios/how-to/manage-product.mdx","_raw":{"sourceFilePath":"qios/how-to/manage-product.mdx","sourceFileName":"manage-product.mdx","sourceFileDir":"qios/how-to","contentType":"mdx","flattenedPath":"qios/how-to/manage-product"},"type":"Qios","slug":["how-to","manage-product"],"excerpt":"\\n## Add Product\\n\\n\\n  \\n\\n\\n1. Click **“Produk”** and choose **“Tambah secara manual”** or **“Upload CSV”**"}');
;// CONCATENATED MODULE: ./.contentlayer/generated/Qios/qios__how-to__manage-store.mdx.json
const qios_how_to_manage_store_mdx_namespaceObject = JSON.parse('{"id":"manage-store","section":"How To","title":"How To Manage Store","prev":"manage-product","next":"activate-your-chatbot","body":{"raw":"\\n## Add a New Store\\n\\n<YoutubeEmbedWrapper>\\n  <YoutubeEmbed\\n    id=\\"dLcMLqLrp9U\\"\\n    params=\\"v=dLcMLqLrp9U&list=PLy86Ve1I7c3iZrOzmqE16D0ZVIjoDFRQw\\"\\n    title=\\"Qios - Manage Product\\"\\n  />\\n</YoutubeEmbedWrapper>\\n\\n1. You can add a store from the onboarding steps or from **“Toko”** menu.\\n\\n<FigureImage\\n  src=\\"/assets/images/products/qios/image9.webp\\"\\n  alt=\\"Qios Illustration\\"\\n  caption={{ title: \'Figure 1.\', description: \'Add a New Store\' }}\\n  naturalHeight={1404}\\n  naturalWidth={1408}\\n/>\\n\\n2. If you add store from **“Toko”** menu, you have to click **“Tambah toko”** button first.\\n\\n3. Fill in all the fields, then click **“Tambahkan toko”**.\\n\\n## Modify Store\\n\\n1. To edit the store, you have to click the hyperlink in the name of each store.\\n2. To delete the store, you have to click the **“Delete”** hyperlink.\\n3. To change the opening of each store, you have to switch on/off the toggle.\\n","code":"var Component=(()=>{var p=Object.create;var a=Object.defineProperty;var g=Object.getOwnPropertyDescriptor;var f=Object.getOwnPropertyNames;var b=Object.getPrototypeOf,y=Object.prototype.hasOwnProperty;var d=n=>a(n,\\"__esModule\\",{value:!0});var k=(n,t)=>()=>(t||n((t={exports:{}}).exports,t),t.exports),w=(n,t)=>{for(var r in t)a(n,r,{get:t[r],enumerable:!0})},h=(n,t,r,o)=>{if(t&&typeof t==\\"object\\"||typeof t==\\"function\\")for(let i of f(t))!y.call(n,i)&&(r||i!==\\"default\\")&&a(n,i,{get:()=>t[i],enumerable:!(o=g(t,i))||o.enumerable});return n},x=(n,t)=>h(d(a(n!=null?p(b(n)):{},\\"default\\",!t&&n&&n.__esModule?{get:()=>n.default,enumerable:!0}:{value:n,enumerable:!0})),n),j=(n=>(t,r)=>n&&n.get(t)||(r=h(d({}),t,1),n&&n.set(t,r),r))(typeof WeakMap!=\\"undefined\\"?new WeakMap:0);var m=k((E,u)=>{u.exports=_jsx_runtime});var L={};w(L,{default:()=>v,frontmatter:()=>M});var e=x(m()),M={prev:\\"manage-product\\",id:\\"manage-store\\",title:\\"How To Manage Store\\",next:\\"activate-your-chatbot\\",section:\\"How To\\"};function T(n={}){let{wrapper:t}=n.components||{};return t?(0,e.jsx)(t,Object.assign({},n,{children:(0,e.jsx)(r,{})})):r();function r(){let o=Object.assign({h2:\\"h2\\",a:\\"a\\",span:\\"span\\",ol:\\"ol\\",li:\\"li\\",strong:\\"strong\\",p:\\"p\\"},n.components),{YoutubeEmbedWrapper:i,YoutubeEmbed:s,FigureImage:l}=o;return l||c(\\"FigureImage\\",!0),s||c(\\"YoutubeEmbed\\",!0),i||c(\\"YoutubeEmbedWrapper\\",!0),(0,e.jsxs)(e.Fragment,{children:[(0,e.jsxs)(o.h2,{id:\\"add-a-new-store\\",children:[(0,e.jsx)(o.a,{className:\\"anchor\\",href:\\"#add-a-new-store\\",children:(0,e.jsx)(o.span,{className:\\"icon icon-link\\"})}),\\"Add a New Store\\"]}),`\\n`,(0,e.jsx)(i,{children:(0,e.jsx)(s,{id:\\"dLcMLqLrp9U\\",params:\\"v=dLcMLqLrp9U&list=PLy86Ve1I7c3iZrOzmqE16D0ZVIjoDFRQw\\",title:\\"Qios - Manage Product\\"})}),`\\n`,(0,e.jsxs)(o.ol,{children:[`\\n`,(0,e.jsxs)(o.li,{children:[\\"You can add a store from the onboarding steps or from \\",(0,e.jsx)(o.strong,{children:\\"\\\\u201CToko\\\\u201D\\"}),\\" menu.\\"]}),`\\n`]}),`\\n`,(0,e.jsx)(l,{src:\\"/assets/images/products/qios/image9.webp\\",alt:\\"Qios Illustration\\",caption:{title:\\"Figure 1.\\",description:\\"Add a New Store\\"},naturalHeight:1404,naturalWidth:1408}),`\\n`,(0,e.jsxs)(o.ol,{start:\\"2\\",children:[`\\n`,(0,e.jsxs)(o.li,{children:[`\\n`,(0,e.jsxs)(o.p,{children:[\\"If you add store from \\",(0,e.jsx)(o.strong,{children:\\"\\\\u201CToko\\\\u201D\\"}),\\" menu, you have to click \\",(0,e.jsx)(o.strong,{children:\\"\\\\u201CTambah toko\\\\u201D\\"}),\\" button first.\\"]}),`\\n`]}),`\\n`,(0,e.jsxs)(o.li,{children:[`\\n`,(0,e.jsxs)(o.p,{children:[\\"Fill in all the fields, then click \\",(0,e.jsx)(o.strong,{children:\\"\\\\u201CTambahkan toko\\\\u201D\\"}),\\".\\"]}),`\\n`]}),`\\n`]}),`\\n`,(0,e.jsxs)(o.h2,{id:\\"modify-store\\",children:[(0,e.jsx)(o.a,{className:\\"anchor\\",href:\\"#modify-store\\",children:(0,e.jsx)(o.span,{className:\\"icon icon-link\\"})}),\\"Modify Store\\"]}),`\\n`,(0,e.jsxs)(o.ol,{children:[`\\n`,(0,e.jsx)(o.li,{children:\\"To edit the store, you have to click the hyperlink in the name of each store.\\"}),`\\n`,(0,e.jsxs)(o.li,{children:[\\"To delete the store, you have to click the \\",(0,e.jsx)(o.strong,{children:\\"\\\\u201CDelete\\\\u201D\\"}),\\" hyperlink.\\"]}),`\\n`,(0,e.jsx)(o.li,{children:\\"To change the opening of each store, you have to switch on/off the toggle.\\"}),`\\n`]})]})}}var v=T;function c(n,t){throw new Error(\\"Expected \\"+(t?\\"component\\":\\"object\\")+\\" `\\"+n+\\"` to be defined: you likely forgot to import, pass, or provide it.\\")}return j(L);})();\\n;return Component;"},"_id":"qios/how-to/manage-store.mdx","_raw":{"sourceFilePath":"qios/how-to/manage-store.mdx","sourceFileName":"manage-store.mdx","sourceFileDir":"qios/how-to","contentType":"mdx","flattenedPath":"qios/how-to/manage-store"},"type":"Qios","slug":["how-to","manage-store"],"excerpt":"\\n## Add a New Store\\n\\n\\n  \\n\\n\\n1. You can add a store from the onboarding steps or from **“Toko”** menu"}');
;// CONCATENATED MODULE: ./.contentlayer/generated/Qios/qios__how-to__set-up-bank-account.mdx.json
const qios_how_to_set_up_bank_account_mdx_namespaceObject = JSON.parse('{"id":"set-up-bank-account","section":"How To","title":"How To Set Up Bank Account","prev":"activate-your-chatbot","next":"manage-order","body":{"raw":"\\n## Set Up Bank Account Information\\n\\n<FigureImage\\n  src=\\"/assets/images/products/qios/image13.webp\\"\\n  alt=\\"Qios Illustration\\"\\n  caption={{ title: \'Figure 1.\', description: \'Set Up Bank Account\' }}\\n  naturalHeight={808}\\n  naturalWidth={1408}\\n/>\\n\\n1. Go to **Pengaturan > Rekening**.\\n2. Fill in all the fields for you bank account information.\\n3. This information will be saved for manual disbursement that will be done by our finance team by weekly.\\n","code":"var Component=(()=>{var m=Object.create;var r=Object.defineProperty;var d=Object.getOwnPropertyDescriptor;var p=Object.getOwnPropertyNames;var h=Object.getPrototypeOf,f=Object.prototype.hasOwnProperty;var c=n=>r(n,\\"__esModule\\",{value:!0});var g=(n,e)=>()=>(e||n((e={exports:{}}).exports,e),e.exports),b=(n,e)=>{for(var i in e)r(n,i,{get:e[i],enumerable:!0})},s=(n,e,i,o)=>{if(e&&typeof e==\\"object\\"||typeof e==\\"function\\")for(let a of p(e))!f.call(n,a)&&(i||a!==\\"default\\")&&r(n,a,{get:()=>e[a],enumerable:!(o=d(e,a))||o.enumerable});return n},x=(n,e)=>s(c(r(n!=null?m(h(n)):{},\\"default\\",!e&&n&&n.__esModule?{get:()=>n.default,enumerable:!0}:{value:n,enumerable:!0})),n),k=(n=>(e,i)=>n&&n.get(e)||(i=s(c({}),e,1),n&&n.set(e,i),i))(typeof WeakMap!=\\"undefined\\"?new WeakMap:0);var u=g((I,l)=>{l.exports=_jsx_runtime});var F={};b(F,{default:()=>y,frontmatter:()=>w});var t=x(u()),w={id:\\"set-up-bank-account\\",prev:\\"activate-your-chatbot\\",next:\\"manage-order\\",title:\\"How To Set Up Bank Account\\",section:\\"How To\\"};function j(n={}){let{wrapper:e}=n.components||{};return e?(0,t.jsx)(e,Object.assign({},n,{children:(0,t.jsx)(i,{})})):i();function i(){let o=Object.assign({h2:\\"h2\\",a:\\"a\\",span:\\"span\\",ol:\\"ol\\",li:\\"li\\",strong:\\"strong\\"},n.components),{FigureImage:a}=o;return a||_(\\"FigureImage\\",!0),(0,t.jsxs)(t.Fragment,{children:[(0,t.jsxs)(o.h2,{id:\\"set-up-bank-account-information\\",children:[(0,t.jsx)(o.a,{className:\\"anchor\\",href:\\"#set-up-bank-account-information\\",children:(0,t.jsx)(o.span,{className:\\"icon icon-link\\"})}),\\"Set Up Bank Account Information\\"]}),`\\n`,(0,t.jsx)(a,{src:\\"/assets/images/products/qios/image13.webp\\",alt:\\"Qios Illustration\\",caption:{title:\\"Figure 1.\\",description:\\"Set Up Bank Account\\"},naturalHeight:808,naturalWidth:1408}),`\\n`,(0,t.jsxs)(o.ol,{children:[`\\n`,(0,t.jsxs)(o.li,{children:[\\"Go to \\",(0,t.jsx)(o.strong,{children:\\"Pengaturan > Rekening\\"}),\\".\\"]}),`\\n`,(0,t.jsx)(o.li,{children:\\"Fill in all the fields for you bank account information.\\"}),`\\n`,(0,t.jsx)(o.li,{children:\\"This information will be saved for manual disbursement that will be done by our finance team by weekly.\\"}),`\\n`]})]})}}var y=j;function _(n,e){throw new Error(\\"Expected \\"+(e?\\"component\\":\\"object\\")+\\" `\\"+n+\\"` to be defined: you likely forgot to import, pass, or provide it.\\")}return k(F);})();\\n;return Component;"},"_id":"qios/how-to/set-up-bank-account.mdx","_raw":{"sourceFilePath":"qios/how-to/set-up-bank-account.mdx","sourceFileName":"set-up-bank-account.mdx","sourceFileDir":"qios/how-to","contentType":"mdx","flattenedPath":"qios/how-to/set-up-bank-account"},"type":"Qios","slug":["how-to","set-up-bank-account"],"excerpt":"\\n## Set Up Bank Account Information\\n\\n"}');
;// CONCATENATED MODULE: ./.contentlayer/generated/Qios/qios__introduction__about.mdx.json
const qios_introduction_about_mdx_namespaceObject = JSON.parse('{"id":"about","section":"Introduction","hiddenTitle":"About Qios","next":"general-setup","body":{"raw":"\\n<ImageWrapper>\\n  <NextImage\\n    src=\\"/assets/images/products/qios/image0.webp\\"\\n    alt=\\"Qios Illustration\\"\\n    naturalWidth={2106}\\n    naturalHeight={1278}\\n  />\\n</ImageWrapper>\\n\\n# About Qios\\n\\nQios is a chat-based commerce platform. For business owners, it sounds familiar to handle transactions through chat and what comes next is when their team can’t handle it well due to too many order chats coming in a day. Qios comes to help businesses handling their day-to-day transactions using chatbot. With Qios, you will get the end-to-end experience, from serving customers through chat bot to managing store, inventory and order through our own merchant dashboard. To make it more one stop solution, you will not only get the dashboard to handle transactions but you will also get the integration with our customer service dashboard, Kata Omnichat.\\n","code":"var Component=(()=>{var m=Object.create;var r=Object.defineProperty;var g=Object.getOwnPropertyDescriptor;var p=Object.getOwnPropertyNames;var b=Object.getPrototypeOf,x=Object.prototype.hasOwnProperty;var c=t=>r(t,\\"__esModule\\",{value:!0});var f=(t,e)=>()=>(e||t((e={exports:{}}).exports,e),e.exports),w=(t,e)=>{for(var n in e)r(t,n,{get:e[n],enumerable:!0})},h=(t,e,n,a)=>{if(e&&typeof e==\\"object\\"||typeof e==\\"function\\")for(let s of p(e))!x.call(t,s)&&(n||s!==\\"default\\")&&r(t,s,{get:()=>e[s],enumerable:!(a=g(e,s))||a.enumerable});return t},y=(t,e)=>h(c(r(t!=null?m(b(t)):{},\\"default\\",!e&&t&&t.__esModule?{get:()=>t.default,enumerable:!0}:{value:t,enumerable:!0})),t),j=(t=>(e,n)=>t&&t.get(e)||(n=h(c({}),e,1),t&&t.set(e,n),n))(typeof WeakMap!=\\"undefined\\"?new WeakMap:0);var l=f((N,d)=>{d.exports=_jsx_runtime});var v={};w(v,{default:()=>Q,frontmatter:()=>_});var o=y(l()),_={id:\\"about\\",next:\\"general-setup\\",section:\\"Introduction\\",hiddenTitle:\\"About Qios\\"};function I(t={}){let{wrapper:e}=t.components||{};return e?(0,o.jsx)(e,Object.assign({},t,{children:(0,o.jsx)(n,{})})):n();function n(){let a=Object.assign({h1:\\"h1\\",a:\\"a\\",span:\\"span\\",p:\\"p\\"},t.components),{ImageWrapper:s,NextImage:i}=a;return s||u(\\"ImageWrapper\\",!0),i||u(\\"NextImage\\",!0),(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(s,{children:(0,o.jsx)(i,{src:\\"/assets/images/products/qios/image0.webp\\",alt:\\"Qios Illustration\\",naturalWidth:2106,naturalHeight:1278})}),`\\n`,(0,o.jsxs)(a.h1,{id:\\"about-qios\\",children:[(0,o.jsx)(a.a,{className:\\"anchor\\",href:\\"#about-qios\\",children:(0,o.jsx)(a.span,{className:\\"icon icon-link\\"})}),\\"About Qios\\"]}),`\\n`,(0,o.jsx)(a.p,{children:\\"Qios is a chat-based commerce platform. For business owners, it sounds familiar to handle transactions through chat and what comes next is when their team can\\\\u2019t handle it well due to too many order chats coming in a day. Qios comes to help businesses handling their day-to-day transactions using chatbot. With Qios, you will get the end-to-end experience, from serving customers through chat bot to managing store, inventory and order through our own merchant dashboard. To make it more one stop solution, you will not only get the dashboard to handle transactions but you will also get the integration with our customer service dashboard, Kata Omnichat.\\"})]})}}var Q=I;function u(t,e){throw new Error(\\"Expected \\"+(e?\\"component\\":\\"object\\")+\\" `\\"+t+\\"` to be defined: you likely forgot to import, pass, or provide it.\\")}return j(v);})();\\n;return Component;"},"_id":"qios/introduction/about.mdx","_raw":{"sourceFilePath":"qios/introduction/about.mdx","sourceFileName":"about.mdx","sourceFileDir":"qios/introduction","contentType":"mdx","flattenedPath":"qios/introduction/about"},"type":"Qios","slug":["introduction","about"],"excerpt":"\\n\\n  \\n\\n\\n# About Qios\\n\\nQios is a chat-based commerce platform"}');
;// CONCATENATED MODULE: ./.contentlayer/generated/Qios/qios__release-notes__version.mdx.json
const qios_release_notes_version_mdx_namespaceObject = JSON.parse('{"id":"release-notes-version","section":"Release Notes","title":"Version","body":{"raw":"\\nThe latest news, updates, and changes on Qios\\n\\n## 2.0.0\\n\\n<ImageWrapper>\\n  <NextImage\\n    src=\\"/assets/images/products/qios/release-notes/qios-illustration.webp\\"\\n    alt=\\"Qios Illustration\\"\\n    naturalWidth={720}\\n    naturalHeight={232}\\n  />\\n</ImageWrapper>\\n\\n### What’s New ⭐️\\n\\nHaving a robust online presence has never become more important for a business than today, a substantial part of that is online chat transactions - chat commerce.\\n\\nFor businesses who are tired of handling chat transactions manually, this is for you! We finally released a full fledged merchant business dashboard which allows you to conduct your business via chat faster and cater to your customers’ needs better. Unleash the potential of your business and employee, spend more time doing more meaningful things and let us take our the tedious, repetitive process of selling your products on chat apps.\\n\\nThis will entirely replace the previous dashboard experience with a centralized solution. **We always strive to serve you better.** Kindly let us know if you have any questions or feedback.\\n\\n- **Multi-store management**\\n\\n  Manage multiple stores with one credential.\\n\\n- **Inventory or product management**\\n\\n  Upload, Edit, Delete your products seamlessly.\\n\\n- **Order management**\\n\\n  Accept and decline customer orders automatically by setting up the product availability details, proceed into delivery and monitor delivery status at your fingertips.\\n\\n- **Role management**\\n\\n  Manage the roles within your dashboard. You can allocate a user as an admin or a store employee.\\n\\n- **Notification**\\n\\n  Receive notifications on incoming orders on the dashboard.\\n\\n- **Catalog generator.**\\n\\n  All products added can be converted into a catalogue automatically, send it to your customer via agent or automatically with a chatbot.\\n\\n- **Bot setup**\\n\\n  We added a way for you to add the Bot function seamlessly through Kata Omnichat integration.\\n\\n- **Payment**\\n\\n  Customers can now complete payment within the chat apps with our solution, your agents can then manage it via Qios dashboard. Currently we only accommodate GoPay payments, kindly reach out to us if you need further payment options.\\n\\n- **Shipping**\\n\\n  We also integrate shipping solutions for your customers and let you manage it via Qios dashboard. Currently we accommodate the following shipping methods: GoSend Instant, GrabExpress Instant, Lalamove and Mr. Speedy.\\n\\n- **Reports**\\n\\n  Qios covers basic reports such as best seller products, summary of transactions etc. For further details of analytics, you can request access to our Qios data studio.\\n\\n- **Customer database**\\n\\n  Manage and get to know your customer more by understanding their interest and needs.\\n","code":"var Component=(()=>{var p=Object.create;var i=Object.defineProperty;var m=Object.getOwnPropertyDescriptor;var g=Object.getOwnPropertyNames;var y=Object.getPrototypeOf,f=Object.prototype.hasOwnProperty;var l=t=>i(t,\\"__esModule\\",{value:!0});var b=(t,r)=>()=>(r||t((r={exports:{}}).exports,r),r.exports),w=(t,r)=>{for(var a in r)i(t,a,{get:r[a],enumerable:!0})},c=(t,r,a,n)=>{if(r&&typeof r==\\"object\\"||typeof r==\\"function\\")for(let o of g(r))!f.call(t,o)&&(a||o!==\\"default\\")&&i(t,o,{get:()=>r[o],enumerable:!(n=m(r,o))||n.enumerable});return t},v=(t,r)=>c(l(i(t!=null?p(y(t)):{},\\"default\\",!r&&t&&t.__esModule?{get:()=>t.default,enumerable:!0}:{value:t,enumerable:!0})),t),x=(t=>(r,a)=>t&&t.get(r)||(a=c(l({}),r,1),t&&t.set(r,a),a))(typeof WeakMap!=\\"undefined\\"?new WeakMap:0);var h=b((W,d)=>{d.exports=_jsx_runtime});var k={};w(k,{default:()=>j,frontmatter:()=>M});var e=v(h()),M={id:\\"release-notes-version\\",title:\\"Version\\",section:\\"Release Notes\\"};function N(t={}){let{wrapper:r}=t.components||{};return r?(0,e.jsx)(r,Object.assign({},t,{children:(0,e.jsx)(a,{})})):a();function a(){let n=Object.assign({p:\\"p\\",h2:\\"h2\\",a:\\"a\\",span:\\"span\\",h3:\\"h3\\",strong:\\"strong\\",ul:\\"ul\\",li:\\"li\\"},t.components),{ImageWrapper:o,NextImage:s}=n;return o||u(\\"ImageWrapper\\",!0),s||u(\\"NextImage\\",!0),(0,e.jsxs)(e.Fragment,{children:[(0,e.jsx)(n.p,{children:\\"The latest news, updates, and changes on Qios\\"}),`\\n`,(0,e.jsxs)(n.h2,{id:\\"200\\",children:[(0,e.jsx)(n.a,{className:\\"anchor\\",href:\\"#200\\",children:(0,e.jsx)(n.span,{className:\\"icon icon-link\\"})}),\\"2.0.0\\"]}),`\\n`,(0,e.jsx)(o,{children:(0,e.jsx)(s,{src:\\"/assets/images/products/qios/release-notes/qios-illustration.webp\\",alt:\\"Qios Illustration\\",naturalWidth:720,naturalHeight:232})}),`\\n`,(0,e.jsxs)(n.h3,{id:\\"whats-new-\\\\uFE0F\\",children:[(0,e.jsx)(n.a,{className:\\"anchor\\",href:\\"#whats-new-\\\\uFE0F\\",children:(0,e.jsx)(n.span,{className:\\"icon icon-link\\"})}),\\"What\\\\u2019s New \\\\u2B50\\\\uFE0F\\"]}),`\\n`,(0,e.jsx)(n.p,{children:\\"Having a robust online presence has never become more important for a business than today, a substantial part of that is online chat transactions - chat commerce.\\"}),`\\n`,(0,e.jsx)(n.p,{children:\\"For businesses who are tired of handling chat transactions manually, this is for you! We finally released a full fledged merchant business dashboard which allows you to conduct your business via chat faster and cater to your customers\\\\u2019 needs better. Unleash the potential of your business and employee, spend more time doing more meaningful things and let us take our the tedious, repetitive process of selling your products on chat apps.\\"}),`\\n`,(0,e.jsxs)(n.p,{children:[\\"This will entirely replace the previous dashboard experience with a centralized solution. \\",(0,e.jsx)(n.strong,{children:\\"We always strive to serve you better.\\"}),\\" Kindly let us know if you have any questions or feedback.\\"]}),`\\n`,(0,e.jsxs)(n.ul,{children:[`\\n`,(0,e.jsxs)(n.li,{children:[`\\n`,(0,e.jsx)(n.p,{children:(0,e.jsx)(n.strong,{children:\\"Multi-store management\\"})}),`\\n`,(0,e.jsx)(n.p,{children:\\"Manage multiple stores with one credential.\\"}),`\\n`]}),`\\n`,(0,e.jsxs)(n.li,{children:[`\\n`,(0,e.jsx)(n.p,{children:(0,e.jsx)(n.strong,{children:\\"Inventory or product management\\"})}),`\\n`,(0,e.jsx)(n.p,{children:\\"Upload, Edit, Delete your products seamlessly.\\"}),`\\n`]}),`\\n`,(0,e.jsxs)(n.li,{children:[`\\n`,(0,e.jsx)(n.p,{children:(0,e.jsx)(n.strong,{children:\\"Order management\\"})}),`\\n`,(0,e.jsx)(n.p,{children:\\"Accept and decline customer orders automatically by setting up the product availability details, proceed into delivery and monitor delivery status at your fingertips.\\"}),`\\n`]}),`\\n`,(0,e.jsxs)(n.li,{children:[`\\n`,(0,e.jsx)(n.p,{children:(0,e.jsx)(n.strong,{children:\\"Role management\\"})}),`\\n`,(0,e.jsx)(n.p,{children:\\"Manage the roles within your dashboard. You can allocate a user as an admin or a store employee.\\"}),`\\n`]}),`\\n`,(0,e.jsxs)(n.li,{children:[`\\n`,(0,e.jsx)(n.p,{children:(0,e.jsx)(n.strong,{children:\\"Notification\\"})}),`\\n`,(0,e.jsx)(n.p,{children:\\"Receive notifications on incoming orders on the dashboard.\\"}),`\\n`]}),`\\n`,(0,e.jsxs)(n.li,{children:[`\\n`,(0,e.jsx)(n.p,{children:(0,e.jsx)(n.strong,{children:\\"Catalog generator.\\"})}),`\\n`,(0,e.jsx)(n.p,{children:\\"All products added can be converted into a catalogue automatically, send it to your customer via agent or automatically with a chatbot.\\"}),`\\n`]}),`\\n`,(0,e.jsxs)(n.li,{children:[`\\n`,(0,e.jsx)(n.p,{children:(0,e.jsx)(n.strong,{children:\\"Bot setup\\"})}),`\\n`,(0,e.jsx)(n.p,{children:\\"We added a way for you to add the Bot function seamlessly through Kata Omnichat integration.\\"}),`\\n`]}),`\\n`,(0,e.jsxs)(n.li,{children:[`\\n`,(0,e.jsx)(n.p,{children:(0,e.jsx)(n.strong,{children:\\"Payment\\"})}),`\\n`,(0,e.jsx)(n.p,{children:\\"Customers can now complete payment within the chat apps with our solution, your agents can then manage it via Qios dashboard. Currently we only accommodate GoPay payments, kindly reach out to us if you need further payment options.\\"}),`\\n`]}),`\\n`,(0,e.jsxs)(n.li,{children:[`\\n`,(0,e.jsx)(n.p,{children:(0,e.jsx)(n.strong,{children:\\"Shipping\\"})}),`\\n`,(0,e.jsx)(n.p,{children:\\"We also integrate shipping solutions for your customers and let you manage it via Qios dashboard. Currently we accommodate the following shipping methods: GoSend Instant, GrabExpress Instant, Lalamove and Mr. Speedy.\\"}),`\\n`]}),`\\n`,(0,e.jsxs)(n.li,{children:[`\\n`,(0,e.jsx)(n.p,{children:(0,e.jsx)(n.strong,{children:\\"Reports\\"})}),`\\n`,(0,e.jsx)(n.p,{children:\\"Qios covers basic reports such as best seller products, summary of transactions etc. For further details of analytics, you can request access to our Qios data studio.\\"}),`\\n`]}),`\\n`,(0,e.jsxs)(n.li,{children:[`\\n`,(0,e.jsx)(n.p,{children:(0,e.jsx)(n.strong,{children:\\"Customer database\\"})}),`\\n`,(0,e.jsx)(n.p,{children:\\"Manage and get to know your customer more by understanding their interest and needs.\\"}),`\\n`]}),`\\n`]})]})}}var j=N;function u(t,r){throw new Error(\\"Expected \\"+(r?\\"component\\":\\"object\\")+\\" `\\"+t+\\"` to be defined: you likely forgot to import, pass, or provide it.\\")}return x(k);})();\\n;return Component;"},"_id":"qios/release-notes/version.mdx","_raw":{"sourceFilePath":"qios/release-notes/version.mdx","sourceFileName":"version.mdx","sourceFileDir":"qios/release-notes","contentType":"mdx","flattenedPath":"qios/release-notes/version"},"type":"Qios","slug":["release-notes","version"],"excerpt":"\\nThe latest news, updates, and changes on Qios\\n\\n## 2.0"}');
;// CONCATENATED MODULE: ./.contentlayer/generated/allQios.mjs
// NOTE This file is auto-generated by the Contentlayer CLI








const allQios = [
    qios_how_to_activate_your_chatbot_mdx_namespaceObject,
    qios_how_to_general_setup_mdx_namespaceObject,
    qios_how_to_manage_order_mdx_namespaceObject,
    qios_how_to_manage_product_mdx_namespaceObject,
    qios_how_to_manage_store_mdx_namespaceObject,
    qios_how_to_set_up_bank_account_mdx_namespaceObject,
    qios_introduction_about_mdx_namespaceObject,
    qios_release_notes_version_mdx_namespaceObject
];


/***/ }),

/***/ 1055:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {


// EXPORTS
__webpack_require__.d(__webpack_exports__, {
  "e": () => (/* binding */ allTutorials)
});

;// CONCATENATED MODULE: ./.contentlayer/generated/Tutorials/tutorials__bot-studio.mdx.json
const tutorials_bot_studio_mdx_namespaceObject = JSON.parse('{"layout":"tutorial","id":"bot-studio","imgSpot":"/assets/images/tutorials/spot-cms.webp","product":"kata-platform","title":"Bot Studio Tutorial","date":"2018-07-07T07:00:00+07:00","prev":"hello-world-tutorial","next":"nl-studio-tutorial","body":{"raw":"\\n## Introduction\\n\\nBuilding a chatbot on Kata | Platform is quick and easy, even with a lack of programming knowledge. In this tutorial, we will learn how to create a simple bot on LINE Messenger to order a pizza. We will also learn how to train your bot with NL Studio.\\n\\nLet\'s start by looking at this bot diagram, or commonly called “conversation tree.” Conversation tree is an overview of chatbot functionalities. In this conversation tree, we break down the process of ordering pizza and the types of bot action we want to use on each state.\\n\\n<FigureImage\\n  src=\\"/assets/images/tutorials/bot-studio/bse-1.webp\\"\\n  alt=\\"bse-1\\"\\n  naturalHeight={1040}\\n  naturalWidth={1040}\\n/>\\n\\n## Sign up to Kata | Platform\\n\\nCreate an account on Kata | Platform to start building chatbot.\\n\\nOn your browser, open <a href=\\"https://platform.kata.ai/login\\" target=\\"_blank\\">https://platform.kata.ai/login</a> and click “Sign Up”\\n\\n<FigureImage src=\\"/assets/images/tutorials/bot-studio/bse-2.webp\\" alt=\\"bse-2\\" naturalHeight={1016} naturalWidth={870} />\\n\\nThen fill the form with a username, an email, and an account type. Continue by clicking \\"Sign Up.\\"\\n\\n<FigureImage src=\\"/assets/images/tutorials/bot-studio/bse-3.webp\\" alt=\\"bse-3\\" naturalHeight={1238} naturalWidth={872} />\\n\\nYou will get a confirmation email once our team has verified your account.\\n\\nYou may follow the instructions provided in the confirmation email to activate and start using your account.\\n\\n## Create a Project\\n\\n### Login to Kata | Platform\\n\\nOn your browser, open <a href=\\"https://platform.kata.ai/login\\" target=\\"_blank\\">platform.kata.ai/login</a> and enter your username & password.\\n\\n<FigureImage src=\\"/assets/images/tutorials/bot-studio/bse-4.webp\\" alt=\\"bse-4\\" naturalHeight={1050} naturalWidth={878} />\\n\\nClick \\"Login\\" to continue.\\n\\n### Create a project\\n\\nAfter you logged in, you will be taken to the Project Page.\\n\\n<FigureImage\\n  src=\\"/assets/images/tutorials/bot-studio/bse-5.webp\\"\\n  alt=\\"bse-5\\"\\n  naturalHeight={1046}\\n  naturalWidth={2896}\\n/>\\n\\nClick on “Create Project” and fill in the form. Each project contains one bot design, one NL, and one CMS.\\n\\n<FigureImage src=\\"/assets/images/tutorials/bot-studio/bse-6.webp\\" alt=\\"bse-6\\" naturalHeight={1152} naturalWidth={842} />\\n\\nNLU language is used to determine which language model you want to use. Currently, we support Bahasa Indonesia and English.\\n\\nYou can also choose NLU Visibility to be public or private. If you choose public, **all Kata | Platform users** can utilize your NLU using root and inherit function.\\n\\n## Create Fallback Flow\\n\\n### Create fallback flow\\n\\nOnce you create a project, you will be redirected to the Bot Studio menu.\\n\\nNow we are going to learn how to create a flow. Flow is a container of **intent, state, and action**. A flow typically represents a linear process.\\n\\nThe first flow that we will create is a Fallback Flow. Its purpose is to handle undefined users input, or commonly called “else condition” state. In this case, the “else condition” is everything that is not “Start Order”.\\n\\n<FigureImage\\n  src=\\"/assets/images/tutorials/bot-studio/bse-1.webp\\"\\n  alt=\\"bse-1\\"\\n  naturalHeight={1040}\\n  naturalWidth={1040}\\n/>\\n\\nYou may find a flow that is created automatically by the system or default flow. We will delete that flow by pressing more button and then “Delete.”\\n\\n<FigureImage\\n  src=\\"/assets/images/tutorials/bot-studio/bse-8.webp\\"\\n  alt=\\"bse-8\\"\\n  naturalHeight={1008}\\n  naturalWidth={1762}\\n/>\\n\\nNext, click “Create Flow” button to create `fallback` flow. Set flow to active, persistent, and default.\\n\\n<FigureImage src=\\"/assets/images/tutorials/bot-studio/bse-9.webp\\" alt=\\"bse-9\\" naturalHeight={780} naturalWidth={846} />\\n\\n### Create fallback intent\\n\\nAfter you have created `fallback` flow, we will create new intent by pressing the Intents tab on the sub-menu. Then, we will create a new intent for `fallback` flow. Click “Create Intent” button to create.\\n\\n<FigureImage\\n  src=\\"/assets/images/tutorials/bot-studio/bse-10.webp\\"\\n  alt=\\"bse-10\\"\\n  naturalHeight={674}\\n  naturalWidth={1960}\\n/>\\n\\nThen, fill in the form as follows\\n\\n<FigureImage\\n  src=\\"/assets/images/tutorials/bot-studio/bse-11.webp\\"\\n  alt=\\"bse-11\\"\\n  naturalHeight={808}\\n  naturalWidth={892}\\n/>\\n\\n### Create State init\\n\\nNext, we will create a state called `init`. Click the ”+” button at the bottom right of your screen.\\n\\n<FigureImage\\n  src=\\"/assets/images/tutorials/bot-studio/bse-12.webp\\"\\n  alt=\\"bse-12\\"\\n  naturalHeight={1722}\\n  naturalWidth={3342}\\n/>\\n\\nFill state with name `init` on Overview tab and set it to initial state and end state (as shown below).\\n\\nEnabling Initial State and End State will make `init` the first and the last flow to be checked by the bot when there isn\'t any flow that matches a user\'s input.\\n\\n<FigureImage\\n  src=\\"/assets/images/tutorials/bot-studio/bse-13.webp\\"\\n  alt=\\"bse-13\\"\\n  naturalHeight={734}\\n  naturalWidth={910}\\n/>\\n\\nNow we will create a bot response to display an apology message. Click “Add actions” button to create a response.\\n\\n<FigureImage\\n  src=\\"/assets/images/tutorials/bot-studio/bse-14.webp\\"\\n  alt=\\"bse-14\\"\\n  naturalHeight={626}\\n  naturalWidth={860}\\n/>\\n\\nContainer for creating action will appear\\n\\n<FigureImage\\n  src=\\"/assets/images/tutorials/bot-studio/bse-15.webp\\"\\n  alt=\\"bse-15\\"\\n  naturalHeight={1200}\\n  naturalWidth={840}\\n/>\\n\\n### Create Action Text in State init\\n\\nClick on “+” button to create a new action.\\n\\n<FigureImage\\n  src=\\"/assets/images/tutorials/bot-studio/bse-16.webp\\"\\n  alt=\\"bse-16\\"\\n  naturalHeight={1110}\\n  naturalWidth={870}\\n/>\\n\\nChoose action type “Text”\\n\\n<FigureImage\\n  src=\\"/assets/images/tutorials/bot-studio/bse-17.webp\\"\\n  alt=\\"bse-17\\"\\n  naturalHeight={1382}\\n  naturalWidth={860}\\n/>\\n\\nThen, fill in the form\\n\\n<FigureImage\\n  src=\\"/assets/images/tutorials/bot-studio/bse-18.webp\\"\\n  alt=\\"bse-18\\"\\n  naturalHeight={1348}\\n  naturalWidth={866}\\n/>\\n\\nClick on “Create Action” button.\\n\\n<FigureImage\\n  src=\\"/assets/images/tutorials/bot-studio/bse-19.webp\\"\\n  alt=\\"bse-19\\"\\n  naturalHeight={770}\\n  naturalWidth={876}\\n/>\\n\\n### Create Self Transition in State Init\\n\\nThe last step to finalize `fallback` flow is to create self-transition for `init` state. Self transition is required to avoid error when the next state is not available. Click on “Transitions” and enable Self Transition.\\n\\n<FigureImage\\n  src=\\"/assets/images/tutorials/bot-studio/bse-20.webp\\"\\n  alt=\\"bse-20\\"\\n  naturalHeight={1202}\\n  naturalWidth={866}\\n/>\\n\\nClick “Create” button. Your screen should look like this\\n\\n<FigureImage\\n  src=\\"/assets/images/tutorials/bot-studio/bse-21.webp\\"\\n  alt=\\"bse-21\\"\\n  naturalHeight={1018}\\n  naturalWidth={1840}\\n/>\\n\\n## Create Order Flow\\n\\nNext, we will create `Start Order` flow to handle pizza order.\\n\\n<FigureImage\\n  src=\\"/assets/images/tutorials/bot-studio/bse-1.webp\\"\\n  alt=\\"bse-1\\"\\n  naturalHeight={1040}\\n  naturalWidth={1040}\\n/>\\n\\n### Create Flow Order\\n\\nFirst step is to create another flow called `order` .\\n\\n<FigureImage\\n  src=\\"/assets/images/tutorials/bot-studio/bse-22.webp\\"\\n  alt=\\"bse-22\\"\\n  naturalHeight={1676}\\n  naturalWidth={880}\\n/>\\n\\nCreated flow will be shown like this\\n\\n<FigureImage\\n  src=\\"/assets/images/tutorials/bot-studio/bse-23.webp\\"\\n  alt=\\"bse-23\\"\\n  naturalHeight={1098}\\n  naturalWidth={1642}\\n/>\\n\\n### Create Keyword NLUs for \'Order\'\\n\\nIn this step, we will define the NLU (Natural Language Understanding) to trigger `order` flow. NLU is used to translate user inputs into data that machine can understand. There are many types of NLU, but the type that we will use in this particular flow is called `keyword`. To define the NLU, go to NLUs menu.\\n\\n<FigureImage\\n  src=\\"/assets/images/tutorials/bot-studio/bse-24.webp\\"\\n  alt=\\"bse-24\\"\\n  naturalHeight={1114}\\n  naturalWidth={1680}\\n/>\\n\\nNext, click on “Create NLU”\\n\\n<FigureImage\\n  src=\\"/assets/images/tutorials/bot-studio/bse-25.webp\\"\\n  alt=\\"bse-25\\"\\n  naturalHeight={1078}\\n  naturalWidth={1986}\\n/>\\n\\nChoose Keyword type and enter keywords that represents `order`, such as “order”, “pls order”, “order pza”.\\n\\n<FigureImage\\n  src=\\"/assets/images/tutorials/bot-studio/bse-26.webp\\"\\n  alt=\\"bse-26\\"\\n  naturalHeight={1698}\\n  naturalWidth={904}\\n/>\\n\\nSuccessfully created NLU looks like this\\n\\n<FigureImage\\n  src=\\"/assets/images/tutorials/bot-studio/bse-27.webp\\"\\n  alt=\\"bse-27\\"\\n  naturalHeight={1034}\\n  naturalWidth={2464}\\n/>\\n\\n### Create Intent for Order\\n\\nEach flow requires an `intent` to classify user\'s inquiry and trigger matching flow. So our next step is to set initial intent for `order` flow.\\n\\nGo back to Conversation Flow menu and click on `order` flow, then click on “Intents” tab.\\n\\n<FigureImage\\n  src=\\"/assets/images/tutorials/bot-studio/bse-28.webp\\"\\n  alt=\\"bse-28\\"\\n  naturalHeight={1012}\\n  naturalWidth={1922}\\n/>\\n\\nPreviously, you already created keyword NLUs called `order`. We will set that keyword as intent in `order` flow. Map the NLU on classifier section.\\n\\n<FigureImage\\n  src=\\"/assets/images/tutorials/bot-studio/bse-29.webp\\"\\n  alt=\\"bse-29\\"\\n  naturalHeight={1688}\\n  naturalWidth={922}\\n/>\\n\\nClick “Create” to create the intent. Your screen should look like this\\n\\n<FigureImage\\n  src=\\"/assets/images/tutorials/bot-studio/bse-30.webp\\"\\n  alt=\\"bse-30\\"\\n  naturalHeight={1060}\\n  naturalWidth={2564}\\n/>\\n\\n### Create a State Named init\\n\\nEvery flow must have at least one state. Because we haven\'t created any state in `order` flow, we have to create one. Let\'s create a state called `init`.\\n\\n<FigureImage\\n  src=\\"/assets/images/tutorials/bot-studio/bse-31.webp\\"\\n  alt=\\"bse-31\\"\\n  naturalHeight={1676}\\n  naturalWidth={854}\\n/>\\n\\nClick “Create” button to create initial state.\\n\\nNext, we will define how the bot will respond to user who entered `order` flow.\\n\\n## Create Action for Pizza Menu\\n\\nAs seen on the conversation tree below, the first message in `order` flow is “Show Pizza Type”\\n\\n<FigureImage\\n  src=\\"/assets/images/tutorials/bot-studio/bse-1.webp\\"\\n  alt=\\"bse-1\\"\\n  naturalHeight={1040}\\n  naturalWidth={1040}\\n/>\\n\\n### Create a State to Show Pizza type in Text Action Type\\n\\nTo get started, we need to create a state named `showPizza` on `order` flow. Click on “+” button in Conversation Flow menu.\\n\\n<FigureImage\\n  src=\\"/assets/images/tutorials/bot-studio/bse-33.webp\\"\\n  alt=\\"bse-33\\"\\n  naturalHeight={1304}\\n  naturalWidth={854}\\n/>\\n\\nLet\'s begin by creating an action called `pizzaOptions`. This action will inform users in **text about our available pizza menu**.\\n\\nClick on “+” button to create an action and choose Text as action type.\\n\\n<FigureImage\\n  src=\\"/assets/images/tutorials/bot-studio/bse-34.webp\\"\\n  alt=\\"bse-34\\"\\n  naturalHeight={1540}\\n  naturalWidth={850}\\n/>\\n\\nFill in Text action type to inform our pizza menu\\n\\n<FigureImage\\n  src=\\"/assets/images/tutorials/bot-studio/bse-35.webp\\"\\n  alt=\\"bse-35\\"\\n  naturalHeight={917}\\n  naturalWidth={792}\\n/>\\n\\nClick on “Create Action” to finalize. Next step is to create an action called `askOptions`\\n\\n<FigureImage\\n  src=\\"/assets/images/tutorials/bot-studio/bse-36.webp\\"\\n  alt=\\"bse-36\\"\\n  naturalHeight={924}\\n  naturalWidth={792}\\n/>\\n\\nClick on “Create Action” button. Your form should look like this\\n\\n<FigureImage\\n  src=\\"/assets/images/tutorials/bot-studio/bse-37.webp\\"\\n  alt=\\"bse-37\\"\\n  naturalHeight={886}\\n  naturalWidth={864}\\n/>\\n\\nThen you have to make self-transition in Transition tab as follow\\n\\n<FigureImage\\n  src=\\"/assets/images/tutorials/bot-studio/bse-37-1.webp\\"\\n  alt=\\"bse-37-1\\"\\n  naturalHeight={920}\\n  naturalWidth={1308}\\n/>\\n\\nClick “Create” to create the state. Successfully created state will look like this\\n\\n<FigureImage\\n  src=\\"/assets/images/tutorials/bot-studio/bse-38.webp\\"\\n  alt=\\"bse-38\\"\\n  naturalHeight={1042}\\n  naturalWidth={2014}\\n/>\\n\\n### Update showPizza state Into Show Pizza Menu in Carousel Action Type\\n\\nPrevious step is an example to create action to **show pizza menu in text.** Let\'s try to update the state into Carousel action type.\\n\\nTo update the state, click on `showPizza` state and an update state form will appear\\n\\n<FigureImage\\n  src=\\"/assets/images/tutorials/bot-studio/bse-39.webp\\"\\n  alt=\\"bse-39\\"\\n  naturalHeight={1732}\\n  naturalWidth={1008}\\n/>\\n\\nThen, remove all actions in the state by clicking “x” on each action.\\n\\n<FigureImage\\n  src=\\"/assets/images/tutorials/bot-studio/bse-40.webp\\"\\n  alt=\\"bse-40\\"\\n  naturalHeight={918}\\n  naturalWidth={832}\\n/>\\n\\nAfter removing available actions, we will create an action called `pizzaMenu` as Carousel action type.\\n\\nClick on “Add” actions button then click on “+” button to create a new action. Choose Carousel action type to continue.\\n\\n<FigureImage\\n  src=\\"/assets/images/tutorials/bot-studio/bse-41.webp\\"\\n  alt=\\"bse-41\\"\\n  naturalHeight={1142}\\n  naturalWidth={836}\\n/>\\n\\nEnter `pizzaMenu` as name\\n\\n<FigureImage\\n  src=\\"/assets/images/tutorials/bot-studio/bse-42.webp\\"\\n  alt=\\"bse-42\\"\\n  naturalHeight={474}\\n  naturalWidth={826}\\n/>\\n\\nFill in the carousel content by clicking “Add carousel” button, then click on “Add action” button to define the **label and type**. Next, click on Add Payload button to enter **key and value**.\\n\\nFill in first carousel with this data\\n\\n```\\nTitle: Pepperoni\\nText: This is the favorite of Peps\\nThumbnail Image Url: https://www.wikihow.com/images/thumb/a/a7/Make-Pepperoni-Pizza-Step-19-Version-2.jpg/aid1074004-v4-728px-Make-Pepperoni-Pizza-Step-19-Version-2.jpg.webp\\nActions:\\n  Label: Pepperoni\\n  Type: Postback\\n  Payload:\\n    - key: type\\n      value: pizza\\n    - key: pizza\\n      value: Pepperoni\\n```\\n\\nFill in second carousel with this data\\n\\n```\\nTitle: Veggie Lovers\\nText: Vegie vegie stay healthy\\nThumbnail Image Url: https://www.calcuttaweb.com/store/image/data/calcutta/pizza/veggie-lovers-pizza-pihu-7.jpg\\nActions:\\n  Label: Veggie Lovers\\n  Type: Postback\\n  Payload:\\n    - key: type\\n      value: pizza\\n    - key: pizza\\n      value: Veggie Lovers\\n```\\n\\nYour first form should look like this\\n\\n<FigureImage\\n  src=\\"/assets/images/tutorials/bot-studio/bse-43.webp\\"\\n  alt=\\"bse-43\\"\\n  naturalHeight={1336}\\n  naturalWidth={752}\\n/>\\n\\nYour second form should look like this\\n\\n<FigureImage\\n  src=\\"/assets/images/tutorials/bot-studio/bse-44.webp\\"\\n  alt=\\"bse-44\\"\\n  naturalHeight={1332}\\n  naturalWidth={744}\\n/>\\n\\nFinalize this step by clicking “Create Action.”\\n\\nIt should look like this\\n\\n<FigureImage\\n  src=\\"/assets/images/tutorials/bot-studio/bse-45.webp\\"\\n  alt=\\"bse-45\\"\\n  naturalHeight={926}\\n  naturalWidth={842}\\n/>\\n\\nOnce the bot displays a carousel containing the type for pizza menu, its next step is to ask user to select the pizza. Click “Add actions” button to trigger drop-down list, then choose `askOptions`\\n\\n<FigureImage\\n  src=\\"/assets/images/tutorials/bot-studio/bse-46.webp\\"\\n  alt=\\"bse-46\\"\\n  naturalHeight={1290}\\n  naturalWidth={846}\\n/>\\n\\nAfter you select `askOptions` action click “Create Action” button to finalize this step.\\n\\n<FigureImage\\n  src=\\"/assets/images/tutorials/bot-studio/bse-47.webp\\"\\n  alt=\\"bse-47\\"\\n  naturalHeight={1506}\\n  naturalWidth={848}\\n/>\\n\\nYour form should look like this\\n\\n<FigureImage\\n  src=\\"/assets/images/tutorials/bot-studio/bse-48.webp\\"\\n  alt=\\"bse-48\\"\\n  naturalHeight={1704}\\n  naturalWidth={850}\\n/>\\n\\nClick “Update” to update the state.\\n\\n### Create Intent to Choose A Pizza\\n\\nNow we have to create an intent called `pizzaChosen` to handle user\'s input after they have selected a pizza type. Click on Intent menu in `order` flow.\\n\\n<FigureImage\\n  src=\\"/assets/images/tutorials/bot-studio/bse-49.webp\\"\\n  alt=\\"bse-49\\"\\n  naturalHeight={1288}\\n  naturalWidth={2716}\\n/>\\n\\nClick on Create Intent and create intent as follow\\n\\n<FigureImage\\n  src=\\"/assets/images/tutorials/bot-studio/bse-50.webp\\"\\n  alt=\\"bse-50\\"\\n  naturalHeight={1076}\\n  naturalWidth={854}\\n/>\\n\\nSuccessfully created intent looks like this\\n\\n<FigureImage\\n  src=\\"/assets/images/tutorials/bot-studio/bse-51.webp\\"\\n  alt=\\"bse-51\\"\\n  naturalHeight={1074}\\n  naturalWidth={3330}\\n/>\\n\\n### Create Transition between init and showPizza\\n\\nNow, we will create a transition between two states that we have created before.\\n\\nClick the green dot on `init` state, and a connector line will appear. Connect that line to `showPizza` state. If you do it right, a Create Transition form will appear.\\n\\n<FigureImage\\n  src=\\"/assets/images/tutorials/bot-studio/bse-52.webp\\"\\n  alt=\\"bse-52\\"\\n  naturalHeight={888}\\n  naturalWidth={1693}\\n/>\\n\\nFill in the form with these data, and click “Create”\\n\\n<FigureImage\\n  src=\\"/assets/images/tutorials/bot-studio/bse-52-1.webp\\"\\n  alt=\\"bse-52-1\\"\\n  naturalHeight={1278}\\n  naturalWidth={2766}\\n/>\\n\\n### Create \'reenter\' intent\\n\\nNext, we will add `reenter` intent so the bot can return to its previous state after triggering fallback state. Create the intent in `order` flow.\\n\\n<FigureImage\\n  src=\\"/assets/images/tutorials/bot-studio/bse-53.webp\\"\\n  alt=\\"bse-53\\"\\n  naturalHeight={1128}\\n  naturalWidth={2802}\\n/>\\n\\n## Create Action for Asking Pizza Quantity\\n\\nIn this step we will learn how to create “Ask quantity” state.\\n\\n<FigureImage\\n  src=\\"/assets/images/tutorials/bot-studio/bse-1.webp\\"\\n  alt=\\"bse-1\\"\\n  naturalHeight={1040}\\n  naturalWidth={1040}\\n/>\\n\\n### Create pizzaQuantity state\\n\\nIn this step we will create `pizzaQuantity` state to handle order quantity. The type of action we will use is in this state is Text. Click on “+” button on `order` flow and fill the form as follows\\n\\n<FigureImage\\n  src=\\"/assets/images/tutorials/bot-studio/bse-54.webp\\"\\n  alt=\\"bse-54\\"\\n  naturalHeight={1418}\\n  naturalWidth={786}\\n/>\\n\\nThen you have to make self-transition in Transition tab as follow\\n\\n<FigureImage\\n  src=\\"/assets/images/tutorials/bot-studio/bse-54_1.webp\\"\\n  alt=\\"bse-54_1\\"\\n  naturalHeight={920}\\n  naturalWidth={1308}\\n/>\\n\\nResult:\\n\\n<FigureImage\\n  src=\\"/assets/images/tutorials/bot-studio/bse-55.webp\\"\\n  alt=\\"bse-55\\"\\n  naturalHeight={1114}\\n  naturalWidth={1986}\\n/>\\n\\n### Create NLUs quantity\\n\\nAfterwards, we have to handle user\'s input with NLUs. Because we only allowed number from 1 to 9, we will create a limitation in regex format. Click on Create NLUs and follow this screenshot\\n\\n<FigureImage\\n  src=\\"/assets/images/tutorials/bot-studio/bse-56.webp\\"\\n  alt=\\"bse-56\\"\\n  naturalHeight={1062}\\n  naturalWidth={816}\\n/>\\n\\nSuccessfully created NLU will be shown like this\\n\\n<FigureImage\\n  src=\\"/assets/images/tutorials/bot-studio/bse-57.webp\\"\\n  alt=\\"bse-57\\"\\n  naturalHeight={870}\\n  naturalWidth={3282}\\n/>\\n\\n### Create Intent quantity\\n\\nAfter we created the NLU, we will add an intent to respond user\'s input. In `order` flow, click on Create Intent and fill in the form\\n\\n<FigureImage\\n  src=\\"/assets/images/tutorials/bot-studio/bse-58.webp\\"\\n  alt=\\"bse-58\\"\\n  naturalHeight={1414}\\n  naturalWidth={816}\\n/>\\n\\nSuccessfully created intent will look like this\\n\\n<FigureImage\\n  src=\\"/assets/images/tutorials/bot-studio/bse-59.webp\\"\\n  alt=\\"bse-59\\"\\n  naturalHeight={1104}\\n  naturalWidth={3288}\\n/>\\n\\n### Create Transition between showPizza and pizzaQuantity\\n\\nNow we have to create a transition between `showPizza`and `pizzaQuantity`. We will also store `payload.pizza` value into `context.pizza`. Click on the blue dot on `showPizza` and drag the line to `pizzaQuantity` state to create the transition. Create Transition form will appear after you have successfully connected the states.\\n\\n<FigureImage\\n  src=\\"/assets/images/tutorials/bot-studio/bse-60.webp\\"\\n  alt=\\"bse-60\\"\\n  naturalHeight={1244}\\n  naturalWidth={866}\\n/>\\n\\nCreated transition will look like this\\n\\n<FigureImage\\n  src=\\"/assets/images/tutorials/bot-studio/bse-61.webp\\"\\n  alt=\\"bse-61\\"\\n  naturalHeight={1082}\\n  naturalWidth={2298}\\n/>\\n\\n## Create Confirmation Action\\n\\nOur next step is creating `Ask confirmation` state.\\n\\n<FigureImage\\n  src=\\"/assets/images/tutorials/bot-studio/bse-1.webp\\"\\n  alt=\\"bse-1\\"\\n  naturalHeight={1040}\\n  naturalWidth={1040}\\n/>\\n\\n### Create “YESNO” keyword NLUs\\n\\nFirst, we will create a keyword NLU to handle `yes` and `no`. Click on Create NLUs and fill in as follows\\n\\n<FigureImage\\n  src=\\"/assets/images/tutorials/bot-studio/bse-62.webp\\"\\n  alt=\\"bse-62\\"\\n  naturalHeight={1512}\\n  naturalWidth={832}\\n/>\\n\\nSuccessfully created NLU will look like this\\n\\n<FigureImage\\n  src=\\"/assets/images/tutorials/bot-studio/bse-63.webp\\"\\n  alt=\\"bse-63\\"\\n  naturalHeight={1164}\\n  naturalWidth={3270}\\n/>\\n\\n### Create confirmPizza state\\n\\nNow we will create `confirmPizza` state to handle order confirmation. We will also store chosen pizza & quantity information in this state. Select `order` flow and click on “+” button to create `confirmPizza` state.\\n\\n<FigureImage\\n  src=\\"/assets/images/tutorials/bot-studio/bse-64.webp\\"\\n  alt=\\"bse-64\\"\\n  naturalHeight={1408}\\n  naturalWidth={758}\\n/>\\n\\n## Add mapping in onTransit tab\\n\\n<FigureImage\\n  src=\\"/assets/images/tutorials/bot-studio/bse-67.webp\\"\\n  alt=\\"bse-67\\"\\n  naturalHeight={510}\\n  naturalWidth={760}\\n/>\\n\\nDon\'t forget to add self-transition in a state. Click Create Action. Your screen should look like this\\n\\n<FigureImage\\n  src=\\"/assets/images/tutorials/bot-studio/bse-65.webp\\"\\n  alt=\\"bse-65\\"\\n  naturalHeight={1192}\\n  naturalWidth={2330}\\n/>\\n\\n### Create a transition from pizzaQuantity to confirmPizza\\n\\nWe will make a transition by storing value (mapping) from pizza quantity **and** chosen pizza type. Click the blue dot on `pizzaQuantity` and drag the line to `confirmPizza` state to create a transition. Create Transition form will appear after you successfully connected the states.\\n\\n<FigureImage\\n  src=\\"/assets/images/tutorials/bot-studio/bse-66.webp\\"\\n  alt=\\"bse-66\\"\\n  naturalHeight={1324}\\n  naturalWidth={846}\\n/>\\n\\nResult will be shown as follows\\n\\n<FigureImage\\n  src=\\"/assets/images/tutorials/bot-studio/bse-68.webp\\"\\n  alt=\\"bse-68\\"\\n  naturalHeight={990}\\n  naturalWidth={2420}\\n/>\\n\\n### Create intent yesno\\n\\nPreviously, we already made an NLU containing `yes` and `no` keywords. We will use that NLU as a classifier on an intent.\\n\\nFirst of all, we will create an intent in `order` flow for the keyword `yes`\\n\\n<FigureImage\\n  src=\\"/assets/images/tutorials/bot-studio/bse-69.webp\\"\\n  alt=\\"bse-69\\"\\n  naturalHeight={1422}\\n  naturalWidth={804}\\n/>\\n\\nThen, we will create an intent for keyword `no`\\n\\n<FigureImage\\n  src=\\"/assets/images/tutorials/bot-studio/bse-70.webp\\"\\n  alt=\\"bse-70\\"\\n  naturalHeight={1392}\\n  naturalWidth={822}\\n/>\\n\\nBoth intent will appear as follows\\n\\n<FigureImage\\n  src=\\"/assets/images/tutorials/bot-studio/bse-71.webp\\"\\n  alt=\\"bse-71\\"\\n  naturalHeight={1378}\\n  naturalWidth={3276}\\n/>\\n\\n### Create done state\\n\\nIn `done` state, we will complete the order by saying thank you and end the conversation. We will also set a condition when a user wants to cancel the order. So in this state we will create two actions: `sayThanks` and `sayCancel`.\\n\\n<FigureImage\\n  src=\\"/assets/images/tutorials/bot-studio/bse-72.webp\\"\\n  alt=\\"bse-72\\"\\n  naturalHeight={940}\\n  naturalWidth={798}\\n/>\\n\\n<FigureImage\\n  src=\\"/assets/images/tutorials/bot-studio/bse-73.webp\\"\\n  alt=\\"bse-73\\"\\n  naturalHeight={914}\\n  naturalWidth={786}\\n/>\\n\\nAlso, don\'t forget to add self transition in the state. Result:\\n\\n<FigureImage\\n  src=\\"/assets/images/tutorials/bot-studio/bse-74.webp\\"\\n  alt=\\"bse-74\\"\\n  naturalHeight={1218}\\n  naturalWidth={2390}\\n/>\\n\\n### Create a transition from confirmPizza to done\\n\\nNext, we will connect `confirmPizza` state to `done` state. Because `done` is the last state, we will set it as default transition. Connect `confirmPizza` to `done` by clicking the blue dot and drag the line to connect the states. Create Transition form will appear after you have successfully connected the states.\\n\\n<FigureImage\\n  src=\\"/assets/images/tutorials/bot-studio/bse-75.webp\\"\\n  alt=\\"bse-75\\"\\n  naturalHeight={1084}\\n  naturalWidth={840}\\n/>\\n\\nFinal flow:\\n\\n<FigureImage\\n  src=\\"/assets/images/tutorials/bot-studio/bse-76.webp\\"\\n  alt=\\"bse-76\\"\\n  naturalHeight={1208}\\n  naturalWidth={3262}\\n/>\\n\\n## Publish Your Bot\\n\\nTo save your work, click on Publish button located at the top right of your screen. Fill in the changelog as “initial version of pizza bot” for future reference. Click “Publish” to continue.\\n\\n<FigureImage\\n  src=\\"/assets/images/tutorials/bot-studio/bse-77.webp\\"\\n  alt=\\"bse-77\\"\\n  naturalHeight={1218}\\n  naturalWidth={2390}\\n/>\\n\\n<FigureImage\\n  src=\\"/assets/images/tutorials/bot-studio/bse-78.webp\\"\\n  alt=\\"bse-78\\"\\n  naturalHeight={974}\\n  naturalWidth={1066}\\n/>\\n\\nEvery time you publish a bot, it will record a hash number (similar to Git\'s hash number) in Revision List.\\n\\n<FigureImage\\n  src=\\"/assets/images/tutorials/bot-studio/bse-79.webp\\"\\n  alt=\\"bse-79\\"\\n  naturalHeight={538}\\n  naturalWidth={3298}\\n/>\\n\\n## Testing Your Chatbot\\n\\nClick on Test Chatbot on Bot Studio then type “order” to initialize `order` flow.\\n\\n<FigureImage\\n  src=\\"/assets/images/tutorials/bot-studio/bse-80.webp\\"\\n  alt=\\"bse-80\\"\\n  naturalHeight={994}\\n  naturalWidth={1740}\\n/>\\n\\nCheck on the rest of the flow and make sure everything you\'ve made works.\\n\\n## Deploy Your Chatbot\\n\\nNow we will try to deploy our chatbot to LINE Messenger.\\n\\n### Create deployment\\n\\nFirst of all, we have to create a deployment first. Find the “Deployment” menu on the left sidebar.\\n\\n<FigureImage\\n  src=\\"/assets/images/tutorials/bot-studio/bse-81.webp\\"\\n  alt=\\"bse-81\\"\\n  naturalHeight={1118}\\n  naturalWidth={648}\\n/>\\n\\nClick on Create Deployment button on top right\\n\\n<FigureImage\\n  src=\\"/assets/images/tutorials/bot-studio/bse-82.webp\\"\\n  alt=\\"bse-82\\"\\n  naturalHeight={794}\\n  naturalWidth={3296}\\n/>\\n\\nChoose Patch on Deployment Version.\\n\\n<FigureImage\\n  src=\\"/assets/images/tutorials/bot-studio/bse-83.webp\\"\\n  alt=\\"bse-83\\"\\n  naturalHeight={932}\\n  naturalWidth={1557}\\n/>\\n\\nSuccesfully created deployment looks like this.\\n\\n<FigureImage\\n  src=\\"/assets/images/tutorials/bot-studio/bse-84.webp\\"\\n  alt=\\"bse-84\\"\\n  naturalHeight={511}\\n  naturalWidth={1906}\\n/>\\n\\n### Create Environment\\n\\nKata | Platform 3.0 allows you to set up 3 separate environments in your project: Development, Staging, and Production. Inside each environment, you can add as many messaging channel as you like. You have to setup environment first before integrating to messaging channel.\\n\\nIn this tutorial, we will try to setup Production environment. Click on Environment menu under Deploy and you will be shown 3 available environments.\\n\\n<FigureImage\\n  src=\\"/assets/images/tutorials/bot-studio/bse-85.webp\\"\\n  alt=\\"bse-85\\"\\n  naturalHeight={1230}\\n  naturalWidth={3342}\\n/>\\n\\nClick “Create Environment” button in Production.\\n\\nThe first field we have to fill in is deployment version. Choose 0.0.1 (shown on the previous step) as deployment version in Production.\\n\\nAnother field we have to fill in is environment URL. This URL is used to access CMS Client later.\\n\\n<FigureImage\\n  src=\\"/assets/images/tutorials/bot-studio/bse-86.webp\\"\\n  alt=\\"bse-86\\"\\n  naturalHeight={788}\\n  naturalWidth={858}\\n/>\\n\\nSuccessfully created environment will look like this\\n\\n<FigureImage\\n  src=\\"/assets/images/tutorials/bot-studio/bse-87.webp\\"\\n  alt=\\"bse-87\\"\\n  naturalHeight={480}\\n  naturalWidth={882}\\n/>\\n\\nNext, we need to create channel inside the environment. Click on Create Channel on Production environment and you will be redirected to Create Channel page\\n\\n<FigureImage\\n  src=\\"/assets/images/tutorials/bot-studio/bse-88.webp\\"\\n  alt=\\"bse-88\\"\\n  naturalHeight={1342}\\n  naturalWidth={3352}\\n/>\\n\\nNext, click “Create Channel” and fill in as follows\\n\\n<FigureImage\\n  src=\\"/assets/images/tutorials/bot-studio/bse-89.webp\\"\\n  alt=\\"bse-89\\"\\n  naturalHeight={1280}\\n  naturalWidth={916}\\n/>\\n\\nLet\'s setup LINE developer console so you can fill in fields highlighted with red box.\\n\\n### Registration to LINE Developer console\\n\\n**Create LINE account**\\n\\nTo sign up for a LINE developer account, you have to have a LINE account by <a href=\\"https://line.me/en/download\\" target=\\"_blank\\"> installing LINE application, either desktop or mobile app.</a> After you successfully registered, sign in to <a href=\\"https://developers.line.biz/en/\\" target=\\"_blank\\">https://developers.line.biz/en/</a>\\n\\nIn LINE Developer Console click Log In.\\n\\n<FigureImage\\n  src=\\"/assets/images/tutorials/bot-studio/bse-90.webp\\"\\n  alt=\\"bse-90\\"\\n  naturalHeight={1726}\\n  naturalWidth={3358}\\n/>\\n\\nClick on Log in with LINE\\n\\n<FigureImage\\n  src=\\"/assets/images/tutorials/bot-studio/bse-91.webp\\"\\n  alt=\\"bse-91\\"\\n  naturalHeight={1134}\\n  naturalWidth={1054}\\n/>\\n\\nEnter your email and password\\n\\n<FigureImage\\n  src=\\"/assets/images/tutorials/bot-studio/bse-92.webp\\"\\n  alt=\\"bse-92\\"\\n  naturalHeight={1046}\\n  naturalWidth={994}\\n/>\\n\\nAfter you successfully logged in, you will be redirected to provider list dashboard\\n\\n<FigureImage\\n  src=\\"/assets/images/tutorials/bot-studio/bse-93.webp\\"\\n  alt=\\"bse-93\\"\\n  naturalHeight={1686}\\n  naturalWidth={3328}\\n/>\\n\\n**Create a Provider**\\n\\nClick “Create New Provider”\\n\\n<FigureImage\\n  src=\\"/assets/images/tutorials/bot-studio/bse-94.webp\\"\\n  alt=\\"bse-94\\"\\n  naturalHeight={1158}\\n  naturalWidth={2814}\\n/>\\n\\nFill in provider name\\n\\n<FigureImage\\n  src=\\"/assets/images/tutorials/bot-studio/bse-95.webp\\"\\n  alt=\\"bse-95\\"\\n  naturalHeight={1382}\\n  naturalWidth={3358}\\n/>\\n\\nClick Confirm to continue. You will have to re-confirm the provider name since it cannot be changed later. Click “Create” to confirm.\\n\\n<FigureImage\\n  src=\\"/assets/images/tutorials/bot-studio/bse-96.webp\\"\\n  alt=\\"bse-96\\"\\n  naturalHeight={1154}\\n  naturalWidth={3358}\\n/>\\n\\n### Setup Channel for LINE Integration\\n\\nSetup channel in Messaging API by clicking Create Channel on Messaging API.\\n\\n<FigureImage\\n  src=\\"/assets/images/tutorials/bot-studio/bse-97.webp\\"\\n  alt=\\"bse-97\\"\\n  naturalHeight={1438}\\n  naturalWidth={2812}\\n/>\\n\\nFill in the form as follows\\n\\n<FigureImage\\n  src=\\"/assets/images/tutorials/bot-studio/bse-98.webp\\"\\n  alt=\\"bse-98\\"\\n  naturalHeight={1714}\\n  naturalWidth={3348}\\n/>\\n\\n<FigureImage\\n  src=\\"/assets/images/tutorials/bot-studio/bse-99.webp\\"\\n  alt=\\"bse-99\\"\\n  naturalHeight={536}\\n  naturalWidth={2726}\\n/>\\n\\nNext, you have to choose **Developer Trial as Plan**\\n\\n<FigureImage\\n  src=\\"/assets/images/tutorials/bot-studio/bse-100.webp\\"\\n  alt=\\"bse-100\\"\\n  naturalHeight={510}\\n  naturalWidth={2322}\\n/>\\n\\nAccept Terms of Use from LINE then click Create\\n\\n<FigureImage\\n  src=\\"/assets/images/tutorials/bot-studio/bse-101.webp\\"\\n  alt=\\"bse-101\\"\\n  naturalHeight={548}\\n  naturalWidth={1970}\\n/>\\n\\nSuccessfuly created channel will look like this\\n\\n<FigureImage\\n  src=\\"/assets/images/tutorials/bot-studio/bse-102.webp\\"\\n  alt=\\"bse-102\\"\\n  naturalHeight={1012}\\n  naturalWidth={1176}\\n/>\\n\\n### Integration LINE and Your Chatbot\\n\\nClick on created channel to fill in Channel Access Token and Channel Secret. Here is the guideline to fill in those fields\\n\\n#### Fill in Channel Access Token field\\n\\nClick “Issue” in Messaging Settings section\\n\\n<FigureImage\\n  src=\\"/assets/images/tutorials/bot-studio/bse-103.webp\\"\\n  alt=\\"bse-103\\"\\n  naturalHeight={1086}\\n  naturalWidth={2724}\\n/>\\n\\nThen, issue dialog will pop up. Click on Issue to continue\\n\\n<FigureImage\\n  src=\\"/assets/images/tutorials/bot-studio/bse-104.webp\\"\\n  alt=\\"bse-104\\"\\n  naturalHeight={782}\\n  naturalWidth={1084}\\n/>\\n\\nThen, copy Channel Access Token below and paste it on Create Channel form in Kata | Platform\\n\\n<FigureImage\\n  src=\\"/assets/images/tutorials/bot-studio/bse-105.webp\\"\\n  alt=\\"bse-105\\"\\n  naturalHeight={380}\\n  naturalWidth={2732}\\n/>\\n\\n<FigureImage\\n  src=\\"/assets/images/tutorials/bot-studio/bse-106.webp\\"\\n  alt=\\"bse-106\\"\\n  naturalHeight={964}\\n  naturalWidth={740}\\n/>\\n\\n**Fill in Channel Secret field**\\n\\nIn Basic Information, copy Channel Secret from LINE to Kata | Platform\\n\\n<FigureImage\\n  src=\\"/assets/images/tutorials/bot-studio/bse-107.webp\\"\\n  alt=\\"bse-107\\"\\n  naturalHeight={1612}\\n  naturalWidth={2896}\\n/>\\n\\n<FigureImage\\n  src=\\"/assets/images/tutorials/bot-studio/bse-108.webp\\"\\n  alt=\\"bse-108\\"\\n  naturalHeight={996}\\n  naturalWidth={766}\\n/>\\n\\nFinal result in Kata | Platform will look like this\\n\\n<FigureImage\\n  src=\\"/assets/images/tutorials/bot-studio/bse-109.webp\\"\\n  alt=\\"bse-109\\"\\n  naturalHeight={996}\\n  naturalWidth={766}\\n/>\\n\\nClick “Create” to generate webhook URL from Kata | Platform.\\n\\n<FigureImage\\n  src=\\"/assets/images/tutorials/bot-studio/bse-110.webp\\"\\n  alt=\\"bse-110\\"\\n  naturalHeight={506}\\n  naturalWidth={2780}\\n/>\\n\\nAfter webhook URL is generated, go to Messaging Settings in LINE developer console to enable webhook. **Please check that you already enable the webhook by click on Enable in \\"Use Webhoooks\\" section which placed above Webhook URL field**\\n\\n<FigureImage\\n  src=\\"/assets/images/tutorials/bot-studio/bse-111.webp\\"\\n  alt=\\"bse-111\\"\\n  naturalHeight={678}\\n  naturalWidth={2832}\\n/>\\n\\nClick “Update” then paste the webhook URL to LINE developer console.\\n\\n<FigureImage\\n  src=\\"/assets/images/tutorials/bot-studio/bse-112.webp\\"\\n  alt=\\"bse-112\\"\\n  naturalHeight={892}\\n  naturalWidth={2820}\\n/>\\n\\nClick “Update” then click “Verify.”\\n\\n<FigureImage\\n  src=\\"/assets/images/tutorials/bot-studio/bse-113.webp\\"\\n  alt=\\"bse-113\\"\\n  naturalHeight={928}\\n  naturalWidth={2836}\\n/>\\n\\nNext, disable auto-reply messages and greeting messages\\n\\n<FigureImage\\n  src=\\"/assets/images/tutorials/bot-studio/bse-114.webp\\"\\n  alt=\\"bse-114\\"\\n  naturalHeight={856}\\n  naturalWidth={2828}\\n/>\\n\\nVoila! You have successfully deployed your bot to LINE Messenger.\\n\\nScan the QR Code in LINE Developer Console to add the bot.\\n\\n<FigureImage\\n  src=\\"/assets/images/tutorials/bot-studio/bse-115.webp\\"\\n  alt=\\"bse-115\\"\\n  naturalHeight={582}\\n  naturalWidth={2082}\\n/>\\n\\nThen, test to scan QR Code\\n\\n<FigureImage\\n  src=\\"/assets/images/tutorials/bot-studio/bse-116.webp\\"\\n  alt=\\"bse-116\\"\\n  naturalHeight={1920}\\n  naturalWidth={1080}\\n/>\\n","code":"var Component=(()=>{var h=Object.create;var o=Object.defineProperty;var u=Object.getOwnPropertyDescriptor;var b=Object.getOwnPropertyNames;var p=Object.getPrototypeOf,m=Object.prototype.hasOwnProperty;var l=n=>o(n,\\"__esModule\\",{value:!0});var g=(n,i)=>()=>(i||n((i={exports:{}}).exports,i),i.exports),w=(n,i)=>{for(var s in i)o(n,s,{get:i[s],enumerable:!0})},r=(n,i,s,t)=>{if(i&&typeof i==\\"object\\"||typeof i==\\"function\\")for(let a of b(i))!m.call(n,a)&&(s||a!==\\"default\\")&&o(n,a,{get:()=>i[a],enumerable:!(t=u(i,a))||t.enumerable});return n},f=(n,i)=>r(l(o(n!=null?h(p(n)):{},\\"default\\",!i&&n&&n.__esModule?{get:()=>n.default,enumerable:!0}:{value:n,enumerable:!0})),n),k=(n=>(i,s)=>n&&n.get(i)||(s=r(l({}),i,1),n&&n.set(i,s),s))(typeof WeakMap!=\\"undefined\\"?new WeakMap:0);var d=g((v,c)=>{c.exports=_jsx_runtime});var W={};w(W,{default:()=>z,frontmatter:()=>y});var e=f(d()),y={layout:\\"tutorial\\",id:\\"bot-studio\\",title:\\"Bot Studio Tutorial\\",imgSpot:\\"/assets/images/tutorials/spot-cms.webp\\",product:\\"kata-platform\\",prev:\\"hello-world-tutorial\\",next:\\"nl-studio-tutorial\\",date:\\"2018-07-07T07:00:00+07:00\\"};function N(n={}){let{wrapper:i}=n.components||{};return i?(0,e.jsx)(i,Object.assign({},n,{children:(0,e.jsx)(s,{})})):s();function s(){let t=Object.assign({h2:\\"h2\\",a:\\"a\\",span:\\"span\\",p:\\"p\\",h3:\\"h3\\",strong:\\"strong\\",code:\\"code\\",pre:\\"pre\\",h4:\\"h4\\"},n.components),{FigureImage:a}=t;return a||C(\\"FigureImage\\",!0),(0,e.jsxs)(e.Fragment,{children:[(0,e.jsxs)(t.h2,{id:\\"introduction\\",children:[(0,e.jsx)(t.a,{className:\\"anchor\\",href:\\"#introduction\\",children:(0,e.jsx)(t.span,{className:\\"icon icon-link\\"})}),\\"Introduction\\"]}),`\\n`,(0,e.jsx)(t.p,{children:\\"Building a chatbot on Kata | Platform is quick and easy, even with a lack of programming knowledge. In this tutorial, we will learn how to create a simple bot on LINE Messenger to order a pizza. We will also learn how to train your bot with NL Studio.\\"}),`\\n`,(0,e.jsx)(t.p,{children:\\"Let\'s start by looking at this bot diagram, or commonly called \\\\u201Cconversation tree.\\\\u201D Conversation tree is an overview of chatbot functionalities. In this conversation tree, we break down the process of ordering pizza and the types of bot action we want to use on each state.\\"}),`\\n`,(0,e.jsx)(a,{src:\\"/assets/images/tutorials/bot-studio/bse-1.webp\\",alt:\\"bse-1\\",naturalHeight:1040,naturalWidth:1040}),`\\n`,(0,e.jsxs)(t.h2,{id:\\"sign-up-to-kata--platform\\",children:[(0,e.jsx)(t.a,{className:\\"anchor\\",href:\\"#sign-up-to-kata--platform\\",children:(0,e.jsx)(t.span,{className:\\"icon icon-link\\"})}),\\"Sign up to Kata | Platform\\"]}),`\\n`,(0,e.jsx)(t.p,{children:\\"Create an account on Kata | Platform to start building chatbot.\\"}),`\\n`,(0,e.jsxs)(t.p,{children:[\\"On your browser, open \\",(0,e.jsx)(\\"a\\",{href:\\"https://platform.kata.ai/login\\",target:\\"_blank\\",children:(0,e.jsx)(t.a,{href:\\"https://platform.kata.ai/login\\",children:\\"https://platform.kata.ai/login\\"})}),\\" and click \\\\u201CSign Up\\\\u201D\\"]}),`\\n`,(0,e.jsx)(a,{src:\\"/assets/images/tutorials/bot-studio/bse-2.webp\\",alt:\\"bse-2\\",naturalHeight:1016,naturalWidth:870}),`\\n`,(0,e.jsx)(t.p,{children:\'Then fill the form with a username, an email, and an account type. Continue by clicking \\"Sign Up.\\"\'}),`\\n`,(0,e.jsx)(a,{src:\\"/assets/images/tutorials/bot-studio/bse-3.webp\\",alt:\\"bse-3\\",naturalHeight:1238,naturalWidth:872}),`\\n`,(0,e.jsx)(t.p,{children:\\"You will get a confirmation email once our team has verified your account.\\"}),`\\n`,(0,e.jsx)(t.p,{children:\\"You may follow the instructions provided in the confirmation email to activate and start using your account.\\"}),`\\n`,(0,e.jsxs)(t.h2,{id:\\"create-a-project\\",children:[(0,e.jsx)(t.a,{className:\\"anchor\\",href:\\"#create-a-project\\",children:(0,e.jsx)(t.span,{className:\\"icon icon-link\\"})}),\\"Create a Project\\"]}),`\\n`,(0,e.jsxs)(t.h3,{id:\\"login-to-kata--platform\\",children:[(0,e.jsx)(t.a,{className:\\"anchor\\",href:\\"#login-to-kata--platform\\",children:(0,e.jsx)(t.span,{className:\\"icon icon-link\\"})}),\\"Login to Kata | Platform\\"]}),`\\n`,(0,e.jsxs)(t.p,{children:[\\"On your browser, open \\",(0,e.jsx)(\\"a\\",{href:\\"https://platform.kata.ai/login\\",target:\\"_blank\\",children:\\"platform.kata.ai/login\\"}),\\" and enter your username & password.\\"]}),`\\n`,(0,e.jsx)(a,{src:\\"/assets/images/tutorials/bot-studio/bse-4.webp\\",alt:\\"bse-4\\",naturalHeight:1050,naturalWidth:878}),`\\n`,(0,e.jsx)(t.p,{children:\'Click \\"Login\\" to continue.\'}),`\\n`,(0,e.jsxs)(t.h3,{id:\\"create-a-project-1\\",children:[(0,e.jsx)(t.a,{className:\\"anchor\\",href:\\"#create-a-project-1\\",children:(0,e.jsx)(t.span,{className:\\"icon icon-link\\"})}),\\"Create a project\\"]}),`\\n`,(0,e.jsx)(t.p,{children:\\"After you logged in, you will be taken to the Project Page.\\"}),`\\n`,(0,e.jsx)(a,{src:\\"/assets/images/tutorials/bot-studio/bse-5.webp\\",alt:\\"bse-5\\",naturalHeight:1046,naturalWidth:2896}),`\\n`,(0,e.jsx)(t.p,{children:\\"Click on \\\\u201CCreate Project\\\\u201D and fill in the form. Each project contains one bot design, one NL, and one CMS.\\"}),`\\n`,(0,e.jsx)(a,{src:\\"/assets/images/tutorials/bot-studio/bse-6.webp\\",alt:\\"bse-6\\",naturalHeight:1152,naturalWidth:842}),`\\n`,(0,e.jsx)(t.p,{children:\\"NLU language is used to determine which language model you want to use. Currently, we support Bahasa Indonesia and English.\\"}),`\\n`,(0,e.jsxs)(t.p,{children:[\\"You can also choose NLU Visibility to be public or private. If you choose public, \\",(0,e.jsx)(t.strong,{children:\\"all Kata | Platform users\\"}),\\" can utilize your NLU using root and inherit function.\\"]}),`\\n`,(0,e.jsxs)(t.h2,{id:\\"create-fallback-flow\\",children:[(0,e.jsx)(t.a,{className:\\"anchor\\",href:\\"#create-fallback-flow\\",children:(0,e.jsx)(t.span,{className:\\"icon icon-link\\"})}),\\"Create Fallback Flow\\"]}),`\\n`,(0,e.jsxs)(t.h3,{id:\\"create-fallback-flow-1\\",children:[(0,e.jsx)(t.a,{className:\\"anchor\\",href:\\"#create-fallback-flow-1\\",children:(0,e.jsx)(t.span,{className:\\"icon icon-link\\"})}),\\"Create fallback flow\\"]}),`\\n`,(0,e.jsx)(t.p,{children:\\"Once you create a project, you will be redirected to the Bot Studio menu.\\"}),`\\n`,(0,e.jsxs)(t.p,{children:[\\"Now we are going to learn how to create a flow. Flow is a container of \\",(0,e.jsx)(t.strong,{children:\\"intent, state, and action\\"}),\\". A flow typically represents a linear process.\\"]}),`\\n`,(0,e.jsx)(t.p,{children:\\"The first flow that we will create is a Fallback Flow. Its purpose is to handle undefined users input, or commonly called \\\\u201Celse condition\\\\u201D state. In this case, the \\\\u201Celse condition\\\\u201D is everything that is not \\\\u201CStart Order\\\\u201D.\\"}),`\\n`,(0,e.jsx)(a,{src:\\"/assets/images/tutorials/bot-studio/bse-1.webp\\",alt:\\"bse-1\\",naturalHeight:1040,naturalWidth:1040}),`\\n`,(0,e.jsx)(t.p,{children:\\"You may find a flow that is created automatically by the system or default flow. We will delete that flow by pressing more button and then \\\\u201CDelete.\\\\u201D\\"}),`\\n`,(0,e.jsx)(a,{src:\\"/assets/images/tutorials/bot-studio/bse-8.webp\\",alt:\\"bse-8\\",naturalHeight:1008,naturalWidth:1762}),`\\n`,(0,e.jsxs)(t.p,{children:[\\"Next, click \\\\u201CCreate Flow\\\\u201D button to create \\",(0,e.jsx)(t.code,{children:\\"fallback\\"}),\\" flow. Set flow to active, persistent, and default.\\"]}),`\\n`,(0,e.jsx)(a,{src:\\"/assets/images/tutorials/bot-studio/bse-9.webp\\",alt:\\"bse-9\\",naturalHeight:780,naturalWidth:846}),`\\n`,(0,e.jsxs)(t.h3,{id:\\"create-fallback-intent\\",children:[(0,e.jsx)(t.a,{className:\\"anchor\\",href:\\"#create-fallback-intent\\",children:(0,e.jsx)(t.span,{className:\\"icon icon-link\\"})}),\\"Create fallback intent\\"]}),`\\n`,(0,e.jsxs)(t.p,{children:[\\"After you have created \\",(0,e.jsx)(t.code,{children:\\"fallback\\"}),\\" flow, we will create new intent by pressing the Intents tab on the sub-menu. Then, we will create a new intent for \\",(0,e.jsx)(t.code,{children:\\"fallback\\"}),\\" flow. Click \\\\u201CCreate Intent\\\\u201D button to create.\\"]}),`\\n`,(0,e.jsx)(a,{src:\\"/assets/images/tutorials/bot-studio/bse-10.webp\\",alt:\\"bse-10\\",naturalHeight:674,naturalWidth:1960}),`\\n`,(0,e.jsx)(t.p,{children:\\"Then, fill in the form as follows\\"}),`\\n`,(0,e.jsx)(a,{src:\\"/assets/images/tutorials/bot-studio/bse-11.webp\\",alt:\\"bse-11\\",naturalHeight:808,naturalWidth:892}),`\\n`,(0,e.jsxs)(t.h3,{id:\\"create-state-init\\",children:[(0,e.jsx)(t.a,{className:\\"anchor\\",href:\\"#create-state-init\\",children:(0,e.jsx)(t.span,{className:\\"icon icon-link\\"})}),\\"Create State init\\"]}),`\\n`,(0,e.jsxs)(t.p,{children:[\\"Next, we will create a state called \\",(0,e.jsx)(t.code,{children:\\"init\\"}),\\". Click the \\\\u201D+\\\\u201D button at the bottom right of your screen.\\"]}),`\\n`,(0,e.jsx)(a,{src:\\"/assets/images/tutorials/bot-studio/bse-12.webp\\",alt:\\"bse-12\\",naturalHeight:1722,naturalWidth:3342}),`\\n`,(0,e.jsxs)(t.p,{children:[\\"Fill state with name \\",(0,e.jsx)(t.code,{children:\\"init\\"}),\\" on Overview tab and set it to initial state and end state (as shown below).\\"]}),`\\n`,(0,e.jsxs)(t.p,{children:[\\"Enabling Initial State and End State will make \\",(0,e.jsx)(t.code,{children:\\"init\\"}),\\" the first and the last flow to be checked by the bot when there isn\'t any flow that matches a user\'s input.\\"]}),`\\n`,(0,e.jsx)(a,{src:\\"/assets/images/tutorials/bot-studio/bse-13.webp\\",alt:\\"bse-13\\",naturalHeight:734,naturalWidth:910}),`\\n`,(0,e.jsx)(t.p,{children:\\"Now we will create a bot response to display an apology message. Click \\\\u201CAdd actions\\\\u201D button to create a response.\\"}),`\\n`,(0,e.jsx)(a,{src:\\"/assets/images/tutorials/bot-studio/bse-14.webp\\",alt:\\"bse-14\\",naturalHeight:626,naturalWidth:860}),`\\n`,(0,e.jsx)(t.p,{children:\\"Container for creating action will appear\\"}),`\\n`,(0,e.jsx)(a,{src:\\"/assets/images/tutorials/bot-studio/bse-15.webp\\",alt:\\"bse-15\\",naturalHeight:1200,naturalWidth:840}),`\\n`,(0,e.jsxs)(t.h3,{id:\\"create-action-text-in-state-init\\",children:[(0,e.jsx)(t.a,{className:\\"anchor\\",href:\\"#create-action-text-in-state-init\\",children:(0,e.jsx)(t.span,{className:\\"icon icon-link\\"})}),\\"Create Action Text in State init\\"]}),`\\n`,(0,e.jsx)(t.p,{children:\\"Click on \\\\u201C+\\\\u201D button to create a new action.\\"}),`\\n`,(0,e.jsx)(a,{src:\\"/assets/images/tutorials/bot-studio/bse-16.webp\\",alt:\\"bse-16\\",naturalHeight:1110,naturalWidth:870}),`\\n`,(0,e.jsx)(t.p,{children:\\"Choose action type \\\\u201CText\\\\u201D\\"}),`\\n`,(0,e.jsx)(a,{src:\\"/assets/images/tutorials/bot-studio/bse-17.webp\\",alt:\\"bse-17\\",naturalHeight:1382,naturalWidth:860}),`\\n`,(0,e.jsx)(t.p,{children:\\"Then, fill in the form\\"}),`\\n`,(0,e.jsx)(a,{src:\\"/assets/images/tutorials/bot-studio/bse-18.webp\\",alt:\\"bse-18\\",naturalHeight:1348,naturalWidth:866}),`\\n`,(0,e.jsx)(t.p,{children:\\"Click on \\\\u201CCreate Action\\\\u201D button.\\"}),`\\n`,(0,e.jsx)(a,{src:\\"/assets/images/tutorials/bot-studio/bse-19.webp\\",alt:\\"bse-19\\",naturalHeight:770,naturalWidth:876}),`\\n`,(0,e.jsxs)(t.h3,{id:\\"create-self-transition-in-state-init\\",children:[(0,e.jsx)(t.a,{className:\\"anchor\\",href:\\"#create-self-transition-in-state-init\\",children:(0,e.jsx)(t.span,{className:\\"icon icon-link\\"})}),\\"Create Self Transition in State Init\\"]}),`\\n`,(0,e.jsxs)(t.p,{children:[\\"The last step to finalize \\",(0,e.jsx)(t.code,{children:\\"fallback\\"}),\\" flow is to create self-transition for \\",(0,e.jsx)(t.code,{children:\\"init\\"}),\\" state. Self transition is required to avoid error when the next state is not available. Click on \\\\u201CTransitions\\\\u201D and enable Self Transition.\\"]}),`\\n`,(0,e.jsx)(a,{src:\\"/assets/images/tutorials/bot-studio/bse-20.webp\\",alt:\\"bse-20\\",naturalHeight:1202,naturalWidth:866}),`\\n`,(0,e.jsx)(t.p,{children:\\"Click \\\\u201CCreate\\\\u201D button. Your screen should look like this\\"}),`\\n`,(0,e.jsx)(a,{src:\\"/assets/images/tutorials/bot-studio/bse-21.webp\\",alt:\\"bse-21\\",naturalHeight:1018,naturalWidth:1840}),`\\n`,(0,e.jsxs)(t.h2,{id:\\"create-order-flow\\",children:[(0,e.jsx)(t.a,{className:\\"anchor\\",href:\\"#create-order-flow\\",children:(0,e.jsx)(t.span,{className:\\"icon icon-link\\"})}),\\"Create Order Flow\\"]}),`\\n`,(0,e.jsxs)(t.p,{children:[\\"Next, we will create \\",(0,e.jsx)(t.code,{children:\\"Start Order\\"}),\\" flow to handle pizza order.\\"]}),`\\n`,(0,e.jsx)(a,{src:\\"/assets/images/tutorials/bot-studio/bse-1.webp\\",alt:\\"bse-1\\",naturalHeight:1040,naturalWidth:1040}),`\\n`,(0,e.jsxs)(t.h3,{id:\\"create-flow-order\\",children:[(0,e.jsx)(t.a,{className:\\"anchor\\",href:\\"#create-flow-order\\",children:(0,e.jsx)(t.span,{className:\\"icon icon-link\\"})}),\\"Create Flow Order\\"]}),`\\n`,(0,e.jsxs)(t.p,{children:[\\"First step is to create another flow called \\",(0,e.jsx)(t.code,{children:\\"order\\"}),\\" .\\"]}),`\\n`,(0,e.jsx)(a,{src:\\"/assets/images/tutorials/bot-studio/bse-22.webp\\",alt:\\"bse-22\\",naturalHeight:1676,naturalWidth:880}),`\\n`,(0,e.jsx)(t.p,{children:\\"Created flow will be shown like this\\"}),`\\n`,(0,e.jsx)(a,{src:\\"/assets/images/tutorials/bot-studio/bse-23.webp\\",alt:\\"bse-23\\",naturalHeight:1098,naturalWidth:1642}),`\\n`,(0,e.jsxs)(t.h3,{id:\\"create-keyword-nlus-for-order\\",children:[(0,e.jsx)(t.a,{className:\\"anchor\\",href:\\"#create-keyword-nlus-for-order\\",children:(0,e.jsx)(t.span,{className:\\"icon icon-link\\"})}),\\"Create Keyword NLUs for \'Order\'\\"]}),`\\n`,(0,e.jsxs)(t.p,{children:[\\"In this step, we will define the NLU (Natural Language Understanding) to trigger \\",(0,e.jsx)(t.code,{children:\\"order\\"}),\\" flow. NLU is used to translate user inputs into data that machine can understand. There are many types of NLU, but the type that we will use in this particular flow is called \\",(0,e.jsx)(t.code,{children:\\"keyword\\"}),\\". To define the NLU, go to NLUs menu.\\"]}),`\\n`,(0,e.jsx)(a,{src:\\"/assets/images/tutorials/bot-studio/bse-24.webp\\",alt:\\"bse-24\\",naturalHeight:1114,naturalWidth:1680}),`\\n`,(0,e.jsx)(t.p,{children:\\"Next, click on \\\\u201CCreate NLU\\\\u201D\\"}),`\\n`,(0,e.jsx)(a,{src:\\"/assets/images/tutorials/bot-studio/bse-25.webp\\",alt:\\"bse-25\\",naturalHeight:1078,naturalWidth:1986}),`\\n`,(0,e.jsxs)(t.p,{children:[\\"Choose Keyword type and enter keywords that represents \\",(0,e.jsx)(t.code,{children:\\"order\\"}),\\", such as \\\\u201Corder\\\\u201D, \\\\u201Cpls order\\\\u201D, \\\\u201Corder pza\\\\u201D.\\"]}),`\\n`,(0,e.jsx)(a,{src:\\"/assets/images/tutorials/bot-studio/bse-26.webp\\",alt:\\"bse-26\\",naturalHeight:1698,naturalWidth:904}),`\\n`,(0,e.jsx)(t.p,{children:\\"Successfully created NLU looks like this\\"}),`\\n`,(0,e.jsx)(a,{src:\\"/assets/images/tutorials/bot-studio/bse-27.webp\\",alt:\\"bse-27\\",naturalHeight:1034,naturalWidth:2464}),`\\n`,(0,e.jsxs)(t.h3,{id:\\"create-intent-for-order\\",children:[(0,e.jsx)(t.a,{className:\\"anchor\\",href:\\"#create-intent-for-order\\",children:(0,e.jsx)(t.span,{className:\\"icon icon-link\\"})}),\\"Create Intent for Order\\"]}),`\\n`,(0,e.jsxs)(t.p,{children:[\\"Each flow requires an \\",(0,e.jsx)(t.code,{children:\\"intent\\"}),\\" to classify user\'s inquiry and trigger matching flow. So our next step is to set initial intent for \\",(0,e.jsx)(t.code,{children:\\"order\\"}),\\" flow.\\"]}),`\\n`,(0,e.jsxs)(t.p,{children:[\\"Go back to Conversation Flow menu and click on \\",(0,e.jsx)(t.code,{children:\\"order\\"}),\\" flow, then click on \\\\u201CIntents\\\\u201D tab.\\"]}),`\\n`,(0,e.jsx)(a,{src:\\"/assets/images/tutorials/bot-studio/bse-28.webp\\",alt:\\"bse-28\\",naturalHeight:1012,naturalWidth:1922}),`\\n`,(0,e.jsxs)(t.p,{children:[\\"Previously, you already created keyword NLUs called \\",(0,e.jsx)(t.code,{children:\\"order\\"}),\\". We will set that keyword as intent in \\",(0,e.jsx)(t.code,{children:\\"order\\"}),\\" flow. Map the NLU on classifier section.\\"]}),`\\n`,(0,e.jsx)(a,{src:\\"/assets/images/tutorials/bot-studio/bse-29.webp\\",alt:\\"bse-29\\",naturalHeight:1688,naturalWidth:922}),`\\n`,(0,e.jsx)(t.p,{children:\\"Click \\\\u201CCreate\\\\u201D to create the intent. Your screen should look like this\\"}),`\\n`,(0,e.jsx)(a,{src:\\"/assets/images/tutorials/bot-studio/bse-30.webp\\",alt:\\"bse-30\\",naturalHeight:1060,naturalWidth:2564}),`\\n`,(0,e.jsxs)(t.h3,{id:\\"create-a-state-named-init\\",children:[(0,e.jsx)(t.a,{className:\\"anchor\\",href:\\"#create-a-state-named-init\\",children:(0,e.jsx)(t.span,{className:\\"icon icon-link\\"})}),\\"Create a State Named init\\"]}),`\\n`,(0,e.jsxs)(t.p,{children:[\\"Every flow must have at least one state. Because we haven\'t created any state in \\",(0,e.jsx)(t.code,{children:\\"order\\"}),\\" flow, we have to create one. Let\'s create a state called \\",(0,e.jsx)(t.code,{children:\\"init\\"}),\\".\\"]}),`\\n`,(0,e.jsx)(a,{src:\\"/assets/images/tutorials/bot-studio/bse-31.webp\\",alt:\\"bse-31\\",naturalHeight:1676,naturalWidth:854}),`\\n`,(0,e.jsx)(t.p,{children:\\"Click \\\\u201CCreate\\\\u201D button to create initial state.\\"}),`\\n`,(0,e.jsxs)(t.p,{children:[\\"Next, we will define how the bot will respond to user who entered \\",(0,e.jsx)(t.code,{children:\\"order\\"}),\\" flow.\\"]}),`\\n`,(0,e.jsxs)(t.h2,{id:\\"create-action-for-pizza-menu\\",children:[(0,e.jsx)(t.a,{className:\\"anchor\\",href:\\"#create-action-for-pizza-menu\\",children:(0,e.jsx)(t.span,{className:\\"icon icon-link\\"})}),\\"Create Action for Pizza Menu\\"]}),`\\n`,(0,e.jsxs)(t.p,{children:[\\"As seen on the conversation tree below, the first message in \\",(0,e.jsx)(t.code,{children:\\"order\\"}),\\" flow is \\\\u201CShow Pizza Type\\\\u201D\\"]}),`\\n`,(0,e.jsx)(a,{src:\\"/assets/images/tutorials/bot-studio/bse-1.webp\\",alt:\\"bse-1\\",naturalHeight:1040,naturalWidth:1040}),`\\n`,(0,e.jsxs)(t.h3,{id:\\"create-a-state-to-show-pizza-type-in-text-action-type\\",children:[(0,e.jsx)(t.a,{className:\\"anchor\\",href:\\"#create-a-state-to-show-pizza-type-in-text-action-type\\",children:(0,e.jsx)(t.span,{className:\\"icon icon-link\\"})}),\\"Create a State to Show Pizza type in Text Action Type\\"]}),`\\n`,(0,e.jsxs)(t.p,{children:[\\"To get started, we need to create a state named \\",(0,e.jsx)(t.code,{children:\\"showPizza\\"}),\\" on \\",(0,e.jsx)(t.code,{children:\\"order\\"}),\\" flow. Click on \\\\u201C+\\\\u201D button in Conversation Flow menu.\\"]}),`\\n`,(0,e.jsx)(a,{src:\\"/assets/images/tutorials/bot-studio/bse-33.webp\\",alt:\\"bse-33\\",naturalHeight:1304,naturalWidth:854}),`\\n`,(0,e.jsxs)(t.p,{children:[\\"Let\'s begin by creating an action called \\",(0,e.jsx)(t.code,{children:\\"pizzaOptions\\"}),\\". This action will inform users in \\",(0,e.jsx)(t.strong,{children:\\"text about our available pizza menu\\"}),\\".\\"]}),`\\n`,(0,e.jsx)(t.p,{children:\\"Click on \\\\u201C+\\\\u201D button to create an action and choose Text as action type.\\"}),`\\n`,(0,e.jsx)(a,{src:\\"/assets/images/tutorials/bot-studio/bse-34.webp\\",alt:\\"bse-34\\",naturalHeight:1540,naturalWidth:850}),`\\n`,(0,e.jsx)(t.p,{children:\\"Fill in Text action type to inform our pizza menu\\"}),`\\n`,(0,e.jsx)(a,{src:\\"/assets/images/tutorials/bot-studio/bse-35.webp\\",alt:\\"bse-35\\",naturalHeight:917,naturalWidth:792}),`\\n`,(0,e.jsxs)(t.p,{children:[\\"Click on \\\\u201CCreate Action\\\\u201D to finalize. Next step is to create an action called \\",(0,e.jsx)(t.code,{children:\\"askOptions\\"})]}),`\\n`,(0,e.jsx)(a,{src:\\"/assets/images/tutorials/bot-studio/bse-36.webp\\",alt:\\"bse-36\\",naturalHeight:924,naturalWidth:792}),`\\n`,(0,e.jsx)(t.p,{children:\\"Click on \\\\u201CCreate Action\\\\u201D button. Your form should look like this\\"}),`\\n`,(0,e.jsx)(a,{src:\\"/assets/images/tutorials/bot-studio/bse-37.webp\\",alt:\\"bse-37\\",naturalHeight:886,naturalWidth:864}),`\\n`,(0,e.jsx)(t.p,{children:\\"Then you have to make self-transition in Transition tab as follow\\"}),`\\n`,(0,e.jsx)(a,{src:\\"/assets/images/tutorials/bot-studio/bse-37-1.webp\\",alt:\\"bse-37-1\\",naturalHeight:920,naturalWidth:1308}),`\\n`,(0,e.jsx)(t.p,{children:\\"Click \\\\u201CCreate\\\\u201D to create the state. Successfully created state will look like this\\"}),`\\n`,(0,e.jsx)(a,{src:\\"/assets/images/tutorials/bot-studio/bse-38.webp\\",alt:\\"bse-38\\",naturalHeight:1042,naturalWidth:2014}),`\\n`,(0,e.jsxs)(t.h3,{id:\\"update-showpizza-state-into-show-pizza-menu-in-carousel-action-type\\",children:[(0,e.jsx)(t.a,{className:\\"anchor\\",href:\\"#update-showpizza-state-into-show-pizza-menu-in-carousel-action-type\\",children:(0,e.jsx)(t.span,{className:\\"icon icon-link\\"})}),\\"Update showPizza state Into Show Pizza Menu in Carousel Action Type\\"]}),`\\n`,(0,e.jsxs)(t.p,{children:[\\"Previous step is an example to create action to \\",(0,e.jsx)(t.strong,{children:\\"show pizza menu in text.\\"}),\\" Let\'s try to update the state into Carousel action type.\\"]}),`\\n`,(0,e.jsxs)(t.p,{children:[\\"To update the state, click on \\",(0,e.jsx)(t.code,{children:\\"showPizza\\"}),\\" state and an update state form will appear\\"]}),`\\n`,(0,e.jsx)(a,{src:\\"/assets/images/tutorials/bot-studio/bse-39.webp\\",alt:\\"bse-39\\",naturalHeight:1732,naturalWidth:1008}),`\\n`,(0,e.jsx)(t.p,{children:\\"Then, remove all actions in the state by clicking \\\\u201Cx\\\\u201D on each action.\\"}),`\\n`,(0,e.jsx)(a,{src:\\"/assets/images/tutorials/bot-studio/bse-40.webp\\",alt:\\"bse-40\\",naturalHeight:918,naturalWidth:832}),`\\n`,(0,e.jsxs)(t.p,{children:[\\"After removing available actions, we will create an action called \\",(0,e.jsx)(t.code,{children:\\"pizzaMenu\\"}),\\" as Carousel action type.\\"]}),`\\n`,(0,e.jsx)(t.p,{children:\\"Click on \\\\u201CAdd\\\\u201D actions button then click on \\\\u201C+\\\\u201D button to create a new action. Choose Carousel action type to continue.\\"}),`\\n`,(0,e.jsx)(a,{src:\\"/assets/images/tutorials/bot-studio/bse-41.webp\\",alt:\\"bse-41\\",naturalHeight:1142,naturalWidth:836}),`\\n`,(0,e.jsxs)(t.p,{children:[\\"Enter \\",(0,e.jsx)(t.code,{children:\\"pizzaMenu\\"}),\\" as name\\"]}),`\\n`,(0,e.jsx)(a,{src:\\"/assets/images/tutorials/bot-studio/bse-42.webp\\",alt:\\"bse-42\\",naturalHeight:474,naturalWidth:826}),`\\n`,(0,e.jsxs)(t.p,{children:[\\"Fill in the carousel content by clicking \\\\u201CAdd carousel\\\\u201D button, then click on \\\\u201CAdd action\\\\u201D button to define the \\",(0,e.jsx)(t.strong,{children:\\"label and type\\"}),\\". Next, click on Add Payload button to enter \\",(0,e.jsx)(t.strong,{children:\\"key and value\\"}),\\".\\"]}),`\\n`,(0,e.jsx)(t.p,{children:\\"Fill in first carousel with this data\\"}),`\\n`,(0,e.jsx)(t.pre,{children:(0,e.jsxs)(t.code,{className:\\"code-highlight\\",children:[(0,e.jsx)(t.span,{className:\\"code-line\\",children:`Title: Pepperoni\\n`}),(0,e.jsx)(t.span,{className:\\"code-line\\",children:`Text: This is the favorite of Peps\\n`}),(0,e.jsx)(t.span,{className:\\"code-line\\",children:`Thumbnail Image Url: https://www.wikihow.com/images/thumb/a/a7/Make-Pepperoni-Pizza-Step-19-Version-2.jpg/aid1074004-v4-728px-Make-Pepperoni-Pizza-Step-19-Version-2.jpg.webp\\n`}),(0,e.jsx)(t.span,{className:\\"code-line\\",children:`Actions:\\n`}),(0,e.jsx)(t.span,{className:\\"code-line\\",children:`  Label: Pepperoni\\n`}),(0,e.jsx)(t.span,{className:\\"code-line\\",children:`  Type: Postback\\n`}),(0,e.jsx)(t.span,{className:\\"code-line\\",children:`  Payload:\\n`}),(0,e.jsx)(t.span,{className:\\"code-line\\",children:`    - key: type\\n`}),(0,e.jsx)(t.span,{className:\\"code-line\\",children:`      value: pizza\\n`}),(0,e.jsx)(t.span,{className:\\"code-line\\",children:`    - key: pizza\\n`}),(0,e.jsx)(t.span,{className:\\"code-line\\",children:`      value: Pepperoni\\n`})]})}),`\\n`,(0,e.jsx)(t.p,{children:\\"Fill in second carousel with this data\\"}),`\\n`,(0,e.jsx)(t.pre,{children:(0,e.jsxs)(t.code,{className:\\"code-highlight\\",children:[(0,e.jsx)(t.span,{className:\\"code-line\\",children:`Title: Veggie Lovers\\n`}),(0,e.jsx)(t.span,{className:\\"code-line\\",children:`Text: Vegie vegie stay healthy\\n`}),(0,e.jsx)(t.span,{className:\\"code-line\\",children:`Thumbnail Image Url: https://www.calcuttaweb.com/store/image/data/calcutta/pizza/veggie-lovers-pizza-pihu-7.jpg\\n`}),(0,e.jsx)(t.span,{className:\\"code-line\\",children:`Actions:\\n`}),(0,e.jsx)(t.span,{className:\\"code-line\\",children:`  Label: Veggie Lovers\\n`}),(0,e.jsx)(t.span,{className:\\"code-line\\",children:`  Type: Postback\\n`}),(0,e.jsx)(t.span,{className:\\"code-line\\",children:`  Payload:\\n`}),(0,e.jsx)(t.span,{className:\\"code-line\\",children:`    - key: type\\n`}),(0,e.jsx)(t.span,{className:\\"code-line\\",children:`      value: pizza\\n`}),(0,e.jsx)(t.span,{className:\\"code-line\\",children:`    - key: pizza\\n`}),(0,e.jsx)(t.span,{className:\\"code-line\\",children:`      value: Veggie Lovers\\n`})]})}),`\\n`,(0,e.jsx)(t.p,{children:\\"Your first form should look like this\\"}),`\\n`,(0,e.jsx)(a,{src:\\"/assets/images/tutorials/bot-studio/bse-43.webp\\",alt:\\"bse-43\\",naturalHeight:1336,naturalWidth:752}),`\\n`,(0,e.jsx)(t.p,{children:\\"Your second form should look like this\\"}),`\\n`,(0,e.jsx)(a,{src:\\"/assets/images/tutorials/bot-studio/bse-44.webp\\",alt:\\"bse-44\\",naturalHeight:1332,naturalWidth:744}),`\\n`,(0,e.jsx)(t.p,{children:\\"Finalize this step by clicking \\\\u201CCreate Action.\\\\u201D\\"}),`\\n`,(0,e.jsx)(t.p,{children:\\"It should look like this\\"}),`\\n`,(0,e.jsx)(a,{src:\\"/assets/images/tutorials/bot-studio/bse-45.webp\\",alt:\\"bse-45\\",naturalHeight:926,naturalWidth:842}),`\\n`,(0,e.jsxs)(t.p,{children:[\\"Once the bot displays a carousel containing the type for pizza menu, its next step is to ask user to select the pizza. Click \\\\u201CAdd actions\\\\u201D button to trigger drop-down list, then choose \\",(0,e.jsx)(t.code,{children:\\"askOptions\\"})]}),`\\n`,(0,e.jsx)(a,{src:\\"/assets/images/tutorials/bot-studio/bse-46.webp\\",alt:\\"bse-46\\",naturalHeight:1290,naturalWidth:846}),`\\n`,(0,e.jsxs)(t.p,{children:[\\"After you select \\",(0,e.jsx)(t.code,{children:\\"askOptions\\"}),\\" action click \\\\u201CCreate Action\\\\u201D button to finalize this step.\\"]}),`\\n`,(0,e.jsx)(a,{src:\\"/assets/images/tutorials/bot-studio/bse-47.webp\\",alt:\\"bse-47\\",naturalHeight:1506,naturalWidth:848}),`\\n`,(0,e.jsx)(t.p,{children:\\"Your form should look like this\\"}),`\\n`,(0,e.jsx)(a,{src:\\"/assets/images/tutorials/bot-studio/bse-48.webp\\",alt:\\"bse-48\\",naturalHeight:1704,naturalWidth:850}),`\\n`,(0,e.jsx)(t.p,{children:\\"Click \\\\u201CUpdate\\\\u201D to update the state.\\"}),`\\n`,(0,e.jsxs)(t.h3,{id:\\"create-intent-to-choose-a-pizza\\",children:[(0,e.jsx)(t.a,{className:\\"anchor\\",href:\\"#create-intent-to-choose-a-pizza\\",children:(0,e.jsx)(t.span,{className:\\"icon icon-link\\"})}),\\"Create Intent to Choose A Pizza\\"]}),`\\n`,(0,e.jsxs)(t.p,{children:[\\"Now we have to create an intent called \\",(0,e.jsx)(t.code,{children:\\"pizzaChosen\\"}),\\" to handle user\'s input after they have selected a pizza type. Click on Intent menu in \\",(0,e.jsx)(t.code,{children:\\"order\\"}),\\" flow.\\"]}),`\\n`,(0,e.jsx)(a,{src:\\"/assets/images/tutorials/bot-studio/bse-49.webp\\",alt:\\"bse-49\\",naturalHeight:1288,naturalWidth:2716}),`\\n`,(0,e.jsx)(t.p,{children:\\"Click on Create Intent and create intent as follow\\"}),`\\n`,(0,e.jsx)(a,{src:\\"/assets/images/tutorials/bot-studio/bse-50.webp\\",alt:\\"bse-50\\",naturalHeight:1076,naturalWidth:854}),`\\n`,(0,e.jsx)(t.p,{children:\\"Successfully created intent looks like this\\"}),`\\n`,(0,e.jsx)(a,{src:\\"/assets/images/tutorials/bot-studio/bse-51.webp\\",alt:\\"bse-51\\",naturalHeight:1074,naturalWidth:3330}),`\\n`,(0,e.jsxs)(t.h3,{id:\\"create-transition-between-init-and-showpizza\\",children:[(0,e.jsx)(t.a,{className:\\"anchor\\",href:\\"#create-transition-between-init-and-showpizza\\",children:(0,e.jsx)(t.span,{className:\\"icon icon-link\\"})}),\\"Create Transition between init and showPizza\\"]}),`\\n`,(0,e.jsx)(t.p,{children:\\"Now, we will create a transition between two states that we have created before.\\"}),`\\n`,(0,e.jsxs)(t.p,{children:[\\"Click the green dot on \\",(0,e.jsx)(t.code,{children:\\"init\\"}),\\" state, and a connector line will appear. Connect that line to \\",(0,e.jsx)(t.code,{children:\\"showPizza\\"}),\\" state. If you do it right, a Create Transition form will appear.\\"]}),`\\n`,(0,e.jsx)(a,{src:\\"/assets/images/tutorials/bot-studio/bse-52.webp\\",alt:\\"bse-52\\",naturalHeight:888,naturalWidth:1693}),`\\n`,(0,e.jsx)(t.p,{children:\\"Fill in the form with these data, and click \\\\u201CCreate\\\\u201D\\"}),`\\n`,(0,e.jsx)(a,{src:\\"/assets/images/tutorials/bot-studio/bse-52-1.webp\\",alt:\\"bse-52-1\\",naturalHeight:1278,naturalWidth:2766}),`\\n`,(0,e.jsxs)(t.h3,{id:\\"create-reenter-intent\\",children:[(0,e.jsx)(t.a,{className:\\"anchor\\",href:\\"#create-reenter-intent\\",children:(0,e.jsx)(t.span,{className:\\"icon icon-link\\"})}),\\"Create \'reenter\' intent\\"]}),`\\n`,(0,e.jsxs)(t.p,{children:[\\"Next, we will add \\",(0,e.jsx)(t.code,{children:\\"reenter\\"}),\\" intent so the bot can return to its previous state after triggering fallback state. Create the intent in \\",(0,e.jsx)(t.code,{children:\\"order\\"}),\\" flow.\\"]}),`\\n`,(0,e.jsx)(a,{src:\\"/assets/images/tutorials/bot-studio/bse-53.webp\\",alt:\\"bse-53\\",naturalHeight:1128,naturalWidth:2802}),`\\n`,(0,e.jsxs)(t.h2,{id:\\"create-action-for-asking-pizza-quantity\\",children:[(0,e.jsx)(t.a,{className:\\"anchor\\",href:\\"#create-action-for-asking-pizza-quantity\\",children:(0,e.jsx)(t.span,{className:\\"icon icon-link\\"})}),\\"Create Action for Asking Pizza Quantity\\"]}),`\\n`,(0,e.jsx)(t.p,{children:\\"In this step we will learn how to create \\\\u201CAsk quantity\\\\u201D state.\\"}),`\\n`,(0,e.jsx)(a,{src:\\"/assets/images/tutorials/bot-studio/bse-1.webp\\",alt:\\"bse-1\\",naturalHeight:1040,naturalWidth:1040}),`\\n`,(0,e.jsxs)(t.h3,{id:\\"create-pizzaquantity-state\\",children:[(0,e.jsx)(t.a,{className:\\"anchor\\",href:\\"#create-pizzaquantity-state\\",children:(0,e.jsx)(t.span,{className:\\"icon icon-link\\"})}),\\"Create pizzaQuantity state\\"]}),`\\n`,(0,e.jsxs)(t.p,{children:[\\"In this step we will create \\",(0,e.jsx)(t.code,{children:\\"pizzaQuantity\\"}),\\" state to handle order quantity. The type of action we will use is in this state is Text. Click on \\\\u201C+\\\\u201D button on \\",(0,e.jsx)(t.code,{children:\\"order\\"}),\\" flow and fill the form as follows\\"]}),`\\n`,(0,e.jsx)(a,{src:\\"/assets/images/tutorials/bot-studio/bse-54.webp\\",alt:\\"bse-54\\",naturalHeight:1418,naturalWidth:786}),`\\n`,(0,e.jsx)(t.p,{children:\\"Then you have to make self-transition in Transition tab as follow\\"}),`\\n`,(0,e.jsx)(a,{src:\\"/assets/images/tutorials/bot-studio/bse-54_1.webp\\",alt:\\"bse-54_1\\",naturalHeight:920,naturalWidth:1308}),`\\n`,(0,e.jsx)(t.p,{children:\\"Result:\\"}),`\\n`,(0,e.jsx)(a,{src:\\"/assets/images/tutorials/bot-studio/bse-55.webp\\",alt:\\"bse-55\\",naturalHeight:1114,naturalWidth:1986}),`\\n`,(0,e.jsxs)(t.h3,{id:\\"create-nlus-quantity\\",children:[(0,e.jsx)(t.a,{className:\\"anchor\\",href:\\"#create-nlus-quantity\\",children:(0,e.jsx)(t.span,{className:\\"icon icon-link\\"})}),\\"Create NLUs quantity\\"]}),`\\n`,(0,e.jsx)(t.p,{children:\\"Afterwards, we have to handle user\'s input with NLUs. Because we only allowed number from 1 to 9, we will create a limitation in regex format. Click on Create NLUs and follow this screenshot\\"}),`\\n`,(0,e.jsx)(a,{src:\\"/assets/images/tutorials/bot-studio/bse-56.webp\\",alt:\\"bse-56\\",naturalHeight:1062,naturalWidth:816}),`\\n`,(0,e.jsx)(t.p,{children:\\"Successfully created NLU will be shown like this\\"}),`\\n`,(0,e.jsx)(a,{src:\\"/assets/images/tutorials/bot-studio/bse-57.webp\\",alt:\\"bse-57\\",naturalHeight:870,naturalWidth:3282}),`\\n`,(0,e.jsxs)(t.h3,{id:\\"create-intent-quantity\\",children:[(0,e.jsx)(t.a,{className:\\"anchor\\",href:\\"#create-intent-quantity\\",children:(0,e.jsx)(t.span,{className:\\"icon icon-link\\"})}),\\"Create Intent quantity\\"]}),`\\n`,(0,e.jsxs)(t.p,{children:[\\"After we created the NLU, we will add an intent to respond user\'s input. In \\",(0,e.jsx)(t.code,{children:\\"order\\"}),\\" flow, click on Create Intent and fill in the form\\"]}),`\\n`,(0,e.jsx)(a,{src:\\"/assets/images/tutorials/bot-studio/bse-58.webp\\",alt:\\"bse-58\\",naturalHeight:1414,naturalWidth:816}),`\\n`,(0,e.jsx)(t.p,{children:\\"Successfully created intent will look like this\\"}),`\\n`,(0,e.jsx)(a,{src:\\"/assets/images/tutorials/bot-studio/bse-59.webp\\",alt:\\"bse-59\\",naturalHeight:1104,naturalWidth:3288}),`\\n`,(0,e.jsxs)(t.h3,{id:\\"create-transition-between-showpizza-and-pizzaquantity\\",children:[(0,e.jsx)(t.a,{className:\\"anchor\\",href:\\"#create-transition-between-showpizza-and-pizzaquantity\\",children:(0,e.jsx)(t.span,{className:\\"icon icon-link\\"})}),\\"Create Transition between showPizza and pizzaQuantity\\"]}),`\\n`,(0,e.jsxs)(t.p,{children:[\\"Now we have to create a transition between \\",(0,e.jsx)(t.code,{children:\\"showPizza\\"}),\\"and \\",(0,e.jsx)(t.code,{children:\\"pizzaQuantity\\"}),\\". We will also store \\",(0,e.jsx)(t.code,{children:\\"payload.pizza\\"}),\\" value into \\",(0,e.jsx)(t.code,{children:\\"context.pizza\\"}),\\". Click on the blue dot on \\",(0,e.jsx)(t.code,{children:\\"showPizza\\"}),\\" and drag the line to \\",(0,e.jsx)(t.code,{children:\\"pizzaQuantity\\"}),\\" state to create the transition. Create Transition form will appear after you have successfully connected the states.\\"]}),`\\n`,(0,e.jsx)(a,{src:\\"/assets/images/tutorials/bot-studio/bse-60.webp\\",alt:\\"bse-60\\",naturalHeight:1244,naturalWidth:866}),`\\n`,(0,e.jsx)(t.p,{children:\\"Created transition will look like this\\"}),`\\n`,(0,e.jsx)(a,{src:\\"/assets/images/tutorials/bot-studio/bse-61.webp\\",alt:\\"bse-61\\",naturalHeight:1082,naturalWidth:2298}),`\\n`,(0,e.jsxs)(t.h2,{id:\\"create-confirmation-action\\",children:[(0,e.jsx)(t.a,{className:\\"anchor\\",href:\\"#create-confirmation-action\\",children:(0,e.jsx)(t.span,{className:\\"icon icon-link\\"})}),\\"Create Confirmation Action\\"]}),`\\n`,(0,e.jsxs)(t.p,{children:[\\"Our next step is creating \\",(0,e.jsx)(t.code,{children:\\"Ask confirmation\\"}),\\" state.\\"]}),`\\n`,(0,e.jsx)(a,{src:\\"/assets/images/tutorials/bot-studio/bse-1.webp\\",alt:\\"bse-1\\",naturalHeight:1040,naturalWidth:1040}),`\\n`,(0,e.jsxs)(t.h3,{id:\\"create-yesno-keyword-nlus\\",children:[(0,e.jsx)(t.a,{className:\\"anchor\\",href:\\"#create-yesno-keyword-nlus\\",children:(0,e.jsx)(t.span,{className:\\"icon icon-link\\"})}),\\"Create \\\\u201CYESNO\\\\u201D keyword NLUs\\"]}),`\\n`,(0,e.jsxs)(t.p,{children:[\\"First, we will create a keyword NLU to handle \\",(0,e.jsx)(t.code,{children:\\"yes\\"}),\\" and \\",(0,e.jsx)(t.code,{children:\\"no\\"}),\\". Click on Create NLUs and fill in as follows\\"]}),`\\n`,(0,e.jsx)(a,{src:\\"/assets/images/tutorials/bot-studio/bse-62.webp\\",alt:\\"bse-62\\",naturalHeight:1512,naturalWidth:832}),`\\n`,(0,e.jsx)(t.p,{children:\\"Successfully created NLU will look like this\\"}),`\\n`,(0,e.jsx)(a,{src:\\"/assets/images/tutorials/bot-studio/bse-63.webp\\",alt:\\"bse-63\\",naturalHeight:1164,naturalWidth:3270}),`\\n`,(0,e.jsxs)(t.h3,{id:\\"create-confirmpizza-state\\",children:[(0,e.jsx)(t.a,{className:\\"anchor\\",href:\\"#create-confirmpizza-state\\",children:(0,e.jsx)(t.span,{className:\\"icon icon-link\\"})}),\\"Create confirmPizza state\\"]}),`\\n`,(0,e.jsxs)(t.p,{children:[\\"Now we will create \\",(0,e.jsx)(t.code,{children:\\"confirmPizza\\"}),\\" state to handle order confirmation. We will also store chosen pizza & quantity information in this state. Select \\",(0,e.jsx)(t.code,{children:\\"order\\"}),\\" flow and click on \\\\u201C+\\\\u201D button to create \\",(0,e.jsx)(t.code,{children:\\"confirmPizza\\"}),\\" state.\\"]}),`\\n`,(0,e.jsx)(a,{src:\\"/assets/images/tutorials/bot-studio/bse-64.webp\\",alt:\\"bse-64\\",naturalHeight:1408,naturalWidth:758}),`\\n`,(0,e.jsxs)(t.h2,{id:\\"add-mapping-in-ontransit-tab\\",children:[(0,e.jsx)(t.a,{className:\\"anchor\\",href:\\"#add-mapping-in-ontransit-tab\\",children:(0,e.jsx)(t.span,{className:\\"icon icon-link\\"})}),\\"Add mapping in onTransit tab\\"]}),`\\n`,(0,e.jsx)(a,{src:\\"/assets/images/tutorials/bot-studio/bse-67.webp\\",alt:\\"bse-67\\",naturalHeight:510,naturalWidth:760}),`\\n`,(0,e.jsx)(t.p,{children:\\"Don\'t forget to add self-transition in a state. Click Create Action. Your screen should look like this\\"}),`\\n`,(0,e.jsx)(a,{src:\\"/assets/images/tutorials/bot-studio/bse-65.webp\\",alt:\\"bse-65\\",naturalHeight:1192,naturalWidth:2330}),`\\n`,(0,e.jsxs)(t.h3,{id:\\"create-a-transition-from-pizzaquantity-to-confirmpizza\\",children:[(0,e.jsx)(t.a,{className:\\"anchor\\",href:\\"#create-a-transition-from-pizzaquantity-to-confirmpizza\\",children:(0,e.jsx)(t.span,{className:\\"icon icon-link\\"})}),\\"Create a transition from pizzaQuantity to confirmPizza\\"]}),`\\n`,(0,e.jsxs)(t.p,{children:[\\"We will make a transition by storing value (mapping) from pizza quantity \\",(0,e.jsx)(t.strong,{children:\\"and\\"}),\\" chosen pizza type. Click the blue dot on \\",(0,e.jsx)(t.code,{children:\\"pizzaQuantity\\"}),\\" and drag the line to \\",(0,e.jsx)(t.code,{children:\\"confirmPizza\\"}),\\" state to create a transition. Create Transition form will appear after you successfully connected the states.\\"]}),`\\n`,(0,e.jsx)(a,{src:\\"/assets/images/tutorials/bot-studio/bse-66.webp\\",alt:\\"bse-66\\",naturalHeight:1324,naturalWidth:846}),`\\n`,(0,e.jsx)(t.p,{children:\\"Result will be shown as follows\\"}),`\\n`,(0,e.jsx)(a,{src:\\"/assets/images/tutorials/bot-studio/bse-68.webp\\",alt:\\"bse-68\\",naturalHeight:990,naturalWidth:2420}),`\\n`,(0,e.jsxs)(t.h3,{id:\\"create-intent-yesno\\",children:[(0,e.jsx)(t.a,{className:\\"anchor\\",href:\\"#create-intent-yesno\\",children:(0,e.jsx)(t.span,{className:\\"icon icon-link\\"})}),\\"Create intent yesno\\"]}),`\\n`,(0,e.jsxs)(t.p,{children:[\\"Previously, we already made an NLU containing \\",(0,e.jsx)(t.code,{children:\\"yes\\"}),\\" and \\",(0,e.jsx)(t.code,{children:\\"no\\"}),\\" keywords. We will use that NLU as a classifier on an intent.\\"]}),`\\n`,(0,e.jsxs)(t.p,{children:[\\"First of all, we will create an intent in \\",(0,e.jsx)(t.code,{children:\\"order\\"}),\\" flow for the keyword \\",(0,e.jsx)(t.code,{children:\\"yes\\"})]}),`\\n`,(0,e.jsx)(a,{src:\\"/assets/images/tutorials/bot-studio/bse-69.webp\\",alt:\\"bse-69\\",naturalHeight:1422,naturalWidth:804}),`\\n`,(0,e.jsxs)(t.p,{children:[\\"Then, we will create an intent for keyword \\",(0,e.jsx)(t.code,{children:\\"no\\"})]}),`\\n`,(0,e.jsx)(a,{src:\\"/assets/images/tutorials/bot-studio/bse-70.webp\\",alt:\\"bse-70\\",naturalHeight:1392,naturalWidth:822}),`\\n`,(0,e.jsx)(t.p,{children:\\"Both intent will appear as follows\\"}),`\\n`,(0,e.jsx)(a,{src:\\"/assets/images/tutorials/bot-studio/bse-71.webp\\",alt:\\"bse-71\\",naturalHeight:1378,naturalWidth:3276}),`\\n`,(0,e.jsxs)(t.h3,{id:\\"create-done-state\\",children:[(0,e.jsx)(t.a,{className:\\"anchor\\",href:\\"#create-done-state\\",children:(0,e.jsx)(t.span,{className:\\"icon icon-link\\"})}),\\"Create done state\\"]}),`\\n`,(0,e.jsxs)(t.p,{children:[\\"In \\",(0,e.jsx)(t.code,{children:\\"done\\"}),\\" state, we will complete the order by saying thank you and end the conversation. We will also set a condition when a user wants to cancel the order. So in this state we will create two actions: \\",(0,e.jsx)(t.code,{children:\\"sayThanks\\"}),\\" and \\",(0,e.jsx)(t.code,{children:\\"sayCancel\\"}),\\".\\"]}),`\\n`,(0,e.jsx)(a,{src:\\"/assets/images/tutorials/bot-studio/bse-72.webp\\",alt:\\"bse-72\\",naturalHeight:940,naturalWidth:798}),`\\n`,(0,e.jsx)(a,{src:\\"/assets/images/tutorials/bot-studio/bse-73.webp\\",alt:\\"bse-73\\",naturalHeight:914,naturalWidth:786}),`\\n`,(0,e.jsx)(t.p,{children:\\"Also, don\'t forget to add self transition in the state. Result:\\"}),`\\n`,(0,e.jsx)(a,{src:\\"/assets/images/tutorials/bot-studio/bse-74.webp\\",alt:\\"bse-74\\",naturalHeight:1218,naturalWidth:2390}),`\\n`,(0,e.jsxs)(t.h3,{id:\\"create-a-transition-from-confirmpizza-to-done\\",children:[(0,e.jsx)(t.a,{className:\\"anchor\\",href:\\"#create-a-transition-from-confirmpizza-to-done\\",children:(0,e.jsx)(t.span,{className:\\"icon icon-link\\"})}),\\"Create a transition from confirmPizza to done\\"]}),`\\n`,(0,e.jsxs)(t.p,{children:[\\"Next, we will connect \\",(0,e.jsx)(t.code,{children:\\"confirmPizza\\"}),\\" state to \\",(0,e.jsx)(t.code,{children:\\"done\\"}),\\" state. Because \\",(0,e.jsx)(t.code,{children:\\"done\\"}),\\" is the last state, we will set it as default transition. Connect \\",(0,e.jsx)(t.code,{children:\\"confirmPizza\\"}),\\" to \\",(0,e.jsx)(t.code,{children:\\"done\\"}),\\" by clicking the blue dot and drag the line to connect the states. Create Transition form will appear after you have successfully connected the states.\\"]}),`\\n`,(0,e.jsx)(a,{src:\\"/assets/images/tutorials/bot-studio/bse-75.webp\\",alt:\\"bse-75\\",naturalHeight:1084,naturalWidth:840}),`\\n`,(0,e.jsx)(t.p,{children:\\"Final flow:\\"}),`\\n`,(0,e.jsx)(a,{src:\\"/assets/images/tutorials/bot-studio/bse-76.webp\\",alt:\\"bse-76\\",naturalHeight:1208,naturalWidth:3262}),`\\n`,(0,e.jsxs)(t.h2,{id:\\"publish-your-bot\\",children:[(0,e.jsx)(t.a,{className:\\"anchor\\",href:\\"#publish-your-bot\\",children:(0,e.jsx)(t.span,{className:\\"icon icon-link\\"})}),\\"Publish Your Bot\\"]}),`\\n`,(0,e.jsx)(t.p,{children:\\"To save your work, click on Publish button located at the top right of your screen. Fill in the changelog as \\\\u201Cinitial version of pizza bot\\\\u201D for future reference. Click \\\\u201CPublish\\\\u201D to continue.\\"}),`\\n`,(0,e.jsx)(a,{src:\\"/assets/images/tutorials/bot-studio/bse-77.webp\\",alt:\\"bse-77\\",naturalHeight:1218,naturalWidth:2390}),`\\n`,(0,e.jsx)(a,{src:\\"/assets/images/tutorials/bot-studio/bse-78.webp\\",alt:\\"bse-78\\",naturalHeight:974,naturalWidth:1066}),`\\n`,(0,e.jsx)(t.p,{children:\\"Every time you publish a bot, it will record a hash number (similar to Git\'s hash number) in Revision List.\\"}),`\\n`,(0,e.jsx)(a,{src:\\"/assets/images/tutorials/bot-studio/bse-79.webp\\",alt:\\"bse-79\\",naturalHeight:538,naturalWidth:3298}),`\\n`,(0,e.jsxs)(t.h2,{id:\\"testing-your-chatbot\\",children:[(0,e.jsx)(t.a,{className:\\"anchor\\",href:\\"#testing-your-chatbot\\",children:(0,e.jsx)(t.span,{className:\\"icon icon-link\\"})}),\\"Testing Your Chatbot\\"]}),`\\n`,(0,e.jsxs)(t.p,{children:[\\"Click on Test Chatbot on Bot Studio then type \\\\u201Corder\\\\u201D to initialize \\",(0,e.jsx)(t.code,{children:\\"order\\"}),\\" flow.\\"]}),`\\n`,(0,e.jsx)(a,{src:\\"/assets/images/tutorials/bot-studio/bse-80.webp\\",alt:\\"bse-80\\",naturalHeight:994,naturalWidth:1740}),`\\n`,(0,e.jsx)(t.p,{children:\\"Check on the rest of the flow and make sure everything you\'ve made works.\\"}),`\\n`,(0,e.jsxs)(t.h2,{id:\\"deploy-your-chatbot\\",children:[(0,e.jsx)(t.a,{className:\\"anchor\\",href:\\"#deploy-your-chatbot\\",children:(0,e.jsx)(t.span,{className:\\"icon icon-link\\"})}),\\"Deploy Your Chatbot\\"]}),`\\n`,(0,e.jsx)(t.p,{children:\\"Now we will try to deploy our chatbot to LINE Messenger.\\"}),`\\n`,(0,e.jsxs)(t.h3,{id:\\"create-deployment\\",children:[(0,e.jsx)(t.a,{className:\\"anchor\\",href:\\"#create-deployment\\",children:(0,e.jsx)(t.span,{className:\\"icon icon-link\\"})}),\\"Create deployment\\"]}),`\\n`,(0,e.jsx)(t.p,{children:\\"First of all, we have to create a deployment first. Find the \\\\u201CDeployment\\\\u201D menu on the left sidebar.\\"}),`\\n`,(0,e.jsx)(a,{src:\\"/assets/images/tutorials/bot-studio/bse-81.webp\\",alt:\\"bse-81\\",naturalHeight:1118,naturalWidth:648}),`\\n`,(0,e.jsx)(t.p,{children:\\"Click on Create Deployment button on top right\\"}),`\\n`,(0,e.jsx)(a,{src:\\"/assets/images/tutorials/bot-studio/bse-82.webp\\",alt:\\"bse-82\\",naturalHeight:794,naturalWidth:3296}),`\\n`,(0,e.jsx)(t.p,{children:\\"Choose Patch on Deployment Version.\\"}),`\\n`,(0,e.jsx)(a,{src:\\"/assets/images/tutorials/bot-studio/bse-83.webp\\",alt:\\"bse-83\\",naturalHeight:932,naturalWidth:1557}),`\\n`,(0,e.jsx)(t.p,{children:\\"Succesfully created deployment looks like this.\\"}),`\\n`,(0,e.jsx)(a,{src:\\"/assets/images/tutorials/bot-studio/bse-84.webp\\",alt:\\"bse-84\\",naturalHeight:511,naturalWidth:1906}),`\\n`,(0,e.jsxs)(t.h3,{id:\\"create-environment\\",children:[(0,e.jsx)(t.a,{className:\\"anchor\\",href:\\"#create-environment\\",children:(0,e.jsx)(t.span,{className:\\"icon icon-link\\"})}),\\"Create Environment\\"]}),`\\n`,(0,e.jsx)(t.p,{children:\\"Kata | Platform 3.0 allows you to set up 3 separate environments in your project: Development, Staging, and Production. Inside each environment, you can add as many messaging channel as you like. You have to setup environment first before integrating to messaging channel.\\"}),`\\n`,(0,e.jsx)(t.p,{children:\\"In this tutorial, we will try to setup Production environment. Click on Environment menu under Deploy and you will be shown 3 available environments.\\"}),`\\n`,(0,e.jsx)(a,{src:\\"/assets/images/tutorials/bot-studio/bse-85.webp\\",alt:\\"bse-85\\",naturalHeight:1230,naturalWidth:3342}),`\\n`,(0,e.jsx)(t.p,{children:\\"Click \\\\u201CCreate Environment\\\\u201D button in Production.\\"}),`\\n`,(0,e.jsx)(t.p,{children:\\"The first field we have to fill in is deployment version. Choose 0.0.1 (shown on the previous step) as deployment version in Production.\\"}),`\\n`,(0,e.jsx)(t.p,{children:\\"Another field we have to fill in is environment URL. This URL is used to access CMS Client later.\\"}),`\\n`,(0,e.jsx)(a,{src:\\"/assets/images/tutorials/bot-studio/bse-86.webp\\",alt:\\"bse-86\\",naturalHeight:788,naturalWidth:858}),`\\n`,(0,e.jsx)(t.p,{children:\\"Successfully created environment will look like this\\"}),`\\n`,(0,e.jsx)(a,{src:\\"/assets/images/tutorials/bot-studio/bse-87.webp\\",alt:\\"bse-87\\",naturalHeight:480,naturalWidth:882}),`\\n`,(0,e.jsx)(t.p,{children:\\"Next, we need to create channel inside the environment. Click on Create Channel on Production environment and you will be redirected to Create Channel page\\"}),`\\n`,(0,e.jsx)(a,{src:\\"/assets/images/tutorials/bot-studio/bse-88.webp\\",alt:\\"bse-88\\",naturalHeight:1342,naturalWidth:3352}),`\\n`,(0,e.jsx)(t.p,{children:\\"Next, click \\\\u201CCreate Channel\\\\u201D and fill in as follows\\"}),`\\n`,(0,e.jsx)(a,{src:\\"/assets/images/tutorials/bot-studio/bse-89.webp\\",alt:\\"bse-89\\",naturalHeight:1280,naturalWidth:916}),`\\n`,(0,e.jsx)(t.p,{children:\\"Let\'s setup LINE developer console so you can fill in fields highlighted with red box.\\"}),`\\n`,(0,e.jsxs)(t.h3,{id:\\"registration-to-line-developer-console\\",children:[(0,e.jsx)(t.a,{className:\\"anchor\\",href:\\"#registration-to-line-developer-console\\",children:(0,e.jsx)(t.span,{className:\\"icon icon-link\\"})}),\\"Registration to LINE Developer console\\"]}),`\\n`,(0,e.jsx)(t.p,{children:(0,e.jsx)(t.strong,{children:\\"Create LINE account\\"})}),`\\n`,(0,e.jsxs)(t.p,{children:[\\"To sign up for a LINE developer account, you have to have a LINE account by \\",(0,e.jsx)(\\"a\\",{href:\\"https://line.me/en/download\\",target:\\"_blank\\",children:\\" installing LINE application, either desktop or mobile app.\\"}),\\" After you successfully registered, sign in to \\",(0,e.jsx)(\\"a\\",{href:\\"https://developers.line.biz/en/\\",target:\\"_blank\\",children:(0,e.jsx)(t.a,{href:\\"https://developers.line.biz/en/\\",children:\\"https://developers.line.biz/en/\\"})})]}),`\\n`,(0,e.jsx)(t.p,{children:\\"In LINE Developer Console click Log In.\\"}),`\\n`,(0,e.jsx)(a,{src:\\"/assets/images/tutorials/bot-studio/bse-90.webp\\",alt:\\"bse-90\\",naturalHeight:1726,naturalWidth:3358}),`\\n`,(0,e.jsx)(t.p,{children:\\"Click on Log in with LINE\\"}),`\\n`,(0,e.jsx)(a,{src:\\"/assets/images/tutorials/bot-studio/bse-91.webp\\",alt:\\"bse-91\\",naturalHeight:1134,naturalWidth:1054}),`\\n`,(0,e.jsx)(t.p,{children:\\"Enter your email and password\\"}),`\\n`,(0,e.jsx)(a,{src:\\"/assets/images/tutorials/bot-studio/bse-92.webp\\",alt:\\"bse-92\\",naturalHeight:1046,naturalWidth:994}),`\\n`,(0,e.jsx)(t.p,{children:\\"After you successfully logged in, you will be redirected to provider list dashboard\\"}),`\\n`,(0,e.jsx)(a,{src:\\"/assets/images/tutorials/bot-studio/bse-93.webp\\",alt:\\"bse-93\\",naturalHeight:1686,naturalWidth:3328}),`\\n`,(0,e.jsx)(t.p,{children:(0,e.jsx)(t.strong,{children:\\"Create a Provider\\"})}),`\\n`,(0,e.jsx)(t.p,{children:\\"Click \\\\u201CCreate New Provider\\\\u201D\\"}),`\\n`,(0,e.jsx)(a,{src:\\"/assets/images/tutorials/bot-studio/bse-94.webp\\",alt:\\"bse-94\\",naturalHeight:1158,naturalWidth:2814}),`\\n`,(0,e.jsx)(t.p,{children:\\"Fill in provider name\\"}),`\\n`,(0,e.jsx)(a,{src:\\"/assets/images/tutorials/bot-studio/bse-95.webp\\",alt:\\"bse-95\\",naturalHeight:1382,naturalWidth:3358}),`\\n`,(0,e.jsx)(t.p,{children:\\"Click Confirm to continue. You will have to re-confirm the provider name since it cannot be changed later. Click \\\\u201CCreate\\\\u201D to confirm.\\"}),`\\n`,(0,e.jsx)(a,{src:\\"/assets/images/tutorials/bot-studio/bse-96.webp\\",alt:\\"bse-96\\",naturalHeight:1154,naturalWidth:3358}),`\\n`,(0,e.jsxs)(t.h3,{id:\\"setup-channel-for-line-integration\\",children:[(0,e.jsx)(t.a,{className:\\"anchor\\",href:\\"#setup-channel-for-line-integration\\",children:(0,e.jsx)(t.span,{className:\\"icon icon-link\\"})}),\\"Setup Channel for LINE Integration\\"]}),`\\n`,(0,e.jsx)(t.p,{children:\\"Setup channel in Messaging API by clicking Create Channel on Messaging API.\\"}),`\\n`,(0,e.jsx)(a,{src:\\"/assets/images/tutorials/bot-studio/bse-97.webp\\",alt:\\"bse-97\\",naturalHeight:1438,naturalWidth:2812}),`\\n`,(0,e.jsx)(t.p,{children:\\"Fill in the form as follows\\"}),`\\n`,(0,e.jsx)(a,{src:\\"/assets/images/tutorials/bot-studio/bse-98.webp\\",alt:\\"bse-98\\",naturalHeight:1714,naturalWidth:3348}),`\\n`,(0,e.jsx)(a,{src:\\"/assets/images/tutorials/bot-studio/bse-99.webp\\",alt:\\"bse-99\\",naturalHeight:536,naturalWidth:2726}),`\\n`,(0,e.jsxs)(t.p,{children:[\\"Next, you have to choose \\",(0,e.jsx)(t.strong,{children:\\"Developer Trial as Plan\\"})]}),`\\n`,(0,e.jsx)(a,{src:\\"/assets/images/tutorials/bot-studio/bse-100.webp\\",alt:\\"bse-100\\",naturalHeight:510,naturalWidth:2322}),`\\n`,(0,e.jsx)(t.p,{children:\\"Accept Terms of Use from LINE then click Create\\"}),`\\n`,(0,e.jsx)(a,{src:\\"/assets/images/tutorials/bot-studio/bse-101.webp\\",alt:\\"bse-101\\",naturalHeight:548,naturalWidth:1970}),`\\n`,(0,e.jsx)(t.p,{children:\\"Successfuly created channel will look like this\\"}),`\\n`,(0,e.jsx)(a,{src:\\"/assets/images/tutorials/bot-studio/bse-102.webp\\",alt:\\"bse-102\\",naturalHeight:1012,naturalWidth:1176}),`\\n`,(0,e.jsxs)(t.h3,{id:\\"integration-line-and-your-chatbot\\",children:[(0,e.jsx)(t.a,{className:\\"anchor\\",href:\\"#integration-line-and-your-chatbot\\",children:(0,e.jsx)(t.span,{className:\\"icon icon-link\\"})}),\\"Integration LINE and Your Chatbot\\"]}),`\\n`,(0,e.jsx)(t.p,{children:\\"Click on created channel to fill in Channel Access Token and Channel Secret. Here is the guideline to fill in those fields\\"}),`\\n`,(0,e.jsxs)(t.h4,{id:\\"fill-in-channel-access-token-field\\",children:[(0,e.jsx)(t.a,{className:\\"anchor\\",href:\\"#fill-in-channel-access-token-field\\",children:(0,e.jsx)(t.span,{className:\\"icon icon-link\\"})}),\\"Fill in Channel Access Token field\\"]}),`\\n`,(0,e.jsx)(t.p,{children:\\"Click \\\\u201CIssue\\\\u201D in Messaging Settings section\\"}),`\\n`,(0,e.jsx)(a,{src:\\"/assets/images/tutorials/bot-studio/bse-103.webp\\",alt:\\"bse-103\\",naturalHeight:1086,naturalWidth:2724}),`\\n`,(0,e.jsx)(t.p,{children:\\"Then, issue dialog will pop up. Click on Issue to continue\\"}),`\\n`,(0,e.jsx)(a,{src:\\"/assets/images/tutorials/bot-studio/bse-104.webp\\",alt:\\"bse-104\\",naturalHeight:782,naturalWidth:1084}),`\\n`,(0,e.jsx)(t.p,{children:\\"Then, copy Channel Access Token below and paste it on Create Channel form in Kata | Platform\\"}),`\\n`,(0,e.jsx)(a,{src:\\"/assets/images/tutorials/bot-studio/bse-105.webp\\",alt:\\"bse-105\\",naturalHeight:380,naturalWidth:2732}),`\\n`,(0,e.jsx)(a,{src:\\"/assets/images/tutorials/bot-studio/bse-106.webp\\",alt:\\"bse-106\\",naturalHeight:964,naturalWidth:740}),`\\n`,(0,e.jsx)(t.p,{children:(0,e.jsx)(t.strong,{children:\\"Fill in Channel Secret field\\"})}),`\\n`,(0,e.jsx)(t.p,{children:\\"In Basic Information, copy Channel Secret from LINE to Kata | Platform\\"}),`\\n`,(0,e.jsx)(a,{src:\\"/assets/images/tutorials/bot-studio/bse-107.webp\\",alt:\\"bse-107\\",naturalHeight:1612,naturalWidth:2896}),`\\n`,(0,e.jsx)(a,{src:\\"/assets/images/tutorials/bot-studio/bse-108.webp\\",alt:\\"bse-108\\",naturalHeight:996,naturalWidth:766}),`\\n`,(0,e.jsx)(t.p,{children:\\"Final result in Kata | Platform will look like this\\"}),`\\n`,(0,e.jsx)(a,{src:\\"/assets/images/tutorials/bot-studio/bse-109.webp\\",alt:\\"bse-109\\",naturalHeight:996,naturalWidth:766}),`\\n`,(0,e.jsx)(t.p,{children:\\"Click \\\\u201CCreate\\\\u201D to generate webhook URL from Kata | Platform.\\"}),`\\n`,(0,e.jsx)(a,{src:\\"/assets/images/tutorials/bot-studio/bse-110.webp\\",alt:\\"bse-110\\",naturalHeight:506,naturalWidth:2780}),`\\n`,(0,e.jsxs)(t.p,{children:[\\"After webhook URL is generated, go to Messaging Settings in LINE developer console to enable webhook. \\",(0,e.jsx)(t.strong,{children:\'Please check that you already enable the webhook by click on Enable in \\"Use Webhoooks\\" section which placed above Webhook URL field\'})]}),`\\n`,(0,e.jsx)(a,{src:\\"/assets/images/tutorials/bot-studio/bse-111.webp\\",alt:\\"bse-111\\",naturalHeight:678,naturalWidth:2832}),`\\n`,(0,e.jsx)(t.p,{children:\\"Click \\\\u201CUpdate\\\\u201D then paste the webhook URL to LINE developer console.\\"}),`\\n`,(0,e.jsx)(a,{src:\\"/assets/images/tutorials/bot-studio/bse-112.webp\\",alt:\\"bse-112\\",naturalHeight:892,naturalWidth:2820}),`\\n`,(0,e.jsx)(t.p,{children:\\"Click \\\\u201CUpdate\\\\u201D then click \\\\u201CVerify.\\\\u201D\\"}),`\\n`,(0,e.jsx)(a,{src:\\"/assets/images/tutorials/bot-studio/bse-113.webp\\",alt:\\"bse-113\\",naturalHeight:928,naturalWidth:2836}),`\\n`,(0,e.jsx)(t.p,{children:\\"Next, disable auto-reply messages and greeting messages\\"}),`\\n`,(0,e.jsx)(a,{src:\\"/assets/images/tutorials/bot-studio/bse-114.webp\\",alt:\\"bse-114\\",naturalHeight:856,naturalWidth:2828}),`\\n`,(0,e.jsx)(t.p,{children:\\"Voila! You have successfully deployed your bot to LINE Messenger.\\"}),`\\n`,(0,e.jsx)(t.p,{children:\\"Scan the QR Code in LINE Developer Console to add the bot.\\"}),`\\n`,(0,e.jsx)(a,{src:\\"/assets/images/tutorials/bot-studio/bse-115.webp\\",alt:\\"bse-115\\",naturalHeight:582,naturalWidth:2082}),`\\n`,(0,e.jsx)(t.p,{children:\\"Then, test to scan QR Code\\"}),`\\n`,(0,e.jsx)(a,{src:\\"/assets/images/tutorials/bot-studio/bse-116.webp\\",alt:\\"bse-116\\",naturalHeight:1920,naturalWidth:1080})]})}}var z=N;function C(n,i){throw new Error(\\"Expected \\"+(i?\\"component\\":\\"object\\")+\\" `\\"+n+\\"` to be defined: you likely forgot to import, pass, or provide it.\\")}return k(W);})();\\n;return Component;"},"_id":"tutorials/bot-studio.mdx","_raw":{"sourceFilePath":"tutorials/bot-studio.mdx","sourceFileName":"bot-studio.mdx","sourceFileDir":"tutorials","contentType":"mdx","flattenedPath":"tutorials/bot-studio"},"type":"Tutorials","slug":["bot-studio"],"excerpt":"\\n## Introduction\\n\\nBuilding a chatbot on Kata | Platform is quick and easy, even with a lack of programming knowledge. In this tutorial, we will learn how to create a simple bot on LINE Messenger to order a pizza"}');
;// CONCATENATED MODULE: ./.contentlayer/generated/Tutorials/tutorials__create-igdm-bot-handover-from-chatbot-to-agent.mdx.json
const tutorials_create_igdm_bot_handover_from_chatbot_to_agent_mdx_namespaceObject = JSON.parse('{"layout":"tutorial","id":"create-igdm-bot-handover-from-chatbot-to-agent","imgSpot":"/assets/images/tutorials/spot-ig-handover.webp","product":"kata-platform","title":"Create Instagram Bot Handover from Chatbot to Agent Tutorial","date":"2018-10-10T07:00:00+07:00","prev":"integration-chatbot-with-cms-studio","next":"create-simple-bot-handover-from-chatbot-to-agent","body":{"raw":"\\nKata Platform <a href=\\"https://platform.kata.ai\\" target=\\"_blank\\">https://platform.kata.ai</a> is a platform to create chatbots and train them with Natural Language Processing (NLP). You can create any chatbots for any use-cases, such as FAQ, campaign, customer service, handover to human agents, and more.\\n\\nCurrently, we’ve launched Instagram chatbot with various features, such as End-users can receive automated replies by creating an Instagram story that mentioned brand, receive automated replies by replying to brand Instagram story, receive bot responses in image, text, quick reply, ice breaker (for first-time users only) and generic template (similar with a carousel in other messaging platforms). Learn more about [Instagram DM Automation](/tutorials/how-to-use-instagram-messaging-automation-in-your-project).\\n\\nIn this tutorial, we will create an Instagram chatbot that is able to send conversations to human agents, also known as \\"Agent Handover\'\'. We will use the Kata Omnichat dashboard to connect chatbots with human agents. Learn more about [Omnichat](/kata-omnichat/introduction/what-is-kata-omnichat).\\n\\n<YoutubeEmbedWrapper>\\n  <YoutubeEmbed\\n    id=\\"dAHnoTX4BUE\\"\\n    params=\\"v=dAHnoTX4BUE\\"\\n    title=\\"Create Instagram Bot Handover from Chatbot to Agent Tutorial\\"\\n  />\\n</YoutubeEmbedWrapper>\\n\\n## Chatbot Flow\\n\\nBefore we jump into the tutorial, let’s see the scenario for the conversation. We will create a chatbot using _keywords_.\\n\\n### Conversation Flow Table\\n\\nConversation flow table details can be seen <a href=\\"https://drive.google.com/file/d/1rh5XvmGvbNyXZetG6v-tjAr8LvXjU-aj/view\\" target=\\"_blank\\">here</a>\\n\\n## Create Project\\n\\n### Objective: Register your new account and login to the Platform\\n\\n1. Go to <a href=\\"https://platform.kata.ai\\" target=\\"_blank\\">https://platform.kata.ai</a> and click **Sign Up** to create new account\\n\\n2. Input required fields in sign up page: **Username, email address, role and captcha**\\n\\n3. Go to your registered email inbox. You will receive an email to verify your account and input your password\\n\\n4. When you click the **Confirm Email** button in the verification email, you will be redirected to set up a password. Insert your password and confirm the password.\\n\\n5. You will be redirected to the Login **Page**. Input your username and password to continue.\\n\\n### Objective: Create new chatbot project\\n\\n#### Login to Kata Platform and create a project\\n\\n1. Open your browser, then open the URL <a href=\\"https://platform.kata.ai/login\\" target=\\"_blank\\">https://platform.kata.ai/login</a> and enter your username & password.\\n\\n2. Click **\\"Login\\"** to continue.\\n\\n3. Click on **\\"Create Project\\"** and fill in the form. Each project contains one bot design, one NL, and one CMS.\\n\\n## Create Handover Flow\\n\\n### Objective: Define a flow\\n\\n#### Create a flow name \\"handover\\". We will use 1 flow for this simple bot\\n\\n1. Click **\\"Create Flow\\"** button on the Conversation Flow screen\\n\\n2. Create flow \\"handover\\", other fields are left blank. Then, click **Create**.\\n\\n#### Create \\"init\\" state\\n\\n1. Click **\\"+\\"** icon in the bottom right to create a new state\\n\\n2. Create state \\"init\\" and click the toggle to turn on “Initial State” and other fields are left blank. Then, click **Create**.\\n\\n## Create Greetings State to Respond End-User’s who Greet Bot via Direct Message\\n\\nIn this part, we are going to create a greeting flow to respond to end-users who greet the brand\'s bot via direct message, **but** **not** via Ice Breaker. For example, the end-user says \\"hi\\" to the bot and does not want to choose via Ice Breaker. Learn more about [Ice Breaker](/kata-omnichat/manage-inbox-settings/set-up-ice-breaker).\\n\\n### Objective: Create greetings state to define how to respond\\n\\n#### Create \\"greetingsState\\" as bot response to show keywords menu\\n\\n1. Create another state by clicking the **\\"+\\"** icon in the bottom right to create a new state named “greetingsState”\\n\\n2. Click **\\"Add action\\"**, then click **“+”** in the action box to create a new action\\n\\n3. When all actions available are shown, then choose \\"Text\\"\\n\\n4. Input action name \\"greetingsText\\"\\n\\n5. Next, click the **Add Variant** button to fill in with this text:\\n\\n```\\nHalo, selamat datang di layanan CS Bank ABC 😊 \\\\n\\\\nUntuk memulai, pilih menu yang tersedia: \\\\n\\\\nKetik \\"1\\" untuk melihat FAQ \\\\nKetik “2” untuk melihat promo yang tersedia \\\\nKetik “3” untuk melihat lokasi Bank ABC \\\\nKetik “4” untuk berbicara dengan CS Bank ABC \\\\n\\\\n💡 Cukup ketik angka pilihannya, ya\\n```\\n\\n6. Click **Create Action**\\n\\n#### Set the state into self-transition\\n\\nThe self-transition will make the actions under state will be repeatedly shown if end-users give an incorrect answer\\n\\n1. Go to tab **Transitions**\\n\\n2. Turn on on the Self Transition toggle\\n\\n3. Then, click Create to finalize the state\\n\\n### Objective: Catch end-users messages when greeting the bot\\n\\n#### Create \\"greetings\\" keywords to build understanding in chatbots when end-users greet the bot. We will use the NLUs feature to create the keywords.\\n\\n1. Go to the menu **\\"NLUs\\"** which is placed under the “Conversation Flows” menu. Your screen will be switched to create NLUs\\n\\n2. Click **Create NLU**\\n\\n3. Then, fill in the fields as follow\\n\\n```\\nNLU Name: greetings\\nNLU Type: Keyword\\n```\\n\\n4. Next, click **\\"Add Keyword\\"** to define any words to trigger the bot. Fill in the main keyword as follow\\n\\n```\\nMain keyword: greetings\\n```\\n\\n5. Add a new word by pressing \\"enter\\" on your keyboard. Every time you write a new word, press “enter” on your keyboard to save words. Add these words\\n\\n<FigureImage\\n  caption={{ title: \'Figure 1.\', description: `Create \\"greetings\\" keyword` }}\\n  src=\\"/assets/images/tutorials/ig-handover/image_1.webp\\"\\n  alt=\\"Simple Handover\\"\\n  naturalHeight={838}\\n  naturalWidth={1828}\\n/>\\n\\n6. Click **\\"Create\\"** to save the NLUs\\n\\n#### Create \\"greetingsIntent\\" intent to catch user’s input\\n\\n1. Click the Intent tab which is placed next to the Conversation Flows sidebar.\\n\\n2. Click **Create Intent** button\\n\\n3. Fill in the intent as follows. The choice of \\"Intent type\\" is text, which means it will catch incoming messages with text only. We also set up the intent into “As Initial”, which means the intent will be executed for the first time. On classifier, use “greetings” NLUs that we’ve created in the previous step to connect the intent with creating keywords for greetings.\\n\\n<FigureImage\\n  caption={{ title: \'Figure 2.\', description: `Create intent and create mapping with greetings keyword` }}\\n  src=\\"/assets/images/tutorials/ig-handover/image_2.webp\\"\\n  alt=\\"Simple Handover\\"\\n  naturalHeight={1162}\\n  naturalWidth={1888}\\n/>\\n\\n### Objective: Connect \\"init\\" and “greetingsState” states by creating a transition\\n\\n#### Create a transition to connect \\"init\\" and “greetingsState” states. The transition will define in which condition the greetings state, including the actions’ state, will be executed.\\n\\n1. Pull a line from the \\"init\\" state and drag it to the “greetingsState” state. If you succeed, then it will show a **Create Transition** drawer\\n\\n2. Fill in the transition condition as follow\\n\\n```\\nintent == \\"greetingsIntent\\"\\n```\\n\\n3. Click **\\"Create Transition\\"**\\n\\n## Create Greetings State to Respond End-User’s who Greet Bot via Instagram Story Mention\\n\\nIn this part, we are going to create a greeting flow to respond to end-users who mentioned the brand’s Instagram account in the end-users Instagram Stories. End-user will receive an automatic message in a direct message. Learn more about [Instagram Story Mention](/tutorials/how-to-use-instagram-messaging-automation-in-your-project).\\n\\n### Objective: Catch end-users who mentioned the brand’s in the end-users Instagram Story\\n\\n#### Create \\"igMentionedIntent\\" intent to catch user’s input\\n\\n1. Click the Intent tab which is placed next to the Conversation Flows sidebar.\\n\\n2. Click **Create Intent** button\\n\\n3. Fill in the intent as follows. We set up the intent into \\"As Initial\\", which means the intent will be executed for the first time. Choose intent type into data, because we will use a payload named story_mention.\\n\\n<FigureImage\\n  caption={{ title: \'Figure 3.\', description: `Create intent for Instagram Story Mention feature` }}\\n  src=\\"/assets/images/tutorials/ig-handover/image_3.webp\\"\\n  alt=\\"Simple Handover\\"\\n  naturalHeight={991}\\n  naturalWidth={2048}\\n/>\\n\\n4. Then, click **Create**.\\n\\n### Objective: Create greetings state to define how to respond\\n\\n#### Create \\"igMentionedState\\" as bot response to show keywords menu\\n\\n1. Create another state by clicking the **\\"+\\"** icon in the bottom right to create a new state named “_igMentionedState_”\\n\\n2. Click **\\"Add action\\"**, then click **“+”** in the action box to create a new action\\n\\n3. When all actions available are shown, then choose \\"Text\\"\\n\\n4. Input action name \\"igMentionedText\\"\\n\\n5. Next, click the **Add Variant** button to fill in with this text:\\n\\n```\\nHalo, terima kasih telah menyapa Bank ABC di Instagram Story Anda 😊 \\\\n\\\\nUntuk memulai, pilih menu yang tersedia: \\\\n\\\\nKetik \\"1\\" untuk melihat FAQ \\\\nKetik “2” untuk melihat promo yang tersedia \\\\nKetik “3” untuk melihat lokasi Bank ABC \\\\nKetik “4” untuk berbicara dengan CS Bank ABC \\\\n\\\\n💡 Cukup ketik angka pilihannya, ya\\n```\\n\\n6. Click **Create Action**\\n\\n#### Set the state into self-transition\\n\\nThe self-transition will make the actions under state will be repeatedly shown if end-users give an incorrect answer\\n\\n1. Go to tab **Transitions**\\n\\n2. Turn on on the Self Transition toggle\\n\\n3. Then, click Create to finalize the state\\n\\n### Objective: Connect \\"init\\" and “igMentionedState” states by creating a transition\\n\\n#### Create a transition to connect \\"init\\" and “igMentionedState” states. The transition will define in which condition the greetings state, including the actions’ state, will be executed.\\n\\n1. Pull a line from the \\"init\\" state and drag it to the “greetings” state. If you succeed, then it will show a **Create Transition** drawer\\n\\n2. Fill in the transition as follow\\n\\n<FigureImage\\n  caption={{\\n    title: \'Figure 4.\',\\n    description: `Create transition and define which intent to trigger the next state \\"igMentionedState\\"`,\\n  }}\\n  src=\\"/assets/images/tutorials/ig-handover/image_4.webp\\"\\n  alt=\\"Simple Handover\\"\\n  naturalHeight={898}\\n  naturalWidth={1800}\\n/>\\n\\n3. Click **\\"Create Transition\\"**\\n\\n## Create Greetings State to Respond End-User’s who Greet Bot via Instagram Story Reply\\n\\nIn this part, we are going to create a greeting flow to respond to end-users who reply to the brand\'s Instagram Story. Learn more about [Instagram Story Reply](/tutorials/how-to-use-instagram-messaging-automation-in-your-project).\\n\\n### Objective: Catch end-users who reply to the brand’s Instagram Story\\n\\n#### Create \\"replyStoryIntent\\" intent to catch user’s input\\n\\n1. Click the Intent tab which is placed next to the Conversation Flows sidebar.\\n\\n2. Click **Create Intent** button\\n\\n3. Fill in the intent as follows. We set up the intent into \\"As Initial\\", which means the intent will be executed for the first time. Choose intent type into data, because we will use a payload named story_reply.\\n\\n<FigureImage\\n  caption={{ title: \'Figure 5.\', description: `Create intent for Instagram Story Reply` }}\\n  src=\\"/assets/images/tutorials/ig-handover/image_5.webp\\"\\n  alt=\\"Simple Handover\\"\\n  naturalHeight={932}\\n  naturalWidth={1692}\\n/>\\n\\n5. Then, click **Create**.\\n\\n### Objective: Create greetings state to define how to respond\\n\\n#### Create \\"igStoryReplyState\\" as bot response to show keywords menu\\n\\n1. Create another state by clicking the **\\"+\\"** icon in the bottom right to create a new state named “igStoryReplyState”\\n\\n2. Click **\\"Add action\\"**, then click **“+”** in the action box to create a new action\\n\\n3. When all actions available are shown, then choose \\"Text\\"\\n\\n4. Input action name \\"igStoryReplyText\\"\\n\\n5. Next, click the **Add Variant** button to fill in with this text:\\n\\n```\\nHalo, terima kasih telah menyapa Instagram Story Bank ABC 😊 \\\\n\\\\nUntuk memulai, pilih menu yang tersedia: \\\\n\\\\nKetik \\"1\\" untuk melihat FAQ \\\\nKetik “2” untuk melihat promo yang tersedia \\\\nKetik “3” untuk melihat lokasi Bank ABC \\\\nKetik “4” untuk berbicara dengan CS Bank ABC \\\\n\\\\n💡 Cukup ketik angka pilihannya, ya\\n```\\n\\n6. Click **Create Action**\\n\\n#### Set the state into self-transition\\n\\nThe self-transition will make the actions under state will be repeatedly shown if end-users give an incorrect answer\\n\\n1. Go to tab **Transitions**\\n\\n2. Turn on on the Self Transition toggle\\n\\n3. Then, click Create to finalize the state\\n\\n### Objective: Connect \\"init\\" and “igStoryReplyState” states by creating a transition\\n\\n#### Create a transition to connect \\"init\\" and “igStoryReplyState” states. The transition will define in which condition the greetings state, including the actions’ state, will be executed.\\n\\n1. Pull a line from the \\"init\\" state and drag it to the “igStoryReplyState” state. If you succeed, then it will show a **Create Transition** drawer\\n\\n2. Fill in the transition as follow\\n\\n<FigureImage\\n  caption={{\\n    title: \'Figure 6.\',\\n    description: `Create transition and define which intent to trigger the next state \\"igStoryReply\\"`,\\n  }}\\n  src=\\"/assets/images/tutorials/ig-handover/image_6.webp\\"\\n  alt=\\"Simple Handover\\"\\n  naturalHeight={854}\\n  naturalWidth={1524}\\n/>\\n\\n3. Click **\\"Create Transition\\"**\\n\\n## Create Quick Replies\\n\\nIn this step, we will create bot responses named quick reply. Learn more about [Quick Reply for Instagram Messaging](/tutorials/how-to-use-instagram-messaging-automation-in-your-project).\\n\\n### Objective: Show available FAQ topics to end-user\\n\\n#### Create \\"faqState\\" state\\n\\n1. Click **\\"+\\"** icon in bottom right to create a new state\\n\\n2. Fill in the state name with \\"_faqState_\\"\\n\\n#### Create quick reply response type\\n\\n1. Click **\\"+\\"** in action box to create a new action\\n\\n2. When all actions available are shown, then choose \\"Quick Reply\\"\\n\\n3. Input action name \\"qrText\\"\\n\\n4. Fill in the Message field with:\\n\\n```\\nPilih topik yang kamu inginkan 😊\\n```\\n\\n5. Next, click **Add action** button\\n\\n6. Fill in the fields as follow\\n\\n<FigureImage\\n  caption={{ title: \'Figure 7.\', description: `Create message in quick replies` }}\\n  src=\\"/assets/images/tutorials/ig-handover/image_7.webp\\"\\n  alt=\\"Simple Handover\\"\\n  naturalHeight={954}\\n  naturalWidth={1348}\\n/>\\n\\n7. Click button Create Action\\n\\n#### Set the state into self-transition\\n\\nThe self-transition will make the actions under state will be repeatedly shown if end-users give an incorrect answer\\n\\n1. Go to tab **Transitions**\\n\\n2. Turn on on the Self Transition toggle\\n\\n3. Then, click Create to finalize the state\\n\\n### Objective: Connect all greetings states to FAQ state\\n\\n#### Connect greetings via direct message to FAQ state\\n\\n1. Pull transition line which starts from \\"greetingState\\" to “faqState”\\n\\n2. Fill in the **Condition** field:\\n\\n```\\ncontent == \\"1\\"\\n```\\n\\n3. Click Create\\n\\n#### Connect greetings via Instagram story mention to FAQ state\\n\\n1. Pull transition line which starts from \\"igMentionedState\\" to “faqState”\\n\\n2. Fill in the **Condition** field:\\n\\n```\\ncontent == \\"1\\"\\n```\\n\\n3. Click Create\\n\\n#### Connect greetings via Instagram story reply to FAQ state\\n\\n1. Pull transition line which starts from \\"igStoryReplyState\\" to “faqState”\\n\\n2. Fill in the **Condition** field:\\n\\n```\\ncontent == \\"1\\"\\n```\\n\\n3. Click Create\\n\\n### Objective: Show bot response after end-user choose \\"Daftar rekening baru\\"\\n\\n#### Create \\"rekeningBaruState\\" state\\n\\n1. Click **\\"+\\"** icon in the bottom right to create a new state\\n\\n2. Fill in the state name with \\"rekeningBaruState\\"\\n\\n#### Create bot response\\n\\n1. Click **\\"+\\"** in action box to create a new action\\n\\n2. When all actions available are shown, then choose \\"Text\\"\\n\\n3. Input action name \\"rekeningBaruText\\"\\n\\n4. Fill in Message field with:\\n\\n```\\nUntuk mendaftar rekening baru, kamu harus menyiapkan KTP, KK asli dan foto diri\\n```\\n\\n5. Click button Create Action\\n\\n#### Create bot action command to trigger next state to be executed\\n\\nIn this section, the bot will send the \\"next\\" command whenever this state is executed. The “next” command will be caught later into an intent for executing another state to confirm end-users whether they want to restart and show the menu or end the conversation.\\n\\n1. Click **\\"+\\"** in action box to create a new action\\n\\n2. When all actions available are shown, then choose \\"Command\\"\\n\\n3. Input action name \\"nextCommand\\"\\n\\n4. Fill in Command field with:\\n\\n```\\nnext\\n```\\n\\n6. Click button Create Action\\n\\n### Objective: Show bot response after end-user choose \\"Daftar kartu kredit\\"\\n\\n#### Create \\"kartuKreditState\\" state\\n\\n1. Click **\\"+\\"** icon in the bottom right to create a new state\\n\\n2. Fill in the state name with \\"kartuKreditText\\"\\n\\n#### Create bot response\\n\\n3. Click **\\"+\\"** in action box to create a new action\\n\\n4. When all actions available are shown, then choose \\"Text\\"\\n\\n5. Input action name \\"kartuKreditText\\"\\n\\n6. Fill in Message field with:\\n\\n```\\nUntuk mendaftar kartu kredit baru, kamu harus menyiapkan KTP, KK asli dan foto diri\\n```\\n\\n7. Click the button Create Action\\n\\n#### Create bot action command to trigger next state to be executed\\n\\nIn this section, the bot will send the \\"next\\" command whenever this state is executed. The “next” command will be caught later into an intent for executing another state to confirm end-users whether they want to restart and show the menu or end the conversation. We already created this action in the previous step, so we will choose from available actions.\\n\\n1. Click button **Add action** to add more action\\n\\n2. In \\"Action name\\" dropdown, search “nextCommand” actions\\n\\n3. Click \\"nextComman\\" action\\n\\n4. Then, click **Create Action** button\\n\\n5. Click **Create** to finalize the state\\n\\n### Objective: Connect FAQ menu response to quick reply options\\n\\n#### Create transition to connect from faqState to rekeningBaruState\\n\\n1. Pull transition line which starts from \\"faqState\\" to “rekeningBaruState”\\n\\n2. Fill in the **Condition** field:\\n\\n```\\ncontent == \\"Daftar rekening baru\\"\\n```\\n\\n3. Click Save\\n\\n#### Create transition to connect from faqState to kartuKreditState\\n\\n1. Pull transition line which starts from \\"faqState\\" to “kartuKreditState”\\n\\n2. Fill in the **Condition** field:\\n\\n```\\ncontent == \\"Daftar kartu kredit\\"\\n```\\n\\n5. Click Save\\n\\n## Create Generic Template (Carousel)\\n\\nIn this step, we will create bot responses named generic template. Learn more about [Generic Template for Instagram Messaging](/tutorials/how-to-use-instagram-messaging-automation-in-your-project).\\n\\n### Objective: Show bot response of generic template (\\"carousel\\") to end-users\\n\\n#### Create carousel\\n\\n1. Click **\\"+\\"** icon in the bottom right to create a new state\\n\\n2. Fill in the state name with \\"carouselState\\"\\n\\n#### Create bot response for the first carousel: Buy 1 Get 1\\n\\n1. Click **\\"+\\"** in the action box to create a new action\\n\\n2. When all actions available are shown, then choose \\"Carousel\\"\\n\\n3. Input action name \\"carousel\\"\\n\\n4. Next, click the **Add Carousel** button and fill in with the following fields:\\n\\n```\\nTitle: Buy 1 Get 1\\nText: Gratis 1 pancake di Kafe ABC\\nThumbnail image URL: https://images.unsplash.com/photo-1630370939015-408e783fb273?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1yZWxhdGVkfDF8fHxlbnwwfHx8fA%3D%3D&auto=format&fit=crop&w=900&q=60.jpg\\n```\\n\\n5. Click the **Add action** button. The first action will trigger another state to execute. Fill in with the following fields:\\n\\n```\\nLabel: B1G1\\nPostback\\n\\nPayload\\nKey: carousel\\nValue: b1g1\\n```\\n\\n6. Then click the **Add action** button again to create another action. The second action will redirect to the open link. Fill in with the following fields:\\n\\n```\\nLabel: Lihat detail\\nURL\\nhttps://docs.kata.ai\\n```\\n\\n#### Create bot response for the second carousel: Diskon 10%\\n\\n1. Next, click the **Add Carousel** button and fill in with the following fields:\\n\\n```\\nTitle: Diskon 10%\\nText: Dapatkan di Mart ABC\\nThumbnail image URL: https://images.unsplash.com/photo-1515706886582-54c73c5eaf41?ixid=MnwxMjA3fDB8MHxzZWFyY2h8MTR8fHNob3B8ZW58MHx8MHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=900&q=60.jpg\\n```\\n\\n8. Click the **Add action** button. The first action will trigger another state to execute. Fill in with the following fields:\\n\\n```\\nLabel: Diskon\\nPostback\\n\\nPayload\\nKey: carousel\\nValue: diskon\\n```\\n\\n9. Then click the **Add action** button again to create another action. The second action will redirect to the open link. Fill in with the following fields:\\n\\n```\\nLabel: Lihat detail\\nURL\\nhttps://docs.kata.ai\\n```\\n\\n10. Click **Create Action**\\n\\n11. To finalize the state creation, click **Create** in the state drawer\\n\\n#### Set the state into self-transition\\n\\nThe self-transition will make the actions under state will be repeatedly shown if end-users give an incorrect answer\\n\\n1. Go to tab **Transitions**\\n\\n2. Turn on on the Self Transition toggle\\n\\n3. Then, click Create to finalize the state\\n\\n### Objective: Connect all greetings states to carouselState\\n\\n#### Connect greetings via direct message to carousel state\\n\\n1. Pull transition line which starts from \\"greetingState\\" to “carouselState”\\n\\n2. Fill in the **Condition** field:\\n\\n```\\ncontent == \\"2\\"\\n```\\n\\n3. Click Create\\n\\n#### Connect greetings via Instagram story mention to carousel state\\n\\n1. Pull transition line which start from \\"igMentionedState\\" to “carouselState”\\n\\n2. Fill in the **Condition** field:\\n\\n```\\ncontent == \\"2\\"\\n```\\n\\n3. Click Create\\n\\n#### Connect greetings via Instagram story reply to carousel state\\n\\n1. Pull transition line which start from \\"igStoryReplyState\\" to “carouselState”\\n\\n2. Fill in the **Condition** field:\\n\\n```\\ncontent == \\"2\\"\\n```\\n\\n3. Click Create\\n\\n### Objective: Show bot response after end-users choose \\"Buy 1 Get 1\\"\\n\\n#### Create \\"b1g1State\\" state\\n\\n1. Click **\\"+\\"** icon in the bottom right to create a new state\\n\\n2. Fill in the state name with \\"b1g1State\\"\\n\\n#### Create bot response\\n\\n1. Click **\\"+\\"** in the action box to create a new action\\n\\n2. When all actions available are shown, then choose \\"Text\\"\\n\\n3. Input action name \\"b1g1Text\\"\\n\\n4. Fill in Text Response field with:\\n\\n```\\nKamu telah memilih promo \\"Buy 1 Get 1\\" dari Bank ABC. Silahkan mengunjungi Kafe ABC terdekat Anda dan tunjukkan pesan ini 😊\\n```\\n\\n5. Click button Create Action\\n\\n#### Create bot action command to trigger next state to be executed\\n\\nIn this section, the bot will send the \\"next\\" command whenever this state is executed. The “next” command will be caught later into an intent for executing another state to confirm end-users whether they want to restart and show the menu or end the conversation. We already created this action in the previous step, so we will choose from available actions.\\n\\n1. Click button Add action to add more action\\n\\n2. In the \\"Action name\\" dropdown, search “nextCommand” actions\\n\\n3. Click \\"nextCommand\\" action\\n\\n4. Then, click Create Action button\\n\\n### Objective: Show bot response after end-users choose \\"Disc 10%\\"\\n\\n#### Create \\"discState\\" state\\n\\n1. Click **\\"+\\"** icon in the bottom right to create a new state\\n\\n2. Fill in the state name with \\"discState\\"\\n\\n#### Create bot response\\n\\n1. Click **\\"+\\"** in action box to create a new action\\n\\n2. When all actions available are shown, then choose \\"Text\\"\\n\\n3. Input action name \\"discText\\"\\n\\n4. Fill in Text Response field with:\\n\\n```\\nKamu telah memilih promo \\"Diskon 10% di Mart ABC\\" dari Bank ABC. Silahkan mengunjungi Mart ABC terdekat Anda dan tunjukkan pesan ini 😊\\n```\\n\\n6. Click button Create Action\\n\\n#### Create bot action command to trigger next state to be executed\\n\\nIn this section, the bot will send the \\"next\\" command whenever this state is executed. The “next” command will be caught later into an intent for executing another state to confirm end-users whether they want to restart and show the menu or end the conversation. We already created this action in the previous step, so we will choose from available actions.\\n\\n1. Click button Add action to add more action\\n\\n2. In the \\"Action name\\" dropdown, search “nextCommand” actions\\n\\n3. Click \\"nextCommand\\" action\\n\\n4. Then, click Create Action button\\n\\n### Objective: Connect carousel menu response to postback options\\n\\n#### Create transition to connect from carouselState to b1g1State\\n\\n1. Pull transition line which starts from \\"carouselState\\" to “b1g1State”\\n\\n2. Fill in the **Condition** field:\\n\\n```\\ncontent == \\"B1G1\\" || (intent == \\"carouselIntent\\" && payload.carousel == \\"b1g1\\")\\n```\\n\\n3. Click Save\\n\\n#### Create transition to connect from faqState to kartuKreditState\\n\\n1. Pull transition line which starts from \\"carouselState\\" to “discState”\\n\\n2. Fill in the **Condition** field:\\n\\n```\\ncontent == \\"Diskon\\" || (intent == \\"carouselIntent\\" && payload.carousel == \\"diskon\\")\\n```\\n\\n3. Click Save\\n\\n## Create Text Response\\n\\n### Objective: Show bot response in the text to end-users\\n\\n#### Create text\\n\\n1. Click **\\"+\\"** icon in the bottom right to create a new state\\n\\n2. Fill in the state name with \\"locationState\\"\\n\\n3. Click **\\"+\\"** in the action box to create a new action\\n\\n4. When all actions available are shown, then choose \\"Text\\"\\n\\n5. Input action name \\"locationText\\"\\n\\n6. Next, click the **Add Variant** button and fill in with following fields:\\n\\n```\\nLokasi bank ABC terdapat di Jalan Haji Nawi, Jakarta Selatan. Lihat peta: https://goo.gl/maps/eD2BGC6ZL7JpgBnU6\\n```\\n\\n8. Click Create Action\\n\\n#### Create bot action command to trigger next state to be executed\\n\\nIn this section, the bot will send the \\"next\\" command whenever this state is executed. The “next” command will be catched later into an intent for executing another state to confirm end-users whether they want to restart and show menu or end the conversation.\\n\\n1. Click **\\"+\\"** in action box to create a new action\\n\\n2. When all actions available are shown, then choose \\"Command\\"\\n\\n3. Input action name \\"nextCommand\\"\\n\\n4. Fill in Command field with:\\n\\n```\\nnext\\n```\\n\\n5. Click button Create Action\\n\\n6. Then, click Create to finalize the state\\n\\n### Objective: Connect all greetings states to locationState\\n\\n#### Connect greetings via direct message to location state\\n\\n1. Pull transition line which start from \\"greetingState\\" to “locationState”\\n\\n2. Fill in the **Condition** field:\\n\\n```\\ncontent == \\"3\\"\\n```\\n\\n3. Click Save\\n\\n#### Connect greetings via Instagram story mention to carousel state\\n\\n1. Pull transition line which start from \\"igMentionedState\\" to “locationState”\\n\\n2. Fill in the **Condition** field:\\n\\n```\\ncontent == \\"3\\"\\n```\\n\\n3. Click Save\\n\\n#### Connect greetings via Instagram story reply to carousel state\\n\\n1. Pull transition line which start from \\"igStoryReplyState\\" to “locationState”\\n\\n2. Fill in the **Condition** field:\\n\\n```\\ncontent == \\"3\\"\\n```\\n\\n3. Click Save\\n\\n## Create Handover to Human Agent Flow\\n\\nHandover to human agent path is required to be implemented in Instagram Messaging and we will use Handover API template.\\n\\n### Objective: Create a flow that end-user can request handover to human agents by using Handover API\\n\\n#### Create handover state\\n\\n1. Click **\\"+\\"** icon in bottom right to create new state\\n\\n2. Fill in the state name with \\"handover\\" and activate toggle “End state”\\n\\n#### Create bot response to inform end-user that the handover request has been received and waiting for agents to reply\\n\\n1. Click **\\"+\\"** in action box to create new action\\n\\n2. When all actions available are shown, then choose \\"Text\\"\\n\\n3. Input action name \\"waitForAgent\\"\\n\\n4. Next, click the **Add Variant** button to fill in with this text:\\n\\n```\\nMohon menunggu, ya. Sedang kami hubungkan ke CS Bank ABC yang tersedia! 😊\\n```\\n\\n5. Click **Create Action**\\n\\n#### Use Handover API to send handover request to Omnichat\\n\\n1. Create another action by clicking **\\"Add action\\"**\\n\\n2. Click **\\"+\\"** in action box to create new action\\n\\n3. Fill in action name with \\"handover\\"\\n\\n4. When all actions available are shown, then choose \\"API\\"\\n\\n5. Choose **Handover API**\\n\\n6. Click **Create Action** button\\n\\n7. To finalize this step when creating a new state, click the **Create** button in the state drawer\\n\\n### Objective: Connect all greetings states to handoverState\\n\\n#### Connect greetings via direct message to handover state\\n\\n1. Pull transition line which start from \\"greetingState\\" to “handoverState”\\n\\n2. Fill in the **Condition** field:\\n\\n```\\ncontent == \\"4\\"\\n```\\n\\n3. Click Save\\n\\n#### Connect greetings via Instagram story mention to handover state\\n\\n1. Pull transition line which start from \\"igMentionedState\\" to “handoverState”\\n\\n2. Fill in the **Condition** field:\\n\\n```\\ncontent == \\"4\\"\\n```\\n\\n3. Click Save\\n\\n#### Connect greetings via Instagram story reply to handover state\\n\\n1. Pull transition line which start from \\"igStoryReplyState\\" to “handoverState”\\n\\n2. Fill in the **Condition** field:\\n\\n```\\ncontent == \\"4\\"\\n```\\n\\n3. Click Save\\n\\n## Create Confirmation State\\n\\n### Objective: Create a state that end-user will be asked to restart for showing all menu or end conversation\\n\\n#### Create \\"confirmState\\"\\n\\n1. Click **\\"+\\"** icon in bottom left to create new state\\n\\n2. Fill in the state name with \\"confirmState\\"\\n\\n3. Click **\\"Add action\\",** then click “+” to create new action\\n\\n4. Choose Text, then fill in the action name with \\"confirmText\\".\\n\\n5. Next, click the **\\"Add Variant\\"** button and input the following text:\\n\\n```\\nApakah ada yang ingin kamu tanyakan kembali? Pilih menu yang tersedia:\\\\n\\\\n1. Ketik \\"1\\" untuk melihat menu\\\\n2. Ketik “2” untuk menyelesaikan pembicaraan\\n```\\n\\n#### Set the state into self-transition\\n\\nThe self-transition will make the actions under state will be repeatedly shown if end-users give an incorrect answer\\n\\n1. Go to tab **Transitions**\\n\\n2. Turn on on the Self Transition toggle\\n\\n3. Then, click Create to finalize the state\\n\\n### Objective: Create an intent to catch command for executing next state\\n\\n1. Click the Intent tab which is placed next to the Conversation Flows sidebar.\\n\\n2. Click **Create Intent** button\\n\\n3. Fill in the intent as follows. The choice of \\"Intent type\\" is command, which means it will catch command only. On condition, it fills in with content with “next” which is a command that is sent from bot after executed responses such as quick replies, carousel, and text.\\n\\n<FigureImage\\n  caption={{ title: \'Figure 8.\', description: `Create intent to catch command for triggering next flow` }}\\n  src=\\"/assets/images/tutorials/ig-handover/image_8.webp\\"\\n  alt=\\"Simple Handover\\"\\n  naturalHeight={862}\\n  naturalWidth={1724}\\n/>\\n\\n4. Click Create to finalize\\n\\n### Objective: Connect all bot responses states to confirmState\\n\\n#### Connect quick replies responses states to confirmation state\\n\\n1. Pull transition line which starts from \\"rekeningBaruState\\" to “confirmState”\\n\\n2. Fill in the **Condition** field:\\n\\n```\\nintent == \\"nextIntent\\"\\n```\\n\\n3. Click Save\\n\\n4. Next, pull transition line which starts from \\"kartuKreditState\\" to “confirmState”\\n\\n5. Fill in the **Condition** field:\\n\\n```\\nintent == \\"nextIntent\\"\\n```\\n\\n6. Click Save\\n\\n#### Connect carousel responses to confirmation state\\n\\n1. Pull transition line which starts from \\"b1g1State\\" to “confirmState”\\n\\n2. Fill in the **Condition** field:\\n\\n```\\nintent == \\"nextIntent\\"\\n```\\n\\n3. Click Save\\n\\n4. Next, pull transition line which start from \\"discState\\" to “confirmState”\\n\\n5. Fill in the **Condition** field:\\n\\n```\\nintent == \\"nextIntent\\"\\n```\\n\\n6. Click Save\\n\\n#### Connect \\"locationState\\" to “confirmState”\\n\\n1. Pull transition line which start from \\"locationState\\" to “confirmState”\\n\\n2. Fill in the **Condition** field:\\n\\n```\\nintent == \\"nextIntent\\"\\n```\\n\\n3. Click Save\\n\\n### Objective: Create state to restart menu\\n\\n#### Create a \\"backToMenu\\" state to restart menu\\n\\n1. Click **\\"+\\"** icon in bottom left to create a new state\\n\\n2. Fill in the state name with \\"backToMenu\\"\\n\\n3. Turn on toggle **End State**\\n\\n4. Click **\\"Add action\\",** then click “+” to create a new action\\n\\n5. Choose Command, then fill in the action name with \\"backToMenu\\".\\n\\n6. Next, fill in the Command with:\\n\\n```\\ntoMenu\\n```\\n\\n7. Click Create to finalize\\n\\n#### Create \\"toMenuIntent\\" intent\\n\\n1. Click the Intent tab which is placed next to the Conversation Flows sidebar.\\n\\n2. Click **Create Intent** button\\n\\n3. Fill in the intent as follows. This intent will trigger show main menu as bot response\\n\\n<FigureImage\\n  caption={{ title: \'Figure 9.\', description: `Create intent to catch command for showing main menu again` }}\\n  src=\\"/assets/images/tutorials/ig-handover/image_9.webp\\"\\n  alt=\\"Simple Handover\\"\\n  naturalHeight={868}\\n  naturalWidth={1466}\\n/>\\n\\n4. Then, click **Create**.\\n\\n#### Update transition condition from \\"init\\" to “greetingsState”\\n\\nIn this step, we will update transition condition and use toMenuIntent as one of the conditions. It is because this intent, if executed, will trigger a greeting response and showing the menu in bot.\\n\\n1. Click transition between \\"init\\" and “greetingState”\\n\\n2. Edit drawer will be shown\\n\\n3. Update condition field into this\\n\\n```\\nintent == \\"greetingsIntent\\" || intent == \\"toMenuIntent\\"\\n```\\n\\n4. Click Save to update\\n\\n### Objective: Create state to end conversation\\n\\n#### Create a \\"bye\\" state to end conversation and show thank you response\\n\\n1. Click **\\"+\\"** icon in bottom left to create a new state\\n\\n2. Fill in the state name with \\"bye\\"\\n\\n3. Turn on toggle **End State**\\n\\n4. Click **\\"Add action\\",** then click “+” to create a new action\\n\\n5. Choose Text, then fill in the action name with \\"bye\\".\\n\\n6. Click **Add Variant** button\\n\\n7. Next, fill in the Text with:\\n\\n```\\nTerima kasih sudah menghubungi Bank ABC 😊\\n```\\n\\n8. Click **Create** to finalize\\n\\n### Objective: Connect transition between confirmState to backToMenu and bye state\\n\\n1. Pull transition line which starts from \\"confirmState\\" to “backToMenu”\\n\\n2. Fill in the **Condition** field:\\n\\n```\\ncontent == \\"1\\"\\n```\\n\\n4. Click Save\\n\\n5. Next, pull transition line which start from \\"confirmState\\" to “bye”\\n\\n6. Fill in the **Condition** field:\\n\\n```\\ncontent == \\"2\\"\\n```\\n\\n7. Click Save\\n\\n## Create Fallback Intent\\n\\n1. Click the Intent tab which is placed next to the Conversation Flows sidebar.\\n\\n2. Click **Create Intent** button\\n\\n3. Fill in the intent as follows. We set up the intent into \\"As Fallback\\", which means the intent will be executed as fallback. It becomes a new layer of fallback in Handover flow, before literally fallback-ed to fallback flow.\\n\\n<FigureImage\\n  caption={{ title: \'Figure 10.\', description: `Create intent for being \\"guard\\" before fallback flow` }}\\n  src=\\"/assets/images/tutorials/ig-handover/image_10.webp\\"\\n  alt=\\"Simple Handover\\"\\n  naturalHeight={452}\\n  naturalWidth={1150}\\n/>\\n\\n4. Click Create to finalize\\n\\n## Finalize Your New Bot\\n\\n### Objective: Publish your bot to save the chatbot flow\\n\\n1. Click on the **\\"Publish\\"** button which is placed on top right corner\\n\\n2. Fill in the **changelog**. You can input \\"Initial version\\" in the changelog\\n\\n3. Click **Publish** to save the changelog. Lastly, your final chatbot flow will be like this:\\n\\n<FigureImage\\n  caption={{ title: \'Figure 11.\', description: `Final conversation flow` }}\\n  src=\\"/assets/images/tutorials/ig-handover/image_11.webp\\"\\n  alt=\\"Simple Handover\\"\\n  naturalHeight={748}\\n  naturalWidth={2048}\\n/>\\n\\n### Objective: Testing your bot in emulator\\n\\n1. On the bottom of your right screen, there is a small button named **\\"Test Chatbot\\".** Click the **button** to start.\\n\\n2. You can try to test your bot by inputting a message in the text bot. Say \\"hi\\" to your bot. If it succeeds, your bot will reply as follows\\n\\n<FigureImage\\n  caption={{ title: \'Figure 12.\', description: `Testing your bot by typing \\"hai\\"` }}\\n  src=\\"/assets/images/tutorials/ig-handover/image_12.webp\\"\\n  alt=\\"Simple Handover\\"\\n  naturalHeight={1042}\\n  naturalWidth={2048}\\n/>\\n\\n<FigureImage\\n  caption={{ title: \'Figure 13.\', description: `Testing another action response, this example is for text action` }}\\n  src=\\"/assets/images/tutorials/ig-handover/image_13.webp\\"\\n  alt=\\"Simple Handover\\"\\n  naturalHeight={1140}\\n  naturalWidth={2048}\\n/>\\n\\n3. If you want to **restart** the session, click refresh icon which is placed at the bottom\\n\\n### Objective: Deploy your bot\\n\\n#### Create new deployment\\n\\n1. Go to the **\\"Deploy\\"** menu in the left sidebar\\n\\n2. On this page, click on the **\\"New Deployment\\"** button which is placed in the top right corner. If you successfully clicked, it will show a create deployment drawer\\n\\n3. Choose any deployment version you want to deploy and fill in the changelog. Or you can simply follow this screenshot\\n\\n<FigureImage\\n  caption={{ title: \'Figure 14.\', description: `Create new deployment` }}\\n  src=\\"/assets/images/tutorials/ig-handover/image_14.webp\\"\\n  alt=\\"Simple Handover\\"\\n  naturalHeight={1890}\\n  naturalWidth={1338}\\n/>\\n\\n4. Click **Submit** to finish the deployment\\n\\n#### Create a new environment as prerequisites to deploy the bot to channel\\n\\n1. Go to the **Environment** menu which is placed under the current menu (\\"Overview\\"). If you successfully entered the Environment menu, you will see a page like this. These 3 environments represent that your chatbot will be tested in development or staging first before go live as in Production stage.\\n\\n<FigureImage\\n  caption={{ title: \'Figure 15.\', description: `Set up environment, then set up Omnichat channel` }}\\n  src=\\"/assets/images/tutorials/ig-handover/image_15.webp\\"\\n  alt=\\"Simple Handover\\"\\n  naturalHeight={647}\\n  naturalWidth={2048}\\n/>\\n\\n2. Click the **Create Environment** button in the Development environment and you will see a drawer to create a new environment\\n\\n3. Choose the **development version** you want to (in this tutorial we will use the 1.0.0 version)\\n\\n4. Fill in the **environment URL**. This environment URL will be useful if you use our CMS feature, [learn more about CMS](https://docs.kata.ai/cms-studio/about/\').\\n\\n5. Click **Create** to finalize\\n\\n6. You will notice the button is changed into the Create **Channel** button.\\n\\nIn this step, you will need an Omnichat <a href=\\"https://kata-omnichat.kata.ai\\" target=\\"_blank\\">https://omnichat.kata.ai</a> account and an Omnichat inbox to deploy the bot. Let’s get started!\\n\\n## Create Inbox in Omnichat\\n\\nFollow these tutorials in Omnichat to continue:\\n\\n1. Register a new Omnichat account in Omnichat. Learn more about how to [register account in Omnichat](/kata-omnichat/getting-started/register-your-account-first)\\n\\n2. Create a new channel inbox. Learn more about [create inbox in Omnichat](/kata-omnichat/getting-started/connect-your-instagram-messaging-inbox)\\n\\n   1. For IGDM chatbot: Section **How to Set Up > Connect to Instagram Messaging**\\n\\n   2. For WA chatbot: Section **How to Set Up > Connect to Whatsapp Messaging**\\n\\n## Create Agent Bot in Omnichat\\n\\nFollow the tutorial in Omnichat to continue. Continue to [create agent bot](/kata-omnichat/configure-your-agent-chatbot/setup-agent-bot-in-kata-omnichat).\\n\\n### Connect Bot to Omnichat\\n\\n1. If you succeed to follow the above tutorials, you will see an access token generated in Omnichat that needs to be pasted into the Platform. The screenshot below\\n\\n<FigureImage\\n  caption={{ title: \'Figure 16.\', description: `Create agent bot` }}\\n  src=\\"/assets/images/tutorials/ig-handover/image_16.webp\\"\\n  alt=\\"Simple Handover\\"\\n  naturalHeight={967}\\n  naturalWidth={2048}\\n/>\\n\\n2. Next, open the Kata Platform URL <a href=\\"https://platform.kata.ai\\" target=\\"_blank\\">https://platform.kata.ai</a> and do login\\n\\n3. Click your project that already had a chatbot and deployed\\n\\n4. Then, go to the menu: Deploy > Environment. You will see this screen.\\n\\n<FigureImage\\n  caption={{\\n    title: \'Figure 17.\',\\n    description: `Click button \\"Create channel\\" to continue copying access token from Omnichat`,\\n  }}\\n  src=\\"/assets/images/tutorials/ig-handover/image_17.webp\\"\\n  alt=\\"Simple Handover\\"\\n  naturalHeight={695}\\n  naturalWidth={2048}\\n/>\\n\\n5. Click \\"+\\" Create Channel” button in channel table list and drawer to set up the channel will be shown\\n\\n6. Choose Omnichat in Channel Type\\n\\n7. In the Access Token field, paste your access token that was generated from the Omnichat inbox.\\n\\n8. Click Save to deploy your bot\\n\\n9. Few steps to the final ✨ A created channel will generate a webhook URL. Copy the webhook URL in the Platform to Omnichat.\\n\\n### Finalize Agent Bot in Omnichat\\n\\n1. Go back to Omnichat <a href=\\"https://kata-omnichat.kata.ai\\" target=\\"_blank\\">https://omnichat.kata.ai</a> and do login\\n\\n2. Go to menu: Settings > Integrations > Agent Bot. You will see this screen and information that you’re still in the first step to finalize\\n\\n<FigureImage\\n  caption={{ title: \'Figure 18.\', description: `Edit the agent bot to paste webhook URL from Kata Platform` }}\\n  src=\\"/assets/images/tutorials/ig-handover/image_18.webp\\"\\n  alt=\\"Simple Handover\\"\\n  naturalHeight={1078}\\n  naturalWidth={2048}\\n/>\\n\\n3. Click \\"Edit\\" button in the agent bot configuration\\n\\n4. A drawer will appear to fill in the Platform webhook URL. Paste your chatbot webhook URL\\n\\n5. Click Update and you will be redirected to agent bot list\\n\\n6. Lastly, turn on the toggle in Activate Agent Bot. Your chatbot is already connected to the Omnichat inbox and ready to use!\\n\\n## Update Instagram Bot to Use Ice Breaker\\n\\nIce Breaker is useful for first-time users can understand the available menu or topics in your Instagram bot. To use Ice Breaker, we need to create an Instagram inbox as a prerequisite. Learn more about [Ice Breaker](/channels/instagram-messaging/#sending-ice-breaker-reply).\\n\\nAlso, you need to successfully finish the Instagram bot until connect to agent bot Omnichat. Go back to the first step.\\n\\nBefore we jump to the tutorial, here is the general conversation flow for using Ice Breaker.\\n\\n<Table>\\n  <TableHead>\\n    <TableHeadRow>\\n      <TableHeadCell>Scenario Flow </TableHeadCell>\\n      <TableHeadCell>\\n        Details <br />\\n        (Each row represents 1 bubble message)\\n      </TableHeadCell>\\n      <TableHeadCell>Component Details </TableHeadCell>\\n    </TableHeadRow>\\n  </TableHead>\\n  <TableBody>\\n    <TableBodyRow>\\n      <TableBodyCell>\\n        First time end-users chat the brand\'s Instagram DM, then it will show Ice Breaker. Learn more about Ice Breaker.\\n        It will not show when using Instagram Story Mention or Instagram Story Reply.\\n      </TableBodyCell>\\n      <TableBodyCell>\\n        Show ice breaker\\n        <br />\\n        FAQ\\n        <br />\\n        Promo <br />\\n        Lokasi <br />\\n        Berbicara dengan CS\\n      </TableBodyCell>\\n      <TableBodyCell>-</TableBodyCell>\\n    </TableBodyRow>\\n  </TableBody>\\n</Table>\\n### Objective: Create Ice Breaker in your Instagram inbox\\n\\nFollow the tutorial on [how to set up Ice Breaker in Instagram Inbox](/tutorials/how-to-use-instagram-messaging-automation-in-your-project).\\n\\n### Objective: Create intent to trigger bot response if end-users click all Ice Breaker\\n\\n#### Create intent for FAQ menu\\n\\n1. Click the Intent tab which is placed next to the Conversation Flows sidebar.\\n\\n2. Click **Create Intent** button\\n\\n3. Fill in the intent as follows. This intent will trigger the FAQ state to show FAQ response when end-user click \\"FAQ\\" in Ice Breaker feature\\n\\n<FigureImage\\n  caption={{ title: \'Figure 19.\', description: `Edit the agent bot to paste webhook URL from Kata Platform` }}\\n  src=\\"/assets/images/tutorials/ig-handover/image_19.webp\\"\\n  alt=\\"Simple Handover\\"\\n  naturalHeight={1244}\\n  naturalWidth={1942}\\n/>\\n\\n4. Then, click **Create**.\\n\\n#### Create intent for Promo menu\\n\\n1. Click the Intent tab which is placed next to the Conversation Flows sidebar.\\n\\n2. Click **Create Intent** button\\n\\n3. Fill in the intent as follows. This intent will trigger the promo state to show promo response when end-user click \\"Promo\\" in Ice Breaker feature\\n\\n<FigureImage\\n  caption={{\\n    title: \'Figure 20.\',\\n    description: `Create intent for triggering Promo state when user click Ice Breaker with Promo item`,\\n  }}\\n  src=\\"/assets/images/tutorials/ig-handover/image_20.webp\\"\\n  alt=\\"Simple Handover\\"\\n  naturalHeight={1234}\\n  naturalWidth={1682}\\n/>\\n\\n4. Then, click **Create**.\\n\\n#### Create intent for \\"Lokasi\\" menu\\n\\n1. Click the Intent tab which is placed next to the Conversation Flows sidebar.\\n\\n2. Click **Create Intent** button\\n\\n3. Fill in the intent as follows. This intent will trigger the location state to show location response when end-user click \\"Lokasi`\\" in Ice Breaker feature\\n\\n<FigureImage\\n  caption={{\\n    title: \'Figure 21.\',\\n    description: `Create intent for triggering Lokasi state when user click Ice Breaker with Location item`,\\n  }}\\n  src=\\"/assets/images/tutorials/ig-handover/image_21.webp\\"\\n  alt=\\"Simple Handover\\"\\n  naturalHeight={782}\\n  naturalWidth={1622}\\n/>\\n\\n4. Then, click **Create**.\\n\\n#### Create intent for \\"Berbicara dengan CS\\" menu\\n\\n1. Click the Intent tab which is placed next to the Conversation Flows sidebar.\\n\\n2. Click **Create Intent** button\\n\\n3. Fill in the intent as follows. This intent will trigger the handover state to handover end-user to human agent when end-user click \\"Berbicara dengan CS\\" in Ice Breaker feature\\n\\n<FigureImage\\n  caption={{ title: \'Figure 22.\', description: `Create intent for triggering CS state item` }}\\n  src=\\"/assets/images/tutorials/ig-handover/image_22.webp\\"\\n  alt=\\"Simple Handover\\"\\n  naturalHeight={860}\\n  naturalWidth={1512}\\n/>\\n\\n4. Then, click **Create**.\\n\\n### Objective: Create transition for mapping bot responses after end-users clicked the Ice Breaker\\n\\n#### Connect \\"init\\" to “faqState” to trigger FAQ response after end-users clicked “FAQ” in Ice Breaker\\n\\n1. Pull transition line from \\"init\\" to “faqState”.\\n\\n2. Create transition drawer will show.\\n\\n3. Fill in condition as follow:\\n\\n```\\nintent == \\"faqIceBreaker\\"\\n```\\n\\n4. Click Create\\n\\n#### Connect \\"init\\" to “carouselState” to trigger generic template (“carousel”) response after end-users clicked “Promo” in Ice Breaker\\n\\n1. Pull transition line from \\"init\\" to “carouselState”.\\n\\n2. Create transition drawer will show.\\n\\n3. Fill in condition as follow:\\n\\n```\\nintent == \\"promoIceBreaker\\"\\n```\\n\\n4. Click Create\\n\\n#### Connect \\"init\\" to “carouselState” to trigger text response after end-users clicked “Lokasi” in Ice Breaker\\n\\n1. Pull transition line from \\"init\\" to “locationState”.\\n\\n2. Create transition drawer will show.\\n\\n3. Fill in condition as follow:\\n\\n```\\nintent == \\"locationIceBreaker\\"\\n```\\n\\n4. Click Create\\n\\n#### Connect \\"init\\" to “handoverState” to trigger handover to human agents after end-users clicked “Berbicara dengan CS” in Ice Breaker\\n\\n1. Pull transition line from \\"init\\" to “handoverState”.\\n\\n2. Create transition drawer will show.\\n\\n3. Fill in condition as follow:\\n\\n```\\nintent == \\"csIceBreaker\\"\\n```\\n\\n4. Click Create\\n\\n### Objective: Publish updated bot and deploy to Omnichat again\\n\\nFollow the tutorial to [finalize your bot](/tutorial/create-igdm-bot-handover-from-chatbot-to-agent/#finalize-your-new-bot).\\n","code":"var Component=(()=>{var N=Object.create;var h=Object.defineProperty;var v=Object.getOwnPropertyDescriptor;var y=Object.getOwnPropertyNames;var x=Object.getPrototypeOf,S=Object.prototype.hasOwnProperty;var f=t=>h(t,\\"__esModule\\",{value:!0});var I=(t,i)=>()=>(i||t((i={exports:{}}).exports,i),i.exports),j=(t,i)=>{for(var r in i)h(t,r,{get:i[r],enumerable:!0})},k=(t,i,r,n)=>{if(i&&typeof i==\\"object\\"||typeof i==\\"function\\")for(let l of y(i))!S.call(t,l)&&(r||l!==\\"default\\")&&h(t,l,{get:()=>i[l],enumerable:!(n=v(i,l))||n.enumerable});return t},T=(t,i)=>k(f(h(t!=null?N(x(t)):{},\\"default\\",!i&&t&&t.__esModule?{get:()=>t.default,enumerable:!0}:{value:t,enumerable:!0})),t),F=(t=>(i,r)=>t&&t.get(i)||(r=k(f({}),i,1),t&&t.set(i,r),r))(typeof WeakMap!=\\"undefined\\"?new WeakMap:0);var C=I((P,w)=>{w.exports=_jsx_runtime});var q={};j(q,{default:()=>H,frontmatter:()=>A});var e=T(C()),A={layout:\\"tutorial\\",id:\\"create-igdm-bot-handover-from-chatbot-to-agent\\",title:\\"Create Instagram Bot Handover from Chatbot to Agent Tutorial\\",imgSpot:\\"/assets/images/tutorials/spot-ig-handover.webp\\",product:\\"kata-platform\\",prev:\\"integration-chatbot-with-cms-studio\\",next:\\"create-simple-bot-handover-from-chatbot-to-agent\\",date:\\"2018-10-10T07:00:00+07:00\\"};function B(t={}){let{wrapper:i}=t.components||{};return i?(0,e.jsx)(i,Object.assign({},t,{children:(0,e.jsx)(r,{})})):r();function r(){let n=Object.assign({p:\\"p\\",a:\\"a\\",h2:\\"h2\\",span:\\"span\\",em:\\"em\\",h3:\\"h3\\",ol:\\"ol\\",li:\\"li\\",strong:\\"strong\\",h4:\\"h4\\",pre:\\"pre\\",code:\\"code\\"},t.components),{YoutubeEmbedWrapper:l,YoutubeEmbed:d,FigureImage:a,Table:m,TableHead:g,TableHeadRow:p,TableHeadCell:o,TableBody:u,TableBodyRow:b,TableBodyCell:s}=n;return a||c(\\"FigureImage\\",!0),m||c(\\"Table\\",!0),u||c(\\"TableBody\\",!0),s||c(\\"TableBodyCell\\",!0),b||c(\\"TableBodyRow\\",!0),g||c(\\"TableHead\\",!0),o||c(\\"TableHeadCell\\",!0),p||c(\\"TableHeadRow\\",!0),d||c(\\"YoutubeEmbed\\",!0),l||c(\\"YoutubeEmbedWrapper\\",!0),(0,e.jsxs)(e.Fragment,{children:[(0,e.jsxs)(n.p,{children:[\\"Kata Platform \\",(0,e.jsx)(\\"a\\",{href:\\"https://platform.kata.ai\\",target:\\"_blank\\",children:(0,e.jsx)(n.a,{href:\\"https://platform.kata.ai\\",children:\\"https://platform.kata.ai\\"})}),\\" is a platform to create chatbots and train them with Natural Language Processing (NLP). You can create any chatbots for any use-cases, such as FAQ, campaign, customer service, handover to human agents, and more.\\"]}),`\\n`,(0,e.jsxs)(n.p,{children:[\\"Currently, we\\\\u2019ve launched Instagram chatbot with various features, such as End-users can receive automated replies by creating an Instagram story that mentioned brand, receive automated replies by replying to brand Instagram story, receive bot responses in image, text, quick reply, ice breaker (for first-time users only) and generic template (similar with a carousel in other messaging platforms). Learn more about \\",(0,e.jsx)(n.a,{href:\\"/tutorials/how-to-use-instagram-messaging-automation-in-your-project\\",children:\\"Instagram DM Automation\\"}),\\".\\"]}),`\\n`,(0,e.jsxs)(n.p,{children:[`In this tutorial, we will create an Instagram chatbot that is able to send conversations to human agents, also known as \\"Agent Handover\'\'. We will use the Kata Omnichat dashboard to connect chatbots with human agents. Learn more about `,(0,e.jsx)(n.a,{href:\\"/kata-omnichat/introduction/what-is-kata-omnichat\\",children:\\"Omnichat\\"}),\\".\\"]}),`\\n`,(0,e.jsx)(l,{children:(0,e.jsx)(d,{id:\\"dAHnoTX4BUE\\",params:\\"v=dAHnoTX4BUE\\",title:\\"Create Instagram Bot Handover from Chatbot to Agent Tutorial\\"})}),`\\n`,(0,e.jsxs)(n.h2,{id:\\"chatbot-flow\\",children:[(0,e.jsx)(n.a,{className:\\"anchor\\",href:\\"#chatbot-flow\\",children:(0,e.jsx)(n.span,{className:\\"icon icon-link\\"})}),\\"Chatbot Flow\\"]}),`\\n`,(0,e.jsxs)(n.p,{children:[\\"Before we jump into the tutorial, let\\\\u2019s see the scenario for the conversation. We will create a chatbot using \\",(0,e.jsx)(n.em,{children:\\"keywords\\"}),\\".\\"]}),`\\n`,(0,e.jsxs)(n.h3,{id:\\"conversation-flow-table\\",children:[(0,e.jsx)(n.a,{className:\\"anchor\\",href:\\"#conversation-flow-table\\",children:(0,e.jsx)(n.span,{className:\\"icon icon-link\\"})}),\\"Conversation Flow Table\\"]}),`\\n`,(0,e.jsxs)(n.p,{children:[\\"Conversation flow table details can be seen \\",(0,e.jsx)(\\"a\\",{href:\\"https://drive.google.com/file/d/1rh5XvmGvbNyXZetG6v-tjAr8LvXjU-aj/view\\",target:\\"_blank\\",children:\\"here\\"})]}),`\\n`,(0,e.jsxs)(n.h2,{id:\\"create-project\\",children:[(0,e.jsx)(n.a,{className:\\"anchor\\",href:\\"#create-project\\",children:(0,e.jsx)(n.span,{className:\\"icon icon-link\\"})}),\\"Create Project\\"]}),`\\n`,(0,e.jsxs)(n.h3,{id:\\"objective-register-your-new-account-and-login-to-the-platform\\",children:[(0,e.jsx)(n.a,{className:\\"anchor\\",href:\\"#objective-register-your-new-account-and-login-to-the-platform\\",children:(0,e.jsx)(n.span,{className:\\"icon icon-link\\"})}),\\"Objective: Register your new account and login to the Platform\\"]}),`\\n`,(0,e.jsxs)(n.ol,{children:[`\\n`,(0,e.jsxs)(n.li,{children:[`\\n`,(0,e.jsxs)(n.p,{children:[\\"Go to \\",(0,e.jsx)(\\"a\\",{href:\\"https://platform.kata.ai\\",target:\\"_blank\\",children:(0,e.jsx)(n.a,{href:\\"https://platform.kata.ai\\",children:\\"https://platform.kata.ai\\"})}),\\" and click \\",(0,e.jsx)(n.strong,{children:\\"Sign Up\\"}),\\" to create new account\\"]}),`\\n`]}),`\\n`,(0,e.jsxs)(n.li,{children:[`\\n`,(0,e.jsxs)(n.p,{children:[\\"Input required fields in sign up page: \\",(0,e.jsx)(n.strong,{children:\\"Username, email address, role and captcha\\"})]}),`\\n`]}),`\\n`,(0,e.jsxs)(n.li,{children:[`\\n`,(0,e.jsx)(n.p,{children:\\"Go to your registered email inbox. You will receive an email to verify your account and input your password\\"}),`\\n`]}),`\\n`,(0,e.jsxs)(n.li,{children:[`\\n`,(0,e.jsxs)(n.p,{children:[\\"When you click the \\",(0,e.jsx)(n.strong,{children:\\"Confirm Email\\"}),\\" button in the verification email, you will be redirected to set up a password. Insert your password and confirm the password.\\"]}),`\\n`]}),`\\n`,(0,e.jsxs)(n.li,{children:[`\\n`,(0,e.jsxs)(n.p,{children:[\\"You will be redirected to the Login \\",(0,e.jsx)(n.strong,{children:\\"Page\\"}),\\". Input your username and password to continue.\\"]}),`\\n`]}),`\\n`]}),`\\n`,(0,e.jsxs)(n.h3,{id:\\"objective-create-new-chatbot-project\\",children:[(0,e.jsx)(n.a,{className:\\"anchor\\",href:\\"#objective-create-new-chatbot-project\\",children:(0,e.jsx)(n.span,{className:\\"icon icon-link\\"})}),\\"Objective: Create new chatbot project\\"]}),`\\n`,(0,e.jsxs)(n.h4,{id:\\"login-to-kata-platform-and-create-a-project\\",children:[(0,e.jsx)(n.a,{className:\\"anchor\\",href:\\"#login-to-kata-platform-and-create-a-project\\",children:(0,e.jsx)(n.span,{className:\\"icon icon-link\\"})}),\\"Login to Kata Platform and create a project\\"]}),`\\n`,(0,e.jsxs)(n.ol,{children:[`\\n`,(0,e.jsxs)(n.li,{children:[`\\n`,(0,e.jsxs)(n.p,{children:[\\"Open your browser, then open the URL \\",(0,e.jsx)(\\"a\\",{href:\\"https://platform.kata.ai/login\\",target:\\"_blank\\",children:(0,e.jsx)(n.a,{href:\\"https://platform.kata.ai/login\\",children:\\"https://platform.kata.ai/login\\"})}),\\" and enter your username & password.\\"]}),`\\n`]}),`\\n`,(0,e.jsxs)(n.li,{children:[`\\n`,(0,e.jsxs)(n.p,{children:[\\"Click \\",(0,e.jsx)(n.strong,{children:\'\\"Login\\"\'}),\\" to continue.\\"]}),`\\n`]}),`\\n`,(0,e.jsxs)(n.li,{children:[`\\n`,(0,e.jsxs)(n.p,{children:[\\"Click on \\",(0,e.jsx)(n.strong,{children:\'\\"Create Project\\"\'}),\\" and fill in the form. Each project contains one bot design, one NL, and one CMS.\\"]}),`\\n`]}),`\\n`]}),`\\n`,(0,e.jsxs)(n.h2,{id:\\"create-handover-flow\\",children:[(0,e.jsx)(n.a,{className:\\"anchor\\",href:\\"#create-handover-flow\\",children:(0,e.jsx)(n.span,{className:\\"icon icon-link\\"})}),\\"Create Handover Flow\\"]}),`\\n`,(0,e.jsxs)(n.h3,{id:\\"objective-define-a-flow\\",children:[(0,e.jsx)(n.a,{className:\\"anchor\\",href:\\"#objective-define-a-flow\\",children:(0,e.jsx)(n.span,{className:\\"icon icon-link\\"})}),\\"Objective: Define a flow\\"]}),`\\n`,(0,e.jsxs)(n.h4,{id:\\"create-a-flow-name-handover-we-will-use-1-flow-for-this-simple-bot\\",children:[(0,e.jsx)(n.a,{className:\\"anchor\\",href:\\"#create-a-flow-name-handover-we-will-use-1-flow-for-this-simple-bot\\",children:(0,e.jsx)(n.span,{className:\\"icon icon-link\\"})}),\'Create a flow name \\"handover\\". We will use 1 flow for this simple bot\']}),`\\n`,(0,e.jsxs)(n.ol,{children:[`\\n`,(0,e.jsxs)(n.li,{children:[`\\n`,(0,e.jsxs)(n.p,{children:[\\"Click \\",(0,e.jsx)(n.strong,{children:\'\\"Create Flow\\"\'}),\\" button on the Conversation Flow screen\\"]}),`\\n`]}),`\\n`,(0,e.jsxs)(n.li,{children:[`\\n`,(0,e.jsxs)(n.p,{children:[\'Create flow \\"handover\\", other fields are left blank. Then, click \',(0,e.jsx)(n.strong,{children:\\"Create\\"}),\\".\\"]}),`\\n`]}),`\\n`]}),`\\n`,(0,e.jsxs)(n.h4,{id:\\"create-init-state\\",children:[(0,e.jsx)(n.a,{className:\\"anchor\\",href:\\"#create-init-state\\",children:(0,e.jsx)(n.span,{className:\\"icon icon-link\\"})}),\'Create \\"init\\" state\']}),`\\n`,(0,e.jsxs)(n.ol,{children:[`\\n`,(0,e.jsxs)(n.li,{children:[`\\n`,(0,e.jsxs)(n.p,{children:[\\"Click \\",(0,e.jsx)(n.strong,{children:\'\\"+\\"\'}),\\" icon in the bottom right to create a new state\\"]}),`\\n`]}),`\\n`,(0,e.jsxs)(n.li,{children:[`\\n`,(0,e.jsxs)(n.p,{children:[\'Create state \\"init\\" and click the toggle to turn on \\\\u201CInitial State\\\\u201D and other fields are left blank. Then, click \',(0,e.jsx)(n.strong,{children:\\"Create\\"}),\\".\\"]}),`\\n`]}),`\\n`]}),`\\n`,(0,e.jsxs)(n.h2,{id:\\"create-greetings-state-to-respond-end-users-who-greet-bot-via-direct-message\\",children:[(0,e.jsx)(n.a,{className:\\"anchor\\",href:\\"#create-greetings-state-to-respond-end-users-who-greet-bot-via-direct-message\\",children:(0,e.jsx)(n.span,{className:\\"icon icon-link\\"})}),\\"Create Greetings State to Respond End-User\\\\u2019s who Greet Bot via Direct Message\\"]}),`\\n`,(0,e.jsxs)(n.p,{children:[\\"In this part, we are going to create a greeting flow to respond to end-users who greet the brand\'s bot via direct message, \\",(0,e.jsx)(n.strong,{children:\\"but\\"}),\\" \\",(0,e.jsx)(n.strong,{children:\\"not\\"}),\' via Ice Breaker. For example, the end-user says \\"hi\\" to the bot and does not want to choose via Ice Breaker. Learn more about \',(0,e.jsx)(n.a,{href:\\"/kata-omnichat/manage-inbox-settings/set-up-ice-breaker\\",children:\\"Ice Breaker\\"}),\\".\\"]}),`\\n`,(0,e.jsxs)(n.h3,{id:\\"objective-create-greetings-state-to-define-how-to-respond\\",children:[(0,e.jsx)(n.a,{className:\\"anchor\\",href:\\"#objective-create-greetings-state-to-define-how-to-respond\\",children:(0,e.jsx)(n.span,{className:\\"icon icon-link\\"})}),\\"Objective: Create greetings state to define how to respond\\"]}),`\\n`,(0,e.jsxs)(n.h4,{id:\\"create-greetingsstate-as-bot-response-to-show-keywords-menu\\",children:[(0,e.jsx)(n.a,{className:\\"anchor\\",href:\\"#create-greetingsstate-as-bot-response-to-show-keywords-menu\\",children:(0,e.jsx)(n.span,{className:\\"icon icon-link\\"})}),\'Create \\"greetingsState\\" as bot response to show keywords menu\']}),`\\n`,(0,e.jsxs)(n.ol,{children:[`\\n`,(0,e.jsxs)(n.li,{children:[`\\n`,(0,e.jsxs)(n.p,{children:[\\"Create another state by clicking the \\",(0,e.jsx)(n.strong,{children:\'\\"+\\"\'}),\\" icon in the bottom right to create a new state named \\\\u201CgreetingsState\\\\u201D\\"]}),`\\n`]}),`\\n`,(0,e.jsxs)(n.li,{children:[`\\n`,(0,e.jsxs)(n.p,{children:[\\"Click \\",(0,e.jsx)(n.strong,{children:\'\\"Add action\\"\'}),\\", then click \\",(0,e.jsx)(n.strong,{children:\\"\\\\u201C+\\\\u201D\\"}),\\" in the action box to create a new action\\"]}),`\\n`]}),`\\n`,(0,e.jsxs)(n.li,{children:[`\\n`,(0,e.jsx)(n.p,{children:\'When all actions available are shown, then choose \\"Text\\"\'}),`\\n`]}),`\\n`,(0,e.jsxs)(n.li,{children:[`\\n`,(0,e.jsx)(n.p,{children:\'Input action name \\"greetingsText\\"\'}),`\\n`]}),`\\n`,(0,e.jsxs)(n.li,{children:[`\\n`,(0,e.jsxs)(n.p,{children:[\\"Next, click the \\",(0,e.jsx)(n.strong,{children:\\"Add Variant\\"}),\\" button to fill in with this text:\\"]}),`\\n`]}),`\\n`]}),`\\n`,(0,e.jsx)(n.pre,{children:(0,e.jsx)(n.code,{className:\\"code-highlight\\",children:(0,e.jsx)(n.span,{className:\\"code-line\\",children:`Halo, selamat datang di layanan CS Bank ABC \\\\u{1F60A} \\\\\\\\n\\\\\\\\nUntuk memulai, pilih menu yang tersedia: \\\\\\\\n\\\\\\\\nKetik \\"1\\" untuk melihat FAQ \\\\\\\\nKetik \\\\u201C2\\\\u201D untuk melihat promo yang tersedia \\\\\\\\nKetik \\\\u201C3\\\\u201D untuk melihat lokasi Bank ABC \\\\\\\\nKetik \\\\u201C4\\\\u201D untuk berbicara dengan CS Bank ABC \\\\\\\\n\\\\\\\\n\\\\u{1F4A1} Cukup ketik angka pilihannya, ya\\n`})})}),`\\n`,(0,e.jsxs)(n.ol,{start:\\"6\\",children:[`\\n`,(0,e.jsxs)(n.li,{children:[\\"Click \\",(0,e.jsx)(n.strong,{children:\\"Create Action\\"})]}),`\\n`]}),`\\n`,(0,e.jsxs)(n.h4,{id:\\"set-the-state-into-self-transition\\",children:[(0,e.jsx)(n.a,{className:\\"anchor\\",href:\\"#set-the-state-into-self-transition\\",children:(0,e.jsx)(n.span,{className:\\"icon icon-link\\"})}),\\"Set the state into self-transition\\"]}),`\\n`,(0,e.jsx)(n.p,{children:\\"The self-transition will make the actions under state will be repeatedly shown if end-users give an incorrect answer\\"}),`\\n`,(0,e.jsxs)(n.ol,{children:[`\\n`,(0,e.jsxs)(n.li,{children:[`\\n`,(0,e.jsxs)(n.p,{children:[\\"Go to tab \\",(0,e.jsx)(n.strong,{children:\\"Transitions\\"})]}),`\\n`]}),`\\n`,(0,e.jsxs)(n.li,{children:[`\\n`,(0,e.jsx)(n.p,{children:\\"Turn on on the Self Transition toggle\\"}),`\\n`]}),`\\n`,(0,e.jsxs)(n.li,{children:[`\\n`,(0,e.jsx)(n.p,{children:\\"Then, click Create to finalize the state\\"}),`\\n`]}),`\\n`]}),`\\n`,(0,e.jsxs)(n.h3,{id:\\"objective-catch-end-users-messages-when-greeting-the-bot\\",children:[(0,e.jsx)(n.a,{className:\\"anchor\\",href:\\"#objective-catch-end-users-messages-when-greeting-the-bot\\",children:(0,e.jsx)(n.span,{className:\\"icon icon-link\\"})}),\\"Objective: Catch end-users messages when greeting the bot\\"]}),`\\n`,(0,e.jsxs)(n.h4,{id:\\"create-greetings-keywords-to-build-understanding-in-chatbots-when-end-users-greet-the-bot-we-will-use-the-nlus-feature-to-create-the-keywords\\",children:[(0,e.jsx)(n.a,{className:\\"anchor\\",href:\\"#create-greetings-keywords-to-build-understanding-in-chatbots-when-end-users-greet-the-bot-we-will-use-the-nlus-feature-to-create-the-keywords\\",children:(0,e.jsx)(n.span,{className:\\"icon icon-link\\"})}),\'Create \\"greetings\\" keywords to build understanding in chatbots when end-users greet the bot. We will use the NLUs feature to create the keywords.\']}),`\\n`,(0,e.jsxs)(n.ol,{children:[`\\n`,(0,e.jsxs)(n.li,{children:[`\\n`,(0,e.jsxs)(n.p,{children:[\\"Go to the menu \\",(0,e.jsx)(n.strong,{children:\'\\"NLUs\\"\'}),\\" which is placed under the \\\\u201CConversation Flows\\\\u201D menu. Your screen will be switched to create NLUs\\"]}),`\\n`]}),`\\n`,(0,e.jsxs)(n.li,{children:[`\\n`,(0,e.jsxs)(n.p,{children:[\\"Click \\",(0,e.jsx)(n.strong,{children:\\"Create NLU\\"})]}),`\\n`]}),`\\n`,(0,e.jsxs)(n.li,{children:[`\\n`,(0,e.jsx)(n.p,{children:\\"Then, fill in the fields as follow\\"}),`\\n`]}),`\\n`]}),`\\n`,(0,e.jsx)(n.pre,{children:(0,e.jsxs)(n.code,{className:\\"code-highlight\\",children:[(0,e.jsx)(n.span,{className:\\"code-line\\",children:`NLU Name: greetings\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`NLU Type: Keyword\\n`})]})}),`\\n`,(0,e.jsxs)(n.ol,{start:\\"4\\",children:[`\\n`,(0,e.jsxs)(n.li,{children:[\\"Next, click \\",(0,e.jsx)(n.strong,{children:\'\\"Add Keyword\\"\'}),\\" to define any words to trigger the bot. Fill in the main keyword as follow\\"]}),`\\n`]}),`\\n`,(0,e.jsx)(n.pre,{children:(0,e.jsx)(n.code,{className:\\"code-highlight\\",children:(0,e.jsx)(n.span,{className:\\"code-line\\",children:`Main keyword: greetings\\n`})})}),`\\n`,(0,e.jsxs)(n.ol,{start:\\"5\\",children:[`\\n`,(0,e.jsx)(n.li,{children:\'Add a new word by pressing \\"enter\\" on your keyboard. Every time you write a new word, press \\\\u201Center\\\\u201D on your keyboard to save words. Add these words\'}),`\\n`]}),`\\n`,(0,e.jsx)(a,{caption:{title:\\"Figure 1.\\",description:\'Create \\"greetings\\" keyword\'},src:\\"/assets/images/tutorials/ig-handover/image_1.webp\\",alt:\\"Simple Handover\\",naturalHeight:838,naturalWidth:1828}),`\\n`,(0,e.jsxs)(n.ol,{start:\\"6\\",children:[`\\n`,(0,e.jsxs)(n.li,{children:[\\"Click \\",(0,e.jsx)(n.strong,{children:\'\\"Create\\"\'}),\\" to save the NLUs\\"]}),`\\n`]}),`\\n`,(0,e.jsxs)(n.h4,{id:\\"create-greetingsintent-intent-to-catch-users-input\\",children:[(0,e.jsx)(n.a,{className:\\"anchor\\",href:\\"#create-greetingsintent-intent-to-catch-users-input\\",children:(0,e.jsx)(n.span,{className:\\"icon icon-link\\"})}),\'Create \\"greetingsIntent\\" intent to catch user\\\\u2019s input\']}),`\\n`,(0,e.jsxs)(n.ol,{children:[`\\n`,(0,e.jsxs)(n.li,{children:[`\\n`,(0,e.jsx)(n.p,{children:\\"Click the Intent tab which is placed next to the Conversation Flows sidebar.\\"}),`\\n`]}),`\\n`,(0,e.jsxs)(n.li,{children:[`\\n`,(0,e.jsxs)(n.p,{children:[\\"Click \\",(0,e.jsx)(n.strong,{children:\\"Create Intent\\"}),\\" button\\"]}),`\\n`]}),`\\n`,(0,e.jsxs)(n.li,{children:[`\\n`,(0,e.jsx)(n.p,{children:\'Fill in the intent as follows. The choice of \\"Intent type\\" is text, which means it will catch incoming messages with text only. We also set up the intent into \\\\u201CAs Initial\\\\u201D, which means the intent will be executed for the first time. On classifier, use \\\\u201Cgreetings\\\\u201D NLUs that we\\\\u2019ve created in the previous step to connect the intent with creating keywords for greetings.\'}),`\\n`]}),`\\n`]}),`\\n`,(0,e.jsx)(a,{caption:{title:\\"Figure 2.\\",description:\\"Create intent and create mapping with greetings keyword\\"},src:\\"/assets/images/tutorials/ig-handover/image_2.webp\\",alt:\\"Simple Handover\\",naturalHeight:1162,naturalWidth:1888}),`\\n`,(0,e.jsxs)(n.h3,{id:\\"objective-connect-init-and-greetingsstate-states-by-creating-a-transition\\",children:[(0,e.jsx)(n.a,{className:\\"anchor\\",href:\\"#objective-connect-init-and-greetingsstate-states-by-creating-a-transition\\",children:(0,e.jsx)(n.span,{className:\\"icon icon-link\\"})}),\'Objective: Connect \\"init\\" and \\\\u201CgreetingsState\\\\u201D states by creating a transition\']}),`\\n`,(0,e.jsxs)(n.h4,{id:\\"create-a-transition-to-connect-init-and-greetingsstate-states-the-transition-will-define-in-which-condition-the-greetings-state-including-the-actions-state-will-be-executed\\",children:[(0,e.jsx)(n.a,{className:\\"anchor\\",href:\\"#create-a-transition-to-connect-init-and-greetingsstate-states-the-transition-will-define-in-which-condition-the-greetings-state-including-the-actions-state-will-be-executed\\",children:(0,e.jsx)(n.span,{className:\\"icon icon-link\\"})}),\'Create a transition to connect \\"init\\" and \\\\u201CgreetingsState\\\\u201D states. The transition will define in which condition the greetings state, including the actions\\\\u2019 state, will be executed.\']}),`\\n`,(0,e.jsxs)(n.ol,{children:[`\\n`,(0,e.jsxs)(n.li,{children:[`\\n`,(0,e.jsxs)(n.p,{children:[\'Pull a line from the \\"init\\" state and drag it to the \\\\u201CgreetingsState\\\\u201D state. If you succeed, then it will show a \',(0,e.jsx)(n.strong,{children:\\"Create Transition\\"}),\\" drawer\\"]}),`\\n`]}),`\\n`,(0,e.jsxs)(n.li,{children:[`\\n`,(0,e.jsx)(n.p,{children:\\"Fill in the transition condition as follow\\"}),`\\n`]}),`\\n`]}),`\\n`,(0,e.jsx)(n.pre,{children:(0,e.jsx)(n.code,{className:\\"code-highlight\\",children:(0,e.jsx)(n.span,{className:\\"code-line\\",children:`intent == \\"greetingsIntent\\"\\n`})})}),`\\n`,(0,e.jsxs)(n.ol,{start:\\"3\\",children:[`\\n`,(0,e.jsxs)(n.li,{children:[\\"Click \\",(0,e.jsx)(n.strong,{children:\'\\"Create Transition\\"\'})]}),`\\n`]}),`\\n`,(0,e.jsxs)(n.h2,{id:\\"create-greetings-state-to-respond-end-users-who-greet-bot-via-instagram-story-mention\\",children:[(0,e.jsx)(n.a,{className:\\"anchor\\",href:\\"#create-greetings-state-to-respond-end-users-who-greet-bot-via-instagram-story-mention\\",children:(0,e.jsx)(n.span,{className:\\"icon icon-link\\"})}),\\"Create Greetings State to Respond End-User\\\\u2019s who Greet Bot via Instagram Story Mention\\"]}),`\\n`,(0,e.jsxs)(n.p,{children:[\\"In this part, we are going to create a greeting flow to respond to end-users who mentioned the brand\\\\u2019s Instagram account in the end-users Instagram Stories. End-user will receive an automatic message in a direct message. Learn more about \\",(0,e.jsx)(n.a,{href:\\"/tutorials/how-to-use-instagram-messaging-automation-in-your-project\\",children:\\"Instagram Story Mention\\"}),\\".\\"]}),`\\n`,(0,e.jsxs)(n.h3,{id:\\"objective-catch-end-users-who-mentioned-the-brands-in-the-end-users-instagram-story\\",children:[(0,e.jsx)(n.a,{className:\\"anchor\\",href:\\"#objective-catch-end-users-who-mentioned-the-brands-in-the-end-users-instagram-story\\",children:(0,e.jsx)(n.span,{className:\\"icon icon-link\\"})}),\\"Objective: Catch end-users who mentioned the brand\\\\u2019s in the end-users Instagram Story\\"]}),`\\n`,(0,e.jsxs)(n.h4,{id:\\"create-igmentionedintent-intent-to-catch-users-input\\",children:[(0,e.jsx)(n.a,{className:\\"anchor\\",href:\\"#create-igmentionedintent-intent-to-catch-users-input\\",children:(0,e.jsx)(n.span,{className:\\"icon icon-link\\"})}),\'Create \\"igMentionedIntent\\" intent to catch user\\\\u2019s input\']}),`\\n`,(0,e.jsxs)(n.ol,{children:[`\\n`,(0,e.jsxs)(n.li,{children:[`\\n`,(0,e.jsx)(n.p,{children:\\"Click the Intent tab which is placed next to the Conversation Flows sidebar.\\"}),`\\n`]}),`\\n`,(0,e.jsxs)(n.li,{children:[`\\n`,(0,e.jsxs)(n.p,{children:[\\"Click \\",(0,e.jsx)(n.strong,{children:\\"Create Intent\\"}),\\" button\\"]}),`\\n`]}),`\\n`,(0,e.jsxs)(n.li,{children:[`\\n`,(0,e.jsx)(n.p,{children:\'Fill in the intent as follows. We set up the intent into \\"As Initial\\", which means the intent will be executed for the first time. Choose intent type into data, because we will use a payload named story_mention.\'}),`\\n`]}),`\\n`]}),`\\n`,(0,e.jsx)(a,{caption:{title:\\"Figure 3.\\",description:\\"Create intent for Instagram Story Mention feature\\"},src:\\"/assets/images/tutorials/ig-handover/image_3.webp\\",alt:\\"Simple Handover\\",naturalHeight:991,naturalWidth:2048}),`\\n`,(0,e.jsxs)(n.ol,{start:\\"4\\",children:[`\\n`,(0,e.jsxs)(n.li,{children:[\\"Then, click \\",(0,e.jsx)(n.strong,{children:\\"Create\\"}),\\".\\"]}),`\\n`]}),`\\n`,(0,e.jsxs)(n.h3,{id:\\"objective-create-greetings-state-to-define-how-to-respond-1\\",children:[(0,e.jsx)(n.a,{className:\\"anchor\\",href:\\"#objective-create-greetings-state-to-define-how-to-respond-1\\",children:(0,e.jsx)(n.span,{className:\\"icon icon-link\\"})}),\\"Objective: Create greetings state to define how to respond\\"]}),`\\n`,(0,e.jsxs)(n.h4,{id:\\"create-igmentionedstate-as-bot-response-to-show-keywords-menu\\",children:[(0,e.jsx)(n.a,{className:\\"anchor\\",href:\\"#create-igmentionedstate-as-bot-response-to-show-keywords-menu\\",children:(0,e.jsx)(n.span,{className:\\"icon icon-link\\"})}),\'Create \\"igMentionedState\\" as bot response to show keywords menu\']}),`\\n`,(0,e.jsxs)(n.ol,{children:[`\\n`,(0,e.jsxs)(n.li,{children:[`\\n`,(0,e.jsxs)(n.p,{children:[\\"Create another state by clicking the \\",(0,e.jsx)(n.strong,{children:\'\\"+\\"\'}),\\" icon in the bottom right to create a new state named \\\\u201C\\",(0,e.jsx)(n.em,{children:\\"igMentionedState\\"}),\\"\\\\u201D\\"]}),`\\n`]}),`\\n`,(0,e.jsxs)(n.li,{children:[`\\n`,(0,e.jsxs)(n.p,{children:[\\"Click \\",(0,e.jsx)(n.strong,{children:\'\\"Add action\\"\'}),\\", then click \\",(0,e.jsx)(n.strong,{children:\\"\\\\u201C+\\\\u201D\\"}),\\" in the action box to create a new action\\"]}),`\\n`]}),`\\n`,(0,e.jsxs)(n.li,{children:[`\\n`,(0,e.jsx)(n.p,{children:\'When all actions available are shown, then choose \\"Text\\"\'}),`\\n`]}),`\\n`,(0,e.jsxs)(n.li,{children:[`\\n`,(0,e.jsx)(n.p,{children:\'Input action name \\"igMentionedText\\"\'}),`\\n`]}),`\\n`,(0,e.jsxs)(n.li,{children:[`\\n`,(0,e.jsxs)(n.p,{children:[\\"Next, click the \\",(0,e.jsx)(n.strong,{children:\\"Add Variant\\"}),\\" button to fill in with this text:\\"]}),`\\n`]}),`\\n`]}),`\\n`,(0,e.jsx)(n.pre,{children:(0,e.jsx)(n.code,{className:\\"code-highlight\\",children:(0,e.jsx)(n.span,{className:\\"code-line\\",children:`Halo, terima kasih telah menyapa Bank ABC di Instagram Story Anda \\\\u{1F60A} \\\\\\\\n\\\\\\\\nUntuk memulai, pilih menu yang tersedia: \\\\\\\\n\\\\\\\\nKetik \\"1\\" untuk melihat FAQ \\\\\\\\nKetik \\\\u201C2\\\\u201D untuk melihat promo yang tersedia \\\\\\\\nKetik \\\\u201C3\\\\u201D untuk melihat lokasi Bank ABC \\\\\\\\nKetik \\\\u201C4\\\\u201D untuk berbicara dengan CS Bank ABC \\\\\\\\n\\\\\\\\n\\\\u{1F4A1} Cukup ketik angka pilihannya, ya\\n`})})}),`\\n`,(0,e.jsxs)(n.ol,{start:\\"6\\",children:[`\\n`,(0,e.jsxs)(n.li,{children:[\\"Click \\",(0,e.jsx)(n.strong,{children:\\"Create Action\\"})]}),`\\n`]}),`\\n`,(0,e.jsxs)(n.h4,{id:\\"set-the-state-into-self-transition-1\\",children:[(0,e.jsx)(n.a,{className:\\"anchor\\",href:\\"#set-the-state-into-self-transition-1\\",children:(0,e.jsx)(n.span,{className:\\"icon icon-link\\"})}),\\"Set the state into self-transition\\"]}),`\\n`,(0,e.jsx)(n.p,{children:\\"The self-transition will make the actions under state will be repeatedly shown if end-users give an incorrect answer\\"}),`\\n`,(0,e.jsxs)(n.ol,{children:[`\\n`,(0,e.jsxs)(n.li,{children:[`\\n`,(0,e.jsxs)(n.p,{children:[\\"Go to tab \\",(0,e.jsx)(n.strong,{children:\\"Transitions\\"})]}),`\\n`]}),`\\n`,(0,e.jsxs)(n.li,{children:[`\\n`,(0,e.jsx)(n.p,{children:\\"Turn on on the Self Transition toggle\\"}),`\\n`]}),`\\n`,(0,e.jsxs)(n.li,{children:[`\\n`,(0,e.jsx)(n.p,{children:\\"Then, click Create to finalize the state\\"}),`\\n`]}),`\\n`]}),`\\n`,(0,e.jsxs)(n.h3,{id:\\"objective-connect-init-and-igmentionedstate-states-by-creating-a-transition\\",children:[(0,e.jsx)(n.a,{className:\\"anchor\\",href:\\"#objective-connect-init-and-igmentionedstate-states-by-creating-a-transition\\",children:(0,e.jsx)(n.span,{className:\\"icon icon-link\\"})}),\'Objective: Connect \\"init\\" and \\\\u201CigMentionedState\\\\u201D states by creating a transition\']}),`\\n`,(0,e.jsxs)(n.h4,{id:\\"create-a-transition-to-connect-init-and-igmentionedstate-states-the-transition-will-define-in-which-condition-the-greetings-state-including-the-actions-state-will-be-executed\\",children:[(0,e.jsx)(n.a,{className:\\"anchor\\",href:\\"#create-a-transition-to-connect-init-and-igmentionedstate-states-the-transition-will-define-in-which-condition-the-greetings-state-including-the-actions-state-will-be-executed\\",children:(0,e.jsx)(n.span,{className:\\"icon icon-link\\"})}),\'Create a transition to connect \\"init\\" and \\\\u201CigMentionedState\\\\u201D states. The transition will define in which condition the greetings state, including the actions\\\\u2019 state, will be executed.\']}),`\\n`,(0,e.jsxs)(n.ol,{children:[`\\n`,(0,e.jsxs)(n.li,{children:[`\\n`,(0,e.jsxs)(n.p,{children:[\'Pull a line from the \\"init\\" state and drag it to the \\\\u201Cgreetings\\\\u201D state. If you succeed, then it will show a \',(0,e.jsx)(n.strong,{children:\\"Create Transition\\"}),\\" drawer\\"]}),`\\n`]}),`\\n`,(0,e.jsxs)(n.li,{children:[`\\n`,(0,e.jsx)(n.p,{children:\\"Fill in the transition as follow\\"}),`\\n`]}),`\\n`]}),`\\n`,(0,e.jsx)(a,{caption:{title:\\"Figure 4.\\",description:\'Create transition and define which intent to trigger the next state \\"igMentionedState\\"\'},src:\\"/assets/images/tutorials/ig-handover/image_4.webp\\",alt:\\"Simple Handover\\",naturalHeight:898,naturalWidth:1800}),`\\n`,(0,e.jsxs)(n.ol,{start:\\"3\\",children:[`\\n`,(0,e.jsxs)(n.li,{children:[\\"Click \\",(0,e.jsx)(n.strong,{children:\'\\"Create Transition\\"\'})]}),`\\n`]}),`\\n`,(0,e.jsxs)(n.h2,{id:\\"create-greetings-state-to-respond-end-users-who-greet-bot-via-instagram-story-reply\\",children:[(0,e.jsx)(n.a,{className:\\"anchor\\",href:\\"#create-greetings-state-to-respond-end-users-who-greet-bot-via-instagram-story-reply\\",children:(0,e.jsx)(n.span,{className:\\"icon icon-link\\"})}),\\"Create Greetings State to Respond End-User\\\\u2019s who Greet Bot via Instagram Story Reply\\"]}),`\\n`,(0,e.jsxs)(n.p,{children:[\\"In this part, we are going to create a greeting flow to respond to end-users who reply to the brand\'s Instagram Story. Learn more about \\",(0,e.jsx)(n.a,{href:\\"/tutorials/how-to-use-instagram-messaging-automation-in-your-project\\",children:\\"Instagram Story Reply\\"}),\\".\\"]}),`\\n`,(0,e.jsxs)(n.h3,{id:\\"objective-catch-end-users-who-reply-to-the-brands-instagram-story\\",children:[(0,e.jsx)(n.a,{className:\\"anchor\\",href:\\"#objective-catch-end-users-who-reply-to-the-brands-instagram-story\\",children:(0,e.jsx)(n.span,{className:\\"icon icon-link\\"})}),\\"Objective: Catch end-users who reply to the brand\\\\u2019s Instagram Story\\"]}),`\\n`,(0,e.jsxs)(n.h4,{id:\\"create-replystoryintent-intent-to-catch-users-input\\",children:[(0,e.jsx)(n.a,{className:\\"anchor\\",href:\\"#create-replystoryintent-intent-to-catch-users-input\\",children:(0,e.jsx)(n.span,{className:\\"icon icon-link\\"})}),\'Create \\"replyStoryIntent\\" intent to catch user\\\\u2019s input\']}),`\\n`,(0,e.jsxs)(n.ol,{children:[`\\n`,(0,e.jsxs)(n.li,{children:[`\\n`,(0,e.jsx)(n.p,{children:\\"Click the Intent tab which is placed next to the Conversation Flows sidebar.\\"}),`\\n`]}),`\\n`,(0,e.jsxs)(n.li,{children:[`\\n`,(0,e.jsxs)(n.p,{children:[\\"Click \\",(0,e.jsx)(n.strong,{children:\\"Create Intent\\"}),\\" button\\"]}),`\\n`]}),`\\n`,(0,e.jsxs)(n.li,{children:[`\\n`,(0,e.jsx)(n.p,{children:\'Fill in the intent as follows. We set up the intent into \\"As Initial\\", which means the intent will be executed for the first time. Choose intent type into data, because we will use a payload named story_reply.\'}),`\\n`]}),`\\n`]}),`\\n`,(0,e.jsx)(a,{caption:{title:\\"Figure 5.\\",description:\\"Create intent for Instagram Story Reply\\"},src:\\"/assets/images/tutorials/ig-handover/image_5.webp\\",alt:\\"Simple Handover\\",naturalHeight:932,naturalWidth:1692}),`\\n`,(0,e.jsxs)(n.ol,{start:\\"5\\",children:[`\\n`,(0,e.jsxs)(n.li,{children:[\\"Then, click \\",(0,e.jsx)(n.strong,{children:\\"Create\\"}),\\".\\"]}),`\\n`]}),`\\n`,(0,e.jsxs)(n.h3,{id:\\"objective-create-greetings-state-to-define-how-to-respond-2\\",children:[(0,e.jsx)(n.a,{className:\\"anchor\\",href:\\"#objective-create-greetings-state-to-define-how-to-respond-2\\",children:(0,e.jsx)(n.span,{className:\\"icon icon-link\\"})}),\\"Objective: Create greetings state to define how to respond\\"]}),`\\n`,(0,e.jsxs)(n.h4,{id:\\"create-igstoryreplystate-as-bot-response-to-show-keywords-menu\\",children:[(0,e.jsx)(n.a,{className:\\"anchor\\",href:\\"#create-igstoryreplystate-as-bot-response-to-show-keywords-menu\\",children:(0,e.jsx)(n.span,{className:\\"icon icon-link\\"})}),\'Create \\"igStoryReplyState\\" as bot response to show keywords menu\']}),`\\n`,(0,e.jsxs)(n.ol,{children:[`\\n`,(0,e.jsxs)(n.li,{children:[`\\n`,(0,e.jsxs)(n.p,{children:[\\"Create another state by clicking the \\",(0,e.jsx)(n.strong,{children:\'\\"+\\"\'}),\\" icon in the bottom right to create a new state named \\\\u201CigStoryReplyState\\\\u201D\\"]}),`\\n`]}),`\\n`,(0,e.jsxs)(n.li,{children:[`\\n`,(0,e.jsxs)(n.p,{children:[\\"Click \\",(0,e.jsx)(n.strong,{children:\'\\"Add action\\"\'}),\\", then click \\",(0,e.jsx)(n.strong,{children:\\"\\\\u201C+\\\\u201D\\"}),\\" in the action box to create a new action\\"]}),`\\n`]}),`\\n`,(0,e.jsxs)(n.li,{children:[`\\n`,(0,e.jsx)(n.p,{children:\'When all actions available are shown, then choose \\"Text\\"\'}),`\\n`]}),`\\n`,(0,e.jsxs)(n.li,{children:[`\\n`,(0,e.jsx)(n.p,{children:\'Input action name \\"igStoryReplyText\\"\'}),`\\n`]}),`\\n`,(0,e.jsxs)(n.li,{children:[`\\n`,(0,e.jsxs)(n.p,{children:[\\"Next, click the \\",(0,e.jsx)(n.strong,{children:\\"Add Variant\\"}),\\" button to fill in with this text:\\"]}),`\\n`]}),`\\n`]}),`\\n`,(0,e.jsx)(n.pre,{children:(0,e.jsx)(n.code,{className:\\"code-highlight\\",children:(0,e.jsx)(n.span,{className:\\"code-line\\",children:`Halo, terima kasih telah menyapa Instagram Story Bank ABC \\\\u{1F60A} \\\\\\\\n\\\\\\\\nUntuk memulai, pilih menu yang tersedia: \\\\\\\\n\\\\\\\\nKetik \\"1\\" untuk melihat FAQ \\\\\\\\nKetik \\\\u201C2\\\\u201D untuk melihat promo yang tersedia \\\\\\\\nKetik \\\\u201C3\\\\u201D untuk melihat lokasi Bank ABC \\\\\\\\nKetik \\\\u201C4\\\\u201D untuk berbicara dengan CS Bank ABC \\\\\\\\n\\\\\\\\n\\\\u{1F4A1} Cukup ketik angka pilihannya, ya\\n`})})}),`\\n`,(0,e.jsxs)(n.ol,{start:\\"6\\",children:[`\\n`,(0,e.jsxs)(n.li,{children:[\\"Click \\",(0,e.jsx)(n.strong,{children:\\"Create Action\\"})]}),`\\n`]}),`\\n`,(0,e.jsxs)(n.h4,{id:\\"set-the-state-into-self-transition-2\\",children:[(0,e.jsx)(n.a,{className:\\"anchor\\",href:\\"#set-the-state-into-self-transition-2\\",children:(0,e.jsx)(n.span,{className:\\"icon icon-link\\"})}),\\"Set the state into self-transition\\"]}),`\\n`,(0,e.jsx)(n.p,{children:\\"The self-transition will make the actions under state will be repeatedly shown if end-users give an incorrect answer\\"}),`\\n`,(0,e.jsxs)(n.ol,{children:[`\\n`,(0,e.jsxs)(n.li,{children:[`\\n`,(0,e.jsxs)(n.p,{children:[\\"Go to tab \\",(0,e.jsx)(n.strong,{children:\\"Transitions\\"})]}),`\\n`]}),`\\n`,(0,e.jsxs)(n.li,{children:[`\\n`,(0,e.jsx)(n.p,{children:\\"Turn on on the Self Transition toggle\\"}),`\\n`]}),`\\n`,(0,e.jsxs)(n.li,{children:[`\\n`,(0,e.jsx)(n.p,{children:\\"Then, click Create to finalize the state\\"}),`\\n`]}),`\\n`]}),`\\n`,(0,e.jsxs)(n.h3,{id:\\"objective-connect-init-and-igstoryreplystate-states-by-creating-a-transition\\",children:[(0,e.jsx)(n.a,{className:\\"anchor\\",href:\\"#objective-connect-init-and-igstoryreplystate-states-by-creating-a-transition\\",children:(0,e.jsx)(n.span,{className:\\"icon icon-link\\"})}),\'Objective: Connect \\"init\\" and \\\\u201CigStoryReplyState\\\\u201D states by creating a transition\']}),`\\n`,(0,e.jsxs)(n.h4,{id:\\"create-a-transition-to-connect-init-and-igstoryreplystate-states-the-transition-will-define-in-which-condition-the-greetings-state-including-the-actions-state-will-be-executed\\",children:[(0,e.jsx)(n.a,{className:\\"anchor\\",href:\\"#create-a-transition-to-connect-init-and-igstoryreplystate-states-the-transition-will-define-in-which-condition-the-greetings-state-including-the-actions-state-will-be-executed\\",children:(0,e.jsx)(n.span,{className:\\"icon icon-link\\"})}),\'Create a transition to connect \\"init\\" and \\\\u201CigStoryReplyState\\\\u201D states. The transition will define in which condition the greetings state, including the actions\\\\u2019 state, will be executed.\']}),`\\n`,(0,e.jsxs)(n.ol,{children:[`\\n`,(0,e.jsxs)(n.li,{children:[`\\n`,(0,e.jsxs)(n.p,{children:[\'Pull a line from the \\"init\\" state and drag it to the \\\\u201CigStoryReplyState\\\\u201D state. If you succeed, then it will show a \',(0,e.jsx)(n.strong,{children:\\"Create Transition\\"}),\\" drawer\\"]}),`\\n`]}),`\\n`,(0,e.jsxs)(n.li,{children:[`\\n`,(0,e.jsx)(n.p,{children:\\"Fill in the transition as follow\\"}),`\\n`]}),`\\n`]}),`\\n`,(0,e.jsx)(a,{caption:{title:\\"Figure 6.\\",description:\'Create transition and define which intent to trigger the next state \\"igStoryReply\\"\'},src:\\"/assets/images/tutorials/ig-handover/image_6.webp\\",alt:\\"Simple Handover\\",naturalHeight:854,naturalWidth:1524}),`\\n`,(0,e.jsxs)(n.ol,{start:\\"3\\",children:[`\\n`,(0,e.jsxs)(n.li,{children:[\\"Click \\",(0,e.jsx)(n.strong,{children:\'\\"Create Transition\\"\'})]}),`\\n`]}),`\\n`,(0,e.jsxs)(n.h2,{id:\\"create-quick-replies\\",children:[(0,e.jsx)(n.a,{className:\\"anchor\\",href:\\"#create-quick-replies\\",children:(0,e.jsx)(n.span,{className:\\"icon icon-link\\"})}),\\"Create Quick Replies\\"]}),`\\n`,(0,e.jsxs)(n.p,{children:[\\"In this step, we will create bot responses named quick reply. Learn more about \\",(0,e.jsx)(n.a,{href:\\"/tutorials/how-to-use-instagram-messaging-automation-in-your-project\\",children:\\"Quick Reply for Instagram Messaging\\"}),\\".\\"]}),`\\n`,(0,e.jsxs)(n.h3,{id:\\"objective-show-available-faq-topics-to-end-user\\",children:[(0,e.jsx)(n.a,{className:\\"anchor\\",href:\\"#objective-show-available-faq-topics-to-end-user\\",children:(0,e.jsx)(n.span,{className:\\"icon icon-link\\"})}),\\"Objective: Show available FAQ topics to end-user\\"]}),`\\n`,(0,e.jsxs)(n.h4,{id:\\"create-faqstate-state\\",children:[(0,e.jsx)(n.a,{className:\\"anchor\\",href:\\"#create-faqstate-state\\",children:(0,e.jsx)(n.span,{className:\\"icon icon-link\\"})}),\'Create \\"faqState\\" state\']}),`\\n`,(0,e.jsxs)(n.ol,{children:[`\\n`,(0,e.jsxs)(n.li,{children:[`\\n`,(0,e.jsxs)(n.p,{children:[\\"Click \\",(0,e.jsx)(n.strong,{children:\'\\"+\\"\'}),\\" icon in bottom right to create a new state\\"]}),`\\n`]}),`\\n`,(0,e.jsxs)(n.li,{children:[`\\n`,(0,e.jsxs)(n.p,{children:[\'Fill in the state name with \\"\',(0,e.jsx)(n.em,{children:\\"faqState\\"}),\'\\"\']}),`\\n`]}),`\\n`]}),`\\n`,(0,e.jsxs)(n.h4,{id:\\"create-quick-reply-response-type\\",children:[(0,e.jsx)(n.a,{className:\\"anchor\\",href:\\"#create-quick-reply-response-type\\",children:(0,e.jsx)(n.span,{className:\\"icon icon-link\\"})}),\\"Create quick reply response type\\"]}),`\\n`,(0,e.jsxs)(n.ol,{children:[`\\n`,(0,e.jsxs)(n.li,{children:[`\\n`,(0,e.jsxs)(n.p,{children:[\\"Click \\",(0,e.jsx)(n.strong,{children:\'\\"+\\"\'}),\\" in action box to create a new action\\"]}),`\\n`]}),`\\n`,(0,e.jsxs)(n.li,{children:[`\\n`,(0,e.jsx)(n.p,{children:\'When all actions available are shown, then choose \\"Quick Reply\\"\'}),`\\n`]}),`\\n`,(0,e.jsxs)(n.li,{children:[`\\n`,(0,e.jsx)(n.p,{children:\'Input action name \\"qrText\\"\'}),`\\n`]}),`\\n`,(0,e.jsxs)(n.li,{children:[`\\n`,(0,e.jsx)(n.p,{children:\\"Fill in the Message field with:\\"}),`\\n`]}),`\\n`]}),`\\n`,(0,e.jsx)(n.pre,{children:(0,e.jsx)(n.code,{className:\\"code-highlight\\",children:(0,e.jsx)(n.span,{className:\\"code-line\\",children:`Pilih topik yang kamu inginkan \\\\u{1F60A}\\n`})})}),`\\n`,(0,e.jsxs)(n.ol,{start:\\"5\\",children:[`\\n`,(0,e.jsxs)(n.li,{children:[`\\n`,(0,e.jsxs)(n.p,{children:[\\"Next, click \\",(0,e.jsx)(n.strong,{children:\\"Add action\\"}),\\" button\\"]}),`\\n`]}),`\\n`,(0,e.jsxs)(n.li,{children:[`\\n`,(0,e.jsx)(n.p,{children:\\"Fill in the fields as follow\\"}),`\\n`]}),`\\n`]}),`\\n`,(0,e.jsx)(a,{caption:{title:\\"Figure 7.\\",description:\\"Create message in quick replies\\"},src:\\"/assets/images/tutorials/ig-handover/image_7.webp\\",alt:\\"Simple Handover\\",naturalHeight:954,naturalWidth:1348}),`\\n`,(0,e.jsxs)(n.ol,{start:\\"7\\",children:[`\\n`,(0,e.jsx)(n.li,{children:\\"Click button Create Action\\"}),`\\n`]}),`\\n`,(0,e.jsxs)(n.h4,{id:\\"set-the-state-into-self-transition-3\\",children:[(0,e.jsx)(n.a,{className:\\"anchor\\",href:\\"#set-the-state-into-self-transition-3\\",children:(0,e.jsx)(n.span,{className:\\"icon icon-link\\"})}),\\"Set the state into self-transition\\"]}),`\\n`,(0,e.jsx)(n.p,{children:\\"The self-transition will make the actions under state will be repeatedly shown if end-users give an incorrect answer\\"}),`\\n`,(0,e.jsxs)(n.ol,{children:[`\\n`,(0,e.jsxs)(n.li,{children:[`\\n`,(0,e.jsxs)(n.p,{children:[\\"Go to tab \\",(0,e.jsx)(n.strong,{children:\\"Transitions\\"})]}),`\\n`]}),`\\n`,(0,e.jsxs)(n.li,{children:[`\\n`,(0,e.jsx)(n.p,{children:\\"Turn on on the Self Transition toggle\\"}),`\\n`]}),`\\n`,(0,e.jsxs)(n.li,{children:[`\\n`,(0,e.jsx)(n.p,{children:\\"Then, click Create to finalize the state\\"}),`\\n`]}),`\\n`]}),`\\n`,(0,e.jsxs)(n.h3,{id:\\"objective-connect-all-greetings-states-to-faq-state\\",children:[(0,e.jsx)(n.a,{className:\\"anchor\\",href:\\"#objective-connect-all-greetings-states-to-faq-state\\",children:(0,e.jsx)(n.span,{className:\\"icon icon-link\\"})}),\\"Objective: Connect all greetings states to FAQ state\\"]}),`\\n`,(0,e.jsxs)(n.h4,{id:\\"connect-greetings-via-direct-message-to-faq-state\\",children:[(0,e.jsx)(n.a,{className:\\"anchor\\",href:\\"#connect-greetings-via-direct-message-to-faq-state\\",children:(0,e.jsx)(n.span,{className:\\"icon icon-link\\"})}),\\"Connect greetings via direct message to FAQ state\\"]}),`\\n`,(0,e.jsxs)(n.ol,{children:[`\\n`,(0,e.jsxs)(n.li,{children:[`\\n`,(0,e.jsx)(n.p,{children:\'Pull transition line which starts from \\"greetingState\\" to \\\\u201CfaqState\\\\u201D\'}),`\\n`]}),`\\n`,(0,e.jsxs)(n.li,{children:[`\\n`,(0,e.jsxs)(n.p,{children:[\\"Fill in the \\",(0,e.jsx)(n.strong,{children:\\"Condition\\"}),\\" field:\\"]}),`\\n`]}),`\\n`]}),`\\n`,(0,e.jsx)(n.pre,{children:(0,e.jsx)(n.code,{className:\\"code-highlight\\",children:(0,e.jsx)(n.span,{className:\\"code-line\\",children:`content == \\"1\\"\\n`})})}),`\\n`,(0,e.jsxs)(n.ol,{start:\\"3\\",children:[`\\n`,(0,e.jsx)(n.li,{children:\\"Click Create\\"}),`\\n`]}),`\\n`,(0,e.jsxs)(n.h4,{id:\\"connect-greetings-via-instagram-story-mention-to-faq-state\\",children:[(0,e.jsx)(n.a,{className:\\"anchor\\",href:\\"#connect-greetings-via-instagram-story-mention-to-faq-state\\",children:(0,e.jsx)(n.span,{className:\\"icon icon-link\\"})}),\\"Connect greetings via Instagram story mention to FAQ state\\"]}),`\\n`,(0,e.jsxs)(n.ol,{children:[`\\n`,(0,e.jsxs)(n.li,{children:[`\\n`,(0,e.jsx)(n.p,{children:\'Pull transition line which starts from \\"igMentionedState\\" to \\\\u201CfaqState\\\\u201D\'}),`\\n`]}),`\\n`,(0,e.jsxs)(n.li,{children:[`\\n`,(0,e.jsxs)(n.p,{children:[\\"Fill in the \\",(0,e.jsx)(n.strong,{children:\\"Condition\\"}),\\" field:\\"]}),`\\n`]}),`\\n`]}),`\\n`,(0,e.jsx)(n.pre,{children:(0,e.jsx)(n.code,{className:\\"code-highlight\\",children:(0,e.jsx)(n.span,{className:\\"code-line\\",children:`content == \\"1\\"\\n`})})}),`\\n`,(0,e.jsxs)(n.ol,{start:\\"3\\",children:[`\\n`,(0,e.jsx)(n.li,{children:\\"Click Create\\"}),`\\n`]}),`\\n`,(0,e.jsxs)(n.h4,{id:\\"connect-greetings-via-instagram-story-reply-to-faq-state\\",children:[(0,e.jsx)(n.a,{className:\\"anchor\\",href:\\"#connect-greetings-via-instagram-story-reply-to-faq-state\\",children:(0,e.jsx)(n.span,{className:\\"icon icon-link\\"})}),\\"Connect greetings via Instagram story reply to FAQ state\\"]}),`\\n`,(0,e.jsxs)(n.ol,{children:[`\\n`,(0,e.jsxs)(n.li,{children:[`\\n`,(0,e.jsx)(n.p,{children:\'Pull transition line which starts from \\"igStoryReplyState\\" to \\\\u201CfaqState\\\\u201D\'}),`\\n`]}),`\\n`,(0,e.jsxs)(n.li,{children:[`\\n`,(0,e.jsxs)(n.p,{children:[\\"Fill in the \\",(0,e.jsx)(n.strong,{children:\\"Condition\\"}),\\" field:\\"]}),`\\n`]}),`\\n`]}),`\\n`,(0,e.jsx)(n.pre,{children:(0,e.jsx)(n.code,{className:\\"code-highlight\\",children:(0,e.jsx)(n.span,{className:\\"code-line\\",children:`content == \\"1\\"\\n`})})}),`\\n`,(0,e.jsxs)(n.ol,{start:\\"3\\",children:[`\\n`,(0,e.jsx)(n.li,{children:\\"Click Create\\"}),`\\n`]}),`\\n`,(0,e.jsxs)(n.h3,{id:\\"objective-show-bot-response-after-end-user-choose-daftar-rekening-baru\\",children:[(0,e.jsx)(n.a,{className:\\"anchor\\",href:\\"#objective-show-bot-response-after-end-user-choose-daftar-rekening-baru\\",children:(0,e.jsx)(n.span,{className:\\"icon icon-link\\"})}),\'Objective: Show bot response after end-user choose \\"Daftar rekening baru\\"\']}),`\\n`,(0,e.jsxs)(n.h4,{id:\\"create-rekeningbarustate-state\\",children:[(0,e.jsx)(n.a,{className:\\"anchor\\",href:\\"#create-rekeningbarustate-state\\",children:(0,e.jsx)(n.span,{className:\\"icon icon-link\\"})}),\'Create \\"rekeningBaruState\\" state\']}),`\\n`,(0,e.jsxs)(n.ol,{children:[`\\n`,(0,e.jsxs)(n.li,{children:[`\\n`,(0,e.jsxs)(n.p,{children:[\\"Click \\",(0,e.jsx)(n.strong,{children:\'\\"+\\"\'}),\\" icon in the bottom right to create a new state\\"]}),`\\n`]}),`\\n`,(0,e.jsxs)(n.li,{children:[`\\n`,(0,e.jsx)(n.p,{children:\'Fill in the state name with \\"rekeningBaruState\\"\'}),`\\n`]}),`\\n`]}),`\\n`,(0,e.jsxs)(n.h4,{id:\\"create-bot-response\\",children:[(0,e.jsx)(n.a,{className:\\"anchor\\",href:\\"#create-bot-response\\",children:(0,e.jsx)(n.span,{className:\\"icon icon-link\\"})}),\\"Create bot response\\"]}),`\\n`,(0,e.jsxs)(n.ol,{children:[`\\n`,(0,e.jsxs)(n.li,{children:[`\\n`,(0,e.jsxs)(n.p,{children:[\\"Click \\",(0,e.jsx)(n.strong,{children:\'\\"+\\"\'}),\\" in action box to create a new action\\"]}),`\\n`]}),`\\n`,(0,e.jsxs)(n.li,{children:[`\\n`,(0,e.jsx)(n.p,{children:\'When all actions available are shown, then choose \\"Text\\"\'}),`\\n`]}),`\\n`,(0,e.jsxs)(n.li,{children:[`\\n`,(0,e.jsx)(n.p,{children:\'Input action name \\"rekeningBaruText\\"\'}),`\\n`]}),`\\n`,(0,e.jsxs)(n.li,{children:[`\\n`,(0,e.jsx)(n.p,{children:\\"Fill in Message field with:\\"}),`\\n`]}),`\\n`]}),`\\n`,(0,e.jsx)(n.pre,{children:(0,e.jsx)(n.code,{className:\\"code-highlight\\",children:(0,e.jsx)(n.span,{className:\\"code-line\\",children:`Untuk mendaftar rekening baru, kamu harus menyiapkan KTP, KK asli dan foto diri\\n`})})}),`\\n`,(0,e.jsxs)(n.ol,{start:\\"5\\",children:[`\\n`,(0,e.jsx)(n.li,{children:\\"Click button Create Action\\"}),`\\n`]}),`\\n`,(0,e.jsxs)(n.h4,{id:\\"create-bot-action-command-to-trigger-next-state-to-be-executed\\",children:[(0,e.jsx)(n.a,{className:\\"anchor\\",href:\\"#create-bot-action-command-to-trigger-next-state-to-be-executed\\",children:(0,e.jsx)(n.span,{className:\\"icon icon-link\\"})}),\\"Create bot action command to trigger next state to be executed\\"]}),`\\n`,(0,e.jsx)(n.p,{children:\'In this section, the bot will send the \\"next\\" command whenever this state is executed. The \\\\u201Cnext\\\\u201D command will be caught later into an intent for executing another state to confirm end-users whether they want to restart and show the menu or end the conversation.\'}),`\\n`,(0,e.jsxs)(n.ol,{children:[`\\n`,(0,e.jsxs)(n.li,{children:[`\\n`,(0,e.jsxs)(n.p,{children:[\\"Click \\",(0,e.jsx)(n.strong,{children:\'\\"+\\"\'}),\\" in action box to create a new action\\"]}),`\\n`]}),`\\n`,(0,e.jsxs)(n.li,{children:[`\\n`,(0,e.jsx)(n.p,{children:\'When all actions available are shown, then choose \\"Command\\"\'}),`\\n`]}),`\\n`,(0,e.jsxs)(n.li,{children:[`\\n`,(0,e.jsx)(n.p,{children:\'Input action name \\"nextCommand\\"\'}),`\\n`]}),`\\n`,(0,e.jsxs)(n.li,{children:[`\\n`,(0,e.jsx)(n.p,{children:\\"Fill in Command field with:\\"}),`\\n`]}),`\\n`]}),`\\n`,(0,e.jsx)(n.pre,{children:(0,e.jsx)(n.code,{className:\\"code-highlight\\",children:(0,e.jsx)(n.span,{className:\\"code-line\\",children:`next\\n`})})}),`\\n`,(0,e.jsxs)(n.ol,{start:\\"6\\",children:[`\\n`,(0,e.jsx)(n.li,{children:\\"Click button Create Action\\"}),`\\n`]}),`\\n`,(0,e.jsxs)(n.h3,{id:\\"objective-show-bot-response-after-end-user-choose-daftar-kartu-kredit\\",children:[(0,e.jsx)(n.a,{className:\\"anchor\\",href:\\"#objective-show-bot-response-after-end-user-choose-daftar-kartu-kredit\\",children:(0,e.jsx)(n.span,{className:\\"icon icon-link\\"})}),\'Objective: Show bot response after end-user choose \\"Daftar kartu kredit\\"\']}),`\\n`,(0,e.jsxs)(n.h4,{id:\\"create-kartukreditstate-state\\",children:[(0,e.jsx)(n.a,{className:\\"anchor\\",href:\\"#create-kartukreditstate-state\\",children:(0,e.jsx)(n.span,{className:\\"icon icon-link\\"})}),\'Create \\"kartuKreditState\\" state\']}),`\\n`,(0,e.jsxs)(n.ol,{children:[`\\n`,(0,e.jsxs)(n.li,{children:[`\\n`,(0,e.jsxs)(n.p,{children:[\\"Click \\",(0,e.jsx)(n.strong,{children:\'\\"+\\"\'}),\\" icon in the bottom right to create a new state\\"]}),`\\n`]}),`\\n`,(0,e.jsxs)(n.li,{children:[`\\n`,(0,e.jsx)(n.p,{children:\'Fill in the state name with \\"kartuKreditText\\"\'}),`\\n`]}),`\\n`]}),`\\n`,(0,e.jsxs)(n.h4,{id:\\"create-bot-response-1\\",children:[(0,e.jsx)(n.a,{className:\\"anchor\\",href:\\"#create-bot-response-1\\",children:(0,e.jsx)(n.span,{className:\\"icon icon-link\\"})}),\\"Create bot response\\"]}),`\\n`,(0,e.jsxs)(n.ol,{start:\\"3\\",children:[`\\n`,(0,e.jsxs)(n.li,{children:[`\\n`,(0,e.jsxs)(n.p,{children:[\\"Click \\",(0,e.jsx)(n.strong,{children:\'\\"+\\"\'}),\\" in action box to create a new action\\"]}),`\\n`]}),`\\n`,(0,e.jsxs)(n.li,{children:[`\\n`,(0,e.jsx)(n.p,{children:\'When all actions available are shown, then choose \\"Text\\"\'}),`\\n`]}),`\\n`,(0,e.jsxs)(n.li,{children:[`\\n`,(0,e.jsx)(n.p,{children:\'Input action name \\"kartuKreditText\\"\'}),`\\n`]}),`\\n`,(0,e.jsxs)(n.li,{children:[`\\n`,(0,e.jsx)(n.p,{children:\\"Fill in Message field with:\\"}),`\\n`]}),`\\n`]}),`\\n`,(0,e.jsx)(n.pre,{children:(0,e.jsx)(n.code,{className:\\"code-highlight\\",children:(0,e.jsx)(n.span,{className:\\"code-line\\",children:`Untuk mendaftar kartu kredit baru, kamu harus menyiapkan KTP, KK asli dan foto diri\\n`})})}),`\\n`,(0,e.jsxs)(n.ol,{start:\\"7\\",children:[`\\n`,(0,e.jsx)(n.li,{children:\\"Click the button Create Action\\"}),`\\n`]}),`\\n`,(0,e.jsxs)(n.h4,{id:\\"create-bot-action-command-to-trigger-next-state-to-be-executed-1\\",children:[(0,e.jsx)(n.a,{className:\\"anchor\\",href:\\"#create-bot-action-command-to-trigger-next-state-to-be-executed-1\\",children:(0,e.jsx)(n.span,{className:\\"icon icon-link\\"})}),\\"Create bot action command to trigger next state to be executed\\"]}),`\\n`,(0,e.jsx)(n.p,{children:\'In this section, the bot will send the \\"next\\" command whenever this state is executed. The \\\\u201Cnext\\\\u201D command will be caught later into an intent for executing another state to confirm end-users whether they want to restart and show the menu or end the conversation. We already created this action in the previous step, so we will choose from available actions.\'}),`\\n`,(0,e.jsxs)(n.ol,{children:[`\\n`,(0,e.jsxs)(n.li,{children:[`\\n`,(0,e.jsxs)(n.p,{children:[\\"Click button \\",(0,e.jsx)(n.strong,{children:\\"Add action\\"}),\\" to add more action\\"]}),`\\n`]}),`\\n`,(0,e.jsxs)(n.li,{children:[`\\n`,(0,e.jsx)(n.p,{children:\'In \\"Action name\\" dropdown, search \\\\u201CnextCommand\\\\u201D actions\'}),`\\n`]}),`\\n`,(0,e.jsxs)(n.li,{children:[`\\n`,(0,e.jsx)(n.p,{children:\'Click \\"nextComman\\" action\'}),`\\n`]}),`\\n`,(0,e.jsxs)(n.li,{children:[`\\n`,(0,e.jsxs)(n.p,{children:[\\"Then, click \\",(0,e.jsx)(n.strong,{children:\\"Create Action\\"}),\\" button\\"]}),`\\n`]}),`\\n`,(0,e.jsxs)(n.li,{children:[`\\n`,(0,e.jsxs)(n.p,{children:[\\"Click \\",(0,e.jsx)(n.strong,{children:\\"Create\\"}),\\" to finalize the state\\"]}),`\\n`]}),`\\n`]}),`\\n`,(0,e.jsxs)(n.h3,{id:\\"objective-connect-faq-menu-response-to-quick-reply-options\\",children:[(0,e.jsx)(n.a,{className:\\"anchor\\",href:\\"#objective-connect-faq-menu-response-to-quick-reply-options\\",children:(0,e.jsx)(n.span,{className:\\"icon icon-link\\"})}),\\"Objective: Connect FAQ menu response to quick reply options\\"]}),`\\n`,(0,e.jsxs)(n.h4,{id:\\"create-transition-to-connect-from-faqstate-to-rekeningbarustate\\",children:[(0,e.jsx)(n.a,{className:\\"anchor\\",href:\\"#create-transition-to-connect-from-faqstate-to-rekeningbarustate\\",children:(0,e.jsx)(n.span,{className:\\"icon icon-link\\"})}),\\"Create transition to connect from faqState to rekeningBaruState\\"]}),`\\n`,(0,e.jsxs)(n.ol,{children:[`\\n`,(0,e.jsxs)(n.li,{children:[`\\n`,(0,e.jsx)(n.p,{children:\'Pull transition line which starts from \\"faqState\\" to \\\\u201CrekeningBaruState\\\\u201D\'}),`\\n`]}),`\\n`,(0,e.jsxs)(n.li,{children:[`\\n`,(0,e.jsxs)(n.p,{children:[\\"Fill in the \\",(0,e.jsx)(n.strong,{children:\\"Condition\\"}),\\" field:\\"]}),`\\n`]}),`\\n`]}),`\\n`,(0,e.jsx)(n.pre,{children:(0,e.jsx)(n.code,{className:\\"code-highlight\\",children:(0,e.jsx)(n.span,{className:\\"code-line\\",children:`content == \\"Daftar rekening baru\\"\\n`})})}),`\\n`,(0,e.jsxs)(n.ol,{start:\\"3\\",children:[`\\n`,(0,e.jsx)(n.li,{children:\\"Click Save\\"}),`\\n`]}),`\\n`,(0,e.jsxs)(n.h4,{id:\\"create-transition-to-connect-from-faqstate-to-kartukreditstate\\",children:[(0,e.jsx)(n.a,{className:\\"anchor\\",href:\\"#create-transition-to-connect-from-faqstate-to-kartukreditstate\\",children:(0,e.jsx)(n.span,{className:\\"icon icon-link\\"})}),\\"Create transition to connect from faqState to kartuKreditState\\"]}),`\\n`,(0,e.jsxs)(n.ol,{children:[`\\n`,(0,e.jsxs)(n.li,{children:[`\\n`,(0,e.jsx)(n.p,{children:\'Pull transition line which starts from \\"faqState\\" to \\\\u201CkartuKreditState\\\\u201D\'}),`\\n`]}),`\\n`,(0,e.jsxs)(n.li,{children:[`\\n`,(0,e.jsxs)(n.p,{children:[\\"Fill in the \\",(0,e.jsx)(n.strong,{children:\\"Condition\\"}),\\" field:\\"]}),`\\n`]}),`\\n`]}),`\\n`,(0,e.jsx)(n.pre,{children:(0,e.jsx)(n.code,{className:\\"code-highlight\\",children:(0,e.jsx)(n.span,{className:\\"code-line\\",children:`content == \\"Daftar kartu kredit\\"\\n`})})}),`\\n`,(0,e.jsxs)(n.ol,{start:\\"5\\",children:[`\\n`,(0,e.jsx)(n.li,{children:\\"Click Save\\"}),`\\n`]}),`\\n`,(0,e.jsxs)(n.h2,{id:\\"create-generic-template-carousel\\",children:[(0,e.jsx)(n.a,{className:\\"anchor\\",href:\\"#create-generic-template-carousel\\",children:(0,e.jsx)(n.span,{className:\\"icon icon-link\\"})}),\\"Create Generic Template (Carousel)\\"]}),`\\n`,(0,e.jsxs)(n.p,{children:[\\"In this step, we will create bot responses named generic template. Learn more about \\",(0,e.jsx)(n.a,{href:\\"/tutorials/how-to-use-instagram-messaging-automation-in-your-project\\",children:\\"Generic Template for Instagram Messaging\\"}),\\".\\"]}),`\\n`,(0,e.jsxs)(n.h3,{id:\\"objective-show-bot-response-of-generic-template-carousel-to-end-users\\",children:[(0,e.jsx)(n.a,{className:\\"anchor\\",href:\\"#objective-show-bot-response-of-generic-template-carousel-to-end-users\\",children:(0,e.jsx)(n.span,{className:\\"icon icon-link\\"})}),\'Objective: Show bot response of generic template (\\"carousel\\") to end-users\']}),`\\n`,(0,e.jsxs)(n.h4,{id:\\"create-carousel\\",children:[(0,e.jsx)(n.a,{className:\\"anchor\\",href:\\"#create-carousel\\",children:(0,e.jsx)(n.span,{className:\\"icon icon-link\\"})}),\\"Create carousel\\"]}),`\\n`,(0,e.jsxs)(n.ol,{children:[`\\n`,(0,e.jsxs)(n.li,{children:[`\\n`,(0,e.jsxs)(n.p,{children:[\\"Click \\",(0,e.jsx)(n.strong,{children:\'\\"+\\"\'}),\\" icon in the bottom right to create a new state\\"]}),`\\n`]}),`\\n`,(0,e.jsxs)(n.li,{children:[`\\n`,(0,e.jsx)(n.p,{children:\'Fill in the state name with \\"carouselState\\"\'}),`\\n`]}),`\\n`]}),`\\n`,(0,e.jsxs)(n.h4,{id:\\"create-bot-response-for-the-first-carousel-buy-1-get-1\\",children:[(0,e.jsx)(n.a,{className:\\"anchor\\",href:\\"#create-bot-response-for-the-first-carousel-buy-1-get-1\\",children:(0,e.jsx)(n.span,{className:\\"icon icon-link\\"})}),\\"Create bot response for the first carousel: Buy 1 Get 1\\"]}),`\\n`,(0,e.jsxs)(n.ol,{children:[`\\n`,(0,e.jsxs)(n.li,{children:[`\\n`,(0,e.jsxs)(n.p,{children:[\\"Click \\",(0,e.jsx)(n.strong,{children:\'\\"+\\"\'}),\\" in the action box to create a new action\\"]}),`\\n`]}),`\\n`,(0,e.jsxs)(n.li,{children:[`\\n`,(0,e.jsx)(n.p,{children:\'When all actions available are shown, then choose \\"Carousel\\"\'}),`\\n`]}),`\\n`,(0,e.jsxs)(n.li,{children:[`\\n`,(0,e.jsx)(n.p,{children:\'Input action name \\"carousel\\"\'}),`\\n`]}),`\\n`,(0,e.jsxs)(n.li,{children:[`\\n`,(0,e.jsxs)(n.p,{children:[\\"Next, click the \\",(0,e.jsx)(n.strong,{children:\\"Add Carousel\\"}),\\" button and fill in with the following fields:\\"]}),`\\n`]}),`\\n`]}),`\\n`,(0,e.jsx)(n.pre,{children:(0,e.jsxs)(n.code,{className:\\"code-highlight\\",children:[(0,e.jsx)(n.span,{className:\\"code-line\\",children:`Title: Buy 1 Get 1\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`Text: Gratis 1 pancake di Kafe ABC\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`Thumbnail image URL: https://images.unsplash.com/photo-1630370939015-408e783fb273?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1yZWxhdGVkfDF8fHxlbnwwfHx8fA%3D%3D&auto=format&fit=crop&w=900&q=60.jpg\\n`})]})}),`\\n`,(0,e.jsxs)(n.ol,{start:\\"5\\",children:[`\\n`,(0,e.jsxs)(n.li,{children:[\\"Click the \\",(0,e.jsx)(n.strong,{children:\\"Add action\\"}),\\" button. The first action will trigger another state to execute. Fill in with the following fields:\\"]}),`\\n`]}),`\\n`,(0,e.jsx)(n.pre,{children:(0,e.jsxs)(n.code,{className:\\"code-highlight\\",children:[(0,e.jsx)(n.span,{className:\\"code-line\\",children:`Label: B1G1\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`Postback\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`Payload\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`Key: carousel\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`Value: b1g1\\n`})]})}),`\\n`,(0,e.jsxs)(n.ol,{start:\\"6\\",children:[`\\n`,(0,e.jsxs)(n.li,{children:[\\"Then click the \\",(0,e.jsx)(n.strong,{children:\\"Add action\\"}),\\" button again to create another action. The second action will redirect to the open link. Fill in with the following fields:\\"]}),`\\n`]}),`\\n`,(0,e.jsx)(n.pre,{children:(0,e.jsxs)(n.code,{className:\\"code-highlight\\",children:[(0,e.jsx)(n.span,{className:\\"code-line\\",children:`Label: Lihat detail\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`URL\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`https://docs.kata.ai\\n`})]})}),`\\n`,(0,e.jsxs)(n.h4,{id:\\"create-bot-response-for-the-second-carousel-diskon-10\\",children:[(0,e.jsx)(n.a,{className:\\"anchor\\",href:\\"#create-bot-response-for-the-second-carousel-diskon-10\\",children:(0,e.jsx)(n.span,{className:\\"icon icon-link\\"})}),\\"Create bot response for the second carousel: Diskon 10%\\"]}),`\\n`,(0,e.jsxs)(n.ol,{children:[`\\n`,(0,e.jsxs)(n.li,{children:[\\"Next, click the \\",(0,e.jsx)(n.strong,{children:\\"Add Carousel\\"}),\\" button and fill in with the following fields:\\"]}),`\\n`]}),`\\n`,(0,e.jsx)(n.pre,{children:(0,e.jsxs)(n.code,{className:\\"code-highlight\\",children:[(0,e.jsx)(n.span,{className:\\"code-line\\",children:`Title: Diskon 10%\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`Text: Dapatkan di Mart ABC\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`Thumbnail image URL: https://images.unsplash.com/photo-1515706886582-54c73c5eaf41?ixid=MnwxMjA3fDB8MHxzZWFyY2h8MTR8fHNob3B8ZW58MHx8MHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=900&q=60.jpg\\n`})]})}),`\\n`,(0,e.jsxs)(n.ol,{start:\\"8\\",children:[`\\n`,(0,e.jsxs)(n.li,{children:[\\"Click the \\",(0,e.jsx)(n.strong,{children:\\"Add action\\"}),\\" button. The first action will trigger another state to execute. Fill in with the following fields:\\"]}),`\\n`]}),`\\n`,(0,e.jsx)(n.pre,{children:(0,e.jsxs)(n.code,{className:\\"code-highlight\\",children:[(0,e.jsx)(n.span,{className:\\"code-line\\",children:`Label: Diskon\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`Postback\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`Payload\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`Key: carousel\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`Value: diskon\\n`})]})}),`\\n`,(0,e.jsxs)(n.ol,{start:\\"9\\",children:[`\\n`,(0,e.jsxs)(n.li,{children:[\\"Then click the \\",(0,e.jsx)(n.strong,{children:\\"Add action\\"}),\\" button again to create another action. The second action will redirect to the open link. Fill in with the following fields:\\"]}),`\\n`]}),`\\n`,(0,e.jsx)(n.pre,{children:(0,e.jsxs)(n.code,{className:\\"code-highlight\\",children:[(0,e.jsx)(n.span,{className:\\"code-line\\",children:`Label: Lihat detail\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`URL\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`https://docs.kata.ai\\n`})]})}),`\\n`,(0,e.jsxs)(n.ol,{start:\\"10\\",children:[`\\n`,(0,e.jsxs)(n.li,{children:[`\\n`,(0,e.jsxs)(n.p,{children:[\\"Click \\",(0,e.jsx)(n.strong,{children:\\"Create Action\\"})]}),`\\n`]}),`\\n`,(0,e.jsxs)(n.li,{children:[`\\n`,(0,e.jsxs)(n.p,{children:[\\"To finalize the state creation, click \\",(0,e.jsx)(n.strong,{children:\\"Create\\"}),\\" in the state drawer\\"]}),`\\n`]}),`\\n`]}),`\\n`,(0,e.jsxs)(n.h4,{id:\\"set-the-state-into-self-transition-4\\",children:[(0,e.jsx)(n.a,{className:\\"anchor\\",href:\\"#set-the-state-into-self-transition-4\\",children:(0,e.jsx)(n.span,{className:\\"icon icon-link\\"})}),\\"Set the state into self-transition\\"]}),`\\n`,(0,e.jsx)(n.p,{children:\\"The self-transition will make the actions under state will be repeatedly shown if end-users give an incorrect answer\\"}),`\\n`,(0,e.jsxs)(n.ol,{children:[`\\n`,(0,e.jsxs)(n.li,{children:[`\\n`,(0,e.jsxs)(n.p,{children:[\\"Go to tab \\",(0,e.jsx)(n.strong,{children:\\"Transitions\\"})]}),`\\n`]}),`\\n`,(0,e.jsxs)(n.li,{children:[`\\n`,(0,e.jsx)(n.p,{children:\\"Turn on on the Self Transition toggle\\"}),`\\n`]}),`\\n`,(0,e.jsxs)(n.li,{children:[`\\n`,(0,e.jsx)(n.p,{children:\\"Then, click Create to finalize the state\\"}),`\\n`]}),`\\n`]}),`\\n`,(0,e.jsxs)(n.h3,{id:\\"objective-connect-all-greetings-states-to-carouselstate\\",children:[(0,e.jsx)(n.a,{className:\\"anchor\\",href:\\"#objective-connect-all-greetings-states-to-carouselstate\\",children:(0,e.jsx)(n.span,{className:\\"icon icon-link\\"})}),\\"Objective: Connect all greetings states to carouselState\\"]}),`\\n`,(0,e.jsxs)(n.h4,{id:\\"connect-greetings-via-direct-message-to-carousel-state\\",children:[(0,e.jsx)(n.a,{className:\\"anchor\\",href:\\"#connect-greetings-via-direct-message-to-carousel-state\\",children:(0,e.jsx)(n.span,{className:\\"icon icon-link\\"})}),\\"Connect greetings via direct message to carousel state\\"]}),`\\n`,(0,e.jsxs)(n.ol,{children:[`\\n`,(0,e.jsxs)(n.li,{children:[`\\n`,(0,e.jsx)(n.p,{children:\'Pull transition line which starts from \\"greetingState\\" to \\\\u201CcarouselState\\\\u201D\'}),`\\n`]}),`\\n`,(0,e.jsxs)(n.li,{children:[`\\n`,(0,e.jsxs)(n.p,{children:[\\"Fill in the \\",(0,e.jsx)(n.strong,{children:\\"Condition\\"}),\\" field:\\"]}),`\\n`]}),`\\n`]}),`\\n`,(0,e.jsx)(n.pre,{children:(0,e.jsx)(n.code,{className:\\"code-highlight\\",children:(0,e.jsx)(n.span,{className:\\"code-line\\",children:`content == \\"2\\"\\n`})})}),`\\n`,(0,e.jsxs)(n.ol,{start:\\"3\\",children:[`\\n`,(0,e.jsx)(n.li,{children:\\"Click Create\\"}),`\\n`]}),`\\n`,(0,e.jsxs)(n.h4,{id:\\"connect-greetings-via-instagram-story-mention-to-carousel-state\\",children:[(0,e.jsx)(n.a,{className:\\"anchor\\",href:\\"#connect-greetings-via-instagram-story-mention-to-carousel-state\\",children:(0,e.jsx)(n.span,{className:\\"icon icon-link\\"})}),\\"Connect greetings via Instagram story mention to carousel state\\"]}),`\\n`,(0,e.jsxs)(n.ol,{children:[`\\n`,(0,e.jsxs)(n.li,{children:[`\\n`,(0,e.jsx)(n.p,{children:\'Pull transition line which start from \\"igMentionedState\\" to \\\\u201CcarouselState\\\\u201D\'}),`\\n`]}),`\\n`,(0,e.jsxs)(n.li,{children:[`\\n`,(0,e.jsxs)(n.p,{children:[\\"Fill in the \\",(0,e.jsx)(n.strong,{children:\\"Condition\\"}),\\" field:\\"]}),`\\n`]}),`\\n`]}),`\\n`,(0,e.jsx)(n.pre,{children:(0,e.jsx)(n.code,{className:\\"code-highlight\\",children:(0,e.jsx)(n.span,{className:\\"code-line\\",children:`content == \\"2\\"\\n`})})}),`\\n`,(0,e.jsxs)(n.ol,{start:\\"3\\",children:[`\\n`,(0,e.jsx)(n.li,{children:\\"Click Create\\"}),`\\n`]}),`\\n`,(0,e.jsxs)(n.h4,{id:\\"connect-greetings-via-instagram-story-reply-to-carousel-state\\",children:[(0,e.jsx)(n.a,{className:\\"anchor\\",href:\\"#connect-greetings-via-instagram-story-reply-to-carousel-state\\",children:(0,e.jsx)(n.span,{className:\\"icon icon-link\\"})}),\\"Connect greetings via Instagram story reply to carousel state\\"]}),`\\n`,(0,e.jsxs)(n.ol,{children:[`\\n`,(0,e.jsxs)(n.li,{children:[`\\n`,(0,e.jsx)(n.p,{children:\'Pull transition line which start from \\"igStoryReplyState\\" to \\\\u201CcarouselState\\\\u201D\'}),`\\n`]}),`\\n`,(0,e.jsxs)(n.li,{children:[`\\n`,(0,e.jsxs)(n.p,{children:[\\"Fill in the \\",(0,e.jsx)(n.strong,{children:\\"Condition\\"}),\\" field:\\"]}),`\\n`]}),`\\n`]}),`\\n`,(0,e.jsx)(n.pre,{children:(0,e.jsx)(n.code,{className:\\"code-highlight\\",children:(0,e.jsx)(n.span,{className:\\"code-line\\",children:`content == \\"2\\"\\n`})})}),`\\n`,(0,e.jsxs)(n.ol,{start:\\"3\\",children:[`\\n`,(0,e.jsx)(n.li,{children:\\"Click Create\\"}),`\\n`]}),`\\n`,(0,e.jsxs)(n.h3,{id:\\"objective-show-bot-response-after-end-users-choose-buy-1-get-1\\",children:[(0,e.jsx)(n.a,{className:\\"anchor\\",href:\\"#objective-show-bot-response-after-end-users-choose-buy-1-get-1\\",children:(0,e.jsx)(n.span,{className:\\"icon icon-link\\"})}),\'Objective: Show bot response after end-users choose \\"Buy 1 Get 1\\"\']}),`\\n`,(0,e.jsxs)(n.h4,{id:\\"create-b1g1state-state\\",children:[(0,e.jsx)(n.a,{className:\\"anchor\\",href:\\"#create-b1g1state-state\\",children:(0,e.jsx)(n.span,{className:\\"icon icon-link\\"})}),\'Create \\"b1g1State\\" state\']}),`\\n`,(0,e.jsxs)(n.ol,{children:[`\\n`,(0,e.jsxs)(n.li,{children:[`\\n`,(0,e.jsxs)(n.p,{children:[\\"Click \\",(0,e.jsx)(n.strong,{children:\'\\"+\\"\'}),\\" icon in the bottom right to create a new state\\"]}),`\\n`]}),`\\n`,(0,e.jsxs)(n.li,{children:[`\\n`,(0,e.jsx)(n.p,{children:\'Fill in the state name with \\"b1g1State\\"\'}),`\\n`]}),`\\n`]}),`\\n`,(0,e.jsxs)(n.h4,{id:\\"create-bot-response-2\\",children:[(0,e.jsx)(n.a,{className:\\"anchor\\",href:\\"#create-bot-response-2\\",children:(0,e.jsx)(n.span,{className:\\"icon icon-link\\"})}),\\"Create bot response\\"]}),`\\n`,(0,e.jsxs)(n.ol,{children:[`\\n`,(0,e.jsxs)(n.li,{children:[`\\n`,(0,e.jsxs)(n.p,{children:[\\"Click \\",(0,e.jsx)(n.strong,{children:\'\\"+\\"\'}),\\" in the action box to create a new action\\"]}),`\\n`]}),`\\n`,(0,e.jsxs)(n.li,{children:[`\\n`,(0,e.jsx)(n.p,{children:\'When all actions available are shown, then choose \\"Text\\"\'}),`\\n`]}),`\\n`,(0,e.jsxs)(n.li,{children:[`\\n`,(0,e.jsx)(n.p,{children:\'Input action name \\"b1g1Text\\"\'}),`\\n`]}),`\\n`,(0,e.jsxs)(n.li,{children:[`\\n`,(0,e.jsx)(n.p,{children:\\"Fill in Text Response field with:\\"}),`\\n`]}),`\\n`]}),`\\n`,(0,e.jsx)(n.pre,{children:(0,e.jsx)(n.code,{className:\\"code-highlight\\",children:(0,e.jsx)(n.span,{className:\\"code-line\\",children:`Kamu telah memilih promo \\"Buy 1 Get 1\\" dari Bank ABC. Silahkan mengunjungi Kafe ABC terdekat Anda dan tunjukkan pesan ini \\\\u{1F60A}\\n`})})}),`\\n`,(0,e.jsxs)(n.ol,{start:\\"5\\",children:[`\\n`,(0,e.jsx)(n.li,{children:\\"Click button Create Action\\"}),`\\n`]}),`\\n`,(0,e.jsxs)(n.h4,{id:\\"create-bot-action-command-to-trigger-next-state-to-be-executed-2\\",children:[(0,e.jsx)(n.a,{className:\\"anchor\\",href:\\"#create-bot-action-command-to-trigger-next-state-to-be-executed-2\\",children:(0,e.jsx)(n.span,{className:\\"icon icon-link\\"})}),\\"Create bot action command to trigger next state to be executed\\"]}),`\\n`,(0,e.jsx)(n.p,{children:\'In this section, the bot will send the \\"next\\" command whenever this state is executed. The \\\\u201Cnext\\\\u201D command will be caught later into an intent for executing another state to confirm end-users whether they want to restart and show the menu or end the conversation. We already created this action in the previous step, so we will choose from available actions.\'}),`\\n`,(0,e.jsxs)(n.ol,{children:[`\\n`,(0,e.jsxs)(n.li,{children:[`\\n`,(0,e.jsx)(n.p,{children:\\"Click button Add action to add more action\\"}),`\\n`]}),`\\n`,(0,e.jsxs)(n.li,{children:[`\\n`,(0,e.jsx)(n.p,{children:\'In the \\"Action name\\" dropdown, search \\\\u201CnextCommand\\\\u201D actions\'}),`\\n`]}),`\\n`,(0,e.jsxs)(n.li,{children:[`\\n`,(0,e.jsx)(n.p,{children:\'Click \\"nextCommand\\" action\'}),`\\n`]}),`\\n`,(0,e.jsxs)(n.li,{children:[`\\n`,(0,e.jsx)(n.p,{children:\\"Then, click Create Action button\\"}),`\\n`]}),`\\n`]}),`\\n`,(0,e.jsxs)(n.h3,{id:\\"objective-show-bot-response-after-end-users-choose-disc-10\\",children:[(0,e.jsx)(n.a,{className:\\"anchor\\",href:\\"#objective-show-bot-response-after-end-users-choose-disc-10\\",children:(0,e.jsx)(n.span,{className:\\"icon icon-link\\"})}),\'Objective: Show bot response after end-users choose \\"Disc 10%\\"\']}),`\\n`,(0,e.jsxs)(n.h4,{id:\\"create-discstate-state\\",children:[(0,e.jsx)(n.a,{className:\\"anchor\\",href:\\"#create-discstate-state\\",children:(0,e.jsx)(n.span,{className:\\"icon icon-link\\"})}),\'Create \\"discState\\" state\']}),`\\n`,(0,e.jsxs)(n.ol,{children:[`\\n`,(0,e.jsxs)(n.li,{children:[`\\n`,(0,e.jsxs)(n.p,{children:[\\"Click \\",(0,e.jsx)(n.strong,{children:\'\\"+\\"\'}),\\" icon in the bottom right to create a new state\\"]}),`\\n`]}),`\\n`,(0,e.jsxs)(n.li,{children:[`\\n`,(0,e.jsx)(n.p,{children:\'Fill in the state name with \\"discState\\"\'}),`\\n`]}),`\\n`]}),`\\n`,(0,e.jsxs)(n.h4,{id:\\"create-bot-response-3\\",children:[(0,e.jsx)(n.a,{className:\\"anchor\\",href:\\"#create-bot-response-3\\",children:(0,e.jsx)(n.span,{className:\\"icon icon-link\\"})}),\\"Create bot response\\"]}),`\\n`,(0,e.jsxs)(n.ol,{children:[`\\n`,(0,e.jsxs)(n.li,{children:[`\\n`,(0,e.jsxs)(n.p,{children:[\\"Click \\",(0,e.jsx)(n.strong,{children:\'\\"+\\"\'}),\\" in action box to create a new action\\"]}),`\\n`]}),`\\n`,(0,e.jsxs)(n.li,{children:[`\\n`,(0,e.jsx)(n.p,{children:\'When all actions available are shown, then choose \\"Text\\"\'}),`\\n`]}),`\\n`,(0,e.jsxs)(n.li,{children:[`\\n`,(0,e.jsx)(n.p,{children:\'Input action name \\"discText\\"\'}),`\\n`]}),`\\n`,(0,e.jsxs)(n.li,{children:[`\\n`,(0,e.jsx)(n.p,{children:\\"Fill in Text Response field with:\\"}),`\\n`]}),`\\n`]}),`\\n`,(0,e.jsx)(n.pre,{children:(0,e.jsx)(n.code,{className:\\"code-highlight\\",children:(0,e.jsx)(n.span,{className:\\"code-line\\",children:`Kamu telah memilih promo \\"Diskon 10% di Mart ABC\\" dari Bank ABC. Silahkan mengunjungi Mart ABC terdekat Anda dan tunjukkan pesan ini \\\\u{1F60A}\\n`})})}),`\\n`,(0,e.jsxs)(n.ol,{start:\\"6\\",children:[`\\n`,(0,e.jsx)(n.li,{children:\\"Click button Create Action\\"}),`\\n`]}),`\\n`,(0,e.jsxs)(n.h4,{id:\\"create-bot-action-command-to-trigger-next-state-to-be-executed-3\\",children:[(0,e.jsx)(n.a,{className:\\"anchor\\",href:\\"#create-bot-action-command-to-trigger-next-state-to-be-executed-3\\",children:(0,e.jsx)(n.span,{className:\\"icon icon-link\\"})}),\\"Create bot action command to trigger next state to be executed\\"]}),`\\n`,(0,e.jsx)(n.p,{children:\'In this section, the bot will send the \\"next\\" command whenever this state is executed. The \\\\u201Cnext\\\\u201D command will be caught later into an intent for executing another state to confirm end-users whether they want to restart and show the menu or end the conversation. We already created this action in the previous step, so we will choose from available actions.\'}),`\\n`,(0,e.jsxs)(n.ol,{children:[`\\n`,(0,e.jsxs)(n.li,{children:[`\\n`,(0,e.jsx)(n.p,{children:\\"Click button Add action to add more action\\"}),`\\n`]}),`\\n`,(0,e.jsxs)(n.li,{children:[`\\n`,(0,e.jsx)(n.p,{children:\'In the \\"Action name\\" dropdown, search \\\\u201CnextCommand\\\\u201D actions\'}),`\\n`]}),`\\n`,(0,e.jsxs)(n.li,{children:[`\\n`,(0,e.jsx)(n.p,{children:\'Click \\"nextCommand\\" action\'}),`\\n`]}),`\\n`,(0,e.jsxs)(n.li,{children:[`\\n`,(0,e.jsx)(n.p,{children:\\"Then, click Create Action button\\"}),`\\n`]}),`\\n`]}),`\\n`,(0,e.jsxs)(n.h3,{id:\\"objective-connect-carousel-menu-response-to-postback-options\\",children:[(0,e.jsx)(n.a,{className:\\"anchor\\",href:\\"#objective-connect-carousel-menu-response-to-postback-options\\",children:(0,e.jsx)(n.span,{className:\\"icon icon-link\\"})}),\\"Objective: Connect carousel menu response to postback options\\"]}),`\\n`,(0,e.jsxs)(n.h4,{id:\\"create-transition-to-connect-from-carouselstate-to-b1g1state\\",children:[(0,e.jsx)(n.a,{className:\\"anchor\\",href:\\"#create-transition-to-connect-from-carouselstate-to-b1g1state\\",children:(0,e.jsx)(n.span,{className:\\"icon icon-link\\"})}),\\"Create transition to connect from carouselState to b1g1State\\"]}),`\\n`,(0,e.jsxs)(n.ol,{children:[`\\n`,(0,e.jsxs)(n.li,{children:[`\\n`,(0,e.jsx)(n.p,{children:\'Pull transition line which starts from \\"carouselState\\" to \\\\u201Cb1g1State\\\\u201D\'}),`\\n`]}),`\\n`,(0,e.jsxs)(n.li,{children:[`\\n`,(0,e.jsxs)(n.p,{children:[\\"Fill in the \\",(0,e.jsx)(n.strong,{children:\\"Condition\\"}),\\" field:\\"]}),`\\n`]}),`\\n`]}),`\\n`,(0,e.jsx)(n.pre,{children:(0,e.jsx)(n.code,{className:\\"code-highlight\\",children:(0,e.jsx)(n.span,{className:\\"code-line\\",children:`content == \\"B1G1\\" || (intent == \\"carouselIntent\\" && payload.carousel == \\"b1g1\\")\\n`})})}),`\\n`,(0,e.jsxs)(n.ol,{start:\\"3\\",children:[`\\n`,(0,e.jsx)(n.li,{children:\\"Click Save\\"}),`\\n`]}),`\\n`,(0,e.jsxs)(n.h4,{id:\\"create-transition-to-connect-from-faqstate-to-kartukreditstate-1\\",children:[(0,e.jsx)(n.a,{className:\\"anchor\\",href:\\"#create-transition-to-connect-from-faqstate-to-kartukreditstate-1\\",children:(0,e.jsx)(n.span,{className:\\"icon icon-link\\"})}),\\"Create transition to connect from faqState to kartuKreditState\\"]}),`\\n`,(0,e.jsxs)(n.ol,{children:[`\\n`,(0,e.jsxs)(n.li,{children:[`\\n`,(0,e.jsx)(n.p,{children:\'Pull transition line which starts from \\"carouselState\\" to \\\\u201CdiscState\\\\u201D\'}),`\\n`]}),`\\n`,(0,e.jsxs)(n.li,{children:[`\\n`,(0,e.jsxs)(n.p,{children:[\\"Fill in the \\",(0,e.jsx)(n.strong,{children:\\"Condition\\"}),\\" field:\\"]}),`\\n`]}),`\\n`]}),`\\n`,(0,e.jsx)(n.pre,{children:(0,e.jsx)(n.code,{className:\\"code-highlight\\",children:(0,e.jsx)(n.span,{className:\\"code-line\\",children:`content == \\"Diskon\\" || (intent == \\"carouselIntent\\" && payload.carousel == \\"diskon\\")\\n`})})}),`\\n`,(0,e.jsxs)(n.ol,{start:\\"3\\",children:[`\\n`,(0,e.jsx)(n.li,{children:\\"Click Save\\"}),`\\n`]}),`\\n`,(0,e.jsxs)(n.h2,{id:\\"create-text-response\\",children:[(0,e.jsx)(n.a,{className:\\"anchor\\",href:\\"#create-text-response\\",children:(0,e.jsx)(n.span,{className:\\"icon icon-link\\"})}),\\"Create Text Response\\"]}),`\\n`,(0,e.jsxs)(n.h3,{id:\\"objective-show-bot-response-in-the-text-to-end-users\\",children:[(0,e.jsx)(n.a,{className:\\"anchor\\",href:\\"#objective-show-bot-response-in-the-text-to-end-users\\",children:(0,e.jsx)(n.span,{className:\\"icon icon-link\\"})}),\\"Objective: Show bot response in the text to end-users\\"]}),`\\n`,(0,e.jsxs)(n.h4,{id:\\"create-text\\",children:[(0,e.jsx)(n.a,{className:\\"anchor\\",href:\\"#create-text\\",children:(0,e.jsx)(n.span,{className:\\"icon icon-link\\"})}),\\"Create text\\"]}),`\\n`,(0,e.jsxs)(n.ol,{children:[`\\n`,(0,e.jsxs)(n.li,{children:[`\\n`,(0,e.jsxs)(n.p,{children:[\\"Click \\",(0,e.jsx)(n.strong,{children:\'\\"+\\"\'}),\\" icon in the bottom right to create a new state\\"]}),`\\n`]}),`\\n`,(0,e.jsxs)(n.li,{children:[`\\n`,(0,e.jsx)(n.p,{children:\'Fill in the state name with \\"locationState\\"\'}),`\\n`]}),`\\n`,(0,e.jsxs)(n.li,{children:[`\\n`,(0,e.jsxs)(n.p,{children:[\\"Click \\",(0,e.jsx)(n.strong,{children:\'\\"+\\"\'}),\\" in the action box to create a new action\\"]}),`\\n`]}),`\\n`,(0,e.jsxs)(n.li,{children:[`\\n`,(0,e.jsx)(n.p,{children:\'When all actions available are shown, then choose \\"Text\\"\'}),`\\n`]}),`\\n`,(0,e.jsxs)(n.li,{children:[`\\n`,(0,e.jsx)(n.p,{children:\'Input action name \\"locationText\\"\'}),`\\n`]}),`\\n`,(0,e.jsxs)(n.li,{children:[`\\n`,(0,e.jsxs)(n.p,{children:[\\"Next, click the \\",(0,e.jsx)(n.strong,{children:\\"Add Variant\\"}),\\" button and fill in with following fields:\\"]}),`\\n`]}),`\\n`]}),`\\n`,(0,e.jsx)(n.pre,{children:(0,e.jsx)(n.code,{className:\\"code-highlight\\",children:(0,e.jsx)(n.span,{className:\\"code-line\\",children:`Lokasi bank ABC terdapat di Jalan Haji Nawi, Jakarta Selatan. Lihat peta: https://goo.gl/maps/eD2BGC6ZL7JpgBnU6\\n`})})}),`\\n`,(0,e.jsxs)(n.ol,{start:\\"8\\",children:[`\\n`,(0,e.jsx)(n.li,{children:\\"Click Create Action\\"}),`\\n`]}),`\\n`,(0,e.jsxs)(n.h4,{id:\\"create-bot-action-command-to-trigger-next-state-to-be-executed-4\\",children:[(0,e.jsx)(n.a,{className:\\"anchor\\",href:\\"#create-bot-action-command-to-trigger-next-state-to-be-executed-4\\",children:(0,e.jsx)(n.span,{className:\\"icon icon-link\\"})}),\\"Create bot action command to trigger next state to be executed\\"]}),`\\n`,(0,e.jsx)(n.p,{children:\'In this section, the bot will send the \\"next\\" command whenever this state is executed. The \\\\u201Cnext\\\\u201D command will be catched later into an intent for executing another state to confirm end-users whether they want to restart and show menu or end the conversation.\'}),`\\n`,(0,e.jsxs)(n.ol,{children:[`\\n`,(0,e.jsxs)(n.li,{children:[`\\n`,(0,e.jsxs)(n.p,{children:[\\"Click \\",(0,e.jsx)(n.strong,{children:\'\\"+\\"\'}),\\" in action box to create a new action\\"]}),`\\n`]}),`\\n`,(0,e.jsxs)(n.li,{children:[`\\n`,(0,e.jsx)(n.p,{children:\'When all actions available are shown, then choose \\"Command\\"\'}),`\\n`]}),`\\n`,(0,e.jsxs)(n.li,{children:[`\\n`,(0,e.jsx)(n.p,{children:\'Input action name \\"nextCommand\\"\'}),`\\n`]}),`\\n`,(0,e.jsxs)(n.li,{children:[`\\n`,(0,e.jsx)(n.p,{children:\\"Fill in Command field with:\\"}),`\\n`]}),`\\n`]}),`\\n`,(0,e.jsx)(n.pre,{children:(0,e.jsx)(n.code,{className:\\"code-highlight\\",children:(0,e.jsx)(n.span,{className:\\"code-line\\",children:`next\\n`})})}),`\\n`,(0,e.jsxs)(n.ol,{start:\\"5\\",children:[`\\n`,(0,e.jsxs)(n.li,{children:[`\\n`,(0,e.jsx)(n.p,{children:\\"Click button Create Action\\"}),`\\n`]}),`\\n`,(0,e.jsxs)(n.li,{children:[`\\n`,(0,e.jsx)(n.p,{children:\\"Then, click Create to finalize the state\\"}),`\\n`]}),`\\n`]}),`\\n`,(0,e.jsxs)(n.h3,{id:\\"objective-connect-all-greetings-states-to-locationstate\\",children:[(0,e.jsx)(n.a,{className:\\"anchor\\",href:\\"#objective-connect-all-greetings-states-to-locationstate\\",children:(0,e.jsx)(n.span,{className:\\"icon icon-link\\"})}),\\"Objective: Connect all greetings states to locationState\\"]}),`\\n`,(0,e.jsxs)(n.h4,{id:\\"connect-greetings-via-direct-message-to-location-state\\",children:[(0,e.jsx)(n.a,{className:\\"anchor\\",href:\\"#connect-greetings-via-direct-message-to-location-state\\",children:(0,e.jsx)(n.span,{className:\\"icon icon-link\\"})}),\\"Connect greetings via direct message to location state\\"]}),`\\n`,(0,e.jsxs)(n.ol,{children:[`\\n`,(0,e.jsxs)(n.li,{children:[`\\n`,(0,e.jsx)(n.p,{children:\'Pull transition line which start from \\"greetingState\\" to \\\\u201ClocationState\\\\u201D\'}),`\\n`]}),`\\n`,(0,e.jsxs)(n.li,{children:[`\\n`,(0,e.jsxs)(n.p,{children:[\\"Fill in the \\",(0,e.jsx)(n.strong,{children:\\"Condition\\"}),\\" field:\\"]}),`\\n`]}),`\\n`]}),`\\n`,(0,e.jsx)(n.pre,{children:(0,e.jsx)(n.code,{className:\\"code-highlight\\",children:(0,e.jsx)(n.span,{className:\\"code-line\\",children:`content == \\"3\\"\\n`})})}),`\\n`,(0,e.jsxs)(n.ol,{start:\\"3\\",children:[`\\n`,(0,e.jsx)(n.li,{children:\\"Click Save\\"}),`\\n`]}),`\\n`,(0,e.jsxs)(n.h4,{id:\\"connect-greetings-via-instagram-story-mention-to-carousel-state-1\\",children:[(0,e.jsx)(n.a,{className:\\"anchor\\",href:\\"#connect-greetings-via-instagram-story-mention-to-carousel-state-1\\",children:(0,e.jsx)(n.span,{className:\\"icon icon-link\\"})}),\\"Connect greetings via Instagram story mention to carousel state\\"]}),`\\n`,(0,e.jsxs)(n.ol,{children:[`\\n`,(0,e.jsxs)(n.li,{children:[`\\n`,(0,e.jsx)(n.p,{children:\'Pull transition line which start from \\"igMentionedState\\" to \\\\u201ClocationState\\\\u201D\'}),`\\n`]}),`\\n`,(0,e.jsxs)(n.li,{children:[`\\n`,(0,e.jsxs)(n.p,{children:[\\"Fill in the \\",(0,e.jsx)(n.strong,{children:\\"Condition\\"}),\\" field:\\"]}),`\\n`]}),`\\n`]}),`\\n`,(0,e.jsx)(n.pre,{children:(0,e.jsx)(n.code,{className:\\"code-highlight\\",children:(0,e.jsx)(n.span,{className:\\"code-line\\",children:`content == \\"3\\"\\n`})})}),`\\n`,(0,e.jsxs)(n.ol,{start:\\"3\\",children:[`\\n`,(0,e.jsx)(n.li,{children:\\"Click Save\\"}),`\\n`]}),`\\n`,(0,e.jsxs)(n.h4,{id:\\"connect-greetings-via-instagram-story-reply-to-carousel-state-1\\",children:[(0,e.jsx)(n.a,{className:\\"anchor\\",href:\\"#connect-greetings-via-instagram-story-reply-to-carousel-state-1\\",children:(0,e.jsx)(n.span,{className:\\"icon icon-link\\"})}),\\"Connect greetings via Instagram story reply to carousel state\\"]}),`\\n`,(0,e.jsxs)(n.ol,{children:[`\\n`,(0,e.jsxs)(n.li,{children:[`\\n`,(0,e.jsx)(n.p,{children:\'Pull transition line which start from \\"igStoryReplyState\\" to \\\\u201ClocationState\\\\u201D\'}),`\\n`]}),`\\n`,(0,e.jsxs)(n.li,{children:[`\\n`,(0,e.jsxs)(n.p,{children:[\\"Fill in the \\",(0,e.jsx)(n.strong,{children:\\"Condition\\"}),\\" field:\\"]}),`\\n`]}),`\\n`]}),`\\n`,(0,e.jsx)(n.pre,{children:(0,e.jsx)(n.code,{className:\\"code-highlight\\",children:(0,e.jsx)(n.span,{className:\\"code-line\\",children:`content == \\"3\\"\\n`})})}),`\\n`,(0,e.jsxs)(n.ol,{start:\\"3\\",children:[`\\n`,(0,e.jsx)(n.li,{children:\\"Click Save\\"}),`\\n`]}),`\\n`,(0,e.jsxs)(n.h2,{id:\\"create-handover-to-human-agent-flow\\",children:[(0,e.jsx)(n.a,{className:\\"anchor\\",href:\\"#create-handover-to-human-agent-flow\\",children:(0,e.jsx)(n.span,{className:\\"icon icon-link\\"})}),\\"Create Handover to Human Agent Flow\\"]}),`\\n`,(0,e.jsx)(n.p,{children:\\"Handover to human agent path is required to be implemented in Instagram Messaging and we will use Handover API template.\\"}),`\\n`,(0,e.jsxs)(n.h3,{id:\\"objective-create-a-flow-that-end-user-can-request-handover-to-human-agents-by-using-handover-api\\",children:[(0,e.jsx)(n.a,{className:\\"anchor\\",href:\\"#objective-create-a-flow-that-end-user-can-request-handover-to-human-agents-by-using-handover-api\\",children:(0,e.jsx)(n.span,{className:\\"icon icon-link\\"})}),\\"Objective: Create a flow that end-user can request handover to human agents by using Handover API\\"]}),`\\n`,(0,e.jsxs)(n.h4,{id:\\"create-handover-state\\",children:[(0,e.jsx)(n.a,{className:\\"anchor\\",href:\\"#create-handover-state\\",children:(0,e.jsx)(n.span,{className:\\"icon icon-link\\"})}),\\"Create handover state\\"]}),`\\n`,(0,e.jsxs)(n.ol,{children:[`\\n`,(0,e.jsxs)(n.li,{children:[`\\n`,(0,e.jsxs)(n.p,{children:[\\"Click \\",(0,e.jsx)(n.strong,{children:\'\\"+\\"\'}),\\" icon in bottom right to create new state\\"]}),`\\n`]}),`\\n`,(0,e.jsxs)(n.li,{children:[`\\n`,(0,e.jsx)(n.p,{children:\'Fill in the state name with \\"handover\\" and activate toggle \\\\u201CEnd state\\\\u201D\'}),`\\n`]}),`\\n`]}),`\\n`,(0,e.jsxs)(n.h4,{id:\\"create-bot-response-to-inform-end-user-that-the-handover-request-has-been-received-and-waiting-for-agents-to-reply\\",children:[(0,e.jsx)(n.a,{className:\\"anchor\\",href:\\"#create-bot-response-to-inform-end-user-that-the-handover-request-has-been-received-and-waiting-for-agents-to-reply\\",children:(0,e.jsx)(n.span,{className:\\"icon icon-link\\"})}),\\"Create bot response to inform end-user that the handover request has been received and waiting for agents to reply\\"]}),`\\n`,(0,e.jsxs)(n.ol,{children:[`\\n`,(0,e.jsxs)(n.li,{children:[`\\n`,(0,e.jsxs)(n.p,{children:[\\"Click \\",(0,e.jsx)(n.strong,{children:\'\\"+\\"\'}),\\" in action box to create new action\\"]}),`\\n`]}),`\\n`,(0,e.jsxs)(n.li,{children:[`\\n`,(0,e.jsx)(n.p,{children:\'When all actions available are shown, then choose \\"Text\\"\'}),`\\n`]}),`\\n`,(0,e.jsxs)(n.li,{children:[`\\n`,(0,e.jsx)(n.p,{children:\'Input action name \\"waitForAgent\\"\'}),`\\n`]}),`\\n`,(0,e.jsxs)(n.li,{children:[`\\n`,(0,e.jsxs)(n.p,{children:[\\"Next, click the \\",(0,e.jsx)(n.strong,{children:\\"Add Variant\\"}),\\" button to fill in with this text:\\"]}),`\\n`]}),`\\n`]}),`\\n`,(0,e.jsx)(n.pre,{children:(0,e.jsx)(n.code,{className:\\"code-highlight\\",children:(0,e.jsx)(n.span,{className:\\"code-line\\",children:`Mohon menunggu, ya. Sedang kami hubungkan ke CS Bank ABC yang tersedia! \\\\u{1F60A}\\n`})})}),`\\n`,(0,e.jsxs)(n.ol,{start:\\"5\\",children:[`\\n`,(0,e.jsxs)(n.li,{children:[\\"Click \\",(0,e.jsx)(n.strong,{children:\\"Create Action\\"})]}),`\\n`]}),`\\n`,(0,e.jsxs)(n.h4,{id:\\"use-handover-api-to-send-handover-request-to-omnichat\\",children:[(0,e.jsx)(n.a,{className:\\"anchor\\",href:\\"#use-handover-api-to-send-handover-request-to-omnichat\\",children:(0,e.jsx)(n.span,{className:\\"icon icon-link\\"})}),\\"Use Handover API to send handover request to Omnichat\\"]}),`\\n`,(0,e.jsxs)(n.ol,{children:[`\\n`,(0,e.jsxs)(n.li,{children:[`\\n`,(0,e.jsxs)(n.p,{children:[\\"Create another action by clicking \\",(0,e.jsx)(n.strong,{children:\'\\"Add action\\"\'})]}),`\\n`]}),`\\n`,(0,e.jsxs)(n.li,{children:[`\\n`,(0,e.jsxs)(n.p,{children:[\\"Click \\",(0,e.jsx)(n.strong,{children:\'\\"+\\"\'}),\\" in action box to create new action\\"]}),`\\n`]}),`\\n`,(0,e.jsxs)(n.li,{children:[`\\n`,(0,e.jsx)(n.p,{children:\'Fill in action name with \\"handover\\"\'}),`\\n`]}),`\\n`,(0,e.jsxs)(n.li,{children:[`\\n`,(0,e.jsx)(n.p,{children:\'When all actions available are shown, then choose \\"API\\"\'}),`\\n`]}),`\\n`,(0,e.jsxs)(n.li,{children:[`\\n`,(0,e.jsxs)(n.p,{children:[\\"Choose \\",(0,e.jsx)(n.strong,{children:\\"Handover API\\"})]}),`\\n`]}),`\\n`,(0,e.jsxs)(n.li,{children:[`\\n`,(0,e.jsxs)(n.p,{children:[\\"Click \\",(0,e.jsx)(n.strong,{children:\\"Create Action\\"}),\\" button\\"]}),`\\n`]}),`\\n`,(0,e.jsxs)(n.li,{children:[`\\n`,(0,e.jsxs)(n.p,{children:[\\"To finalize this step when creating a new state, click the \\",(0,e.jsx)(n.strong,{children:\\"Create\\"}),\\" button in the state drawer\\"]}),`\\n`]}),`\\n`]}),`\\n`,(0,e.jsxs)(n.h3,{id:\\"objective-connect-all-greetings-states-to-handoverstate\\",children:[(0,e.jsx)(n.a,{className:\\"anchor\\",href:\\"#objective-connect-all-greetings-states-to-handoverstate\\",children:(0,e.jsx)(n.span,{className:\\"icon icon-link\\"})}),\\"Objective: Connect all greetings states to handoverState\\"]}),`\\n`,(0,e.jsxs)(n.h4,{id:\\"connect-greetings-via-direct-message-to-handover-state\\",children:[(0,e.jsx)(n.a,{className:\\"anchor\\",href:\\"#connect-greetings-via-direct-message-to-handover-state\\",children:(0,e.jsx)(n.span,{className:\\"icon icon-link\\"})}),\\"Connect greetings via direct message to handover state\\"]}),`\\n`,(0,e.jsxs)(n.ol,{children:[`\\n`,(0,e.jsxs)(n.li,{children:[`\\n`,(0,e.jsx)(n.p,{children:\'Pull transition line which start from \\"greetingState\\" to \\\\u201ChandoverState\\\\u201D\'}),`\\n`]}),`\\n`,(0,e.jsxs)(n.li,{children:[`\\n`,(0,e.jsxs)(n.p,{children:[\\"Fill in the \\",(0,e.jsx)(n.strong,{children:\\"Condition\\"}),\\" field:\\"]}),`\\n`]}),`\\n`]}),`\\n`,(0,e.jsx)(n.pre,{children:(0,e.jsx)(n.code,{className:\\"code-highlight\\",children:(0,e.jsx)(n.span,{className:\\"code-line\\",children:`content == \\"4\\"\\n`})})}),`\\n`,(0,e.jsxs)(n.ol,{start:\\"3\\",children:[`\\n`,(0,e.jsx)(n.li,{children:\\"Click Save\\"}),`\\n`]}),`\\n`,(0,e.jsxs)(n.h4,{id:\\"connect-greetings-via-instagram-story-mention-to-handover-state\\",children:[(0,e.jsx)(n.a,{className:\\"anchor\\",href:\\"#connect-greetings-via-instagram-story-mention-to-handover-state\\",children:(0,e.jsx)(n.span,{className:\\"icon icon-link\\"})}),\\"Connect greetings via Instagram story mention to handover state\\"]}),`\\n`,(0,e.jsxs)(n.ol,{children:[`\\n`,(0,e.jsxs)(n.li,{children:[`\\n`,(0,e.jsx)(n.p,{children:\'Pull transition line which start from \\"igMentionedState\\" to \\\\u201ChandoverState\\\\u201D\'}),`\\n`]}),`\\n`,(0,e.jsxs)(n.li,{children:[`\\n`,(0,e.jsxs)(n.p,{children:[\\"Fill in the \\",(0,e.jsx)(n.strong,{children:\\"Condition\\"}),\\" field:\\"]}),`\\n`]}),`\\n`]}),`\\n`,(0,e.jsx)(n.pre,{children:(0,e.jsx)(n.code,{className:\\"code-highlight\\",children:(0,e.jsx)(n.span,{className:\\"code-line\\",children:`content == \\"4\\"\\n`})})}),`\\n`,(0,e.jsxs)(n.ol,{start:\\"3\\",children:[`\\n`,(0,e.jsx)(n.li,{children:\\"Click Save\\"}),`\\n`]}),`\\n`,(0,e.jsxs)(n.h4,{id:\\"connect-greetings-via-instagram-story-reply-to-handover-state\\",children:[(0,e.jsx)(n.a,{className:\\"anchor\\",href:\\"#connect-greetings-via-instagram-story-reply-to-handover-state\\",children:(0,e.jsx)(n.span,{className:\\"icon icon-link\\"})}),\\"Connect greetings via Instagram story reply to handover state\\"]}),`\\n`,(0,e.jsxs)(n.ol,{children:[`\\n`,(0,e.jsxs)(n.li,{children:[`\\n`,(0,e.jsx)(n.p,{children:\'Pull transition line which start from \\"igStoryReplyState\\" to \\\\u201ChandoverState\\\\u201D\'}),`\\n`]}),`\\n`,(0,e.jsxs)(n.li,{children:[`\\n`,(0,e.jsxs)(n.p,{children:[\\"Fill in the \\",(0,e.jsx)(n.strong,{children:\\"Condition\\"}),\\" field:\\"]}),`\\n`]}),`\\n`]}),`\\n`,(0,e.jsx)(n.pre,{children:(0,e.jsx)(n.code,{className:\\"code-highlight\\",children:(0,e.jsx)(n.span,{className:\\"code-line\\",children:`content == \\"4\\"\\n`})})}),`\\n`,(0,e.jsxs)(n.ol,{start:\\"3\\",children:[`\\n`,(0,e.jsx)(n.li,{children:\\"Click Save\\"}),`\\n`]}),`\\n`,(0,e.jsxs)(n.h2,{id:\\"create-confirmation-state\\",children:[(0,e.jsx)(n.a,{className:\\"anchor\\",href:\\"#create-confirmation-state\\",children:(0,e.jsx)(n.span,{className:\\"icon icon-link\\"})}),\\"Create Confirmation State\\"]}),`\\n`,(0,e.jsxs)(n.h3,{id:\\"objective-create-a-state-that-end-user-will-be-asked-to-restart-for-showing-all-menu-or-end-conversation\\",children:[(0,e.jsx)(n.a,{className:\\"anchor\\",href:\\"#objective-create-a-state-that-end-user-will-be-asked-to-restart-for-showing-all-menu-or-end-conversation\\",children:(0,e.jsx)(n.span,{className:\\"icon icon-link\\"})}),\\"Objective: Create a state that end-user will be asked to restart for showing all menu or end conversation\\"]}),`\\n`,(0,e.jsxs)(n.h4,{id:\\"create-confirmstate\\",children:[(0,e.jsx)(n.a,{className:\\"anchor\\",href:\\"#create-confirmstate\\",children:(0,e.jsx)(n.span,{className:\\"icon icon-link\\"})}),\'Create \\"confirmState\\"\']}),`\\n`,(0,e.jsxs)(n.ol,{children:[`\\n`,(0,e.jsxs)(n.li,{children:[`\\n`,(0,e.jsxs)(n.p,{children:[\\"Click \\",(0,e.jsx)(n.strong,{children:\'\\"+\\"\'}),\\" icon in bottom left to create new state\\"]}),`\\n`]}),`\\n`,(0,e.jsxs)(n.li,{children:[`\\n`,(0,e.jsx)(n.p,{children:\'Fill in the state name with \\"confirmState\\"\'}),`\\n`]}),`\\n`,(0,e.jsxs)(n.li,{children:[`\\n`,(0,e.jsxs)(n.p,{children:[\\"Click \\",(0,e.jsx)(n.strong,{children:\'\\"Add action\\",\'}),\\" then click \\\\u201C+\\\\u201D to create new action\\"]}),`\\n`]}),`\\n`,(0,e.jsxs)(n.li,{children:[`\\n`,(0,e.jsx)(n.p,{children:\'Choose Text, then fill in the action name with \\"confirmText\\".\'}),`\\n`]}),`\\n`,(0,e.jsxs)(n.li,{children:[`\\n`,(0,e.jsxs)(n.p,{children:[\\"Next, click the \\",(0,e.jsx)(n.strong,{children:\'\\"Add Variant\\"\'}),\\" button and input the following text:\\"]}),`\\n`]}),`\\n`]}),`\\n`,(0,e.jsx)(n.pre,{children:(0,e.jsx)(n.code,{className:\\"code-highlight\\",children:(0,e.jsx)(n.span,{className:\\"code-line\\",children:`Apakah ada yang ingin kamu tanyakan kembali? Pilih menu yang tersedia:\\\\\\\\n\\\\\\\\n1. Ketik \\"1\\" untuk melihat menu\\\\\\\\n2. Ketik \\\\u201C2\\\\u201D untuk menyelesaikan pembicaraan\\n`})})}),`\\n`,(0,e.jsxs)(n.h4,{id:\\"set-the-state-into-self-transition-5\\",children:[(0,e.jsx)(n.a,{className:\\"anchor\\",href:\\"#set-the-state-into-self-transition-5\\",children:(0,e.jsx)(n.span,{className:\\"icon icon-link\\"})}),\\"Set the state into self-transition\\"]}),`\\n`,(0,e.jsx)(n.p,{children:\\"The self-transition will make the actions under state will be repeatedly shown if end-users give an incorrect answer\\"}),`\\n`,(0,e.jsxs)(n.ol,{children:[`\\n`,(0,e.jsxs)(n.li,{children:[`\\n`,(0,e.jsxs)(n.p,{children:[\\"Go to tab \\",(0,e.jsx)(n.strong,{children:\\"Transitions\\"})]}),`\\n`]}),`\\n`,(0,e.jsxs)(n.li,{children:[`\\n`,(0,e.jsx)(n.p,{children:\\"Turn on on the Self Transition toggle\\"}),`\\n`]}),`\\n`,(0,e.jsxs)(n.li,{children:[`\\n`,(0,e.jsx)(n.p,{children:\\"Then, click Create to finalize the state\\"}),`\\n`]}),`\\n`]}),`\\n`,(0,e.jsxs)(n.h3,{id:\\"objective-create-an-intent-to-catch-command-for-executing-next-state\\",children:[(0,e.jsx)(n.a,{className:\\"anchor\\",href:\\"#objective-create-an-intent-to-catch-command-for-executing-next-state\\",children:(0,e.jsx)(n.span,{className:\\"icon icon-link\\"})}),\\"Objective: Create an intent to catch command for executing next state\\"]}),`\\n`,(0,e.jsxs)(n.ol,{children:[`\\n`,(0,e.jsxs)(n.li,{children:[`\\n`,(0,e.jsx)(n.p,{children:\\"Click the Intent tab which is placed next to the Conversation Flows sidebar.\\"}),`\\n`]}),`\\n`,(0,e.jsxs)(n.li,{children:[`\\n`,(0,e.jsxs)(n.p,{children:[\\"Click \\",(0,e.jsx)(n.strong,{children:\\"Create Intent\\"}),\\" button\\"]}),`\\n`]}),`\\n`,(0,e.jsxs)(n.li,{children:[`\\n`,(0,e.jsx)(n.p,{children:\'Fill in the intent as follows. The choice of \\"Intent type\\" is command, which means it will catch command only. On condition, it fills in with content with \\\\u201Cnext\\\\u201D which is a command that is sent from bot after executed responses such as quick replies, carousel, and text.\'}),`\\n`]}),`\\n`]}),`\\n`,(0,e.jsx)(a,{caption:{title:\\"Figure 8.\\",description:\\"Create intent to catch command for triggering next flow\\"},src:\\"/assets/images/tutorials/ig-handover/image_8.webp\\",alt:\\"Simple Handover\\",naturalHeight:862,naturalWidth:1724}),`\\n`,(0,e.jsxs)(n.ol,{start:\\"4\\",children:[`\\n`,(0,e.jsx)(n.li,{children:\\"Click Create to finalize\\"}),`\\n`]}),`\\n`,(0,e.jsxs)(n.h3,{id:\\"objective-connect-all-bot-responses-states-to-confirmstate\\",children:[(0,e.jsx)(n.a,{className:\\"anchor\\",href:\\"#objective-connect-all-bot-responses-states-to-confirmstate\\",children:(0,e.jsx)(n.span,{className:\\"icon icon-link\\"})}),\\"Objective: Connect all bot responses states to confirmState\\"]}),`\\n`,(0,e.jsxs)(n.h4,{id:\\"connect-quick-replies-responses-states-to-confirmation-state\\",children:[(0,e.jsx)(n.a,{className:\\"anchor\\",href:\\"#connect-quick-replies-responses-states-to-confirmation-state\\",children:(0,e.jsx)(n.span,{className:\\"icon icon-link\\"})}),\\"Connect quick replies responses states to confirmation state\\"]}),`\\n`,(0,e.jsxs)(n.ol,{children:[`\\n`,(0,e.jsxs)(n.li,{children:[`\\n`,(0,e.jsx)(n.p,{children:\'Pull transition line which starts from \\"rekeningBaruState\\" to \\\\u201CconfirmState\\\\u201D\'}),`\\n`]}),`\\n`,(0,e.jsxs)(n.li,{children:[`\\n`,(0,e.jsxs)(n.p,{children:[\\"Fill in the \\",(0,e.jsx)(n.strong,{children:\\"Condition\\"}),\\" field:\\"]}),`\\n`]}),`\\n`]}),`\\n`,(0,e.jsx)(n.pre,{children:(0,e.jsx)(n.code,{className:\\"code-highlight\\",children:(0,e.jsx)(n.span,{className:\\"code-line\\",children:`intent == \\"nextIntent\\"\\n`})})}),`\\n`,(0,e.jsxs)(n.ol,{start:\\"3\\",children:[`\\n`,(0,e.jsxs)(n.li,{children:[`\\n`,(0,e.jsx)(n.p,{children:\\"Click Save\\"}),`\\n`]}),`\\n`,(0,e.jsxs)(n.li,{children:[`\\n`,(0,e.jsx)(n.p,{children:\'Next, pull transition line which starts from \\"kartuKreditState\\" to \\\\u201CconfirmState\\\\u201D\'}),`\\n`]}),`\\n`,(0,e.jsxs)(n.li,{children:[`\\n`,(0,e.jsxs)(n.p,{children:[\\"Fill in the \\",(0,e.jsx)(n.strong,{children:\\"Condition\\"}),\\" field:\\"]}),`\\n`]}),`\\n`]}),`\\n`,(0,e.jsx)(n.pre,{children:(0,e.jsx)(n.code,{className:\\"code-highlight\\",children:(0,e.jsx)(n.span,{className:\\"code-line\\",children:`intent == \\"nextIntent\\"\\n`})})}),`\\n`,(0,e.jsxs)(n.ol,{start:\\"6\\",children:[`\\n`,(0,e.jsx)(n.li,{children:\\"Click Save\\"}),`\\n`]}),`\\n`,(0,e.jsxs)(n.h4,{id:\\"connect-carousel-responses-to-confirmation-state\\",children:[(0,e.jsx)(n.a,{className:\\"anchor\\",href:\\"#connect-carousel-responses-to-confirmation-state\\",children:(0,e.jsx)(n.span,{className:\\"icon icon-link\\"})}),\\"Connect carousel responses to confirmation state\\"]}),`\\n`,(0,e.jsxs)(n.ol,{children:[`\\n`,(0,e.jsxs)(n.li,{children:[`\\n`,(0,e.jsx)(n.p,{children:\'Pull transition line which starts from \\"b1g1State\\" to \\\\u201CconfirmState\\\\u201D\'}),`\\n`]}),`\\n`,(0,e.jsxs)(n.li,{children:[`\\n`,(0,e.jsxs)(n.p,{children:[\\"Fill in the \\",(0,e.jsx)(n.strong,{children:\\"Condition\\"}),\\" field:\\"]}),`\\n`]}),`\\n`]}),`\\n`,(0,e.jsx)(n.pre,{children:(0,e.jsx)(n.code,{className:\\"code-highlight\\",children:(0,e.jsx)(n.span,{className:\\"code-line\\",children:`intent == \\"nextIntent\\"\\n`})})}),`\\n`,(0,e.jsxs)(n.ol,{start:\\"3\\",children:[`\\n`,(0,e.jsxs)(n.li,{children:[`\\n`,(0,e.jsx)(n.p,{children:\\"Click Save\\"}),`\\n`]}),`\\n`,(0,e.jsxs)(n.li,{children:[`\\n`,(0,e.jsx)(n.p,{children:\'Next, pull transition line which start from \\"discState\\" to \\\\u201CconfirmState\\\\u201D\'}),`\\n`]}),`\\n`,(0,e.jsxs)(n.li,{children:[`\\n`,(0,e.jsxs)(n.p,{children:[\\"Fill in the \\",(0,e.jsx)(n.strong,{children:\\"Condition\\"}),\\" field:\\"]}),`\\n`]}),`\\n`]}),`\\n`,(0,e.jsx)(n.pre,{children:(0,e.jsx)(n.code,{className:\\"code-highlight\\",children:(0,e.jsx)(n.span,{className:\\"code-line\\",children:`intent == \\"nextIntent\\"\\n`})})}),`\\n`,(0,e.jsxs)(n.ol,{start:\\"6\\",children:[`\\n`,(0,e.jsx)(n.li,{children:\\"Click Save\\"}),`\\n`]}),`\\n`,(0,e.jsxs)(n.h4,{id:\\"connect-locationstate-to-confirmstate\\",children:[(0,e.jsx)(n.a,{className:\\"anchor\\",href:\\"#connect-locationstate-to-confirmstate\\",children:(0,e.jsx)(n.span,{className:\\"icon icon-link\\"})}),\'Connect \\"locationState\\" to \\\\u201CconfirmState\\\\u201D\']}),`\\n`,(0,e.jsxs)(n.ol,{children:[`\\n`,(0,e.jsxs)(n.li,{children:[`\\n`,(0,e.jsx)(n.p,{children:\'Pull transition line which start from \\"locationState\\" to \\\\u201CconfirmState\\\\u201D\'}),`\\n`]}),`\\n`,(0,e.jsxs)(n.li,{children:[`\\n`,(0,e.jsxs)(n.p,{children:[\\"Fill in the \\",(0,e.jsx)(n.strong,{children:\\"Condition\\"}),\\" field:\\"]}),`\\n`]}),`\\n`]}),`\\n`,(0,e.jsx)(n.pre,{children:(0,e.jsx)(n.code,{className:\\"code-highlight\\",children:(0,e.jsx)(n.span,{className:\\"code-line\\",children:`intent == \\"nextIntent\\"\\n`})})}),`\\n`,(0,e.jsxs)(n.ol,{start:\\"3\\",children:[`\\n`,(0,e.jsx)(n.li,{children:\\"Click Save\\"}),`\\n`]}),`\\n`,(0,e.jsxs)(n.h3,{id:\\"objective-create-state-to-restart-menu\\",children:[(0,e.jsx)(n.a,{className:\\"anchor\\",href:\\"#objective-create-state-to-restart-menu\\",children:(0,e.jsx)(n.span,{className:\\"icon icon-link\\"})}),\\"Objective: Create state to restart menu\\"]}),`\\n`,(0,e.jsxs)(n.h4,{id:\\"create-a-backtomenu-state-to-restart-menu\\",children:[(0,e.jsx)(n.a,{className:\\"anchor\\",href:\\"#create-a-backtomenu-state-to-restart-menu\\",children:(0,e.jsx)(n.span,{className:\\"icon icon-link\\"})}),\'Create a \\"backToMenu\\" state to restart menu\']}),`\\n`,(0,e.jsxs)(n.ol,{children:[`\\n`,(0,e.jsxs)(n.li,{children:[`\\n`,(0,e.jsxs)(n.p,{children:[\\"Click \\",(0,e.jsx)(n.strong,{children:\'\\"+\\"\'}),\\" icon in bottom left to create a new state\\"]}),`\\n`]}),`\\n`,(0,e.jsxs)(n.li,{children:[`\\n`,(0,e.jsx)(n.p,{children:\'Fill in the state name with \\"backToMenu\\"\'}),`\\n`]}),`\\n`,(0,e.jsxs)(n.li,{children:[`\\n`,(0,e.jsxs)(n.p,{children:[\\"Turn on toggle \\",(0,e.jsx)(n.strong,{children:\\"End State\\"})]}),`\\n`]}),`\\n`,(0,e.jsxs)(n.li,{children:[`\\n`,(0,e.jsxs)(n.p,{children:[\\"Click \\",(0,e.jsx)(n.strong,{children:\'\\"Add action\\",\'}),\\" then click \\\\u201C+\\\\u201D to create a new action\\"]}),`\\n`]}),`\\n`,(0,e.jsxs)(n.li,{children:[`\\n`,(0,e.jsx)(n.p,{children:\'Choose Command, then fill in the action name with \\"backToMenu\\".\'}),`\\n`]}),`\\n`,(0,e.jsxs)(n.li,{children:[`\\n`,(0,e.jsx)(n.p,{children:\\"Next, fill in the Command with:\\"}),`\\n`]}),`\\n`]}),`\\n`,(0,e.jsx)(n.pre,{children:(0,e.jsx)(n.code,{className:\\"code-highlight\\",children:(0,e.jsx)(n.span,{className:\\"code-line\\",children:`toMenu\\n`})})}),`\\n`,(0,e.jsxs)(n.ol,{start:\\"7\\",children:[`\\n`,(0,e.jsx)(n.li,{children:\\"Click Create to finalize\\"}),`\\n`]}),`\\n`,(0,e.jsxs)(n.h4,{id:\\"create-tomenuintent-intent\\",children:[(0,e.jsx)(n.a,{className:\\"anchor\\",href:\\"#create-tomenuintent-intent\\",children:(0,e.jsx)(n.span,{className:\\"icon icon-link\\"})}),\'Create \\"toMenuIntent\\" intent\']}),`\\n`,(0,e.jsxs)(n.ol,{children:[`\\n`,(0,e.jsxs)(n.li,{children:[`\\n`,(0,e.jsx)(n.p,{children:\\"Click the Intent tab which is placed next to the Conversation Flows sidebar.\\"}),`\\n`]}),`\\n`,(0,e.jsxs)(n.li,{children:[`\\n`,(0,e.jsxs)(n.p,{children:[\\"Click \\",(0,e.jsx)(n.strong,{children:\\"Create Intent\\"}),\\" button\\"]}),`\\n`]}),`\\n`,(0,e.jsxs)(n.li,{children:[`\\n`,(0,e.jsx)(n.p,{children:\\"Fill in the intent as follows. This intent will trigger show main menu as bot response\\"}),`\\n`]}),`\\n`]}),`\\n`,(0,e.jsx)(a,{caption:{title:\\"Figure 9.\\",description:\\"Create intent to catch command for showing main menu again\\"},src:\\"/assets/images/tutorials/ig-handover/image_9.webp\\",alt:\\"Simple Handover\\",naturalHeight:868,naturalWidth:1466}),`\\n`,(0,e.jsxs)(n.ol,{start:\\"4\\",children:[`\\n`,(0,e.jsxs)(n.li,{children:[\\"Then, click \\",(0,e.jsx)(n.strong,{children:\\"Create\\"}),\\".\\"]}),`\\n`]}),`\\n`,(0,e.jsxs)(n.h4,{id:\\"update-transition-condition-from-init-to-greetingsstate\\",children:[(0,e.jsx)(n.a,{className:\\"anchor\\",href:\\"#update-transition-condition-from-init-to-greetingsstate\\",children:(0,e.jsx)(n.span,{className:\\"icon icon-link\\"})}),\'Update transition condition from \\"init\\" to \\\\u201CgreetingsState\\\\u201D\']}),`\\n`,(0,e.jsx)(n.p,{children:\\"In this step, we will update transition condition and use toMenuIntent as one of the conditions. It is because this intent, if executed, will trigger a greeting response and showing the menu in bot.\\"}),`\\n`,(0,e.jsxs)(n.ol,{children:[`\\n`,(0,e.jsxs)(n.li,{children:[`\\n`,(0,e.jsx)(n.p,{children:\'Click transition between \\"init\\" and \\\\u201CgreetingState\\\\u201D\'}),`\\n`]}),`\\n`,(0,e.jsxs)(n.li,{children:[`\\n`,(0,e.jsx)(n.p,{children:\\"Edit drawer will be shown\\"}),`\\n`]}),`\\n`,(0,e.jsxs)(n.li,{children:[`\\n`,(0,e.jsx)(n.p,{children:\\"Update condition field into this\\"}),`\\n`]}),`\\n`]}),`\\n`,(0,e.jsx)(n.pre,{children:(0,e.jsx)(n.code,{className:\\"code-highlight\\",children:(0,e.jsx)(n.span,{className:\\"code-line\\",children:`intent == \\"greetingsIntent\\" || intent == \\"toMenuIntent\\"\\n`})})}),`\\n`,(0,e.jsxs)(n.ol,{start:\\"4\\",children:[`\\n`,(0,e.jsx)(n.li,{children:\\"Click Save to update\\"}),`\\n`]}),`\\n`,(0,e.jsxs)(n.h3,{id:\\"objective-create-state-to-end-conversation\\",children:[(0,e.jsx)(n.a,{className:\\"anchor\\",href:\\"#objective-create-state-to-end-conversation\\",children:(0,e.jsx)(n.span,{className:\\"icon icon-link\\"})}),\\"Objective: Create state to end conversation\\"]}),`\\n`,(0,e.jsxs)(n.h4,{id:\\"create-a-bye-state-to-end-conversation-and-show-thank-you-response\\",children:[(0,e.jsx)(n.a,{className:\\"anchor\\",href:\\"#create-a-bye-state-to-end-conversation-and-show-thank-you-response\\",children:(0,e.jsx)(n.span,{className:\\"icon icon-link\\"})}),\'Create a \\"bye\\" state to end conversation and show thank you response\']}),`\\n`,(0,e.jsxs)(n.ol,{children:[`\\n`,(0,e.jsxs)(n.li,{children:[`\\n`,(0,e.jsxs)(n.p,{children:[\\"Click \\",(0,e.jsx)(n.strong,{children:\'\\"+\\"\'}),\\" icon in bottom left to create a new state\\"]}),`\\n`]}),`\\n`,(0,e.jsxs)(n.li,{children:[`\\n`,(0,e.jsx)(n.p,{children:\'Fill in the state name with \\"bye\\"\'}),`\\n`]}),`\\n`,(0,e.jsxs)(n.li,{children:[`\\n`,(0,e.jsxs)(n.p,{children:[\\"Turn on toggle \\",(0,e.jsx)(n.strong,{children:\\"End State\\"})]}),`\\n`]}),`\\n`,(0,e.jsxs)(n.li,{children:[`\\n`,(0,e.jsxs)(n.p,{children:[\\"Click \\",(0,e.jsx)(n.strong,{children:\'\\"Add action\\",\'}),\\" then click \\\\u201C+\\\\u201D to create a new action\\"]}),`\\n`]}),`\\n`,(0,e.jsxs)(n.li,{children:[`\\n`,(0,e.jsx)(n.p,{children:\'Choose Text, then fill in the action name with \\"bye\\".\'}),`\\n`]}),`\\n`,(0,e.jsxs)(n.li,{children:[`\\n`,(0,e.jsxs)(n.p,{children:[\\"Click \\",(0,e.jsx)(n.strong,{children:\\"Add Variant\\"}),\\" button\\"]}),`\\n`]}),`\\n`,(0,e.jsxs)(n.li,{children:[`\\n`,(0,e.jsx)(n.p,{children:\\"Next, fill in the Text with:\\"}),`\\n`]}),`\\n`]}),`\\n`,(0,e.jsx)(n.pre,{children:(0,e.jsx)(n.code,{className:\\"code-highlight\\",children:(0,e.jsx)(n.span,{className:\\"code-line\\",children:`Terima kasih sudah menghubungi Bank ABC \\\\u{1F60A}\\n`})})}),`\\n`,(0,e.jsxs)(n.ol,{start:\\"8\\",children:[`\\n`,(0,e.jsxs)(n.li,{children:[\\"Click \\",(0,e.jsx)(n.strong,{children:\\"Create\\"}),\\" to finalize\\"]}),`\\n`]}),`\\n`,(0,e.jsxs)(n.h3,{id:\\"objective-connect-transition-between-confirmstate-to-backtomenu-and-bye-state\\",children:[(0,e.jsx)(n.a,{className:\\"anchor\\",href:\\"#objective-connect-transition-between-confirmstate-to-backtomenu-and-bye-state\\",children:(0,e.jsx)(n.span,{className:\\"icon icon-link\\"})}),\\"Objective: Connect transition between confirmState to backToMenu and bye state\\"]}),`\\n`,(0,e.jsxs)(n.ol,{children:[`\\n`,(0,e.jsxs)(n.li,{children:[`\\n`,(0,e.jsx)(n.p,{children:\'Pull transition line which starts from \\"confirmState\\" to \\\\u201CbackToMenu\\\\u201D\'}),`\\n`]}),`\\n`,(0,e.jsxs)(n.li,{children:[`\\n`,(0,e.jsxs)(n.p,{children:[\\"Fill in the \\",(0,e.jsx)(n.strong,{children:\\"Condition\\"}),\\" field:\\"]}),`\\n`]}),`\\n`]}),`\\n`,(0,e.jsx)(n.pre,{children:(0,e.jsx)(n.code,{className:\\"code-highlight\\",children:(0,e.jsx)(n.span,{className:\\"code-line\\",children:`content == \\"1\\"\\n`})})}),`\\n`,(0,e.jsxs)(n.ol,{start:\\"4\\",children:[`\\n`,(0,e.jsxs)(n.li,{children:[`\\n`,(0,e.jsx)(n.p,{children:\\"Click Save\\"}),`\\n`]}),`\\n`,(0,e.jsxs)(n.li,{children:[`\\n`,(0,e.jsx)(n.p,{children:\'Next, pull transition line which start from \\"confirmState\\" to \\\\u201Cbye\\\\u201D\'}),`\\n`]}),`\\n`,(0,e.jsxs)(n.li,{children:[`\\n`,(0,e.jsxs)(n.p,{children:[\\"Fill in the \\",(0,e.jsx)(n.strong,{children:\\"Condition\\"}),\\" field:\\"]}),`\\n`]}),`\\n`]}),`\\n`,(0,e.jsx)(n.pre,{children:(0,e.jsx)(n.code,{className:\\"code-highlight\\",children:(0,e.jsx)(n.span,{className:\\"code-line\\",children:`content == \\"2\\"\\n`})})}),`\\n`,(0,e.jsxs)(n.ol,{start:\\"7\\",children:[`\\n`,(0,e.jsx)(n.li,{children:\\"Click Save\\"}),`\\n`]}),`\\n`,(0,e.jsxs)(n.h2,{id:\\"create-fallback-intent\\",children:[(0,e.jsx)(n.a,{className:\\"anchor\\",href:\\"#create-fallback-intent\\",children:(0,e.jsx)(n.span,{className:\\"icon icon-link\\"})}),\\"Create Fallback Intent\\"]}),`\\n`,(0,e.jsxs)(n.ol,{children:[`\\n`,(0,e.jsxs)(n.li,{children:[`\\n`,(0,e.jsx)(n.p,{children:\\"Click the Intent tab which is placed next to the Conversation Flows sidebar.\\"}),`\\n`]}),`\\n`,(0,e.jsxs)(n.li,{children:[`\\n`,(0,e.jsxs)(n.p,{children:[\\"Click \\",(0,e.jsx)(n.strong,{children:\\"Create Intent\\"}),\\" button\\"]}),`\\n`]}),`\\n`,(0,e.jsxs)(n.li,{children:[`\\n`,(0,e.jsx)(n.p,{children:\'Fill in the intent as follows. We set up the intent into \\"As Fallback\\", which means the intent will be executed as fallback. It becomes a new layer of fallback in Handover flow, before literally fallback-ed to fallback flow.\'}),`\\n`]}),`\\n`]}),`\\n`,(0,e.jsx)(a,{caption:{title:\\"Figure 10.\\",description:\'Create intent for being \\"guard\\" before fallback flow\'},src:\\"/assets/images/tutorials/ig-handover/image_10.webp\\",alt:\\"Simple Handover\\",naturalHeight:452,naturalWidth:1150}),`\\n`,(0,e.jsxs)(n.ol,{start:\\"4\\",children:[`\\n`,(0,e.jsx)(n.li,{children:\\"Click Create to finalize\\"}),`\\n`]}),`\\n`,(0,e.jsxs)(n.h2,{id:\\"finalize-your-new-bot\\",children:[(0,e.jsx)(n.a,{className:\\"anchor\\",href:\\"#finalize-your-new-bot\\",children:(0,e.jsx)(n.span,{className:\\"icon icon-link\\"})}),\\"Finalize Your New Bot\\"]}),`\\n`,(0,e.jsxs)(n.h3,{id:\\"objective-publish-your-bot-to-save-the-chatbot-flow\\",children:[(0,e.jsx)(n.a,{className:\\"anchor\\",href:\\"#objective-publish-your-bot-to-save-the-chatbot-flow\\",children:(0,e.jsx)(n.span,{className:\\"icon icon-link\\"})}),\\"Objective: Publish your bot to save the chatbot flow\\"]}),`\\n`,(0,e.jsxs)(n.ol,{children:[`\\n`,(0,e.jsxs)(n.li,{children:[`\\n`,(0,e.jsxs)(n.p,{children:[\\"Click on the \\",(0,e.jsx)(n.strong,{children:\'\\"Publish\\"\'}),\\" button which is placed on top right corner\\"]}),`\\n`]}),`\\n`,(0,e.jsxs)(n.li,{children:[`\\n`,(0,e.jsxs)(n.p,{children:[\\"Fill in the \\",(0,e.jsx)(n.strong,{children:\\"changelog\\"}),\'. You can input \\"Initial version\\" in the changelog\']}),`\\n`]}),`\\n`,(0,e.jsxs)(n.li,{children:[`\\n`,(0,e.jsxs)(n.p,{children:[\\"Click \\",(0,e.jsx)(n.strong,{children:\\"Publish\\"}),\\" to save the changelog. Lastly, your final chatbot flow will be like this:\\"]}),`\\n`]}),`\\n`]}),`\\n`,(0,e.jsx)(a,{caption:{title:\\"Figure 11.\\",description:\\"Final conversation flow\\"},src:\\"/assets/images/tutorials/ig-handover/image_11.webp\\",alt:\\"Simple Handover\\",naturalHeight:748,naturalWidth:2048}),`\\n`,(0,e.jsxs)(n.h3,{id:\\"objective-testing-your-bot-in-emulator\\",children:[(0,e.jsx)(n.a,{className:\\"anchor\\",href:\\"#objective-testing-your-bot-in-emulator\\",children:(0,e.jsx)(n.span,{className:\\"icon icon-link\\"})}),\\"Objective: Testing your bot in emulator\\"]}),`\\n`,(0,e.jsxs)(n.ol,{children:[`\\n`,(0,e.jsxs)(n.li,{children:[`\\n`,(0,e.jsxs)(n.p,{children:[\\"On the bottom of your right screen, there is a small button named \\",(0,e.jsx)(n.strong,{children:\'\\"Test Chatbot\\".\'}),\\" Click the \\",(0,e.jsx)(n.strong,{children:\\"button\\"}),\\" to start.\\"]}),`\\n`]}),`\\n`,(0,e.jsxs)(n.li,{children:[`\\n`,(0,e.jsx)(n.p,{children:\'You can try to test your bot by inputting a message in the text bot. Say \\"hi\\" to your bot. If it succeeds, your bot will reply as follows\'}),`\\n`]}),`\\n`]}),`\\n`,(0,e.jsx)(a,{caption:{title:\\"Figure 12.\\",description:\'Testing your bot by typing \\"hai\\"\'},src:\\"/assets/images/tutorials/ig-handover/image_12.webp\\",alt:\\"Simple Handover\\",naturalHeight:1042,naturalWidth:2048}),`\\n`,(0,e.jsx)(a,{caption:{title:\\"Figure 13.\\",description:\\"Testing another action response, this example is for text action\\"},src:\\"/assets/images/tutorials/ig-handover/image_13.webp\\",alt:\\"Simple Handover\\",naturalHeight:1140,naturalWidth:2048}),`\\n`,(0,e.jsxs)(n.ol,{start:\\"3\\",children:[`\\n`,(0,e.jsxs)(n.li,{children:[\\"If you want to \\",(0,e.jsx)(n.strong,{children:\\"restart\\"}),\\" the session, click refresh icon which is placed at the bottom\\"]}),`\\n`]}),`\\n`,(0,e.jsxs)(n.h3,{id:\\"objective-deploy-your-bot\\",children:[(0,e.jsx)(n.a,{className:\\"anchor\\",href:\\"#objective-deploy-your-bot\\",children:(0,e.jsx)(n.span,{className:\\"icon icon-link\\"})}),\\"Objective: Deploy your bot\\"]}),`\\n`,(0,e.jsxs)(n.h4,{id:\\"create-new-deployment\\",children:[(0,e.jsx)(n.a,{className:\\"anchor\\",href:\\"#create-new-deployment\\",children:(0,e.jsx)(n.span,{className:\\"icon icon-link\\"})}),\\"Create new deployment\\"]}),`\\n`,(0,e.jsxs)(n.ol,{children:[`\\n`,(0,e.jsxs)(n.li,{children:[`\\n`,(0,e.jsxs)(n.p,{children:[\\"Go to the \\",(0,e.jsx)(n.strong,{children:\'\\"Deploy\\"\'}),\\" menu in the left sidebar\\"]}),`\\n`]}),`\\n`,(0,e.jsxs)(n.li,{children:[`\\n`,(0,e.jsxs)(n.p,{children:[\\"On this page, click on the \\",(0,e.jsx)(n.strong,{children:\'\\"New Deployment\\"\'}),\\" button which is placed in the top right corner. If you successfully clicked, it will show a create deployment drawer\\"]}),`\\n`]}),`\\n`,(0,e.jsxs)(n.li,{children:[`\\n`,(0,e.jsx)(n.p,{children:\\"Choose any deployment version you want to deploy and fill in the changelog. Or you can simply follow this screenshot\\"}),`\\n`]}),`\\n`]}),`\\n`,(0,e.jsx)(a,{caption:{title:\\"Figure 14.\\",description:\\"Create new deployment\\"},src:\\"/assets/images/tutorials/ig-handover/image_14.webp\\",alt:\\"Simple Handover\\",naturalHeight:1890,naturalWidth:1338}),`\\n`,(0,e.jsxs)(n.ol,{start:\\"4\\",children:[`\\n`,(0,e.jsxs)(n.li,{children:[\\"Click \\",(0,e.jsx)(n.strong,{children:\\"Submit\\"}),\\" to finish the deployment\\"]}),`\\n`]}),`\\n`,(0,e.jsxs)(n.h4,{id:\\"create-a-new-environment-as-prerequisites-to-deploy-the-bot-to-channel\\",children:[(0,e.jsx)(n.a,{className:\\"anchor\\",href:\\"#create-a-new-environment-as-prerequisites-to-deploy-the-bot-to-channel\\",children:(0,e.jsx)(n.span,{className:\\"icon icon-link\\"})}),\\"Create a new environment as prerequisites to deploy the bot to channel\\"]}),`\\n`,(0,e.jsxs)(n.ol,{children:[`\\n`,(0,e.jsxs)(n.li,{children:[\\"Go to the \\",(0,e.jsx)(n.strong,{children:\\"Environment\\"}),\' menu which is placed under the current menu (\\"Overview\\"). If you successfully entered the Environment menu, you will see a page like this. These 3 environments represent that your chatbot will be tested in development or staging first before go live as in Production stage.\']}),`\\n`]}),`\\n`,(0,e.jsx)(a,{caption:{title:\\"Figure 15.\\",description:\\"Set up environment, then set up Omnichat channel\\"},src:\\"/assets/images/tutorials/ig-handover/image_15.webp\\",alt:\\"Simple Handover\\",naturalHeight:647,naturalWidth:2048}),`\\n`,(0,e.jsxs)(n.ol,{start:\\"2\\",children:[`\\n`,(0,e.jsxs)(n.li,{children:[`\\n`,(0,e.jsxs)(n.p,{children:[\\"Click the \\",(0,e.jsx)(n.strong,{children:\\"Create Environment\\"}),\\" button in the Development environment and you will see a drawer to create a new environment\\"]}),`\\n`]}),`\\n`,(0,e.jsxs)(n.li,{children:[`\\n`,(0,e.jsxs)(n.p,{children:[\\"Choose the \\",(0,e.jsx)(n.strong,{children:\\"development version\\"}),\\" you want to (in this tutorial we will use the 1.0.0 version)\\"]}),`\\n`]}),`\\n`,(0,e.jsxs)(n.li,{children:[`\\n`,(0,e.jsxs)(n.p,{children:[\\"Fill in the \\",(0,e.jsx)(n.strong,{children:\\"environment URL\\"}),\\". This environment URL will be useful if you use our CMS feature, \\",(0,e.jsx)(n.a,{href:\\"https://docs.kata.ai/cms-studio/about/\'\\",children:\\"learn more about CMS\\"}),\\".\\"]}),`\\n`]}),`\\n`,(0,e.jsxs)(n.li,{children:[`\\n`,(0,e.jsxs)(n.p,{children:[\\"Click \\",(0,e.jsx)(n.strong,{children:\\"Create\\"}),\\" to finalize\\"]}),`\\n`]}),`\\n`,(0,e.jsxs)(n.li,{children:[`\\n`,(0,e.jsxs)(n.p,{children:[\\"You will notice the button is changed into the Create \\",(0,e.jsx)(n.strong,{children:\\"Channel\\"}),\\" button.\\"]}),`\\n`]}),`\\n`]}),`\\n`,(0,e.jsxs)(n.p,{children:[\\"In this step, you will need an Omnichat \\",(0,e.jsx)(\\"a\\",{href:\\"https://kata-omnichat.kata.ai\\",target:\\"_blank\\",children:(0,e.jsx)(n.a,{href:\\"https://omnichat.kata.ai\\",children:\\"https://omnichat.kata.ai\\"})}),\\" account and an Omnichat inbox to deploy the bot. Let\\\\u2019s get started!\\"]}),`\\n`,(0,e.jsxs)(n.h2,{id:\\"create-inbox-in-omnichat\\",children:[(0,e.jsx)(n.a,{className:\\"anchor\\",href:\\"#create-inbox-in-omnichat\\",children:(0,e.jsx)(n.span,{className:\\"icon icon-link\\"})}),\\"Create Inbox in Omnichat\\"]}),`\\n`,(0,e.jsx)(n.p,{children:\\"Follow these tutorials in Omnichat to continue:\\"}),`\\n`,(0,e.jsxs)(n.ol,{children:[`\\n`,(0,e.jsxs)(n.li,{children:[`\\n`,(0,e.jsxs)(n.p,{children:[\\"Register a new Omnichat account in Omnichat. Learn more about how to \\",(0,e.jsx)(n.a,{href:\\"/kata-omnichat/getting-started/register-your-account-first\\",children:\\"register account in Omnichat\\"})]}),`\\n`]}),`\\n`,(0,e.jsxs)(n.li,{children:[`\\n`,(0,e.jsxs)(n.p,{children:[\\"Create a new channel inbox. Learn more about \\",(0,e.jsx)(n.a,{href:\\"/kata-omnichat/getting-started/connect-your-instagram-messaging-inbox\\",children:\\"create inbox in Omnichat\\"})]}),`\\n`,(0,e.jsxs)(n.ol,{children:[`\\n`,(0,e.jsxs)(n.li,{children:[`\\n`,(0,e.jsxs)(n.p,{children:[\\"For IGDM chatbot: Section \\",(0,e.jsx)(n.strong,{children:\\"How to Set Up > Connect to Instagram Messaging\\"})]}),`\\n`]}),`\\n`,(0,e.jsxs)(n.li,{children:[`\\n`,(0,e.jsxs)(n.p,{children:[\\"For WA chatbot: Section \\",(0,e.jsx)(n.strong,{children:\\"How to Set Up > Connect to Whatsapp Messaging\\"})]}),`\\n`]}),`\\n`]}),`\\n`]}),`\\n`]}),`\\n`,(0,e.jsxs)(n.h2,{id:\\"create-agent-bot-in-omnichat\\",children:[(0,e.jsx)(n.a,{className:\\"anchor\\",href:\\"#create-agent-bot-in-omnichat\\",children:(0,e.jsx)(n.span,{className:\\"icon icon-link\\"})}),\\"Create Agent Bot in Omnichat\\"]}),`\\n`,(0,e.jsxs)(n.p,{children:[\\"Follow the tutorial in Omnichat to continue. Continue to \\",(0,e.jsx)(n.a,{href:\\"/kata-omnichat/configure-your-agent-chatbot/setup-agent-bot-in-kata-omnichat\\",children:\\"create agent bot\\"}),\\".\\"]}),`\\n`,(0,e.jsxs)(n.h3,{id:\\"connect-bot-to-omnichat\\",children:[(0,e.jsx)(n.a,{className:\\"anchor\\",href:\\"#connect-bot-to-omnichat\\",children:(0,e.jsx)(n.span,{className:\\"icon icon-link\\"})}),\\"Connect Bot to Omnichat\\"]}),`\\n`,(0,e.jsxs)(n.ol,{children:[`\\n`,(0,e.jsx)(n.li,{children:\\"If you succeed to follow the above tutorials, you will see an access token generated in Omnichat that needs to be pasted into the Platform. The screenshot below\\"}),`\\n`]}),`\\n`,(0,e.jsx)(a,{caption:{title:\\"Figure 16.\\",description:\\"Create agent bot\\"},src:\\"/assets/images/tutorials/ig-handover/image_16.webp\\",alt:\\"Simple Handover\\",naturalHeight:967,naturalWidth:2048}),`\\n`,(0,e.jsxs)(n.ol,{start:\\"2\\",children:[`\\n`,(0,e.jsxs)(n.li,{children:[`\\n`,(0,e.jsxs)(n.p,{children:[\\"Next, open the Kata Platform URL \\",(0,e.jsx)(\\"a\\",{href:\\"https://platform.kata.ai\\",target:\\"_blank\\",children:(0,e.jsx)(n.a,{href:\\"https://platform.kata.ai\\",children:\\"https://platform.kata.ai\\"})}),\\" and do login\\"]}),`\\n`]}),`\\n`,(0,e.jsxs)(n.li,{children:[`\\n`,(0,e.jsx)(n.p,{children:\\"Click your project that already had a chatbot and deployed\\"}),`\\n`]}),`\\n`,(0,e.jsxs)(n.li,{children:[`\\n`,(0,e.jsx)(n.p,{children:\\"Then, go to the menu: Deploy > Environment. You will see this screen.\\"}),`\\n`]}),`\\n`]}),`\\n`,(0,e.jsx)(a,{caption:{title:\\"Figure 17.\\",description:\'Click button \\"Create channel\\" to continue copying access token from Omnichat\'},src:\\"/assets/images/tutorials/ig-handover/image_17.webp\\",alt:\\"Simple Handover\\",naturalHeight:695,naturalWidth:2048}),`\\n`,(0,e.jsxs)(n.ol,{start:\\"5\\",children:[`\\n`,(0,e.jsxs)(n.li,{children:[`\\n`,(0,e.jsx)(n.p,{children:\'Click \\"+\\" Create Channel\\\\u201D button in channel table list and drawer to set up the channel will be shown\'}),`\\n`]}),`\\n`,(0,e.jsxs)(n.li,{children:[`\\n`,(0,e.jsx)(n.p,{children:\\"Choose Omnichat in Channel Type\\"}),`\\n`]}),`\\n`,(0,e.jsxs)(n.li,{children:[`\\n`,(0,e.jsx)(n.p,{children:\\"In the Access Token field, paste your access token that was generated from the Omnichat inbox.\\"}),`\\n`]}),`\\n`,(0,e.jsxs)(n.li,{children:[`\\n`,(0,e.jsx)(n.p,{children:\\"Click Save to deploy your bot\\"}),`\\n`]}),`\\n`,(0,e.jsxs)(n.li,{children:[`\\n`,(0,e.jsx)(n.p,{children:\\"Few steps to the final \\\\u2728 A created channel will generate a webhook URL. Copy the webhook URL in the Platform to Omnichat.\\"}),`\\n`]}),`\\n`]}),`\\n`,(0,e.jsxs)(n.h3,{id:\\"finalize-agent-bot-in-omnichat\\",children:[(0,e.jsx)(n.a,{className:\\"anchor\\",href:\\"#finalize-agent-bot-in-omnichat\\",children:(0,e.jsx)(n.span,{className:\\"icon icon-link\\"})}),\\"Finalize Agent Bot in Omnichat\\"]}),`\\n`,(0,e.jsxs)(n.ol,{children:[`\\n`,(0,e.jsxs)(n.li,{children:[`\\n`,(0,e.jsxs)(n.p,{children:[\\"Go back to Omnichat \\",(0,e.jsx)(\\"a\\",{href:\\"https://kata-omnichat.kata.ai\\",target:\\"_blank\\",children:(0,e.jsx)(n.a,{href:\\"https://omnichat.kata.ai\\",children:\\"https://omnichat.kata.ai\\"})}),\\" and do login\\"]}),`\\n`]}),`\\n`,(0,e.jsxs)(n.li,{children:[`\\n`,(0,e.jsx)(n.p,{children:\\"Go to menu: Settings > Integrations > Agent Bot. You will see this screen and information that you\\\\u2019re still in the first step to finalize\\"}),`\\n`]}),`\\n`]}),`\\n`,(0,e.jsx)(a,{caption:{title:\\"Figure 18.\\",description:\\"Edit the agent bot to paste webhook URL from Kata Platform\\"},src:\\"/assets/images/tutorials/ig-handover/image_18.webp\\",alt:\\"Simple Handover\\",naturalHeight:1078,naturalWidth:2048}),`\\n`,(0,e.jsxs)(n.ol,{start:\\"3\\",children:[`\\n`,(0,e.jsxs)(n.li,{children:[`\\n`,(0,e.jsx)(n.p,{children:\'Click \\"Edit\\" button in the agent bot configuration\'}),`\\n`]}),`\\n`,(0,e.jsxs)(n.li,{children:[`\\n`,(0,e.jsx)(n.p,{children:\\"A drawer will appear to fill in the Platform webhook URL. Paste your chatbot webhook URL\\"}),`\\n`]}),`\\n`,(0,e.jsxs)(n.li,{children:[`\\n`,(0,e.jsx)(n.p,{children:\\"Click Update and you will be redirected to agent bot list\\"}),`\\n`]}),`\\n`,(0,e.jsxs)(n.li,{children:[`\\n`,(0,e.jsx)(n.p,{children:\\"Lastly, turn on the toggle in Activate Agent Bot. Your chatbot is already connected to the Omnichat inbox and ready to use!\\"}),`\\n`]}),`\\n`]}),`\\n`,(0,e.jsxs)(n.h2,{id:\\"update-instagram-bot-to-use-ice-breaker\\",children:[(0,e.jsx)(n.a,{className:\\"anchor\\",href:\\"#update-instagram-bot-to-use-ice-breaker\\",children:(0,e.jsx)(n.span,{className:\\"icon icon-link\\"})}),\\"Update Instagram Bot to Use Ice Breaker\\"]}),`\\n`,(0,e.jsxs)(n.p,{children:[\\"Ice Breaker is useful for first-time users can understand the available menu or topics in your Instagram bot. To use Ice Breaker, we need to create an Instagram inbox as a prerequisite. Learn more about \\",(0,e.jsx)(n.a,{href:\\"/channels/instagram-messaging/#sending-ice-breaker-reply\\",children:\\"Ice Breaker\\"}),\\".\\"]}),`\\n`,(0,e.jsx)(n.p,{children:\\"Also, you need to successfully finish the Instagram bot until connect to agent bot Omnichat. Go back to the first step.\\"}),`\\n`,(0,e.jsx)(n.p,{children:\\"Before we jump to the tutorial, here is the general conversation flow for using Ice Breaker.\\"}),`\\n`,(0,e.jsxs)(m,{children:[(0,e.jsx)(g,{children:(0,e.jsxs)(p,{children:[(0,e.jsx)(o,{children:\\"Scenario Flow \\"}),(0,e.jsx)(o,{children:(0,e.jsxs)(n.p,{children:[\\"Details \\",(0,e.jsx)(\\"br\\",{}),`\\n(Each row represents 1 bubble message)`]})}),(0,e.jsx)(o,{children:\\"Component Details \\"})]})}),(0,e.jsx)(u,{children:(0,e.jsxs)(b,{children:[(0,e.jsx)(s,{children:(0,e.jsx)(n.p,{children:`First time end-users chat the brand\'s Instagram DM, then it will show Ice Breaker. Learn more about Ice Breaker.\\nIt will not show when using Instagram Story Mention or Instagram Story Reply.`})}),(0,e.jsxs)(s,{children:[(0,e.jsx)(n.p,{children:\\"Show ice breaker\\"}),(0,e.jsx)(\\"br\\",{}),(0,e.jsx)(n.p,{children:\\"FAQ\\"}),(0,e.jsx)(\\"br\\",{}),(0,e.jsxs)(n.p,{children:[\\"Promo \\",(0,e.jsx)(\\"br\\",{}),`\\nLokasi `,(0,e.jsx)(\\"br\\",{}),`\\nBerbicara dengan CS`]})]}),(0,e.jsx)(s,{children:\\"-\\"})]})})]}),`\\n`,(0,e.jsxs)(n.h3,{id:\\"objective-create-ice-breaker-in-your-instagram-inbox\\",children:[(0,e.jsx)(n.a,{className:\\"anchor\\",href:\\"#objective-create-ice-breaker-in-your-instagram-inbox\\",children:(0,e.jsx)(n.span,{className:\\"icon icon-link\\"})}),\\"Objective: Create Ice Breaker in your Instagram inbox\\"]}),`\\n`,(0,e.jsxs)(n.p,{children:[\\"Follow the tutorial on \\",(0,e.jsx)(n.a,{href:\\"/tutorials/how-to-use-instagram-messaging-automation-in-your-project\\",children:\\"how to set up Ice Breaker in Instagram Inbox\\"}),\\".\\"]}),`\\n`,(0,e.jsxs)(n.h3,{id:\\"objective-create-intent-to-trigger-bot-response-if-end-users-click-all-ice-breaker\\",children:[(0,e.jsx)(n.a,{className:\\"anchor\\",href:\\"#objective-create-intent-to-trigger-bot-response-if-end-users-click-all-ice-breaker\\",children:(0,e.jsx)(n.span,{className:\\"icon icon-link\\"})}),\\"Objective: Create intent to trigger bot response if end-users click all Ice Breaker\\"]}),`\\n`,(0,e.jsxs)(n.h4,{id:\\"create-intent-for-faq-menu\\",children:[(0,e.jsx)(n.a,{className:\\"anchor\\",href:\\"#create-intent-for-faq-menu\\",children:(0,e.jsx)(n.span,{className:\\"icon icon-link\\"})}),\\"Create intent for FAQ menu\\"]}),`\\n`,(0,e.jsxs)(n.ol,{children:[`\\n`,(0,e.jsxs)(n.li,{children:[`\\n`,(0,e.jsx)(n.p,{children:\\"Click the Intent tab which is placed next to the Conversation Flows sidebar.\\"}),`\\n`]}),`\\n`,(0,e.jsxs)(n.li,{children:[`\\n`,(0,e.jsxs)(n.p,{children:[\\"Click \\",(0,e.jsx)(n.strong,{children:\\"Create Intent\\"}),\\" button\\"]}),`\\n`]}),`\\n`,(0,e.jsxs)(n.li,{children:[`\\n`,(0,e.jsx)(n.p,{children:\'Fill in the intent as follows. This intent will trigger the FAQ state to show FAQ response when end-user click \\"FAQ\\" in Ice Breaker feature\'}),`\\n`]}),`\\n`]}),`\\n`,(0,e.jsx)(a,{caption:{title:\\"Figure 19.\\",description:\\"Edit the agent bot to paste webhook URL from Kata Platform\\"},src:\\"/assets/images/tutorials/ig-handover/image_19.webp\\",alt:\\"Simple Handover\\",naturalHeight:1244,naturalWidth:1942}),`\\n`,(0,e.jsxs)(n.ol,{start:\\"4\\",children:[`\\n`,(0,e.jsxs)(n.li,{children:[\\"Then, click \\",(0,e.jsx)(n.strong,{children:\\"Create\\"}),\\".\\"]}),`\\n`]}),`\\n`,(0,e.jsxs)(n.h4,{id:\\"create-intent-for-promo-menu\\",children:[(0,e.jsx)(n.a,{className:\\"anchor\\",href:\\"#create-intent-for-promo-menu\\",children:(0,e.jsx)(n.span,{className:\\"icon icon-link\\"})}),\\"Create intent for Promo menu\\"]}),`\\n`,(0,e.jsxs)(n.ol,{children:[`\\n`,(0,e.jsxs)(n.li,{children:[`\\n`,(0,e.jsx)(n.p,{children:\\"Click the Intent tab which is placed next to the Conversation Flows sidebar.\\"}),`\\n`]}),`\\n`,(0,e.jsxs)(n.li,{children:[`\\n`,(0,e.jsxs)(n.p,{children:[\\"Click \\",(0,e.jsx)(n.strong,{children:\\"Create Intent\\"}),\\" button\\"]}),`\\n`]}),`\\n`,(0,e.jsxs)(n.li,{children:[`\\n`,(0,e.jsx)(n.p,{children:\'Fill in the intent as follows. This intent will trigger the promo state to show promo response when end-user click \\"Promo\\" in Ice Breaker feature\'}),`\\n`]}),`\\n`]}),`\\n`,(0,e.jsx)(a,{caption:{title:\\"Figure 20.\\",description:\\"Create intent for triggering Promo state when user click Ice Breaker with Promo item\\"},src:\\"/assets/images/tutorials/ig-handover/image_20.webp\\",alt:\\"Simple Handover\\",naturalHeight:1234,naturalWidth:1682}),`\\n`,(0,e.jsxs)(n.ol,{start:\\"4\\",children:[`\\n`,(0,e.jsxs)(n.li,{children:[\\"Then, click \\",(0,e.jsx)(n.strong,{children:\\"Create\\"}),\\".\\"]}),`\\n`]}),`\\n`,(0,e.jsxs)(n.h4,{id:\\"create-intent-for-lokasi-menu\\",children:[(0,e.jsx)(n.a,{className:\\"anchor\\",href:\\"#create-intent-for-lokasi-menu\\",children:(0,e.jsx)(n.span,{className:\\"icon icon-link\\"})}),\'Create intent for \\"Lokasi\\" menu\']}),`\\n`,(0,e.jsxs)(n.ol,{children:[`\\n`,(0,e.jsxs)(n.li,{children:[`\\n`,(0,e.jsx)(n.p,{children:\\"Click the Intent tab which is placed next to the Conversation Flows sidebar.\\"}),`\\n`]}),`\\n`,(0,e.jsxs)(n.li,{children:[`\\n`,(0,e.jsxs)(n.p,{children:[\\"Click \\",(0,e.jsx)(n.strong,{children:\\"Create Intent\\"}),\\" button\\"]}),`\\n`]}),`\\n`,(0,e.jsxs)(n.li,{children:[`\\n`,(0,e.jsx)(n.p,{children:\'Fill in the intent as follows. This intent will trigger the location state to show location response when end-user click \\"Lokasi`\\" in Ice Breaker feature\'}),`\\n`]}),`\\n`]}),`\\n`,(0,e.jsx)(a,{caption:{title:\\"Figure 21.\\",description:\\"Create intent for triggering Lokasi state when user click Ice Breaker with Location item\\"},src:\\"/assets/images/tutorials/ig-handover/image_21.webp\\",alt:\\"Simple Handover\\",naturalHeight:782,naturalWidth:1622}),`\\n`,(0,e.jsxs)(n.ol,{start:\\"4\\",children:[`\\n`,(0,e.jsxs)(n.li,{children:[\\"Then, click \\",(0,e.jsx)(n.strong,{children:\\"Create\\"}),\\".\\"]}),`\\n`]}),`\\n`,(0,e.jsxs)(n.h4,{id:\\"create-intent-for-berbicara-dengan-cs-menu\\",children:[(0,e.jsx)(n.a,{className:\\"anchor\\",href:\\"#create-intent-for-berbicara-dengan-cs-menu\\",children:(0,e.jsx)(n.span,{className:\\"icon icon-link\\"})}),\'Create intent for \\"Berbicara dengan CS\\" menu\']}),`\\n`,(0,e.jsxs)(n.ol,{children:[`\\n`,(0,e.jsxs)(n.li,{children:[`\\n`,(0,e.jsx)(n.p,{children:\\"Click the Intent tab which is placed next to the Conversation Flows sidebar.\\"}),`\\n`]}),`\\n`,(0,e.jsxs)(n.li,{children:[`\\n`,(0,e.jsxs)(n.p,{children:[\\"Click \\",(0,e.jsx)(n.strong,{children:\\"Create Intent\\"}),\\" button\\"]}),`\\n`]}),`\\n`,(0,e.jsxs)(n.li,{children:[`\\n`,(0,e.jsx)(n.p,{children:\'Fill in the intent as follows. This intent will trigger the handover state to handover end-user to human agent when end-user click \\"Berbicara dengan CS\\" in Ice Breaker feature\'}),`\\n`]}),`\\n`]}),`\\n`,(0,e.jsx)(a,{caption:{title:\\"Figure 22.\\",description:\\"Create intent for triggering CS state item\\"},src:\\"/assets/images/tutorials/ig-handover/image_22.webp\\",alt:\\"Simple Handover\\",naturalHeight:860,naturalWidth:1512}),`\\n`,(0,e.jsxs)(n.ol,{start:\\"4\\",children:[`\\n`,(0,e.jsxs)(n.li,{children:[\\"Then, click \\",(0,e.jsx)(n.strong,{children:\\"Create\\"}),\\".\\"]}),`\\n`]}),`\\n`,(0,e.jsxs)(n.h3,{id:\\"objective-create-transition-for-mapping-bot-responses-after-end-users-clicked-the-ice-breaker\\",children:[(0,e.jsx)(n.a,{className:\\"anchor\\",href:\\"#objective-create-transition-for-mapping-bot-responses-after-end-users-clicked-the-ice-breaker\\",children:(0,e.jsx)(n.span,{className:\\"icon icon-link\\"})}),\\"Objective: Create transition for mapping bot responses after end-users clicked the Ice Breaker\\"]}),`\\n`,(0,e.jsxs)(n.h4,{id:\\"connect-init-to-faqstate-to-trigger-faq-response-after-end-users-clicked-faq-in-ice-breaker\\",children:[(0,e.jsx)(n.a,{className:\\"anchor\\",href:\\"#connect-init-to-faqstate-to-trigger-faq-response-after-end-users-clicked-faq-in-ice-breaker\\",children:(0,e.jsx)(n.span,{className:\\"icon icon-link\\"})}),\'Connect \\"init\\" to \\\\u201CfaqState\\\\u201D to trigger FAQ response after end-users clicked \\\\u201CFAQ\\\\u201D in Ice Breaker\']}),`\\n`,(0,e.jsxs)(n.ol,{children:[`\\n`,(0,e.jsxs)(n.li,{children:[`\\n`,(0,e.jsx)(n.p,{children:\'Pull transition line from \\"init\\" to \\\\u201CfaqState\\\\u201D.\'}),`\\n`]}),`\\n`,(0,e.jsxs)(n.li,{children:[`\\n`,(0,e.jsx)(n.p,{children:\\"Create transition drawer will show.\\"}),`\\n`]}),`\\n`,(0,e.jsxs)(n.li,{children:[`\\n`,(0,e.jsx)(n.p,{children:\\"Fill in condition as follow:\\"}),`\\n`]}),`\\n`]}),`\\n`,(0,e.jsx)(n.pre,{children:(0,e.jsx)(n.code,{className:\\"code-highlight\\",children:(0,e.jsx)(n.span,{className:\\"code-line\\",children:`intent == \\"faqIceBreaker\\"\\n`})})}),`\\n`,(0,e.jsxs)(n.ol,{start:\\"4\\",children:[`\\n`,(0,e.jsx)(n.li,{children:\\"Click Create\\"}),`\\n`]}),`\\n`,(0,e.jsxs)(n.h4,{id:\\"connect-init-to-carouselstate-to-trigger-generic-template-carousel-response-after-end-users-clicked-promo-in-ice-breaker\\",children:[(0,e.jsx)(n.a,{className:\\"anchor\\",href:\\"#connect-init-to-carouselstate-to-trigger-generic-template-carousel-response-after-end-users-clicked-promo-in-ice-breaker\\",children:(0,e.jsx)(n.span,{className:\\"icon icon-link\\"})}),\'Connect \\"init\\" to \\\\u201CcarouselState\\\\u201D to trigger generic template (\\\\u201Ccarousel\\\\u201D) response after end-users clicked \\\\u201CPromo\\\\u201D in Ice Breaker\']}),`\\n`,(0,e.jsxs)(n.ol,{children:[`\\n`,(0,e.jsxs)(n.li,{children:[`\\n`,(0,e.jsx)(n.p,{children:\'Pull transition line from \\"init\\" to \\\\u201CcarouselState\\\\u201D.\'}),`\\n`]}),`\\n`,(0,e.jsxs)(n.li,{children:[`\\n`,(0,e.jsx)(n.p,{children:\\"Create transition drawer will show.\\"}),`\\n`]}),`\\n`,(0,e.jsxs)(n.li,{children:[`\\n`,(0,e.jsx)(n.p,{children:\\"Fill in condition as follow:\\"}),`\\n`]}),`\\n`]}),`\\n`,(0,e.jsx)(n.pre,{children:(0,e.jsx)(n.code,{className:\\"code-highlight\\",children:(0,e.jsx)(n.span,{className:\\"code-line\\",children:`intent == \\"promoIceBreaker\\"\\n`})})}),`\\n`,(0,e.jsxs)(n.ol,{start:\\"4\\",children:[`\\n`,(0,e.jsx)(n.li,{children:\\"Click Create\\"}),`\\n`]}),`\\n`,(0,e.jsxs)(n.h4,{id:\\"connect-init-to-carouselstate-to-trigger-text-response-after-end-users-clicked-lokasi-in-ice-breaker\\",children:[(0,e.jsx)(n.a,{className:\\"anchor\\",href:\\"#connect-init-to-carouselstate-to-trigger-text-response-after-end-users-clicked-lokasi-in-ice-breaker\\",children:(0,e.jsx)(n.span,{className:\\"icon icon-link\\"})}),\'Connect \\"init\\" to \\\\u201CcarouselState\\\\u201D to trigger text response after end-users clicked \\\\u201CLokasi\\\\u201D in Ice Breaker\']}),`\\n`,(0,e.jsxs)(n.ol,{children:[`\\n`,(0,e.jsxs)(n.li,{children:[`\\n`,(0,e.jsx)(n.p,{children:\'Pull transition line from \\"init\\" to \\\\u201ClocationState\\\\u201D.\'}),`\\n`]}),`\\n`,(0,e.jsxs)(n.li,{children:[`\\n`,(0,e.jsx)(n.p,{children:\\"Create transition drawer will show.\\"}),`\\n`]}),`\\n`,(0,e.jsxs)(n.li,{children:[`\\n`,(0,e.jsx)(n.p,{children:\\"Fill in condition as follow:\\"}),`\\n`]}),`\\n`]}),`\\n`,(0,e.jsx)(n.pre,{children:(0,e.jsx)(n.code,{className:\\"code-highlight\\",children:(0,e.jsx)(n.span,{className:\\"code-line\\",children:`intent == \\"locationIceBreaker\\"\\n`})})}),`\\n`,(0,e.jsxs)(n.ol,{start:\\"4\\",children:[`\\n`,(0,e.jsx)(n.li,{children:\\"Click Create\\"}),`\\n`]}),`\\n`,(0,e.jsxs)(n.h4,{id:\\"connect-init-to-handoverstate-to-trigger-handover-to-human-agents-after-end-users-clicked-berbicara-dengan-cs-in-ice-breaker\\",children:[(0,e.jsx)(n.a,{className:\\"anchor\\",href:\\"#connect-init-to-handoverstate-to-trigger-handover-to-human-agents-after-end-users-clicked-berbicara-dengan-cs-in-ice-breaker\\",children:(0,e.jsx)(n.span,{className:\\"icon icon-link\\"})}),\'Connect \\"init\\" to \\\\u201ChandoverState\\\\u201D to trigger handover to human agents after end-users clicked \\\\u201CBerbicara dengan CS\\\\u201D in Ice Breaker\']}),`\\n`,(0,e.jsxs)(n.ol,{children:[`\\n`,(0,e.jsxs)(n.li,{children:[`\\n`,(0,e.jsx)(n.p,{children:\'Pull transition line from \\"init\\" to \\\\u201ChandoverState\\\\u201D.\'}),`\\n`]}),`\\n`,(0,e.jsxs)(n.li,{children:[`\\n`,(0,e.jsx)(n.p,{children:\\"Create transition drawer will show.\\"}),`\\n`]}),`\\n`,(0,e.jsxs)(n.li,{children:[`\\n`,(0,e.jsx)(n.p,{children:\\"Fill in condition as follow:\\"}),`\\n`]}),`\\n`]}),`\\n`,(0,e.jsx)(n.pre,{children:(0,e.jsx)(n.code,{className:\\"code-highlight\\",children:(0,e.jsx)(n.span,{className:\\"code-line\\",children:`intent == \\"csIceBreaker\\"\\n`})})}),`\\n`,(0,e.jsxs)(n.ol,{start:\\"4\\",children:[`\\n`,(0,e.jsx)(n.li,{children:\\"Click Create\\"}),`\\n`]}),`\\n`,(0,e.jsxs)(n.h3,{id:\\"objective-publish-updated-bot-and-deploy-to-omnichat-again\\",children:[(0,e.jsx)(n.a,{className:\\"anchor\\",href:\\"#objective-publish-updated-bot-and-deploy-to-omnichat-again\\",children:(0,e.jsx)(n.span,{className:\\"icon icon-link\\"})}),\\"Objective: Publish updated bot and deploy to Omnichat again\\"]}),`\\n`,(0,e.jsxs)(n.p,{children:[\\"Follow the tutorial to \\",(0,e.jsx)(n.a,{href:\\"/tutorial/create-igdm-bot-handover-from-chatbot-to-agent/#finalize-your-new-bot\\",children:\\"finalize your bot\\"}),\\".\\"]})]})}}var H=B;function c(t,i){throw new Error(\\"Expected \\"+(i?\\"component\\":\\"object\\")+\\" `\\"+t+\\"` to be defined: you likely forgot to import, pass, or provide it.\\")}return F(q);})();\\n;return Component;"},"_id":"tutorials/create-igdm-bot-handover-from-chatbot-to-agent.mdx","_raw":{"sourceFilePath":"tutorials/create-igdm-bot-handover-from-chatbot-to-agent.mdx","sourceFileName":"create-igdm-bot-handover-from-chatbot-to-agent.mdx","sourceFileDir":"tutorials","contentType":"mdx","flattenedPath":"tutorials/create-igdm-bot-handover-from-chatbot-to-agent"},"type":"Tutorials","slug":["create-igdm-bot-handover-from-chatbot-to-agent"],"excerpt":"\\nKata Platform "}');
;// CONCATENATED MODULE: ./.contentlayer/generated/Tutorials/tutorials__create-simple-bot-handover-from-chatbot-to-agent.mdx.json
const tutorials_create_simple_bot_handover_from_chatbot_to_agent_mdx_namespaceObject = JSON.parse('{"layout":"tutorial","id":"create-simple-bot-handover-from-chatbot-to-agent","imgSpot":"/assets/images/tutorials/spot-simple-handover.webp","product":"kata-platform","title":"Create Simple Bot Handover from Chatbot to Agent Tutorial","date":"2018-11-11T07:00:00+07:00","prev":"create-igdm-bot-handover-from-chatbot-to-agent","body":{"raw":"\\nKata Platform ([platform.kata.ai](www.platform.kata.ai)) is a platform to create chatbots and train them with Natural Language Processing (NLP). You can create any chatbots for any use-cases, such as FAQ, campaign, customer service, handover to human agents, and more.\\n\\nIn this tutorial, we will create a chatbot that is able to handoff conversations to human agents, also known as \\"Agent Handover\'\'. We will use the Kata Omnichat dashboard to connect chatbots with human agents. Check this [documentation](/kata-omnichat) for Kata Omnichat explanation.\\n\\n<YoutubeEmbedWrapper>\\n  <YoutubeEmbed\\n    id=\\"dAHnoTX4BUE\\"\\n    params=\\"v=dAHnoTX4BUE\\"\\n    title=\\" Create Simple Bot Handover from Chatbot to Agent Tutorial\\"\\n  />\\n</YoutubeEmbedWrapper>\\n\\n## Simple Chatbot Flow\\n\\nBefore we jump into the tutorial, let’s see the scenario for the conversation. We will create a chatbot using _keywords_ which when customers enter \\"1\\" to end the conversation or “2” to do the handover.\\n\\n### Conversation Flow Table\\n\\n<Table>\\n  <TableHead>\\n    <TableHeadRow>\\n      <TableHeadCell>Scenario Flow </TableHeadCell>\\n      <TableHeadCell>\\n        Details <br />\\n        (Each row represents 1 bubble message)\\n      </TableHeadCell>\\n    </TableHeadRow>\\n  </TableHead>\\n  <TableBody>\\n    <TableBodyRow>\\n      <TableBodyCell>Greetings</TableBodyCell>\\n      <TableBodyCell>\\n        Halo, selamat datang di layanan CS Bank ABC 😊 <br />\\n        <br />\\n        Apakah ingin dihubungkan ke CS Bank ABC yang sedang available? <br />\\n        <br />\\n        Ya -- lanjut\\n        <br />\\n        Tidak -- end session\\n        <br />\\n        <br />\\n        💡 Cukup ketik angka pilihannya, ya\\n      </TableBodyCell>\\n    </TableBodyRow>\\n    <TableBodyRow>\\n      <TableBodyCell>End conversation if customer typing \\"2\\" </TableBodyCell>\\n      <TableBodyCell>Terima kasih sudah menghubungi Bank ABC 😊 </TableBodyCell>\\n    </TableBodyRow>\\n    <TableBodyRow>\\n      <TableBodyCell>Customer typing “1” and chatbot request handover to agent</TableBodyCell>\\n      <TableBodyCell>Mohon menunggu, ya. Sedang kami hubungkan ke CS Bank ABC yang tersedia! 😊 </TableBodyCell>\\n    </TableBodyRow>\\n    <TableBodyRow>\\n      <TableBodyCell>End session after handover done</TableBodyCell>\\n      <TableBodyCell>Terima kasih sudah menghubungi Bank ABC 😊 </TableBodyCell>\\n    </TableBodyRow>\\n  </TableBody>\\n</Table>\\n\\n## Create Project\\n\\n### Objective: Register your new account and login to the Platform\\n\\n1. Go to <a href=\\"https://platform.kata.ai\\" target=\\"_blank\\">https://platform.kata.ai</a> and click **Sign Up** to create new account\\n\\n2. Input required fields in sign up page: **Username, email address, role and captcha**\\n\\n3. Go to your registered email’s inbox. You will receive an email to verify your account and input your password\\n\\n4. When you click the **Confirm Email** button in the verification email, you will be redirected to setup password. Insert your password and confirm the password.\\n\\n5. You will be redirected to the Login **Page**. Input your username and password to continue.\\n\\n### Objective: Create new chatbot project\\n\\n#### Login to Kata Platform and create project\\n\\n1. Open your browser, then open the URL <a href=\\"https://platform.kata.ai/login\\" target=\\"_blank\\">https://platform.kata.ai/login</a> and enter your username & password.\\n\\n2. Click **\\"Login\\"** to continue.\\n\\n3. Click on **\\"Create Project\\"** and fill in the form. Each project contains one bot design, one NL, and one CMS.\\n\\n# Create Greetings Flow\\n\\n### Objective: Define a flow\\n\\n#### Create a flow name \\"Handover\\". We will use 1 flow for this simple bot\\n\\n1. Click **\\"Create Flow\\"** button in current screen\\n\\n2. Create flow \\"Handover\\", other fields are left blank. Then, click **Create**.\\n\\n### Objective: Create greetings state to define how to respond\\n\\n#### Create \\"init\\" state\\n\\n1. Click \\"+\\" icon in bottom right to create new state\\n\\n2. Create state \\"init\\" and click toggle to turn on “Initial State” and other fields are left blank. Then, click Create.\\n\\n#### Create \\"greetings\\" as bot response to show keywords menu\\n\\n1. Create another state by clicking the **\\"+\\"** icon in the bottom right to create a new state named “greetings”\\n\\n2. Click **\\"Add action\\"**, then click **“+”** in the action box to create a new action\\n\\n3. When all actions available are shown, then choose \\"Text\\"\\n\\n4. Input action name \\"greetings\\"\\n\\n5. Next, click the **Add Variant** button to fill in with this text:\\n\\n```\\nHalo, selamat datang di layanan CS Bank ABC 😊\\\\n\\\\n Apakah ingin dihubungkan ke CS Bank ABC yang sedang available?\\\\n\\\\n1. Ya\\\\n2. Tidak\\\\n\\\\n💡 Cukup ketik angka pilihannya, ya\\n```\\n\\n6. Click **Create Action**\\n\\n7. To finalize the state creation, click **Create** in state drawer\\n\\n### Objective: Catch end-user’s message when greet the bot\\n\\n#### Create \\"greetings\\" keywords to build understanding in chatbots when end-user’s greet the bot. We will use the NLUs feature to create the keywords.\\n\\n1. Go to the menu **\\"NLUs\\"** which is placed under the “Conversation Flows” menu. Your screen will be switched to create NLUs\\n\\n2. Click **Create NLU**\\n\\n3. Then, fill in the fields as follow\\n\\n```\\nNLU Name: greetings\\nNLU Type: Keyword\\n```\\n\\n4. Next, click **\\"Add Keyword\\"** to define any words to trigger the bot. Fill in the main keyword as follow\\n\\n```\\nMain keyword: hi\\n```\\n\\n5. Add a new word by pressing \\"enter\\" on your keyboard. Every time you write a new word, press “enter” on your keyboard to save the word. Add these words\\n\\n<FigureImage\\n  src=\\"/assets/images/tutorials/simple-handover/image_1.webp\\"\\n  alt=\\"Simple Handover\\"\\n  caption={{ title: \'Figure 1.\', description: \'Add more keywords for greetings\' }}\\n  naturalHeight={272}\\n  naturalWidth={818}\\n/>\\n\\n6. Click **\\"Create\\"** to save the NLUs\\n\\n#### Create \\"greetings\\" intent to catch user’s input\\n\\n1. Click the Intent tab which is placed next to the Conversation Flows sidebar.\\n\\n2. Click **Create Intent** button\\n\\n3. Fill in the intent as follows. The choice of \\"Intent type\\" is text, which means it will catch incoming messages with text only. On classifier, use “greetings” NLUs that we’ve created in previous step to connect the intent with create keywords for greetings\\n\\n<FigureImage\\n  caption={{ title: \'Figure 2.\', description: \'Create intent and create mapping with greetings keyword\' }}\\n  src=\\"/assets/images/tutorials/simple-handover/image_2.webp\\"\\n  alt=\\"Simple Handover\\"\\n  naturalHeight={1496}\\n  naturalWidth={990}\\n/>\\n\\n4. Then, click **Create**.\\n\\n### Objective: Connect \\"init\\" and “greetings” states by creating a transition\\n\\n#### Create a transition to connect \\"_init_\\" and “_greetings_” states. The transition will define in which condition the greetings state, including the actions’ state, will be executed.\\n\\n1. Pull a line from the \\"init\\" state and drag it to the “greetings” state. If you succeed, then it will show a **Create Transition** drawer\\n\\n2. Fill in the transition as follow\\n\\n<FigureImage\\n  caption={{ title: \'Figure 3.\', description: \'Create transition\' }}\\n  src=\\"/assets/images/tutorials/simple-handover/image_3.webp\\"\\n  alt=\\"Simple Handover\\"\\n  naturalHeight={834}\\n  naturalWidth={930}\\n/>\\n\\n3. Click **\\"Create Transition\\"**\\n\\n## Catch End-user’s Typing when Choosing Menu\\n\\n### Objective: Catch end-user’s message when choosing menu by typing \\"1\\" or “2”\\n\\n#### Create \\"menu\\" keywords\\n\\n1. Go to the menu **\\"NLUs\\"** which is placed under the “Conversation Flows” menu. Your screen will be switched to create NLUs\\n\\n2. Click **Create NLU**\\n\\n3. Then, fill in the fields as follow\\n\\n```\\nNLU Name: menu\\nNLU Type: Keyword\\n```\\n\\n4. Next, click **\\"Add Keyword\\"** to define any words to trigger the bot. Fill in the main keyword as follow\\n\\n```\\nMain keyword: satu\\n```\\n\\n5. Add a new word by pressing \\"enter\\" on your keyboard. Every time you write a new word, press “enter” on your keyboard to save the word. Add these words. “satu” and “dua” as the main keywords mean they define what your end-users will be inputted when choose menu\\n\\n<FigureImage\\n  caption={{\\n    title: \'Figure 4.\',\\n    description: \'Create keywords to identify input from chatbot users when choosing menu\',\\n  }}\\n  src=\\"/assets/images/tutorials/simple-handover/image_4.webp\\"\\n  alt=\\"Simple Handover\\"\\n  naturalHeight={1264}\\n  naturalWidth={960}\\n/>\\n\\n6. Click **\\"Create\\"** to save the NLUs\\n\\n#### Create an intent \\"menu\\" to catch the end-user\'s input\\n\\n1. Click the Intent tab which is placed next to the Conversation Flows sidebar.\\n\\n2. Click **Create Intent** button\\n\\n3. Fill in the intent as follows. This intent will catch the end-user\'s input after typing \\"1\\" or “2”. Adding a classifier with “menu” to define this intent will be executed whenever a sentence has the “menu” keyword. Add attributes and choose NLU “menu”, because we have 2 main keywords that need to be understood by the intent to execute the handover path or end conversation path.\\n\\n<FigureImage\\n  caption={{ title: \'Figure 5.\', description: \'Create intent for showing main menu and mapping from created keywords\' }}\\n  src=\\"/assets/images/tutorials/simple-handover/image_5.webp\\"\\n  alt=\\"Simple Handover\\"\\n  naturalHeight={1484}\\n  naturalWidth={722}\\n/>\\n\\n4. Then, click **Create**.\\n\\n## Create Handover to Human Agent Flow\\n\\n### Objective: Create a flow that end-user can request handover to human agents by using Handover API\\n\\n#### Create handover state\\n\\n1. Click **\\"+\\"** icon in bottom right to create new state\\n\\n2. Fill in the state name with \\"handover\\" and activate toggle “End state”\\n\\n#### Create bot response to inform end-user that the handover request has been received and waiting for agents to reply\\n\\n1. Click **\\"+\\"** in action box to create new action\\n\\n2. When all actions available are shown, then choose \\"Text\\"\\n\\n3. Input action name \\"waitForAgent\\"\\n\\n4. Next, click the **Add Variant** button to fill in with this text:\\n\\n```\\nMohon menunggu, ya. Sedang kami hubungkan ke CS Bank ABC yang tersedia! 😊\\n```\\n\\n5. Click **Create Action**\\n\\n#### Use Handover API to send handover request to Omnichat\\n\\n1. Create another action by clicking **\\"Add action\\"**\\n\\n2. Click **\\"+\\"** in action box to create new action\\n\\n3. Fill in action name with \\"handover\\"\\n\\n4. When all actions available are shown, then choose \\"API\\"\\n\\n5. Choose **Handover API**\\n\\n6. Click **Create Action** button\\n\\n7. To finalize this step when creating a new state, click the **Create** button in the state drawer\\n\\n#### Create a transition to connect \\"greetings\\" and “handover” states\\n\\n1. Pull a line from the \\"greetings\\" state and drag it to the “handover” state. If you succeed, then it will show a **Create Transitio**n drawer\\n\\n2. Fill in the transition as follows. This condition means if the end-user\'s keyword is identified as \\"menu\\" _and_ they are typing “1”, then it will show the “handover” state including the actions’ state.\\n\\n<FigureImage\\n  caption={{\\n    title: \'Figure 6.\',\\n    description: `Create transition and mapping if chatbot users choose \\"1\\", then execute handover state`,\\n  }}\\n  src=\\"/assets/images/tutorials/simple-handover/image_6.webp\\"\\n  alt=\\"Simple Handover\\"\\n  naturalHeight={604}\\n  naturalWidth={712}\\n/>\\n\\n3. Click **Create**\\n\\n## Create End Conversation Flow\\n\\n### Objective: Create a flow that end-user doesn’t want to handover to agent and end the conversation\\n\\n#### Create \\"end\\" state to cancel handover agent and finish the conversation\\n\\n1. Click **\\"+\\"** icon in bottom left to create new state\\n\\n2. Fill in the state name with \\"end\\" and click toggle “End state” to set the state as the end of the flow.\\n\\n3. Click **\\"Add action\\",** then click “+” to create new action\\n\\n4. Choose Text, then fill in the action name with \\"end\\".\\n\\n5. Next, click the **\\"Add Variant\\"** button and input the following text:\\n\\n```\\nTerima kasih sudah menghubungi Bank ABC 😊\\n```\\n\\n6. Click **Create** to finalize\\n\\n#### Create a transition to connect \\"greetings\\" and “end” states\\n\\n1. Pull a line from the \\"greetings\\" state and drag it to the “end” state. If you succeed, then it will show a Create Transition drawer\\n\\n2. Fill in the transition as follows. This condition means if the end-user\'s keyword is identified as \\"menu\\" _and_ they are typing “2”, then it will execute the “end” state\\n\\n<FigureImage\\n  caption={{\\n    title: \'Figure 7.\',\\n    description: `Create transition and mapping if chatbot users choose \\"2\\", then execute end conversation`,\\n  }}\\n  src=\\"/assets/images/tutorials/simple-handover/image_7.webp\\"\\n  alt=\\"Simple Handover\\"\\n  naturalHeight={630}\\n  naturalWidth={704}\\n/>\\n\\n3. Click **Create**\\n\\n## Finalize Your New Bot\\n\\n### Objective: Publish your bot to save the chatbot flow\\n\\n1. Click on the **\\"Publish\\"** button which is placed on top right corner\\n\\n2. Fill in the **change log**. You can input \\"Initial version\\" in the change log\\n\\n3. Click **Publish** to save the change log. Lastly, your final chatbot flow will be like this:\\n\\n<FigureImage\\n  caption={{ title: \'Figure 8.\', description: `Final conversation flow` }}\\n  src=\\"/assets/images/tutorials/simple-handover/image_8.webp\\"\\n  alt=\\"Simple Handover\\"\\n  naturalHeight={634}\\n  naturalWidth={2048}\\n/>\\n\\n### Objective: Testing your bot in emulator\\n\\n1. On the bottom of your right screen, there is a small button named **\\"Test NLU\\".** Click the **button** to start.\\n\\n2. You can try to test your bot by inputting a message in the text bot. Say \\"hi\\" to your bot. If it succeeds, your bot will reply as follows\\n\\n<FigureImage\\n  caption={{ title: \'Figure 9.\', description: `Testing your bot in emulator by typing \\"hi\\"` }}\\n  src=\\"/assets/images/tutorials/simple-handover/image_9.webp\\"\\n  alt=\\"Simple Handover\\"\\n  naturalHeight={1192}\\n  naturalWidth={1914}\\n/>\\n\\n<FigureImage\\n  caption={{ title: \'Figure 10.\', description: `Testing bot by typing \\"1\\" or \\"2\\"` }}\\n  src=\\"/assets/images/tutorials/simple-handover/image_10.webp\\"\\n  alt=\\"Simple Handover\\"\\n  naturalHeight={1148}\\n  naturalWidth={1878}\\n/>\\n\\n3. If you want to **restart** the session, click refresh icon which is placed at the bottom\\n\\n### Objective: Deploy your bot\\n\\n#### Create new deployment\\n\\n1. Go to the **\\"Deploy\\"** menu in the left sidebar\\n\\n2. In this page, click on the **\\"New Deployment\\"** button which is placed in the top right corner. If you successfully clicked, it will show a create deployment drawer\\n\\n3. Choose any deployment version you want to deploy and fill in the change log. Or you can simply follow this screenshot\\n\\n<FigureImage\\n  caption={{ title: \'Figure 11.\', description: `Create new deployment` }}\\n  src=\\"/assets/images/tutorials/simple-handover/image_11.webp\\"\\n  alt=\\"Simple Handover\\"\\n  naturalHeight={1890}\\n  naturalWidth={1338}\\n/>\\n\\n4. Click **Submit** to finish the deployment\\n\\n#### Create new environment as prerequisites to deploy the bot to channel\\n\\n1. Go to the **Environment** menu which is placed under the current menu (\\"Overview\\"). If you successfully entered the Environment menu, you will see a page like this. These 3 environments represent that your chatbot will be tested in development or staging first, before go live as in Production stage\\n\\n<FigureImage\\n  caption={{ title: \'Figure 12.\', description: `Set up environment` }}\\n  src=\\"/assets/images/tutorials/simple-handover/image_12.webp\\"\\n  alt=\\"Simple Handover\\"\\n  naturalHeight={647}\\n  naturalWidth={2048}\\n/>\\n\\n2. Click the **Create Environment** button in the Development environment and you will see a drawer to create new environment\\n\\n3. Choose the **development version** you want to (in this tutorial we will use the 1.0.0 version)\\n\\n4. Fill in the **environment URL**. This environment URL will be useful if you use our CMS feature, [learn more about CMS](https://docs.kata.ai/cms-studio/about/\').\\n\\n5. Click **Create** to finalize\\n\\n6. You will notice the button is changed into the Create **Channel** button.\\n\\nIn this step, you will need an Omnichat <a href=\\"https://kata-omnichat.kata.ai\\" target=\\"_blank\\">https://omnichat.kata.ai</a> account and Omnichat inbox to deploy the bot. Let’s get started!\\n\\n## Create Inbox in Omnichat\\n\\nFollow these tutorials in Omnichat to continue:\\n\\n1. Register a new Omnichat account in Omnichat. Section [**How to Set Up**](/kata-omnichat/getting-started/register-your-account-first)\\n\\n2. Create a new channel inbox.\\n\\n   - For IGDM chatbot: Section [**How to Set Up > Connect to Instagram Messaging**](/kata-omnichat/getting-started/connect-your-instagram-messaging-inbox)\\n\\n   - For WA chatbot: Section [**How to Set Up > Connect to Whatsapp Messaging**](/kata-omnichat/getting-started/connect-your-waba-inbox)\\n\\n## Create Agent Bot in Omnichat\\n\\nFollow the tutorial below in Omnichat to continue: Section **How to Set Up Agent Bot**\\n\\n## Connect Bot to Omnichat\\n\\n1. If you succeed to follow the above tutorials, you will see an access token generated in Omnichat that needs to be pasted into the Platform. The screenshot below\\n\\n<FigureImage\\n  caption={{ title: \'Figure 13.\', description: `Create new agent bot` }}\\n  src=\\"/assets/images/tutorials/simple-handover/image_13.webp\\"\\n  alt=\\"Simple Handover\\"\\n  naturalHeight={1078}\\n  naturalWidth={2048}\\n/>\\n\\n2. Next, open the Kata Platform URL <a href=\\"https://platform.kata.ai\\" target=\\"_blank\\">https://platform.kata.ai</a> and do login\\n\\n3. Click your project that already had a chatbot and deployed\\n\\n4. Then, go to the menu: Deploy > Environment. You will see this screen.\\n\\n<FigureImage\\n  caption={{ title: \'Figure 14.\', description: `Set up channel again to paste access token from Omnichat` }}\\n  src=\\"/assets/images/tutorials/simple-handover/image_14.webp\\"\\n  alt=\\"Simple Handover\\"\\n  naturalHeight={695}\\n  naturalWidth={2048}\\n/>\\n\\n5. Click Create Channel button to start connect and you will see an empty channel table\\n\\n6. Click \\"+ Create Channel\\" button in channel table list and drawer to set up the channel will be shown\\n\\n7. Choose Omnichat in Channel Type\\n\\n8. In the Access Token field, paste your access token that was generated from the Omnichat inbox.\\n\\n9. Click Save to deploy your bot\\n\\n10. Few steps to the final ✨ A created channel will generate a webhook URL. Copy the webhook URL in the Platform to Omnichat.\\n\\n## Finalize Agent Bot in Omnichat\\n\\n1. Go back to Omnichat <a href=\\"https://kata-omnichat.kata.ai\\" target=\\"_blank\\">https://omnichat.kata.ai</a> and do login\\n\\n2. Go to menu: Settings > Integrations > Agent Bot. You will see this screen and information that you’re still in first step to finalize\\n\\n<FigureImage\\n  caption={{ title: \'Figure 15.\', description: `Edit agent bot to paste webhook URL from Platform` }}\\n  src=\\"/assets/images/tutorials/simple-handover/image_15.webp\\"\\n  alt=\\"Simple Handover\\"\\n  naturalHeight={1078}\\n  naturalWidth={2048}\\n/>\\n\\n3. Click \\"Edit\\" button in the agent bot configuration\\n\\n4. A drawer will appear to fill in the Platform webhook URL. Paste your chatbot webhook URL\\n\\n5. Click Update and you will be redirected to agent bot list\\n\\n6. Lastly, turn on the toggle in Activate Agent Bot. Your chatbot is already connected to the Omnichat inbox and ready to use!\\n\\n<FigureImage\\n  caption={{ title: \'Figure 16.\', description: `Activate agent bot and final step` }}\\n  src=\\"/assets/images/tutorials/simple-handover/image_16.webp\\"\\n  alt=\\"Simple Handover\\"\\n  naturalHeight={1078}\\n  naturalWidth={2048}\\n/>\\n\\n## Final Demo\\n\\nWe provide video tutorials and interaction demos for agent bot Omnichat features. Check these out:\\n\\n- Create simple bot handover video tutorial\\n\\n<YoutubeEmbedWrapper>\\n  <YoutubeEmbed id=\\"pbqou7Wr4Tc\\" params=\\"v=pbqou7Wr4Tc\\" title=\\"Create simple bot handover video tutorial\\" />\\n</YoutubeEmbedWrapper>\\n\\n- Chatbot interaction with end-user and handover to human agent\\n","code":"var Component=(()=>{var y=Object.create;var s=Object.defineProperty;var C=Object.getOwnPropertyDescriptor;var N=Object.getOwnPropertyNames;var T=Object.getPrototypeOf,j=Object.prototype.hasOwnProperty;var b=t=>s(t,\\"__esModule\\",{value:!0});var H=(t,i)=>()=>(i||t((i={exports:{}}).exports,i),i.exports),F=(t,i)=>{for(var r in i)s(t,r,{get:i[r],enumerable:!0})},f=(t,i,r,n)=>{if(i&&typeof i==\\"object\\"||typeof i==\\"function\\")for(let l of N(i))!j.call(t,l)&&(r||l!==\\"default\\")&&s(t,l,{get:()=>i[l],enumerable:!(n=C(i,l))||n.enumerable});return t},A=(t,i)=>f(b(s(t!=null?y(T(t)):{},\\"default\\",!i&&t&&t.__esModule?{get:()=>t.default,enumerable:!0}:{value:t,enumerable:!0})),t),x=(t=>(i,r)=>t&&t.get(i)||(r=f(b({}),i,1),t&&t.set(i,r),r))(typeof WeakMap!=\\"undefined\\"?new WeakMap:0);var v=H((I,k)=>{k.exports=_jsx_runtime});var L={};F(L,{default:()=>B,frontmatter:()=>S});var e=A(v()),S={layout:\\"tutorial\\",id:\\"create-simple-bot-handover-from-chatbot-to-agent\\",imgSpot:\\"/assets/images/tutorials/spot-simple-handover.webp\\",title:\\"Create Simple Bot Handover from Chatbot to Agent Tutorial\\",product:\\"kata-platform\\",prev:\\"create-igdm-bot-handover-from-chatbot-to-agent\\",date:\\"2018-11-11T07:00:00+07:00\\"};function O(t={}){let{wrapper:i}=t.components||{};return i?(0,e.jsx)(i,Object.assign({},t,{children:(0,e.jsx)(r,{})})):r();function r(){let n=Object.assign({p:\\"p\\",a:\\"a\\",h2:\\"h2\\",span:\\"span\\",em:\\"em\\",h3:\\"h3\\",ol:\\"ol\\",li:\\"li\\",strong:\\"strong\\",h4:\\"h4\\",h1:\\"h1\\",pre:\\"pre\\",code:\\"code\\",ul:\\"ul\\"},t.components),{YoutubeEmbedWrapper:l,YoutubeEmbed:d,Table:g,TableHead:u,TableHeadRow:m,TableHeadCell:p,TableBody:w,TableBodyRow:h,TableBodyCell:c,FigureImage:a}=n;return a||o(\\"FigureImage\\",!0),g||o(\\"Table\\",!0),w||o(\\"TableBody\\",!0),c||o(\\"TableBodyCell\\",!0),h||o(\\"TableBodyRow\\",!0),u||o(\\"TableHead\\",!0),p||o(\\"TableHeadCell\\",!0),m||o(\\"TableHeadRow\\",!0),d||o(\\"YoutubeEmbed\\",!0),l||o(\\"YoutubeEmbedWrapper\\",!0),(0,e.jsxs)(e.Fragment,{children:[(0,e.jsxs)(n.p,{children:[\\"Kata Platform (\\",(0,e.jsx)(n.a,{href:\\"www.platform.kata.ai\\",children:\\"platform.kata.ai\\"}),\\") is a platform to create chatbots and train them with Natural Language Processing (NLP). You can create any chatbots for any use-cases, such as FAQ, campaign, customer service, handover to human agents, and more.\\"]}),`\\n`,(0,e.jsxs)(n.p,{children:[`In this tutorial, we will create a chatbot that is able to handoff conversations to human agents, also known as \\"Agent Handover\'\'. We will use the Kata Omnichat dashboard to connect chatbots with human agents. Check this `,(0,e.jsx)(n.a,{href:\\"/kata-omnichat\\",children:\\"documentation\\"}),\\" for Kata Omnichat explanation.\\"]}),`\\n`,(0,e.jsx)(l,{children:(0,e.jsx)(d,{id:\\"dAHnoTX4BUE\\",params:\\"v=dAHnoTX4BUE\\",title:\\" Create Simple Bot Handover from Chatbot to Agent Tutorial\\"})}),`\\n`,(0,e.jsxs)(n.h2,{id:\\"simple-chatbot-flow\\",children:[(0,e.jsx)(n.a,{className:\\"anchor\\",href:\\"#simple-chatbot-flow\\",children:(0,e.jsx)(n.span,{className:\\"icon icon-link\\"})}),\\"Simple Chatbot Flow\\"]}),`\\n`,(0,e.jsxs)(n.p,{children:[\\"Before we jump into the tutorial, let\\\\u2019s see the scenario for the conversation. We will create a chatbot using \\",(0,e.jsx)(n.em,{children:\\"keywords\\"}),\' which when customers enter \\"1\\" to end the conversation or \\\\u201C2\\\\u201D to do the handover.\']}),`\\n`,(0,e.jsxs)(n.h3,{id:\\"conversation-flow-table\\",children:[(0,e.jsx)(n.a,{className:\\"anchor\\",href:\\"#conversation-flow-table\\",children:(0,e.jsx)(n.span,{className:\\"icon icon-link\\"})}),\\"Conversation Flow Table\\"]}),`\\n`,(0,e.jsxs)(g,{children:[(0,e.jsx)(u,{children:(0,e.jsxs)(m,{children:[(0,e.jsx)(p,{children:\\"Scenario Flow \\"}),(0,e.jsx)(p,{children:(0,e.jsxs)(n.p,{children:[\\"Details \\",(0,e.jsx)(\\"br\\",{}),`\\n(Each row represents 1 bubble message)`]})})]})}),(0,e.jsxs)(w,{children:[(0,e.jsxs)(h,{children:[(0,e.jsx)(c,{children:\\"Greetings\\"}),(0,e.jsxs)(c,{children:[(0,e.jsxs)(n.p,{children:[\\"Halo, selamat datang di layanan CS Bank ABC \\\\u{1F60A} \\",(0,e.jsx)(\\"br\\",{})]}),(0,e.jsx)(\\"br\\",{}),(0,e.jsxs)(n.p,{children:[\\"Apakah ingin dihubungkan ke CS Bank ABC yang sedang available? \\",(0,e.jsx)(\\"br\\",{})]}),(0,e.jsx)(\\"br\\",{}),(0,e.jsx)(n.p,{children:\\"Ya -- lanjut\\"}),(0,e.jsx)(\\"br\\",{}),(0,e.jsx)(n.p,{children:\\"Tidak -- end session\\"}),(0,e.jsx)(\\"br\\",{}),(0,e.jsx)(\\"br\\",{}),(0,e.jsx)(n.p,{children:\\"\\\\u{1F4A1} Cukup ketik angka pilihannya, ya\\"})]})]}),(0,e.jsxs)(h,{children:[(0,e.jsx)(c,{children:\'End conversation if customer typing \\"2\\" \'}),`\\n`,(0,e.jsx)(c,{children:\\"Terima kasih sudah menghubungi Bank ABC \\\\u{1F60A} \\"})]}),(0,e.jsxs)(h,{children:[(0,e.jsx)(c,{children:\\"Customer typing \\\\u201C1\\\\u201D and chatbot request handover to agent\\"}),`\\n`,(0,e.jsx)(c,{children:\\"Mohon menunggu, ya. Sedang kami hubungkan ke CS Bank ABC yang tersedia! \\\\u{1F60A} \\"})]}),(0,e.jsxs)(h,{children:[(0,e.jsx)(c,{children:\\"End session after handover done\\"}),`\\n`,(0,e.jsx)(c,{children:\\"Terima kasih sudah menghubungi Bank ABC \\\\u{1F60A} \\"})]})]})]}),`\\n`,(0,e.jsxs)(n.h2,{id:\\"create-project\\",children:[(0,e.jsx)(n.a,{className:\\"anchor\\",href:\\"#create-project\\",children:(0,e.jsx)(n.span,{className:\\"icon icon-link\\"})}),\\"Create Project\\"]}),`\\n`,(0,e.jsxs)(n.h3,{id:\\"objective-register-your-new-account-and-login-to-the-platform\\",children:[(0,e.jsx)(n.a,{className:\\"anchor\\",href:\\"#objective-register-your-new-account-and-login-to-the-platform\\",children:(0,e.jsx)(n.span,{className:\\"icon icon-link\\"})}),\\"Objective: Register your new account and login to the Platform\\"]}),`\\n`,(0,e.jsxs)(n.ol,{children:[`\\n`,(0,e.jsxs)(n.li,{children:[`\\n`,(0,e.jsxs)(n.p,{children:[\\"Go to \\",(0,e.jsx)(\\"a\\",{href:\\"https://platform.kata.ai\\",target:\\"_blank\\",children:(0,e.jsx)(n.a,{href:\\"https://platform.kata.ai\\",children:\\"https://platform.kata.ai\\"})}),\\" and click \\",(0,e.jsx)(n.strong,{children:\\"Sign Up\\"}),\\" to create new account\\"]}),`\\n`]}),`\\n`,(0,e.jsxs)(n.li,{children:[`\\n`,(0,e.jsxs)(n.p,{children:[\\"Input required fields in sign up page: \\",(0,e.jsx)(n.strong,{children:\\"Username, email address, role and captcha\\"})]}),`\\n`]}),`\\n`,(0,e.jsxs)(n.li,{children:[`\\n`,(0,e.jsx)(n.p,{children:\\"Go to your registered email\\\\u2019s inbox. You will receive an email to verify your account and input your password\\"}),`\\n`]}),`\\n`,(0,e.jsxs)(n.li,{children:[`\\n`,(0,e.jsxs)(n.p,{children:[\\"When you click the \\",(0,e.jsx)(n.strong,{children:\\"Confirm Email\\"}),\\" button in the verification email, you will be redirected to setup password. Insert your password and confirm the password.\\"]}),`\\n`]}),`\\n`,(0,e.jsxs)(n.li,{children:[`\\n`,(0,e.jsxs)(n.p,{children:[\\"You will be redirected to the Login \\",(0,e.jsx)(n.strong,{children:\\"Page\\"}),\\". Input your username and password to continue.\\"]}),`\\n`]}),`\\n`]}),`\\n`,(0,e.jsxs)(n.h3,{id:\\"objective-create-new-chatbot-project\\",children:[(0,e.jsx)(n.a,{className:\\"anchor\\",href:\\"#objective-create-new-chatbot-project\\",children:(0,e.jsx)(n.span,{className:\\"icon icon-link\\"})}),\\"Objective: Create new chatbot project\\"]}),`\\n`,(0,e.jsxs)(n.h4,{id:\\"login-to-kata-platform-and-create-project\\",children:[(0,e.jsx)(n.a,{className:\\"anchor\\",href:\\"#login-to-kata-platform-and-create-project\\",children:(0,e.jsx)(n.span,{className:\\"icon icon-link\\"})}),\\"Login to Kata Platform and create project\\"]}),`\\n`,(0,e.jsxs)(n.ol,{children:[`\\n`,(0,e.jsxs)(n.li,{children:[`\\n`,(0,e.jsxs)(n.p,{children:[\\"Open your browser, then open the URL \\",(0,e.jsx)(\\"a\\",{href:\\"https://platform.kata.ai/login\\",target:\\"_blank\\",children:(0,e.jsx)(n.a,{href:\\"https://platform.kata.ai/login\\",children:\\"https://platform.kata.ai/login\\"})}),\\" and enter your username & password.\\"]}),`\\n`]}),`\\n`,(0,e.jsxs)(n.li,{children:[`\\n`,(0,e.jsxs)(n.p,{children:[\\"Click \\",(0,e.jsx)(n.strong,{children:\'\\"Login\\"\'}),\\" to continue.\\"]}),`\\n`]}),`\\n`,(0,e.jsxs)(n.li,{children:[`\\n`,(0,e.jsxs)(n.p,{children:[\\"Click on \\",(0,e.jsx)(n.strong,{children:\'\\"Create Project\\"\'}),\\" and fill in the form. Each project contains one bot design, one NL, and one CMS.\\"]}),`\\n`]}),`\\n`]}),`\\n`,(0,e.jsxs)(n.h1,{id:\\"create-greetings-flow\\",children:[(0,e.jsx)(n.a,{className:\\"anchor\\",href:\\"#create-greetings-flow\\",children:(0,e.jsx)(n.span,{className:\\"icon icon-link\\"})}),\\"Create Greetings Flow\\"]}),`\\n`,(0,e.jsxs)(n.h3,{id:\\"objective-define-a-flow\\",children:[(0,e.jsx)(n.a,{className:\\"anchor\\",href:\\"#objective-define-a-flow\\",children:(0,e.jsx)(n.span,{className:\\"icon icon-link\\"})}),\\"Objective: Define a flow\\"]}),`\\n`,(0,e.jsxs)(n.h4,{id:\\"create-a-flow-name-handover-we-will-use-1-flow-for-this-simple-bot\\",children:[(0,e.jsx)(n.a,{className:\\"anchor\\",href:\\"#create-a-flow-name-handover-we-will-use-1-flow-for-this-simple-bot\\",children:(0,e.jsx)(n.span,{className:\\"icon icon-link\\"})}),\'Create a flow name \\"Handover\\". We will use 1 flow for this simple bot\']}),`\\n`,(0,e.jsxs)(n.ol,{children:[`\\n`,(0,e.jsxs)(n.li,{children:[`\\n`,(0,e.jsxs)(n.p,{children:[\\"Click \\",(0,e.jsx)(n.strong,{children:\'\\"Create Flow\\"\'}),\\" button in current screen\\"]}),`\\n`]}),`\\n`,(0,e.jsxs)(n.li,{children:[`\\n`,(0,e.jsxs)(n.p,{children:[\'Create flow \\"Handover\\", other fields are left blank. Then, click \',(0,e.jsx)(n.strong,{children:\\"Create\\"}),\\".\\"]}),`\\n`]}),`\\n`]}),`\\n`,(0,e.jsxs)(n.h3,{id:\\"objective-create-greetings-state-to-define-how-to-respond\\",children:[(0,e.jsx)(n.a,{className:\\"anchor\\",href:\\"#objective-create-greetings-state-to-define-how-to-respond\\",children:(0,e.jsx)(n.span,{className:\\"icon icon-link\\"})}),\\"Objective: Create greetings state to define how to respond\\"]}),`\\n`,(0,e.jsxs)(n.h4,{id:\\"create-init-state\\",children:[(0,e.jsx)(n.a,{className:\\"anchor\\",href:\\"#create-init-state\\",children:(0,e.jsx)(n.span,{className:\\"icon icon-link\\"})}),\'Create \\"init\\" state\']}),`\\n`,(0,e.jsxs)(n.ol,{children:[`\\n`,(0,e.jsxs)(n.li,{children:[`\\n`,(0,e.jsx)(n.p,{children:\'Click \\"+\\" icon in bottom right to create new state\'}),`\\n`]}),`\\n`,(0,e.jsxs)(n.li,{children:[`\\n`,(0,e.jsx)(n.p,{children:\'Create state \\"init\\" and click toggle to turn on \\\\u201CInitial State\\\\u201D and other fields are left blank. Then, click Create.\'}),`\\n`]}),`\\n`]}),`\\n`,(0,e.jsxs)(n.h4,{id:\\"create-greetings-as-bot-response-to-show-keywords-menu\\",children:[(0,e.jsx)(n.a,{className:\\"anchor\\",href:\\"#create-greetings-as-bot-response-to-show-keywords-menu\\",children:(0,e.jsx)(n.span,{className:\\"icon icon-link\\"})}),\'Create \\"greetings\\" as bot response to show keywords menu\']}),`\\n`,(0,e.jsxs)(n.ol,{children:[`\\n`,(0,e.jsxs)(n.li,{children:[`\\n`,(0,e.jsxs)(n.p,{children:[\\"Create another state by clicking the \\",(0,e.jsx)(n.strong,{children:\'\\"+\\"\'}),\\" icon in the bottom right to create a new state named \\\\u201Cgreetings\\\\u201D\\"]}),`\\n`]}),`\\n`,(0,e.jsxs)(n.li,{children:[`\\n`,(0,e.jsxs)(n.p,{children:[\\"Click \\",(0,e.jsx)(n.strong,{children:\'\\"Add action\\"\'}),\\", then click \\",(0,e.jsx)(n.strong,{children:\\"\\\\u201C+\\\\u201D\\"}),\\" in the action box to create a new action\\"]}),`\\n`]}),`\\n`,(0,e.jsxs)(n.li,{children:[`\\n`,(0,e.jsx)(n.p,{children:\'When all actions available are shown, then choose \\"Text\\"\'}),`\\n`]}),`\\n`,(0,e.jsxs)(n.li,{children:[`\\n`,(0,e.jsx)(n.p,{children:\'Input action name \\"greetings\\"\'}),`\\n`]}),`\\n`,(0,e.jsxs)(n.li,{children:[`\\n`,(0,e.jsxs)(n.p,{children:[\\"Next, click the \\",(0,e.jsx)(n.strong,{children:\\"Add Variant\\"}),\\" button to fill in with this text:\\"]}),`\\n`]}),`\\n`]}),`\\n`,(0,e.jsx)(n.pre,{children:(0,e.jsx)(n.code,{className:\\"code-highlight\\",children:(0,e.jsx)(n.span,{className:\\"code-line\\",children:`Halo, selamat datang di layanan CS Bank ABC \\\\u{1F60A}\\\\\\\\n\\\\\\\\n Apakah ingin dihubungkan ke CS Bank ABC yang sedang available?\\\\\\\\n\\\\\\\\n1. Ya\\\\\\\\n2. Tidak\\\\\\\\n\\\\\\\\n\\\\u{1F4A1} Cukup ketik angka pilihannya, ya\\n`})})}),`\\n`,(0,e.jsxs)(n.ol,{start:\\"6\\",children:[`\\n`,(0,e.jsxs)(n.li,{children:[`\\n`,(0,e.jsxs)(n.p,{children:[\\"Click \\",(0,e.jsx)(n.strong,{children:\\"Create Action\\"})]}),`\\n`]}),`\\n`,(0,e.jsxs)(n.li,{children:[`\\n`,(0,e.jsxs)(n.p,{children:[\\"To finalize the state creation, click \\",(0,e.jsx)(n.strong,{children:\\"Create\\"}),\\" in state drawer\\"]}),`\\n`]}),`\\n`]}),`\\n`,(0,e.jsxs)(n.h3,{id:\\"objective-catch-end-users-message-when-greet-the-bot\\",children:[(0,e.jsx)(n.a,{className:\\"anchor\\",href:\\"#objective-catch-end-users-message-when-greet-the-bot\\",children:(0,e.jsx)(n.span,{className:\\"icon icon-link\\"})}),\\"Objective: Catch end-user\\\\u2019s message when greet the bot\\"]}),`\\n`,(0,e.jsxs)(n.h4,{id:\\"create-greetings-keywords-to-build-understanding-in-chatbots-when-end-users-greet-the-bot-we-will-use-the-nlus-feature-to-create-the-keywords\\",children:[(0,e.jsx)(n.a,{className:\\"anchor\\",href:\\"#create-greetings-keywords-to-build-understanding-in-chatbots-when-end-users-greet-the-bot-we-will-use-the-nlus-feature-to-create-the-keywords\\",children:(0,e.jsx)(n.span,{className:\\"icon icon-link\\"})}),\'Create \\"greetings\\" keywords to build understanding in chatbots when end-user\\\\u2019s greet the bot. We will use the NLUs feature to create the keywords.\']}),`\\n`,(0,e.jsxs)(n.ol,{children:[`\\n`,(0,e.jsxs)(n.li,{children:[`\\n`,(0,e.jsxs)(n.p,{children:[\\"Go to the menu \\",(0,e.jsx)(n.strong,{children:\'\\"NLUs\\"\'}),\\" which is placed under the \\\\u201CConversation Flows\\\\u201D menu. Your screen will be switched to create NLUs\\"]}),`\\n`]}),`\\n`,(0,e.jsxs)(n.li,{children:[`\\n`,(0,e.jsxs)(n.p,{children:[\\"Click \\",(0,e.jsx)(n.strong,{children:\\"Create NLU\\"})]}),`\\n`]}),`\\n`,(0,e.jsxs)(n.li,{children:[`\\n`,(0,e.jsx)(n.p,{children:\\"Then, fill in the fields as follow\\"}),`\\n`]}),`\\n`]}),`\\n`,(0,e.jsx)(n.pre,{children:(0,e.jsxs)(n.code,{className:\\"code-highlight\\",children:[(0,e.jsx)(n.span,{className:\\"code-line\\",children:`NLU Name: greetings\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`NLU Type: Keyword\\n`})]})}),`\\n`,(0,e.jsxs)(n.ol,{start:\\"4\\",children:[`\\n`,(0,e.jsxs)(n.li,{children:[\\"Next, click \\",(0,e.jsx)(n.strong,{children:\'\\"Add Keyword\\"\'}),\\" to define any words to trigger the bot. Fill in the main keyword as follow\\"]}),`\\n`]}),`\\n`,(0,e.jsx)(n.pre,{children:(0,e.jsx)(n.code,{className:\\"code-highlight\\",children:(0,e.jsx)(n.span,{className:\\"code-line\\",children:`Main keyword: hi\\n`})})}),`\\n`,(0,e.jsxs)(n.ol,{start:\\"5\\",children:[`\\n`,(0,e.jsx)(n.li,{children:\'Add a new word by pressing \\"enter\\" on your keyboard. Every time you write a new word, press \\\\u201Center\\\\u201D on your keyboard to save the word. Add these words\'}),`\\n`]}),`\\n`,(0,e.jsx)(a,{src:\\"/assets/images/tutorials/simple-handover/image_1.webp\\",alt:\\"Simple Handover\\",caption:{title:\\"Figure 1.\\",description:\\"Add more keywords for greetings\\"},naturalHeight:272,naturalWidth:818}),`\\n`,(0,e.jsxs)(n.ol,{start:\\"6\\",children:[`\\n`,(0,e.jsxs)(n.li,{children:[\\"Click \\",(0,e.jsx)(n.strong,{children:\'\\"Create\\"\'}),\\" to save the NLUs\\"]}),`\\n`]}),`\\n`,(0,e.jsxs)(n.h4,{id:\\"create-greetings-intent-to-catch-users-input\\",children:[(0,e.jsx)(n.a,{className:\\"anchor\\",href:\\"#create-greetings-intent-to-catch-users-input\\",children:(0,e.jsx)(n.span,{className:\\"icon icon-link\\"})}),\'Create \\"greetings\\" intent to catch user\\\\u2019s input\']}),`\\n`,(0,e.jsxs)(n.ol,{children:[`\\n`,(0,e.jsxs)(n.li,{children:[`\\n`,(0,e.jsx)(n.p,{children:\\"Click the Intent tab which is placed next to the Conversation Flows sidebar.\\"}),`\\n`]}),`\\n`,(0,e.jsxs)(n.li,{children:[`\\n`,(0,e.jsxs)(n.p,{children:[\\"Click \\",(0,e.jsx)(n.strong,{children:\\"Create Intent\\"}),\\" button\\"]}),`\\n`]}),`\\n`,(0,e.jsxs)(n.li,{children:[`\\n`,(0,e.jsx)(n.p,{children:\'Fill in the intent as follows. The choice of \\"Intent type\\" is text, which means it will catch incoming messages with text only. On classifier, use \\\\u201Cgreetings\\\\u201D NLUs that we\\\\u2019ve created in previous step to connect the intent with create keywords for greetings\'}),`\\n`]}),`\\n`]}),`\\n`,(0,e.jsx)(a,{caption:{title:\\"Figure 2.\\",description:\\"Create intent and create mapping with greetings keyword\\"},src:\\"/assets/images/tutorials/simple-handover/image_2.webp\\",alt:\\"Simple Handover\\",naturalHeight:1496,naturalWidth:990}),`\\n`,(0,e.jsxs)(n.ol,{start:\\"4\\",children:[`\\n`,(0,e.jsxs)(n.li,{children:[\\"Then, click \\",(0,e.jsx)(n.strong,{children:\\"Create\\"}),\\".\\"]}),`\\n`]}),`\\n`,(0,e.jsxs)(n.h3,{id:\\"objective-connect-init-and-greetings-states-by-creating-a-transition\\",children:[(0,e.jsx)(n.a,{className:\\"anchor\\",href:\\"#objective-connect-init-and-greetings-states-by-creating-a-transition\\",children:(0,e.jsx)(n.span,{className:\\"icon icon-link\\"})}),\'Objective: Connect \\"init\\" and \\\\u201Cgreetings\\\\u201D states by creating a transition\']}),`\\n`,(0,e.jsxs)(n.h4,{id:\\"create-a-transition-to-connect-init-and-greetings-states-the-transition-will-define-in-which-condition-the-greetings-state-including-the-actions-state-will-be-executed\\",children:[(0,e.jsx)(n.a,{className:\\"anchor\\",href:\\"#create-a-transition-to-connect-init-and-greetings-states-the-transition-will-define-in-which-condition-the-greetings-state-including-the-actions-state-will-be-executed\\",children:(0,e.jsx)(n.span,{className:\\"icon icon-link\\"})}),\'Create a transition to connect \\"\',(0,e.jsx)(n.em,{children:\\"init\\"}),\'\\" and \\\\u201C\',(0,e.jsx)(n.em,{children:\\"greetings\\"}),\\"\\\\u201D states. The transition will define in which condition the greetings state, including the actions\\\\u2019 state, will be executed.\\"]}),`\\n`,(0,e.jsxs)(n.ol,{children:[`\\n`,(0,e.jsxs)(n.li,{children:[`\\n`,(0,e.jsxs)(n.p,{children:[\'Pull a line from the \\"init\\" state and drag it to the \\\\u201Cgreetings\\\\u201D state. If you succeed, then it will show a \',(0,e.jsx)(n.strong,{children:\\"Create Transition\\"}),\\" drawer\\"]}),`\\n`]}),`\\n`,(0,e.jsxs)(n.li,{children:[`\\n`,(0,e.jsx)(n.p,{children:\\"Fill in the transition as follow\\"}),`\\n`]}),`\\n`]}),`\\n`,(0,e.jsx)(a,{caption:{title:\\"Figure 3.\\",description:\\"Create transition\\"},src:\\"/assets/images/tutorials/simple-handover/image_3.webp\\",alt:\\"Simple Handover\\",naturalHeight:834,naturalWidth:930}),`\\n`,(0,e.jsxs)(n.ol,{start:\\"3\\",children:[`\\n`,(0,e.jsxs)(n.li,{children:[\\"Click \\",(0,e.jsx)(n.strong,{children:\'\\"Create Transition\\"\'})]}),`\\n`]}),`\\n`,(0,e.jsxs)(n.h2,{id:\\"catch-end-users-typing-when-choosing-menu\\",children:[(0,e.jsx)(n.a,{className:\\"anchor\\",href:\\"#catch-end-users-typing-when-choosing-menu\\",children:(0,e.jsx)(n.span,{className:\\"icon icon-link\\"})}),\\"Catch End-user\\\\u2019s Typing when Choosing Menu\\"]}),`\\n`,(0,e.jsxs)(n.h3,{id:\\"objective-catch-end-users-message-when-choosing-menu-by-typing-1-or-2\\",children:[(0,e.jsx)(n.a,{className:\\"anchor\\",href:\\"#objective-catch-end-users-message-when-choosing-menu-by-typing-1-or-2\\",children:(0,e.jsx)(n.span,{className:\\"icon icon-link\\"})}),\'Objective: Catch end-user\\\\u2019s message when choosing menu by typing \\"1\\" or \\\\u201C2\\\\u201D\']}),`\\n`,(0,e.jsxs)(n.h4,{id:\\"create-menu-keywords\\",children:[(0,e.jsx)(n.a,{className:\\"anchor\\",href:\\"#create-menu-keywords\\",children:(0,e.jsx)(n.span,{className:\\"icon icon-link\\"})}),\'Create \\"menu\\" keywords\']}),`\\n`,(0,e.jsxs)(n.ol,{children:[`\\n`,(0,e.jsxs)(n.li,{children:[`\\n`,(0,e.jsxs)(n.p,{children:[\\"Go to the menu \\",(0,e.jsx)(n.strong,{children:\'\\"NLUs\\"\'}),\\" which is placed under the \\\\u201CConversation Flows\\\\u201D menu. Your screen will be switched to create NLUs\\"]}),`\\n`]}),`\\n`,(0,e.jsxs)(n.li,{children:[`\\n`,(0,e.jsxs)(n.p,{children:[\\"Click \\",(0,e.jsx)(n.strong,{children:\\"Create NLU\\"})]}),`\\n`]}),`\\n`,(0,e.jsxs)(n.li,{children:[`\\n`,(0,e.jsx)(n.p,{children:\\"Then, fill in the fields as follow\\"}),`\\n`]}),`\\n`]}),`\\n`,(0,e.jsx)(n.pre,{children:(0,e.jsxs)(n.code,{className:\\"code-highlight\\",children:[(0,e.jsx)(n.span,{className:\\"code-line\\",children:`NLU Name: menu\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`NLU Type: Keyword\\n`})]})}),`\\n`,(0,e.jsxs)(n.ol,{start:\\"4\\",children:[`\\n`,(0,e.jsxs)(n.li,{children:[\\"Next, click \\",(0,e.jsx)(n.strong,{children:\'\\"Add Keyword\\"\'}),\\" to define any words to trigger the bot. Fill in the main keyword as follow\\"]}),`\\n`]}),`\\n`,(0,e.jsx)(n.pre,{children:(0,e.jsx)(n.code,{className:\\"code-highlight\\",children:(0,e.jsx)(n.span,{className:\\"code-line\\",children:`Main keyword: satu\\n`})})}),`\\n`,(0,e.jsxs)(n.ol,{start:\\"5\\",children:[`\\n`,(0,e.jsx)(n.li,{children:\'Add a new word by pressing \\"enter\\" on your keyboard. Every time you write a new word, press \\\\u201Center\\\\u201D on your keyboard to save the word. Add these words. \\\\u201Csatu\\\\u201D and \\\\u201Cdua\\\\u201D as the main keywords mean they define what your end-users will be inputted when choose menu\'}),`\\n`]}),`\\n`,(0,e.jsx)(a,{caption:{title:\\"Figure 4.\\",description:\\"Create keywords to identify input from chatbot users when choosing menu\\"},src:\\"/assets/images/tutorials/simple-handover/image_4.webp\\",alt:\\"Simple Handover\\",naturalHeight:1264,naturalWidth:960}),`\\n`,(0,e.jsxs)(n.ol,{start:\\"6\\",children:[`\\n`,(0,e.jsxs)(n.li,{children:[\\"Click \\",(0,e.jsx)(n.strong,{children:\'\\"Create\\"\'}),\\" to save the NLUs\\"]}),`\\n`]}),`\\n`,(0,e.jsxs)(n.h4,{id:\\"create-an-intent-menu-to-catch-the-end-users-input\\",children:[(0,e.jsx)(n.a,{className:\\"anchor\\",href:\\"#create-an-intent-menu-to-catch-the-end-users-input\\",children:(0,e.jsx)(n.span,{className:\\"icon icon-link\\"})}),`Create an intent \\"menu\\" to catch the end-user\'s input`]}),`\\n`,(0,e.jsxs)(n.ol,{children:[`\\n`,(0,e.jsxs)(n.li,{children:[`\\n`,(0,e.jsx)(n.p,{children:\\"Click the Intent tab which is placed next to the Conversation Flows sidebar.\\"}),`\\n`]}),`\\n`,(0,e.jsxs)(n.li,{children:[`\\n`,(0,e.jsxs)(n.p,{children:[\\"Click \\",(0,e.jsx)(n.strong,{children:\\"Create Intent\\"}),\\" button\\"]}),`\\n`]}),`\\n`,(0,e.jsxs)(n.li,{children:[`\\n`,(0,e.jsx)(n.p,{children:`Fill in the intent as follows. This intent will catch the end-user\'s input after typing \\"1\\" or \\\\u201C2\\\\u201D. Adding a classifier with \\\\u201Cmenu\\\\u201D to define this intent will be executed whenever a sentence has the \\\\u201Cmenu\\\\u201D keyword. Add attributes and choose NLU \\\\u201Cmenu\\\\u201D, because we have 2 main keywords that need to be understood by the intent to execute the handover path or end conversation path.`}),`\\n`]}),`\\n`]}),`\\n`,(0,e.jsx)(a,{caption:{title:\\"Figure 5.\\",description:\\"Create intent for showing main menu and mapping from created keywords\\"},src:\\"/assets/images/tutorials/simple-handover/image_5.webp\\",alt:\\"Simple Handover\\",naturalHeight:1484,naturalWidth:722}),`\\n`,(0,e.jsxs)(n.ol,{start:\\"4\\",children:[`\\n`,(0,e.jsxs)(n.li,{children:[\\"Then, click \\",(0,e.jsx)(n.strong,{children:\\"Create\\"}),\\".\\"]}),`\\n`]}),`\\n`,(0,e.jsxs)(n.h2,{id:\\"create-handover-to-human-agent-flow\\",children:[(0,e.jsx)(n.a,{className:\\"anchor\\",href:\\"#create-handover-to-human-agent-flow\\",children:(0,e.jsx)(n.span,{className:\\"icon icon-link\\"})}),\\"Create Handover to Human Agent Flow\\"]}),`\\n`,(0,e.jsxs)(n.h3,{id:\\"objective-create-a-flow-that-end-user-can-request-handover-to-human-agents-by-using-handover-api\\",children:[(0,e.jsx)(n.a,{className:\\"anchor\\",href:\\"#objective-create-a-flow-that-end-user-can-request-handover-to-human-agents-by-using-handover-api\\",children:(0,e.jsx)(n.span,{className:\\"icon icon-link\\"})}),\\"Objective: Create a flow that end-user can request handover to human agents by using Handover API\\"]}),`\\n`,(0,e.jsxs)(n.h4,{id:\\"create-handover-state\\",children:[(0,e.jsx)(n.a,{className:\\"anchor\\",href:\\"#create-handover-state\\",children:(0,e.jsx)(n.span,{className:\\"icon icon-link\\"})}),\\"Create handover state\\"]}),`\\n`,(0,e.jsxs)(n.ol,{children:[`\\n`,(0,e.jsxs)(n.li,{children:[`\\n`,(0,e.jsxs)(n.p,{children:[\\"Click \\",(0,e.jsx)(n.strong,{children:\'\\"+\\"\'}),\\" icon in bottom right to create new state\\"]}),`\\n`]}),`\\n`,(0,e.jsxs)(n.li,{children:[`\\n`,(0,e.jsx)(n.p,{children:\'Fill in the state name with \\"handover\\" and activate toggle \\\\u201CEnd state\\\\u201D\'}),`\\n`]}),`\\n`]}),`\\n`,(0,e.jsxs)(n.h4,{id:\\"create-bot-response-to-inform-end-user-that-the-handover-request-has-been-received-and-waiting-for-agents-to-reply\\",children:[(0,e.jsx)(n.a,{className:\\"anchor\\",href:\\"#create-bot-response-to-inform-end-user-that-the-handover-request-has-been-received-and-waiting-for-agents-to-reply\\",children:(0,e.jsx)(n.span,{className:\\"icon icon-link\\"})}),\\"Create bot response to inform end-user that the handover request has been received and waiting for agents to reply\\"]}),`\\n`,(0,e.jsxs)(n.ol,{children:[`\\n`,(0,e.jsxs)(n.li,{children:[`\\n`,(0,e.jsxs)(n.p,{children:[\\"Click \\",(0,e.jsx)(n.strong,{children:\'\\"+\\"\'}),\\" in action box to create new action\\"]}),`\\n`]}),`\\n`,(0,e.jsxs)(n.li,{children:[`\\n`,(0,e.jsx)(n.p,{children:\'When all actions available are shown, then choose \\"Text\\"\'}),`\\n`]}),`\\n`,(0,e.jsxs)(n.li,{children:[`\\n`,(0,e.jsx)(n.p,{children:\'Input action name \\"waitForAgent\\"\'}),`\\n`]}),`\\n`,(0,e.jsxs)(n.li,{children:[`\\n`,(0,e.jsxs)(n.p,{children:[\\"Next, click the \\",(0,e.jsx)(n.strong,{children:\\"Add Variant\\"}),\\" button to fill in with this text:\\"]}),`\\n`]}),`\\n`]}),`\\n`,(0,e.jsx)(n.pre,{children:(0,e.jsx)(n.code,{className:\\"code-highlight\\",children:(0,e.jsx)(n.span,{className:\\"code-line\\",children:`Mohon menunggu, ya. Sedang kami hubungkan ke CS Bank ABC yang tersedia! \\\\u{1F60A}\\n`})})}),`\\n`,(0,e.jsxs)(n.ol,{start:\\"5\\",children:[`\\n`,(0,e.jsxs)(n.li,{children:[\\"Click \\",(0,e.jsx)(n.strong,{children:\\"Create Action\\"})]}),`\\n`]}),`\\n`,(0,e.jsxs)(n.h4,{id:\\"use-handover-api-to-send-handover-request-to-omnichat\\",children:[(0,e.jsx)(n.a,{className:\\"anchor\\",href:\\"#use-handover-api-to-send-handover-request-to-omnichat\\",children:(0,e.jsx)(n.span,{className:\\"icon icon-link\\"})}),\\"Use Handover API to send handover request to Omnichat\\"]}),`\\n`,(0,e.jsxs)(n.ol,{children:[`\\n`,(0,e.jsxs)(n.li,{children:[`\\n`,(0,e.jsxs)(n.p,{children:[\\"Create another action by clicking \\",(0,e.jsx)(n.strong,{children:\'\\"Add action\\"\'})]}),`\\n`]}),`\\n`,(0,e.jsxs)(n.li,{children:[`\\n`,(0,e.jsxs)(n.p,{children:[\\"Click \\",(0,e.jsx)(n.strong,{children:\'\\"+\\"\'}),\\" in action box to create new action\\"]}),`\\n`]}),`\\n`,(0,e.jsxs)(n.li,{children:[`\\n`,(0,e.jsx)(n.p,{children:\'Fill in action name with \\"handover\\"\'}),`\\n`]}),`\\n`,(0,e.jsxs)(n.li,{children:[`\\n`,(0,e.jsx)(n.p,{children:\'When all actions available are shown, then choose \\"API\\"\'}),`\\n`]}),`\\n`,(0,e.jsxs)(n.li,{children:[`\\n`,(0,e.jsxs)(n.p,{children:[\\"Choose \\",(0,e.jsx)(n.strong,{children:\\"Handover API\\"})]}),`\\n`]}),`\\n`,(0,e.jsxs)(n.li,{children:[`\\n`,(0,e.jsxs)(n.p,{children:[\\"Click \\",(0,e.jsx)(n.strong,{children:\\"Create Action\\"}),\\" button\\"]}),`\\n`]}),`\\n`,(0,e.jsxs)(n.li,{children:[`\\n`,(0,e.jsxs)(n.p,{children:[\\"To finalize this step when creating a new state, click the \\",(0,e.jsx)(n.strong,{children:\\"Create\\"}),\\" button in the state drawer\\"]}),`\\n`]}),`\\n`]}),`\\n`,(0,e.jsxs)(n.h4,{id:\\"create-a-transition-to-connect-greetings-and-handover-states\\",children:[(0,e.jsx)(n.a,{className:\\"anchor\\",href:\\"#create-a-transition-to-connect-greetings-and-handover-states\\",children:(0,e.jsx)(n.span,{className:\\"icon icon-link\\"})}),\'Create a transition to connect \\"greetings\\" and \\\\u201Chandover\\\\u201D states\']}),`\\n`,(0,e.jsxs)(n.ol,{children:[`\\n`,(0,e.jsxs)(n.li,{children:[`\\n`,(0,e.jsxs)(n.p,{children:[\'Pull a line from the \\"greetings\\" state and drag it to the \\\\u201Chandover\\\\u201D state. If you succeed, then it will show a \',(0,e.jsx)(n.strong,{children:\\"Create Transitio\\"}),\\"n drawer\\"]}),`\\n`]}),`\\n`,(0,e.jsxs)(n.li,{children:[`\\n`,(0,e.jsxs)(n.p,{children:[`Fill in the transition as follows. This condition means if the end-user\'s keyword is identified as \\"menu\\" `,(0,e.jsx)(n.em,{children:\\"and\\"}),\\" they are typing \\\\u201C1\\\\u201D, then it will show the \\\\u201Chandover\\\\u201D state including the actions\\\\u2019 state.\\"]}),`\\n`]}),`\\n`]}),`\\n`,(0,e.jsx)(a,{caption:{title:\\"Figure 6.\\",description:\'Create transition and mapping if chatbot users choose \\"1\\", then execute handover state\'},src:\\"/assets/images/tutorials/simple-handover/image_6.webp\\",alt:\\"Simple Handover\\",naturalHeight:604,naturalWidth:712}),`\\n`,(0,e.jsxs)(n.ol,{start:\\"3\\",children:[`\\n`,(0,e.jsxs)(n.li,{children:[\\"Click \\",(0,e.jsx)(n.strong,{children:\\"Create\\"})]}),`\\n`]}),`\\n`,(0,e.jsxs)(n.h2,{id:\\"create-end-conversation-flow\\",children:[(0,e.jsx)(n.a,{className:\\"anchor\\",href:\\"#create-end-conversation-flow\\",children:(0,e.jsx)(n.span,{className:\\"icon icon-link\\"})}),\\"Create End Conversation Flow\\"]}),`\\n`,(0,e.jsxs)(n.h3,{id:\\"objective-create-a-flow-that-end-user-doesnt-want-to-handover-to-agent-and-end-the-conversation\\",children:[(0,e.jsx)(n.a,{className:\\"anchor\\",href:\\"#objective-create-a-flow-that-end-user-doesnt-want-to-handover-to-agent-and-end-the-conversation\\",children:(0,e.jsx)(n.span,{className:\\"icon icon-link\\"})}),\\"Objective: Create a flow that end-user doesn\\\\u2019t want to handover to agent and end the conversation\\"]}),`\\n`,(0,e.jsxs)(n.h4,{id:\\"create-end-state-to-cancel-handover-agent-and-finish-the-conversation\\",children:[(0,e.jsx)(n.a,{className:\\"anchor\\",href:\\"#create-end-state-to-cancel-handover-agent-and-finish-the-conversation\\",children:(0,e.jsx)(n.span,{className:\\"icon icon-link\\"})}),\'Create \\"end\\" state to cancel handover agent and finish the conversation\']}),`\\n`,(0,e.jsxs)(n.ol,{children:[`\\n`,(0,e.jsxs)(n.li,{children:[`\\n`,(0,e.jsxs)(n.p,{children:[\\"Click \\",(0,e.jsx)(n.strong,{children:\'\\"+\\"\'}),\\" icon in bottom left to create new state\\"]}),`\\n`]}),`\\n`,(0,e.jsxs)(n.li,{children:[`\\n`,(0,e.jsx)(n.p,{children:\'Fill in the state name with \\"end\\" and click toggle \\\\u201CEnd state\\\\u201D to set the state as the end of the flow.\'}),`\\n`]}),`\\n`,(0,e.jsxs)(n.li,{children:[`\\n`,(0,e.jsxs)(n.p,{children:[\\"Click \\",(0,e.jsx)(n.strong,{children:\'\\"Add action\\",\'}),\\" then click \\\\u201C+\\\\u201D to create new action\\"]}),`\\n`]}),`\\n`,(0,e.jsxs)(n.li,{children:[`\\n`,(0,e.jsx)(n.p,{children:\'Choose Text, then fill in the action name with \\"end\\".\'}),`\\n`]}),`\\n`,(0,e.jsxs)(n.li,{children:[`\\n`,(0,e.jsxs)(n.p,{children:[\\"Next, click the \\",(0,e.jsx)(n.strong,{children:\'\\"Add Variant\\"\'}),\\" button and input the following text:\\"]}),`\\n`]}),`\\n`]}),`\\n`,(0,e.jsx)(n.pre,{children:(0,e.jsx)(n.code,{className:\\"code-highlight\\",children:(0,e.jsx)(n.span,{className:\\"code-line\\",children:`Terima kasih sudah menghubungi Bank ABC \\\\u{1F60A}\\n`})})}),`\\n`,(0,e.jsxs)(n.ol,{start:\\"6\\",children:[`\\n`,(0,e.jsxs)(n.li,{children:[\\"Click \\",(0,e.jsx)(n.strong,{children:\\"Create\\"}),\\" to finalize\\"]}),`\\n`]}),`\\n`,(0,e.jsxs)(n.h4,{id:\\"create-a-transition-to-connect-greetings-and-end-states\\",children:[(0,e.jsx)(n.a,{className:\\"anchor\\",href:\\"#create-a-transition-to-connect-greetings-and-end-states\\",children:(0,e.jsx)(n.span,{className:\\"icon icon-link\\"})}),\'Create a transition to connect \\"greetings\\" and \\\\u201Cend\\\\u201D states\']}),`\\n`,(0,e.jsxs)(n.ol,{children:[`\\n`,(0,e.jsxs)(n.li,{children:[`\\n`,(0,e.jsx)(n.p,{children:\'Pull a line from the \\"greetings\\" state and drag it to the \\\\u201Cend\\\\u201D state. If you succeed, then it will show a Create Transition drawer\'}),`\\n`]}),`\\n`,(0,e.jsxs)(n.li,{children:[`\\n`,(0,e.jsxs)(n.p,{children:[`Fill in the transition as follows. This condition means if the end-user\'s keyword is identified as \\"menu\\" `,(0,e.jsx)(n.em,{children:\\"and\\"}),\\" they are typing \\\\u201C2\\\\u201D, then it will execute the \\\\u201Cend\\\\u201D state\\"]}),`\\n`]}),`\\n`]}),`\\n`,(0,e.jsx)(a,{caption:{title:\\"Figure 7.\\",description:\'Create transition and mapping if chatbot users choose \\"2\\", then execute end conversation\'},src:\\"/assets/images/tutorials/simple-handover/image_7.webp\\",alt:\\"Simple Handover\\",naturalHeight:630,naturalWidth:704}),`\\n`,(0,e.jsxs)(n.ol,{start:\\"3\\",children:[`\\n`,(0,e.jsxs)(n.li,{children:[\\"Click \\",(0,e.jsx)(n.strong,{children:\\"Create\\"})]}),`\\n`]}),`\\n`,(0,e.jsxs)(n.h2,{id:\\"finalize-your-new-bot\\",children:[(0,e.jsx)(n.a,{className:\\"anchor\\",href:\\"#finalize-your-new-bot\\",children:(0,e.jsx)(n.span,{className:\\"icon icon-link\\"})}),\\"Finalize Your New Bot\\"]}),`\\n`,(0,e.jsxs)(n.h3,{id:\\"objective-publish-your-bot-to-save-the-chatbot-flow\\",children:[(0,e.jsx)(n.a,{className:\\"anchor\\",href:\\"#objective-publish-your-bot-to-save-the-chatbot-flow\\",children:(0,e.jsx)(n.span,{className:\\"icon icon-link\\"})}),\\"Objective: Publish your bot to save the chatbot flow\\"]}),`\\n`,(0,e.jsxs)(n.ol,{children:[`\\n`,(0,e.jsxs)(n.li,{children:[`\\n`,(0,e.jsxs)(n.p,{children:[\\"Click on the \\",(0,e.jsx)(n.strong,{children:\'\\"Publish\\"\'}),\\" button which is placed on top right corner\\"]}),`\\n`]}),`\\n`,(0,e.jsxs)(n.li,{children:[`\\n`,(0,e.jsxs)(n.p,{children:[\\"Fill in the \\",(0,e.jsx)(n.strong,{children:\\"change log\\"}),\'. You can input \\"Initial version\\" in the change log\']}),`\\n`]}),`\\n`,(0,e.jsxs)(n.li,{children:[`\\n`,(0,e.jsxs)(n.p,{children:[\\"Click \\",(0,e.jsx)(n.strong,{children:\\"Publish\\"}),\\" to save the change log. Lastly, your final chatbot flow will be like this:\\"]}),`\\n`]}),`\\n`]}),`\\n`,(0,e.jsx)(a,{caption:{title:\\"Figure 8.\\",description:\\"Final conversation flow\\"},src:\\"/assets/images/tutorials/simple-handover/image_8.webp\\",alt:\\"Simple Handover\\",naturalHeight:634,naturalWidth:2048}),`\\n`,(0,e.jsxs)(n.h3,{id:\\"objective-testing-your-bot-in-emulator\\",children:[(0,e.jsx)(n.a,{className:\\"anchor\\",href:\\"#objective-testing-your-bot-in-emulator\\",children:(0,e.jsx)(n.span,{className:\\"icon icon-link\\"})}),\\"Objective: Testing your bot in emulator\\"]}),`\\n`,(0,e.jsxs)(n.ol,{children:[`\\n`,(0,e.jsxs)(n.li,{children:[`\\n`,(0,e.jsxs)(n.p,{children:[\\"On the bottom of your right screen, there is a small button named \\",(0,e.jsx)(n.strong,{children:\'\\"Test NLU\\".\'}),\\" Click the \\",(0,e.jsx)(n.strong,{children:\\"button\\"}),\\" to start.\\"]}),`\\n`]}),`\\n`,(0,e.jsxs)(n.li,{children:[`\\n`,(0,e.jsx)(n.p,{children:\'You can try to test your bot by inputting a message in the text bot. Say \\"hi\\" to your bot. If it succeeds, your bot will reply as follows\'}),`\\n`]}),`\\n`]}),`\\n`,(0,e.jsx)(a,{caption:{title:\\"Figure 9.\\",description:\'Testing your bot in emulator by typing \\"hi\\"\'},src:\\"/assets/images/tutorials/simple-handover/image_9.webp\\",alt:\\"Simple Handover\\",naturalHeight:1192,naturalWidth:1914}),`\\n`,(0,e.jsx)(a,{caption:{title:\\"Figure 10.\\",description:\'Testing bot by typing \\"1\\" or \\"2\\"\'},src:\\"/assets/images/tutorials/simple-handover/image_10.webp\\",alt:\\"Simple Handover\\",naturalHeight:1148,naturalWidth:1878}),`\\n`,(0,e.jsxs)(n.ol,{start:\\"3\\",children:[`\\n`,(0,e.jsxs)(n.li,{children:[\\"If you want to \\",(0,e.jsx)(n.strong,{children:\\"restart\\"}),\\" the session, click refresh icon which is placed at the bottom\\"]}),`\\n`]}),`\\n`,(0,e.jsxs)(n.h3,{id:\\"objective-deploy-your-bot\\",children:[(0,e.jsx)(n.a,{className:\\"anchor\\",href:\\"#objective-deploy-your-bot\\",children:(0,e.jsx)(n.span,{className:\\"icon icon-link\\"})}),\\"Objective: Deploy your bot\\"]}),`\\n`,(0,e.jsxs)(n.h4,{id:\\"create-new-deployment\\",children:[(0,e.jsx)(n.a,{className:\\"anchor\\",href:\\"#create-new-deployment\\",children:(0,e.jsx)(n.span,{className:\\"icon icon-link\\"})}),\\"Create new deployment\\"]}),`\\n`,(0,e.jsxs)(n.ol,{children:[`\\n`,(0,e.jsxs)(n.li,{children:[`\\n`,(0,e.jsxs)(n.p,{children:[\\"Go to the \\",(0,e.jsx)(n.strong,{children:\'\\"Deploy\\"\'}),\\" menu in the left sidebar\\"]}),`\\n`]}),`\\n`,(0,e.jsxs)(n.li,{children:[`\\n`,(0,e.jsxs)(n.p,{children:[\\"In this page, click on the \\",(0,e.jsx)(n.strong,{children:\'\\"New Deployment\\"\'}),\\" button which is placed in the top right corner. If you successfully clicked, it will show a create deployment drawer\\"]}),`\\n`]}),`\\n`,(0,e.jsxs)(n.li,{children:[`\\n`,(0,e.jsx)(n.p,{children:\\"Choose any deployment version you want to deploy and fill in the change log. Or you can simply follow this screenshot\\"}),`\\n`]}),`\\n`]}),`\\n`,(0,e.jsx)(a,{caption:{title:\\"Figure 11.\\",description:\\"Create new deployment\\"},src:\\"/assets/images/tutorials/simple-handover/image_11.webp\\",alt:\\"Simple Handover\\",naturalHeight:1890,naturalWidth:1338}),`\\n`,(0,e.jsxs)(n.ol,{start:\\"4\\",children:[`\\n`,(0,e.jsxs)(n.li,{children:[\\"Click \\",(0,e.jsx)(n.strong,{children:\\"Submit\\"}),\\" to finish the deployment\\"]}),`\\n`]}),`\\n`,(0,e.jsxs)(n.h4,{id:\\"create-new-environment-as-prerequisites-to-deploy-the-bot-to-channel\\",children:[(0,e.jsx)(n.a,{className:\\"anchor\\",href:\\"#create-new-environment-as-prerequisites-to-deploy-the-bot-to-channel\\",children:(0,e.jsx)(n.span,{className:\\"icon icon-link\\"})}),\\"Create new environment as prerequisites to deploy the bot to channel\\"]}),`\\n`,(0,e.jsxs)(n.ol,{children:[`\\n`,(0,e.jsxs)(n.li,{children:[\\"Go to the \\",(0,e.jsx)(n.strong,{children:\\"Environment\\"}),\' menu which is placed under the current menu (\\"Overview\\"). If you successfully entered the Environment menu, you will see a page like this. These 3 environments represent that your chatbot will be tested in development or staging first, before go live as in Production stage\']}),`\\n`]}),`\\n`,(0,e.jsx)(a,{caption:{title:\\"Figure 12.\\",description:\\"Set up environment\\"},src:\\"/assets/images/tutorials/simple-handover/image_12.webp\\",alt:\\"Simple Handover\\",naturalHeight:647,naturalWidth:2048}),`\\n`,(0,e.jsxs)(n.ol,{start:\\"2\\",children:[`\\n`,(0,e.jsxs)(n.li,{children:[`\\n`,(0,e.jsxs)(n.p,{children:[\\"Click the \\",(0,e.jsx)(n.strong,{children:\\"Create Environment\\"}),\\" button in the Development environment and you will see a drawer to create new environment\\"]}),`\\n`]}),`\\n`,(0,e.jsxs)(n.li,{children:[`\\n`,(0,e.jsxs)(n.p,{children:[\\"Choose the \\",(0,e.jsx)(n.strong,{children:\\"development version\\"}),\\" you want to (in this tutorial we will use the 1.0.0 version)\\"]}),`\\n`]}),`\\n`,(0,e.jsxs)(n.li,{children:[`\\n`,(0,e.jsxs)(n.p,{children:[\\"Fill in the \\",(0,e.jsx)(n.strong,{children:\\"environment URL\\"}),\\". This environment URL will be useful if you use our CMS feature, \\",(0,e.jsx)(n.a,{href:\\"https://docs.kata.ai/cms-studio/about/\'\\",children:\\"learn more about CMS\\"}),\\".\\"]}),`\\n`]}),`\\n`,(0,e.jsxs)(n.li,{children:[`\\n`,(0,e.jsxs)(n.p,{children:[\\"Click \\",(0,e.jsx)(n.strong,{children:\\"Create\\"}),\\" to finalize\\"]}),`\\n`]}),`\\n`,(0,e.jsxs)(n.li,{children:[`\\n`,(0,e.jsxs)(n.p,{children:[\\"You will notice the button is changed into the Create \\",(0,e.jsx)(n.strong,{children:\\"Channel\\"}),\\" button.\\"]}),`\\n`]}),`\\n`]}),`\\n`,(0,e.jsxs)(n.p,{children:[\\"In this step, you will need an Omnichat \\",(0,e.jsx)(\\"a\\",{href:\\"https://kata-omnichat.kata.ai\\",target:\\"_blank\\",children:(0,e.jsx)(n.a,{href:\\"https://omnichat.kata.ai\\",children:\\"https://omnichat.kata.ai\\"})}),\\" account and Omnichat inbox to deploy the bot. Let\\\\u2019s get started!\\"]}),`\\n`,(0,e.jsxs)(n.h2,{id:\\"create-inbox-in-omnichat\\",children:[(0,e.jsx)(n.a,{className:\\"anchor\\",href:\\"#create-inbox-in-omnichat\\",children:(0,e.jsx)(n.span,{className:\\"icon icon-link\\"})}),\\"Create Inbox in Omnichat\\"]}),`\\n`,(0,e.jsx)(n.p,{children:\\"Follow these tutorials in Omnichat to continue:\\"}),`\\n`,(0,e.jsxs)(n.ol,{children:[`\\n`,(0,e.jsxs)(n.li,{children:[`\\n`,(0,e.jsxs)(n.p,{children:[\\"Register a new Omnichat account in Omnichat. Section \\",(0,e.jsx)(n.a,{href:\\"/kata-omnichat/getting-started/register-your-account-first\\",children:(0,e.jsx)(n.strong,{children:\\"How to Set Up\\"})})]}),`\\n`]}),`\\n`,(0,e.jsxs)(n.li,{children:[`\\n`,(0,e.jsx)(n.p,{children:\\"Create a new channel inbox.\\"}),`\\n`,(0,e.jsxs)(n.ul,{children:[`\\n`,(0,e.jsxs)(n.li,{children:[`\\n`,(0,e.jsxs)(n.p,{children:[\\"For IGDM chatbot: Section \\",(0,e.jsx)(n.a,{href:\\"/kata-omnichat/getting-started/connect-your-instagram-messaging-inbox\\",children:(0,e.jsx)(n.strong,{children:\\"How to Set Up > Connect to Instagram Messaging\\"})})]}),`\\n`]}),`\\n`,(0,e.jsxs)(n.li,{children:[`\\n`,(0,e.jsxs)(n.p,{children:[\\"For WA chatbot: Section \\",(0,e.jsx)(n.a,{href:\\"/kata-omnichat/getting-started/connect-your-waba-inbox\\",children:(0,e.jsx)(n.strong,{children:\\"How to Set Up > Connect to Whatsapp Messaging\\"})})]}),`\\n`]}),`\\n`]}),`\\n`]}),`\\n`]}),`\\n`,(0,e.jsxs)(n.h2,{id:\\"create-agent-bot-in-omnichat\\",children:[(0,e.jsx)(n.a,{className:\\"anchor\\",href:\\"#create-agent-bot-in-omnichat\\",children:(0,e.jsx)(n.span,{className:\\"icon icon-link\\"})}),\\"Create Agent Bot in Omnichat\\"]}),`\\n`,(0,e.jsxs)(n.p,{children:[\\"Follow the tutorial below in Omnichat to continue: Section \\",(0,e.jsx)(n.strong,{children:\\"How to Set Up Agent Bot\\"})]}),`\\n`,(0,e.jsxs)(n.h2,{id:\\"connect-bot-to-omnichat\\",children:[(0,e.jsx)(n.a,{className:\\"anchor\\",href:\\"#connect-bot-to-omnichat\\",children:(0,e.jsx)(n.span,{className:\\"icon icon-link\\"})}),\\"Connect Bot to Omnichat\\"]}),`\\n`,(0,e.jsxs)(n.ol,{children:[`\\n`,(0,e.jsx)(n.li,{children:\\"If you succeed to follow the above tutorials, you will see an access token generated in Omnichat that needs to be pasted into the Platform. The screenshot below\\"}),`\\n`]}),`\\n`,(0,e.jsx)(a,{caption:{title:\\"Figure 13.\\",description:\\"Create new agent bot\\"},src:\\"/assets/images/tutorials/simple-handover/image_13.webp\\",alt:\\"Simple Handover\\",naturalHeight:1078,naturalWidth:2048}),`\\n`,(0,e.jsxs)(n.ol,{start:\\"2\\",children:[`\\n`,(0,e.jsxs)(n.li,{children:[`\\n`,(0,e.jsxs)(n.p,{children:[\\"Next, open the Kata Platform URL \\",(0,e.jsx)(\\"a\\",{href:\\"https://platform.kata.ai\\",target:\\"_blank\\",children:(0,e.jsx)(n.a,{href:\\"https://platform.kata.ai\\",children:\\"https://platform.kata.ai\\"})}),\\" and do login\\"]}),`\\n`]}),`\\n`,(0,e.jsxs)(n.li,{children:[`\\n`,(0,e.jsx)(n.p,{children:\\"Click your project that already had a chatbot and deployed\\"}),`\\n`]}),`\\n`,(0,e.jsxs)(n.li,{children:[`\\n`,(0,e.jsx)(n.p,{children:\\"Then, go to the menu: Deploy > Environment. You will see this screen.\\"}),`\\n`]}),`\\n`]}),`\\n`,(0,e.jsx)(a,{caption:{title:\\"Figure 14.\\",description:\\"Set up channel again to paste access token from Omnichat\\"},src:\\"/assets/images/tutorials/simple-handover/image_14.webp\\",alt:\\"Simple Handover\\",naturalHeight:695,naturalWidth:2048}),`\\n`,(0,e.jsxs)(n.ol,{start:\\"5\\",children:[`\\n`,(0,e.jsxs)(n.li,{children:[`\\n`,(0,e.jsx)(n.p,{children:\\"Click Create Channel button to start connect and you will see an empty channel table\\"}),`\\n`]}),`\\n`,(0,e.jsxs)(n.li,{children:[`\\n`,(0,e.jsx)(n.p,{children:\'Click \\"+ Create Channel\\" button in channel table list and drawer to set up the channel will be shown\'}),`\\n`]}),`\\n`,(0,e.jsxs)(n.li,{children:[`\\n`,(0,e.jsx)(n.p,{children:\\"Choose Omnichat in Channel Type\\"}),`\\n`]}),`\\n`,(0,e.jsxs)(n.li,{children:[`\\n`,(0,e.jsx)(n.p,{children:\\"In the Access Token field, paste your access token that was generated from the Omnichat inbox.\\"}),`\\n`]}),`\\n`,(0,e.jsxs)(n.li,{children:[`\\n`,(0,e.jsx)(n.p,{children:\\"Click Save to deploy your bot\\"}),`\\n`]}),`\\n`,(0,e.jsxs)(n.li,{children:[`\\n`,(0,e.jsx)(n.p,{children:\\"Few steps to the final \\\\u2728 A created channel will generate a webhook URL. Copy the webhook URL in the Platform to Omnichat.\\"}),`\\n`]}),`\\n`]}),`\\n`,(0,e.jsxs)(n.h2,{id:\\"finalize-agent-bot-in-omnichat\\",children:[(0,e.jsx)(n.a,{className:\\"anchor\\",href:\\"#finalize-agent-bot-in-omnichat\\",children:(0,e.jsx)(n.span,{className:\\"icon icon-link\\"})}),\\"Finalize Agent Bot in Omnichat\\"]}),`\\n`,(0,e.jsxs)(n.ol,{children:[`\\n`,(0,e.jsxs)(n.li,{children:[`\\n`,(0,e.jsxs)(n.p,{children:[\\"Go back to Omnichat \\",(0,e.jsx)(\\"a\\",{href:\\"https://kata-omnichat.kata.ai\\",target:\\"_blank\\",children:(0,e.jsx)(n.a,{href:\\"https://omnichat.kata.ai\\",children:\\"https://omnichat.kata.ai\\"})}),\\" and do login\\"]}),`\\n`]}),`\\n`,(0,e.jsxs)(n.li,{children:[`\\n`,(0,e.jsx)(n.p,{children:\\"Go to menu: Settings > Integrations > Agent Bot. You will see this screen and information that you\\\\u2019re still in first step to finalize\\"}),`\\n`]}),`\\n`]}),`\\n`,(0,e.jsx)(a,{caption:{title:\\"Figure 15.\\",description:\\"Edit agent bot to paste webhook URL from Platform\\"},src:\\"/assets/images/tutorials/simple-handover/image_15.webp\\",alt:\\"Simple Handover\\",naturalHeight:1078,naturalWidth:2048}),`\\n`,(0,e.jsxs)(n.ol,{start:\\"3\\",children:[`\\n`,(0,e.jsxs)(n.li,{children:[`\\n`,(0,e.jsx)(n.p,{children:\'Click \\"Edit\\" button in the agent bot configuration\'}),`\\n`]}),`\\n`,(0,e.jsxs)(n.li,{children:[`\\n`,(0,e.jsx)(n.p,{children:\\"A drawer will appear to fill in the Platform webhook URL. Paste your chatbot webhook URL\\"}),`\\n`]}),`\\n`,(0,e.jsxs)(n.li,{children:[`\\n`,(0,e.jsx)(n.p,{children:\\"Click Update and you will be redirected to agent bot list\\"}),`\\n`]}),`\\n`,(0,e.jsxs)(n.li,{children:[`\\n`,(0,e.jsx)(n.p,{children:\\"Lastly, turn on the toggle in Activate Agent Bot. Your chatbot is already connected to the Omnichat inbox and ready to use!\\"}),`\\n`]}),`\\n`]}),`\\n`,(0,e.jsx)(a,{caption:{title:\\"Figure 16.\\",description:\\"Activate agent bot and final step\\"},src:\\"/assets/images/tutorials/simple-handover/image_16.webp\\",alt:\\"Simple Handover\\",naturalHeight:1078,naturalWidth:2048}),`\\n`,(0,e.jsxs)(n.h2,{id:\\"final-demo\\",children:[(0,e.jsx)(n.a,{className:\\"anchor\\",href:\\"#final-demo\\",children:(0,e.jsx)(n.span,{className:\\"icon icon-link\\"})}),\\"Final Demo\\"]}),`\\n`,(0,e.jsx)(n.p,{children:\\"We provide video tutorials and interaction demos for agent bot Omnichat features. Check these out:\\"}),`\\n`,(0,e.jsxs)(n.ul,{children:[`\\n`,(0,e.jsx)(n.li,{children:\\"Create simple bot handover video tutorial\\"}),`\\n`]}),`\\n`,(0,e.jsx)(l,{children:(0,e.jsx)(d,{id:\\"pbqou7Wr4Tc\\",params:\\"v=pbqou7Wr4Tc\\",title:\\"Create simple bot handover video tutorial\\"})}),`\\n`,(0,e.jsxs)(n.ul,{children:[`\\n`,(0,e.jsx)(n.li,{children:\\"Chatbot interaction with end-user and handover to human agent\\"}),`\\n`]})]})}}var B=O;function o(t,i){throw new Error(\\"Expected \\"+(i?\\"component\\":\\"object\\")+\\" `\\"+t+\\"` to be defined: you likely forgot to import, pass, or provide it.\\")}return x(L);})();\\n;return Component;"},"_id":"tutorials/create-simple-bot-handover-from-chatbot-to-agent.mdx","_raw":{"sourceFilePath":"tutorials/create-simple-bot-handover-from-chatbot-to-agent.mdx","sourceFileName":"create-simple-bot-handover-from-chatbot-to-agent.mdx","sourceFileDir":"tutorials","contentType":"mdx","flattenedPath":"tutorials/create-simple-bot-handover-from-chatbot-to-agent"},"type":"Tutorials","slug":["create-simple-bot-handover-from-chatbot-to-agent"],"excerpt":"\\nKata Platform ([platform.kata"}');
;// CONCATENATED MODULE: ./.contentlayer/generated/Tutorials/tutorials__hello-world.mdx.json
const tutorials_hello_world_mdx_namespaceObject = JSON.parse('{"layout":"tutorial","id":"hello-world","imgSpot":"/assets/images/tutorials/spot-hello-world.webp","product":"kata-platform","title":"Creating a Simple Hello World Chatbot","date":"2018-06-06T07:00:00+07:00","next":"bot-studio-tutorial","body":{"raw":"\\n## Create a Project\\n\\nFirst login/sign up to <a href=\\"https://platform.kata.ai/login\\" target=\\"_blank\\">https://platform.kata.ai/login</a>\\n\\nAnd click on “Create Project” and fill in the form. Each project contains one bot design, one NL, and one CMS.\\nYou will be directed to this page.\\n\\n<FigureImage src=\\"/assets/images/tutorials/bot-hw/bot-hw1.webp\\" alt=\\"bhw-1\\" naturalHeight={355} naturalWidth={723} />\\n\\n### Noted\\n\\nYou can try bot in Menu Test Chatbot (in the bottom right corner).\\n\\n<FigureImage\\n  src=\\"/assets/images/tutorials/bot-hw/bot-hw1test.webp\\"\\n  alt=\\"bhw-1test\\"\\n  naturalHeight={526}\\n  naturalWidth={556}\\n/>\\n\\n## Create a Hello Flow\\n\\n### Create Flow\\n\\nYou may find a flow that is created automatically by the system or default flow. We will add a new flow called `helloFlow`. Set flow to active, and persistent.\\n\\n<FigureImage src=\\"/assets/images/tutorials/bot-hw/bot-hw2.webp\\" alt=\\"bhw-2\\" naturalHeight={626} naturalWidth={479} />\\n\\nIt will be shown like this.\\n\\n<FigureImage src=\\"/assets/images/tutorials/bot-hw/bot-hw3.webp\\" alt=\\"bhw-3\\" naturalHeight={370} naturalWidth={457} />\\n\\n### Create keyword NLU for helloFlow\\n\\nIn this step, we will define the NLU (Natural Language Understanding) to trigger order flow. NLU is used to translate user inputs into data that machine can understand. There are many types of NLU, but the type that we will use in this particular flow is called keyword. To define the NLU, go to NLUs menu and create.\\n\\nWe will name it hello_NLU\\n\\n<FigureImage src=\\"/assets/images/tutorials/bot-hw/bot-hw4.webp\\" alt=\\"bhw-4\\" naturalHeight={624} naturalWidth={469} />\\n\\nIt will be shown like this.\\n\\n<FigureImage src=\\"/assets/images/tutorials/bot-hw/bot-hw5.webp\\" alt=\\"bhw-5\\" naturalHeight={348} naturalWidth={735} />\\n\\n### Create Intent\\n\\nGo back to Conversation flow menu and choose intent. Click on “+” button in Conversation Flow menu. Set the Intent name to `helloIntent` and choose option as initial.\\nAdd a classifier and choose NLU that we create. We are gonna match it with `helloWorld` (keyword in NLU).\\n\\n<FigureImage src=\\"/assets/images/tutorials/bot-hw/bot-hw6.webp\\" alt=\\"bhw-6\\" naturalHeight={623} naturalWidth={462} />\\n\\n<FigureImage src=\\"/assets/images/tutorials/bot-hw/bot-hw7.webp\\" alt=\\"bhw-7\\" naturalHeight={307} naturalWidth={848} />\\n\\n## Create action for showing Hello World\\n\\n### Create State\\n\\nChoose a states and click on \\"+\\" button. We will create a initial state. Set name to `init` and choose Initial State, and click create.\\n\\n<FigureImage src=\\"/assets/images/tutorials/bot-hw/bot-hw8.webp\\" alt=\\"bhw-8\\" naturalHeight={618} naturalWidth={457} />\\n\\nWe will create another state for showing the response in our bot. Choose action to text.\\n\\n<FigureImage src=\\"/assets/images/tutorials/bot-hw/bot-hw9.webp\\" alt=\\"bhw-9\\" naturalHeight={552} naturalWidth={470} />\\n\\nAdd text response to Hello World!.\\n\\n<FigureImage src=\\"/assets/images/tutorials/bot-hw/bot-hw10.webp\\" alt=\\"bhw-10\\" naturalHeight={537} naturalWidth={458} />\\n\\nAction should be shown like this.\\n\\n<FigureImage src=\\"/assets/images/tutorials/bot-hw/bot-hw11.webp\\" alt=\\"bhw-11\\" naturalHeight={620} naturalWidth={474} />\\n\\n### Create Transation\\n\\nNow, we will create a transition between two states that we have created before.\\n\\nClick the green dot on `init` state, and a connector line will appear. Connect that line to `hello` state. If you do it right, a Create Transition form will appear.\\n\\n<FigureImage src=\\"/assets/images/tutorials/bot-hw/bot-hw12.webp\\" alt=\\"bhw-12\\" naturalHeight={185} naturalWidth={357} />\\n\\nSet the condition to `intent==\'helloIntent\'` and click Create.\\n\\n<FigureImage src=\\"/assets/images/tutorials/bot-hw/bot-hw13.webp\\" alt=\\"bhw-13\\" naturalHeight={615} naturalWidth={468} />\\n\\n## Testing\\n\\nBefore this step don\'t forget to **Publish** your change. And then try your bot in Test Chatbot menu. Try to enter keyword that you define in NLU.\\n\\nViola! You have succeed build your first bot!\\n\\n<FigureImage src=\\"/assets/images/tutorials/bot-hw/bot-hw14.webp\\" alt=\\"bhw-14\\" naturalHeight={524} naturalWidth={555} />\\n","code":"var Component=(()=>{var d=Object.create;var r=Object.defineProperty;var w=Object.getOwnPropertyDescriptor;var u=Object.getOwnPropertyNames;var b=Object.getPrototypeOf,p=Object.prototype.hasOwnProperty;var l=a=>r(a,\\"__esModule\\",{value:!0});var g=(a,n)=>()=>(n||a((n={exports:{}}).exports,n),n.exports),m=(a,n)=>{for(var i in n)r(a,i,{get:n[i],enumerable:!0})},s=(a,n,i,e)=>{if(n&&typeof n==\\"object\\"||typeof n==\\"function\\")for(let o of u(n))!p.call(a,o)&&(i||o!==\\"default\\")&&r(a,o,{get:()=>n[o],enumerable:!(e=w(n,o))||e.enumerable});return a},f=(a,n)=>s(l(r(a!=null?d(b(a)):{},\\"default\\",!n&&a&&a.__esModule?{get:()=>a.default,enumerable:!0}:{value:a,enumerable:!0})),a),N=(a=>(n,i)=>a&&a.get(n)||(i=s(l({}),n,1),a&&a.set(n,i),i))(typeof WeakMap!=\\"undefined\\"?new WeakMap:0);var c=g((j,h)=>{h.exports=_jsx_runtime});var H={};m(H,{default:()=>C,frontmatter:()=>k});var t=f(c()),k={layout:\\"tutorial\\",id:\\"hello-world\\",title:\\"Creating a Simple Hello World Chatbot\\",imgSpot:\\"/assets/images/tutorials/spot-hello-world.webp\\",product:\\"kata-platform\\",next:\\"bot-studio-tutorial\\",date:\\"2018-06-06T07:00:00+07:00\\"};function y(a={}){let{wrapper:n}=a.components||{};return n?(0,t.jsx)(n,Object.assign({},a,{children:(0,t.jsx)(i,{})})):i();function i(){let e=Object.assign({h2:\\"h2\\",a:\\"a\\",span:\\"span\\",p:\\"p\\",h3:\\"h3\\",code:\\"code\\",strong:\\"strong\\"},a.components),{FigureImage:o}=e;return o||W(\\"FigureImage\\",!0),(0,t.jsxs)(t.Fragment,{children:[(0,t.jsxs)(e.h2,{id:\\"create-a-project\\",children:[(0,t.jsx)(e.a,{className:\\"anchor\\",href:\\"#create-a-project\\",children:(0,t.jsx)(e.span,{className:\\"icon icon-link\\"})}),\\"Create a Project\\"]}),`\\n`,(0,t.jsxs)(e.p,{children:[\\"First login/sign up to \\",(0,t.jsx)(\\"a\\",{href:\\"https://platform.kata.ai/login\\",target:\\"_blank\\",children:(0,t.jsx)(e.a,{href:\\"https://platform.kata.ai/login\\",children:\\"https://platform.kata.ai/login\\"})})]}),`\\n`,(0,t.jsx)(e.p,{children:`And click on \\\\u201CCreate Project\\\\u201D and fill in the form. Each project contains one bot design, one NL, and one CMS.\\nYou will be directed to this page.`}),`\\n`,(0,t.jsx)(o,{src:\\"/assets/images/tutorials/bot-hw/bot-hw1.webp\\",alt:\\"bhw-1\\",naturalHeight:355,naturalWidth:723}),`\\n`,(0,t.jsxs)(e.h3,{id:\\"noted\\",children:[(0,t.jsx)(e.a,{className:\\"anchor\\",href:\\"#noted\\",children:(0,t.jsx)(e.span,{className:\\"icon icon-link\\"})}),\\"Noted\\"]}),`\\n`,(0,t.jsx)(e.p,{children:\\"You can try bot in Menu Test Chatbot (in the bottom right corner).\\"}),`\\n`,(0,t.jsx)(o,{src:\\"/assets/images/tutorials/bot-hw/bot-hw1test.webp\\",alt:\\"bhw-1test\\",naturalHeight:526,naturalWidth:556}),`\\n`,(0,t.jsxs)(e.h2,{id:\\"create-a-hello-flow\\",children:[(0,t.jsx)(e.a,{className:\\"anchor\\",href:\\"#create-a-hello-flow\\",children:(0,t.jsx)(e.span,{className:\\"icon icon-link\\"})}),\\"Create a Hello Flow\\"]}),`\\n`,(0,t.jsxs)(e.h3,{id:\\"create-flow\\",children:[(0,t.jsx)(e.a,{className:\\"anchor\\",href:\\"#create-flow\\",children:(0,t.jsx)(e.span,{className:\\"icon icon-link\\"})}),\\"Create Flow\\"]}),`\\n`,(0,t.jsxs)(e.p,{children:[\\"You may find a flow that is created automatically by the system or default flow. We will add a new flow called \\",(0,t.jsx)(e.code,{children:\\"helloFlow\\"}),\\". Set flow to active, and persistent.\\"]}),`\\n`,(0,t.jsx)(o,{src:\\"/assets/images/tutorials/bot-hw/bot-hw2.webp\\",alt:\\"bhw-2\\",naturalHeight:626,naturalWidth:479}),`\\n`,(0,t.jsx)(e.p,{children:\\"It will be shown like this.\\"}),`\\n`,(0,t.jsx)(o,{src:\\"/assets/images/tutorials/bot-hw/bot-hw3.webp\\",alt:\\"bhw-3\\",naturalHeight:370,naturalWidth:457}),`\\n`,(0,t.jsxs)(e.h3,{id:\\"create-keyword-nlu-for-helloflow\\",children:[(0,t.jsx)(e.a,{className:\\"anchor\\",href:\\"#create-keyword-nlu-for-helloflow\\",children:(0,t.jsx)(e.span,{className:\\"icon icon-link\\"})}),\\"Create keyword NLU for helloFlow\\"]}),`\\n`,(0,t.jsx)(e.p,{children:\\"In this step, we will define the NLU (Natural Language Understanding) to trigger order flow. NLU is used to translate user inputs into data that machine can understand. There are many types of NLU, but the type that we will use in this particular flow is called keyword. To define the NLU, go to NLUs menu and create.\\"}),`\\n`,(0,t.jsx)(e.p,{children:\\"We will name it hello_NLU\\"}),`\\n`,(0,t.jsx)(o,{src:\\"/assets/images/tutorials/bot-hw/bot-hw4.webp\\",alt:\\"bhw-4\\",naturalHeight:624,naturalWidth:469}),`\\n`,(0,t.jsx)(e.p,{children:\\"It will be shown like this.\\"}),`\\n`,(0,t.jsx)(o,{src:\\"/assets/images/tutorials/bot-hw/bot-hw5.webp\\",alt:\\"bhw-5\\",naturalHeight:348,naturalWidth:735}),`\\n`,(0,t.jsxs)(e.h3,{id:\\"create-intent\\",children:[(0,t.jsx)(e.a,{className:\\"anchor\\",href:\\"#create-intent\\",children:(0,t.jsx)(e.span,{className:\\"icon icon-link\\"})}),\\"Create Intent\\"]}),`\\n`,(0,t.jsxs)(e.p,{children:[\\"Go back to Conversation flow menu and choose intent. Click on \\\\u201C+\\\\u201D button in Conversation Flow menu. Set the Intent name to \\",(0,t.jsx)(e.code,{children:\\"helloIntent\\"}),` and choose option as initial.\\nAdd a classifier and choose NLU that we create. We are gonna match it with `,(0,t.jsx)(e.code,{children:\\"helloWorld\\"}),\\" (keyword in NLU).\\"]}),`\\n`,(0,t.jsx)(o,{src:\\"/assets/images/tutorials/bot-hw/bot-hw6.webp\\",alt:\\"bhw-6\\",naturalHeight:623,naturalWidth:462}),`\\n`,(0,t.jsx)(o,{src:\\"/assets/images/tutorials/bot-hw/bot-hw7.webp\\",alt:\\"bhw-7\\",naturalHeight:307,naturalWidth:848}),`\\n`,(0,t.jsxs)(e.h2,{id:\\"create-action-for-showing-hello-world\\",children:[(0,t.jsx)(e.a,{className:\\"anchor\\",href:\\"#create-action-for-showing-hello-world\\",children:(0,t.jsx)(e.span,{className:\\"icon icon-link\\"})}),\\"Create action for showing Hello World\\"]}),`\\n`,(0,t.jsxs)(e.h3,{id:\\"create-state\\",children:[(0,t.jsx)(e.a,{className:\\"anchor\\",href:\\"#create-state\\",children:(0,t.jsx)(e.span,{className:\\"icon icon-link\\"})}),\\"Create State\\"]}),`\\n`,(0,t.jsxs)(e.p,{children:[\'Choose a states and click on \\"+\\" button. We will create a initial state. Set name to \',(0,t.jsx)(e.code,{children:\\"init\\"}),\\" and choose Initial State, and click create.\\"]}),`\\n`,(0,t.jsx)(o,{src:\\"/assets/images/tutorials/bot-hw/bot-hw8.webp\\",alt:\\"bhw-8\\",naturalHeight:618,naturalWidth:457}),`\\n`,(0,t.jsx)(e.p,{children:\\"We will create another state for showing the response in our bot. Choose action to text.\\"}),`\\n`,(0,t.jsx)(o,{src:\\"/assets/images/tutorials/bot-hw/bot-hw9.webp\\",alt:\\"bhw-9\\",naturalHeight:552,naturalWidth:470}),`\\n`,(0,t.jsx)(e.p,{children:\\"Add text response to Hello World!.\\"}),`\\n`,(0,t.jsx)(o,{src:\\"/assets/images/tutorials/bot-hw/bot-hw10.webp\\",alt:\\"bhw-10\\",naturalHeight:537,naturalWidth:458}),`\\n`,(0,t.jsx)(e.p,{children:\\"Action should be shown like this.\\"}),`\\n`,(0,t.jsx)(o,{src:\\"/assets/images/tutorials/bot-hw/bot-hw11.webp\\",alt:\\"bhw-11\\",naturalHeight:620,naturalWidth:474}),`\\n`,(0,t.jsxs)(e.h3,{id:\\"create-transation\\",children:[(0,t.jsx)(e.a,{className:\\"anchor\\",href:\\"#create-transation\\",children:(0,t.jsx)(e.span,{className:\\"icon icon-link\\"})}),\\"Create Transation\\"]}),`\\n`,(0,t.jsx)(e.p,{children:\\"Now, we will create a transition between two states that we have created before.\\"}),`\\n`,(0,t.jsxs)(e.p,{children:[\\"Click the green dot on \\",(0,t.jsx)(e.code,{children:\\"init\\"}),\\" state, and a connector line will appear. Connect that line to \\",(0,t.jsx)(e.code,{children:\\"hello\\"}),\\" state. If you do it right, a Create Transition form will appear.\\"]}),`\\n`,(0,t.jsx)(o,{src:\\"/assets/images/tutorials/bot-hw/bot-hw12.webp\\",alt:\\"bhw-12\\",naturalHeight:185,naturalWidth:357}),`\\n`,(0,t.jsxs)(e.p,{children:[\\"Set the condition to \\",(0,t.jsx)(e.code,{children:\\"intent==\'helloIntent\'\\"}),\\" and click Create.\\"]}),`\\n`,(0,t.jsx)(o,{src:\\"/assets/images/tutorials/bot-hw/bot-hw13.webp\\",alt:\\"bhw-13\\",naturalHeight:615,naturalWidth:468}),`\\n`,(0,t.jsxs)(e.h2,{id:\\"testing\\",children:[(0,t.jsx)(e.a,{className:\\"anchor\\",href:\\"#testing\\",children:(0,t.jsx)(e.span,{className:\\"icon icon-link\\"})}),\\"Testing\\"]}),`\\n`,(0,t.jsxs)(e.p,{children:[\\"Before this step don\'t forget to \\",(0,t.jsx)(e.strong,{children:\\"Publish\\"}),\\" your change. And then try your bot in Test Chatbot menu. Try to enter keyword that you define in NLU.\\"]}),`\\n`,(0,t.jsx)(e.p,{children:\\"Viola! You have succeed build your first bot!\\"}),`\\n`,(0,t.jsx)(o,{src:\\"/assets/images/tutorials/bot-hw/bot-hw14.webp\\",alt:\\"bhw-14\\",naturalHeight:524,naturalWidth:555})]})}}var C=y;function W(a,n){throw new Error(\\"Expected \\"+(n?\\"component\\":\\"object\\")+\\" `\\"+a+\\"` to be defined: you likely forgot to import, pass, or provide it.\\")}return N(H);})();\\n;return Component;"},"_id":"tutorials/hello-world.mdx","_raw":{"sourceFilePath":"tutorials/hello-world.mdx","sourceFileName":"hello-world.mdx","sourceFileDir":"tutorials","contentType":"mdx","flattenedPath":"tutorials/hello-world"},"type":"Tutorials","slug":["hello-world"],"excerpt":"\\n## Create a Project\\n\\nFirst login/sign up to "}');
;// CONCATENATED MODULE: ./.contentlayer/generated/Tutorials/tutorials__how-to-deploy-your-chatbot-to-line.mdx.json
const tutorials_how_to_deploy_your_chatbot_to_line_mdx_namespaceObject = JSON.parse('{"layout":"tutorial","id":"how-to-deploy-your-chatbot-to-line","imgSpot":"/assets/images/tutorials/spot-line.webp","product":"kata-platform","title":"How to deploy your chatbot to LINE","date":"2022-01-17T07:00:00+07:00","body":{"raw":"\\nLINE is a free messaging platform and is famous in Indonesia. This messaging platform supports various interactive action types such as carousel, button, Image Map, and many more.\\n\\nThis tutorial will learn how to deploy your chatbot to LINE. Let’s start.\\n\\n## Create a deployment\\n\\nDeployment is a step to merge all Revisions in Flow, NLU, and CMS so that you can integrate bots into the channel. Before starting channel integration, chatbots must at least have 1 deployment.\\n\\n1. In the sidebar, choose the **Deploy** menu. Then, select **Overview**.\\n\\n<FigureImage\\n  caption={{ title: \'Figure 1.\', description: `Deploy menu interface` }}\\n  src=\\"/assets/images/tutorials/how-to-deploy-your-chatbot-to-line/image1.webp\\"\\n  alt=\\"How to deploy your chatbot to LINE\\"\\n  naturalHeight={511}\\n  naturalWidth={1600}\\n/>\\n\\n2. Click the **New Deployment** button. Then it will show a form on the right screen.\\n\\n3. Choose the deployment version. In the Kata Platform, there are 3 deployment versions which are:\\n\\n- Major to deploy significant changes, such as change chatbot use-case.\\n\\n- Minor to deploy medium changes, such as adding new features in your chatbot.\\n\\n- Patch to deploy small changes, such as change copy in action.\\n\\n<FigureImage\\n  caption={{ title: \'Figure 2.\', description: ` Create a new deployment` }}\\n  src=\\"/assets/images/tutorials/how-to-deploy-your-chatbot-to-line/image2.webp\\"\\n  alt=\\"How to deploy your chatbot to LINE\\"\\n  naturalHeight={855}\\n  naturalWidth={1600}\\n/>\\n\\n4. Then, click the **Submit** button. If deployment is successful, then the interface will be shown like this.\\n\\n<FigureImage\\n  caption={{ title: \'Figure 3.\', description: `Deployment has been created.` }}\\n  src=\\"/assets/images/tutorials/how-to-deploy-your-chatbot-to-line/image3.webp\\"\\n  alt=\\"How to deploy your chatbot to LINE\\"\\n  naturalHeight={533}\\n  naturalWidth={1600}\\n/>\\n\\nThe step after creating a deployment is to create an environment. An environment is a zone in computer science that provides a place to run integrated applications. For example, Kata Platform has 3 environments: development, staging, and production.\\n\\n1. Choose the menu **Deploy**, then choose **Environment**.\\n\\n<FigureImage\\n  caption={{ title: \'Figure 4.\', description: `Environment interface.` }}\\n  src=\\"/assets/images/tutorials/how-to-deploy-your-chatbot-to-line/image4.webp\\"\\n  alt=\\"How to deploy your chatbot to LINE\\"\\n  naturalHeight={507}\\n  naturalWidth={1600}\\n/>\\n\\n2. In this step, you will create a Development environment. Click the button **Create Environment** in the **Development** card.\\n\\n3. Fill in the environment, then click **Create**.\\n\\n<FigureImage\\n  caption={{ title: \'Figure 5.\', description: `Create an environment interface.` }}\\n  src=\\"/assets/images/tutorials/how-to-deploy-your-chatbot-to-line/image5.webp\\"\\n  alt=\\"How to deploy your chatbot to LINE\\"\\n  naturalHeight={1008}\\n  naturalWidth={1600}\\n/>\\n\\n## Integration to a channel\\n\\nThis step will create a chatbot integration with the Telegram messaging platform. Telegram is a free messaging platform to deploy chatbots with a simple setup.\\n\\n1. In the **Deploy > Environment**, click the **Create Channel** button.\\n\\n<FigureImage\\n  caption={{ title: \'Figure 6.\', description: `Button deploys channel in a Development environment.` }}\\n  src=\\"/assets/images/tutorials/how-to-deploy-your-chatbot-to-line/image6.webp\\"\\n  alt=\\"How to deploy your chatbot to LINE\\"\\n  naturalHeight={694}\\n  naturalWidth={1594}\\n/>\\n\\n2. You will redirect to the **Create Channel** page. Click the **“+ Create Channel”** button to create a new channel.\\n\\n3. Fill in the channel name and choose type as LINE.\\n\\n4. To fill in the Bot User OAuth Access Token field, we must set up a chatbot in Telegram first. The next step is to open your Telegram application and log in.\\n\\nBefore you start, you need a LINE account already registered and logged in to your application.\\n\\n### Registration to LINE Developer console and setup\\n\\n1. Create a LINE account. To sign up for a LINE developer account, you have to have a LINE account by [installing a LINE application, either desktop or mobile app](https://line.me/en/download).\\n\\n2. After you successfully registered, sign in to [https://developers.line.biz/en/](https://developers.line.biz/en/)\\n\\n3. In the LINE Developer Console, click **Log In**.\\n\\n<FigureImage\\n  caption={{ title: \'Figure 7.\', description: `LINE developer dashboard.` }}\\n  src=\\"/assets/images/tutorials/how-to-deploy-your-chatbot-to-line/image7.webp\\"\\n  alt=\\"How to deploy your chatbot to LINE\\"\\n  naturalHeight={822}\\n  naturalWidth={1600}\\n/>\\n\\n4. Next, click on **Login with LINE**.\\n\\n<FigureImage\\n  caption={{ title: \'Figure 8.\', description: `Log in with LINE` }}\\n  src=\\"/assets/images/tutorials/how-to-deploy-your-chatbot-to-line/image8.webp\\"\\n  alt=\\"How to deploy your chatbot to LINE\\"\\n  naturalHeight={1134}\\n  naturalWidth={1054}\\n/>\\n\\n5. Enter your email and password. After you successfully log in, you will be redirected to the provider list dashboard.\\n\\n<FigureImage\\n  caption={{ title: \'Figure 9.\', description: `Provider list.` }}\\n  src=\\"/assets/images/tutorials/how-to-deploy-your-chatbot-to-line/image9.webp\\"\\n  alt=\\"How to deploy your chatbot to LINE\\"\\n  naturalHeight={811}\\n  naturalWidth={1600}\\n/>\\n\\n6. Next, click **“Create New Provider”**. Fill in the provider name.\\n\\n7. Click **Confirm** to continue.\\n\\n8. Your new provider has been created.\\n\\n<FigureImage\\n  caption={{ title: \'Figure 10.\', description: `New provider.` }}\\n  src=\\"/assets/images/tutorials/how-to-deploy-your-chatbot-to-line/image10.webp\\"\\n  alt=\\"How to deploy your chatbot to LINE\\"\\n  naturalHeight={550}\\n  naturalWidth={1600}\\n/>\\n\\n9. Next, set up the channel in the Messaging API by clicking **Create Channel** on Messaging API.\\n\\n<FigureImage\\n  caption={{ title: \'Figure 11.\', description: `Create channel.` }}\\n  src=\\"/assets/images/tutorials/how-to-deploy-your-chatbot-to-line/image11.webp\\"\\n  alt=\\"How to deploy your chatbot to LINE\\"\\n  naturalHeight={818}\\n  naturalWidth={1600}\\n/>\\n\\n10. Fill in your LINE bot detail.\\n\\n11. Next, you have to choose the **Developer Trial as Plan**.\\n\\n<FigureImage\\n  caption={{ title: \'Figure 12.\', description: `hoose developer trial option` }}\\n  src=\\"/assets/images/tutorials/how-to-deploy-your-chatbot-to-line/image12.webp\\"\\n  alt=\\"How to deploy your chatbot to LINE\\"\\n  naturalHeight={351}\\n  naturalWidth={1600}\\n/>\\n\\n12. Finally, click **Create**. The successfully created channel will look like this.\\n\\n<FigureImage\\n  caption={{ title: \'Figure 13.\', description: `New channel.` }}\\n  src=\\"/assets/images/tutorials/how-to-deploy-your-chatbot-to-line/image13.webp\\"\\n  alt=\\"How to deploy your chatbot to LINE\\"\\n  naturalHeight={1012}\\n  naturalWidth={1176}\\n/>\\n\\n### Integrate LINE to your chatbot\\n\\n1. Click on the created channel to fill in the Channel Access Token\\n\\n2. Click **“Issue”** in the Messaging Settings section.\\n\\n<FigureImage\\n  caption={{ title: \'Figure 14.\', description: `Issue access token.` }}\\n  src=\\"/assets/images/tutorials/how-to-deploy-your-chatbot-to-line/image14.webp\\"\\n  alt=\\"How to deploy your chatbot to LINE\\"\\n  naturalHeight={638}\\n  naturalWidth={1600}\\n/>\\n\\n3. Then, a dialog will show. Click on **Issue** to continue.\\n\\n4. Finally, copy the **Channel Access Token** below and paste it on the Create Channel form in the Kata Platform.\\n\\n<FigureImage\\n  caption={{ title: \'Figure 15.\', description: `Show Channel Access Token.` }}\\n  src=\\"/assets/images/tutorials/how-to-deploy-your-chatbot-to-line/image15.webp\\"\\n  alt=\\"How to deploy your chatbot to LINE\\"\\n  naturalHeight={223}\\n  naturalWidth={1600}\\n/>\\n\\n5. Go back to Kata Platform, then paste the Channel Access Token.\\n\\n<FigureImage\\n  caption={{ title: \'Figure 16.\', description: `Paste Channel Access Token.` }}\\n  src=\\"/assets/images/tutorials/how-to-deploy-your-chatbot-to-line/image16.webp\\"\\n  alt=\\"How to deploy your chatbot to LINE\\"\\n  naturalHeight={964}\\n  naturalWidth={740}\\n/>\\n\\n6. Next, you will fill in the Channel Secret field. Then, in Basic Information, copy Channel Secret from LINE to the Kata Platform.\\n\\n<FigureImage\\n  caption={{ title: \'Figure 17.\', description: `Copy Channel Secret.` }}\\n  src=\\"/assets/images/tutorials/how-to-deploy-your-chatbot-to-line/image17.webp\\"\\n  alt=\\"How to deploy your chatbot to LINE\\"\\n  naturalHeight={891}\\n  naturalWidth={1600}\\n/>\\n\\n7. Go back to the Kata Platform, then paste the Channel Secret.\\n\\n<FigureImage\\n  caption={{ title: \'Figure 18.\', description: `All fields are filled in.` }}\\n  src=\\"/assets/images/tutorials/how-to-deploy-your-chatbot-to-line/image18.webp\\"\\n  alt=\\"How to deploy your chatbot to LINE\\"\\n  naturalHeight={996}\\n  naturalWidth={766}\\n/>\\n\\n8. Click **“Create”** to generate a webhook URL from the Kata Platform.\\n\\nAfter the webhook URL is generated, go to Messaging Settings in the LINE developer console to enable webhook.\\n\\n9. Enable the webhook by clicking on **Enable** in the **“Use Webhooks”** section, placed above the Webhook URL field.\\n\\n<FigureImage\\n  caption={{ title: \'Figure 19.\', description: `Enable webhook.` }}\\n  src=\\"/assets/images/tutorials/how-to-deploy-your-chatbot-to-line/image19.webp\\"\\n  alt=\\"How to deploy your chatbot to LINE\\"\\n  naturalHeight={383}\\n  naturalWidth={1600}\\n/>\\n\\n10. Click **“Update,”** then paste the webhook URL to the LINE developer console.\\n\\n<FigureImage\\n  caption={{ title: \'Figure 20.\', description: `Paste webhook from Kata Platform.` }}\\n  src=\\"/assets/images/tutorials/how-to-deploy-your-chatbot-to-line/image20.webp\\"\\n  alt=\\"How to deploy your chatbot to LINE\\"\\n  naturalHeight={506}\\n  naturalWidth={1600}\\n/>\\n\\n11. Click **“Update”**, then click **“Verify”**.\\n\\n12. Next, disable auto-reply messages and greeting messages by following figure 21.\\n\\n<FigureImage\\n  caption={{ title: \'Figure 21.\', description: `Disable auto-reply and greeting messages.` }}\\n  src=\\"/assets/images/tutorials/how-to-deploy-your-chatbot-to-line/image21.webp\\"\\n  alt=\\"How to deploy your chatbot to LINE\\"\\n  naturalHeight={484}\\n  naturalWidth={1600}\\n/>\\n\\n13. Congratulations, you have successfully deployed your bot to LINE Messenger.\\n\\n14. Next, test your bot by scanning the QR code.\\n\\nIt is the end of the guidance. If you find it difficult to follow, you can contact [support@kata.ai](mailto:support@kata.ai). Thank you.\\n","code":"var Component=(()=>{var d=Object.create;var a=Object.defineProperty;var p=Object.getOwnPropertyDescriptor;var u=Object.getOwnPropertyNames;var g=Object.getPrototypeOf,y=Object.prototype.hasOwnProperty;var r=n=>a(n,\\"__esModule\\",{value:!0});var m=(n,i)=>()=>(i||n((i={exports:{}}).exports,i),i.exports),b=(n,i)=>{for(var l in i)a(n,l,{get:i[l],enumerable:!0})},s=(n,i,l,t)=>{if(i&&typeof i==\\"object\\"||typeof i==\\"function\\")for(let o of u(i))!y.call(n,o)&&(l||o!==\\"default\\")&&a(n,o,{get:()=>i[o],enumerable:!(t=p(i,o))||t.enumerable});return n},w=(n,i)=>s(r(a(n!=null?d(g(n)):{},\\"default\\",!i&&n&&n.__esModule?{get:()=>n.default,enumerable:!0}:{value:n,enumerable:!0})),n),f=(n=>(i,l)=>n&&n.get(i)||(l=s(r({}),i,1),n&&n.set(i,l),l))(typeof WeakMap!=\\"undefined\\"?new WeakMap:0);var h=m((C,c)=>{c.exports=_jsx_runtime});var L={};b(L,{default:()=>k,frontmatter:()=>I});var e=w(h()),I={layout:\\"tutorial\\",id:\\"how-to-deploy-your-chatbot-to-line\\",imgSpot:\\"/assets/images/tutorials/spot-line.webp\\",product:\\"kata-platform\\",title:\\"How to deploy your chatbot to LINE\\",date:\\"2022-01-17T07:00:00+07:00\\"};function N(n={}){let{wrapper:i}=n.components||{};return i?(0,e.jsx)(i,Object.assign({},n,{children:(0,e.jsx)(l,{})})):l();function l(){let t=Object.assign({p:\\"p\\",h2:\\"h2\\",a:\\"a\\",span:\\"span\\",ol:\\"ol\\",li:\\"li\\",strong:\\"strong\\",ul:\\"ul\\",h3:\\"h3\\"},n.components),{FigureImage:o}=t;return o||E(\\"FigureImage\\",!0),(0,e.jsxs)(e.Fragment,{children:[(0,e.jsx)(t.p,{children:\\"LINE is a free messaging platform and is famous in Indonesia. This messaging platform supports various interactive action types such as carousel, button, Image Map, and many more.\\"}),`\\n`,(0,e.jsx)(t.p,{children:\\"This tutorial will learn how to deploy your chatbot to LINE. Let\\\\u2019s start.\\"}),`\\n`,(0,e.jsxs)(t.h2,{id:\\"create-a-deployment\\",children:[(0,e.jsx)(t.a,{className:\\"anchor\\",href:\\"#create-a-deployment\\",children:(0,e.jsx)(t.span,{className:\\"icon icon-link\\"})}),\\"Create a deployment\\"]}),`\\n`,(0,e.jsx)(t.p,{children:\\"Deployment is a step to merge all Revisions in Flow, NLU, and CMS so that you can integrate bots into the channel. Before starting channel integration, chatbots must at least have 1 deployment.\\"}),`\\n`,(0,e.jsxs)(t.ol,{children:[`\\n`,(0,e.jsxs)(t.li,{children:[\\"In the sidebar, choose the \\",(0,e.jsx)(t.strong,{children:\\"Deploy\\"}),\\" menu. Then, select \\",(0,e.jsx)(t.strong,{children:\\"Overview\\"}),\\".\\"]}),`\\n`]}),`\\n`,(0,e.jsx)(o,{caption:{title:\\"Figure 1.\\",description:\\"Deploy menu interface\\"},src:\\"/assets/images/tutorials/how-to-deploy-your-chatbot-to-line/image1.webp\\",alt:\\"How to deploy your chatbot to LINE\\",naturalHeight:511,naturalWidth:1600}),`\\n`,(0,e.jsxs)(t.ol,{start:\\"2\\",children:[`\\n`,(0,e.jsxs)(t.li,{children:[`\\n`,(0,e.jsxs)(t.p,{children:[\\"Click the \\",(0,e.jsx)(t.strong,{children:\\"New Deployment\\"}),\\" button. Then it will show a form on the right screen.\\"]}),`\\n`]}),`\\n`,(0,e.jsxs)(t.li,{children:[`\\n`,(0,e.jsx)(t.p,{children:\\"Choose the deployment version. In the Kata Platform, there are 3 deployment versions which are:\\"}),`\\n`]}),`\\n`]}),`\\n`,(0,e.jsxs)(t.ul,{children:[`\\n`,(0,e.jsxs)(t.li,{children:[`\\n`,(0,e.jsx)(t.p,{children:\\"Major to deploy significant changes, such as change chatbot use-case.\\"}),`\\n`]}),`\\n`,(0,e.jsxs)(t.li,{children:[`\\n`,(0,e.jsx)(t.p,{children:\\"Minor to deploy medium changes, such as adding new features in your chatbot.\\"}),`\\n`]}),`\\n`,(0,e.jsxs)(t.li,{children:[`\\n`,(0,e.jsx)(t.p,{children:\\"Patch to deploy small changes, such as change copy in action.\\"}),`\\n`]}),`\\n`]}),`\\n`,(0,e.jsx)(o,{caption:{title:\\"Figure 2.\\",description:\\" Create a new deployment\\"},src:\\"/assets/images/tutorials/how-to-deploy-your-chatbot-to-line/image2.webp\\",alt:\\"How to deploy your chatbot to LINE\\",naturalHeight:855,naturalWidth:1600}),`\\n`,(0,e.jsxs)(t.ol,{start:\\"4\\",children:[`\\n`,(0,e.jsxs)(t.li,{children:[\\"Then, click the \\",(0,e.jsx)(t.strong,{children:\\"Submit\\"}),\\" button. If deployment is successful, then the interface will be shown like this.\\"]}),`\\n`]}),`\\n`,(0,e.jsx)(o,{caption:{title:\\"Figure 3.\\",description:\\"Deployment has been created.\\"},src:\\"/assets/images/tutorials/how-to-deploy-your-chatbot-to-line/image3.webp\\",alt:\\"How to deploy your chatbot to LINE\\",naturalHeight:533,naturalWidth:1600}),`\\n`,(0,e.jsx)(t.p,{children:\\"The step after creating a deployment is to create an environment. An environment is a zone in computer science that provides a place to run integrated applications. For example, Kata Platform has 3 environments: development, staging, and production.\\"}),`\\n`,(0,e.jsxs)(t.ol,{children:[`\\n`,(0,e.jsxs)(t.li,{children:[\\"Choose the menu \\",(0,e.jsx)(t.strong,{children:\\"Deploy\\"}),\\", then choose \\",(0,e.jsx)(t.strong,{children:\\"Environment\\"}),\\".\\"]}),`\\n`]}),`\\n`,(0,e.jsx)(o,{caption:{title:\\"Figure 4.\\",description:\\"Environment interface.\\"},src:\\"/assets/images/tutorials/how-to-deploy-your-chatbot-to-line/image4.webp\\",alt:\\"How to deploy your chatbot to LINE\\",naturalHeight:507,naturalWidth:1600}),`\\n`,(0,e.jsxs)(t.ol,{start:\\"2\\",children:[`\\n`,(0,e.jsxs)(t.li,{children:[`\\n`,(0,e.jsxs)(t.p,{children:[\\"In this step, you will create a Development environment. Click the button \\",(0,e.jsx)(t.strong,{children:\\"Create Environment\\"}),\\" in the \\",(0,e.jsx)(t.strong,{children:\\"Development\\"}),\\" card.\\"]}),`\\n`]}),`\\n`,(0,e.jsxs)(t.li,{children:[`\\n`,(0,e.jsxs)(t.p,{children:[\\"Fill in the environment, then click \\",(0,e.jsx)(t.strong,{children:\\"Create\\"}),\\".\\"]}),`\\n`]}),`\\n`]}),`\\n`,(0,e.jsx)(o,{caption:{title:\\"Figure 5.\\",description:\\"Create an environment interface.\\"},src:\\"/assets/images/tutorials/how-to-deploy-your-chatbot-to-line/image5.webp\\",alt:\\"How to deploy your chatbot to LINE\\",naturalHeight:1008,naturalWidth:1600}),`\\n`,(0,e.jsxs)(t.h2,{id:\\"integration-to-a-channel\\",children:[(0,e.jsx)(t.a,{className:\\"anchor\\",href:\\"#integration-to-a-channel\\",children:(0,e.jsx)(t.span,{className:\\"icon icon-link\\"})}),\\"Integration to a channel\\"]}),`\\n`,(0,e.jsx)(t.p,{children:\\"This step will create a chatbot integration with the Telegram messaging platform. Telegram is a free messaging platform to deploy chatbots with a simple setup.\\"}),`\\n`,(0,e.jsxs)(t.ol,{children:[`\\n`,(0,e.jsxs)(t.li,{children:[\\"In the \\",(0,e.jsx)(t.strong,{children:\\"Deploy > Environment\\"}),\\", click the \\",(0,e.jsx)(t.strong,{children:\\"Create Channel\\"}),\\" button.\\"]}),`\\n`]}),`\\n`,(0,e.jsx)(o,{caption:{title:\\"Figure 6.\\",description:\\"Button deploys channel in a Development environment.\\"},src:\\"/assets/images/tutorials/how-to-deploy-your-chatbot-to-line/image6.webp\\",alt:\\"How to deploy your chatbot to LINE\\",naturalHeight:694,naturalWidth:1594}),`\\n`,(0,e.jsxs)(t.ol,{start:\\"2\\",children:[`\\n`,(0,e.jsxs)(t.li,{children:[`\\n`,(0,e.jsxs)(t.p,{children:[\\"You will redirect to the \\",(0,e.jsx)(t.strong,{children:\\"Create Channel\\"}),\\" page. Click the \\",(0,e.jsx)(t.strong,{children:\\"\\\\u201C+ Create Channel\\\\u201D\\"}),\\" button to create a new channel.\\"]}),`\\n`]}),`\\n`,(0,e.jsxs)(t.li,{children:[`\\n`,(0,e.jsx)(t.p,{children:\\"Fill in the channel name and choose type as LINE.\\"}),`\\n`]}),`\\n`,(0,e.jsxs)(t.li,{children:[`\\n`,(0,e.jsx)(t.p,{children:\\"To fill in the Bot User OAuth Access Token field, we must set up a chatbot in Telegram first. The next step is to open your Telegram application and log in.\\"}),`\\n`]}),`\\n`]}),`\\n`,(0,e.jsx)(t.p,{children:\\"Before you start, you need a LINE account already registered and logged in to your application.\\"}),`\\n`,(0,e.jsxs)(t.h3,{id:\\"registration-to-line-developer-console-and-setup\\",children:[(0,e.jsx)(t.a,{className:\\"anchor\\",href:\\"#registration-to-line-developer-console-and-setup\\",children:(0,e.jsx)(t.span,{className:\\"icon icon-link\\"})}),\\"Registration to LINE Developer console and setup\\"]}),`\\n`,(0,e.jsxs)(t.ol,{children:[`\\n`,(0,e.jsxs)(t.li,{children:[`\\n`,(0,e.jsxs)(t.p,{children:[\\"Create a LINE account. To sign up for a LINE developer account, you have to have a LINE account by \\",(0,e.jsx)(t.a,{href:\\"https://line.me/en/download\\",children:\\"installing a LINE application, either desktop or mobile app\\"}),\\".\\"]}),`\\n`]}),`\\n`,(0,e.jsxs)(t.li,{children:[`\\n`,(0,e.jsxs)(t.p,{children:[\\"After you successfully registered, sign in to \\",(0,e.jsx)(t.a,{href:\\"https://developers.line.biz/en/\\",children:\\"https://developers.line.biz/en/\\"})]}),`\\n`]}),`\\n`,(0,e.jsxs)(t.li,{children:[`\\n`,(0,e.jsxs)(t.p,{children:[\\"In the LINE Developer Console, click \\",(0,e.jsx)(t.strong,{children:\\"Log In\\"}),\\".\\"]}),`\\n`]}),`\\n`]}),`\\n`,(0,e.jsx)(o,{caption:{title:\\"Figure 7.\\",description:\\"LINE developer dashboard.\\"},src:\\"/assets/images/tutorials/how-to-deploy-your-chatbot-to-line/image7.webp\\",alt:\\"How to deploy your chatbot to LINE\\",naturalHeight:822,naturalWidth:1600}),`\\n`,(0,e.jsxs)(t.ol,{start:\\"4\\",children:[`\\n`,(0,e.jsxs)(t.li,{children:[\\"Next, click on \\",(0,e.jsx)(t.strong,{children:\\"Login with LINE\\"}),\\".\\"]}),`\\n`]}),`\\n`,(0,e.jsx)(o,{caption:{title:\\"Figure 8.\\",description:\\"Log in with LINE\\"},src:\\"/assets/images/tutorials/how-to-deploy-your-chatbot-to-line/image8.webp\\",alt:\\"How to deploy your chatbot to LINE\\",naturalHeight:1134,naturalWidth:1054}),`\\n`,(0,e.jsxs)(t.ol,{start:\\"5\\",children:[`\\n`,(0,e.jsx)(t.li,{children:\\"Enter your email and password. After you successfully log in, you will be redirected to the provider list dashboard.\\"}),`\\n`]}),`\\n`,(0,e.jsx)(o,{caption:{title:\\"Figure 9.\\",description:\\"Provider list.\\"},src:\\"/assets/images/tutorials/how-to-deploy-your-chatbot-to-line/image9.webp\\",alt:\\"How to deploy your chatbot to LINE\\",naturalHeight:811,naturalWidth:1600}),`\\n`,(0,e.jsxs)(t.ol,{start:\\"6\\",children:[`\\n`,(0,e.jsxs)(t.li,{children:[`\\n`,(0,e.jsxs)(t.p,{children:[\\"Next, click \\",(0,e.jsx)(t.strong,{children:\\"\\\\u201CCreate New Provider\\\\u201D\\"}),\\". Fill in the provider name.\\"]}),`\\n`]}),`\\n`,(0,e.jsxs)(t.li,{children:[`\\n`,(0,e.jsxs)(t.p,{children:[\\"Click \\",(0,e.jsx)(t.strong,{children:\\"Confirm\\"}),\\" to continue.\\"]}),`\\n`]}),`\\n`,(0,e.jsxs)(t.li,{children:[`\\n`,(0,e.jsx)(t.p,{children:\\"Your new provider has been created.\\"}),`\\n`]}),`\\n`]}),`\\n`,(0,e.jsx)(o,{caption:{title:\\"Figure 10.\\",description:\\"New provider.\\"},src:\\"/assets/images/tutorials/how-to-deploy-your-chatbot-to-line/image10.webp\\",alt:\\"How to deploy your chatbot to LINE\\",naturalHeight:550,naturalWidth:1600}),`\\n`,(0,e.jsxs)(t.ol,{start:\\"9\\",children:[`\\n`,(0,e.jsxs)(t.li,{children:[\\"Next, set up the channel in the Messaging API by clicking \\",(0,e.jsx)(t.strong,{children:\\"Create Channel\\"}),\\" on Messaging API.\\"]}),`\\n`]}),`\\n`,(0,e.jsx)(o,{caption:{title:\\"Figure 11.\\",description:\\"Create channel.\\"},src:\\"/assets/images/tutorials/how-to-deploy-your-chatbot-to-line/image11.webp\\",alt:\\"How to deploy your chatbot to LINE\\",naturalHeight:818,naturalWidth:1600}),`\\n`,(0,e.jsxs)(t.ol,{start:\\"10\\",children:[`\\n`,(0,e.jsxs)(t.li,{children:[`\\n`,(0,e.jsx)(t.p,{children:\\"Fill in your LINE bot detail.\\"}),`\\n`]}),`\\n`,(0,e.jsxs)(t.li,{children:[`\\n`,(0,e.jsxs)(t.p,{children:[\\"Next, you have to choose the \\",(0,e.jsx)(t.strong,{children:\\"Developer Trial as Plan\\"}),\\".\\"]}),`\\n`]}),`\\n`]}),`\\n`,(0,e.jsx)(o,{caption:{title:\\"Figure 12.\\",description:\\"hoose developer trial option\\"},src:\\"/assets/images/tutorials/how-to-deploy-your-chatbot-to-line/image12.webp\\",alt:\\"How to deploy your chatbot to LINE\\",naturalHeight:351,naturalWidth:1600}),`\\n`,(0,e.jsxs)(t.ol,{start:\\"12\\",children:[`\\n`,(0,e.jsxs)(t.li,{children:[\\"Finally, click \\",(0,e.jsx)(t.strong,{children:\\"Create\\"}),\\". The successfully created channel will look like this.\\"]}),`\\n`]}),`\\n`,(0,e.jsx)(o,{caption:{title:\\"Figure 13.\\",description:\\"New channel.\\"},src:\\"/assets/images/tutorials/how-to-deploy-your-chatbot-to-line/image13.webp\\",alt:\\"How to deploy your chatbot to LINE\\",naturalHeight:1012,naturalWidth:1176}),`\\n`,(0,e.jsxs)(t.h3,{id:\\"integrate-line-to-your-chatbot\\",children:[(0,e.jsx)(t.a,{className:\\"anchor\\",href:\\"#integrate-line-to-your-chatbot\\",children:(0,e.jsx)(t.span,{className:\\"icon icon-link\\"})}),\\"Integrate LINE to your chatbot\\"]}),`\\n`,(0,e.jsxs)(t.ol,{children:[`\\n`,(0,e.jsxs)(t.li,{children:[`\\n`,(0,e.jsx)(t.p,{children:\\"Click on the created channel to fill in the Channel Access Token\\"}),`\\n`]}),`\\n`,(0,e.jsxs)(t.li,{children:[`\\n`,(0,e.jsxs)(t.p,{children:[\\"Click \\",(0,e.jsx)(t.strong,{children:\\"\\\\u201CIssue\\\\u201D\\"}),\\" in the Messaging Settings section.\\"]}),`\\n`]}),`\\n`]}),`\\n`,(0,e.jsx)(o,{caption:{title:\\"Figure 14.\\",description:\\"Issue access token.\\"},src:\\"/assets/images/tutorials/how-to-deploy-your-chatbot-to-line/image14.webp\\",alt:\\"How to deploy your chatbot to LINE\\",naturalHeight:638,naturalWidth:1600}),`\\n`,(0,e.jsxs)(t.ol,{start:\\"3\\",children:[`\\n`,(0,e.jsxs)(t.li,{children:[`\\n`,(0,e.jsxs)(t.p,{children:[\\"Then, a dialog will show. Click on \\",(0,e.jsx)(t.strong,{children:\\"Issue\\"}),\\" to continue.\\"]}),`\\n`]}),`\\n`,(0,e.jsxs)(t.li,{children:[`\\n`,(0,e.jsxs)(t.p,{children:[\\"Finally, copy the \\",(0,e.jsx)(t.strong,{children:\\"Channel Access Token\\"}),\\" below and paste it on the Create Channel form in the Kata Platform.\\"]}),`\\n`]}),`\\n`]}),`\\n`,(0,e.jsx)(o,{caption:{title:\\"Figure 15.\\",description:\\"Show Channel Access Token.\\"},src:\\"/assets/images/tutorials/how-to-deploy-your-chatbot-to-line/image15.webp\\",alt:\\"How to deploy your chatbot to LINE\\",naturalHeight:223,naturalWidth:1600}),`\\n`,(0,e.jsxs)(t.ol,{start:\\"5\\",children:[`\\n`,(0,e.jsx)(t.li,{children:\\"Go back to Kata Platform, then paste the Channel Access Token.\\"}),`\\n`]}),`\\n`,(0,e.jsx)(o,{caption:{title:\\"Figure 16.\\",description:\\"Paste Channel Access Token.\\"},src:\\"/assets/images/tutorials/how-to-deploy-your-chatbot-to-line/image16.webp\\",alt:\\"How to deploy your chatbot to LINE\\",naturalHeight:964,naturalWidth:740}),`\\n`,(0,e.jsxs)(t.ol,{start:\\"6\\",children:[`\\n`,(0,e.jsx)(t.li,{children:\\"Next, you will fill in the Channel Secret field. Then, in Basic Information, copy Channel Secret from LINE to the Kata Platform.\\"}),`\\n`]}),`\\n`,(0,e.jsx)(o,{caption:{title:\\"Figure 17.\\",description:\\"Copy Channel Secret.\\"},src:\\"/assets/images/tutorials/how-to-deploy-your-chatbot-to-line/image17.webp\\",alt:\\"How to deploy your chatbot to LINE\\",naturalHeight:891,naturalWidth:1600}),`\\n`,(0,e.jsxs)(t.ol,{start:\\"7\\",children:[`\\n`,(0,e.jsx)(t.li,{children:\\"Go back to the Kata Platform, then paste the Channel Secret.\\"}),`\\n`]}),`\\n`,(0,e.jsx)(o,{caption:{title:\\"Figure 18.\\",description:\\"All fields are filled in.\\"},src:\\"/assets/images/tutorials/how-to-deploy-your-chatbot-to-line/image18.webp\\",alt:\\"How to deploy your chatbot to LINE\\",naturalHeight:996,naturalWidth:766}),`\\n`,(0,e.jsxs)(t.ol,{start:\\"8\\",children:[`\\n`,(0,e.jsxs)(t.li,{children:[\\"Click \\",(0,e.jsx)(t.strong,{children:\\"\\\\u201CCreate\\\\u201D\\"}),\\" to generate a webhook URL from the Kata Platform.\\"]}),`\\n`]}),`\\n`,(0,e.jsx)(t.p,{children:\\"After the webhook URL is generated, go to Messaging Settings in the LINE developer console to enable webhook.\\"}),`\\n`,(0,e.jsxs)(t.ol,{start:\\"9\\",children:[`\\n`,(0,e.jsxs)(t.li,{children:[\\"Enable the webhook by clicking on \\",(0,e.jsx)(t.strong,{children:\\"Enable\\"}),\\" in the \\",(0,e.jsx)(t.strong,{children:\\"\\\\u201CUse Webhooks\\\\u201D\\"}),\\" section, placed above the Webhook URL field.\\"]}),`\\n`]}),`\\n`,(0,e.jsx)(o,{caption:{title:\\"Figure 19.\\",description:\\"Enable webhook.\\"},src:\\"/assets/images/tutorials/how-to-deploy-your-chatbot-to-line/image19.webp\\",alt:\\"How to deploy your chatbot to LINE\\",naturalHeight:383,naturalWidth:1600}),`\\n`,(0,e.jsxs)(t.ol,{start:\\"10\\",children:[`\\n`,(0,e.jsxs)(t.li,{children:[\\"Click \\",(0,e.jsx)(t.strong,{children:\\"\\\\u201CUpdate,\\\\u201D\\"}),\\" then paste the webhook URL to the LINE developer console.\\"]}),`\\n`]}),`\\n`,(0,e.jsx)(o,{caption:{title:\\"Figure 20.\\",description:\\"Paste webhook from Kata Platform.\\"},src:\\"/assets/images/tutorials/how-to-deploy-your-chatbot-to-line/image20.webp\\",alt:\\"How to deploy your chatbot to LINE\\",naturalHeight:506,naturalWidth:1600}),`\\n`,(0,e.jsxs)(t.ol,{start:\\"11\\",children:[`\\n`,(0,e.jsxs)(t.li,{children:[`\\n`,(0,e.jsxs)(t.p,{children:[\\"Click \\",(0,e.jsx)(t.strong,{children:\\"\\\\u201CUpdate\\\\u201D\\"}),\\", then click \\",(0,e.jsx)(t.strong,{children:\\"\\\\u201CVerify\\\\u201D\\"}),\\".\\"]}),`\\n`]}),`\\n`,(0,e.jsxs)(t.li,{children:[`\\n`,(0,e.jsx)(t.p,{children:\\"Next, disable auto-reply messages and greeting messages by following figure 21.\\"}),`\\n`]}),`\\n`]}),`\\n`,(0,e.jsx)(o,{caption:{title:\\"Figure 21.\\",description:\\"Disable auto-reply and greeting messages.\\"},src:\\"/assets/images/tutorials/how-to-deploy-your-chatbot-to-line/image21.webp\\",alt:\\"How to deploy your chatbot to LINE\\",naturalHeight:484,naturalWidth:1600}),`\\n`,(0,e.jsxs)(t.ol,{start:\\"13\\",children:[`\\n`,(0,e.jsxs)(t.li,{children:[`\\n`,(0,e.jsx)(t.p,{children:\\"Congratulations, you have successfully deployed your bot to LINE Messenger.\\"}),`\\n`]}),`\\n`,(0,e.jsxs)(t.li,{children:[`\\n`,(0,e.jsx)(t.p,{children:\\"Next, test your bot by scanning the QR code.\\"}),`\\n`]}),`\\n`]}),`\\n`,(0,e.jsxs)(t.p,{children:[\\"It is the end of the guidance. If you find it difficult to follow, you can contact \\",(0,e.jsx)(t.a,{href:\\"mailto:support@kata.ai\\",children:\\"support@kata.ai\\"}),\\". Thank you.\\"]})]})}}var k=N;function E(n,i){throw new Error(\\"Expected \\"+(i?\\"component\\":\\"object\\")+\\" `\\"+n+\\"` to be defined: you likely forgot to import, pass, or provide it.\\")}return f(L);})();\\n;return Component;"},"_id":"tutorials/how-to-deploy-your-chatbot-to-line.mdx","_raw":{"sourceFilePath":"tutorials/how-to-deploy-your-chatbot-to-line.mdx","sourceFileName":"how-to-deploy-your-chatbot-to-line.mdx","sourceFileDir":"tutorials","contentType":"mdx","flattenedPath":"tutorials/how-to-deploy-your-chatbot-to-line"},"type":"Tutorials","slug":["how-to-deploy-your-chatbot-to-line"],"excerpt":"\\nLINE is a free messaging platform and is famous in Indonesia. This messaging platform supports various interactive action types such as carousel, button, Image Map, and many more"}');
;// CONCATENATED MODULE: ./.contentlayer/generated/Tutorials/tutorials__how-to-deploy-your-chatbot-using-twitter.mdx.json
const tutorials_how_to_deploy_your_chatbot_using_twitter_mdx_namespaceObject = JSON.parse('{"layout":"tutorial","id":"how-to-deploy-your-chatbot-using-twitter","imgSpot":"/assets/images/tutorials/spot-twitter.webp","product":"kata-platform","title":"How to deploy your chatbot using Twitter","date":"2021-08-26T07:00:00+07:00","body":{"raw":"\\nTwitter is a trending social media for most countries, so Twitter chatbots will be a great opportunity to join the trend ✨ In this tutorial, you will learn how to deploy the bot to the Twitter direct message channel. So, let’s get started.\\n\\n## Deploy your chatbot\\n\\n1. Click **Deploy** menu in the left sidebar\\n2. On the Deploy page, click on the **New Deployment** button in the top right corner. It will open up the Create Deployment menu.\\n3. Choose any deployment version you want to deploy and fill in the changelog.\\n\\n<FigureImage\\n  caption={{ title: \'Figure 1.\', description: `Create a new deployment` }}\\n  src=\\"/assets/images/tutorials/how-to-deploy-your-chatbot-using-twitter/image1.webp\\"\\n  alt=\\"How to deploy your chatbot to Twitter\\"\\n  naturalHeight={1600}\\n  naturalWidth={1133}\\n/>\\n\\n1. Click **Submit** to finish the deployment\\n\\nIf you already have an environment created, skip these steps.\\n\\n1. Go to the **Deployments > Environment** menu.\\n\\n<FigureImage\\n  caption={{ title: \'Figure 2.\', description: `Set up environment, then set up Twitter channel` }}\\n  src=\\"/assets/images/tutorials/how-to-deploy-your-chatbot-using-twitter/image2.webp\\"\\n  alt=\\"How to deploy your chatbot to Twitter\\"\\n  naturalHeight={505}\\n  naturalWidth={1600}\\n/>\\n\\n2. Click the **Create Environment** button in any environment. You will see a drawer to create a new environment.\\n3. Choose the **development version** you want (in this tutorial, we use the 1.0.0 version)\\n4. Fill in the **environment URL**. This environment URL is used for CMS. Learn more about CMS.\\n5. Click **Create** to create the environment.\\n6. Created environment now has a **Create Channel** button.\\n\\nContinue to choose Twitter as a chatbot channel.\\n\\n1. Click the **Create Channel** button to start adding channels to the environment. It will open up the Channel menu within the environment.\\n2. Click the ”**+ Create Channel**” button in the channel table list. A menu to set up the channel will be shown.\\n3. Choose **Twitter** in Channel Type.\\n\\n<FigureImage\\n  caption={{ title: \'Figure 3.\', description: `Create Twitter channel` }}\\n  src=\\"/assets/images/tutorials/how-to-deploy-your-chatbot-using-twitter/image3.webp\\"\\n  alt=\\"How to deploy your chatbot to Twitter\\"\\n  naturalHeight={1218}\\n  naturalWidth={1600}\\n/>\\n\\n<Table>\\n  <TableHead>\\n    <TableHeadRow>\\n      <TableHeadCell>Field Name</TableHeadCell>\\n      <TableHeadCell>Functionality</TableHeadCell>\\n      <TableHeadCell>Limitation</TableHeadCell>\\n    </TableHeadRow>\\n  </TableHead>\\n  <TableBody>\\n    <TableBodyRow>\\n      <TableBodyCell>Name</TableBodyCell>\\n      <TableBodyCell>Your channel name</TableBodyCell>\\n      <TableBodyCell>\\n        Max. 30 characters must contain only alphanumeric characters (A-Z, a-z, 0-9), `-`, and `_`.\\n      </TableBodyCell>\\n    </TableBodyRow>\\n    <TableBodyRow>\\n      <TableBodyCell>Access Token</TableBodyCell>\\n      <TableBodyCell>-</TableBodyCell>\\n      <TableBodyCell>-</TableBodyCell>\\n    </TableBodyRow>\\n    <TableBodyRow>\\n      <TableBodyCell>Access Token Secret</TableBodyCell>\\n      <TableBodyCell>- </TableBodyCell>\\n      <TableBodyCell>-</TableBodyCell>\\n    </TableBodyRow>\\n    <TableBodyRow>\\n      <TableBodyCell>Consumer Key (API Key)</TableBodyCell>\\n      <TableBodyCell>- </TableBodyCell>\\n      <TableBodyCell>-</TableBodyCell>\\n    </TableBodyRow>\\n    <TableBodyRow>\\n      <TableBodyCell>Consumer Secret (API Secret)</TableBodyCell>\\n      <TableBodyCell>- </TableBodyCell>\\n      <TableBodyCell>-</TableBodyCell>\\n    </TableBodyRow>\\n  </TableBody>\\n</Table>\\n\\n## How to collect API secret key, access token, and access token secret\\n\\n1. To deploy your bot on Twitter, you need to register for a developer account. Go to <a href=\\"https://developer.twitter.com\\" target=\\"_blank\\"><span>http</span>s://developer.twitter.com</a>.\\n2. Continue to sign up by following the instructions.\\n3. Then, log in to the Twitter Developer Page. You will see the homepage.\\n4. Click on **Create An App** tab, then your page will be shown like this:\\n\\n<FigureImage\\n  caption={{ title: \'Figure 4.\', description: ` Create an app page.` }}\\n  src=\\"/assets/images/tutorials/how-to-deploy-your-chatbot-using-twitter/image4.webp\\"\\n  alt=\\"How to deploy your chatbot to Twitter\\"\\n  naturalHeight={600}\\n  naturalWidth={741}\\n/>\\n\\n5. Fill the form then click on **Create** button\\n6. Then, go to the **Keys and tokens** tab. Click the **Regenerate** button to generate an API key, API secret key, access token, and access token secret. Here is an example.\\n\\n<FigureImage\\n  caption={{ title: \'Figure 5.\', description: `Generate access token and access token secret` }}\\n  src=\\"/assets/images/tutorials/how-to-deploy-your-chatbot-using-twitter/image5.webp\\"\\n  alt=\\"How to deploy your chatbot to Twitter\\"\\n  naturalHeight={378}\\n  naturalWidth={757}\\n/>\\n\\n7. Then, go to the **Permissions** tab. In this tab, change access permissions to **Read, write, and Direct Message**.\\n\\n<FigureImage\\n  caption={{ title: \'Figure 6.\', description: `Access permissions changed to Read, write and Direct Messages` }}\\n  src=\\"/assets/images/tutorials/how-to-deploy-your-chatbot-using-twitter/image6.webp\\"\\n  alt=\\"How to deploy your chatbot to Twitter\\"\\n  naturalHeight={273}\\n  naturalWidth={750}\\n/>\\n\\n8. Go to the **Dev environments**(<a href=\\"https://developer.twitter.com/en/account/environments\\" target=\\"_blank\\"><span>http</span>s://developer.twitter.com/en/account/environments</a>), then click the button **Set up dev environment** to begin.\\n\\n<FigureImage\\n  caption={{ title: \'Figure 7.\', description: `Set up dev environment` }}\\n  src=\\"/assets/images/tutorials/how-to-deploy-your-chatbot-using-twitter/image7.webp\\"\\n  alt=\\"How to deploy your chatbot to Twitter\\"\\n  naturalHeight={429}\\n  naturalWidth={934}\\n/>\\n\\nNext step is to paste the API key, API secret key, access token, and access token secret from Twitter to the Kata Platform.\\n\\n1. Go back to the Key and Tokens tab, copy all fields.\\n2. After copied, go back to Kata Platform (<a href=\\"https://platform.kata.ai\\" target=\\"_blank\\"><span>http</span>s://platform.kata.ai</a>)\\n3. Paste the API key, API secret key, access token, and access token secret there. Here is the example:\\n\\n<FigureImage\\n  caption={{ title: \'Figure 8.\', description: `Paste API key, API secret key, access token, and access token secret` }}\\n  src=\\"/assets/images/tutorials/how-to-deploy-your-chatbot-using-twitter/image8.webp\\"\\n  alt=\\"How to deploy your chatbot to Twitter\\"\\n  naturalHeight={1287}\\n  naturalWidth={1600}\\n/>\\n\\n4. Click **Create** to generate the webhook. You can see a webhook URL from the generated channel.\\n5. Click the **copy** icon to copy the webhook URL.\\n\\n<FigureImage\\n  caption={{ title: \'Figure 9.\', description: `Copy webhook URL` }}\\n  src=\\"/assets/images/tutorials/how-to-deploy-your-chatbot-using-twitter/image9.webp\\"\\n  alt=\\"How to deploy your chatbot to Twitter\\"\\n  naturalHeight={282}\\n  naturalWidth={1600}\\n/>\\n\\n## Finalize Twitter Direct Message Set Up\\n\\n1. Clone this repository: <a href=\\"https://github.com/twitterdev/account-activity-dashboard\\" target=\\"_blank\\"><span>http</span>s://github.com/twitterdev/account-activity-dashboard</a>\\n2. Install Node.js dependencies using **npm install** command.\\n3. Create a new **config.json** file based on **config.sample.json** & **.env** file based on **env.template** and fill in your Twitter keys, tokens and webhook environment name. Twitter keys and access tokens are found on your app page on Apps Dashboard (<a href=\\"https://developer.twitter.com/apps\\" target=\\"_blank\\"><span>http</span>s://developer.twitter.com/apps</a>). The basic auth properties can be anything you want, and are used for simple password protection to access the configuration UI. Environment name is found on the Dev Environment (<a href=\\"https://developer.twitter.com/en/account/environments\\" target=\\"_blank\\"><span>http</span>s://developer.twitter.com/en/account/environments</a>) page. Make sure you have access to the Account Activity API.\\n4. Revisit your developer.twitter.com Apps Settings page, and add the following URL values as whitelisted Callback URLs:\\n\\n```\\nhttp://your.app.domain/callbacks/addsub\\nhttp://your.app.domain/callbacks/removesub\\n```\\n\\n5. Run locally using **npm start** command\\n6. Open <a href=\\"http://your.app.domain/webhook\\" target=\\"_blank\\"><span>htt</span>p://your.app.domain/webhook</a>. If it succeeds, username and password are inserted with basic auth properties that you have defined before.\\n7. Paste webhook from Kata Platform to Create or Update Webhook. Click **Create/Update** to continue.\\n\\n<FigureImage\\n  caption={{ title: \'Figure 10.\', description: `Paste webhook URL from Kata Platform` }}\\n  src=\\"/assets/images/tutorials/how-to-deploy-your-chatbot-using-twitter/image10.webp\\"\\n  alt=\\"How to deploy your chatbot to Twitter\\"\\n  naturalHeight={324}\\n  naturalWidth={828}\\n/>\\n\\n8. Next, open <a href=\\"http://your.app.domain/subscriptions\\" target=\\"_blank\\"><span>htt</span>p://your.app.domain/subscriptions</a>.\\n9. Then, click **Add** to add a user subscription. Login with the same account that you set to become the bot.\\n\\n<FigureImage\\n  caption={{ title: \'Figure 11.\', description: `Manage subscription page` }}\\n  src=\\"/assets/images/tutorials/how-to-deploy-your-chatbot-using-twitter/image11.webp\\"\\n  alt=\\"How to deploy your chatbot to Twitter\\"\\n  naturalHeight={346}\\n  naturalWidth={1091}\\n/>\\n\\n10. Finally, create a direct message to the bot account.\\n\\n<FigureImage\\n  caption={{ title: \'Figure 12.\', description: `Chatbot successfully deployed` }}\\n  src=\\"/assets/images/tutorials/how-to-deploy-your-chatbot-using-twitter/image12.webp\\"\\n  alt=\\"How to deploy your chatbot to Twitter\\"\\n  naturalHeight={509}\\n  naturalWidth={725}\\n/>\\n\\nThis is the end of the guidance, you can contact support@kata.ai if you have any difficulties when implementing this.\\n","code":"var Component=(()=>{var k=Object.create;var h=Object.defineProperty;var f=Object.getOwnPropertyDescriptor;var v=Object.getOwnPropertyNames;var T=Object.getPrototypeOf,C=Object.prototype.hasOwnProperty;var m=n=>h(n,\\"__esModule\\",{value:!0});var H=(n,o)=>()=>(o||n((o={exports:{}}).exports,o),o.exports),A=(n,o)=>{for(var a in o)h(n,a,{get:o[a],enumerable:!0})},w=(n,o,a,t)=>{if(o&&typeof o==\\"object\\"||typeof o==\\"function\\")for(let i of v(o))!C.call(n,i)&&(a||i!==\\"default\\")&&h(n,i,{get:()=>o[i],enumerable:!(t=f(o,i))||t.enumerable});return n},F=(n,o)=>w(m(h(n!=null?k(T(n)):{},\\"default\\",!o&&n&&n.__esModule?{get:()=>n.default,enumerable:!0}:{value:n,enumerable:!0})),n),I=(n=>(o,a)=>n&&n.get(o)||(a=w(m({}),o,1),n&&n.set(o,a),a))(typeof WeakMap!=\\"undefined\\"?new WeakMap:0);var b=H((N,y)=>{y.exports=_jsx_runtime});var x={};A(x,{default:()=>_,frontmatter:()=>P});var e=F(b()),P={layout:\\"tutorial\\",title:\\"How to deploy your chatbot using Twitter\\",id:\\"how-to-deploy-your-chatbot-using-twitter\\",product:\\"kata-platform\\",imgSpot:\\"/assets/images/tutorials/spot-twitter.webp\\",date:\\"2021-08-26T07:00:00+07:00\\"};function R(n={}){let{wrapper:o}=n.components||{};return o?(0,e.jsx)(o,Object.assign({},n,{children:(0,e.jsx)(a,{})})):a();function a(){let t=Object.assign({p:\\"p\\",h2:\\"h2\\",a:\\"a\\",span:\\"span\\",ol:\\"ol\\",li:\\"li\\",strong:\\"strong\\",code:\\"code\\",pre:\\"pre\\"},n.components),{FigureImage:i,Table:d,TableHead:p,TableHeadRow:u,TableHeadCell:s,TableBody:g,TableBodyRow:c,TableBodyCell:r}=t;return i||l(\\"FigureImage\\",!0),d||l(\\"Table\\",!0),g||l(\\"TableBody\\",!0),r||l(\\"TableBodyCell\\",!0),c||l(\\"TableBodyRow\\",!0),p||l(\\"TableHead\\",!0),s||l(\\"TableHeadCell\\",!0),u||l(\\"TableHeadRow\\",!0),(0,e.jsxs)(e.Fragment,{children:[(0,e.jsx)(t.p,{children:\\"Twitter is a trending social media for most countries, so Twitter chatbots will be a great opportunity to join the trend \\\\u2728 In this tutorial, you will learn how to deploy the bot to the Twitter direct message channel. So, let\\\\u2019s get started.\\"}),`\\n`,(0,e.jsxs)(t.h2,{id:\\"deploy-your-chatbot\\",children:[(0,e.jsx)(t.a,{className:\\"anchor\\",href:\\"#deploy-your-chatbot\\",children:(0,e.jsx)(t.span,{className:\\"icon icon-link\\"})}),\\"Deploy your chatbot\\"]}),`\\n`,(0,e.jsxs)(t.ol,{children:[`\\n`,(0,e.jsxs)(t.li,{children:[\\"Click \\",(0,e.jsx)(t.strong,{children:\\"Deploy\\"}),\\" menu in the left sidebar\\"]}),`\\n`,(0,e.jsxs)(t.li,{children:[\\"On the Deploy page, click on the \\",(0,e.jsx)(t.strong,{children:\\"New Deployment\\"}),\\" button in the top right corner. It will open up the Create Deployment menu.\\"]}),`\\n`,(0,e.jsx)(t.li,{children:\\"Choose any deployment version you want to deploy and fill in the changelog.\\"}),`\\n`]}),`\\n`,(0,e.jsx)(i,{caption:{title:\\"Figure 1.\\",description:\\"Create a new deployment\\"},src:\\"/assets/images/tutorials/how-to-deploy-your-chatbot-using-twitter/image1.webp\\",alt:\\"How to deploy your chatbot to Twitter\\",naturalHeight:1600,naturalWidth:1133}),`\\n`,(0,e.jsxs)(t.ol,{children:[`\\n`,(0,e.jsxs)(t.li,{children:[\\"Click \\",(0,e.jsx)(t.strong,{children:\\"Submit\\"}),\\" to finish the deployment\\"]}),`\\n`]}),`\\n`,(0,e.jsx)(t.p,{children:\\"If you already have an environment created, skip these steps.\\"}),`\\n`,(0,e.jsxs)(t.ol,{children:[`\\n`,(0,e.jsxs)(t.li,{children:[\\"Go to the \\",(0,e.jsx)(t.strong,{children:\\"Deployments > Environment\\"}),\\" menu.\\"]}),`\\n`]}),`\\n`,(0,e.jsx)(i,{caption:{title:\\"Figure 2.\\",description:\\"Set up environment, then set up Twitter channel\\"},src:\\"/assets/images/tutorials/how-to-deploy-your-chatbot-using-twitter/image2.webp\\",alt:\\"How to deploy your chatbot to Twitter\\",naturalHeight:505,naturalWidth:1600}),`\\n`,(0,e.jsxs)(t.ol,{start:\\"2\\",children:[`\\n`,(0,e.jsxs)(t.li,{children:[\\"Click the \\",(0,e.jsx)(t.strong,{children:\\"Create Environment\\"}),\\" button in any environment. You will see a drawer to create a new environment.\\"]}),`\\n`,(0,e.jsxs)(t.li,{children:[\\"Choose the \\",(0,e.jsx)(t.strong,{children:\\"development version\\"}),\\" you want (in this tutorial, we use the 1.0.0 version)\\"]}),`\\n`,(0,e.jsxs)(t.li,{children:[\\"Fill in the \\",(0,e.jsx)(t.strong,{children:\\"environment URL\\"}),\\". This environment URL is used for CMS. Learn more about CMS.\\"]}),`\\n`,(0,e.jsxs)(t.li,{children:[\\"Click \\",(0,e.jsx)(t.strong,{children:\\"Create\\"}),\\" to create the environment.\\"]}),`\\n`,(0,e.jsxs)(t.li,{children:[\\"Created environment now has a \\",(0,e.jsx)(t.strong,{children:\\"Create Channel\\"}),\\" button.\\"]}),`\\n`]}),`\\n`,(0,e.jsx)(t.p,{children:\\"Continue to choose Twitter as a chatbot channel.\\"}),`\\n`,(0,e.jsxs)(t.ol,{children:[`\\n`,(0,e.jsxs)(t.li,{children:[\\"Click the \\",(0,e.jsx)(t.strong,{children:\\"Create Channel\\"}),\\" button to start adding channels to the environment. It will open up the Channel menu within the environment.\\"]}),`\\n`,(0,e.jsxs)(t.li,{children:[\\"Click the \\\\u201D\\",(0,e.jsx)(t.strong,{children:\\"+ Create Channel\\"}),\\"\\\\u201D button in the channel table list. A menu to set up the channel will be shown.\\"]}),`\\n`,(0,e.jsxs)(t.li,{children:[\\"Choose \\",(0,e.jsx)(t.strong,{children:\\"Twitter\\"}),\\" in Channel Type.\\"]}),`\\n`]}),`\\n`,(0,e.jsx)(i,{caption:{title:\\"Figure 3.\\",description:\\"Create Twitter channel\\"},src:\\"/assets/images/tutorials/how-to-deploy-your-chatbot-using-twitter/image3.webp\\",alt:\\"How to deploy your chatbot to Twitter\\",naturalHeight:1218,naturalWidth:1600}),`\\n`,(0,e.jsxs)(d,{children:[(0,e.jsx)(p,{children:(0,e.jsxs)(u,{children:[(0,e.jsx)(s,{children:\\"Field Name\\"}),`\\n`,(0,e.jsx)(s,{children:\\"Functionality\\"}),`\\n`,(0,e.jsx)(s,{children:\\"Limitation\\"})]})}),(0,e.jsxs)(g,{children:[(0,e.jsxs)(c,{children:[(0,e.jsx)(r,{children:\\"Name\\"}),`\\n`,(0,e.jsx)(r,{children:\\"Your channel name\\"}),(0,e.jsx)(r,{children:(0,e.jsxs)(t.p,{children:[\\"Max. 30 characters must contain only alphanumeric characters (A-Z, a-z, 0-9), \\",(0,e.jsx)(t.code,{children:\\"-\\"}),\\", and \\",(0,e.jsx)(t.code,{children:\\"_\\"}),\\".\\"]})})]}),(0,e.jsxs)(c,{children:[(0,e.jsx)(r,{children:\\"Access Token\\"}),`\\n`,(0,e.jsx)(r,{children:\\"-\\"}),`\\n`,(0,e.jsx)(r,{children:\\"-\\"})]}),(0,e.jsxs)(c,{children:[(0,e.jsx)(r,{children:\\"Access Token Secret\\"}),`\\n`,(0,e.jsx)(r,{children:\\"- \\"}),`\\n`,(0,e.jsx)(r,{children:\\"-\\"})]}),(0,e.jsxs)(c,{children:[(0,e.jsx)(r,{children:\\"Consumer Key (API Key)\\"}),`\\n`,(0,e.jsx)(r,{children:\\"- \\"}),`\\n`,(0,e.jsx)(r,{children:\\"-\\"})]}),(0,e.jsxs)(c,{children:[(0,e.jsx)(r,{children:\\"Consumer Secret (API Secret)\\"}),`\\n`,(0,e.jsx)(r,{children:\\"- \\"}),`\\n`,(0,e.jsx)(r,{children:\\"-\\"})]})]})]}),`\\n`,(0,e.jsxs)(t.h2,{id:\\"how-to-collect-api-secret-key-access-token-and-access-token-secret\\",children:[(0,e.jsx)(t.a,{className:\\"anchor\\",href:\\"#how-to-collect-api-secret-key-access-token-and-access-token-secret\\",children:(0,e.jsx)(t.span,{className:\\"icon icon-link\\"})}),\\"How to collect API secret key, access token, and access token secret\\"]}),`\\n`,(0,e.jsxs)(t.ol,{children:[`\\n`,(0,e.jsxs)(t.li,{children:[\\"To deploy your bot on Twitter, you need to register for a developer account. Go to \\",(0,e.jsxs)(\\"a\\",{href:\\"https://developer.twitter.com\\",target:\\"_blank\\",children:[(0,e.jsx)(\\"span\\",{children:\\"http\\"}),\\"s://developer.twitter.com\\"]}),\\".\\"]}),`\\n`,(0,e.jsx)(t.li,{children:\\"Continue to sign up by following the instructions.\\"}),`\\n`,(0,e.jsx)(t.li,{children:\\"Then, log in to the Twitter Developer Page. You will see the homepage.\\"}),`\\n`,(0,e.jsxs)(t.li,{children:[\\"Click on \\",(0,e.jsx)(t.strong,{children:\\"Create An App\\"}),\\" tab, then your page will be shown like this:\\"]}),`\\n`]}),`\\n`,(0,e.jsx)(i,{caption:{title:\\"Figure 4.\\",description:\\" Create an app page.\\"},src:\\"/assets/images/tutorials/how-to-deploy-your-chatbot-using-twitter/image4.webp\\",alt:\\"How to deploy your chatbot to Twitter\\",naturalHeight:600,naturalWidth:741}),`\\n`,(0,e.jsxs)(t.ol,{start:\\"5\\",children:[`\\n`,(0,e.jsxs)(t.li,{children:[\\"Fill the form then click on \\",(0,e.jsx)(t.strong,{children:\\"Create\\"}),\\" button\\"]}),`\\n`,(0,e.jsxs)(t.li,{children:[\\"Then, go to the \\",(0,e.jsx)(t.strong,{children:\\"Keys and tokens\\"}),\\" tab. Click the \\",(0,e.jsx)(t.strong,{children:\\"Regenerate\\"}),\\" button to generate an API key, API secret key, access token, and access token secret. Here is an example.\\"]}),`\\n`]}),`\\n`,(0,e.jsx)(i,{caption:{title:\\"Figure 5.\\",description:\\"Generate access token and access token secret\\"},src:\\"/assets/images/tutorials/how-to-deploy-your-chatbot-using-twitter/image5.webp\\",alt:\\"How to deploy your chatbot to Twitter\\",naturalHeight:378,naturalWidth:757}),`\\n`,(0,e.jsxs)(t.ol,{start:\\"7\\",children:[`\\n`,(0,e.jsxs)(t.li,{children:[\\"Then, go to the \\",(0,e.jsx)(t.strong,{children:\\"Permissions\\"}),\\" tab. In this tab, change access permissions to \\",(0,e.jsx)(t.strong,{children:\\"Read, write, and Direct Message\\"}),\\".\\"]}),`\\n`]}),`\\n`,(0,e.jsx)(i,{caption:{title:\\"Figure 6.\\",description:\\"Access permissions changed to Read, write and Direct Messages\\"},src:\\"/assets/images/tutorials/how-to-deploy-your-chatbot-using-twitter/image6.webp\\",alt:\\"How to deploy your chatbot to Twitter\\",naturalHeight:273,naturalWidth:750}),`\\n`,(0,e.jsxs)(t.ol,{start:\\"8\\",children:[`\\n`,(0,e.jsxs)(t.li,{children:[\\"Go to the \\",(0,e.jsx)(t.strong,{children:\\"Dev environments\\"}),\\"(\\",(0,e.jsxs)(\\"a\\",{href:\\"https://developer.twitter.com/en/account/environments\\",target:\\"_blank\\",children:[(0,e.jsx)(\\"span\\",{children:\\"http\\"}),\\"s://developer.twitter.com/en/account/environments\\"]}),\\"), then click the button \\",(0,e.jsx)(t.strong,{children:\\"Set up dev environment\\"}),\\" to begin.\\"]}),`\\n`]}),`\\n`,(0,e.jsx)(i,{caption:{title:\\"Figure 7.\\",description:\\"Set up dev environment\\"},src:\\"/assets/images/tutorials/how-to-deploy-your-chatbot-using-twitter/image7.webp\\",alt:\\"How to deploy your chatbot to Twitter\\",naturalHeight:429,naturalWidth:934}),`\\n`,(0,e.jsx)(t.p,{children:\\"Next step is to paste the API key, API secret key, access token, and access token secret from Twitter to the Kata Platform.\\"}),`\\n`,(0,e.jsxs)(t.ol,{children:[`\\n`,(0,e.jsx)(t.li,{children:\\"Go back to the Key and Tokens tab, copy all fields.\\"}),`\\n`,(0,e.jsxs)(t.li,{children:[\\"After copied, go back to Kata Platform (\\",(0,e.jsxs)(\\"a\\",{href:\\"https://platform.kata.ai\\",target:\\"_blank\\",children:[(0,e.jsx)(\\"span\\",{children:\\"http\\"}),\\"s://platform.kata.ai\\"]}),\\")\\"]}),`\\n`,(0,e.jsx)(t.li,{children:\\"Paste the API key, API secret key, access token, and access token secret there. Here is the example:\\"}),`\\n`]}),`\\n`,(0,e.jsx)(i,{caption:{title:\\"Figure 8.\\",description:\\"Paste API key, API secret key, access token, and access token secret\\"},src:\\"/assets/images/tutorials/how-to-deploy-your-chatbot-using-twitter/image8.webp\\",alt:\\"How to deploy your chatbot to Twitter\\",naturalHeight:1287,naturalWidth:1600}),`\\n`,(0,e.jsxs)(t.ol,{start:\\"4\\",children:[`\\n`,(0,e.jsxs)(t.li,{children:[\\"Click \\",(0,e.jsx)(t.strong,{children:\\"Create\\"}),\\" to generate the webhook. You can see a webhook URL from the generated channel.\\"]}),`\\n`,(0,e.jsxs)(t.li,{children:[\\"Click the \\",(0,e.jsx)(t.strong,{children:\\"copy\\"}),\\" icon to copy the webhook URL.\\"]}),`\\n`]}),`\\n`,(0,e.jsx)(i,{caption:{title:\\"Figure 9.\\",description:\\"Copy webhook URL\\"},src:\\"/assets/images/tutorials/how-to-deploy-your-chatbot-using-twitter/image9.webp\\",alt:\\"How to deploy your chatbot to Twitter\\",naturalHeight:282,naturalWidth:1600}),`\\n`,(0,e.jsxs)(t.h2,{id:\\"finalize-twitter-direct-message-set-up\\",children:[(0,e.jsx)(t.a,{className:\\"anchor\\",href:\\"#finalize-twitter-direct-message-set-up\\",children:(0,e.jsx)(t.span,{className:\\"icon icon-link\\"})}),\\"Finalize Twitter Direct Message Set Up\\"]}),`\\n`,(0,e.jsxs)(t.ol,{children:[`\\n`,(0,e.jsxs)(t.li,{children:[\\"Clone this repository: \\",(0,e.jsxs)(\\"a\\",{href:\\"https://github.com/twitterdev/account-activity-dashboard\\",target:\\"_blank\\",children:[(0,e.jsx)(\\"span\\",{children:\\"http\\"}),\\"s://github.com/twitterdev/account-activity-dashboard\\"]})]}),`\\n`,(0,e.jsxs)(t.li,{children:[\\"Install Node.js dependencies using \\",(0,e.jsx)(t.strong,{children:\\"npm install\\"}),\\" command.\\"]}),`\\n`,(0,e.jsxs)(t.li,{children:[\\"Create a new \\",(0,e.jsx)(t.strong,{children:\\"config.json\\"}),\\" file based on \\",(0,e.jsx)(t.strong,{children:\\"config.sample.json\\"}),\\" & \\",(0,e.jsx)(t.strong,{children:\\".env\\"}),\\" file based on \\",(0,e.jsx)(t.strong,{children:\\"env.template\\"}),\\" and fill in your Twitter keys, tokens and webhook environment name. Twitter keys and access tokens are found on your app page on Apps Dashboard (\\",(0,e.jsxs)(\\"a\\",{href:\\"https://developer.twitter.com/apps\\",target:\\"_blank\\",children:[(0,e.jsx)(\\"span\\",{children:\\"http\\"}),\\"s://developer.twitter.com/apps\\"]}),\\"). The basic auth properties can be anything you want, and are used for simple password protection to access the configuration UI. Environment name is found on the Dev Environment (\\",(0,e.jsxs)(\\"a\\",{href:\\"https://developer.twitter.com/en/account/environments\\",target:\\"_blank\\",children:[(0,e.jsx)(\\"span\\",{children:\\"http\\"}),\\"s://developer.twitter.com/en/account/environments\\"]}),\\") page. Make sure you have access to the Account Activity API.\\"]}),`\\n`,(0,e.jsx)(t.li,{children:\\"Revisit your developer.twitter.com Apps Settings page, and add the following URL values as whitelisted Callback URLs:\\"}),`\\n`]}),`\\n`,(0,e.jsx)(t.pre,{children:(0,e.jsxs)(t.code,{className:\\"code-highlight\\",children:[(0,e.jsx)(t.span,{className:\\"code-line\\",children:`http://your.app.domain/callbacks/addsub\\n`}),(0,e.jsx)(t.span,{className:\\"code-line\\",children:`http://your.app.domain/callbacks/removesub\\n`})]})}),`\\n`,(0,e.jsxs)(t.ol,{start:\\"5\\",children:[`\\n`,(0,e.jsxs)(t.li,{children:[\\"Run locally using \\",(0,e.jsx)(t.strong,{children:\\"npm start\\"}),\\" command\\"]}),`\\n`,(0,e.jsxs)(t.li,{children:[\\"Open \\",(0,e.jsxs)(\\"a\\",{href:\\"http://your.app.domain/webhook\\",target:\\"_blank\\",children:[(0,e.jsx)(\\"span\\",{children:\\"htt\\"}),\\"p://your.app.domain/webhook\\"]}),\\". If it succeeds, username and password are inserted with basic auth properties that you have defined before.\\"]}),`\\n`,(0,e.jsxs)(t.li,{children:[\\"Paste webhook from Kata Platform to Create or Update Webhook. Click \\",(0,e.jsx)(t.strong,{children:\\"Create/Update\\"}),\\" to continue.\\"]}),`\\n`]}),`\\n`,(0,e.jsx)(i,{caption:{title:\\"Figure 10.\\",description:\\"Paste webhook URL from Kata Platform\\"},src:\\"/assets/images/tutorials/how-to-deploy-your-chatbot-using-twitter/image10.webp\\",alt:\\"How to deploy your chatbot to Twitter\\",naturalHeight:324,naturalWidth:828}),`\\n`,(0,e.jsxs)(t.ol,{start:\\"8\\",children:[`\\n`,(0,e.jsxs)(t.li,{children:[\\"Next, open \\",(0,e.jsxs)(\\"a\\",{href:\\"http://your.app.domain/subscriptions\\",target:\\"_blank\\",children:[(0,e.jsx)(\\"span\\",{children:\\"htt\\"}),\\"p://your.app.domain/subscriptions\\"]}),\\".\\"]}),`\\n`,(0,e.jsxs)(t.li,{children:[\\"Then, click \\",(0,e.jsx)(t.strong,{children:\\"Add\\"}),\\" to add a user subscription. Login with the same account that you set to become the bot.\\"]}),`\\n`]}),`\\n`,(0,e.jsx)(i,{caption:{title:\\"Figure 11.\\",description:\\"Manage subscription page\\"},src:\\"/assets/images/tutorials/how-to-deploy-your-chatbot-using-twitter/image11.webp\\",alt:\\"How to deploy your chatbot to Twitter\\",naturalHeight:346,naturalWidth:1091}),`\\n`,(0,e.jsxs)(t.ol,{start:\\"10\\",children:[`\\n`,(0,e.jsx)(t.li,{children:\\"Finally, create a direct message to the bot account.\\"}),`\\n`]}),`\\n`,(0,e.jsx)(i,{caption:{title:\\"Figure 12.\\",description:\\"Chatbot successfully deployed\\"},src:\\"/assets/images/tutorials/how-to-deploy-your-chatbot-using-twitter/image12.webp\\",alt:\\"How to deploy your chatbot to Twitter\\",naturalHeight:509,naturalWidth:725}),`\\n`,(0,e.jsxs)(t.p,{children:[\\"This is the end of the guidance, you can contact \\",(0,e.jsx)(t.a,{href:\\"mailto:support@kata.ai\\",children:\\"support@kata.ai\\"}),\\" if you have any difficulties when implementing this.\\"]})]})}}var _=R;function l(n,o){throw new Error(\\"Expected \\"+(o?\\"component\\":\\"object\\")+\\" `\\"+n+\\"` to be defined: you likely forgot to import, pass, or provide it.\\")}return I(x);})();\\n;return Component;"},"_id":"tutorials/how-to-deploy-your-chatbot-using-twitter.mdx","_raw":{"sourceFilePath":"tutorials/how-to-deploy-your-chatbot-using-twitter.mdx","sourceFileName":"how-to-deploy-your-chatbot-using-twitter.mdx","sourceFileDir":"tutorials","contentType":"mdx","flattenedPath":"tutorials/how-to-deploy-your-chatbot-using-twitter"},"type":"Tutorials","slug":["how-to-deploy-your-chatbot-using-twitter"],"excerpt":"\\nTwitter is a trending social media for most countries, so Twitter chatbots will be a great opportunity to join the trend ✨ In this tutorial, you will learn how to deploy the bot to the Twitter direct message channel. So, let’s get started"}');
;// CONCATENATED MODULE: ./.contentlayer/generated/Tutorials/tutorials__how-to-use-facebook-messenger-for-your-chatbot.mdx.json
const tutorials_how_to_use_facebook_messenger_for_your_chatbot_mdx_namespaceObject = JSON.parse('{"layout":"tutorial","id":"how-to-use-facebook-messenger-for-your-chatbot","imgSpot":"/assets/images/tutorials/spot-facebook-messenger.webp","product":"kata-platform","title":"How to use Facebook Messenger for your chatbot","date":"2021-08-26T07:00:00+07:00","body":{"raw":"\\nFacebook Messenger (commonly known as Messenger) is a messaging app and platform developed by Facebook. In this section, we will learn to connect our bot with Messenger. Then, you can use this [simple bot tutorial](/kata-platform/documentation-content/start-your-first-chatbot) to integrate your bot with Messenger.\\n\\n## Deploy your chatbot\\n\\n1. Click the **Deploy** menu in the left sidebar.\\n2. On the Deploy page, click on the **New Deployment** button in the top right corner. It will open up the Create Deployment menu.\\n3. Choose any deployment version you want to deploy and fill in the changelog.\\n\\n<FigureImage\\n  caption={{ title: \'Figure 1.\', description: `Create a new deployment` }}\\n  src=\\"/assets/images/tutorials/how-to-use-facebook-messenger-for-your-chatbot/image1.webp\\"\\n  alt=\\"How to use Facebook Messenger for your chatbot\\"\\n  naturalHeight={1600}\\n  naturalWidth={1133}\\n/>\\n\\n4. Click **Submit** to finish the deployment.\\n\\nIf you already have an environment created, skip these steps.\\n\\n1.  Go to the **Deployments > Environment** menu.\\n\\n<FigureImage\\n  caption={{ title: \'Figure 2.\', description: `Set up the environment, then set up the WhatsApp channel.` }}\\n  src=\\"/assets/images/tutorials/how-to-use-facebook-messenger-for-your-chatbot/image2.webp\\"\\n  alt=\\"How to use Facebook Messenger for your chatbot\\"\\n  naturalHeight={505}\\n  naturalWidth={1600}\\n/>\\n\\n2.  Click the **Create Environment** button in any environment. You will see a drawer to create a new environment.\\n3.  Choose the **development version** you want (in this tutorial, we use the 1.0.0 version)\\n4.  Fill in the **environment URL**. This environment URL is used for CMS.[ Learn more about CMS](https://docs.kata.ai/cms-studio/about/\').\\n5.  Click **Create** to create the environment.\\n6.  Created environment now has a **Create Channel** button.\\n\\nContinue to choose FB Messenger as a chatbot channel.\\n\\n1. Click the **Create Channel **button to start adding channels to the environment. It will open up the Channel menu within the environment.\\n2. Click the ”**+ Create Channel**” button in the channel table list. It will show a menu to set up the channel.\\n3. Choose **FB Messenger** in Channel Type.\\n\\n<FigureImage\\n  caption={{ title: \'Figure 3.\', description: `Create FB Messenger channel` }}\\n  src=\\"/assets/images/tutorials/how-to-use-facebook-messenger-for-your-chatbot/image3.webp\\"\\n  alt=\\"How to use Facebook Messenger for your chatbot\\"\\n  naturalHeight={1048}\\n  naturalWidth={1516}\\n/>\\n\\n<Table>\\n  <TableHead>\\n    <TableHeadRow>\\n      <TableHeadCell>Field Name</TableHeadCell>\\n      <TableHeadCell>Functionality</TableHeadCell>\\n      <TableHeadCell>Limitation</TableHeadCell>\\n    </TableHeadRow>\\n  </TableHead>\\n  <TableBody>\\n    <TableBodyRow>\\n      <TableBodyCell>Name</TableBodyCell>\\n      <TableBodyCell>Your channel name</TableBodyCell>\\n      <TableBodyCell>\\n        Max. 30 characters must contain only alphanumeric characters (A-Z, a-z, 0-9), `-`, and `_`.\\n      </TableBodyCell>\\n    </TableBodyRow>\\n    <TableBodyRow>\\n      <TableBodyCell>Page Access Token</TableBodyCell>\\n      <TableBodyCell>\\n        These are required fields from Facebook to ensure security with third-party applications. In addition, you can\\n        find the Page Access Token and App Secret in Facebook Developer.\\n      </TableBodyCell>\\n      <TableBodyCell>-</TableBodyCell>\\n    </TableBodyRow>\\n    <TableBodyRow>\\n      <TableBodyCell>App Secret</TableBodyCell>\\n      <TableBodyCell>-</TableBodyCell>\\n      <TableBodyCell>-</TableBodyCell>\\n    </TableBodyRow>\\n  </TableBody>\\n</Table>\\n\\n## How to get Page Access Token\\n\\n1.  First, you have to sign in (register first, if you don’t have a Facebook account) to [https://developers.facebook.com/](https://developers.facebook.com/)\\n2.  Then, create a new app for your bot.\\n\\n<FigureImage\\n  caption={{ title: \'Figure 4.\', description: `Create a new app for your bot.` }}\\n  src=\\"/assets/images/tutorials/how-to-use-facebook-messenger-for-your-chatbot/image4.webp\\"\\n  alt=\\"How to use Facebook Messenger for your chatbot\\"\\n  naturalHeight={728}\\n  naturalWidth={1364}\\n/>\\n\\n3.  Go to **Messenger > Settings**. You will see the Access Tokens field.\\n\\n<FigureImage\\n  caption={{ title: \'Figure 5.\', description: `Access Tokens section inside Messenger > Settings menu.` }}\\n  src=\\"/assets/images/tutorials/how-to-use-facebook-messenger-for-your-chatbot/image5.webp\\"\\n  alt=\\"How to use Facebook Messenger for your chatbot\\"\\n  naturalHeight={670}\\n  naturalWidth={1364}\\n/>\\n\\n4.  To get the access token, you need to add a Facebook Page. First, click **Create New Page** to create a new page. Then, continue to create a page by following the instructions.\\n5.  Click **Generate Token** to generate your access token, then copy it to your channel in the Platform.\\n\\n<FigureImage\\n  caption={{ title: \'Figure 6.\', description: `Generate Token button` }}\\n  src=\\"/assets/images/tutorials/how-to-use-facebook-messenger-for-your-chatbot/image6.webp\\"\\n  alt=\\"How to use Facebook Messenger for your chatbot\\"\\n  naturalHeight={698}\\n  naturalWidth={1364}\\n/>\\n\\nThe next step is to paste the access token from Facebook to the Kata Platform.\\n\\n1.  Go back to Kata Platform ([https://platform.kata.ai](https://platform.kata.ai))\\n2.  Paste the Page Access Token there. Here is the example:\\n\\n<FigureImage\\n  caption={{ title: \'Figure 7.\', description: `Paste access token to the Page Access Token field.` }}\\n  src=\\"/assets/images/tutorials/how-to-use-facebook-messenger-for-your-chatbot/image7.webp\\"\\n  alt=\\"How to use Facebook Messenger for your chatbot\\"\\n  naturalHeight={1078}\\n  naturalWidth={1598}\\n/>\\n\\nLet’s continue to get App Secret.\\n\\n## How to get App Secret\\n\\n1. Go to **“Settings” → “Basic”** to find the App Secret.\\n2. Click **“Show,”** then copy the App Secret.\\n\\n<FigureImage\\n  caption={{ title: \'Figure 8.\', description: `Showing App Secret.` }}\\n  src=\\"/assets/images/tutorials/how-to-use-facebook-messenger-for-your-chatbot/image8.webp\\"\\n  alt=\\"How to use Facebook Messenger for your chatbot\\"\\n  naturalHeight={702}\\n  naturalWidth={1364}\\n/>\\n\\nThe next step is to paste the access token from Facebook to the Kata Platform.\\n\\n1.  Go back to Kata Platform ([https://platform.kata.ai](https://platform.kata.ai))\\n2.  Paste the App Secret there. Here is the example:\\n\\n<FigureImage\\n  caption={{ title: \'Figure 9.\', description: `Paste App Secret from Facebook here.` }}\\n  src=\\"/assets/images/tutorials/how-to-use-facebook-messenger-for-your-chatbot/image9.webp\\"\\n  alt=\\"How to use Facebook Messenger for your chatbot\\"\\n  naturalHeight={1055}\\n  naturalWidth={1600}\\n/>\\n\\n3.  Click **Create** to generate the webhook. You can see a webhook URL from the generated channel.\\n4.  Click the copy icon to copy the webhook URL.\\n\\n<FigureImage\\n  caption={{ title: \'Figure 10.\', description: `Copy webhook URL.` }}\\n  src=\\"/assets/images/tutorials/how-to-use-facebook-messenger-for-your-chatbot/image10.webp\\"\\n  alt=\\"How to use Facebook Messenger for your chatbot\\"\\n  naturalHeight={325}\\n  naturalWidth={1600}\\n/>\\n\\n## Finalize Set up in Facebook\\n\\n### Paste webhook URL to Facebook\\n\\n1. Go to the Webhooks field in the **“Messenger” → “Settings.”**\\n2. Fill the **“Callback URL”** with a webhook URL from a channel you’ve made in the Kata Platform.\\n\\n### Paste Challenge Token to Facebook\\n\\n1. To get Challenge Token from your channel, you need to click on the top of the column to trigger the **View Channel** drawer.\\n\\n<FigureImage\\n  caption={{ title: \'Figure 11.\', description: ` Challenge Token located in View Channel drawer.` }}\\n  src=\\"/assets/images/tutorials/how-to-use-facebook-messenger-for-your-chatbot/image11.webp\\"\\n  alt=\\"How to use Facebook Messenger for your chatbot\\"\\n  naturalHeight={1422}\\n  naturalWidth={1388}\\n/>\\n\\n2. Block content inside the Challenge Token field, then copy it.\\n3. Go back to the [https://developers.facebook.com/](https://developers.facebook.com/)\\n\\n4. Next, paste the challenge token in **“Verify Token”** from the Kata Platform.\\n\\n<FigureImage\\n  caption={{ title: \'Figure 12.\', description: `Fill in challenge token in Verify Token field.` }}\\n  src=\\"/assets/images/tutorials/how-to-use-facebook-messenger-for-your-chatbot/image12.webp\\"\\n  alt=\\"How to use Facebook Messenger for your chatbot\\"\\n  naturalHeight={698}\\n  naturalWidth={1365}\\n/>\\n\\n5. Finally, click **“Add Subscription”** and check the **“messages”** and **“messaging_postbacks”** checklist.\\n\\n<FigureImage\\n  caption={{ title: \'Figure 13.\', description: `Fill in the checklist in messages and messaging_postbacks.` }}\\n  src=\\"/assets/images/tutorials/how-to-use-facebook-messenger-for-your-chatbot/image13.webp\\"\\n  alt=\\"How to use Facebook Messenger for your chatbot\\"\\n  naturalHeight={698}\\n  naturalWidth={1364}\\n/>\\n\\nIt is the end of the guidance. You can contact [support@kata.ai](mailto:support@kata.ai) if you have any difficulties when implementing this.\\n","code":"var Component=(()=>{var w=Object.create;var h=Object.defineProperty;var y=Object.getOwnPropertyDescriptor;var F=Object.getOwnPropertyNames;var C=Object.getPrototypeOf,T=Object.prototype.hasOwnProperty;var b=o=>h(o,\\"__esModule\\",{value:!0});var H=(o,n)=>()=>(n||o((n={exports:{}}).exports,n),n.exports),M=(o,n)=>{for(var r in n)h(o,r,{get:n[r],enumerable:!0})},m=(o,n,r,t)=>{if(n&&typeof n==\\"object\\"||typeof n==\\"function\\")for(let a of F(n))!T.call(o,a)&&(r||a!==\\"default\\")&&h(o,a,{get:()=>n[a],enumerable:!(t=y(n,a))||t.enumerable});return o},v=(o,n)=>m(b(h(o!=null?w(C(o)):{},\\"default\\",!n&&o&&o.__esModule?{get:()=>o.default,enumerable:!0}:{value:o,enumerable:!0})),o),S=(o=>(n,r)=>o&&o.get(n)||(r=m(b({}),n,1),o&&o.set(n,r),r))(typeof WeakMap!=\\"undefined\\"?new WeakMap:0);var k=H((R,f)=>{f.exports=_jsx_runtime});var N={};M(N,{default:()=>x,frontmatter:()=>P});var e=v(k()),P={layout:\\"tutorial\\",id:\\"how-to-use-facebook-messenger-for-your-chatbot\\",imgSpot:\\"/assets/images/tutorials/spot-facebook-messenger.webp\\",product:\\"kata-platform\\",title:\\"How to use Facebook Messenger for your chatbot\\",date:\\"2021-08-26T07:00:00+07:00\\"};function A(o={}){let{wrapper:n}=o.components||{};return n?(0,e.jsx)(n,Object.assign({},o,{children:(0,e.jsx)(r,{})})):r();function r(){let t=Object.assign({p:\\"p\\",a:\\"a\\",h2:\\"h2\\",span:\\"span\\",ol:\\"ol\\",li:\\"li\\",strong:\\"strong\\",code:\\"code\\",h3:\\"h3\\"},o.components),{FigureImage:a,Table:d,TableHead:u,TableHeadRow:p,TableHeadCell:c,TableBody:g,TableBodyRow:l,TableBodyCell:i}=t;return a||s(\\"FigureImage\\",!0),d||s(\\"Table\\",!0),g||s(\\"TableBody\\",!0),i||s(\\"TableBodyCell\\",!0),l||s(\\"TableBodyRow\\",!0),u||s(\\"TableHead\\",!0),c||s(\\"TableHeadCell\\",!0),p||s(\\"TableHeadRow\\",!0),(0,e.jsxs)(e.Fragment,{children:[(0,e.jsxs)(t.p,{children:[\\"Facebook Messenger (commonly known as Messenger) is a messaging app and platform developed by Facebook. In this section, we will learn to connect our bot with Messenger. Then, you can use this \\",(0,e.jsx)(t.a,{href:\\"/kata-platform/documentation-content/start-your-first-chatbot\\",children:\\"simple bot tutorial\\"}),\\" to integrate your bot with Messenger.\\"]}),`\\n`,(0,e.jsxs)(t.h2,{id:\\"deploy-your-chatbot\\",children:[(0,e.jsx)(t.a,{className:\\"anchor\\",href:\\"#deploy-your-chatbot\\",children:(0,e.jsx)(t.span,{className:\\"icon icon-link\\"})}),\\"Deploy your chatbot\\"]}),`\\n`,(0,e.jsxs)(t.ol,{children:[`\\n`,(0,e.jsxs)(t.li,{children:[\\"Click the \\",(0,e.jsx)(t.strong,{children:\\"Deploy\\"}),\\" menu in the left sidebar.\\"]}),`\\n`,(0,e.jsxs)(t.li,{children:[\\"On the Deploy page, click on the \\",(0,e.jsx)(t.strong,{children:\\"New Deployment\\"}),\\" button in the top right corner. It will open up the Create Deployment menu.\\"]}),`\\n`,(0,e.jsx)(t.li,{children:\\"Choose any deployment version you want to deploy and fill in the changelog.\\"}),`\\n`]}),`\\n`,(0,e.jsx)(a,{caption:{title:\\"Figure 1.\\",description:\\"Create a new deployment\\"},src:\\"/assets/images/tutorials/how-to-use-facebook-messenger-for-your-chatbot/image1.webp\\",alt:\\"How to use Facebook Messenger for your chatbot\\",naturalHeight:1600,naturalWidth:1133}),`\\n`,(0,e.jsxs)(t.ol,{start:\\"4\\",children:[`\\n`,(0,e.jsxs)(t.li,{children:[\\"Click \\",(0,e.jsx)(t.strong,{children:\\"Submit\\"}),\\" to finish the deployment.\\"]}),`\\n`]}),`\\n`,(0,e.jsx)(t.p,{children:\\"If you already have an environment created, skip these steps.\\"}),`\\n`,(0,e.jsxs)(t.ol,{children:[`\\n`,(0,e.jsxs)(t.li,{children:[\\"Go to the \\",(0,e.jsx)(t.strong,{children:\\"Deployments > Environment\\"}),\\" menu.\\"]}),`\\n`]}),`\\n`,(0,e.jsx)(a,{caption:{title:\\"Figure 2.\\",description:\\"Set up the environment, then set up the WhatsApp channel.\\"},src:\\"/assets/images/tutorials/how-to-use-facebook-messenger-for-your-chatbot/image2.webp\\",alt:\\"How to use Facebook Messenger for your chatbot\\",naturalHeight:505,naturalWidth:1600}),`\\n`,(0,e.jsxs)(t.ol,{start:\\"2\\",children:[`\\n`,(0,e.jsxs)(t.li,{children:[\\"Click the \\",(0,e.jsx)(t.strong,{children:\\"Create Environment\\"}),\\" button in any environment. You will see a drawer to create a new environment.\\"]}),`\\n`,(0,e.jsxs)(t.li,{children:[\\"Choose the \\",(0,e.jsx)(t.strong,{children:\\"development version\\"}),\\" you want (in this tutorial, we use the 1.0.0 version)\\"]}),`\\n`,(0,e.jsxs)(t.li,{children:[\\"Fill in the \\",(0,e.jsx)(t.strong,{children:\\"environment URL\\"}),\\". This environment URL is used for CMS.\\",(0,e.jsx)(t.a,{href:\\"https://docs.kata.ai/cms-studio/about/\'\\",children:\\" Learn more about CMS\\"}),\\".\\"]}),`\\n`,(0,e.jsxs)(t.li,{children:[\\"Click \\",(0,e.jsx)(t.strong,{children:\\"Create\\"}),\\" to create the environment.\\"]}),`\\n`,(0,e.jsxs)(t.li,{children:[\\"Created environment now has a \\",(0,e.jsx)(t.strong,{children:\\"Create Channel\\"}),\\" button.\\"]}),`\\n`]}),`\\n`,(0,e.jsx)(t.p,{children:\\"Continue to choose FB Messenger as a chatbot channel.\\"}),`\\n`,(0,e.jsxs)(t.ol,{children:[`\\n`,(0,e.jsx)(t.li,{children:\\"Click the **Create Channel **button to start adding channels to the environment. It will open up the Channel menu within the environment.\\"}),`\\n`,(0,e.jsxs)(t.li,{children:[\\"Click the \\\\u201D\\",(0,e.jsx)(t.strong,{children:\\"+ Create Channel\\"}),\\"\\\\u201D button in the channel table list. It will show a menu to set up the channel.\\"]}),`\\n`,(0,e.jsxs)(t.li,{children:[\\"Choose \\",(0,e.jsx)(t.strong,{children:\\"FB Messenger\\"}),\\" in Channel Type.\\"]}),`\\n`]}),`\\n`,(0,e.jsx)(a,{caption:{title:\\"Figure 3.\\",description:\\"Create FB Messenger channel\\"},src:\\"/assets/images/tutorials/how-to-use-facebook-messenger-for-your-chatbot/image3.webp\\",alt:\\"How to use Facebook Messenger for your chatbot\\",naturalHeight:1048,naturalWidth:1516}),`\\n`,(0,e.jsxs)(d,{children:[(0,e.jsx)(u,{children:(0,e.jsxs)(p,{children:[(0,e.jsx)(c,{children:\\"Field Name\\"}),`\\n`,(0,e.jsx)(c,{children:\\"Functionality\\"}),`\\n`,(0,e.jsx)(c,{children:\\"Limitation\\"})]})}),(0,e.jsxs)(g,{children:[(0,e.jsxs)(l,{children:[(0,e.jsx)(i,{children:\\"Name\\"}),`\\n`,(0,e.jsx)(i,{children:\\"Your channel name\\"}),(0,e.jsx)(i,{children:(0,e.jsxs)(t.p,{children:[\\"Max. 30 characters must contain only alphanumeric characters (A-Z, a-z, 0-9), \\",(0,e.jsx)(t.code,{children:\\"-\\"}),\\", and \\",(0,e.jsx)(t.code,{children:\\"_\\"}),\\".\\"]})})]}),(0,e.jsxs)(l,{children:[(0,e.jsx)(i,{children:\\"Page Access Token\\"}),(0,e.jsx)(i,{children:(0,e.jsx)(t.p,{children:`These are required fields from Facebook to ensure security with third-party applications. In addition, you can\\nfind the Page Access Token and App Secret in Facebook Developer.`})}),(0,e.jsx)(i,{children:\\"-\\"})]}),(0,e.jsxs)(l,{children:[(0,e.jsx)(i,{children:\\"App Secret\\"}),`\\n`,(0,e.jsx)(i,{children:\\"-\\"}),`\\n`,(0,e.jsx)(i,{children:\\"-\\"})]})]})]}),`\\n`,(0,e.jsxs)(t.h2,{id:\\"how-to-get-page-access-token\\",children:[(0,e.jsx)(t.a,{className:\\"anchor\\",href:\\"#how-to-get-page-access-token\\",children:(0,e.jsx)(t.span,{className:\\"icon icon-link\\"})}),\\"How to get Page Access Token\\"]}),`\\n`,(0,e.jsxs)(t.ol,{children:[`\\n`,(0,e.jsxs)(t.li,{children:[\\"First, you have to sign in (register first, if you don\\\\u2019t have a Facebook account) to \\",(0,e.jsx)(t.a,{href:\\"https://developers.facebook.com/\\",children:\\"https://developers.facebook.com/\\"})]}),`\\n`,(0,e.jsx)(t.li,{children:\\"Then, create a new app for your bot.\\"}),`\\n`]}),`\\n`,(0,e.jsx)(a,{caption:{title:\\"Figure 4.\\",description:\\"Create a new app for your bot.\\"},src:\\"/assets/images/tutorials/how-to-use-facebook-messenger-for-your-chatbot/image4.webp\\",alt:\\"How to use Facebook Messenger for your chatbot\\",naturalHeight:728,naturalWidth:1364}),`\\n`,(0,e.jsxs)(t.ol,{start:\\"3\\",children:[`\\n`,(0,e.jsxs)(t.li,{children:[\\"Go to \\",(0,e.jsx)(t.strong,{children:\\"Messenger > Settings\\"}),\\". You will see the Access Tokens field.\\"]}),`\\n`]}),`\\n`,(0,e.jsx)(a,{caption:{title:\\"Figure 5.\\",description:\\"Access Tokens section inside Messenger > Settings menu.\\"},src:\\"/assets/images/tutorials/how-to-use-facebook-messenger-for-your-chatbot/image5.webp\\",alt:\\"How to use Facebook Messenger for your chatbot\\",naturalHeight:670,naturalWidth:1364}),`\\n`,(0,e.jsxs)(t.ol,{start:\\"4\\",children:[`\\n`,(0,e.jsxs)(t.li,{children:[\\"To get the access token, you need to add a Facebook Page. First, click \\",(0,e.jsx)(t.strong,{children:\\"Create New Page\\"}),\\" to create a new page. Then, continue to create a page by following the instructions.\\"]}),`\\n`,(0,e.jsxs)(t.li,{children:[\\"Click \\",(0,e.jsx)(t.strong,{children:\\"Generate Token\\"}),\\" to generate your access token, then copy it to your channel in the Platform.\\"]}),`\\n`]}),`\\n`,(0,e.jsx)(a,{caption:{title:\\"Figure 6.\\",description:\\"Generate Token button\\"},src:\\"/assets/images/tutorials/how-to-use-facebook-messenger-for-your-chatbot/image6.webp\\",alt:\\"How to use Facebook Messenger for your chatbot\\",naturalHeight:698,naturalWidth:1364}),`\\n`,(0,e.jsx)(t.p,{children:\\"The next step is to paste the access token from Facebook to the Kata Platform.\\"}),`\\n`,(0,e.jsxs)(t.ol,{children:[`\\n`,(0,e.jsxs)(t.li,{children:[\\"Go back to Kata Platform (\\",(0,e.jsx)(t.a,{href:\\"https://platform.kata.ai\\",children:\\"https://platform.kata.ai\\"}),\\")\\"]}),`\\n`,(0,e.jsx)(t.li,{children:\\"Paste the Page Access Token there. Here is the example:\\"}),`\\n`]}),`\\n`,(0,e.jsx)(a,{caption:{title:\\"Figure 7.\\",description:\\"Paste access token to the Page Access Token field.\\"},src:\\"/assets/images/tutorials/how-to-use-facebook-messenger-for-your-chatbot/image7.webp\\",alt:\\"How to use Facebook Messenger for your chatbot\\",naturalHeight:1078,naturalWidth:1598}),`\\n`,(0,e.jsx)(t.p,{children:\\"Let\\\\u2019s continue to get App Secret.\\"}),`\\n`,(0,e.jsxs)(t.h2,{id:\\"how-to-get-app-secret\\",children:[(0,e.jsx)(t.a,{className:\\"anchor\\",href:\\"#how-to-get-app-secret\\",children:(0,e.jsx)(t.span,{className:\\"icon icon-link\\"})}),\\"How to get App Secret\\"]}),`\\n`,(0,e.jsxs)(t.ol,{children:[`\\n`,(0,e.jsxs)(t.li,{children:[\\"Go to \\",(0,e.jsx)(t.strong,{children:\\"\\\\u201CSettings\\\\u201D \\\\u2192 \\\\u201CBasic\\\\u201D\\"}),\\" to find the App Secret.\\"]}),`\\n`,(0,e.jsxs)(t.li,{children:[\\"Click \\",(0,e.jsx)(t.strong,{children:\\"\\\\u201CShow,\\\\u201D\\"}),\\" then copy the App Secret.\\"]}),`\\n`]}),`\\n`,(0,e.jsx)(a,{caption:{title:\\"Figure 8.\\",description:\\"Showing App Secret.\\"},src:\\"/assets/images/tutorials/how-to-use-facebook-messenger-for-your-chatbot/image8.webp\\",alt:\\"How to use Facebook Messenger for your chatbot\\",naturalHeight:702,naturalWidth:1364}),`\\n`,(0,e.jsx)(t.p,{children:\\"The next step is to paste the access token from Facebook to the Kata Platform.\\"}),`\\n`,(0,e.jsxs)(t.ol,{children:[`\\n`,(0,e.jsxs)(t.li,{children:[\\"Go back to Kata Platform (\\",(0,e.jsx)(t.a,{href:\\"https://platform.kata.ai\\",children:\\"https://platform.kata.ai\\"}),\\")\\"]}),`\\n`,(0,e.jsx)(t.li,{children:\\"Paste the App Secret there. Here is the example:\\"}),`\\n`]}),`\\n`,(0,e.jsx)(a,{caption:{title:\\"Figure 9.\\",description:\\"Paste App Secret from Facebook here.\\"},src:\\"/assets/images/tutorials/how-to-use-facebook-messenger-for-your-chatbot/image9.webp\\",alt:\\"How to use Facebook Messenger for your chatbot\\",naturalHeight:1055,naturalWidth:1600}),`\\n`,(0,e.jsxs)(t.ol,{start:\\"3\\",children:[`\\n`,(0,e.jsxs)(t.li,{children:[\\"Click \\",(0,e.jsx)(t.strong,{children:\\"Create\\"}),\\" to generate the webhook. You can see a webhook URL from the generated channel.\\"]}),`\\n`,(0,e.jsx)(t.li,{children:\\"Click the copy icon to copy the webhook URL.\\"}),`\\n`]}),`\\n`,(0,e.jsx)(a,{caption:{title:\\"Figure 10.\\",description:\\"Copy webhook URL.\\"},src:\\"/assets/images/tutorials/how-to-use-facebook-messenger-for-your-chatbot/image10.webp\\",alt:\\"How to use Facebook Messenger for your chatbot\\",naturalHeight:325,naturalWidth:1600}),`\\n`,(0,e.jsxs)(t.h2,{id:\\"finalize-set-up-in-facebook\\",children:[(0,e.jsx)(t.a,{className:\\"anchor\\",href:\\"#finalize-set-up-in-facebook\\",children:(0,e.jsx)(t.span,{className:\\"icon icon-link\\"})}),\\"Finalize Set up in Facebook\\"]}),`\\n`,(0,e.jsxs)(t.h3,{id:\\"paste-webhook-url-to-facebook\\",children:[(0,e.jsx)(t.a,{className:\\"anchor\\",href:\\"#paste-webhook-url-to-facebook\\",children:(0,e.jsx)(t.span,{className:\\"icon icon-link\\"})}),\\"Paste webhook URL to Facebook\\"]}),`\\n`,(0,e.jsxs)(t.ol,{children:[`\\n`,(0,e.jsxs)(t.li,{children:[\\"Go to the Webhooks field in the \\",(0,e.jsx)(t.strong,{children:\\"\\\\u201CMessenger\\\\u201D \\\\u2192 \\\\u201CSettings.\\\\u201D\\"})]}),`\\n`,(0,e.jsxs)(t.li,{children:[\\"Fill the \\",(0,e.jsx)(t.strong,{children:\\"\\\\u201CCallback URL\\\\u201D\\"}),\\" with a webhook URL from a channel you\\\\u2019ve made in the Kata Platform.\\"]}),`\\n`]}),`\\n`,(0,e.jsxs)(t.h3,{id:\\"paste-challenge-token-to-facebook\\",children:[(0,e.jsx)(t.a,{className:\\"anchor\\",href:\\"#paste-challenge-token-to-facebook\\",children:(0,e.jsx)(t.span,{className:\\"icon icon-link\\"})}),\\"Paste Challenge Token to Facebook\\"]}),`\\n`,(0,e.jsxs)(t.ol,{children:[`\\n`,(0,e.jsxs)(t.li,{children:[\\"To get Challenge Token from your channel, you need to click on the top of the column to trigger the \\",(0,e.jsx)(t.strong,{children:\\"View Channel\\"}),\\" drawer.\\"]}),`\\n`]}),`\\n`,(0,e.jsx)(a,{caption:{title:\\"Figure 11.\\",description:\\" Challenge Token located in View Channel drawer.\\"},src:\\"/assets/images/tutorials/how-to-use-facebook-messenger-for-your-chatbot/image11.webp\\",alt:\\"How to use Facebook Messenger for your chatbot\\",naturalHeight:1422,naturalWidth:1388}),`\\n`,(0,e.jsxs)(t.ol,{start:\\"2\\",children:[`\\n`,(0,e.jsxs)(t.li,{children:[`\\n`,(0,e.jsx)(t.p,{children:\\"Block content inside the Challenge Token field, then copy it.\\"}),`\\n`]}),`\\n`,(0,e.jsxs)(t.li,{children:[`\\n`,(0,e.jsxs)(t.p,{children:[\\"Go back to the \\",(0,e.jsx)(t.a,{href:\\"https://developers.facebook.com/\\",children:\\"https://developers.facebook.com/\\"})]}),`\\n`]}),`\\n`,(0,e.jsxs)(t.li,{children:[`\\n`,(0,e.jsxs)(t.p,{children:[\\"Next, paste the challenge token in \\",(0,e.jsx)(t.strong,{children:\\"\\\\u201CVerify Token\\\\u201D\\"}),\\" from the Kata Platform.\\"]}),`\\n`]}),`\\n`]}),`\\n`,(0,e.jsx)(a,{caption:{title:\\"Figure 12.\\",description:\\"Fill in challenge token in Verify Token field.\\"},src:\\"/assets/images/tutorials/how-to-use-facebook-messenger-for-your-chatbot/image12.webp\\",alt:\\"How to use Facebook Messenger for your chatbot\\",naturalHeight:698,naturalWidth:1365}),`\\n`,(0,e.jsxs)(t.ol,{start:\\"5\\",children:[`\\n`,(0,e.jsxs)(t.li,{children:[\\"Finally, click \\",(0,e.jsx)(t.strong,{children:\\"\\\\u201CAdd Subscription\\\\u201D\\"}),\\" and check the \\",(0,e.jsx)(t.strong,{children:\\"\\\\u201Cmessages\\\\u201D\\"}),\\" and \\",(0,e.jsx)(t.strong,{children:\\"\\\\u201Cmessaging_postbacks\\\\u201D\\"}),\\" checklist.\\"]}),`\\n`]}),`\\n`,(0,e.jsx)(a,{caption:{title:\\"Figure 13.\\",description:\\"Fill in the checklist in messages and messaging_postbacks.\\"},src:\\"/assets/images/tutorials/how-to-use-facebook-messenger-for-your-chatbot/image13.webp\\",alt:\\"How to use Facebook Messenger for your chatbot\\",naturalHeight:698,naturalWidth:1364}),`\\n`,(0,e.jsxs)(t.p,{children:[\\"It is the end of the guidance. You can contact \\",(0,e.jsx)(t.a,{href:\\"mailto:support@kata.ai\\",children:\\"support@kata.ai\\"}),\\" if you have any difficulties when implementing this.\\"]})]})}}var x=A;function s(o,n){throw new Error(\\"Expected \\"+(n?\\"component\\":\\"object\\")+\\" `\\"+o+\\"` to be defined: you likely forgot to import, pass, or provide it.\\")}return S(N);})();\\n;return Component;"},"_id":"tutorials/how-to-use-facebook-messenger-for-your-chatbot.mdx","_raw":{"sourceFilePath":"tutorials/how-to-use-facebook-messenger-for-your-chatbot.mdx","sourceFileName":"how-to-use-facebook-messenger-for-your-chatbot.mdx","sourceFileDir":"tutorials","contentType":"mdx","flattenedPath":"tutorials/how-to-use-facebook-messenger-for-your-chatbot"},"type":"Tutorials","slug":["how-to-use-facebook-messenger-for-your-chatbot"],"excerpt":"\\nFacebook Messenger (commonly known as Messenger) is a messaging app and platform developed by Facebook. In this section, we will learn to connect our bot with Messenger"}');
;// CONCATENATED MODULE: ./.contentlayer/generated/Tutorials/tutorials__how-to-use-freshchat-for-your-chatbot.mdx.json
const tutorials_how_to_use_freshchat_for_your_chatbot_mdx_namespaceObject = JSON.parse('{"layout":"tutorial","id":"how-to-use-freshchat-for-your-chatbot","imgSpot":"/assets/images/tutorials/spot-freshchat.webp","product":"kata-platform","title":"How to use Freshchat for your chatbot","date":"2021-08-26T07:00:00+07:00","body":{"raw":"\\nFreshchat’s live chat software is the fastest way for you to engage with your website visitors, provide assistance, and convert leads to happy customers. In this section, we will learn to connect our bot with Freshchat. Let’s get started.\\n\\n## Deploy your chatbot\\n\\n1. Click **Deploy** menu in the left sidebar\\n2. On the Deploy page, click on the **New Deployment** button in the top right corner. It will open up the Create Deployment menu.\\n3. Choose any deployment version you want to deploy and fill in the changelog.\\n\\n<FigureImage\\n  caption={{ title: \'Figure 1\', description: `Create a new deployment` }}\\n  src=\\"/assets/images/tutorials/how-to-use-freshchat-for-your-chatbot/image1.webp\\"\\n  alt=\\"How to use Freshchat for your chatbot\\"\\n  naturalHeight={1600}\\n  naturalWidth={1133}\\n/>\\n\\n4. Click **Submit** to finish the deployment\\n\\nIf you already have an environment created, skip these steps.\\n\\n1. Go to the **Deployments > Environment** menu.\\n\\n<FigureImage\\n  caption={{ title: \'Figure 2\', description: `Set up environment, then set up Freshchat channel` }}\\n  src=\\"/assets/images/tutorials/how-to-use-freshchat-for-your-chatbot/image2.webp\\"\\n  alt=\\"How to use Freshchat for your chatbot\\"\\n  naturalHeight={505}\\n  naturalWidth={1600}\\n/>\\n\\n2. Click the **Create Environment** button in any environment. You will see a drawer to create a new environment.\\n3. Choose the **development version** you want (in this tutorial, we use the 1.0.0 version)\\n4. Fill in the **environment URL**. This environment URL is used for CMS. Learn more about CMS.\\n5. Click **Create** to create the environment.\\n6. Created environment now has a **Create Channel** button.\\n\\nContinue to choose Freshchat as a chatbot channel.\\n\\n1. Click the **Create Channel** button to start adding channels to the environment. It will open up the Channel menu within the environment.\\n2. Click the ”**+ Create Channel**” button in the channel table list. A menu to set up the channel will be shown.\\n3. Choose **Freshchat** in Channel Type.\\n\\n<FigureImage\\n  caption={{ title: \'Figure 3\', description: `Create Freshchat channel` }}\\n  src=\\"/assets/images/tutorials/how-to-use-freshchat-for-your-chatbot/image3.webp\\"\\n  alt=\\"How to use Freshchat for your chatbot\\"\\n  naturalHeight={1084}\\n  naturalWidth={1600}\\n/>\\n\\n<Table>\\n  <TableHead>\\n    <TableHeadRow>\\n      <TableHeadCell>Field Name</TableHeadCell>\\n      <TableHeadCell>Functionality</TableHeadCell>\\n      <TableHeadCell>Limitation</TableHeadCell>\\n    </TableHeadRow>\\n  </TableHead>\\n  <TableBody>\\n    <TableBodyRow>\\n      <TableBodyCell>Name</TableBodyCell>\\n      <TableBodyCell>Your channel name</TableBodyCell>\\n      <TableBodyCell>\\n        Max. 30 characters must contain only alphanumeric characters (A-Z, a-z, 0-9), `-`, and `_`.\\n      </TableBodyCell>\\n    </TableBodyRow>\\n    <TableBodyRow>\\n      <TableBodyCell>API Token</TableBodyCell>\\n      <TableBodyCell>Token credential from Freshchat</TableBodyCell>\\n      <TableBodyCell>-</TableBodyCell>\\n    </TableBodyRow>\\n    <TableBodyRow>\\n      <TableBodyCell>Actor ID</TableBodyCell>\\n      <TableBodyCell>Actor ID that collected from Freshchat </TableBodyCell>\\n      <TableBodyCell>-</TableBodyCell>\\n    </TableBodyRow>\\n  </TableBody>\\n</Table>\\n\\n## How to generate API Token\\n\\n1. First of all, you need to sign in to your **Freshworks** account to do the integration.\\n2. After you’re logged in, go to the **Settings** page to configure the API Token and Webhook.\\n\\n<FigureImage\\n  caption={{ title: \'Figure 4\', description: `Settings page in Freshwork.` }}\\n  src=\\"/assets/images/tutorials/how-to-use-freshchat-for-your-chatbot/image4.webp\\"\\n  alt=\\"How to use Freshchat for your chatbot\\"\\n  naturalHeight={900}\\n  naturalWidth={1600}\\n/>\\n\\n3. In order to generate the API Token in Freshchat, go to **Settings → API** Tokens.\\n4. Then, click on the **Generate Token** button.\\n\\n<FigureImage\\n  caption={{ title: \'Figure 5\', description: `Generate a token in Freshchat.` }}\\n  src=\\"/assets/images/tutorials/how-to-use-freshchat-for-your-chatbot/image5.webp\\"\\n  alt=\\"How to use Freshchat for your chatbot\\"\\n  naturalHeight={900}\\n  naturalWidth={1600}\\n/>\\n\\nNext step is to paste the API token from Freshchat to the Kata Platform.\\n\\n1. Go back to Kata Platform (<a href=\\"https://platform.kata.ai\\" target=\\"_blank\\"><span>http</span>s://platform.kata.ai</a>)\\n2. Paste the API Token there. Here is the example:\\n\\n<FigureImage\\n  caption={{ title: \'Figure 6\', description: `Paste the API token to the API token field.` }}\\n  src=\\"/assets/images/tutorials/how-to-use-freshchat-for-your-chatbot/image6.webp\\"\\n  alt=\\"How to use Freshchat for your chatbot\\"\\n  naturalHeight={1034}\\n  naturalWidth={1600}\\n/>\\n\\nLet’s continue to get an Actor ID.\\n\\n## How to generate Actor ID\\n\\n1. Go to **Settings → Team** Members.\\n2. Then, click on the **Add a team member** button. In the “Roles” field, choose “Agent”.\\n\\n<FigureImage\\n  caption={{ title: \'Figure 7\', description: `Add a team member page.` }}\\n  src=\\"/assets/images/tutorials/how-to-use-freshchat-for-your-chatbot/image7.webp\\"\\n  alt=\\"How to use Freshchat for your chatbot\\"\\n  naturalHeight={900}\\n  naturalWidth={1600}\\n/>\\n\\n3. With the API Token we got from the previous step, get the Actor ID using <a href=\\"https://www.postman.com/\\" target=\\"_blank\\">Postman</a> or cURL. Actor ID is the agent `id`.\\n\\n```\\ncurl --request GET \'https://api.freshchat.com/v2/agents\' \\\\\\n--header \'Authorization: Bearer <token>\'\\n```\\n\\n<FigureImage\\n  caption={{ title: \'Figure 8\', description: `Showing results from API.` }}\\n  src=\\"/assets/images/tutorials/how-to-use-freshchat-for-your-chatbot/image8.webp\\"\\n  alt=\\"How to use Freshchat for your chatbot\\"\\n  naturalHeight={900}\\n  naturalWidth={1600}\\n/>\\n\\n4. Copy one of the Agent IDs, then paste it to the Kata Platform.\\n\\nNext step is to paste the API token from Freshchat to the Kata Platform.\\n\\n1. Go back to Kata Platform (<a href=\\"https://platform.kata.ai\\" target=\\"_blank\\"><span>http</span>s://platform.kata.ai</a>)\\n2. Paste the Actor ID there. Here is the example:\\n\\n<FigureImage\\n  caption={{ title: \'Figure 9\', description: `Paste Actor ID into channel configuration.` }}\\n  src=\\"/assets/images/tutorials/how-to-use-freshchat-for-your-chatbot/image9.webp\\"\\n  alt=\\"How to use Freshchat for your chatbot\\"\\n  naturalHeight={1154}\\n  naturalWidth={1472}\\n/>\\n\\n3. Click **Create** to generate the webhook. You can see a webhook URL from the generated channel.\\n4. Click the copy icon to copy the webhook URL.\\n\\n<FigureImage\\n  caption={{ title: \'Figure 10\', description: `Copy webhook URL.` }}\\n  src=\\"/assets/images/tutorials/how-to-use-freshchat-for-your-chatbot/image10.webp\\"\\n  alt=\\"How to use Freshchat for your chatbot\\"\\n  naturalHeight={509}\\n  naturalWidth={1600}\\n/>\\n\\n## Finalize Freshchat set up\\n\\n1. Go back to Freshchat, then go to **Settings → Webhooks**.\\n2. Turn on the webhook toggle which is placed in the top right.\\n3. Then, paste the webhook URL in the **Webhook** field.\\n4. Next, fill in a valid email address in the **Failure Notifications** field. It will enable you to receive the notification whenever there is a failure in the integration. Here is the example:\\n\\n<FigureImage\\n  caption={{ title: \'Figure 11\', description: `Set up webhook URL` }}\\n  src=\\"/assets/images/tutorials/how-to-use-freshchat-for-your-chatbot/image11.webp\\"\\n  alt=\\"How to use Freshchat for your chatbot\\"\\n  naturalHeight={900}\\n  naturalWidth={1600}\\n/>\\n\\n5. Finally, click on the **Save** button.\\n\\nIt works! You can now share your newly created chatbot with your friends.\\n\\nFreshchat also has an agent handover feature. It is useful for creating a seamless engagement experience for your customer to interact with your agent to meet their needs. The agent handover flow is:\\n\\n1. End-users start a conversation with a chatbot.\\n2. In the beginning or middle of a conversation, the end-user may request to be connected with any human-agents.\\n3. Chatbot function will be paused if there’s an available agent. If there are none, chatbot will notify the user to make another request after a few minutes.\\n\\nThis is the end of the guidance, you can contact support@kata.ai if you have any difficulties when implementing this.\\n","code":"var Component=(()=>{var y=Object.create;var s=Object.defineProperty;var k=Object.getOwnPropertyDescriptor;var F=Object.getOwnPropertyNames;var C=Object.getPrototypeOf,v=Object.prototype.hasOwnProperty;var m=n=>s(n,\\"__esModule\\",{value:!0});var H=(n,o)=>()=>(o||n((o={exports:{}}).exports,o),o.exports),I=(n,o)=>{for(var a in o)s(n,a,{get:o[a],enumerable:!0})},f=(n,o,a,t)=>{if(o&&typeof o==\\"object\\"||typeof o==\\"function\\")for(let r of F(o))!v.call(n,r)&&(a||r!==\\"default\\")&&s(n,r,{get:()=>o[r],enumerable:!(t=k(o,r))||t.enumerable});return n},T=(n,o)=>f(m(s(n!=null?y(C(n)):{},\\"default\\",!o&&n&&n.__esModule?{get:()=>n.default,enumerable:!0}:{value:n,enumerable:!0})),n),A=(n=>(o,a)=>n&&n.get(o)||(a=f(m({}),o,1),n&&n.set(o,a),a))(typeof WeakMap!=\\"undefined\\"?new WeakMap:0);var w=H((R,b)=>{b.exports=_jsx_runtime});var D={};I(D,{default:()=>N,frontmatter:()=>P});var e=T(w()),P={layout:\\"tutorial\\",title:\\"How to use Freshchat for your chatbot\\",id:\\"how-to-use-freshchat-for-your-chatbot\\",imgSpot:\\"/assets/images/tutorials/spot-freshchat.webp\\",product:\\"kata-platform\\",date:\\"2021-08-26T07:00:00+07:00\\"};function x(n={}){let{wrapper:o}=n.components||{};return o?(0,e.jsx)(o,Object.assign({},n,{children:(0,e.jsx)(a,{})})):a();function a(){let t=Object.assign({p:\\"p\\",h2:\\"h2\\",a:\\"a\\",span:\\"span\\",ol:\\"ol\\",li:\\"li\\",strong:\\"strong\\",code:\\"code\\",pre:\\"pre\\"},n.components),{FigureImage:r,Table:d,TableHead:u,TableHeadRow:p,TableHeadCell:l,TableBody:g,TableBodyRow:c,TableBodyCell:i}=t;return r||h(\\"FigureImage\\",!0),d||h(\\"Table\\",!0),g||h(\\"TableBody\\",!0),i||h(\\"TableBodyCell\\",!0),c||h(\\"TableBodyRow\\",!0),u||h(\\"TableHead\\",!0),l||h(\\"TableHeadCell\\",!0),p||h(\\"TableHeadRow\\",!0),(0,e.jsxs)(e.Fragment,{children:[(0,e.jsx)(t.p,{children:\\"Freshchat\\\\u2019s live chat software is the fastest way for you to engage with your website visitors, provide assistance, and convert leads to happy customers. In this section, we will learn to connect our bot with Freshchat. Let\\\\u2019s get started.\\"}),`\\n`,(0,e.jsxs)(t.h2,{id:\\"deploy-your-chatbot\\",children:[(0,e.jsx)(t.a,{className:\\"anchor\\",href:\\"#deploy-your-chatbot\\",children:(0,e.jsx)(t.span,{className:\\"icon icon-link\\"})}),\\"Deploy your chatbot\\"]}),`\\n`,(0,e.jsxs)(t.ol,{children:[`\\n`,(0,e.jsxs)(t.li,{children:[\\"Click \\",(0,e.jsx)(t.strong,{children:\\"Deploy\\"}),\\" menu in the left sidebar\\"]}),`\\n`,(0,e.jsxs)(t.li,{children:[\\"On the Deploy page, click on the \\",(0,e.jsx)(t.strong,{children:\\"New Deployment\\"}),\\" button in the top right corner. It will open up the Create Deployment menu.\\"]}),`\\n`,(0,e.jsx)(t.li,{children:\\"Choose any deployment version you want to deploy and fill in the changelog.\\"}),`\\n`]}),`\\n`,(0,e.jsx)(r,{caption:{title:\\"Figure 1\\",description:\\"Create a new deployment\\"},src:\\"/assets/images/tutorials/how-to-use-freshchat-for-your-chatbot/image1.webp\\",alt:\\"How to use Freshchat for your chatbot\\",naturalHeight:1600,naturalWidth:1133}),`\\n`,(0,e.jsxs)(t.ol,{start:\\"4\\",children:[`\\n`,(0,e.jsxs)(t.li,{children:[\\"Click \\",(0,e.jsx)(t.strong,{children:\\"Submit\\"}),\\" to finish the deployment\\"]}),`\\n`]}),`\\n`,(0,e.jsx)(t.p,{children:\\"If you already have an environment created, skip these steps.\\"}),`\\n`,(0,e.jsxs)(t.ol,{children:[`\\n`,(0,e.jsxs)(t.li,{children:[\\"Go to the \\",(0,e.jsx)(t.strong,{children:\\"Deployments > Environment\\"}),\\" menu.\\"]}),`\\n`]}),`\\n`,(0,e.jsx)(r,{caption:{title:\\"Figure 2\\",description:\\"Set up environment, then set up Freshchat channel\\"},src:\\"/assets/images/tutorials/how-to-use-freshchat-for-your-chatbot/image2.webp\\",alt:\\"How to use Freshchat for your chatbot\\",naturalHeight:505,naturalWidth:1600}),`\\n`,(0,e.jsxs)(t.ol,{start:\\"2\\",children:[`\\n`,(0,e.jsxs)(t.li,{children:[\\"Click the \\",(0,e.jsx)(t.strong,{children:\\"Create Environment\\"}),\\" button in any environment. You will see a drawer to create a new environment.\\"]}),`\\n`,(0,e.jsxs)(t.li,{children:[\\"Choose the \\",(0,e.jsx)(t.strong,{children:\\"development version\\"}),\\" you want (in this tutorial, we use the 1.0.0 version)\\"]}),`\\n`,(0,e.jsxs)(t.li,{children:[\\"Fill in the \\",(0,e.jsx)(t.strong,{children:\\"environment URL\\"}),\\". This environment URL is used for CMS. Learn more about CMS.\\"]}),`\\n`,(0,e.jsxs)(t.li,{children:[\\"Click \\",(0,e.jsx)(t.strong,{children:\\"Create\\"}),\\" to create the environment.\\"]}),`\\n`,(0,e.jsxs)(t.li,{children:[\\"Created environment now has a \\",(0,e.jsx)(t.strong,{children:\\"Create Channel\\"}),\\" button.\\"]}),`\\n`]}),`\\n`,(0,e.jsx)(t.p,{children:\\"Continue to choose Freshchat as a chatbot channel.\\"}),`\\n`,(0,e.jsxs)(t.ol,{children:[`\\n`,(0,e.jsxs)(t.li,{children:[\\"Click the \\",(0,e.jsx)(t.strong,{children:\\"Create Channel\\"}),\\" button to start adding channels to the environment. It will open up the Channel menu within the environment.\\"]}),`\\n`,(0,e.jsxs)(t.li,{children:[\\"Click the \\\\u201D\\",(0,e.jsx)(t.strong,{children:\\"+ Create Channel\\"}),\\"\\\\u201D button in the channel table list. A menu to set up the channel will be shown.\\"]}),`\\n`,(0,e.jsxs)(t.li,{children:[\\"Choose \\",(0,e.jsx)(t.strong,{children:\\"Freshchat\\"}),\\" in Channel Type.\\"]}),`\\n`]}),`\\n`,(0,e.jsx)(r,{caption:{title:\\"Figure 3\\",description:\\"Create Freshchat channel\\"},src:\\"/assets/images/tutorials/how-to-use-freshchat-for-your-chatbot/image3.webp\\",alt:\\"How to use Freshchat for your chatbot\\",naturalHeight:1084,naturalWidth:1600}),`\\n`,(0,e.jsxs)(d,{children:[(0,e.jsx)(u,{children:(0,e.jsxs)(p,{children:[(0,e.jsx)(l,{children:\\"Field Name\\"}),`\\n`,(0,e.jsx)(l,{children:\\"Functionality\\"}),`\\n`,(0,e.jsx)(l,{children:\\"Limitation\\"})]})}),(0,e.jsxs)(g,{children:[(0,e.jsxs)(c,{children:[(0,e.jsx)(i,{children:\\"Name\\"}),`\\n`,(0,e.jsx)(i,{children:\\"Your channel name\\"}),(0,e.jsx)(i,{children:(0,e.jsxs)(t.p,{children:[\\"Max. 30 characters must contain only alphanumeric characters (A-Z, a-z, 0-9), \\",(0,e.jsx)(t.code,{children:\\"-\\"}),\\", and \\",(0,e.jsx)(t.code,{children:\\"_\\"}),\\".\\"]})})]}),(0,e.jsxs)(c,{children:[(0,e.jsx)(i,{children:\\"API Token\\"}),`\\n`,(0,e.jsx)(i,{children:\\"Token credential from Freshchat\\"}),`\\n`,(0,e.jsx)(i,{children:\\"-\\"})]}),(0,e.jsxs)(c,{children:[(0,e.jsx)(i,{children:\\"Actor ID\\"}),`\\n`,(0,e.jsx)(i,{children:\\"Actor ID that collected from Freshchat \\"}),`\\n`,(0,e.jsx)(i,{children:\\"-\\"})]})]})]}),`\\n`,(0,e.jsxs)(t.h2,{id:\\"how-to-generate-api-token\\",children:[(0,e.jsx)(t.a,{className:\\"anchor\\",href:\\"#how-to-generate-api-token\\",children:(0,e.jsx)(t.span,{className:\\"icon icon-link\\"})}),\\"How to generate API Token\\"]}),`\\n`,(0,e.jsxs)(t.ol,{children:[`\\n`,(0,e.jsxs)(t.li,{children:[\\"First of all, you need to sign in to your \\",(0,e.jsx)(t.strong,{children:\\"Freshworks\\"}),\\" account to do the integration.\\"]}),`\\n`,(0,e.jsxs)(t.li,{children:[\\"After you\\\\u2019re logged in, go to the \\",(0,e.jsx)(t.strong,{children:\\"Settings\\"}),\\" page to configure the API Token and Webhook.\\"]}),`\\n`]}),`\\n`,(0,e.jsx)(r,{caption:{title:\\"Figure 4\\",description:\\"Settings page in Freshwork.\\"},src:\\"/assets/images/tutorials/how-to-use-freshchat-for-your-chatbot/image4.webp\\",alt:\\"How to use Freshchat for your chatbot\\",naturalHeight:900,naturalWidth:1600}),`\\n`,(0,e.jsxs)(t.ol,{start:\\"3\\",children:[`\\n`,(0,e.jsxs)(t.li,{children:[\\"In order to generate the API Token in Freshchat, go to \\",(0,e.jsx)(t.strong,{children:\\"Settings \\\\u2192 API\\"}),\\" Tokens.\\"]}),`\\n`,(0,e.jsxs)(t.li,{children:[\\"Then, click on the \\",(0,e.jsx)(t.strong,{children:\\"Generate Token\\"}),\\" button.\\"]}),`\\n`]}),`\\n`,(0,e.jsx)(r,{caption:{title:\\"Figure 5\\",description:\\"Generate a token in Freshchat.\\"},src:\\"/assets/images/tutorials/how-to-use-freshchat-for-your-chatbot/image5.webp\\",alt:\\"How to use Freshchat for your chatbot\\",naturalHeight:900,naturalWidth:1600}),`\\n`,(0,e.jsx)(t.p,{children:\\"Next step is to paste the API token from Freshchat to the Kata Platform.\\"}),`\\n`,(0,e.jsxs)(t.ol,{children:[`\\n`,(0,e.jsxs)(t.li,{children:[\\"Go back to Kata Platform (\\",(0,e.jsxs)(\\"a\\",{href:\\"https://platform.kata.ai\\",target:\\"_blank\\",children:[(0,e.jsx)(\\"span\\",{children:\\"http\\"}),\\"s://platform.kata.ai\\"]}),\\")\\"]}),`\\n`,(0,e.jsx)(t.li,{children:\\"Paste the API Token there. Here is the example:\\"}),`\\n`]}),`\\n`,(0,e.jsx)(r,{caption:{title:\\"Figure 6\\",description:\\"Paste the API token to the API token field.\\"},src:\\"/assets/images/tutorials/how-to-use-freshchat-for-your-chatbot/image6.webp\\",alt:\\"How to use Freshchat for your chatbot\\",naturalHeight:1034,naturalWidth:1600}),`\\n`,(0,e.jsx)(t.p,{children:\\"Let\\\\u2019s continue to get an Actor ID.\\"}),`\\n`,(0,e.jsxs)(t.h2,{id:\\"how-to-generate-actor-id\\",children:[(0,e.jsx)(t.a,{className:\\"anchor\\",href:\\"#how-to-generate-actor-id\\",children:(0,e.jsx)(t.span,{className:\\"icon icon-link\\"})}),\\"How to generate Actor ID\\"]}),`\\n`,(0,e.jsxs)(t.ol,{children:[`\\n`,(0,e.jsxs)(t.li,{children:[\\"Go to \\",(0,e.jsx)(t.strong,{children:\\"Settings \\\\u2192 Team\\"}),\\" Members.\\"]}),`\\n`,(0,e.jsxs)(t.li,{children:[\\"Then, click on the \\",(0,e.jsx)(t.strong,{children:\\"Add a team member\\"}),\\" button. In the \\\\u201CRoles\\\\u201D field, choose \\\\u201CAgent\\\\u201D.\\"]}),`\\n`]}),`\\n`,(0,e.jsx)(r,{caption:{title:\\"Figure 7\\",description:\\"Add a team member page.\\"},src:\\"/assets/images/tutorials/how-to-use-freshchat-for-your-chatbot/image7.webp\\",alt:\\"How to use Freshchat for your chatbot\\",naturalHeight:900,naturalWidth:1600}),`\\n`,(0,e.jsxs)(t.ol,{start:\\"3\\",children:[`\\n`,(0,e.jsxs)(t.li,{children:[\\"With the API Token we got from the previous step, get the Actor ID using \\",(0,e.jsx)(\\"a\\",{href:\\"https://www.postman.com/\\",target:\\"_blank\\",children:\\"Postman\\"}),\\" or cURL. Actor ID is the agent \\",(0,e.jsx)(t.code,{children:\\"id\\"}),\\".\\"]}),`\\n`]}),`\\n`,(0,e.jsx)(t.pre,{children:(0,e.jsxs)(t.code,{className:\\"code-highlight\\",children:[(0,e.jsx)(t.span,{className:\\"code-line\\",children:`curl --request GET \'https://api.freshchat.com/v2/agents\' \\\\\\\\\\n`}),(0,e.jsx)(t.span,{className:\\"code-line\\",children:`--header \'Authorization: Bearer <token>\'\\n`})]})}),`\\n`,(0,e.jsx)(r,{caption:{title:\\"Figure 8\\",description:\\"Showing results from API.\\"},src:\\"/assets/images/tutorials/how-to-use-freshchat-for-your-chatbot/image8.webp\\",alt:\\"How to use Freshchat for your chatbot\\",naturalHeight:900,naturalWidth:1600}),`\\n`,(0,e.jsxs)(t.ol,{start:\\"4\\",children:[`\\n`,(0,e.jsx)(t.li,{children:\\"Copy one of the Agent IDs, then paste it to the Kata Platform.\\"}),`\\n`]}),`\\n`,(0,e.jsx)(t.p,{children:\\"Next step is to paste the API token from Freshchat to the Kata Platform.\\"}),`\\n`,(0,e.jsxs)(t.ol,{children:[`\\n`,(0,e.jsxs)(t.li,{children:[\\"Go back to Kata Platform (\\",(0,e.jsxs)(\\"a\\",{href:\\"https://platform.kata.ai\\",target:\\"_blank\\",children:[(0,e.jsx)(\\"span\\",{children:\\"http\\"}),\\"s://platform.kata.ai\\"]}),\\")\\"]}),`\\n`,(0,e.jsx)(t.li,{children:\\"Paste the Actor ID there. Here is the example:\\"}),`\\n`]}),`\\n`,(0,e.jsx)(r,{caption:{title:\\"Figure 9\\",description:\\"Paste Actor ID into channel configuration.\\"},src:\\"/assets/images/tutorials/how-to-use-freshchat-for-your-chatbot/image9.webp\\",alt:\\"How to use Freshchat for your chatbot\\",naturalHeight:1154,naturalWidth:1472}),`\\n`,(0,e.jsxs)(t.ol,{start:\\"3\\",children:[`\\n`,(0,e.jsxs)(t.li,{children:[\\"Click \\",(0,e.jsx)(t.strong,{children:\\"Create\\"}),\\" to generate the webhook. You can see a webhook URL from the generated channel.\\"]}),`\\n`,(0,e.jsx)(t.li,{children:\\"Click the copy icon to copy the webhook URL.\\"}),`\\n`]}),`\\n`,(0,e.jsx)(r,{caption:{title:\\"Figure 10\\",description:\\"Copy webhook URL.\\"},src:\\"/assets/images/tutorials/how-to-use-freshchat-for-your-chatbot/image10.webp\\",alt:\\"How to use Freshchat for your chatbot\\",naturalHeight:509,naturalWidth:1600}),`\\n`,(0,e.jsxs)(t.h2,{id:\\"finalize-freshchat-set-up\\",children:[(0,e.jsx)(t.a,{className:\\"anchor\\",href:\\"#finalize-freshchat-set-up\\",children:(0,e.jsx)(t.span,{className:\\"icon icon-link\\"})}),\\"Finalize Freshchat set up\\"]}),`\\n`,(0,e.jsxs)(t.ol,{children:[`\\n`,(0,e.jsxs)(t.li,{children:[\\"Go back to Freshchat, then go to \\",(0,e.jsx)(t.strong,{children:\\"Settings \\\\u2192 Webhooks\\"}),\\".\\"]}),`\\n`,(0,e.jsx)(t.li,{children:\\"Turn on the webhook toggle which is placed in the top right.\\"}),`\\n`,(0,e.jsxs)(t.li,{children:[\\"Then, paste the webhook URL in the \\",(0,e.jsx)(t.strong,{children:\\"Webhook\\"}),\\" field.\\"]}),`\\n`,(0,e.jsxs)(t.li,{children:[\\"Next, fill in a valid email address in the \\",(0,e.jsx)(t.strong,{children:\\"Failure Notifications\\"}),\\" field. It will enable you to receive the notification whenever there is a failure in the integration. Here is the example:\\"]}),`\\n`]}),`\\n`,(0,e.jsx)(r,{caption:{title:\\"Figure 11\\",description:\\"Set up webhook URL\\"},src:\\"/assets/images/tutorials/how-to-use-freshchat-for-your-chatbot/image11.webp\\",alt:\\"How to use Freshchat for your chatbot\\",naturalHeight:900,naturalWidth:1600}),`\\n`,(0,e.jsxs)(t.ol,{start:\\"5\\",children:[`\\n`,(0,e.jsxs)(t.li,{children:[\\"Finally, click on the \\",(0,e.jsx)(t.strong,{children:\\"Save\\"}),\\" button.\\"]}),`\\n`]}),`\\n`,(0,e.jsx)(t.p,{children:\\"It works! You can now share your newly created chatbot with your friends.\\"}),`\\n`,(0,e.jsx)(t.p,{children:\\"Freshchat also has an agent handover feature. It is useful for creating a seamless engagement experience for your customer to interact with your agent to meet their needs. The agent handover flow is:\\"}),`\\n`,(0,e.jsxs)(t.ol,{children:[`\\n`,(0,e.jsx)(t.li,{children:\\"End-users start a conversation with a chatbot.\\"}),`\\n`,(0,e.jsx)(t.li,{children:\\"In the beginning or middle of a conversation, the end-user may request to be connected with any human-agents.\\"}),`\\n`,(0,e.jsx)(t.li,{children:\\"Chatbot function will be paused if there\\\\u2019s an available agent. If there are none, chatbot will notify the user to make another request after a few minutes.\\"}),`\\n`]}),`\\n`,(0,e.jsxs)(t.p,{children:[\\"This is the end of the guidance, you can contact \\",(0,e.jsx)(t.a,{href:\\"mailto:support@kata.ai\\",children:\\"support@kata.ai\\"}),\\" if you have any difficulties when implementing this.\\"]})]})}}var N=x;function h(n,o){throw new Error(\\"Expected \\"+(o?\\"component\\":\\"object\\")+\\" `\\"+n+\\"` to be defined: you likely forgot to import, pass, or provide it.\\")}return A(D);})();\\n;return Component;"},"_id":"tutorials/how-to-use-freshchat-for-your-chatbot.mdx","_raw":{"sourceFilePath":"tutorials/how-to-use-freshchat-for-your-chatbot.mdx","sourceFileName":"how-to-use-freshchat-for-your-chatbot.mdx","sourceFileDir":"tutorials","contentType":"mdx","flattenedPath":"tutorials/how-to-use-freshchat-for-your-chatbot"},"type":"Tutorials","slug":["how-to-use-freshchat-for-your-chatbot"],"excerpt":"\\nFreshchat’s live chat software is the fastest way for you to engage with your website visitors, provide assistance, and convert leads to happy customers. In this section, we will learn to connect our bot with Freshchat"}');
;// CONCATENATED MODULE: ./.contentlayer/generated/Tutorials/tutorials__how-to-use-instagram-messaging-automation-in-your-project.mdx.json
const tutorials_how_to_use_instagram_messaging_automation_in_your_project_mdx_namespaceObject = JSON.parse('{"layout":"tutorial","id":"how-to-use-instagram-messaging-automation-in-your-project","imgSpot":"/assets/images/tutorials/spot-ig-automation.webp","product":"kata-platform","title":"How to use Instagram Messaging automation in your project","date":"2021-08-26T07:00:00+07:00","body":{"raw":"\\nAutomate your Instagram DM conversation using our flow builder in the Kata Platform. Create bots to reply to customers with text, images, quick replies, generic template, ice breaker, and (coming soon) sticker.\\n\\n## Instagram Messaging Features\\n\\n### Instagram Story Reply\\n\\n#### About\\n\\nYou can send an automated reply to their DM whenever your customers engage you via Instagram Story.\\n\\n#### How to use\\n\\n1. Go to the Kata Platform and select your project.\\n2. Click to **Flow > Conversation Flow > Intent > Create Intent.**\\n3. Choose **Data** for the **Intent Type** dropdown\\n4. Click **Add Condition** and fill in\\n\\n   ```\\n   payload.type == \\"story_reply\\"\\n   ```\\n\\n5. Click Save\\n\\n### Instagram Story Mention\\n\\n#### About\\n\\nWhenever your customers mention your account in their Instagram Story, you can send automated replies to their DM.\\n\\n<div className=\\"info\\">\\n  <img className=\\"borderless\\" src=\\"/assets/images/icon-info.svg\\" />\\n  <p>\\n    Important note:\\n    <ul>\\n      <li>\\n        Because Instagram Story will be deleted every 24 hours, it is expected that the story attachments will disappear\\n        too.\\n      </li>\\n      <li>\\n        Chatbots cannot “read” the Instagram Story Mention content, but human agents can see the attachment. <br />\\n        Tips: If your customers mention your account in the complaint context and your chatbot cannot satisfy them with the\\n        solutions, the agent can take over the conversation.\\n      </li>\\n    </ul>\\n  </p>\\n</div>\\n\\n#### How to Use\\n\\n1. Go to the Kata Platform and select your project.\\n2. Click to **Flow > Conversation Flow > Intent > Create Intent.**\\n3. Choose **Data** for the intent type dropdown\\n4. Click **Add Condition** and fill in\\n\\n   ```\\n   payload.type == \\"story_mention\\"\\n   ```\\n\\n5. Click Save\\n\\n### Response Type\\n\\n#### Sending Texts Reply\\n\\nPrimary chatbot responses that show text to end-users.\\n\\n##### How to Use\\n\\n1. Go to the Kata Platform and select your project.\\n2. Click to **Flow > Conversation Flow > State > Action List**.\\n3. Choose **Text.** FYI, the Text limitation for Instagram automation is **1,000 characters** and allows for **emoji**.\\n4. Click **Create Action** to finalize your action\\n\\n#### Sending Images Reply\\n\\nPrimary chatbot response to send an image to end-users\\n\\n##### How to Use\\n\\n1. Go to the Kata Platform and select your project.\\n2. Click to **Flow > Conversation Flow > State > Action List**.\\n3. Choose **Text.** FYI, the Text limitation for Instagram automation is **1,000 characters** and allows for **emoji**.\\n4. Click **Create Action** to finalize your action\\n\\n#### Sending Quick Replies Reply\\n\\nYou can use this feature to show menu options to end-users and a good user experience to present to end-users your brand’s bot features. In Platform, this feature is named “Quick Reply,” which is placed in Flow > Conversation Flow > State > Action List. Here is the screenshot of quick replies\\n\\n<FigureImage\\n  caption={{ title: \'Figure 1\', description: `Quick replies in Instagram app.` }}\\n  src=\\"/assets/images/tutorials/how-to-use-instagram-messaging-automation-in-your-project/image1.webp\\"\\n  alt=\\"How to use Instagram Messaging automation in your project\\"\\n  naturalHeight={720}\\n  naturalWidth={405}\\n/>\\n\\n##### How to Use\\n\\n1. Go to the Kata Platform and select your project.\\n2. Click to **Flow > Conversation Flow > State > Action List**.\\n3. Choose **Quick Reply. **The Quick Reply limitations are (1) Max. 13 quick replies, (2) Each quick reply only allowed 20 char before being truncated.\\n4. Mapping for Quick Reply with an accurate view to end-user can be seen as follows.\\n\\n<FigureImage\\n  caption={{ title: \'Figure 2\', description: `Quick replies components.` }}\\n  src=\\"/assets/images/tutorials/how-to-use-instagram-messaging-automation-in-your-project/image2.webp\\"\\n  alt=\\"How to use Instagram Messaging automation in your project\\"\\n  naturalHeight={852}\\n  naturalWidth={1600}\\n/>\\n\\n5. Click **Create Action** to finalize your action\\n\\n#### Sending Generic Template (“Carousel”) Type\\n\\nThis feature has an interactive way to show menus or options by adding images and buttons in one bubble. Even more, 1 bubble message can show multiple Generic Templates. Here is the screenshot\\n\\n<FigureImage\\n  caption={{ title: \'Figure 3\', description: ` Generic template in Instagram app.` }}\\n  src=\\"/assets/images/tutorials/how-to-use-instagram-messaging-automation-in-your-project/image3.webp\\"\\n  alt=\\"How to use Instagram Messaging automation in your project\\"\\n  naturalHeight={1600}\\n  naturalWidth={900}\\n/>\\n\\n##### How to Use\\n\\n1. Go to the Kata Platform and select your project.\\n2. Click to **Flow > Conversation Flow > State > Action List**.\\n3. Choose **Carousel.** FYI for generic template limitations are (1) Maximum 10 elements, (2) Maximum of 3 buttons per element, (3) Each element consists of The title to display in the template which has 80 character limit, the subtitle to display in the template has 80 character limit.\\n4. Click **Create Action** to finalize your action\\n\\n#### Sending Ice Breaker Reply\\n\\nWe probably felt confused the first time using a chatbot as end-users, especially if the bot hasn’t given apparent bot features. “Ice Breaker” solves this problem by showing a _getting started_ on a few topics after the end-user adds the brand’s account.\\n\\n<div className=\\"info\\">\\n  <img className=\\"borderless\\" src=\\"/assets/images/icon-info.svg\\" />\\n  <p>Important: Ice Breaker is only shown for a first-time chat.</p>\\n</div>\\n\\nHere is the screenshot of the feature\\n\\n<FigureImage\\n  caption={{ title: \'Figure 4\', description: `Ice breaker in Instagram app.` }}\\n  src=\\"/assets/images/tutorials/how-to-use-instagram-messaging-automation-in-your-project/image4.webp\\"\\n  alt=\\"How to use Instagram Messaging automation in your project\\"\\n  naturalHeight={1600}\\n  naturalWidth={900}\\n/>\\n\\n##### How to Use\\n\\nIce Breaker setup must be done in [Omnichat](/kata-omnichat/introduction/what-is-kata-omnichat). Hence, we need to create an Inbox and connect it to Instagram DM. Follow this tutorial on [how to create an Inbox](/kata-omnichat/getting-started/connect-your-instagram-messaging-inbox).\\n\\nFinally, you’ve successfully created the Inbox. Let\'s jump to [creating the Ice Breaker tutorial](/kata-omnichat/manage-inbox-settings/set-up-ice-breaker).\\n\\n#### Instagram Sticker (“like heart”)\\n\\nThis feature allows your bot to send a sticker heart ❤️ and it is different from inline-like.\\n\\n<div className=\\"info\\">\\n  <img className=\\"borderless\\" src=\\"/assets/images/icon-info.svg\\" />\\n  <p>\\n    Tips: To develop this feature, you should know that your bot will reply with a “heart” whatever the customers ask.\\n    It’s somehow uncomfortable if your customer complains to your bot, then it shows a heart sticker.\\n  </p>\\n</div>\\n\\n##### How to Use\\n\\n1. Go to the Kata Platform and select your project.\\n2. Click to **Flow > Conversation Flow > State > Action List**.\\n3. Choose **Instagram Sticker.**\\n4. Click **Create**.\\n\\n### Available Soon\\n\\n#### Private Replies\\n\\n##### About\\n\\nYour customers can receive automatic replies in their Instagram DMs (considered “private”) whenever they comment on your brand Instagram post. It is a powerful tool to reach your customer faster and privately whenever they complain or praise your brand.\\n\\n##### How to Use\\n\\nYou will apply it in the **intent** feature to trigger automatic replies from Instagram Posts. We will update further announcements in this documentation or newsletter.\\n\\n<FigureImage\\n  caption={{ title: \'Figure 5\', description: `Generic template in Instagram app.` }}\\n  src=\\"/assets/images/tutorials/how-to-use-instagram-messaging-automation-in-your-project/image5.webp\\"\\n  alt=\\"How to use Instagram Messaging automation in your project\\"\\n  naturalHeight={1210}\\n  naturalWidth={1600}\\n/>\\n\\n## Deploy your chatbot\\n\\nGo to the tutorial for [creating a simple Instagram DM chatbot](/tutorials/create-igdm-bot-handover-from-chatbot-to-agent).\\n\\n## FAQ\\n\\n#### I have 2 IGDM bot actions: image type and text type. The first response will show an image, then a text. However, after I deploy the IG channel, it offers a text, then an image. Why did it happen?\\n\\nA: Because the API calls limit in Instagram (Facebook policy link) has a maximum of 5 outgoing messages in 1 second. Hence, loading the image and showing it to the end-user took a delay in between, and the impacted image action type didn’t show in the correct order. You cannot avoid it. We suggest you put a good UX conversation to display the image between text since the image will have an incorrect order than the Platform emulator.\\n\\nIt is the end of the guidance. You can contact [support@kata.ai](mailto:support@kata.ai) if you have any difficulties when implementing this.\\n","code":"var Component=(()=>{var d=Object.create;var r=Object.defineProperty;var m=Object.getOwnPropertyDescriptor;var p=Object.getOwnPropertyNames;var u=Object.getPrototypeOf,g=Object.prototype.hasOwnProperty;var s=t=>r(t,\\"__esModule\\",{value:!0});var y=(t,i)=>()=>(i||t((i={exports:{}}).exports,i),i.exports),f=(t,i)=>{for(var o in i)r(t,o,{get:i[o],enumerable:!0})},c=(t,i,o,n)=>{if(i&&typeof i==\\"object\\"||typeof i==\\"function\\")for(let a of p(i))!g.call(t,a)&&(o||a!==\\"default\\")&&r(t,a,{get:()=>i[a],enumerable:!(n=m(i,a))||n.enumerable});return t},w=(t,i)=>c(s(r(t!=null?d(u(t)):{},\\"default\\",!i&&t&&t.__esModule?{get:()=>t.default,enumerable:!0}:{value:t,enumerable:!0})),t),k=(t=>(i,o)=>t&&t.get(i)||(o=c(s({}),i,1),t&&t.set(i,o),o))(typeof WeakMap!=\\"undefined\\"?new WeakMap:0);var h=y((F,l)=>{l.exports=_jsx_runtime});var C={};f(C,{default:()=>I,frontmatter:()=>b});var e=w(h()),b={layout:\\"tutorial\\",id:\\"how-to-use-instagram-messaging-automation-in-your-project\\",imgSpot:\\"/assets/images/tutorials/spot-ig-automation.webp\\",product:\\"kata-platform\\",title:\\"How to use Instagram Messaging automation in your project\\",date:\\"2021-08-26T07:00:00+07:00\\"};function N(t={}){let{wrapper:i}=t.components||{};return i?(0,e.jsx)(i,Object.assign({},t,{children:(0,e.jsx)(o,{})})):o();function o(){let n=Object.assign({p:\\"p\\",h2:\\"h2\\",a:\\"a\\",span:\\"span\\",h3:\\"h3\\",h4:\\"h4\\",ol:\\"ol\\",li:\\"li\\",strong:\\"strong\\",pre:\\"pre\\",code:\\"code\\",h5:\\"h5\\",em:\\"em\\"},t.components),{FigureImage:a}=n;return a||v(\\"FigureImage\\",!0),(0,e.jsxs)(e.Fragment,{children:[(0,e.jsx)(n.p,{children:\\"Automate your Instagram DM conversation using our flow builder in the Kata Platform. Create bots to reply to customers with text, images, quick replies, generic template, ice breaker, and (coming soon) sticker.\\"}),`\\n`,(0,e.jsxs)(n.h2,{id:\\"instagram-messaging-features\\",children:[(0,e.jsx)(n.a,{className:\\"anchor\\",href:\\"#instagram-messaging-features\\",children:(0,e.jsx)(n.span,{className:\\"icon icon-link\\"})}),\\"Instagram Messaging Features\\"]}),`\\n`,(0,e.jsxs)(n.h3,{id:\\"instagram-story-reply\\",children:[(0,e.jsx)(n.a,{className:\\"anchor\\",href:\\"#instagram-story-reply\\",children:(0,e.jsx)(n.span,{className:\\"icon icon-link\\"})}),\\"Instagram Story Reply\\"]}),`\\n`,(0,e.jsxs)(n.h4,{id:\\"about\\",children:[(0,e.jsx)(n.a,{className:\\"anchor\\",href:\\"#about\\",children:(0,e.jsx)(n.span,{className:\\"icon icon-link\\"})}),\\"About\\"]}),`\\n`,(0,e.jsx)(n.p,{children:\\"You can send an automated reply to their DM whenever your customers engage you via Instagram Story.\\"}),`\\n`,(0,e.jsxs)(n.h4,{id:\\"how-to-use\\",children:[(0,e.jsx)(n.a,{className:\\"anchor\\",href:\\"#how-to-use\\",children:(0,e.jsx)(n.span,{className:\\"icon icon-link\\"})}),\\"How to use\\"]}),`\\n`,(0,e.jsxs)(n.ol,{children:[`\\n`,(0,e.jsxs)(n.li,{children:[`\\n`,(0,e.jsx)(n.p,{children:\\"Go to the Kata Platform and select your project.\\"}),`\\n`]}),`\\n`,(0,e.jsxs)(n.li,{children:[`\\n`,(0,e.jsxs)(n.p,{children:[\\"Click to \\",(0,e.jsx)(n.strong,{children:\\"Flow > Conversation Flow > Intent > Create Intent.\\"})]}),`\\n`]}),`\\n`,(0,e.jsxs)(n.li,{children:[`\\n`,(0,e.jsxs)(n.p,{children:[\\"Choose \\",(0,e.jsx)(n.strong,{children:\\"Data\\"}),\\" for the \\",(0,e.jsx)(n.strong,{children:\\"Intent Type\\"}),\\" dropdown\\"]}),`\\n`]}),`\\n`,(0,e.jsxs)(n.li,{children:[`\\n`,(0,e.jsxs)(n.p,{children:[\\"Click \\",(0,e.jsx)(n.strong,{children:\\"Add Condition\\"}),\\" and fill in\\"]}),`\\n`,(0,e.jsx)(n.pre,{children:(0,e.jsx)(n.code,{className:\\"code-highlight\\",children:(0,e.jsx)(n.span,{className:\\"code-line\\",children:`payload.type == \\"story_reply\\"\\n`})})}),`\\n`]}),`\\n`,(0,e.jsxs)(n.li,{children:[`\\n`,(0,e.jsx)(n.p,{children:\\"Click Save\\"}),`\\n`]}),`\\n`]}),`\\n`,(0,e.jsxs)(n.h3,{id:\\"instagram-story-mention\\",children:[(0,e.jsx)(n.a,{className:\\"anchor\\",href:\\"#instagram-story-mention\\",children:(0,e.jsx)(n.span,{className:\\"icon icon-link\\"})}),\\"Instagram Story Mention\\"]}),`\\n`,(0,e.jsxs)(n.h4,{id:\\"about-1\\",children:[(0,e.jsx)(n.a,{className:\\"anchor\\",href:\\"#about-1\\",children:(0,e.jsx)(n.span,{className:\\"icon icon-link\\"})}),\\"About\\"]}),`\\n`,(0,e.jsx)(n.p,{children:\\"Whenever your customers mention your account in their Instagram Story, you can send automated replies to their DM.\\"}),`\\n`,(0,e.jsxs)(\\"div\\",{className:\\"info\\",children:[(0,e.jsx)(\\"img\\",{className:\\"borderless\\",src:\\"/assets/images/icon-info.svg\\"}),(0,e.jsxs)(\\"p\\",{children:[(0,e.jsx)(n.p,{children:\\"Important note:\\"}),(0,e.jsxs)(\\"ul\\",{children:[(0,e.jsx)(\\"li\\",{children:(0,e.jsx)(n.p,{children:`Because Instagram Story will be deleted every 24 hours, it is expected that the story attachments will disappear\\ntoo.`})}),(0,e.jsx)(\\"li\\",{children:(0,e.jsxs)(n.p,{children:[\\"Chatbots cannot \\\\u201Cread\\\\u201D the Instagram Story Mention content, but human agents can see the attachment. \\",(0,e.jsx)(\\"br\\",{}),`\\nTips: If your customers mention your account in the complaint context and your chatbot cannot satisfy them with the\\nsolutions, the agent can take over the conversation.`]})})]})]})]}),`\\n`,(0,e.jsxs)(n.h4,{id:\\"how-to-use-1\\",children:[(0,e.jsx)(n.a,{className:\\"anchor\\",href:\\"#how-to-use-1\\",children:(0,e.jsx)(n.span,{className:\\"icon icon-link\\"})}),\\"How to Use\\"]}),`\\n`,(0,e.jsxs)(n.ol,{children:[`\\n`,(0,e.jsxs)(n.li,{children:[`\\n`,(0,e.jsx)(n.p,{children:\\"Go to the Kata Platform and select your project.\\"}),`\\n`]}),`\\n`,(0,e.jsxs)(n.li,{children:[`\\n`,(0,e.jsxs)(n.p,{children:[\\"Click to \\",(0,e.jsx)(n.strong,{children:\\"Flow > Conversation Flow > Intent > Create Intent.\\"})]}),`\\n`]}),`\\n`,(0,e.jsxs)(n.li,{children:[`\\n`,(0,e.jsxs)(n.p,{children:[\\"Choose \\",(0,e.jsx)(n.strong,{children:\\"Data\\"}),\\" for the intent type dropdown\\"]}),`\\n`]}),`\\n`,(0,e.jsxs)(n.li,{children:[`\\n`,(0,e.jsxs)(n.p,{children:[\\"Click \\",(0,e.jsx)(n.strong,{children:\\"Add Condition\\"}),\\" and fill in\\"]}),`\\n`,(0,e.jsx)(n.pre,{children:(0,e.jsx)(n.code,{className:\\"code-highlight\\",children:(0,e.jsx)(n.span,{className:\\"code-line\\",children:`payload.type == \\"story_mention\\"\\n`})})}),`\\n`]}),`\\n`,(0,e.jsxs)(n.li,{children:[`\\n`,(0,e.jsx)(n.p,{children:\\"Click Save\\"}),`\\n`]}),`\\n`]}),`\\n`,(0,e.jsxs)(n.h3,{id:\\"response-type\\",children:[(0,e.jsx)(n.a,{className:\\"anchor\\",href:\\"#response-type\\",children:(0,e.jsx)(n.span,{className:\\"icon icon-link\\"})}),\\"Response Type\\"]}),`\\n`,(0,e.jsxs)(n.h4,{id:\\"sending-texts-reply\\",children:[(0,e.jsx)(n.a,{className:\\"anchor\\",href:\\"#sending-texts-reply\\",children:(0,e.jsx)(n.span,{className:\\"icon icon-link\\"})}),\\"Sending Texts Reply\\"]}),`\\n`,(0,e.jsx)(n.p,{children:\\"Primary chatbot responses that show text to end-users.\\"}),`\\n`,(0,e.jsxs)(n.h5,{id:\\"how-to-use-2\\",children:[(0,e.jsx)(n.a,{className:\\"anchor\\",href:\\"#how-to-use-2\\",children:(0,e.jsx)(n.span,{className:\\"icon icon-link\\"})}),\\"How to Use\\"]}),`\\n`,(0,e.jsxs)(n.ol,{children:[`\\n`,(0,e.jsx)(n.li,{children:\\"Go to the Kata Platform and select your project.\\"}),`\\n`,(0,e.jsxs)(n.li,{children:[\\"Click to \\",(0,e.jsx)(n.strong,{children:\\"Flow > Conversation Flow > State > Action List\\"}),\\".\\"]}),`\\n`,(0,e.jsxs)(n.li,{children:[\\"Choose \\",(0,e.jsx)(n.strong,{children:\\"Text.\\"}),\\" FYI, the Text limitation for Instagram automation is \\",(0,e.jsx)(n.strong,{children:\\"1,000 characters\\"}),\\" and allows for \\",(0,e.jsx)(n.strong,{children:\\"emoji\\"}),\\".\\"]}),`\\n`,(0,e.jsxs)(n.li,{children:[\\"Click \\",(0,e.jsx)(n.strong,{children:\\"Create Action\\"}),\\" to finalize your action\\"]}),`\\n`]}),`\\n`,(0,e.jsxs)(n.h4,{id:\\"sending-images-reply\\",children:[(0,e.jsx)(n.a,{className:\\"anchor\\",href:\\"#sending-images-reply\\",children:(0,e.jsx)(n.span,{className:\\"icon icon-link\\"})}),\\"Sending Images Reply\\"]}),`\\n`,(0,e.jsx)(n.p,{children:\\"Primary chatbot response to send an image to end-users\\"}),`\\n`,(0,e.jsxs)(n.h5,{id:\\"how-to-use-3\\",children:[(0,e.jsx)(n.a,{className:\\"anchor\\",href:\\"#how-to-use-3\\",children:(0,e.jsx)(n.span,{className:\\"icon icon-link\\"})}),\\"How to Use\\"]}),`\\n`,(0,e.jsxs)(n.ol,{children:[`\\n`,(0,e.jsx)(n.li,{children:\\"Go to the Kata Platform and select your project.\\"}),`\\n`,(0,e.jsxs)(n.li,{children:[\\"Click to \\",(0,e.jsx)(n.strong,{children:\\"Flow > Conversation Flow > State > Action List\\"}),\\".\\"]}),`\\n`,(0,e.jsxs)(n.li,{children:[\\"Choose \\",(0,e.jsx)(n.strong,{children:\\"Text.\\"}),\\" FYI, the Text limitation for Instagram automation is \\",(0,e.jsx)(n.strong,{children:\\"1,000 characters\\"}),\\" and allows for \\",(0,e.jsx)(n.strong,{children:\\"emoji\\"}),\\".\\"]}),`\\n`,(0,e.jsxs)(n.li,{children:[\\"Click \\",(0,e.jsx)(n.strong,{children:\\"Create Action\\"}),\\" to finalize your action\\"]}),`\\n`]}),`\\n`,(0,e.jsxs)(n.h4,{id:\\"sending-quick-replies-reply\\",children:[(0,e.jsx)(n.a,{className:\\"anchor\\",href:\\"#sending-quick-replies-reply\\",children:(0,e.jsx)(n.span,{className:\\"icon icon-link\\"})}),\\"Sending Quick Replies Reply\\"]}),`\\n`,(0,e.jsx)(n.p,{children:\\"You can use this feature to show menu options to end-users and a good user experience to present to end-users your brand\\\\u2019s bot features. In Platform, this feature is named \\\\u201CQuick Reply,\\\\u201D which is placed in Flow > Conversation Flow > State > Action List. Here is the screenshot of quick replies\\"}),`\\n`,(0,e.jsx)(a,{caption:{title:\\"Figure 1\\",description:\\"Quick replies in Instagram app.\\"},src:\\"/assets/images/tutorials/how-to-use-instagram-messaging-automation-in-your-project/image1.webp\\",alt:\\"How to use Instagram Messaging automation in your project\\",naturalHeight:720,naturalWidth:405}),`\\n`,(0,e.jsxs)(n.h5,{id:\\"how-to-use-4\\",children:[(0,e.jsx)(n.a,{className:\\"anchor\\",href:\\"#how-to-use-4\\",children:(0,e.jsx)(n.span,{className:\\"icon icon-link\\"})}),\\"How to Use\\"]}),`\\n`,(0,e.jsxs)(n.ol,{children:[`\\n`,(0,e.jsx)(n.li,{children:\\"Go to the Kata Platform and select your project.\\"}),`\\n`,(0,e.jsxs)(n.li,{children:[\\"Click to \\",(0,e.jsx)(n.strong,{children:\\"Flow > Conversation Flow > State > Action List\\"}),\\".\\"]}),`\\n`,(0,e.jsx)(n.li,{children:\\"Choose **Quick Reply. **The Quick Reply limitations are (1) Max. 13 quick replies, (2) Each quick reply only allowed 20 char before being truncated.\\"}),`\\n`,(0,e.jsx)(n.li,{children:\\"Mapping for Quick Reply with an accurate view to end-user can be seen as follows.\\"}),`\\n`]}),`\\n`,(0,e.jsx)(a,{caption:{title:\\"Figure 2\\",description:\\"Quick replies components.\\"},src:\\"/assets/images/tutorials/how-to-use-instagram-messaging-automation-in-your-project/image2.webp\\",alt:\\"How to use Instagram Messaging automation in your project\\",naturalHeight:852,naturalWidth:1600}),`\\n`,(0,e.jsxs)(n.ol,{start:\\"5\\",children:[`\\n`,(0,e.jsxs)(n.li,{children:[\\"Click \\",(0,e.jsx)(n.strong,{children:\\"Create Action\\"}),\\" to finalize your action\\"]}),`\\n`]}),`\\n`,(0,e.jsxs)(n.h4,{id:\\"sending-generic-template-carousel-type\\",children:[(0,e.jsx)(n.a,{className:\\"anchor\\",href:\\"#sending-generic-template-carousel-type\\",children:(0,e.jsx)(n.span,{className:\\"icon icon-link\\"})}),\\"Sending Generic Template (\\\\u201CCarousel\\\\u201D) Type\\"]}),`\\n`,(0,e.jsx)(n.p,{children:\\"This feature has an interactive way to show menus or options by adding images and buttons in one bubble. Even more, 1 bubble message can show multiple Generic Templates. Here is the screenshot\\"}),`\\n`,(0,e.jsx)(a,{caption:{title:\\"Figure 3\\",description:\\" Generic template in Instagram app.\\"},src:\\"/assets/images/tutorials/how-to-use-instagram-messaging-automation-in-your-project/image3.webp\\",alt:\\"How to use Instagram Messaging automation in your project\\",naturalHeight:1600,naturalWidth:900}),`\\n`,(0,e.jsxs)(n.h5,{id:\\"how-to-use-5\\",children:[(0,e.jsx)(n.a,{className:\\"anchor\\",href:\\"#how-to-use-5\\",children:(0,e.jsx)(n.span,{className:\\"icon icon-link\\"})}),\\"How to Use\\"]}),`\\n`,(0,e.jsxs)(n.ol,{children:[`\\n`,(0,e.jsx)(n.li,{children:\\"Go to the Kata Platform and select your project.\\"}),`\\n`,(0,e.jsxs)(n.li,{children:[\\"Click to \\",(0,e.jsx)(n.strong,{children:\\"Flow > Conversation Flow > State > Action List\\"}),\\".\\"]}),`\\n`,(0,e.jsxs)(n.li,{children:[\\"Choose \\",(0,e.jsx)(n.strong,{children:\\"Carousel.\\"}),\\" FYI for generic template limitations are (1) Maximum 10 elements, (2) Maximum of 3 buttons per element, (3) Each element consists of The title to display in the template which has 80 character limit, the subtitle to display in the template has 80 character limit.\\"]}),`\\n`,(0,e.jsxs)(n.li,{children:[\\"Click \\",(0,e.jsx)(n.strong,{children:\\"Create Action\\"}),\\" to finalize your action\\"]}),`\\n`]}),`\\n`,(0,e.jsxs)(n.h4,{id:\\"sending-ice-breaker-reply\\",children:[(0,e.jsx)(n.a,{className:\\"anchor\\",href:\\"#sending-ice-breaker-reply\\",children:(0,e.jsx)(n.span,{className:\\"icon icon-link\\"})}),\\"Sending Ice Breaker Reply\\"]}),`\\n`,(0,e.jsxs)(n.p,{children:[\\"We probably felt confused the first time using a chatbot as end-users, especially if the bot hasn\\\\u2019t given apparent bot features. \\\\u201CIce Breaker\\\\u201D solves this problem by showing a \\",(0,e.jsx)(n.em,{children:\\"getting started\\"}),\\" on a few topics after the end-user adds the brand\\\\u2019s account.\\"]}),`\\n`,(0,e.jsxs)(\\"div\\",{className:\\"info\\",children:[(0,e.jsx)(\\"img\\",{className:\\"borderless\\",src:\\"/assets/images/icon-info.svg\\"}),(0,e.jsx)(\\"p\\",{children:\\"Important: Ice Breaker is only shown for a first-time chat.\\"})]}),`\\n`,(0,e.jsx)(n.p,{children:\\"Here is the screenshot of the feature\\"}),`\\n`,(0,e.jsx)(a,{caption:{title:\\"Figure 4\\",description:\\"Ice breaker in Instagram app.\\"},src:\\"/assets/images/tutorials/how-to-use-instagram-messaging-automation-in-your-project/image4.webp\\",alt:\\"How to use Instagram Messaging automation in your project\\",naturalHeight:1600,naturalWidth:900}),`\\n`,(0,e.jsxs)(n.h5,{id:\\"how-to-use-6\\",children:[(0,e.jsx)(n.a,{className:\\"anchor\\",href:\\"#how-to-use-6\\",children:(0,e.jsx)(n.span,{className:\\"icon icon-link\\"})}),\\"How to Use\\"]}),`\\n`,(0,e.jsxs)(n.p,{children:[\\"Ice Breaker setup must be done in \\",(0,e.jsx)(n.a,{href:\\"/kata-omnichat/introduction/what-is-kata-omnichat\\",children:\\"Omnichat\\"}),\\". Hence, we need to create an Inbox and connect it to Instagram DM. Follow this tutorial on \\",(0,e.jsx)(n.a,{href:\\"/kata-omnichat/getting-started/connect-your-instagram-messaging-inbox\\",children:\\"how to create an Inbox\\"}),\\".\\"]}),`\\n`,(0,e.jsxs)(n.p,{children:[\\"Finally, you\\\\u2019ve successfully created the Inbox. Let\'s jump to \\",(0,e.jsx)(n.a,{href:\\"/kata-omnichat/manage-inbox-settings/set-up-ice-breaker\\",children:\\"creating the Ice Breaker tutorial\\"}),\\".\\"]}),`\\n`,(0,e.jsxs)(n.h4,{id:\\"instagram-sticker-like-heart\\",children:[(0,e.jsx)(n.a,{className:\\"anchor\\",href:\\"#instagram-sticker-like-heart\\",children:(0,e.jsx)(n.span,{className:\\"icon icon-link\\"})}),\\"Instagram Sticker (\\\\u201Clike heart\\\\u201D)\\"]}),`\\n`,(0,e.jsx)(n.p,{children:\\"This feature allows your bot to send a sticker heart \\\\u2764\\\\uFE0F and it is different from inline-like.\\"}),`\\n`,(0,e.jsxs)(\\"div\\",{className:\\"info\\",children:[(0,e.jsx)(\\"img\\",{className:\\"borderless\\",src:\\"/assets/images/icon-info.svg\\"}),(0,e.jsx)(\\"p\\",{children:(0,e.jsx)(n.p,{children:`Tips: To develop this feature, you should know that your bot will reply with a \\\\u201Cheart\\\\u201D whatever the customers ask.\\nIt\\\\u2019s somehow uncomfortable if your customer complains to your bot, then it shows a heart sticker.`})})]}),`\\n`,(0,e.jsxs)(n.h5,{id:\\"how-to-use-7\\",children:[(0,e.jsx)(n.a,{className:\\"anchor\\",href:\\"#how-to-use-7\\",children:(0,e.jsx)(n.span,{className:\\"icon icon-link\\"})}),\\"How to Use\\"]}),`\\n`,(0,e.jsxs)(n.ol,{children:[`\\n`,(0,e.jsx)(n.li,{children:\\"Go to the Kata Platform and select your project.\\"}),`\\n`,(0,e.jsxs)(n.li,{children:[\\"Click to \\",(0,e.jsx)(n.strong,{children:\\"Flow > Conversation Flow > State > Action List\\"}),\\".\\"]}),`\\n`,(0,e.jsxs)(n.li,{children:[\\"Choose \\",(0,e.jsx)(n.strong,{children:\\"Instagram Sticker.\\"})]}),`\\n`,(0,e.jsxs)(n.li,{children:[\\"Click \\",(0,e.jsx)(n.strong,{children:\\"Create\\"}),\\".\\"]}),`\\n`]}),`\\n`,(0,e.jsxs)(n.h3,{id:\\"available-soon\\",children:[(0,e.jsx)(n.a,{className:\\"anchor\\",href:\\"#available-soon\\",children:(0,e.jsx)(n.span,{className:\\"icon icon-link\\"})}),\\"Available Soon\\"]}),`\\n`,(0,e.jsxs)(n.h4,{id:\\"private-replies\\",children:[(0,e.jsx)(n.a,{className:\\"anchor\\",href:\\"#private-replies\\",children:(0,e.jsx)(n.span,{className:\\"icon icon-link\\"})}),\\"Private Replies\\"]}),`\\n`,(0,e.jsxs)(n.h5,{id:\\"about-2\\",children:[(0,e.jsx)(n.a,{className:\\"anchor\\",href:\\"#about-2\\",children:(0,e.jsx)(n.span,{className:\\"icon icon-link\\"})}),\\"About\\"]}),`\\n`,(0,e.jsx)(n.p,{children:\\"Your customers can receive automatic replies in their Instagram DMs (considered \\\\u201Cprivate\\\\u201D) whenever they comment on your brand Instagram post. It is a powerful tool to reach your customer faster and privately whenever they complain or praise your brand.\\"}),`\\n`,(0,e.jsxs)(n.h5,{id:\\"how-to-use-8\\",children:[(0,e.jsx)(n.a,{className:\\"anchor\\",href:\\"#how-to-use-8\\",children:(0,e.jsx)(n.span,{className:\\"icon icon-link\\"})}),\\"How to Use\\"]}),`\\n`,(0,e.jsxs)(n.p,{children:[\\"You will apply it in the \\",(0,e.jsx)(n.strong,{children:\\"intent\\"}),\\" feature to trigger automatic replies from Instagram Posts. We will update further announcements in this documentation or newsletter.\\"]}),`\\n`,(0,e.jsx)(a,{caption:{title:\\"Figure 5\\",description:\\"Generic template in Instagram app.\\"},src:\\"/assets/images/tutorials/how-to-use-instagram-messaging-automation-in-your-project/image5.webp\\",alt:\\"How to use Instagram Messaging automation in your project\\",naturalHeight:1210,naturalWidth:1600}),`\\n`,(0,e.jsxs)(n.h2,{id:\\"deploy-your-chatbot\\",children:[(0,e.jsx)(n.a,{className:\\"anchor\\",href:\\"#deploy-your-chatbot\\",children:(0,e.jsx)(n.span,{className:\\"icon icon-link\\"})}),\\"Deploy your chatbot\\"]}),`\\n`,(0,e.jsxs)(n.p,{children:[\\"Go to the tutorial for \\",(0,e.jsx)(n.a,{href:\\"/tutorials/create-igdm-bot-handover-from-chatbot-to-agent\\",children:\\"creating a simple Instagram DM chatbot\\"}),\\".\\"]}),`\\n`,(0,e.jsxs)(n.h2,{id:\\"faq\\",children:[(0,e.jsx)(n.a,{className:\\"anchor\\",href:\\"#faq\\",children:(0,e.jsx)(n.span,{className:\\"icon icon-link\\"})}),\\"FAQ\\"]}),`\\n`,(0,e.jsxs)(n.h4,{id:\\"i-have-2-igdm-bot-actions-image-type-and-text-type-the-first-response-will-show-an-image-then-a-text-however-after-i-deploy-the-ig-channel-it-offers-a-text-then-an-image-why-did-it-happen\\",children:[(0,e.jsx)(n.a,{className:\\"anchor\\",href:\\"#i-have-2-igdm-bot-actions-image-type-and-text-type-the-first-response-will-show-an-image-then-a-text-however-after-i-deploy-the-ig-channel-it-offers-a-text-then-an-image-why-did-it-happen\\",children:(0,e.jsx)(n.span,{className:\\"icon icon-link\\"})}),\\"I have 2 IGDM bot actions: image type and text type. The first response will show an image, then a text. However, after I deploy the IG channel, it offers a text, then an image. Why did it happen?\\"]}),`\\n`,(0,e.jsx)(n.p,{children:\\"A: Because the API calls limit in Instagram (Facebook policy link) has a maximum of 5 outgoing messages in 1 second. Hence, loading the image and showing it to the end-user took a delay in between, and the impacted image action type didn\\\\u2019t show in the correct order. You cannot avoid it. We suggest you put a good UX conversation to display the image between text since the image will have an incorrect order than the Platform emulator.\\"}),`\\n`,(0,e.jsxs)(n.p,{children:[\\"It is the end of the guidance. You can contact \\",(0,e.jsx)(n.a,{href:\\"mailto:support@kata.ai\\",children:\\"support@kata.ai\\"}),\\" if you have any difficulties when implementing this.\\"]})]})}}var I=N;function v(t,i){throw new Error(\\"Expected \\"+(i?\\"component\\":\\"object\\")+\\" `\\"+t+\\"` to be defined: you likely forgot to import, pass, or provide it.\\")}return k(C);})();\\n;return Component;"},"_id":"tutorials/how-to-use-instagram-messaging-automation-in-your-project.mdx","_raw":{"sourceFilePath":"tutorials/how-to-use-instagram-messaging-automation-in-your-project.mdx","sourceFileName":"how-to-use-instagram-messaging-automation-in-your-project.mdx","sourceFileDir":"tutorials","contentType":"mdx","flattenedPath":"tutorials/how-to-use-instagram-messaging-automation-in-your-project"},"type":"Tutorials","slug":["how-to-use-instagram-messaging-automation-in-your-project"],"excerpt":"\\nAutomate your Instagram DM conversation using our flow builder in the Kata Platform. Create bots to reply to customers with text, images, quick replies, generic template, ice breaker, and (coming soon) sticker"}');
;// CONCATENATED MODULE: ./.contentlayer/generated/Tutorials/tutorials__how-to-use-qiscus-omnichannel-to-your-chatbot.mdx.json
const tutorials_how_to_use_qiscus_omnichannel_to_your_chatbot_mdx_namespaceObject = JSON.parse('{"layout":"tutorial","id":"how-to-use-qiscus-omnichannel-to-your-chatbot","imgSpot":"/assets/images/tutorials/spot-qiscus.webp","product":"kata-platform","title":"How to use Qiscus omnichannel to your chatbot","date":"2021-08-26T07:00:00+07:00","body":{"raw":"\\nQiscus is an AI compliant, secure and flexible chat SDK for apps and websites. They also provide a multichannel customer service chat solution that is now popular. This section will learn how to connect our bot with Qiscus through the following steps.\\n\\n## Deploy your chatbot\\n\\n1. Click the **Deploy** menu in the left sidebar.\\n2. On the Deploy page, click on the **New Deployment** button in the top right corner. It will open up the Create Deployment menu.\\n3. Choose any deployment version you want to deploy and fill in the changelog.\\n\\n<FigureImage\\n  caption={{ title: \'Figure 1\', description: `Create a new deployment` }}\\n  src=\\"/assets/images/tutorials/how-to-use-qiscus-omnichannel-to-your-chatbot/image1.webp\\"\\n  alt=\\"How to use Qiscus omnichannel to your chatbot\\"\\n  naturalHeight={1600}\\n  naturalWidth={1133}\\n/>\\n\\n4. Click **Submit** to finish the deployment.\\n\\nIf you already have an environment created, skip these steps.\\n\\n1. Go to the **Deployments > Environment** menu.\\n\\n<FigureImage\\n  caption={{ title: \'Figure 2\', description: `Set up the environment, then set up the Qiscus channel.` }}\\n  src=\\"/assets/images/tutorials/how-to-use-qiscus-omnichannel-to-your-chatbot/image2.webp\\"\\n  alt=\\"How to use Qiscus omnichannel to your chatbot\\"\\n  naturalHeight={505}\\n  naturalWidth={1600}\\n/>\\n\\n2. Click the **Create Environment** button in any environment. You will see a drawer to create a new environment.\\n3. Choose the **development version** you want (in this tutorial, we use the 1.0.0 version)\\n4. Fill in the **environment URL**. This environment URL is used for CMS. Learn more about CMS.\\n5. Click **Create** to create the environment.\\n6. Created environment now has a **Create Channel** button.\\n\\nContinue to choose Freshchat as a chatbot channel.\\n\\n1. Click the **Create Channel** button to start adding channels to the environment. It will open up the Channel menu within the environment.\\n2. Click the ”**+ Create Channel**” button in the channel table list. It will show a menu to set up the channel.\\n3. Choose **Qiscus** in Channel Type.\\n\\n<FigureImage\\n  caption={{ title: \'Figure 3\', description: `Create Qiscus channel` }}\\n  src=\\"/assets/images/tutorials/how-to-use-qiscus-omnichannel-to-your-chatbot/image3.webp\\"\\n  alt=\\"How to use Qiscus omnichannel to your chatbot\\"\\n  naturalHeight={1238}\\n  naturalWidth={1530}\\n/>\\n\\n<Table>\\n  <TableHead>\\n    <TableHeadRow>\\n      <TableHeadCell>Field Name</TableHeadCell>\\n      <TableHeadCell>Functionality</TableHeadCell>\\n      <TableHeadCell>Limitation</TableHeadCell>\\n    </TableHeadRow>\\n  </TableHead>\\n  <TableBody>\\n    <TableBodyRow>\\n      <TableBodyCell>Name</TableBodyCell>\\n      <TableBodyCell>Your channel name</TableBodyCell>\\n      <TableBodyCell>\\n        Max. 30 characters must contain only alphanumeric characters (A-Z, a-z, 0-9), `-`, and `_`.\\n      </TableBodyCell>\\n    </TableBodyRow>\\n    <TableBodyRow>\\n      <TableBodyCell>Secret Key</TableBodyCell>\\n      <TableBodyCell>Key credential from Qiscus</TableBodyCell>\\n      <TableBodyCell>-</TableBodyCell>\\n    </TableBodyRow>\\n    <TableBodyRow>\\n      <TableBodyCell>Bot Token</TableBodyCell>\\n      <TableBodyCell>Key credential from Qiscus </TableBodyCell>\\n      <TableBodyCell>-</TableBodyCell>\\n    </TableBodyRow>\\n    <TableBodyRow>\\n      <TableBodyCell>Bot Email</TableBodyCell>\\n      <TableBodyCell>Registered email that has Qiscus inbox for chatbo </TableBodyCell>\\n      <TableBodyCell>Email only </TableBodyCell>\\n    </TableBodyRow>\\n    <TableBodyRow>\\n      <TableBodyCell>URL</TableBodyCell>\\n      <TableBodyCell>Registered email that has Qiscus inbox for chatbot </TableBodyCell>\\n      <TableBodyCell>HTTPS website only</TableBodyCell>\\n    </TableBodyRow>\\n  </TableBody>\\n</Table>\\n\\nTo fill in the secret key, bot email, and URL, you need to set up a Qiscus inbox. So, let’s start.\\n\\n## Register and login to Qiscus\\n\\n1. Register to Qiscus Multichannel Chat Website (<a href=\\"https://multichannel.qiscus.com/\\" target=\\"_blank\\"><span>http</span>s://multichannel.qiscus.com/</a>) to create a new app. You will be asked to fill in the information regarding your account.\\n2. As soon as you sign up, you will get an email verification from Qiscus Multichannel Chat that you need to verify before using it. So check your email and verify it.\\n3. After verifying your account, you can log into the Qiscus Multichannel Chat dashboard via the login page. Please fill in your credentials to get into the dashboard.\\n4. Then, go to the **Integration** page.\\n\\n## Set up Qiscus integration\\n\\n1. Enable the “**Qiscus Widget**” tab like shown in the picture below.\\n\\n<FigureImage\\n  caption={{ title: \'Figure 4\', description: `Enable Qiscus widget.` }}\\n  src=\\"/assets/images/tutorials/how-to-use-qiscus-omnichannel-to-your-chatbot/image4.webp\\"\\n  alt=\\"How to use Qiscus omnichannel to your chatbot\\"\\n  naturalHeight={601}\\n  naturalWidth={1358}\\n/>\\n\\n2. Copy the snippet code shown on the page and paste it into your website HTML. You can open your HTML later after you integrate the bot.\\n3. Next, you need to integrate the bot by enabling the “**Bot Integration**” in the **Integration Page**.\\n4. On this page, you will see Agent ID, App ID, Qiscus Secret Key, and URL required in Kata Platform to deploy the Qiscus bot. Copy all fields.\\n\\n<FigureImage\\n  caption={{ title: \'Figure 5\', description: ` Bot integration` }}\\n  src=\\"/assets/images/tutorials/how-to-use-qiscus-omnichannel-to-your-chatbot/image5.webp\\"\\n  alt=\\"How to use Qiscus omnichannel to your chatbot\\"\\n  naturalHeight={636}\\n  naturalWidth={1354}\\n/>\\n\\nThe next step is to paste the Agent ID, App ID, Qiscus Secret Key, and URL from Qiscus to the Kata Platform.\\n\\n1. Go back to Kata Platform (<a href=\\"https://platform.kata.ai\\" target=\\"_blank\\"><span>http</span>s://platform.kata.ai</a>)\\n2. Paste the Agent ID, App ID, Qiscus Secret Key, and URL there. Here is the example:\\n\\n<FigureImage\\n  caption={{\\n    title: \'Figure 6\',\\n    description: `Paste the Agent ID, App ID, Qiscus Secret Key, and URL into channel configuration.`,\\n  }}\\n  src=\\"/assets/images/tutorials/how-to-use-qiscus-omnichannel-to-your-chatbot/image6.webp\\"\\n  alt=\\"How to use Qiscus omnichannel to your chatbot\\"\\n  naturalHeight={1230}\\n  naturalWidth={1388}\\n/>\\n\\n3. Click **Create** to generate the webhook. You can see a webhook URL from the generated channel.\\n4. Click the copy icon to copy the webhook URL.\\n\\n<FigureImage\\n  caption={{ title: \'Figure 7\', description: ` Copy webhook URL.` }}\\n  src=\\"/assets/images/tutorials/how-to-use-qiscus-omnichannel-to-your-chatbot/image7.webp\\"\\n  alt=\\"How to use Qiscus omnichannel to your chatbot\\"\\n  naturalHeight={455}\\n  naturalWidth={1600}\\n/>\\n\\n## Finalize Qiscus set up\\n\\n1. Go back to Qiscus dashboard <a href=\\"https://multichannel.qiscus.com/web/welcome\\" target=\\"_blank\\"><span>http</span>s://multichannel.qiscus.com/web/welcome</a>\\n2. Then, go to the “**Bot Integration**” tab. Make sure you’ve enabled it.\\n3. Next, paste the webhook URL in “Bot Webhook URL.”\\n\\n<FigureImage\\n  caption={{ title: \'Figure 8\', description: `Paste webhook URL` }}\\n  src=\\"/assets/images/tutorials/how-to-use-qiscus-omnichannel-to-your-chatbot/image8.webp\\"\\n  alt=\\"How to use Qiscus omnichannel to your chatbot\\"\\n  naturalHeight={636}\\n  naturalWidth={1354}\\n/>\\n\\n4. Finally, click “**Connect**”.\\n\\nThis is the end of the guidance. You can contact support@kata.ai if you have any difficulties when implementing this.\\n","code":"var Component=(()=>{var f=Object.create;var h=Object.defineProperty;var C=Object.getOwnPropertyDescriptor;var k=Object.getOwnPropertyNames;var Q=Object.getPrototypeOf,T=Object.prototype.hasOwnProperty;var g=t=>h(t,\\"__esModule\\",{value:!0});var v=(t,i)=>()=>(i||t((i={exports:{}}).exports,i),i.exports),H=(t,i)=>{for(var l in i)h(t,l,{get:i[l],enumerable:!0})},b=(t,i,l,n)=>{if(i&&typeof i==\\"object\\"||typeof i==\\"function\\")for(let a of k(i))!T.call(t,a)&&(l||a!==\\"default\\")&&h(t,a,{get:()=>i[a],enumerable:!(n=C(i,a))||n.enumerable});return t},R=(t,i)=>b(g(h(t!=null?f(Q(t)):{},\\"default\\",!i&&t&&t.__esModule?{get:()=>t.default,enumerable:!0}:{value:t,enumerable:!0})),t),q=(t=>(i,l)=>t&&t.get(i)||(l=b(g({}),i,1),t&&t.set(i,l),l))(typeof WeakMap!=\\"undefined\\"?new WeakMap:0);var w=v((S,y)=>{y.exports=_jsx_runtime});var F={};H(F,{default:()=>L,frontmatter:()=>x});var e=R(w()),x={layout:\\"tutorial\\",id:\\"how-to-use-qiscus-omnichannel-to-your-chatbot\\",title:\\"How to use Qiscus omnichannel to your chatbot\\",imgSpot:\\"/assets/images/tutorials/spot-qiscus.webp\\",product:\\"kata-platform\\",date:\\"2021-08-26T07:00:00+07:00\\"};function I(t={}){let{wrapper:i}=t.components||{};return i?(0,e.jsx)(i,Object.assign({},t,{children:(0,e.jsx)(l,{})})):l();function l(){let n=Object.assign({p:\\"p\\",h2:\\"h2\\",a:\\"a\\",span:\\"span\\",ol:\\"ol\\",li:\\"li\\",strong:\\"strong\\",code:\\"code\\"},t.components),{FigureImage:a,Table:u,TableHead:d,TableHeadRow:p,TableHeadCell:c,TableBody:m,TableBodyRow:s,TableBodyCell:o}=n;return a||r(\\"FigureImage\\",!0),u||r(\\"Table\\",!0),m||r(\\"TableBody\\",!0),o||r(\\"TableBodyCell\\",!0),s||r(\\"TableBodyRow\\",!0),d||r(\\"TableHead\\",!0),c||r(\\"TableHeadCell\\",!0),p||r(\\"TableHeadRow\\",!0),(0,e.jsxs)(e.Fragment,{children:[(0,e.jsx)(n.p,{children:\\"Qiscus is an AI compliant, secure and flexible chat SDK for apps and websites. They also provide a multichannel customer service chat solution that is now popular. This section will learn how to connect our bot with Qiscus through the following steps.\\"}),`\\n`,(0,e.jsxs)(n.h2,{id:\\"deploy-your-chatbot\\",children:[(0,e.jsx)(n.a,{className:\\"anchor\\",href:\\"#deploy-your-chatbot\\",children:(0,e.jsx)(n.span,{className:\\"icon icon-link\\"})}),\\"Deploy your chatbot\\"]}),`\\n`,(0,e.jsxs)(n.ol,{children:[`\\n`,(0,e.jsxs)(n.li,{children:[\\"Click the \\",(0,e.jsx)(n.strong,{children:\\"Deploy\\"}),\\" menu in the left sidebar.\\"]}),`\\n`,(0,e.jsxs)(n.li,{children:[\\"On the Deploy page, click on the \\",(0,e.jsx)(n.strong,{children:\\"New Deployment\\"}),\\" button in the top right corner. It will open up the Create Deployment menu.\\"]}),`\\n`,(0,e.jsx)(n.li,{children:\\"Choose any deployment version you want to deploy and fill in the changelog.\\"}),`\\n`]}),`\\n`,(0,e.jsx)(a,{caption:{title:\\"Figure 1\\",description:\\"Create a new deployment\\"},src:\\"/assets/images/tutorials/how-to-use-qiscus-omnichannel-to-your-chatbot/image1.webp\\",alt:\\"How to use Qiscus omnichannel to your chatbot\\",naturalHeight:1600,naturalWidth:1133}),`\\n`,(0,e.jsxs)(n.ol,{start:\\"4\\",children:[`\\n`,(0,e.jsxs)(n.li,{children:[\\"Click \\",(0,e.jsx)(n.strong,{children:\\"Submit\\"}),\\" to finish the deployment.\\"]}),`\\n`]}),`\\n`,(0,e.jsx)(n.p,{children:\\"If you already have an environment created, skip these steps.\\"}),`\\n`,(0,e.jsxs)(n.ol,{children:[`\\n`,(0,e.jsxs)(n.li,{children:[\\"Go to the \\",(0,e.jsx)(n.strong,{children:\\"Deployments > Environment\\"}),\\" menu.\\"]}),`\\n`]}),`\\n`,(0,e.jsx)(a,{caption:{title:\\"Figure 2\\",description:\\"Set up the environment, then set up the Qiscus channel.\\"},src:\\"/assets/images/tutorials/how-to-use-qiscus-omnichannel-to-your-chatbot/image2.webp\\",alt:\\"How to use Qiscus omnichannel to your chatbot\\",naturalHeight:505,naturalWidth:1600}),`\\n`,(0,e.jsxs)(n.ol,{start:\\"2\\",children:[`\\n`,(0,e.jsxs)(n.li,{children:[\\"Click the \\",(0,e.jsx)(n.strong,{children:\\"Create Environment\\"}),\\" button in any environment. You will see a drawer to create a new environment.\\"]}),`\\n`,(0,e.jsxs)(n.li,{children:[\\"Choose the \\",(0,e.jsx)(n.strong,{children:\\"development version\\"}),\\" you want (in this tutorial, we use the 1.0.0 version)\\"]}),`\\n`,(0,e.jsxs)(n.li,{children:[\\"Fill in the \\",(0,e.jsx)(n.strong,{children:\\"environment URL\\"}),\\". This environment URL is used for CMS. Learn more about CMS.\\"]}),`\\n`,(0,e.jsxs)(n.li,{children:[\\"Click \\",(0,e.jsx)(n.strong,{children:\\"Create\\"}),\\" to create the environment.\\"]}),`\\n`,(0,e.jsxs)(n.li,{children:[\\"Created environment now has a \\",(0,e.jsx)(n.strong,{children:\\"Create Channel\\"}),\\" button.\\"]}),`\\n`]}),`\\n`,(0,e.jsx)(n.p,{children:\\"Continue to choose Freshchat as a chatbot channel.\\"}),`\\n`,(0,e.jsxs)(n.ol,{children:[`\\n`,(0,e.jsxs)(n.li,{children:[\\"Click the \\",(0,e.jsx)(n.strong,{children:\\"Create Channel\\"}),\\" button to start adding channels to the environment. It will open up the Channel menu within the environment.\\"]}),`\\n`,(0,e.jsxs)(n.li,{children:[\\"Click the \\\\u201D\\",(0,e.jsx)(n.strong,{children:\\"+ Create Channel\\"}),\\"\\\\u201D button in the channel table list. It will show a menu to set up the channel.\\"]}),`\\n`,(0,e.jsxs)(n.li,{children:[\\"Choose \\",(0,e.jsx)(n.strong,{children:\\"Qiscus\\"}),\\" in Channel Type.\\"]}),`\\n`]}),`\\n`,(0,e.jsx)(a,{caption:{title:\\"Figure 3\\",description:\\"Create Qiscus channel\\"},src:\\"/assets/images/tutorials/how-to-use-qiscus-omnichannel-to-your-chatbot/image3.webp\\",alt:\\"How to use Qiscus omnichannel to your chatbot\\",naturalHeight:1238,naturalWidth:1530}),`\\n`,(0,e.jsxs)(u,{children:[(0,e.jsx)(d,{children:(0,e.jsxs)(p,{children:[(0,e.jsx)(c,{children:\\"Field Name\\"}),`\\n`,(0,e.jsx)(c,{children:\\"Functionality\\"}),`\\n`,(0,e.jsx)(c,{children:\\"Limitation\\"})]})}),(0,e.jsxs)(m,{children:[(0,e.jsxs)(s,{children:[(0,e.jsx)(o,{children:\\"Name\\"}),`\\n`,(0,e.jsx)(o,{children:\\"Your channel name\\"}),(0,e.jsx)(o,{children:(0,e.jsxs)(n.p,{children:[\\"Max. 30 characters must contain only alphanumeric characters (A-Z, a-z, 0-9), \\",(0,e.jsx)(n.code,{children:\\"-\\"}),\\", and \\",(0,e.jsx)(n.code,{children:\\"_\\"}),\\".\\"]})})]}),(0,e.jsxs)(s,{children:[(0,e.jsx)(o,{children:\\"Secret Key\\"}),`\\n`,(0,e.jsx)(o,{children:\\"Key credential from Qiscus\\"}),`\\n`,(0,e.jsx)(o,{children:\\"-\\"})]}),(0,e.jsxs)(s,{children:[(0,e.jsx)(o,{children:\\"Bot Token\\"}),`\\n`,(0,e.jsx)(o,{children:\\"Key credential from Qiscus \\"}),`\\n`,(0,e.jsx)(o,{children:\\"-\\"})]}),(0,e.jsxs)(s,{children:[(0,e.jsx)(o,{children:\\"Bot Email\\"}),`\\n`,(0,e.jsx)(o,{children:\\"Registered email that has Qiscus inbox for chatbo \\"}),`\\n`,(0,e.jsx)(o,{children:\\"Email only \\"})]}),(0,e.jsxs)(s,{children:[(0,e.jsx)(o,{children:\\"URL\\"}),`\\n`,(0,e.jsx)(o,{children:\\"Registered email that has Qiscus inbox for chatbot \\"}),`\\n`,(0,e.jsx)(o,{children:\\"HTTPS website only\\"})]})]})]}),`\\n`,(0,e.jsx)(n.p,{children:\\"To fill in the secret key, bot email, and URL, you need to set up a Qiscus inbox. So, let\\\\u2019s start.\\"}),`\\n`,(0,e.jsxs)(n.h2,{id:\\"register-and-login-to-qiscus\\",children:[(0,e.jsx)(n.a,{className:\\"anchor\\",href:\\"#register-and-login-to-qiscus\\",children:(0,e.jsx)(n.span,{className:\\"icon icon-link\\"})}),\\"Register and login to Qiscus\\"]}),`\\n`,(0,e.jsxs)(n.ol,{children:[`\\n`,(0,e.jsxs)(n.li,{children:[\\"Register to Qiscus Multichannel Chat Website (\\",(0,e.jsxs)(\\"a\\",{href:\\"https://multichannel.qiscus.com/\\",target:\\"_blank\\",children:[(0,e.jsx)(\\"span\\",{children:\\"http\\"}),\\"s://multichannel.qiscus.com/\\"]}),\\") to create a new app. You will be asked to fill in the information regarding your account.\\"]}),`\\n`,(0,e.jsx)(n.li,{children:\\"As soon as you sign up, you will get an email verification from Qiscus Multichannel Chat that you need to verify before using it. So check your email and verify it.\\"}),`\\n`,(0,e.jsx)(n.li,{children:\\"After verifying your account, you can log into the Qiscus Multichannel Chat dashboard via the login page. Please fill in your credentials to get into the dashboard.\\"}),`\\n`,(0,e.jsxs)(n.li,{children:[\\"Then, go to the \\",(0,e.jsx)(n.strong,{children:\\"Integration\\"}),\\" page.\\"]}),`\\n`]}),`\\n`,(0,e.jsxs)(n.h2,{id:\\"set-up-qiscus-integration\\",children:[(0,e.jsx)(n.a,{className:\\"anchor\\",href:\\"#set-up-qiscus-integration\\",children:(0,e.jsx)(n.span,{className:\\"icon icon-link\\"})}),\\"Set up Qiscus integration\\"]}),`\\n`,(0,e.jsxs)(n.ol,{children:[`\\n`,(0,e.jsxs)(n.li,{children:[\\"Enable the \\\\u201C\\",(0,e.jsx)(n.strong,{children:\\"Qiscus Widget\\"}),\\"\\\\u201D tab like shown in the picture below.\\"]}),`\\n`]}),`\\n`,(0,e.jsx)(a,{caption:{title:\\"Figure 4\\",description:\\"Enable Qiscus widget.\\"},src:\\"/assets/images/tutorials/how-to-use-qiscus-omnichannel-to-your-chatbot/image4.webp\\",alt:\\"How to use Qiscus omnichannel to your chatbot\\",naturalHeight:601,naturalWidth:1358}),`\\n`,(0,e.jsxs)(n.ol,{start:\\"2\\",children:[`\\n`,(0,e.jsx)(n.li,{children:\\"Copy the snippet code shown on the page and paste it into your website HTML. You can open your HTML later after you integrate the bot.\\"}),`\\n`,(0,e.jsxs)(n.li,{children:[\\"Next, you need to integrate the bot by enabling the \\\\u201C\\",(0,e.jsx)(n.strong,{children:\\"Bot Integration\\"}),\\"\\\\u201D in the \\",(0,e.jsx)(n.strong,{children:\\"Integration Page\\"}),\\".\\"]}),`\\n`,(0,e.jsx)(n.li,{children:\\"On this page, you will see Agent ID, App ID, Qiscus Secret Key, and URL required in Kata Platform to deploy the Qiscus bot. Copy all fields.\\"}),`\\n`]}),`\\n`,(0,e.jsx)(a,{caption:{title:\\"Figure 5\\",description:\\" Bot integration\\"},src:\\"/assets/images/tutorials/how-to-use-qiscus-omnichannel-to-your-chatbot/image5.webp\\",alt:\\"How to use Qiscus omnichannel to your chatbot\\",naturalHeight:636,naturalWidth:1354}),`\\n`,(0,e.jsx)(n.p,{children:\\"The next step is to paste the Agent ID, App ID, Qiscus Secret Key, and URL from Qiscus to the Kata Platform.\\"}),`\\n`,(0,e.jsxs)(n.ol,{children:[`\\n`,(0,e.jsxs)(n.li,{children:[\\"Go back to Kata Platform (\\",(0,e.jsxs)(\\"a\\",{href:\\"https://platform.kata.ai\\",target:\\"_blank\\",children:[(0,e.jsx)(\\"span\\",{children:\\"http\\"}),\\"s://platform.kata.ai\\"]}),\\")\\"]}),`\\n`,(0,e.jsx)(n.li,{children:\\"Paste the Agent ID, App ID, Qiscus Secret Key, and URL there. Here is the example:\\"}),`\\n`]}),`\\n`,(0,e.jsx)(a,{caption:{title:\\"Figure 6\\",description:\\"Paste the Agent ID, App ID, Qiscus Secret Key, and URL into channel configuration.\\"},src:\\"/assets/images/tutorials/how-to-use-qiscus-omnichannel-to-your-chatbot/image6.webp\\",alt:\\"How to use Qiscus omnichannel to your chatbot\\",naturalHeight:1230,naturalWidth:1388}),`\\n`,(0,e.jsxs)(n.ol,{start:\\"3\\",children:[`\\n`,(0,e.jsxs)(n.li,{children:[\\"Click \\",(0,e.jsx)(n.strong,{children:\\"Create\\"}),\\" to generate the webhook. You can see a webhook URL from the generated channel.\\"]}),`\\n`,(0,e.jsx)(n.li,{children:\\"Click the copy icon to copy the webhook URL.\\"}),`\\n`]}),`\\n`,(0,e.jsx)(a,{caption:{title:\\"Figure 7\\",description:\\" Copy webhook URL.\\"},src:\\"/assets/images/tutorials/how-to-use-qiscus-omnichannel-to-your-chatbot/image7.webp\\",alt:\\"How to use Qiscus omnichannel to your chatbot\\",naturalHeight:455,naturalWidth:1600}),`\\n`,(0,e.jsxs)(n.h2,{id:\\"finalize-qiscus-set-up\\",children:[(0,e.jsx)(n.a,{className:\\"anchor\\",href:\\"#finalize-qiscus-set-up\\",children:(0,e.jsx)(n.span,{className:\\"icon icon-link\\"})}),\\"Finalize Qiscus set up\\"]}),`\\n`,(0,e.jsxs)(n.ol,{children:[`\\n`,(0,e.jsxs)(n.li,{children:[\\"Go back to Qiscus dashboard \\",(0,e.jsxs)(\\"a\\",{href:\\"https://multichannel.qiscus.com/web/welcome\\",target:\\"_blank\\",children:[(0,e.jsx)(\\"span\\",{children:\\"http\\"}),\\"s://multichannel.qiscus.com/web/welcome\\"]})]}),`\\n`,(0,e.jsxs)(n.li,{children:[\\"Then, go to the \\\\u201C\\",(0,e.jsx)(n.strong,{children:\\"Bot Integration\\"}),\\"\\\\u201D tab. Make sure you\\\\u2019ve enabled it.\\"]}),`\\n`,(0,e.jsx)(n.li,{children:\\"Next, paste the webhook URL in \\\\u201CBot Webhook URL.\\\\u201D\\"}),`\\n`]}),`\\n`,(0,e.jsx)(a,{caption:{title:\\"Figure 8\\",description:\\"Paste webhook URL\\"},src:\\"/assets/images/tutorials/how-to-use-qiscus-omnichannel-to-your-chatbot/image8.webp\\",alt:\\"How to use Qiscus omnichannel to your chatbot\\",naturalHeight:636,naturalWidth:1354}),`\\n`,(0,e.jsxs)(n.ol,{start:\\"4\\",children:[`\\n`,(0,e.jsxs)(n.li,{children:[\\"Finally, click \\\\u201C\\",(0,e.jsx)(n.strong,{children:\\"Connect\\"}),\\"\\\\u201D.\\"]}),`\\n`]}),`\\n`,(0,e.jsxs)(n.p,{children:[\\"This is the end of the guidance. You can contact \\",(0,e.jsx)(n.a,{href:\\"mailto:support@kata.ai\\",children:\\"support@kata.ai\\"}),\\" if you have any difficulties when implementing this.\\"]})]})}}var L=I;function r(t,i){throw new Error(\\"Expected \\"+(i?\\"component\\":\\"object\\")+\\" `\\"+t+\\"` to be defined: you likely forgot to import, pass, or provide it.\\")}return q(F);})();\\n;return Component;"},"_id":"tutorials/how-to-use-qiscus-omnichannel-to-your-chatbot.mdx","_raw":{"sourceFilePath":"tutorials/how-to-use-qiscus-omnichannel-to-your-chatbot.mdx","sourceFileName":"how-to-use-qiscus-omnichannel-to-your-chatbot.mdx","sourceFileDir":"tutorials","contentType":"mdx","flattenedPath":"tutorials/how-to-use-qiscus-omnichannel-to-your-chatbot"},"type":"Tutorials","slug":["how-to-use-qiscus-omnichannel-to-your-chatbot"],"excerpt":"\\nQiscus is an AI compliant, secure and flexible chat SDK for apps and websites. They also provide a multichannel customer service chat solution that is now popular"}');
;// CONCATENATED MODULE: ./.contentlayer/generated/Tutorials/tutorials__how-to-use-slack-as-your-chatbot-messaging-platform.mdx.json
const tutorials_how_to_use_slack_as_your_chatbot_messaging_platform_mdx_namespaceObject = JSON.parse('{"layout":"tutorial","id":"how-to-use-slack-as-your-chatbot-messaging-platform","imgSpot":"/assets/images/tutorials/spot-slack.webp","product":"kata-platform","title":"How to use Slack as your chatbot messaging platform","date":"2021-08-26T07:00:00+07:00","body":{"raw":"\\nSlack is a messaging platform that is commonly used for office and community. In this tutorial, you will learn how to deploy your chatbot to the Slack channel. So, let’s get started.\\n\\n## Deploy your chatbot\\n\\n1. Click **Deploy** menu in the left sidebar\\n2. On the Deploy page, click on the **New Deployment** button in the top right corner. It will open up the Create Deployment menu.\\n3. Choose any deployment version you want to deploy and fill in the changelog.\\n\\n<FigureImage\\n  caption={{ title: \'Figure 1\', description: `Create a new deployment` }}\\n  src=\\"/assets/images/tutorials/how-to-use-slack-as-your-chatbot-messaging-platform/image1.webp\\"\\n  alt=\\"How to use Slack as your chatbot messaging platform\\"\\n  naturalHeight={1600}\\n  naturalWidth={1133}\\n/>\\n\\n4. Click **Submit** to finish the deployment\\n\\nIf you already have an environment created, skip these steps.\\n\\n1. Go to the **Deployments > Environment** menu.\\n\\n<FigureImage\\n  caption={{ title: \'Figure 2\', description: `Set up environment, then set up Slack channel` }}\\n  src=\\"/assets/images/tutorials/how-to-use-slack-as-your-chatbot-messaging-platform/image2.webp\\"\\n  alt=\\"How to use Slack as your chatbot messaging platform\\"\\n  naturalHeight={505}\\n  naturalWidth={1600}\\n/>\\n\\n2. Click the **Create Environment** button in any environment. You will see a drawer to create a new environment.\\n3. Choose the **development version** you want (in this tutorial, we use the 1.0.0 version)\\n4. Fill in the **environment URL**. This environment URL is used for CMS. Learn more about CMS.\\n5. Click **Create** to create the environment.\\n6. Created environment now has a **Create Channel** button.\\n\\nContinue to choose Slack as a chatbot channel.\\n\\n1. Click the **Create Channel** button to start adding channels to the environment. It will open up the Channel menu within the environment.\\n2. Click the ”**+ Create Channel**” button in the channel table list. A menu to set up the channel will be shown.\\n3. Choose **Slack** in Channel Type.\\n\\n<FigureImage\\n  caption={{ title: \'Figure 3\', description: `Create Slack channel` }}\\n  src=\\"/assets/images/tutorials/how-to-use-slack-as-your-chatbot-messaging-platform/image3.webp\\"\\n  alt=\\"How to use Slack as your chatbot messaging platform\\"\\n  naturalHeight={872}\\n  naturalWidth={1434}\\n/>\\n\\n<Table>\\n  <TableHead>\\n    <TableHeadRow>\\n      <TableHeadCell>Field Name</TableHeadCell>\\n      <TableHeadCell>Functionality</TableHeadCell>\\n      <TableHeadCell>Limitation</TableHeadCell>\\n    </TableHeadRow>\\n  </TableHead>\\n  <TableBody>\\n    <TableBodyRow>\\n      <TableBodyCell>Name</TableBodyCell>\\n      <TableBodyCell>Your channel name</TableBodyCell>\\n      <TableBodyCell>\\n        Max. 30 characters must contain only alphanumeric characters (A-Z, a-z, 0-9), `-`, and `_`.\\n      </TableBodyCell>\\n    </TableBodyRow>\\n    <TableBodyRow>\\n      <TableBodyCell>Bot Token</TableBodyCell>\\n      <TableBodyCell>Slack token</TableBodyCell>\\n      <TableBodyCell>-</TableBodyCell>\\n    </TableBodyRow>\\n  </TableBody>\\n</Table>\\n\\n## Create Slack app\\n\\n1. First thing first, you need to sign in into your Slack Team to create a new app and get its token. After logging in, open this URL <a href=\\"https://api.slack.com/slack-apps\\" target=\\"_blank\\"><span>http</span>s://api.slack.com/slack-apps</a>.\\n2. Click on the **“Create an App”** button, then choose **“From scratch”**.\\n3. Fill in the required fields. Next, choose your “**Development Slack Team**”.\\n\\n<FigureImage\\n  caption={{ title: \'Figure 4\', description: `Create a Slack app` }}\\n  src=\\"/assets/images/tutorials/how-to-use-slack-as-your-chatbot-messaging-platform/image4.webp\\"\\n  alt=\\"How to use Slack as your chatbot messaging platform\\"\\n  naturalHeight={852}\\n  naturalWidth={1919}\\n/>\\n\\n4. Click the “**Create App**” button.\\n5. Open **“OAuth & Permissions”** in the **“Scopes”** section. You should fill in the add permission by clicking **“Add an OAuth Scope”**.\\n\\n<FigureImage\\n  caption={{ title: \'Figure 5\', description: `Add an OAuth Scope` }}\\n  src=\\"/assets/images/tutorials/how-to-use-slack-as-your-chatbot-messaging-platform/image5.webp\\"\\n  alt=\\"How to use Slack as your chatbot messaging platform\\"\\n  naturalHeight={437}\\n  naturalWidth={741}\\n/>\\n\\n6. Scroll up to the section **\\"OAuth Token for Your Workspace\\"**, then click **\\"Install to Workspace\\"**.\\n\\n<FigureImage\\n  caption={{ title: \'Figure 6\', description: `Install to Workspace` }}\\n  src=\\"/assets/images/tutorials/how-to-use-slack-as-your-chatbot-messaging-platform/image6.webp\\"\\n  alt=\\"How to use Slack as your chatbot messaging platform\\"\\n  naturalHeight={748}\\n  naturalWidth={733}\\n/>\\n\\n7. Click the **“Allow”** button.\\n8. Still in the **“OAuth & Permissions”**, you will get **“OAuth Token for Your Workspace”** and **“Bot User OAuth Token”**. Copy this **“Bot User OAuth Token”** to deploy our bot using the Kata Platform.\\n\\nNext step is to paste the access token from Slack to the Kata Platform.\\n\\n1. Go back to Kata Platform (<a href=\\"https://platform.kata.ai\\" target=\\"_blank\\"><span>http</span>s://platform.kata.ai</a>)\\n2. Paste the **Bot User OAuth Token** there. Here is the example:\\n\\n<FigureImage\\n  caption={{ title: \'Figure 7\', description: `Paste Bot User OAuth Token from Slack here.` }}\\n  src=\\"/assets/images/tutorials/how-to-use-slack-as-your-chatbot-messaging-platform/image7.webp\\"\\n  alt=\\"How to use Slack as your chatbot messaging platform\\"\\n  naturalHeight={638}\\n  naturalWidth={1999}\\n/>\\n\\n3. Click **Create** to generate the webhook. You can see a webhook URL from the generated channel.\\n4. Click the copy icon to copy the webhook URL.\\n\\n<FigureImage\\n  caption={{ title: \'Figure 8\', description: `Copy webhook URL` }}\\n  src=\\"/assets/images/tutorials/how-to-use-slack-as-your-chatbot-messaging-platform/image8.webp\\"\\n  alt=\\"How to use Slack as your chatbot messaging platform\\"\\n  naturalHeight={386}\\n  naturalWidth={1999}\\n/>\\n\\n## Finalize Slack set up\\n\\n1. Go back to Slack <a href=\\"https://api.slack.com/slack-apps\\" target=\\"_blank\\"><span>http</span>s://api.slack.com/slack-apps</a>\\n2. Then, click on the “**Event Subscriptions**” tab.\\n\\n<FigureImage\\n  caption={{ title: \'Figure 9\', description: `Event Subscription menu.` }}\\n  src=\\"/assets/images/tutorials/how-to-use-slack-as-your-chatbot-messaging-platform/image9.webp\\"\\n  alt=\\"How to use Slack as your chatbot messaging platform\\"\\n  naturalHeight={648}\\n  naturalWidth={1060}\\n/>\\n\\n3. Next, turn on the “**Enable Events**” toggle.\\n\\n<FigureImage\\n  caption={{ title: \'Figure 10\', description: `Turn on Enable Events toggle.` }}\\n  src=\\"/assets/images/tutorials/how-to-use-slack-as-your-chatbot-messaging-platform/image10.webp\\"\\n  alt=\\"How to use Slack as your chatbot messaging platform\\"\\n  naturalHeight={1023}\\n  naturalWidth={1999}\\n/>\\n\\n4. You will see the “**Request URL**” field. Then, paste the **webhook URL**.\\n\\n<FigureImage\\n  caption={{ title: \'Figure 11\', description: `Request URL` }}\\n  src=\\"/assets/images/tutorials/how-to-use-slack-as-your-chatbot-messaging-platform/image11.webp\\"\\n  alt=\\"How to use Slack as your chatbot messaging platform\\"\\n  naturalHeight={1264}\\n  naturalWidth={1999}\\n/>\\n\\n5. Expand the “**Subscribe to bot events**” then **“add Bot User Event”** like in the below image.\\n\\n<FigureImage\\n  caption={{ title: \'Figure 12\', description: ` Subscribe to bot events` }}\\n  src=\\"/assets/images/tutorials/how-to-use-slack-as-your-chatbot-messaging-platform/image12.webp\\"\\n  alt=\\"How to use Slack as your chatbot messaging platform\\"\\n  naturalHeight={656}\\n  naturalWidth={1049}\\n/>\\n\\n6. Next, click **“App Home”**, go to the section **“Your App’s Presence in the Slack”** then turn on **“Always Show My Bot as Online“** toggle.\\n\\n<FigureImage\\n  caption={{ title: \'Figure 13\', description: `Turn on “Always Show My Bot as Online“ toggle.` }}\\n  src=\\"/assets/images/tutorials/how-to-use-slack-as-your-chatbot-messaging-platform/image13.webp\\"\\n  alt=\\"How to use Slack as your chatbot messaging platform\\"\\n  naturalHeight={1549}\\n  naturalWidth={1999}\\n/>\\n\\n7. Next, go to section **Show tabs**, then click the checkbox **“Allow user to send slash commands and messages from messages tab”** to make sure your user can send direct messages to your bot.\\n\\n<FigureImage\\n  caption={{\\n    title: \'Figure 14\',\\n    description: `Click the checkbox “Allow user to send slash commands and messages from messages tab”`,\\n  }}\\n  src=\\"/assets/images/tutorials/how-to-use-slack-as-your-chatbot-messaging-platform/image14.webp\\"\\n  alt=\\"How to use Slack as your chatbot messaging platform\\"\\n  naturalHeight={1192}\\n  naturalWidth={1508}\\n/>\\n\\n8. Go to your slack, click **“Add apps”**, then search your bot name, and finally, now you can share your newly created chatbot with your friends.\\n\\n<FigureImage\\n  caption={{\\n    title: \'Figure 15\',\\n    description: `Successfully deployed Slack bot`,\\n  }}\\n  src=\\"/assets/images/tutorials/how-to-use-slack-as-your-chatbot-messaging-platform/image15.webp\\"\\n  alt=\\"How to use Slack as your chatbot messaging platform\\"\\n  naturalHeight={988}\\n  naturalWidth={818}\\n/>\\n\\nThis is the end of the guidance, you can contact support@kata.ai if you have any difficulties when implementing this.\\n","code":"var Component=(()=>{var f=Object.create;var c=Object.defineProperty;var w=Object.getOwnPropertyDescriptor;var S=Object.getOwnPropertyNames;var C=Object.getPrototypeOf,H=Object.prototype.hasOwnProperty;var m=n=>c(n,\\"__esModule\\",{value:!0});var T=(n,a)=>()=>(a||n((a={exports:{}}).exports,a),a.exports),v=(n,a)=>{for(var i in a)c(n,i,{get:a[i],enumerable:!0})},k=(n,a,i,t)=>{if(a&&typeof a==\\"object\\"||typeof a==\\"function\\")for(let o of S(a))!H.call(n,o)&&(i||o!==\\"default\\")&&c(n,o,{get:()=>a[o],enumerable:!(t=w(a,o))||t.enumerable});return n},F=(n,a)=>k(m(c(n!=null?f(C(n)):{},\\"default\\",!a&&n&&n.__esModule?{get:()=>n.default,enumerable:!0}:{value:n,enumerable:!0})),n),A=(n=>(a,i)=>n&&n.get(a)||(i=k(m({}),a,1),n&&n.set(a,i),i))(typeof WeakMap!=\\"undefined\\"?new WeakMap:0);var y=T((N,b)=>{b.exports=_jsx_runtime});var R={};v(R,{default:()=>O,frontmatter:()=>x});var e=F(y()),x={layout:\\"tutorial\\",title:\\"How to use Slack as your chatbot messaging platform\\",id:\\"how-to-use-slack-as-your-chatbot-messaging-platform\\",imgSpot:\\"/assets/images/tutorials/spot-slack.webp\\",product:\\"kata-platform\\",date:\\"2021-08-26T07:00:00+07:00\\"};function W(n={}){let{wrapper:a}=n.components||{};return a?(0,e.jsx)(a,Object.assign({},n,{children:(0,e.jsx)(i,{})})):i();function i(){let t=Object.assign({p:\\"p\\",h2:\\"h2\\",a:\\"a\\",span:\\"span\\",ol:\\"ol\\",li:\\"li\\",strong:\\"strong\\",code:\\"code\\"},n.components),{FigureImage:o,Table:d,TableHead:u,TableHeadRow:g,TableHeadCell:r,TableBody:p,TableBodyRow:h,TableBodyCell:s}=t;return o||l(\\"FigureImage\\",!0),d||l(\\"Table\\",!0),p||l(\\"TableBody\\",!0),s||l(\\"TableBodyCell\\",!0),h||l(\\"TableBodyRow\\",!0),u||l(\\"TableHead\\",!0),r||l(\\"TableHeadCell\\",!0),g||l(\\"TableHeadRow\\",!0),(0,e.jsxs)(e.Fragment,{children:[(0,e.jsx)(t.p,{children:\\"Slack is a messaging platform that is commonly used for office and community. In this tutorial, you will learn how to deploy your chatbot to the Slack channel. So, let\\\\u2019s get started.\\"}),`\\n`,(0,e.jsxs)(t.h2,{id:\\"deploy-your-chatbot\\",children:[(0,e.jsx)(t.a,{className:\\"anchor\\",href:\\"#deploy-your-chatbot\\",children:(0,e.jsx)(t.span,{className:\\"icon icon-link\\"})}),\\"Deploy your chatbot\\"]}),`\\n`,(0,e.jsxs)(t.ol,{children:[`\\n`,(0,e.jsxs)(t.li,{children:[\\"Click \\",(0,e.jsx)(t.strong,{children:\\"Deploy\\"}),\\" menu in the left sidebar\\"]}),`\\n`,(0,e.jsxs)(t.li,{children:[\\"On the Deploy page, click on the \\",(0,e.jsx)(t.strong,{children:\\"New Deployment\\"}),\\" button in the top right corner. It will open up the Create Deployment menu.\\"]}),`\\n`,(0,e.jsx)(t.li,{children:\\"Choose any deployment version you want to deploy and fill in the changelog.\\"}),`\\n`]}),`\\n`,(0,e.jsx)(o,{caption:{title:\\"Figure 1\\",description:\\"Create a new deployment\\"},src:\\"/assets/images/tutorials/how-to-use-slack-as-your-chatbot-messaging-platform/image1.webp\\",alt:\\"How to use Slack as your chatbot messaging platform\\",naturalHeight:1600,naturalWidth:1133}),`\\n`,(0,e.jsxs)(t.ol,{start:\\"4\\",children:[`\\n`,(0,e.jsxs)(t.li,{children:[\\"Click \\",(0,e.jsx)(t.strong,{children:\\"Submit\\"}),\\" to finish the deployment\\"]}),`\\n`]}),`\\n`,(0,e.jsx)(t.p,{children:\\"If you already have an environment created, skip these steps.\\"}),`\\n`,(0,e.jsxs)(t.ol,{children:[`\\n`,(0,e.jsxs)(t.li,{children:[\\"Go to the \\",(0,e.jsx)(t.strong,{children:\\"Deployments > Environment\\"}),\\" menu.\\"]}),`\\n`]}),`\\n`,(0,e.jsx)(o,{caption:{title:\\"Figure 2\\",description:\\"Set up environment, then set up Slack channel\\"},src:\\"/assets/images/tutorials/how-to-use-slack-as-your-chatbot-messaging-platform/image2.webp\\",alt:\\"How to use Slack as your chatbot messaging platform\\",naturalHeight:505,naturalWidth:1600}),`\\n`,(0,e.jsxs)(t.ol,{start:\\"2\\",children:[`\\n`,(0,e.jsxs)(t.li,{children:[\\"Click the \\",(0,e.jsx)(t.strong,{children:\\"Create Environment\\"}),\\" button in any environment. You will see a drawer to create a new environment.\\"]}),`\\n`,(0,e.jsxs)(t.li,{children:[\\"Choose the \\",(0,e.jsx)(t.strong,{children:\\"development version\\"}),\\" you want (in this tutorial, we use the 1.0.0 version)\\"]}),`\\n`,(0,e.jsxs)(t.li,{children:[\\"Fill in the \\",(0,e.jsx)(t.strong,{children:\\"environment URL\\"}),\\". This environment URL is used for CMS. Learn more about CMS.\\"]}),`\\n`,(0,e.jsxs)(t.li,{children:[\\"Click \\",(0,e.jsx)(t.strong,{children:\\"Create\\"}),\\" to create the environment.\\"]}),`\\n`,(0,e.jsxs)(t.li,{children:[\\"Created environment now has a \\",(0,e.jsx)(t.strong,{children:\\"Create Channel\\"}),\\" button.\\"]}),`\\n`]}),`\\n`,(0,e.jsx)(t.p,{children:\\"Continue to choose Slack as a chatbot channel.\\"}),`\\n`,(0,e.jsxs)(t.ol,{children:[`\\n`,(0,e.jsxs)(t.li,{children:[\\"Click the \\",(0,e.jsx)(t.strong,{children:\\"Create Channel\\"}),\\" button to start adding channels to the environment. It will open up the Channel menu within the environment.\\"]}),`\\n`,(0,e.jsxs)(t.li,{children:[\\"Click the \\\\u201D\\",(0,e.jsx)(t.strong,{children:\\"+ Create Channel\\"}),\\"\\\\u201D button in the channel table list. A menu to set up the channel will be shown.\\"]}),`\\n`,(0,e.jsxs)(t.li,{children:[\\"Choose \\",(0,e.jsx)(t.strong,{children:\\"Slack\\"}),\\" in Channel Type.\\"]}),`\\n`]}),`\\n`,(0,e.jsx)(o,{caption:{title:\\"Figure 3\\",description:\\"Create Slack channel\\"},src:\\"/assets/images/tutorials/how-to-use-slack-as-your-chatbot-messaging-platform/image3.webp\\",alt:\\"How to use Slack as your chatbot messaging platform\\",naturalHeight:872,naturalWidth:1434}),`\\n`,(0,e.jsxs)(d,{children:[(0,e.jsx)(u,{children:(0,e.jsxs)(g,{children:[(0,e.jsx)(r,{children:\\"Field Name\\"}),`\\n`,(0,e.jsx)(r,{children:\\"Functionality\\"}),`\\n`,(0,e.jsx)(r,{children:\\"Limitation\\"})]})}),(0,e.jsxs)(p,{children:[(0,e.jsxs)(h,{children:[(0,e.jsx)(s,{children:\\"Name\\"}),`\\n`,(0,e.jsx)(s,{children:\\"Your channel name\\"}),(0,e.jsx)(s,{children:(0,e.jsxs)(t.p,{children:[\\"Max. 30 characters must contain only alphanumeric characters (A-Z, a-z, 0-9), \\",(0,e.jsx)(t.code,{children:\\"-\\"}),\\", and \\",(0,e.jsx)(t.code,{children:\\"_\\"}),\\".\\"]})})]}),(0,e.jsxs)(h,{children:[(0,e.jsx)(s,{children:\\"Bot Token\\"}),`\\n`,(0,e.jsx)(s,{children:\\"Slack token\\"}),`\\n`,(0,e.jsx)(s,{children:\\"-\\"})]})]})]}),`\\n`,(0,e.jsxs)(t.h2,{id:\\"create-slack-app\\",children:[(0,e.jsx)(t.a,{className:\\"anchor\\",href:\\"#create-slack-app\\",children:(0,e.jsx)(t.span,{className:\\"icon icon-link\\"})}),\\"Create Slack app\\"]}),`\\n`,(0,e.jsxs)(t.ol,{children:[`\\n`,(0,e.jsxs)(t.li,{children:[\\"First thing first, you need to sign in into your Slack Team to create a new app and get its token. After logging in, open this URL \\",(0,e.jsxs)(\\"a\\",{href:\\"https://api.slack.com/slack-apps\\",target:\\"_blank\\",children:[(0,e.jsx)(\\"span\\",{children:\\"http\\"}),\\"s://api.slack.com/slack-apps\\"]}),\\".\\"]}),`\\n`,(0,e.jsxs)(t.li,{children:[\\"Click on the \\",(0,e.jsx)(t.strong,{children:\\"\\\\u201CCreate an App\\\\u201D\\"}),\\" button, then choose \\",(0,e.jsx)(t.strong,{children:\\"\\\\u201CFrom scratch\\\\u201D\\"}),\\".\\"]}),`\\n`,(0,e.jsxs)(t.li,{children:[\\"Fill in the required fields. Next, choose your \\\\u201C\\",(0,e.jsx)(t.strong,{children:\\"Development Slack Team\\"}),\\"\\\\u201D.\\"]}),`\\n`]}),`\\n`,(0,e.jsx)(o,{caption:{title:\\"Figure 4\\",description:\\"Create a Slack app\\"},src:\\"/assets/images/tutorials/how-to-use-slack-as-your-chatbot-messaging-platform/image4.webp\\",alt:\\"How to use Slack as your chatbot messaging platform\\",naturalHeight:852,naturalWidth:1919}),`\\n`,(0,e.jsxs)(t.ol,{start:\\"4\\",children:[`\\n`,(0,e.jsxs)(t.li,{children:[\\"Click the \\\\u201C\\",(0,e.jsx)(t.strong,{children:\\"Create App\\"}),\\"\\\\u201D button.\\"]}),`\\n`,(0,e.jsxs)(t.li,{children:[\\"Open \\",(0,e.jsx)(t.strong,{children:\\"\\\\u201COAuth & Permissions\\\\u201D\\"}),\\" in the \\",(0,e.jsx)(t.strong,{children:\\"\\\\u201CScopes\\\\u201D\\"}),\\" section. You should fill in the add permission by clicking \\",(0,e.jsx)(t.strong,{children:\\"\\\\u201CAdd an OAuth Scope\\\\u201D\\"}),\\".\\"]}),`\\n`]}),`\\n`,(0,e.jsx)(o,{caption:{title:\\"Figure 5\\",description:\\"Add an OAuth Scope\\"},src:\\"/assets/images/tutorials/how-to-use-slack-as-your-chatbot-messaging-platform/image5.webp\\",alt:\\"How to use Slack as your chatbot messaging platform\\",naturalHeight:437,naturalWidth:741}),`\\n`,(0,e.jsxs)(t.ol,{start:\\"6\\",children:[`\\n`,(0,e.jsxs)(t.li,{children:[\\"Scroll up to the section \\",(0,e.jsx)(t.strong,{children:\'\\"OAuth Token for Your Workspace\\"\'}),\\", then click \\",(0,e.jsx)(t.strong,{children:\'\\"Install to Workspace\\"\'}),\\".\\"]}),`\\n`]}),`\\n`,(0,e.jsx)(o,{caption:{title:\\"Figure 6\\",description:\\"Install to Workspace\\"},src:\\"/assets/images/tutorials/how-to-use-slack-as-your-chatbot-messaging-platform/image6.webp\\",alt:\\"How to use Slack as your chatbot messaging platform\\",naturalHeight:748,naturalWidth:733}),`\\n`,(0,e.jsxs)(t.ol,{start:\\"7\\",children:[`\\n`,(0,e.jsxs)(t.li,{children:[\\"Click the \\",(0,e.jsx)(t.strong,{children:\\"\\\\u201CAllow\\\\u201D\\"}),\\" button.\\"]}),`\\n`,(0,e.jsxs)(t.li,{children:[\\"Still in the \\",(0,e.jsx)(t.strong,{children:\\"\\\\u201COAuth & Permissions\\\\u201D\\"}),\\", you will get \\",(0,e.jsx)(t.strong,{children:\\"\\\\u201COAuth Token for Your Workspace\\\\u201D\\"}),\\" and \\",(0,e.jsx)(t.strong,{children:\\"\\\\u201CBot User OAuth Token\\\\u201D\\"}),\\". Copy this \\",(0,e.jsx)(t.strong,{children:\\"\\\\u201CBot User OAuth Token\\\\u201D\\"}),\\" to deploy our bot using the Kata Platform.\\"]}),`\\n`]}),`\\n`,(0,e.jsx)(t.p,{children:\\"Next step is to paste the access token from Slack to the Kata Platform.\\"}),`\\n`,(0,e.jsxs)(t.ol,{children:[`\\n`,(0,e.jsxs)(t.li,{children:[\\"Go back to Kata Platform (\\",(0,e.jsxs)(\\"a\\",{href:\\"https://platform.kata.ai\\",target:\\"_blank\\",children:[(0,e.jsx)(\\"span\\",{children:\\"http\\"}),\\"s://platform.kata.ai\\"]}),\\")\\"]}),`\\n`,(0,e.jsxs)(t.li,{children:[\\"Paste the \\",(0,e.jsx)(t.strong,{children:\\"Bot User OAuth Token\\"}),\\" there. Here is the example:\\"]}),`\\n`]}),`\\n`,(0,e.jsx)(o,{caption:{title:\\"Figure 7\\",description:\\"Paste Bot User OAuth Token from Slack here.\\"},src:\\"/assets/images/tutorials/how-to-use-slack-as-your-chatbot-messaging-platform/image7.webp\\",alt:\\"How to use Slack as your chatbot messaging platform\\",naturalHeight:638,naturalWidth:1999}),`\\n`,(0,e.jsxs)(t.ol,{start:\\"3\\",children:[`\\n`,(0,e.jsxs)(t.li,{children:[\\"Click \\",(0,e.jsx)(t.strong,{children:\\"Create\\"}),\\" to generate the webhook. You can see a webhook URL from the generated channel.\\"]}),`\\n`,(0,e.jsx)(t.li,{children:\\"Click the copy icon to copy the webhook URL.\\"}),`\\n`]}),`\\n`,(0,e.jsx)(o,{caption:{title:\\"Figure 8\\",description:\\"Copy webhook URL\\"},src:\\"/assets/images/tutorials/how-to-use-slack-as-your-chatbot-messaging-platform/image8.webp\\",alt:\\"How to use Slack as your chatbot messaging platform\\",naturalHeight:386,naturalWidth:1999}),`\\n`,(0,e.jsxs)(t.h2,{id:\\"finalize-slack-set-up\\",children:[(0,e.jsx)(t.a,{className:\\"anchor\\",href:\\"#finalize-slack-set-up\\",children:(0,e.jsx)(t.span,{className:\\"icon icon-link\\"})}),\\"Finalize Slack set up\\"]}),`\\n`,(0,e.jsxs)(t.ol,{children:[`\\n`,(0,e.jsxs)(t.li,{children:[\\"Go back to Slack \\",(0,e.jsxs)(\\"a\\",{href:\\"https://api.slack.com/slack-apps\\",target:\\"_blank\\",children:[(0,e.jsx)(\\"span\\",{children:\\"http\\"}),\\"s://api.slack.com/slack-apps\\"]})]}),`\\n`,(0,e.jsxs)(t.li,{children:[\\"Then, click on the \\\\u201C\\",(0,e.jsx)(t.strong,{children:\\"Event Subscriptions\\"}),\\"\\\\u201D tab.\\"]}),`\\n`]}),`\\n`,(0,e.jsx)(o,{caption:{title:\\"Figure 9\\",description:\\"Event Subscription menu.\\"},src:\\"/assets/images/tutorials/how-to-use-slack-as-your-chatbot-messaging-platform/image9.webp\\",alt:\\"How to use Slack as your chatbot messaging platform\\",naturalHeight:648,naturalWidth:1060}),`\\n`,(0,e.jsxs)(t.ol,{start:\\"3\\",children:[`\\n`,(0,e.jsxs)(t.li,{children:[\\"Next, turn on the \\\\u201C\\",(0,e.jsx)(t.strong,{children:\\"Enable Events\\"}),\\"\\\\u201D toggle.\\"]}),`\\n`]}),`\\n`,(0,e.jsx)(o,{caption:{title:\\"Figure 10\\",description:\\"Turn on Enable Events toggle.\\"},src:\\"/assets/images/tutorials/how-to-use-slack-as-your-chatbot-messaging-platform/image10.webp\\",alt:\\"How to use Slack as your chatbot messaging platform\\",naturalHeight:1023,naturalWidth:1999}),`\\n`,(0,e.jsxs)(t.ol,{start:\\"4\\",children:[`\\n`,(0,e.jsxs)(t.li,{children:[\\"You will see the \\\\u201C\\",(0,e.jsx)(t.strong,{children:\\"Request URL\\"}),\\"\\\\u201D field. Then, paste the \\",(0,e.jsx)(t.strong,{children:\\"webhook URL\\"}),\\".\\"]}),`\\n`]}),`\\n`,(0,e.jsx)(o,{caption:{title:\\"Figure 11\\",description:\\"Request URL\\"},src:\\"/assets/images/tutorials/how-to-use-slack-as-your-chatbot-messaging-platform/image11.webp\\",alt:\\"How to use Slack as your chatbot messaging platform\\",naturalHeight:1264,naturalWidth:1999}),`\\n`,(0,e.jsxs)(t.ol,{start:\\"5\\",children:[`\\n`,(0,e.jsxs)(t.li,{children:[\\"Expand the \\\\u201C\\",(0,e.jsx)(t.strong,{children:\\"Subscribe to bot events\\"}),\\"\\\\u201D then \\",(0,e.jsx)(t.strong,{children:\\"\\\\u201Cadd Bot User Event\\\\u201D\\"}),\\" like in the below image.\\"]}),`\\n`]}),`\\n`,(0,e.jsx)(o,{caption:{title:\\"Figure 12\\",description:\\" Subscribe to bot events\\"},src:\\"/assets/images/tutorials/how-to-use-slack-as-your-chatbot-messaging-platform/image12.webp\\",alt:\\"How to use Slack as your chatbot messaging platform\\",naturalHeight:656,naturalWidth:1049}),`\\n`,(0,e.jsxs)(t.ol,{start:\\"6\\",children:[`\\n`,(0,e.jsxs)(t.li,{children:[\\"Next, click \\",(0,e.jsx)(t.strong,{children:\\"\\\\u201CApp Home\\\\u201D\\"}),\\", go to the section \\",(0,e.jsx)(t.strong,{children:\\"\\\\u201CYour App\\\\u2019s Presence in the Slack\\\\u201D\\"}),\\" then turn on \\",(0,e.jsx)(t.strong,{children:\\"\\\\u201CAlways Show My Bot as Online\\\\u201C\\"}),\\" toggle.\\"]}),`\\n`]}),`\\n`,(0,e.jsx)(o,{caption:{title:\\"Figure 13\\",description:\\"Turn on \\\\u201CAlways Show My Bot as Online\\\\u201C toggle.\\"},src:\\"/assets/images/tutorials/how-to-use-slack-as-your-chatbot-messaging-platform/image13.webp\\",alt:\\"How to use Slack as your chatbot messaging platform\\",naturalHeight:1549,naturalWidth:1999}),`\\n`,(0,e.jsxs)(t.ol,{start:\\"7\\",children:[`\\n`,(0,e.jsxs)(t.li,{children:[\\"Next, go to section \\",(0,e.jsx)(t.strong,{children:\\"Show tabs\\"}),\\", then click the checkbox \\",(0,e.jsx)(t.strong,{children:\\"\\\\u201CAllow user to send slash commands and messages from messages tab\\\\u201D\\"}),\\" to make sure your user can send direct messages to your bot.\\"]}),`\\n`]}),`\\n`,(0,e.jsx)(o,{caption:{title:\\"Figure 14\\",description:\\"Click the checkbox \\\\u201CAllow user to send slash commands and messages from messages tab\\\\u201D\\"},src:\\"/assets/images/tutorials/how-to-use-slack-as-your-chatbot-messaging-platform/image14.webp\\",alt:\\"How to use Slack as your chatbot messaging platform\\",naturalHeight:1192,naturalWidth:1508}),`\\n`,(0,e.jsxs)(t.ol,{start:\\"8\\",children:[`\\n`,(0,e.jsxs)(t.li,{children:[\\"Go to your slack, click \\",(0,e.jsx)(t.strong,{children:\\"\\\\u201CAdd apps\\\\u201D\\"}),\\", then search your bot name, and finally, now you can share your newly created chatbot with your friends.\\"]}),`\\n`]}),`\\n`,(0,e.jsx)(o,{caption:{title:\\"Figure 15\\",description:\\"Successfully deployed Slack bot\\"},src:\\"/assets/images/tutorials/how-to-use-slack-as-your-chatbot-messaging-platform/image15.webp\\",alt:\\"How to use Slack as your chatbot messaging platform\\",naturalHeight:988,naturalWidth:818}),`\\n`,(0,e.jsxs)(t.p,{children:[\\"This is the end of the guidance, you can contact \\",(0,e.jsx)(t.a,{href:\\"mailto:support@kata.ai\\",children:\\"support@kata.ai\\"}),\\" if you have any difficulties when implementing this.\\"]})]})}}var O=W;function l(n,a){throw new Error(\\"Expected \\"+(a?\\"component\\":\\"object\\")+\\" `\\"+n+\\"` to be defined: you likely forgot to import, pass, or provide it.\\")}return A(R);})();\\n;return Component;"},"_id":"tutorials/how-to-use-slack-as-your-chatbot-messaging-platform.mdx","_raw":{"sourceFilePath":"tutorials/how-to-use-slack-as-your-chatbot-messaging-platform.mdx","sourceFileName":"how-to-use-slack-as-your-chatbot-messaging-platform.mdx","sourceFileDir":"tutorials","contentType":"mdx","flattenedPath":"tutorials/how-to-use-slack-as-your-chatbot-messaging-platform"},"type":"Tutorials","slug":["how-to-use-slack-as-your-chatbot-messaging-platform"],"excerpt":"\\nSlack is a messaging platform that is commonly used for office and community. In this tutorial, you will learn how to deploy your chatbot to the Slack channel"}');
;// CONCATENATED MODULE: ./.contentlayer/generated/Tutorials/tutorials__how-to-use-telegram-as-your-chatbox-messaging-platform.mdx.json
const tutorials_how_to_use_telegram_as_your_chatbox_messaging_platform_mdx_namespaceObject = JSON.parse('{"layout":"tutorial","id":"how-to-use-telegram-for-your-chatbot","imgSpot":"/assets/images/tutorials/spot-telegram.webp","product":"kata-platform","title":"How to use Telegram as your chatbot messaging platform","date":"2021-08-26T07:00:00+07:00","body":{"raw":"\\nTelegram is a free messaging platform that is commonly used for chatbot deployment. This tutorial will learn how to deploy your chatbot in Telegram. So, let’s get started.\\n\\n## Create a deployment\\n\\nDeployment is a step to merge all Revisions in Flow, NLU, and CMS so that you can integrate bots into the channel. Before starting channel integration, chatbots must at least have 1 deployment.\\n\\n1.  In the sidebar, choose the **Deploy** menu. Then, select **Overview**.\\n\\n<FigureImage\\n  caption={{ title: \'Figure 1\', description: ` Deploy menu interface.` }}\\n  src=\\"/assets/images/tutorials/how-to-use-telegram-as-your-chatbox-messaging-platform/image1.webp\\"\\n  alt=\\"How to use Telegram as your chatbot messaging platform\\"\\n  naturalHeight={511}\\n  naturalWidth={1600}\\n/>\\n\\n2.  Click the **New Deployment** button. Then it will show a form on the right screen.\\n3.  Choose the deployment version. In the Kata Platform, there are 3 deployment versions which are:\\n\\n    - Major to deploy significant changes, such as change chatbot use-case.\\n    - Minor to deploy medium changes, such as adding new features in your chatbot.\\n    - Patch to deploy small changes, such as change copy in action.\\n\\n<FigureImage\\n  caption={{ title: \'Figure 2\', description: `Create a new deployment` }}\\n  src=\\"/assets/images/tutorials/how-to-use-telegram-as-your-chatbox-messaging-platform/image2.webp\\"\\n  alt=\\"How to use Telegram as your chatbot messaging platform\\"\\n  naturalHeight={855}\\n  naturalWidth={1600}\\n/>\\n\\n4.  Then, click the **Submit** button. If deployment is successful, then the interface will be shown like this.\\n\\n<FigureImage\\n  caption={{ title: \'Figure 3\', description: `Deployment has been created.` }}\\n  src=\\"/assets/images/tutorials/how-to-use-telegram-as-your-chatbox-messaging-platform/image3.webp\\"\\n  alt=\\"How to use Telegram as your chatbot messaging platform\\"\\n  naturalHeight={533}\\n  naturalWidth={1600}\\n/>\\n\\nThe step after creating a deployment is to create an environment. An environment is a zone in computer science that provides a place to run integrated applications. For example, Kata Platform has 3 environments: development, staging, and production.\\n\\n1. Choose the menu **Deploy**, then choose **Environment**.\\n\\n<FigureImage\\n  caption={{ title: \'Figure 4\', description: `Environment interface.` }}\\n  src=\\"/assets/images/tutorials/how-to-use-telegram-as-your-chatbox-messaging-platform/image4.webp\\"\\n  alt=\\"How to use Telegram as your chatbot messaging platform\\"\\n  naturalHeight={507}\\n  naturalWidth={1600}\\n/>\\n\\n2. In this step, you will create a Development environment. Click the button **Create Environment** in the **Development** card.\\n3. Fill in the environment, then click **Create**.\\n\\n<FigureImage\\n  caption={{ title: \'Figure 5\', description: `Create an environment interface.` }}\\n  src=\\"/assets/images/tutorials/how-to-use-telegram-as-your-chatbox-messaging-platform/image5.webp\\"\\n  alt=\\"How to use Telegram as your chatbot messaging platform\\"\\n  naturalHeight={1008}\\n  naturalWidth={1600}\\n/>\\n\\n## Integration to a channel\\n\\nThis step will create a chatbot integration with the Telegram messaging platform. Telegram is a free messaging platform to deploy chatbots with a simple setup.\\n\\n1. In the **Deploy > Environment**, click the **Create Channel** button.\\n\\n<FigureImage\\n  caption={{ title: \'Figure 6\', description: `Button deploys channel in a Development environment.` }}\\n  src=\\"/assets/images/tutorials/how-to-use-telegram-as-your-chatbox-messaging-platform/image6.webp\\"\\n  alt=\\"How to use Telegram as your chatbot messaging platform\\"\\n  naturalHeight={694}\\n  naturalWidth={1594}\\n/>\\n\\n2. You will redirect to the **Create Channel** page. Click the **“+ Create Channel”** button to create a new channel.\\n3. Fill in the channel name and choose type as Telegram. To fill in the Bot User OAuth Access Token field, we must set up a chatbot in Telegram first. The next step is to open your Telegram application and log in.\\n\\nBefore you start, you need a Telegram account already registered and logged in to your application.\\n\\n## Connect chatbot to Telegram\\n\\n1.  The first step is to register your bot to the BotFather account.\\n\\n<FigureImage\\n  caption={{ title: \'Figure 7\', description: `Search BotFather account.` }}\\n  src=\\"/assets/images/tutorials/how-to-use-telegram-as-your-chatbox-messaging-platform/image7.webp\\"\\n  alt=\\"How to use Telegram as your chatbot messaging platform\\"\\n  naturalHeight={600}\\n  naturalWidth={802}\\n/>\\n\\n2.  Type `/newbot` and BotFather will ask for your chatbot name. Feel free to use any name you like.\\n3.  After that, you will be asked to enter your chatbot username. Remember that your bot username has to either start or end with `bot`.\\n4.  Once finished, BotFather will respond with a bot token to access the Telegram Bot API.\\n\\n<FigureImage\\n  caption={{ title: \'Figure 8\', description: `Telegram shows bot token.` }}\\n  src=\\"/assets/images/tutorials/how-to-use-telegram-as-your-chatbox-messaging-platform/image8.webp\\"\\n  alt=\\"How to use Telegram as your chatbot messaging platform\\"\\n  naturalHeight={601}\\n  naturalWidth={801}\\n/>\\n\\n5.  Go back to Platform, then copy the bot access token into the channel drawer.\\n\\n<FigureImage\\n  caption={{ title: \'Figure 9\', description: `Input bot access token.` }}\\n  src=\\"/assets/images/tutorials/how-to-use-telegram-as-your-chatbox-messaging-platform/image9.webp\\"\\n  alt=\\"How to use Telegram as your chatbot messaging platform\\"\\n  naturalHeight={767}\\n  naturalWidth={1140}\\n/>\\n\\n6.  Click **Create** to get a webhook from the Kata Platform. Then, click the copy button to copy the webhook URL.\\n7.  Click on the webhook link to **View** **Channel** detail. It will show a drawer to copy the access token and webhook URL.\\n\\n<FigureImage\\n  caption={{ title: \'Figure 10\', description: `View Channel detail` }}\\n  src=\\"/assets/images/tutorials/how-to-use-telegram-as-your-chatbox-messaging-platform/image10.webp\\"\\n  alt=\\"How to use Telegram as your chatbot messaging platform\\"\\n  naturalHeight={804}\\n  naturalWidth={1600}\\n/>\\n\\n8.  Next, open a new tab on your browser and enter this URL. Change `{my_bot_token}` into your own bot token. Also, paste `{kata_platform_webhook_url} `with the copied webhook URL.\\n\\n```\\nhttps://api.telegram.org/bot{my_bot_token}/setWebhook?url={kata_platform_webhook_url}\\n```\\n\\n9.  Click “Go” or press Enter on the keyboard.\\n\\n<FigureImage\\n  caption={{ title: \'Figure 11\', description: `Telegram bot has successfully connected.` }}\\n  src=\\"/assets/images/tutorials/how-to-use-telegram-as-your-chatbox-messaging-platform/image11.webp\\"\\n  alt=\\"How to use Telegram as your chatbot messaging platform\\"\\n  naturalHeight={164}\\n  naturalWidth={449}\\n/>\\n\\n10. If you see the message “Webhook was set,” you’re all set! Let’s try our chatbot. Open Telegram on the desktop or mobile, and start chatting with your bot.\\n\\n<FigureImage\\n  caption={{ title: \'Figure 12\', description: `Testing “Hello” in Telegram chatbot` }}\\n  src=\\"/assets/images/tutorials/how-to-use-telegram-as-your-chatbox-messaging-platform/image12.webp\\"\\n  alt=\\"How to use Telegram as your chatbot messaging platform\\"\\n  naturalHeight={745}\\n  naturalWidth={1600}\\n/>\\n\\nIt is the end of this guidance. You can contact [support@kata.ai](mailto:support@kata.ai) if you have any difficulties when implementing this.\\n","code":"var Component=(()=>{var g=Object.create;var i=Object.defineProperty;var m=Object.getOwnPropertyDescriptor;var u=Object.getOwnPropertyNames;var d=Object.getPrototypeOf,p=Object.prototype.hasOwnProperty;var l=a=>i(a,\\"__esModule\\",{value:!0});var b=(a,n)=>()=>(n||a((n={exports:{}}).exports,n),n.exports),y=(a,n)=>{for(var r in n)i(a,r,{get:n[r],enumerable:!0})},s=(a,n,r,t)=>{if(n&&typeof n==\\"object\\"||typeof n==\\"function\\")for(let o of u(n))!p.call(a,o)&&(r||o!==\\"default\\")&&i(a,o,{get:()=>n[o],enumerable:!(t=m(n,o))||t.enumerable});return a},w=(a,n)=>s(l(i(a!=null?g(d(a)):{},\\"default\\",!n&&a&&a.__esModule?{get:()=>a.default,enumerable:!0}:{value:a,enumerable:!0})),a),f=(a=>(n,r)=>a&&a.get(n)||(r=s(l({}),n,1),a&&a.set(n,r),r))(typeof WeakMap!=\\"undefined\\"?new WeakMap:0);var h=b((v,c)=>{c.exports=_jsx_runtime});var H={};y(H,{default:()=>C,frontmatter:()=>k});var e=w(h()),k={layout:\\"tutorial\\",id:\\"how-to-use-telegram-for-your-chatbot\\",imgSpot:\\"/assets/images/tutorials/spot-telegram.webp\\",product:\\"kata-platform\\",title:\\"How to use Telegram as your chatbot messaging platform\\",date:\\"2021-08-26T07:00:00+07:00\\"};function T(a={}){let{wrapper:n}=a.components||{};return n?(0,e.jsx)(n,Object.assign({},a,{children:(0,e.jsx)(r,{})})):r();function r(){let t=Object.assign({p:\\"p\\",h2:\\"h2\\",a:\\"a\\",span:\\"span\\",ol:\\"ol\\",li:\\"li\\",strong:\\"strong\\",ul:\\"ul\\",code:\\"code\\",pre:\\"pre\\"},a.components),{FigureImage:o}=t;return o||x(\\"FigureImage\\",!0),(0,e.jsxs)(e.Fragment,{children:[(0,e.jsx)(t.p,{children:\\"Telegram is a free messaging platform that is commonly used for chatbot deployment. This tutorial will learn how to deploy your chatbot in Telegram. So, let\\\\u2019s get started.\\"}),`\\n`,(0,e.jsxs)(t.h2,{id:\\"create-a-deployment\\",children:[(0,e.jsx)(t.a,{className:\\"anchor\\",href:\\"#create-a-deployment\\",children:(0,e.jsx)(t.span,{className:\\"icon icon-link\\"})}),\\"Create a deployment\\"]}),`\\n`,(0,e.jsx)(t.p,{children:\\"Deployment is a step to merge all Revisions in Flow, NLU, and CMS so that you can integrate bots into the channel. Before starting channel integration, chatbots must at least have 1 deployment.\\"}),`\\n`,(0,e.jsxs)(t.ol,{children:[`\\n`,(0,e.jsxs)(t.li,{children:[\\"In the sidebar, choose the \\",(0,e.jsx)(t.strong,{children:\\"Deploy\\"}),\\" menu. Then, select \\",(0,e.jsx)(t.strong,{children:\\"Overview\\"}),\\".\\"]}),`\\n`]}),`\\n`,(0,e.jsx)(o,{caption:{title:\\"Figure 1\\",description:\\" Deploy menu interface.\\"},src:\\"/assets/images/tutorials/how-to-use-telegram-as-your-chatbox-messaging-platform/image1.webp\\",alt:\\"How to use Telegram as your chatbot messaging platform\\",naturalHeight:511,naturalWidth:1600}),`\\n`,(0,e.jsxs)(t.ol,{start:\\"2\\",children:[`\\n`,(0,e.jsxs)(t.li,{children:[`\\n`,(0,e.jsxs)(t.p,{children:[\\"Click the \\",(0,e.jsx)(t.strong,{children:\\"New Deployment\\"}),\\" button. Then it will show a form on the right screen.\\"]}),`\\n`]}),`\\n`,(0,e.jsxs)(t.li,{children:[`\\n`,(0,e.jsx)(t.p,{children:\\"Choose the deployment version. In the Kata Platform, there are 3 deployment versions which are:\\"}),`\\n`,(0,e.jsxs)(t.ul,{children:[`\\n`,(0,e.jsx)(t.li,{children:\\"Major to deploy significant changes, such as change chatbot use-case.\\"}),`\\n`,(0,e.jsx)(t.li,{children:\\"Minor to deploy medium changes, such as adding new features in your chatbot.\\"}),`\\n`,(0,e.jsx)(t.li,{children:\\"Patch to deploy small changes, such as change copy in action.\\"}),`\\n`]}),`\\n`]}),`\\n`]}),`\\n`,(0,e.jsx)(o,{caption:{title:\\"Figure 2\\",description:\\"Create a new deployment\\"},src:\\"/assets/images/tutorials/how-to-use-telegram-as-your-chatbox-messaging-platform/image2.webp\\",alt:\\"How to use Telegram as your chatbot messaging platform\\",naturalHeight:855,naturalWidth:1600}),`\\n`,(0,e.jsxs)(t.ol,{start:\\"4\\",children:[`\\n`,(0,e.jsxs)(t.li,{children:[\\"Then, click the \\",(0,e.jsx)(t.strong,{children:\\"Submit\\"}),\\" button. If deployment is successful, then the interface will be shown like this.\\"]}),`\\n`]}),`\\n`,(0,e.jsx)(o,{caption:{title:\\"Figure 3\\",description:\\"Deployment has been created.\\"},src:\\"/assets/images/tutorials/how-to-use-telegram-as-your-chatbox-messaging-platform/image3.webp\\",alt:\\"How to use Telegram as your chatbot messaging platform\\",naturalHeight:533,naturalWidth:1600}),`\\n`,(0,e.jsx)(t.p,{children:\\"The step after creating a deployment is to create an environment. An environment is a zone in computer science that provides a place to run integrated applications. For example, Kata Platform has 3 environments: development, staging, and production.\\"}),`\\n`,(0,e.jsxs)(t.ol,{children:[`\\n`,(0,e.jsxs)(t.li,{children:[\\"Choose the menu \\",(0,e.jsx)(t.strong,{children:\\"Deploy\\"}),\\", then choose \\",(0,e.jsx)(t.strong,{children:\\"Environment\\"}),\\".\\"]}),`\\n`]}),`\\n`,(0,e.jsx)(o,{caption:{title:\\"Figure 4\\",description:\\"Environment interface.\\"},src:\\"/assets/images/tutorials/how-to-use-telegram-as-your-chatbox-messaging-platform/image4.webp\\",alt:\\"How to use Telegram as your chatbot messaging platform\\",naturalHeight:507,naturalWidth:1600}),`\\n`,(0,e.jsxs)(t.ol,{start:\\"2\\",children:[`\\n`,(0,e.jsxs)(t.li,{children:[\\"In this step, you will create a Development environment. Click the button \\",(0,e.jsx)(t.strong,{children:\\"Create Environment\\"}),\\" in the \\",(0,e.jsx)(t.strong,{children:\\"Development\\"}),\\" card.\\"]}),`\\n`,(0,e.jsxs)(t.li,{children:[\\"Fill in the environment, then click \\",(0,e.jsx)(t.strong,{children:\\"Create\\"}),\\".\\"]}),`\\n`]}),`\\n`,(0,e.jsx)(o,{caption:{title:\\"Figure 5\\",description:\\"Create an environment interface.\\"},src:\\"/assets/images/tutorials/how-to-use-telegram-as-your-chatbox-messaging-platform/image5.webp\\",alt:\\"How to use Telegram as your chatbot messaging platform\\",naturalHeight:1008,naturalWidth:1600}),`\\n`,(0,e.jsxs)(t.h2,{id:\\"integration-to-a-channel\\",children:[(0,e.jsx)(t.a,{className:\\"anchor\\",href:\\"#integration-to-a-channel\\",children:(0,e.jsx)(t.span,{className:\\"icon icon-link\\"})}),\\"Integration to a channel\\"]}),`\\n`,(0,e.jsx)(t.p,{children:\\"This step will create a chatbot integration with the Telegram messaging platform. Telegram is a free messaging platform to deploy chatbots with a simple setup.\\"}),`\\n`,(0,e.jsxs)(t.ol,{children:[`\\n`,(0,e.jsxs)(t.li,{children:[\\"In the \\",(0,e.jsx)(t.strong,{children:\\"Deploy > Environment\\"}),\\", click the \\",(0,e.jsx)(t.strong,{children:\\"Create Channel\\"}),\\" button.\\"]}),`\\n`]}),`\\n`,(0,e.jsx)(o,{caption:{title:\\"Figure 6\\",description:\\"Button deploys channel in a Development environment.\\"},src:\\"/assets/images/tutorials/how-to-use-telegram-as-your-chatbox-messaging-platform/image6.webp\\",alt:\\"How to use Telegram as your chatbot messaging platform\\",naturalHeight:694,naturalWidth:1594}),`\\n`,(0,e.jsxs)(t.ol,{start:\\"2\\",children:[`\\n`,(0,e.jsxs)(t.li,{children:[\\"You will redirect to the \\",(0,e.jsx)(t.strong,{children:\\"Create Channel\\"}),\\" page. Click the \\",(0,e.jsx)(t.strong,{children:\\"\\\\u201C+ Create Channel\\\\u201D\\"}),\\" button to create a new channel.\\"]}),`\\n`,(0,e.jsx)(t.li,{children:\\"Fill in the channel name and choose type as Telegram. To fill in the Bot User OAuth Access Token field, we must set up a chatbot in Telegram first. The next step is to open your Telegram application and log in.\\"}),`\\n`]}),`\\n`,(0,e.jsx)(t.p,{children:\\"Before you start, you need a Telegram account already registered and logged in to your application.\\"}),`\\n`,(0,e.jsxs)(t.h2,{id:\\"connect-chatbot-to-telegram\\",children:[(0,e.jsx)(t.a,{className:\\"anchor\\",href:\\"#connect-chatbot-to-telegram\\",children:(0,e.jsx)(t.span,{className:\\"icon icon-link\\"})}),\\"Connect chatbot to Telegram\\"]}),`\\n`,(0,e.jsxs)(t.ol,{children:[`\\n`,(0,e.jsx)(t.li,{children:\\"The first step is to register your bot to the BotFather account.\\"}),`\\n`]}),`\\n`,(0,e.jsx)(o,{caption:{title:\\"Figure 7\\",description:\\"Search BotFather account.\\"},src:\\"/assets/images/tutorials/how-to-use-telegram-as-your-chatbox-messaging-platform/image7.webp\\",alt:\\"How to use Telegram as your chatbot messaging platform\\",naturalHeight:600,naturalWidth:802}),`\\n`,(0,e.jsxs)(t.ol,{start:\\"2\\",children:[`\\n`,(0,e.jsxs)(t.li,{children:[\\"Type \\",(0,e.jsx)(t.code,{children:\\"/newbot\\"}),\\" and BotFather will ask for your chatbot name. Feel free to use any name you like.\\"]}),`\\n`,(0,e.jsxs)(t.li,{children:[\\"After that, you will be asked to enter your chatbot username. Remember that your bot username has to either start or end with \\",(0,e.jsx)(t.code,{children:\\"bot\\"}),\\".\\"]}),`\\n`,(0,e.jsx)(t.li,{children:\\"Once finished, BotFather will respond with a bot token to access the Telegram Bot API.\\"}),`\\n`]}),`\\n`,(0,e.jsx)(o,{caption:{title:\\"Figure 8\\",description:\\"Telegram shows bot token.\\"},src:\\"/assets/images/tutorials/how-to-use-telegram-as-your-chatbox-messaging-platform/image8.webp\\",alt:\\"How to use Telegram as your chatbot messaging platform\\",naturalHeight:601,naturalWidth:801}),`\\n`,(0,e.jsxs)(t.ol,{start:\\"5\\",children:[`\\n`,(0,e.jsx)(t.li,{children:\\"Go back to Platform, then copy the bot access token into the channel drawer.\\"}),`\\n`]}),`\\n`,(0,e.jsx)(o,{caption:{title:\\"Figure 9\\",description:\\"Input bot access token.\\"},src:\\"/assets/images/tutorials/how-to-use-telegram-as-your-chatbox-messaging-platform/image9.webp\\",alt:\\"How to use Telegram as your chatbot messaging platform\\",naturalHeight:767,naturalWidth:1140}),`\\n`,(0,e.jsxs)(t.ol,{start:\\"6\\",children:[`\\n`,(0,e.jsxs)(t.li,{children:[\\"Click \\",(0,e.jsx)(t.strong,{children:\\"Create\\"}),\\" to get a webhook from the Kata Platform. Then, click the copy button to copy the webhook URL.\\"]}),`\\n`,(0,e.jsxs)(t.li,{children:[\\"Click on the webhook link to \\",(0,e.jsx)(t.strong,{children:\\"View\\"}),\\" \\",(0,e.jsx)(t.strong,{children:\\"Channel\\"}),\\" detail. It will show a drawer to copy the access token and webhook URL.\\"]}),`\\n`]}),`\\n`,(0,e.jsx)(o,{caption:{title:\\"Figure 10\\",description:\\"View Channel detail\\"},src:\\"/assets/images/tutorials/how-to-use-telegram-as-your-chatbox-messaging-platform/image10.webp\\",alt:\\"How to use Telegram as your chatbot messaging platform\\",naturalHeight:804,naturalWidth:1600}),`\\n`,(0,e.jsxs)(t.ol,{start:\\"8\\",children:[`\\n`,(0,e.jsxs)(t.li,{children:[\\"Next, open a new tab on your browser and enter this URL. Change \\",(0,e.jsx)(t.code,{children:\\"{my_bot_token}\\"}),\\" into your own bot token. Also, paste \\",(0,e.jsx)(t.code,{children:\\"{kata_platform_webhook_url} \\"}),\\"with the copied webhook URL.\\"]}),`\\n`]}),`\\n`,(0,e.jsx)(t.pre,{children:(0,e.jsx)(t.code,{className:\\"code-highlight\\",children:(0,e.jsx)(t.span,{className:\\"code-line\\",children:`https://api.telegram.org/bot{my_bot_token}/setWebhook?url={kata_platform_webhook_url}\\n`})})}),`\\n`,(0,e.jsxs)(t.ol,{start:\\"9\\",children:[`\\n`,(0,e.jsx)(t.li,{children:\\"Click \\\\u201CGo\\\\u201D or press Enter on the keyboard.\\"}),`\\n`]}),`\\n`,(0,e.jsx)(o,{caption:{title:\\"Figure 11\\",description:\\"Telegram bot has successfully connected.\\"},src:\\"/assets/images/tutorials/how-to-use-telegram-as-your-chatbox-messaging-platform/image11.webp\\",alt:\\"How to use Telegram as your chatbot messaging platform\\",naturalHeight:164,naturalWidth:449}),`\\n`,(0,e.jsxs)(t.ol,{start:\\"10\\",children:[`\\n`,(0,e.jsx)(t.li,{children:\\"If you see the message \\\\u201CWebhook was set,\\\\u201D you\\\\u2019re all set! Let\\\\u2019s try our chatbot. Open Telegram on the desktop or mobile, and start chatting with your bot.\\"}),`\\n`]}),`\\n`,(0,e.jsx)(o,{caption:{title:\\"Figure 12\\",description:\\"Testing \\\\u201CHello\\\\u201D in Telegram chatbot\\"},src:\\"/assets/images/tutorials/how-to-use-telegram-as-your-chatbox-messaging-platform/image12.webp\\",alt:\\"How to use Telegram as your chatbot messaging platform\\",naturalHeight:745,naturalWidth:1600}),`\\n`,(0,e.jsxs)(t.p,{children:[\\"It is the end of this guidance. You can contact \\",(0,e.jsx)(t.a,{href:\\"mailto:support@kata.ai\\",children:\\"support@kata.ai\\"}),\\" if you have any difficulties when implementing this.\\"]})]})}}var C=T;function x(a,n){throw new Error(\\"Expected \\"+(n?\\"component\\":\\"object\\")+\\" `\\"+a+\\"` to be defined: you likely forgot to import, pass, or provide it.\\")}return f(H);})();\\n;return Component;"},"_id":"tutorials/how-to-use-telegram-as-your-chatbox-messaging-platform.mdx","_raw":{"sourceFilePath":"tutorials/how-to-use-telegram-as-your-chatbox-messaging-platform.mdx","sourceFileName":"how-to-use-telegram-as-your-chatbox-messaging-platform.mdx","sourceFileDir":"tutorials","contentType":"mdx","flattenedPath":"tutorials/how-to-use-telegram-as-your-chatbox-messaging-platform"},"type":"Tutorials","slug":["how-to-use-telegram-as-your-chatbox-messaging-platform"],"excerpt":"\\nTelegram is a free messaging platform that is commonly used for chatbot deployment. This tutorial will learn how to deploy your chatbot in Telegram"}');
;// CONCATENATED MODULE: ./.contentlayer/generated/Tutorials/tutorials__how-to-use-whatsapp-business-api-in-my-chatbot.mdx.json
const tutorials_how_to_use_whatsapp_business_api_in_my_chatbot_mdx_namespaceObject = JSON.parse('{"layout":"tutorial","id":"how-to-use-whatsapp-business-api-in-my-chatbot","imgSpot":"/assets/images/tutorials/spot-business-dashboard.webp","product":"kata-platform","title":"How to use WhatsApp Business API in my chatbot","date":"2021-10-25T07:00:00+07:00","body":{"raw":"\\nAutomate your WhatsApp conversation by using our flow builder in the Kata Platform. Create bots to reply to end-users with several bot action types:\\n\\n- Text\\n- Image and Image with Caption\\n- 🎉 NEW 🎉 List Message\\n- 🎉 NEW 🎉 Reply Button\\n\\n## Bot response types\\n\\n### Text\\n\\n#### About\\n\\nReply to your chatbot users (“end-users”) by sending them text as a primary response.\\n\\nHere is an example of a text response to end-users.\\n\\n<FigureImage\\n  caption={{ title: \'Figure 1\', description: `Action type text in WhatsApp.` }}\\n  src=\\"/assets/images/tutorials/how-to-use-whatsapp-business-api-in-my-chatbot/image1.webp\\"\\n  alt=\\"How to use WhatsApp Business API in my chatbot\\"\\n  naturalHeight={763}\\n  naturalWidth={1600}\\n/>\\n\\n#### How to Use\\n\\n1. Go to the Kata Platform and select your project.\\n2. Click to **Flow > Conversation Flow > State > Action List**.\\n3. Choose **Text**and enter the text you want to send.\\n4. Click **Create Action** to finalize your action.\\n\\n### Image and Image with Caption\\n\\n#### About\\n\\nSend images to your users on WhatsApp. You can also add a caption for the image.\\n\\nHere is an example of image response and using caption to end-users.\\n\\n<FigureImage\\n  caption={{ title: \'Figure 2\', description: `Image with Caption Example` }}\\n  src=\\"/assets/images/tutorials/how-to-use-whatsapp-business-api-in-my-chatbot/image2.webp\\"\\n  alt=\\"How to use WhatsApp Business API in my chatbot\\"\\n  naturalHeight={563}\\n  naturalWidth={1600}\\n/>\\n\\n#### How to Use\\n\\n1. Go to the Kata Platform and select your project.\\n2. Click to **Flow > Conversation Flow > State > Action List**.\\n3. Choose **Image** and enter the Image and Thumbnail URL.\\n4. The image caption is optional.\\n5. Click **Create Action** to finalize your action.\\n\\n### 🎉 NEW 🎉 List Message\\n\\n#### About\\n\\nSend a list of options your users can choose. You can provide up to 10 options (“rows”) from a List Message.\\n\\nHere is an example of a List Message response to end-users.\\n\\n<FigureImage\\n  caption={{ title: \'Figure 3\', description: `The tapping button will show the options` }}\\n  src=\\"/assets/images/tutorials/how-to-use-whatsapp-business-api-in-my-chatbot/image3.webp\\"\\n  alt=\\"How to use WhatsApp Business API in my chatbot\\"\\n  naturalHeight={256}\\n  naturalWidth={1074}\\n/>\\n\\n<FigureImage\\n  caption={{ title: \'Figure 4\', description: `Show pop-up dialog menu` }}\\n  src=\\"/assets/images/tutorials/how-to-use-whatsapp-business-api-in-my-chatbot/image4.webp\\"\\n  alt=\\"How to use WhatsApp Business API in my chatbot\\"\\n  naturalHeight={1213}\\n  naturalWidth={1600}\\n/>\\n\\n#### Composition\\n\\n1. Header type\\n\\n<FigureImage\\n  caption={{ title: \'Figure 5\', description: `List Message with header type “Text” and “None” in Platform` }}\\n  src=\\"/assets/images/tutorials/how-to-use-whatsapp-business-api-in-my-chatbot/image5.webp\\"\\n  alt=\\"How to use WhatsApp Business API in my chatbot\\"\\n  naturalHeight={466}\\n  naturalWidth={948}\\n/>\\n\\n<FigureImage\\n  caption={{ title: \'Figure 6\', description: `List Message with header type “Text” and “None” in WhatsApp` }}\\n  src=\\"/assets/images/tutorials/how-to-use-whatsapp-business-api-in-my-chatbot/image6.webp\\"\\n  alt=\\"How to use WhatsApp Business API in my chatbot\\"\\n  naturalHeight={580}\\n  naturalWidth={776}\\n/>\\n\\n2. Header composition\\n\\n<FigureImage\\n  caption={{ title: \'Figure 7\', description: `List Message button composition (before showing menu list) in Platform` }}\\n  src=\\"/assets/images/tutorials/how-to-use-whatsapp-business-api-in-my-chatbot/image7.webp\\"\\n  alt=\\"How to use WhatsApp Business API in my chatbot\\"\\n  naturalHeight={818}\\n  naturalWidth={1498}\\n/>\\n\\n<FigureImage\\n  caption={{ title: \'Figure 8\', description: `List Message button composition (before showing menu list) in WhatsApp` }}\\n  src=\\"/assets/images/tutorials/how-to-use-whatsapp-business-api-in-my-chatbot/image8.webp\\"\\n  alt=\\"How to use WhatsApp Business API in my chatbot\\"\\n  naturalHeight={306}\\n  naturalWidth={1302}\\n/>\\n\\n3. Section and Row\\n\\n<FigureImage\\n  caption={{ title: \'Figure 9\', description: `List Message composition (showing menu list) in Platform` }}\\n  src=\\"/assets/images/tutorials/how-to-use-whatsapp-business-api-in-my-chatbot/image9.webp\\"\\n  alt=\\"How to use WhatsApp Business API in my chatbot\\"\\n  naturalHeight={1491}\\n  naturalWidth={1600}\\n/>\\n\\n<FigureImage\\n  caption={{ title: \'Figure 10\', description: `List Message composition (showing menu list) in WhatsApp` }}\\n  src=\\"/assets/images/tutorials/how-to-use-whatsapp-business-api-in-my-chatbot/image10.webp\\"\\n  alt=\\"How to use WhatsApp Business API in my chatbot\\"\\n  naturalHeight={684}\\n  naturalWidth={1402}\\n/>\\n\\n#### How to Use\\n\\nFollow these steps to create a new List Message\\n\\n1. Go to the Kata Platform and select your project.\\n2. Click to **Flow > Conversation Flow > State > Action List**.\\n3. Choose**List Message.**This action type only works on WhatsApp. Adding this on other channels will result in an error.\\n4. Fill in the fields.\\n5. You should know some critical notes on List Message: (1) “Section” has no limit. You can add as many sections as you want; (2)You can create up to 10 rows; (3) “Row ID” in the same section must be unique. For example:\\n\\n   1. You make a section called “FAQ Topics.”\\n   2. Inside FAQ Topics, you have 3 rows.\\n   3. Those 3 rows inside FAQ Topics can’t use the same ID.\\n\\n<FigureImage\\n  caption={{ title: \'Figure 11\', description: `Using similar Row ID under 1 section is not allowed` }}\\n  src=\\"/assets/images/tutorials/how-to-use-whatsapp-business-api-in-my-chatbot/image11.webp\\"\\n  alt=\\"How to use WhatsApp Business API in my chatbot\\"\\n  naturalHeight={1247}\\n  naturalWidth={1600}\\n/>\\n\\n6.  Click **Create Action** to finalize your action\\n\\nAfter end-users click any options, the bot must execute a response based on the clicked option. You can map the selected option by end-users using row title or row id.\\n\\n- Using row `title`. For example:\\n\\n  ```\\n  context.chosen == payload.postback.title\\n  ```\\n\\n- Using row `id`. For example:\\n\\n  ```\\n  context.chosen == payload.postback.id\\n  ```\\n\\n### 🎉 NEW 🎉 Reply Button\\n\\n#### About\\n\\nThe reply button allows users to send a reply to the chatbot quickly. In addition, you can create up to 3 buttons.\\n\\nHere are examples of Reply Button responses to end-users.\\n\\n<FigureImage\\n  caption={{ title: \'Figure 12\', description: `Reply button with **Text** as header` }}\\n  src=\\"/assets/images/tutorials/how-to-use-whatsapp-business-api-in-my-chatbot/image12.webp\\"\\n  alt=\\"How to use WhatsApp Business API in my chatbot\\"\\n  naturalHeight={666}\\n  naturalWidth={1125}\\n/>\\n<FigureImage\\n  caption={{ title: \'Figure 13\', description: `Reply button with **Image** as header` }}\\n  src=\\"/assets/images/tutorials/how-to-use-whatsapp-business-api-in-my-chatbot/image13.webp\\"\\n  alt=\\"How to use WhatsApp Business API in my chatbot\\"\\n  naturalHeight={738}\\n  naturalWidth={788}\\n/>\\n<FigureImage\\n  caption={{ title: \'Figure 14\', description: `Reply button with **Document** as header` }}\\n  src=\\"/assets/images/tutorials/how-to-use-whatsapp-business-api-in-my-chatbot/image14.webp\\"\\n  alt=\\"How to use WhatsApp Business API in my chatbot\\"\\n  naturalHeight={428}\\n  naturalWidth={1142}\\n/>\\n<FigureImage\\n  caption={{ title: \'Figure 15\', description: `Reply button with **Video** as header` }}\\n  src=\\"/assets/images/tutorials/how-to-use-whatsapp-business-api-in-my-chatbot/image15.webp\\"\\n  alt=\\"How to use WhatsApp Business API in my chatbot\\"\\n  naturalHeight={708}\\n  naturalWidth={1214}\\n/>\\n\\n#### How to Use\\n\\nFollow these steps to create a new Reply Button.\\n\\n1. Go to the Kata Platform and select your project.\\n2. Click to **Flow > Conversation Flow > State > Action List**.\\n3. Choose**Reply Button.**This action type only works on WhatsApp. Adding this on other channels will result in an error.\\n4. Fill in the fields. Some critical notes on the Reply button that you should know:\\n\\n   1. “Button ID” must be unique when creating action.\\n   2. The maximum number of buttons is 3 buttons.\\n   3. Header type video only allows .mp4 extension, and we recommend the size is < 5 MB because end-users may experience slow connection when loading the video.\\n   4. Header types image, video, and document must use HTTP/HTTPS link.\\n\\n<FigureImage\\n  caption={{ title: \'Figure 16\', description: `Reply Button composition` }}\\n  src=\\"/assets/images/tutorials/how-to-use-whatsapp-business-api-in-my-chatbot/image16.webp\\"\\n  alt=\\"How to use WhatsApp Business API in my chatbot\\"\\n  naturalHeight={827}\\n  naturalWidth={1600}\\n/>\\n\\n5. Click **Create Action** to finalize your action.\\n\\nAfter end-users click any button, the bot must execute a response based on the clicked button. You can map the selected button by end-users using button `title` or button `id`.\\n\\n- Using button `title`. For example:\\n\\n  ```\\n  context.chosen == payload.postback.title\\n  ```\\n\\n- Using button `id`. For example:\\n\\n  ```\\n  context.chosen == payload.postback.id\\n  ```\\n\\n## How to deploy\\n\\nYou can create a simple bot using text by following this bot tutorial: [Start your first chatbot](/kata-platform/documentation-content/start-your-first-chatbot).\\n\\nYou can deploy your bot by following these steps.\\n\\n### Create a deployment\\n\\n1. Click the **Deploy** menu in the left sidebar.\\n2. On the Deploy page, click on the **New Deployment** button in the top right corner. It will open up the Create Deployment menu.\\n3. Choose any deployment version you want to deploy and fill in the changelog.\\n\\n<FigureImage\\n  caption={{ title: \'Figure 17\', description: `Create a new deployment` }}\\n  src=\\"/assets/images/tutorials/how-to-use-whatsapp-business-api-in-my-chatbot/image17.webp\\"\\n  alt=\\"How to use WhatsApp Business API in my chatbot\\"\\n  naturalHeight={1600}\\n  naturalWidth={1133}\\n/>\\n\\n4. Click **Submit** to finish the deployment.\\n\\n### Create a new environment\\n\\nIf you already have an environment created, skip these steps.\\n\\n1. Go to the **Deployments > Environment** menu.\\n\\n<FigureImage\\n  caption={{ title: \'Figure 18\', description: `Set up the environment, then set up WhatsApp channel.` }}\\n  src=\\"/assets/images/tutorials/how-to-use-whatsapp-business-api-in-my-chatbot/image18.webp\\"\\n  alt=\\"How to use WhatsApp Business API in my chatbot\\"\\n  naturalHeight={505}\\n  naturalWidth={1600}\\n/>\\n\\n2. Click the **Create Environment** button in any environment. You will see a drawer to create a new environment.\\n3. Choose the **development version** you want (in this tutorial, we use the 1.0.0 version)\\n4. Fill in the **environment URL**. This environment URL is used for CMS.[Learn more about CMS](https://docs.kata.ai/cms-studio/about/\').\\n5. Click **Create** to create the environment.\\n6. Created environment now has a **Create Channel** button.\\n\\n### Create WhatsApp business account\\n\\nYou can only deploy bots to a verified WhatsApp Business number. To get the number, you have to:\\n\\n1. Go to [https://business.kata.ai](https://business.kata.ai)\\n2. [Create a business dashboard account](/business-dashboard/get-started)\\n3. [Register your new WhatsApp number](/business-dashboard/how-to-register)\\n\\nThen, you’re ready to get the access token from your WhatsApp business account.\\n\\n1. In Business Dashboard, go to the Whatsapp Numbers menu.\\n\\n<FigureImage\\n  caption={{ title: \'Figure 19\', description: `WhatsApp numbers list` }}\\n  src=\\"/assets/images/tutorials/how-to-use-whatsapp-business-api-in-my-chatbot/image19.webp\\"\\n  alt=\\"How to use WhatsApp Business API in my chatbot\\"\\n  naturalHeight={831}\\n  naturalWidth={1600}\\n/>\\n\\n2. Then, click the WhatsApp number you want to deploy. You will redirect to the **Manage WhatsApp Number** page.\\n3. In the Manage WhatsApp Number page, scroll down to **API Credential.**\\n\\n<FigureImage\\n  caption={{ title: \'Figure 20\', description: `API Credential` }}\\n  src=\\"/assets/images/tutorials/how-to-use-whatsapp-business-api-in-my-chatbot/image20.webp\\"\\n  alt=\\"How to use WhatsApp Business API in my chatbot\\"\\n  naturalHeight={587}\\n  naturalWidth={1600}\\n/>\\n\\n4. Next, you will need to download[Postman](https://www.postman.com/downloads/) to hit the WhatsApp API.\\n5. Copy the **username** and **password** from the API Credential section in the Business Dashboard into Postman.\\n6. Open Postman and fill in the **URL** as follows::\\n\\n   ```\\n   URL: POST [https://api-whatsapp.kata.ai/v1/users/login](https://api-whatsapp.kata.ai/v1/users/login)\\n   ```\\n\\n7. Enter the username and password from Business Dashboard to the Body. Examples:\\n\\n   ```\\n   Body::\\n\\n   {\\n   “username”: “amanda123”\\n   “password”: “Q1w2e3r4#kata”\\n   }\\n   ```\\n\\n8. Click **Send** in Postman. You will get the access token as shown.\\n\\n<FigureImage\\n  caption={{ title: \'Figure 21\', description: `Access token shows after hitting login API.` }}\\n  src=\\"/assets/images/tutorials/how-to-use-whatsapp-business-api-in-my-chatbot/image21.webp\\"\\n  alt=\\"How to use WhatsApp Business API in my chatbot\\"\\n  naturalHeight={1162}\\n  naturalWidth={1600}\\n/>\\n\\n9. Copy the **access token** in the API result and save it next.\\n\\n### Finalize deployment WhatsApp channel\\n\\n1. Log in to Kata Platform ([https://platform.kata.ai](https://platform.kata.ai))\\n2. Click your project that already had a chatbot and deployed\\n3. Then, go to the menu: **Deploy > Environment**.\\n4. Click the **Create Channel** button to start adding channels to the environment. It will open up the Channel menu within the environment.\\n5. Click the ”**+ Create Channel**” button in the channel table list. It will show a menu to set up the channel.\\n6. Choose WhatsApp in Channel Type\\n7. Paste the access token into the field, and enter[https://api-whatsapp.kata.ai](https://api-whatsapp.kata.ai) in the URL field.\\n\\n<FigureImage\\n  caption={{ title: \'Figure 22\', description: `Fill in the access token and URL` }}\\n  src=\\"/assets/images/tutorials/how-to-use-whatsapp-business-api-in-my-chatbot/image22.webp\\"\\n  alt=\\"How to use WhatsApp Business API in my chatbot\\"\\n  naturalHeight={1302}\\n  naturalWidth={1350}\\n/>\\n\\n8. Click Save to deploy your bot.\\n\\nYou’re all set! Now you can start chatting with your WhatsApp bot.\\n\\n<FigureImage\\n  caption={{ title: \'Figure 23\', description: `Successfully deployed chatbot in WhatsApp` }}\\n  src=\\"/assets/images/tutorials/how-to-use-whatsapp-business-api-in-my-chatbot/image23.webp\\"\\n  alt=\\"How to use WhatsApp Business API in my chatbot\\"\\n  naturalHeight={763}\\n  naturalWidth={1600}\\n/>\\n\\nIt is the end of the guidance. You can contact support@kata.ai if you have any difficulties when implementing this.\\n","code":"var Component=(()=>{var p=Object.create;var o=Object.defineProperty;var d=Object.getOwnPropertyDescriptor;var u=Object.getOwnPropertyNames;var m=Object.getPrototypeOf,g=Object.prototype.hasOwnProperty;var l=i=>o(i,\\"__esModule\\",{value:!0});var w=(i,a)=>()=>(a||i((a={exports:{}}).exports,a),a.exports),b=(i,a)=>{for(var s in a)o(i,s,{get:a[s],enumerable:!0})},r=(i,a,s,n)=>{if(a&&typeof a==\\"object\\"||typeof a==\\"function\\")for(let t of u(a))!g.call(i,t)&&(s||t!==\\"default\\")&&o(i,t,{get:()=>a[t],enumerable:!(n=d(a,t))||n.enumerable});return i},y=(i,a)=>r(l(o(i!=null?p(m(i)):{},\\"default\\",!a&&i&&i.__esModule?{get:()=>i.default,enumerable:!0}:{value:i,enumerable:!0})),i),A=(i=>(a,s)=>i&&i.get(a)||(s=r(l({}),a,1),i&&i.set(a,s),s))(typeof WeakMap!=\\"undefined\\"?new WeakMap:0);var c=w((I,h)=>{h.exports=_jsx_runtime});var C={};b(C,{default:()=>W,frontmatter:()=>f});var e=y(c()),f={layout:\\"tutorial\\",id:\\"how-to-use-whatsapp-business-api-in-my-chatbot\\",imgSpot:\\"/assets/images/tutorials/spot-business-dashboard.webp\\",title:\\"How to use WhatsApp Business API in my chatbot\\",product:\\"kata-platform\\",date:\\"2021-10-25T07:00:00+07:00\\"};function k(i={}){let{wrapper:a}=i.components||{};return a?(0,e.jsx)(a,Object.assign({},i,{children:(0,e.jsx)(s,{})})):s();function s(){let n=Object.assign({p:\\"p\\",ul:\\"ul\\",li:\\"li\\",h2:\\"h2\\",a:\\"a\\",span:\\"span\\",h3:\\"h3\\",h4:\\"h4\\",ol:\\"ol\\",strong:\\"strong\\",code:\\"code\\",pre:\\"pre\\"},i.components),{FigureImage:t}=n;return t||N(\\"FigureImage\\",!0),(0,e.jsxs)(e.Fragment,{children:[(0,e.jsx)(n.p,{children:\\"Automate your WhatsApp conversation by using our flow builder in the Kata Platform. Create bots to reply to end-users with several bot action types:\\"}),`\\n`,(0,e.jsxs)(n.ul,{children:[`\\n`,(0,e.jsx)(n.li,{children:\\"Text\\"}),`\\n`,(0,e.jsx)(n.li,{children:\\"Image and Image with Caption\\"}),`\\n`,(0,e.jsx)(n.li,{children:\\"\\\\u{1F389} NEW \\\\u{1F389} List Message\\"}),`\\n`,(0,e.jsx)(n.li,{children:\\"\\\\u{1F389} NEW \\\\u{1F389} Reply Button\\"}),`\\n`]}),`\\n`,(0,e.jsxs)(n.h2,{id:\\"bot-response-types\\",children:[(0,e.jsx)(n.a,{className:\\"anchor\\",href:\\"#bot-response-types\\",children:(0,e.jsx)(n.span,{className:\\"icon icon-link\\"})}),\\"Bot response types\\"]}),`\\n`,(0,e.jsxs)(n.h3,{id:\\"text\\",children:[(0,e.jsx)(n.a,{className:\\"anchor\\",href:\\"#text\\",children:(0,e.jsx)(n.span,{className:\\"icon icon-link\\"})}),\\"Text\\"]}),`\\n`,(0,e.jsxs)(n.h4,{id:\\"about\\",children:[(0,e.jsx)(n.a,{className:\\"anchor\\",href:\\"#about\\",children:(0,e.jsx)(n.span,{className:\\"icon icon-link\\"})}),\\"About\\"]}),`\\n`,(0,e.jsx)(n.p,{children:\\"Reply to your chatbot users (\\\\u201Cend-users\\\\u201D) by sending them text as a primary response.\\"}),`\\n`,(0,e.jsx)(n.p,{children:\\"Here is an example of a text response to end-users.\\"}),`\\n`,(0,e.jsx)(t,{caption:{title:\\"Figure 1\\",description:\\"Action type text in WhatsApp.\\"},src:\\"/assets/images/tutorials/how-to-use-whatsapp-business-api-in-my-chatbot/image1.webp\\",alt:\\"How to use WhatsApp Business API in my chatbot\\",naturalHeight:763,naturalWidth:1600}),`\\n`,(0,e.jsxs)(n.h4,{id:\\"how-to-use\\",children:[(0,e.jsx)(n.a,{className:\\"anchor\\",href:\\"#how-to-use\\",children:(0,e.jsx)(n.span,{className:\\"icon icon-link\\"})}),\\"How to Use\\"]}),`\\n`,(0,e.jsxs)(n.ol,{children:[`\\n`,(0,e.jsx)(n.li,{children:\\"Go to the Kata Platform and select your project.\\"}),`\\n`,(0,e.jsxs)(n.li,{children:[\\"Click to \\",(0,e.jsx)(n.strong,{children:\\"Flow > Conversation Flow > State > Action List\\"}),\\".\\"]}),`\\n`,(0,e.jsxs)(n.li,{children:[\\"Choose \\",(0,e.jsx)(n.strong,{children:\\"Text\\"}),\\"and enter the text you want to send.\\"]}),`\\n`,(0,e.jsxs)(n.li,{children:[\\"Click \\",(0,e.jsx)(n.strong,{children:\\"Create Action\\"}),\\" to finalize your action.\\"]}),`\\n`]}),`\\n`,(0,e.jsxs)(n.h3,{id:\\"image-and-image-with-caption\\",children:[(0,e.jsx)(n.a,{className:\\"anchor\\",href:\\"#image-and-image-with-caption\\",children:(0,e.jsx)(n.span,{className:\\"icon icon-link\\"})}),\\"Image and Image with Caption\\"]}),`\\n`,(0,e.jsxs)(n.h4,{id:\\"about-1\\",children:[(0,e.jsx)(n.a,{className:\\"anchor\\",href:\\"#about-1\\",children:(0,e.jsx)(n.span,{className:\\"icon icon-link\\"})}),\\"About\\"]}),`\\n`,(0,e.jsx)(n.p,{children:\\"Send images to your users on WhatsApp. You can also add a caption for the image.\\"}),`\\n`,(0,e.jsx)(n.p,{children:\\"Here is an example of image response and using caption to end-users.\\"}),`\\n`,(0,e.jsx)(t,{caption:{title:\\"Figure 2\\",description:\\"Image with Caption Example\\"},src:\\"/assets/images/tutorials/how-to-use-whatsapp-business-api-in-my-chatbot/image2.webp\\",alt:\\"How to use WhatsApp Business API in my chatbot\\",naturalHeight:563,naturalWidth:1600}),`\\n`,(0,e.jsxs)(n.h4,{id:\\"how-to-use-1\\",children:[(0,e.jsx)(n.a,{className:\\"anchor\\",href:\\"#how-to-use-1\\",children:(0,e.jsx)(n.span,{className:\\"icon icon-link\\"})}),\\"How to Use\\"]}),`\\n`,(0,e.jsxs)(n.ol,{children:[`\\n`,(0,e.jsx)(n.li,{children:\\"Go to the Kata Platform and select your project.\\"}),`\\n`,(0,e.jsxs)(n.li,{children:[\\"Click to \\",(0,e.jsx)(n.strong,{children:\\"Flow > Conversation Flow > State > Action List\\"}),\\".\\"]}),`\\n`,(0,e.jsxs)(n.li,{children:[\\"Choose \\",(0,e.jsx)(n.strong,{children:\\"Image\\"}),\\" and enter the Image and Thumbnail URL.\\"]}),`\\n`,(0,e.jsx)(n.li,{children:\\"The image caption is optional.\\"}),`\\n`,(0,e.jsxs)(n.li,{children:[\\"Click \\",(0,e.jsx)(n.strong,{children:\\"Create Action\\"}),\\" to finalize your action.\\"]}),`\\n`]}),`\\n`,(0,e.jsxs)(n.h3,{id:\\"-new--list-message\\",children:[(0,e.jsx)(n.a,{className:\\"anchor\\",href:\\"#-new--list-message\\",children:(0,e.jsx)(n.span,{className:\\"icon icon-link\\"})}),\\"\\\\u{1F389} NEW \\\\u{1F389} List Message\\"]}),`\\n`,(0,e.jsxs)(n.h4,{id:\\"about-2\\",children:[(0,e.jsx)(n.a,{className:\\"anchor\\",href:\\"#about-2\\",children:(0,e.jsx)(n.span,{className:\\"icon icon-link\\"})}),\\"About\\"]}),`\\n`,(0,e.jsx)(n.p,{children:\\"Send a list of options your users can choose. You can provide up to 10 options (\\\\u201Crows\\\\u201D) from a List Message.\\"}),`\\n`,(0,e.jsx)(n.p,{children:\\"Here is an example of a List Message response to end-users.\\"}),`\\n`,(0,e.jsx)(t,{caption:{title:\\"Figure 3\\",description:\\"The tapping button will show the options\\"},src:\\"/assets/images/tutorials/how-to-use-whatsapp-business-api-in-my-chatbot/image3.webp\\",alt:\\"How to use WhatsApp Business API in my chatbot\\",naturalHeight:256,naturalWidth:1074}),`\\n`,(0,e.jsx)(t,{caption:{title:\\"Figure 4\\",description:\\"Show pop-up dialog menu\\"},src:\\"/assets/images/tutorials/how-to-use-whatsapp-business-api-in-my-chatbot/image4.webp\\",alt:\\"How to use WhatsApp Business API in my chatbot\\",naturalHeight:1213,naturalWidth:1600}),`\\n`,(0,e.jsxs)(n.h4,{id:\\"composition\\",children:[(0,e.jsx)(n.a,{className:\\"anchor\\",href:\\"#composition\\",children:(0,e.jsx)(n.span,{className:\\"icon icon-link\\"})}),\\"Composition\\"]}),`\\n`,(0,e.jsxs)(n.ol,{children:[`\\n`,(0,e.jsx)(n.li,{children:\\"Header type\\"}),`\\n`]}),`\\n`,(0,e.jsx)(t,{caption:{title:\\"Figure 5\\",description:\\"List Message with header type \\\\u201CText\\\\u201D and \\\\u201CNone\\\\u201D in Platform\\"},src:\\"/assets/images/tutorials/how-to-use-whatsapp-business-api-in-my-chatbot/image5.webp\\",alt:\\"How to use WhatsApp Business API in my chatbot\\",naturalHeight:466,naturalWidth:948}),`\\n`,(0,e.jsx)(t,{caption:{title:\\"Figure 6\\",description:\\"List Message with header type \\\\u201CText\\\\u201D and \\\\u201CNone\\\\u201D in WhatsApp\\"},src:\\"/assets/images/tutorials/how-to-use-whatsapp-business-api-in-my-chatbot/image6.webp\\",alt:\\"How to use WhatsApp Business API in my chatbot\\",naturalHeight:580,naturalWidth:776}),`\\n`,(0,e.jsxs)(n.ol,{start:\\"2\\",children:[`\\n`,(0,e.jsx)(n.li,{children:\\"Header composition\\"}),`\\n`]}),`\\n`,(0,e.jsx)(t,{caption:{title:\\"Figure 7\\",description:\\"List Message button composition (before showing menu list) in Platform\\"},src:\\"/assets/images/tutorials/how-to-use-whatsapp-business-api-in-my-chatbot/image7.webp\\",alt:\\"How to use WhatsApp Business API in my chatbot\\",naturalHeight:818,naturalWidth:1498}),`\\n`,(0,e.jsx)(t,{caption:{title:\\"Figure 8\\",description:\\"List Message button composition (before showing menu list) in WhatsApp\\"},src:\\"/assets/images/tutorials/how-to-use-whatsapp-business-api-in-my-chatbot/image8.webp\\",alt:\\"How to use WhatsApp Business API in my chatbot\\",naturalHeight:306,naturalWidth:1302}),`\\n`,(0,e.jsxs)(n.ol,{start:\\"3\\",children:[`\\n`,(0,e.jsx)(n.li,{children:\\"Section and Row\\"}),`\\n`]}),`\\n`,(0,e.jsx)(t,{caption:{title:\\"Figure 9\\",description:\\"List Message composition (showing menu list) in Platform\\"},src:\\"/assets/images/tutorials/how-to-use-whatsapp-business-api-in-my-chatbot/image9.webp\\",alt:\\"How to use WhatsApp Business API in my chatbot\\",naturalHeight:1491,naturalWidth:1600}),`\\n`,(0,e.jsx)(t,{caption:{title:\\"Figure 10\\",description:\\"List Message composition (showing menu list) in WhatsApp\\"},src:\\"/assets/images/tutorials/how-to-use-whatsapp-business-api-in-my-chatbot/image10.webp\\",alt:\\"How to use WhatsApp Business API in my chatbot\\",naturalHeight:684,naturalWidth:1402}),`\\n`,(0,e.jsxs)(n.h4,{id:\\"how-to-use-2\\",children:[(0,e.jsx)(n.a,{className:\\"anchor\\",href:\\"#how-to-use-2\\",children:(0,e.jsx)(n.span,{className:\\"icon icon-link\\"})}),\\"How to Use\\"]}),`\\n`,(0,e.jsx)(n.p,{children:\\"Follow these steps to create a new List Message\\"}),`\\n`,(0,e.jsxs)(n.ol,{children:[`\\n`,(0,e.jsxs)(n.li,{children:[`\\n`,(0,e.jsx)(n.p,{children:\\"Go to the Kata Platform and select your project.\\"}),`\\n`]}),`\\n`,(0,e.jsxs)(n.li,{children:[`\\n`,(0,e.jsxs)(n.p,{children:[\\"Click to \\",(0,e.jsx)(n.strong,{children:\\"Flow > Conversation Flow > State > Action List\\"}),\\".\\"]}),`\\n`]}),`\\n`,(0,e.jsxs)(n.li,{children:[`\\n`,(0,e.jsx)(n.p,{children:\\"Choose**List Message.**This action type only works on WhatsApp. Adding this on other channels will result in an error.\\"}),`\\n`]}),`\\n`,(0,e.jsxs)(n.li,{children:[`\\n`,(0,e.jsx)(n.p,{children:\\"Fill in the fields.\\"}),`\\n`]}),`\\n`,(0,e.jsxs)(n.li,{children:[`\\n`,(0,e.jsx)(n.p,{children:\\"You should know some critical notes on List Message: (1) \\\\u201CSection\\\\u201D has no limit. You can add as many sections as you want; (2)You can create up to 10 rows; (3) \\\\u201CRow ID\\\\u201D in the same section must be unique. For example:\\"}),`\\n`,(0,e.jsxs)(n.ol,{children:[`\\n`,(0,e.jsx)(n.li,{children:\\"You make a section called \\\\u201CFAQ Topics.\\\\u201D\\"}),`\\n`,(0,e.jsx)(n.li,{children:\\"Inside FAQ Topics, you have 3 rows.\\"}),`\\n`,(0,e.jsx)(n.li,{children:\\"Those 3 rows inside FAQ Topics can\\\\u2019t use the same ID.\\"}),`\\n`]}),`\\n`]}),`\\n`]}),`\\n`,(0,e.jsx)(t,{caption:{title:\\"Figure 11\\",description:\\"Using similar Row ID under 1 section is not allowed\\"},src:\\"/assets/images/tutorials/how-to-use-whatsapp-business-api-in-my-chatbot/image11.webp\\",alt:\\"How to use WhatsApp Business API in my chatbot\\",naturalHeight:1247,naturalWidth:1600}),`\\n`,(0,e.jsxs)(n.p,{children:[\\"6.\\\\xA0 Click \\",(0,e.jsx)(n.strong,{children:\\"Create Action\\"}),\\" to finalize your action\\"]}),`\\n`,(0,e.jsx)(n.p,{children:\\"After end-users click any options, the bot must execute a response based on the clicked option. You can map the selected option by end-users using row title or row id.\\"}),`\\n`,(0,e.jsxs)(n.ul,{children:[`\\n`,(0,e.jsxs)(n.li,{children:[`\\n`,(0,e.jsxs)(n.p,{children:[\\"Using row \\",(0,e.jsx)(n.code,{children:\\"title\\"}),\\". For example:\\"]}),`\\n`,(0,e.jsx)(n.pre,{children:(0,e.jsx)(n.code,{className:\\"code-highlight\\",children:(0,e.jsx)(n.span,{className:\\"code-line\\",children:`context.chosen == payload.postback.title\\n`})})}),`\\n`]}),`\\n`,(0,e.jsxs)(n.li,{children:[`\\n`,(0,e.jsxs)(n.p,{children:[\\"Using row \\",(0,e.jsx)(n.code,{children:\\"id\\"}),\\". For example:\\"]}),`\\n`,(0,e.jsx)(n.pre,{children:(0,e.jsx)(n.code,{className:\\"code-highlight\\",children:(0,e.jsx)(n.span,{className:\\"code-line\\",children:`context.chosen == payload.postback.id\\n`})})}),`\\n`]}),`\\n`]}),`\\n`,(0,e.jsxs)(n.h3,{id:\\"-new--reply-button\\",children:[(0,e.jsx)(n.a,{className:\\"anchor\\",href:\\"#-new--reply-button\\",children:(0,e.jsx)(n.span,{className:\\"icon icon-link\\"})}),\\"\\\\u{1F389} NEW \\\\u{1F389} Reply Button\\"]}),`\\n`,(0,e.jsxs)(n.h4,{id:\\"about-3\\",children:[(0,e.jsx)(n.a,{className:\\"anchor\\",href:\\"#about-3\\",children:(0,e.jsx)(n.span,{className:\\"icon icon-link\\"})}),\\"About\\"]}),`\\n`,(0,e.jsx)(n.p,{children:\\"The reply button allows users to send a reply to the chatbot quickly. In addition, you can create up to 3 buttons.\\"}),`\\n`,(0,e.jsx)(n.p,{children:\\"Here are examples of Reply Button responses to end-users.\\"}),`\\n`,(0,e.jsx)(t,{caption:{title:\\"Figure 12\\",description:\\"Reply button with **Text** as header\\"},src:\\"/assets/images/tutorials/how-to-use-whatsapp-business-api-in-my-chatbot/image12.webp\\",alt:\\"How to use WhatsApp Business API in my chatbot\\",naturalHeight:666,naturalWidth:1125}),`\\n`,(0,e.jsx)(t,{caption:{title:\\"Figure 13\\",description:\\"Reply button with **Image** as header\\"},src:\\"/assets/images/tutorials/how-to-use-whatsapp-business-api-in-my-chatbot/image13.webp\\",alt:\\"How to use WhatsApp Business API in my chatbot\\",naturalHeight:738,naturalWidth:788}),`\\n`,(0,e.jsx)(t,{caption:{title:\\"Figure 14\\",description:\\"Reply button with **Document** as header\\"},src:\\"/assets/images/tutorials/how-to-use-whatsapp-business-api-in-my-chatbot/image14.webp\\",alt:\\"How to use WhatsApp Business API in my chatbot\\",naturalHeight:428,naturalWidth:1142}),`\\n`,(0,e.jsx)(t,{caption:{title:\\"Figure 15\\",description:\\"Reply button with **Video** as header\\"},src:\\"/assets/images/tutorials/how-to-use-whatsapp-business-api-in-my-chatbot/image15.webp\\",alt:\\"How to use WhatsApp Business API in my chatbot\\",naturalHeight:708,naturalWidth:1214}),`\\n`,(0,e.jsxs)(n.h4,{id:\\"how-to-use-3\\",children:[(0,e.jsx)(n.a,{className:\\"anchor\\",href:\\"#how-to-use-3\\",children:(0,e.jsx)(n.span,{className:\\"icon icon-link\\"})}),\\"How to Use\\"]}),`\\n`,(0,e.jsx)(n.p,{children:\\"Follow these steps to create a new Reply Button.\\"}),`\\n`,(0,e.jsxs)(n.ol,{children:[`\\n`,(0,e.jsxs)(n.li,{children:[`\\n`,(0,e.jsx)(n.p,{children:\\"Go to the Kata Platform and select your project.\\"}),`\\n`]}),`\\n`,(0,e.jsxs)(n.li,{children:[`\\n`,(0,e.jsxs)(n.p,{children:[\\"Click to \\",(0,e.jsx)(n.strong,{children:\\"Flow > Conversation Flow > State > Action List\\"}),\\".\\"]}),`\\n`]}),`\\n`,(0,e.jsxs)(n.li,{children:[`\\n`,(0,e.jsx)(n.p,{children:\\"Choose**Reply Button.**This action type only works on WhatsApp. Adding this on other channels will result in an error.\\"}),`\\n`]}),`\\n`,(0,e.jsxs)(n.li,{children:[`\\n`,(0,e.jsx)(n.p,{children:\\"Fill in the fields. Some critical notes on the Reply button that you should know:\\"}),`\\n`,(0,e.jsxs)(n.ol,{children:[`\\n`,(0,e.jsx)(n.li,{children:\\"\\\\u201CButton ID\\\\u201D must be unique when creating action.\\"}),`\\n`,(0,e.jsx)(n.li,{children:\\"The maximum number of buttons is 3 buttons.\\"}),`\\n`,(0,e.jsx)(n.li,{children:\\"Header type video only allows .mp4 extension, and we recommend the size is < 5 MB because end-users may experience slow connection when loading the video.\\"}),`\\n`,(0,e.jsx)(n.li,{children:\\"Header types image, video, and document must use HTTP/HTTPS link.\\"}),`\\n`]}),`\\n`]}),`\\n`]}),`\\n`,(0,e.jsx)(t,{caption:{title:\\"Figure 16\\",description:\\"Reply Button composition\\"},src:\\"/assets/images/tutorials/how-to-use-whatsapp-business-api-in-my-chatbot/image16.webp\\",alt:\\"How to use WhatsApp Business API in my chatbot\\",naturalHeight:827,naturalWidth:1600}),`\\n`,(0,e.jsxs)(n.ol,{start:\\"5\\",children:[`\\n`,(0,e.jsxs)(n.li,{children:[\\"Click \\",(0,e.jsx)(n.strong,{children:\\"Create Action\\"}),\\" to finalize your action.\\"]}),`\\n`]}),`\\n`,(0,e.jsxs)(n.p,{children:[\\"After end-users click any button, the bot must execute a response based on the clicked button. You can map the selected button by end-users using button \\",(0,e.jsx)(n.code,{children:\\"title\\"}),\\" or button \\",(0,e.jsx)(n.code,{children:\\"id\\"}),\\".\\"]}),`\\n`,(0,e.jsxs)(n.ul,{children:[`\\n`,(0,e.jsxs)(n.li,{children:[`\\n`,(0,e.jsxs)(n.p,{children:[\\"Using button \\",(0,e.jsx)(n.code,{children:\\"title\\"}),\\". For example:\\"]}),`\\n`,(0,e.jsx)(n.pre,{children:(0,e.jsx)(n.code,{className:\\"code-highlight\\",children:(0,e.jsx)(n.span,{className:\\"code-line\\",children:`context.chosen == payload.postback.title\\n`})})}),`\\n`]}),`\\n`,(0,e.jsxs)(n.li,{children:[`\\n`,(0,e.jsxs)(n.p,{children:[\\"Using button \\",(0,e.jsx)(n.code,{children:\\"id\\"}),\\". For example:\\"]}),`\\n`,(0,e.jsx)(n.pre,{children:(0,e.jsx)(n.code,{className:\\"code-highlight\\",children:(0,e.jsx)(n.span,{className:\\"code-line\\",children:`context.chosen == payload.postback.id\\n`})})}),`\\n`]}),`\\n`]}),`\\n`,(0,e.jsxs)(n.h2,{id:\\"how-to-deploy\\",children:[(0,e.jsx)(n.a,{className:\\"anchor\\",href:\\"#how-to-deploy\\",children:(0,e.jsx)(n.span,{className:\\"icon icon-link\\"})}),\\"How to deploy\\"]}),`\\n`,(0,e.jsxs)(n.p,{children:[\\"You can create a simple bot using text by following this bot tutorial: \\",(0,e.jsx)(n.a,{href:\\"/kata-platform/documentation-content/start-your-first-chatbot\\",children:\\"Start your first chatbot\\"}),\\".\\"]}),`\\n`,(0,e.jsx)(n.p,{children:\\"You can deploy your bot by following these steps.\\"}),`\\n`,(0,e.jsxs)(n.h3,{id:\\"create-a-deployment\\",children:[(0,e.jsx)(n.a,{className:\\"anchor\\",href:\\"#create-a-deployment\\",children:(0,e.jsx)(n.span,{className:\\"icon icon-link\\"})}),\\"Create a deployment\\"]}),`\\n`,(0,e.jsxs)(n.ol,{children:[`\\n`,(0,e.jsxs)(n.li,{children:[\\"Click the \\",(0,e.jsx)(n.strong,{children:\\"Deploy\\"}),\\" menu in the left sidebar.\\"]}),`\\n`,(0,e.jsxs)(n.li,{children:[\\"On the Deploy page, click on the \\",(0,e.jsx)(n.strong,{children:\\"New Deployment\\"}),\\" button in the top right corner. It will open up the Create Deployment menu.\\"]}),`\\n`,(0,e.jsx)(n.li,{children:\\"Choose any deployment version you want to deploy and fill in the changelog.\\"}),`\\n`]}),`\\n`,(0,e.jsx)(t,{caption:{title:\\"Figure 17\\",description:\\"Create a new deployment\\"},src:\\"/assets/images/tutorials/how-to-use-whatsapp-business-api-in-my-chatbot/image17.webp\\",alt:\\"How to use WhatsApp Business API in my chatbot\\",naturalHeight:1600,naturalWidth:1133}),`\\n`,(0,e.jsxs)(n.ol,{start:\\"4\\",children:[`\\n`,(0,e.jsxs)(n.li,{children:[\\"Click \\",(0,e.jsx)(n.strong,{children:\\"Submit\\"}),\\" to finish the deployment.\\"]}),`\\n`]}),`\\n`,(0,e.jsxs)(n.h3,{id:\\"create-a-new-environment\\",children:[(0,e.jsx)(n.a,{className:\\"anchor\\",href:\\"#create-a-new-environment\\",children:(0,e.jsx)(n.span,{className:\\"icon icon-link\\"})}),\\"Create a new environment\\"]}),`\\n`,(0,e.jsx)(n.p,{children:\\"If you already have an environment created, skip these steps.\\"}),`\\n`,(0,e.jsxs)(n.ol,{children:[`\\n`,(0,e.jsxs)(n.li,{children:[\\"Go to the \\",(0,e.jsx)(n.strong,{children:\\"Deployments > Environment\\"}),\\" menu.\\"]}),`\\n`]}),`\\n`,(0,e.jsx)(t,{caption:{title:\\"Figure 18\\",description:\\"Set up the environment, then set up WhatsApp channel.\\"},src:\\"/assets/images/tutorials/how-to-use-whatsapp-business-api-in-my-chatbot/image18.webp\\",alt:\\"How to use WhatsApp Business API in my chatbot\\",naturalHeight:505,naturalWidth:1600}),`\\n`,(0,e.jsxs)(n.ol,{start:\\"2\\",children:[`\\n`,(0,e.jsxs)(n.li,{children:[\\"Click the \\",(0,e.jsx)(n.strong,{children:\\"Create Environment\\"}),\\" button in any environment. You will see a drawer to create a new environment.\\"]}),`\\n`,(0,e.jsxs)(n.li,{children:[\\"Choose the \\",(0,e.jsx)(n.strong,{children:\\"development version\\"}),\\" you want (in this tutorial, we use the 1.0.0 version)\\"]}),`\\n`,(0,e.jsxs)(n.li,{children:[\\"Fill in the \\",(0,e.jsx)(n.strong,{children:\\"environment URL\\"}),\\". This environment URL is used for CMS.\\",(0,e.jsx)(n.a,{href:\\"https://docs.kata.ai/cms-studio/about/\'\\",children:\\"Learn more about CMS\\"}),\\".\\"]}),`\\n`,(0,e.jsxs)(n.li,{children:[\\"Click \\",(0,e.jsx)(n.strong,{children:\\"Create\\"}),\\" to create the environment.\\"]}),`\\n`,(0,e.jsxs)(n.li,{children:[\\"Created environment now has a \\",(0,e.jsx)(n.strong,{children:\\"Create Channel\\"}),\\" button.\\"]}),`\\n`]}),`\\n`,(0,e.jsxs)(n.h3,{id:\\"create-whatsapp-business-account\\",children:[(0,e.jsx)(n.a,{className:\\"anchor\\",href:\\"#create-whatsapp-business-account\\",children:(0,e.jsx)(n.span,{className:\\"icon icon-link\\"})}),\\"Create WhatsApp business account\\"]}),`\\n`,(0,e.jsx)(n.p,{children:\\"You can only deploy bots to a verified WhatsApp Business number. To get the number, you have to:\\"}),`\\n`,(0,e.jsxs)(n.ol,{children:[`\\n`,(0,e.jsxs)(n.li,{children:[\\"Go to \\",(0,e.jsx)(n.a,{href:\\"https://business.kata.ai\\",children:\\"https://business.kata.ai\\"})]}),`\\n`,(0,e.jsx)(n.li,{children:(0,e.jsx)(n.a,{href:\\"/business-dashboard/get-started\\",children:\\"Create a business dashboard account\\"})}),`\\n`,(0,e.jsx)(n.li,{children:(0,e.jsx)(n.a,{href:\\"/business-dashboard/how-to-register\\",children:\\"Register your new WhatsApp number\\"})}),`\\n`]}),`\\n`,(0,e.jsx)(n.p,{children:\\"Then, you\\\\u2019re ready to get the access token from your WhatsApp business account.\\"}),`\\n`,(0,e.jsxs)(n.ol,{children:[`\\n`,(0,e.jsx)(n.li,{children:\\"In Business Dashboard, go to the Whatsapp Numbers menu.\\"}),`\\n`]}),`\\n`,(0,e.jsx)(t,{caption:{title:\\"Figure 19\\",description:\\"WhatsApp numbers list\\"},src:\\"/assets/images/tutorials/how-to-use-whatsapp-business-api-in-my-chatbot/image19.webp\\",alt:\\"How to use WhatsApp Business API in my chatbot\\",naturalHeight:831,naturalWidth:1600}),`\\n`,(0,e.jsxs)(n.ol,{start:\\"2\\",children:[`\\n`,(0,e.jsxs)(n.li,{children:[\\"Then, click the WhatsApp number you want to deploy. You will redirect to the \\",(0,e.jsx)(n.strong,{children:\\"Manage WhatsApp Number\\"}),\\" page.\\"]}),`\\n`,(0,e.jsxs)(n.li,{children:[\\"In the Manage WhatsApp Number page, scroll down to \\",(0,e.jsx)(n.strong,{children:\\"API Credential.\\"})]}),`\\n`]}),`\\n`,(0,e.jsx)(t,{caption:{title:\\"Figure 20\\",description:\\"API Credential\\"},src:\\"/assets/images/tutorials/how-to-use-whatsapp-business-api-in-my-chatbot/image20.webp\\",alt:\\"How to use WhatsApp Business API in my chatbot\\",naturalHeight:587,naturalWidth:1600}),`\\n`,(0,e.jsxs)(n.ol,{start:\\"4\\",children:[`\\n`,(0,e.jsxs)(n.li,{children:[`\\n`,(0,e.jsxs)(n.p,{children:[\\"Next, you will need to download\\",(0,e.jsx)(n.a,{href:\\"https://www.postman.com/downloads/\\",children:\\"Postman\\"}),\\" to hit the WhatsApp API.\\"]}),`\\n`]}),`\\n`,(0,e.jsxs)(n.li,{children:[`\\n`,(0,e.jsxs)(n.p,{children:[\\"Copy the \\",(0,e.jsx)(n.strong,{children:\\"username\\"}),\\" and \\",(0,e.jsx)(n.strong,{children:\\"password\\"}),\\" from the API Credential section in the Business Dashboard into Postman.\\"]}),`\\n`]}),`\\n`,(0,e.jsxs)(n.li,{children:[`\\n`,(0,e.jsxs)(n.p,{children:[\\"Open Postman and fill in the \\",(0,e.jsx)(n.strong,{children:\\"URL\\"}),\\" as follows::\\"]}),`\\n`,(0,e.jsx)(n.pre,{children:(0,e.jsx)(n.code,{className:\\"code-highlight\\",children:(0,e.jsx)(n.span,{className:\\"code-line\\",children:`URL: POST [https://api-whatsapp.kata.ai/v1/users/login](https://api-whatsapp.kata.ai/v1/users/login)\\n`})})}),`\\n`]}),`\\n`,(0,e.jsxs)(n.li,{children:[`\\n`,(0,e.jsx)(n.p,{children:\\"Enter the username and password from Business Dashboard to the Body. Examples:\\"}),`\\n`,(0,e.jsx)(n.pre,{children:(0,e.jsxs)(n.code,{className:\\"code-highlight\\",children:[(0,e.jsx)(n.span,{className:\\"code-line\\",children:`Body::\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`{\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`\\\\u201Cusername\\\\u201D: \\\\u201Camanda123\\\\u201D\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`\\\\u201Cpassword\\\\u201D: \\\\u201CQ1w2e3r4#kata\\\\u201D\\n`}),(0,e.jsx)(n.span,{className:\\"code-line\\",children:`}\\n`})]})}),`\\n`]}),`\\n`,(0,e.jsxs)(n.li,{children:[`\\n`,(0,e.jsxs)(n.p,{children:[\\"Click \\",(0,e.jsx)(n.strong,{children:\\"Send\\"}),\\" in Postman. You will get the access token as shown.\\"]}),`\\n`]}),`\\n`]}),`\\n`,(0,e.jsx)(t,{caption:{title:\\"Figure 21\\",description:\\"Access token shows after hitting login API.\\"},src:\\"/assets/images/tutorials/how-to-use-whatsapp-business-api-in-my-chatbot/image21.webp\\",alt:\\"How to use WhatsApp Business API in my chatbot\\",naturalHeight:1162,naturalWidth:1600}),`\\n`,(0,e.jsxs)(n.ol,{start:\\"9\\",children:[`\\n`,(0,e.jsxs)(n.li,{children:[\\"Copy the \\",(0,e.jsx)(n.strong,{children:\\"access token\\"}),\\" in the API result and save it next.\\"]}),`\\n`]}),`\\n`,(0,e.jsxs)(n.h3,{id:\\"finalize-deployment-whatsapp-channel\\",children:[(0,e.jsx)(n.a,{className:\\"anchor\\",href:\\"#finalize-deployment-whatsapp-channel\\",children:(0,e.jsx)(n.span,{className:\\"icon icon-link\\"})}),\\"Finalize deployment WhatsApp channel\\"]}),`\\n`,(0,e.jsxs)(n.ol,{children:[`\\n`,(0,e.jsxs)(n.li,{children:[\\"Log in to Kata Platform (\\",(0,e.jsx)(n.a,{href:\\"https://platform.kata.ai\\",children:\\"https://platform.kata.ai\\"}),\\")\\"]}),`\\n`,(0,e.jsx)(n.li,{children:\\"Click your project that already had a chatbot and deployed\\"}),`\\n`,(0,e.jsxs)(n.li,{children:[\\"Then, go to the menu: \\",(0,e.jsx)(n.strong,{children:\\"Deploy > Environment\\"}),\\".\\"]}),`\\n`,(0,e.jsxs)(n.li,{children:[\\"Click the \\",(0,e.jsx)(n.strong,{children:\\"Create Channel\\"}),\\" button to start adding channels to the environment. It will open up the Channel menu within the environment.\\"]}),`\\n`,(0,e.jsxs)(n.li,{children:[\\"Click the \\\\u201D\\",(0,e.jsx)(n.strong,{children:\\"+ Create Channel\\"}),\\"\\\\u201D button in the channel table list. It will show a menu to set up the channel.\\"]}),`\\n`,(0,e.jsx)(n.li,{children:\\"Choose WhatsApp in Channel Type\\"}),`\\n`,(0,e.jsxs)(n.li,{children:[\\"Paste the access token into the field, and enter\\",(0,e.jsx)(n.a,{href:\\"https://api-whatsapp.kata.ai\\",children:\\"https://api-whatsapp.kata.ai\\"}),\\" in the URL field.\\"]}),`\\n`]}),`\\n`,(0,e.jsx)(t,{caption:{title:\\"Figure 22\\",description:\\"Fill in the access token and URL\\"},src:\\"/assets/images/tutorials/how-to-use-whatsapp-business-api-in-my-chatbot/image22.webp\\",alt:\\"How to use WhatsApp Business API in my chatbot\\",naturalHeight:1302,naturalWidth:1350}),`\\n`,(0,e.jsxs)(n.ol,{start:\\"8\\",children:[`\\n`,(0,e.jsx)(n.li,{children:\\"Click Save to deploy your bot.\\"}),`\\n`]}),`\\n`,(0,e.jsx)(n.p,{children:\\"You\\\\u2019re all set! Now you can start chatting with your WhatsApp bot.\\"}),`\\n`,(0,e.jsx)(t,{caption:{title:\\"Figure 23\\",description:\\"Successfully deployed chatbot in WhatsApp\\"},src:\\"/assets/images/tutorials/how-to-use-whatsapp-business-api-in-my-chatbot/image23.webp\\",alt:\\"How to use WhatsApp Business API in my chatbot\\",naturalHeight:763,naturalWidth:1600}),`\\n`,(0,e.jsxs)(n.p,{children:[\\"It is the end of the guidance. You can contact \\",(0,e.jsx)(n.a,{href:\\"mailto:support@kata.ai\\",children:\\"support@kata.ai\\"}),\\" if you have any difficulties when implementing this.\\"]})]})}}var W=k;function N(i,a){throw new Error(\\"Expected \\"+(a?\\"component\\":\\"object\\")+\\" `\\"+i+\\"` to be defined: you likely forgot to import, pass, or provide it.\\")}return A(C);})();\\n;return Component;"},"_id":"tutorials/how-to-use-whatsapp-business-api-in-my-chatbot.mdx","_raw":{"sourceFilePath":"tutorials/how-to-use-whatsapp-business-api-in-my-chatbot.mdx","sourceFileName":"how-to-use-whatsapp-business-api-in-my-chatbot.mdx","sourceFileDir":"tutorials","contentType":"mdx","flattenedPath":"tutorials/how-to-use-whatsapp-business-api-in-my-chatbot"},"type":"Tutorials","slug":["how-to-use-whatsapp-business-api-in-my-chatbot"],"excerpt":"\\nAutomate your WhatsApp conversation by using our flow builder in the Kata Platform. Create bots to reply to end-users with several bot action types:\\n\\n- Text\\n- Image and Image with Caption\\n- 🎉 NEW 🎉 List Message\\n- 🎉 NEW 🎉 Reply Button\\n\\n## Bot response types\\n\\n### Text\\n\\n#### About\\n\\nReply to your chatbot users (“end-users”) by sending them text as a primary response"}');
;// CONCATENATED MODULE: ./.contentlayer/generated/Tutorials/tutorials__integration-chatbot-with-cms-studio.mdx.json
const tutorials_integration_chatbot_with_cms_studio_mdx_namespaceObject = JSON.parse('{"layout":"tutorial","id":"integration-chatbot-with-cms-studio","imgSpot":"/assets/images/tutorials/spot-cms-integration.webp","product":"kata-platform","title":"Integration Chatbot with Kata CMS","prev":"integration-chatbot-with-nl-studio","next":"create-igdm-bot-handover-from-chatbot-to-agent","body":{"raw":"\\n## Introduction\\n\\nCMS Studio allows you to build a dashboard for your chatbot. This dashboard lets your clients to add, edit, or remove certain contents of your bot.\\n\\nPreviously, from [Bot studio tutorial](/tutorials/bot-studio/) we have learned how to create a Pizza Bot. So, in this tutorial we will learn how to set up a dashboard where your clients can edit bot response for “confirmPizza” and “Fallback” state.\\n\\nBefore we begin, you need to read [CMS Studio](/cms-studio/about/) docs to learn the basic concepts of CMS Studio.\\n\\n## Set up CMS Studio\\n\\nWe assume at this stage you already deployed your bot. If you haven\'t, you can learn how to on [Bot studio tutorial](/tutorials/bot-studio/).\\n\\n### Create Environment\\n\\nClick on Create Environment.\\n\\n<FigureImage src=\\"/assets/images/tutorials/bot-cms/bcms-1.webp\\" alt=\\"bcms-1\\" naturalHeight={1192} naturalWidth={2360} />\\n\\nEnvironment URL will be used as a web address where your client can access the dashboard. For demo purpose, we will name it “my-cms”\\n\\n<FigureImage src=\\"/assets/images/tutorials/bot-cms/bcms-2.webp\\" alt=\\"bcms-2\\" naturalHeight={994} naturalWidth={1538} />\\n\\nClick on Create to submit data. Successfully created environment will be seen as follow\\n\\n<FigureImage src=\\"/assets/images/tutorials/bot-cms/bcms-3.webp\\" alt=\\"bcms-3\\" naturalHeight={930} naturalWidth={1750} />\\n\\n### Create CMS Pages and Forms\\n\\nGo to CMS menu and select Pages. This menu is a place for you to arrange pages, forms and elements.\\n\\n<FigureImage src=\\"/assets/images/tutorials/bot-cms/bcms-4.webp\\" alt=\\"bcms-4\\" naturalHeight={1158} naturalWidth={2186} />\\n\\nClick “+” button to start a new page. In this use case, we will create a page named “Text Response” with label “textResponse”. Click Create then enter the page.\\n\\n<FigureImage src=\\"/assets/images/tutorials/bot-cms/bcms-5.webp\\" alt=\\"bcms-5\\" naturalHeight={978} naturalWidth={1480} />\\n\\nThere is a breadcrumb on top left to indicate which page you are in. Click on “+” button to create a form\\n\\n<FigureImage src=\\"/assets/images/tutorials/bot-cms/bcms-6.webp\\" alt=\\"bcms-6\\" naturalHeight={1552} naturalWidth={2710} />\\n\\nFill in the fields as follows\\n\\n<FigureImage src=\\"/assets/images/tutorials/bot-cms/bcms-7.webp\\" alt=\\"bcms-7\\" naturalHeight={938} naturalWidth={1644} />\\n\\nThen, click on “Order Pizza” form you\'ve just created\\n\\n<FigureImage src=\\"/assets/images/tutorials/bot-cms/bcms-8.webp\\" alt=\\"bcms-8\\" naturalHeight={1232} naturalWidth={2078} />\\n\\n### Introduction to Text Box Element\\n\\nFor the first use case, we will use Text Box elements to change bot response in confirmPizza State.\\n\\nClick on Text Box element in left sidebar to add it to your form.\\n\\n<FigureImage src=\\"/assets/images/tutorials/bot-cms/bcms-9.webp\\" alt=\\"bcms-9\\" naturalHeight={1264} naturalWidth={2922} />\\n\\nAdded element is shown as above. Our next step is to fill in label and ID, and default value.\\n\\n- Label is a title for the element, so try to use any word that is easy to understand.\\n- ID is used to define the element in bot. Every element\'s ID is unique, and will be used as a code later on.\\n- Default value is the value you want to put on the bot, for example the copywriting.\\n\\n### Add Asking Confirmation Text to Form\\n\\nFill in text box element as follow\\n\\n<FigureImage\\n  src=\\"/assets/images/tutorials/bot-cms/bcms-10.webp\\"\\n  alt=\\"bcms-10\\"\\n  naturalHeight={1158}\\n  naturalWidth={2514}\\n/>\\n\\n### Add Fallback Text to Form\\n\\nFill in text box element as follow\\n\\n<FigureImage\\n  src=\\"/assets/images/tutorials/bot-cms/bcms-11.webp\\"\\n  alt=\\"bcms-11\\"\\n  naturalHeight={1194}\\n  naturalWidth={2528}\\n/>\\n\\nThen, click on Save button to save the structure.\\n\\n### Publish CMS\\n\\nAfter you saved your CMS structure, go to Pages. Afterwards, click Publish.\\n\\n<FigureImage\\n  src=\\"/assets/images/tutorials/bot-cms/bcms-12.webp\\"\\n  alt=\\"bcms-12\\"\\n  naturalHeight={1724}\\n  naturalWidth={3358}\\n/>\\n\\nPublish is a term that similar with commit in Git. You must publish your saved CMS before you create a deployment. Further explanation can be seen on [Deployment Guide](./deployment-guide/introduction/)\\n\\n## Invite User to CMS Client\\n\\nYou can only invite Kata Platform users to Kata Dashboard. So make sure your client already has registered account on Kata Platform before you invite them. In the future update, we will support inviting non-Kata Platform users.\\n\\nClick on Users menu under CMS Studio\\n\\n<FigureImage\\n  src=\\"/assets/images/tutorials/bot-cms/bcms-13.webp\\"\\n  alt=\\"bcms-13\\"\\n  naturalHeight={1144}\\n  naturalWidth={1806}\\n/>\\n\\nThen, click on Add User button\\n\\n<FigureImage\\n  src=\\"/assets/images/tutorials/bot-cms/bcms-14.webp\\"\\n  alt=\\"bcms-14\\"\\n  naturalHeight={1258}\\n  naturalWidth={1914}\\n/>\\n\\nNext, Add User drawer will show\\n\\n<FigureImage\\n  src=\\"/assets/images/tutorials/bot-cms/bcms-15.webp\\"\\n  alt=\\"bcms-15\\"\\n  naturalHeight={1076}\\n  naturalWidth={1780}\\n/>\\n\\nFill in e-mail and choose Development environment . Then click Add to send an invitation to that user\'s email.\\n\\n<FigureImage\\n  src=\\"/assets/images/tutorials/bot-cms/bcms-16.webp\\"\\n  alt=\\"bcms-16\\"\\n  naturalHeight={1086}\\n  naturalWidth={2526}\\n/>\\n\\n## Integrate Elements to Bot\\n\\nThere are 3 things that we have defined on CMS, which are:\\n\\n- `Page_label` in Page (ex: `textResponse`)\\n- `Form_label` in Form (ex: `orderPizza`)\\n- `ID` in Element. (ex: `askingConfirmation`)\\n\\nThis information will be used in Bot Studio to sync a value from your dashboard. To do that, we have to enter a code with this format on the action we want to sync:\\n\\n```\\n$(cms.[page_label].[form_label].[element_ID].value)\\n```\\n\\n### Change Value in confirmPizza State\\n\\nIn this case, this is what we will put on `confirmPizza` action on Bot Studio.\\n\\n```\\n$(cms.textResponse.orderPizza.askingConfirmation.value)\\n```\\n\\nTo update the action, you have to go back to Bot Studio and click on confirmPizza state.\\n\\n<FigureImage\\n  src=\\"/assets/images/tutorials/bot-cms/bcms-17.webp\\"\\n  alt=\\"bcms-17\\"\\n  naturalHeight={976}\\n  naturalWidth={2092}\\n/>\\n\\nThen, click on confirmPizza state. Replace the original text which is this:\\n\\n```\\nDo you want to order $(context.pizza)?\\n```\\n\\nwith this code:\\n\\n```\\n$(cms.textResponse.orderPizza.askingConfirmation.value)\\n```\\n\\n<FigureImage\\n  src=\\"/assets/images/tutorials/bot-cms/bcms-18.webp\\"\\n  alt=\\"bcms-18\\"\\n  naturalHeight={1172}\\n  naturalWidth={1878}\\n/>\\n\\nClick Update Action to update your action. **Then click on Update** to update state.\\n\\n### Change Value in Fallback State\\n\\nClick on init state in fallback flow.\\n\\n<FigureImage\\n  src=\\"/assets/images/tutorials/bot-cms/bcms-20.webp\\"\\n  alt=\\"bcms-20\\"\\n  naturalHeight={1378}\\n  naturalWidth={2106}\\n/>\\n\\nClick on init state to update the action\'s value. Fill in the value as follows\\n\\n```\\n$(cms.textResponse.orderPizza.sorryMessage.value)\\n```\\n\\n<FigureImage\\n  src=\\"/assets/images/tutorials/bot-cms/bcms-20.webp\\"\\n  alt=\\"bcms-20\\"\\n  naturalHeight={1378}\\n  naturalWidth={2106}\\n/>\\n\\nClick Update Action to update your action. **Then click on Update** to update state.\\n\\n### Publish Your Bot\\n\\nAfterward, publish your bot by clicking Publish.\\n\\n## Deploy CMS & Bot Revision\\n\\nGo to Deploy menu to deploy the newest version of your bot. Click on New Deployment, choose any deployment version and fill in change log. Then, click on Submit.\\n\\n<FigureImage\\n  src=\\"/assets/images/tutorials/bot-cms/bcms-21.webp\\"\\n  alt=\\"bcms-21\\"\\n  naturalHeight={1252}\\n  naturalWidth={2048}\\n/>\\n\\nThen, go to Environment to change deployment. Click on more button to update.\\n\\n<FigureImage\\n  src=\\"/assets/images/tutorials/bot-cms/bcms-22.webp\\"\\n  alt=\\"bcms-22\\"\\n  naturalHeight={1188}\\n  naturalWidth={2226}\\n/>\\n\\nNext, click Update. Update environment drawer will appear.\\n\\n<FigureImage\\n  src=\\"/assets/images/tutorials/bot-cms/bcms-23.webp\\"\\n  alt=\\"bcms-23\\"\\n  naturalHeight={1154}\\n  naturalWidth={1786}\\n/>\\n\\nChoose latest deployment then click Update. Changes will be shown as follow\\n\\n<FigureImage\\n  src=\\"/assets/images/tutorials/bot-cms/bcms-24.webp\\"\\n  alt=\\"bcms-24\\"\\n  naturalHeight={1134}\\n  naturalWidth={1486}\\n/>\\n\\n## Customize Content in CMS Client\\n\\nYour invited user will receive an email containing the dashboard\'s URL or you can give them direct URL yourselves.\\n\\n### Enter CMS using E-mail\\n\\nIf you get an e-mail, click on Accept Invitation then you will be redirected to login page\\n\\n### Enter CMS using Link\\n\\nClick on link for CMS client such as dashboard.kata.ai/(namespace). For this tutorial, we will access <a href=\\"https://dashboard.kata.ai/login/my-cms\\" target=\\"_blank\\">https://dashboard.kata.ai/my-cms</a>\\n\\nThe front page of Kata Dashboard looks like this\\n\\n<FigureImage\\n  src=\\"/assets/images/tutorials/bot-cms/bcms-25.webp\\"\\n  alt=\\"bcms-25\\"\\n  naturalHeight={1624}\\n  naturalWidth={2944}\\n/>\\n\\nClick on Login after you filled in username/e-mail and password.\\n\\n<FigureImage\\n  src=\\"/assets/images/tutorials/bot-cms/bcms-26.webp\\"\\n  alt=\\"bcms-26\\"\\n  naturalHeight={1730}\\n  naturalWidth={3358}\\n/>\\n\\n### Edit Content in CMS Client\\n\\nClick on available form which is “Order Pizza”\\n\\n<FigureImage\\n  src=\\"/assets/images/tutorials/bot-cms/bcms-27.webp\\"\\n  alt=\\"bcms-27\\"\\n  naturalHeight={1702}\\n  naturalWidth={3292}\\n/>\\n\\nFill in those elements with sentences that you want. For example:\\n\\n```\\nAsking confirmation: You\'re almost done. Do you want to order $(context.pizza)?\\nFallback: Hmm, I don\'t understand that. How about we talk other things?\\n\\n```\\n\\nClick on Save icon to save in each element.\\n\\n## Show Changes in LINE\\n\\nAfter you changed your deployment in environment, you can test directly in your bot\'s LINE account.\\n\\nTesting for confirmation:\\n\\n<FigureImage\\n  src=\\"/assets/images/tutorials/bot-cms/bcms-28.webp\\"\\n  alt=\\"bcms-28\\"\\n  naturalHeight={1920}\\n  naturalWidth={1080}\\n/>\\n\\nTesting for fallback:\\n\\n<FigureImage\\n  src=\\"/assets/images/tutorials/bot-cms/bcms-29.webp\\"\\n  alt=\\"bcms-29\\"\\n  naturalHeight={1920}\\n  naturalWidth={1080}\\n/>\\n","code":"var Component=(()=>{var d=Object.create;var o=Object.defineProperty;var m=Object.getOwnPropertyDescriptor;var u=Object.getOwnPropertyNames;var p=Object.getPrototypeOf,b=Object.prototype.hasOwnProperty;var l=a=>o(a,\\"__esModule\\",{value:!0});var g=(a,i)=>()=>(i||a((i={exports:{}}).exports,i),i.exports),f=(a,i)=>{for(var s in i)o(a,s,{get:i[s],enumerable:!0})},c=(a,i,s,t)=>{if(i&&typeof i==\\"object\\"||typeof i==\\"function\\")for(let n of u(i))!b.call(a,n)&&(s||n!==\\"default\\")&&o(a,n,{get:()=>i[n],enumerable:!(t=m(i,n))||t.enumerable});return a},w=(a,i)=>c(l(o(a!=null?d(p(a)):{},\\"default\\",!i&&a&&a.__esModule?{get:()=>a.default,enumerable:!0}:{value:a,enumerable:!0})),a),k=(a=>(i,s)=>a&&a.get(i)||(s=c(l({}),i,1),a&&a.set(i,s),s))(typeof WeakMap!=\\"undefined\\"?new WeakMap:0);var h=g((z,r)=>{r.exports=_jsx_runtime});var x={};f(x,{default:()=>C,frontmatter:()=>y});var e=w(h()),y={layout:\\"tutorial\\",imgSpot:\\"/assets/images/tutorials/spot-cms-integration.webp\\",id:\\"integration-chatbot-with-cms-studio\\",product:\\"kata-platform\\",title:\\"Integration Chatbot with Kata CMS\\",prev:\\"integration-chatbot-with-nl-studio\\",next:\\"create-igdm-bot-handover-from-chatbot-to-agent\\"};function v(a={}){let{wrapper:i}=a.components||{};return i?(0,e.jsx)(i,Object.assign({},a,{children:(0,e.jsx)(s,{})})):s();function s(){let t=Object.assign({h2:\\"h2\\",a:\\"a\\",span:\\"span\\",p:\\"p\\",h3:\\"h3\\",ul:\\"ul\\",li:\\"li\\",code:\\"code\\",pre:\\"pre\\",strong:\\"strong\\"},a.components),{FigureImage:n}=t;return n||N(\\"FigureImage\\",!0),(0,e.jsxs)(e.Fragment,{children:[(0,e.jsxs)(t.h2,{id:\\"introduction\\",children:[(0,e.jsx)(t.a,{className:\\"anchor\\",href:\\"#introduction\\",children:(0,e.jsx)(t.span,{className:\\"icon icon-link\\"})}),\\"Introduction\\"]}),`\\n`,(0,e.jsx)(t.p,{children:\\"CMS Studio allows you to build a dashboard for your chatbot. This dashboard lets your clients to add, edit, or remove certain contents of your bot.\\"}),`\\n`,(0,e.jsxs)(t.p,{children:[\\"Previously, from \\",(0,e.jsx)(t.a,{href:\\"/tutorials/bot-studio/\\",children:\\"Bot studio tutorial\\"}),\\" we have learned how to create a Pizza Bot. So, in this tutorial we will learn how to set up a dashboard where your clients can edit bot response for \\\\u201CconfirmPizza\\\\u201D and \\\\u201CFallback\\\\u201D state.\\"]}),`\\n`,(0,e.jsxs)(t.p,{children:[\\"Before we begin, you need to read \\",(0,e.jsx)(t.a,{href:\\"/cms-studio/about/\\",children:\\"CMS Studio\\"}),\\" docs to learn the basic concepts of CMS Studio.\\"]}),`\\n`,(0,e.jsxs)(t.h2,{id:\\"set-up-cms-studio\\",children:[(0,e.jsx)(t.a,{className:\\"anchor\\",href:\\"#set-up-cms-studio\\",children:(0,e.jsx)(t.span,{className:\\"icon icon-link\\"})}),\\"Set up CMS Studio\\"]}),`\\n`,(0,e.jsxs)(t.p,{children:[\\"We assume at this stage you already deployed your bot. If you haven\'t, you can learn how to on \\",(0,e.jsx)(t.a,{href:\\"/tutorials/bot-studio/\\",children:\\"Bot studio tutorial\\"}),\\".\\"]}),`\\n`,(0,e.jsxs)(t.h3,{id:\\"create-environment\\",children:[(0,e.jsx)(t.a,{className:\\"anchor\\",href:\\"#create-environment\\",children:(0,e.jsx)(t.span,{className:\\"icon icon-link\\"})}),\\"Create Environment\\"]}),`\\n`,(0,e.jsx)(t.p,{children:\\"Click on Create Environment.\\"}),`\\n`,(0,e.jsx)(n,{src:\\"/assets/images/tutorials/bot-cms/bcms-1.webp\\",alt:\\"bcms-1\\",naturalHeight:1192,naturalWidth:2360}),`\\n`,(0,e.jsx)(t.p,{children:\\"Environment URL will be used as a web address where your client can access the dashboard. For demo purpose, we will name it \\\\u201Cmy-cms\\\\u201D\\"}),`\\n`,(0,e.jsx)(n,{src:\\"/assets/images/tutorials/bot-cms/bcms-2.webp\\",alt:\\"bcms-2\\",naturalHeight:994,naturalWidth:1538}),`\\n`,(0,e.jsx)(t.p,{children:\\"Click on Create to submit data. Successfully created environment will be seen as follow\\"}),`\\n`,(0,e.jsx)(n,{src:\\"/assets/images/tutorials/bot-cms/bcms-3.webp\\",alt:\\"bcms-3\\",naturalHeight:930,naturalWidth:1750}),`\\n`,(0,e.jsxs)(t.h3,{id:\\"create-cms-pages-and-forms\\",children:[(0,e.jsx)(t.a,{className:\\"anchor\\",href:\\"#create-cms-pages-and-forms\\",children:(0,e.jsx)(t.span,{className:\\"icon icon-link\\"})}),\\"Create CMS Pages and Forms\\"]}),`\\n`,(0,e.jsx)(t.p,{children:\\"Go to CMS menu and select Pages. This menu is a place for you to arrange pages, forms and elements.\\"}),`\\n`,(0,e.jsx)(n,{src:\\"/assets/images/tutorials/bot-cms/bcms-4.webp\\",alt:\\"bcms-4\\",naturalHeight:1158,naturalWidth:2186}),`\\n`,(0,e.jsx)(t.p,{children:\\"Click \\\\u201C+\\\\u201D button to start a new page. In this use case, we will create a page named \\\\u201CText Response\\\\u201D with label \\\\u201CtextResponse\\\\u201D. Click Create then enter the page.\\"}),`\\n`,(0,e.jsx)(n,{src:\\"/assets/images/tutorials/bot-cms/bcms-5.webp\\",alt:\\"bcms-5\\",naturalHeight:978,naturalWidth:1480}),`\\n`,(0,e.jsx)(t.p,{children:\\"There is a breadcrumb on top left to indicate which page you are in. Click on \\\\u201C+\\\\u201D button to create a form\\"}),`\\n`,(0,e.jsx)(n,{src:\\"/assets/images/tutorials/bot-cms/bcms-6.webp\\",alt:\\"bcms-6\\",naturalHeight:1552,naturalWidth:2710}),`\\n`,(0,e.jsx)(t.p,{children:\\"Fill in the fields as follows\\"}),`\\n`,(0,e.jsx)(n,{src:\\"/assets/images/tutorials/bot-cms/bcms-7.webp\\",alt:\\"bcms-7\\",naturalHeight:938,naturalWidth:1644}),`\\n`,(0,e.jsx)(t.p,{children:\\"Then, click on \\\\u201COrder Pizza\\\\u201D form you\'ve just created\\"}),`\\n`,(0,e.jsx)(n,{src:\\"/assets/images/tutorials/bot-cms/bcms-8.webp\\",alt:\\"bcms-8\\",naturalHeight:1232,naturalWidth:2078}),`\\n`,(0,e.jsxs)(t.h3,{id:\\"introduction-to-text-box-element\\",children:[(0,e.jsx)(t.a,{className:\\"anchor\\",href:\\"#introduction-to-text-box-element\\",children:(0,e.jsx)(t.span,{className:\\"icon icon-link\\"})}),\\"Introduction to Text Box Element\\"]}),`\\n`,(0,e.jsx)(t.p,{children:\\"For the first use case, we will use Text Box elements to change bot response in confirmPizza State.\\"}),`\\n`,(0,e.jsx)(t.p,{children:\\"Click on Text Box element in left sidebar to add it to your form.\\"}),`\\n`,(0,e.jsx)(n,{src:\\"/assets/images/tutorials/bot-cms/bcms-9.webp\\",alt:\\"bcms-9\\",naturalHeight:1264,naturalWidth:2922}),`\\n`,(0,e.jsx)(t.p,{children:\\"Added element is shown as above. Our next step is to fill in label and ID, and default value.\\"}),`\\n`,(0,e.jsxs)(t.ul,{children:[`\\n`,(0,e.jsx)(t.li,{children:\\"Label is a title for the element, so try to use any word that is easy to understand.\\"}),`\\n`,(0,e.jsx)(t.li,{children:\\"ID is used to define the element in bot. Every element\'s ID is unique, and will be used as a code later on.\\"}),`\\n`,(0,e.jsx)(t.li,{children:\\"Default value is the value you want to put on the bot, for example the copywriting.\\"}),`\\n`]}),`\\n`,(0,e.jsxs)(t.h3,{id:\\"add-asking-confirmation-text-to-form\\",children:[(0,e.jsx)(t.a,{className:\\"anchor\\",href:\\"#add-asking-confirmation-text-to-form\\",children:(0,e.jsx)(t.span,{className:\\"icon icon-link\\"})}),\\"Add Asking Confirmation Text to Form\\"]}),`\\n`,(0,e.jsx)(t.p,{children:\\"Fill in text box element as follow\\"}),`\\n`,(0,e.jsx)(n,{src:\\"/assets/images/tutorials/bot-cms/bcms-10.webp\\",alt:\\"bcms-10\\",naturalHeight:1158,naturalWidth:2514}),`\\n`,(0,e.jsxs)(t.h3,{id:\\"add-fallback-text-to-form\\",children:[(0,e.jsx)(t.a,{className:\\"anchor\\",href:\\"#add-fallback-text-to-form\\",children:(0,e.jsx)(t.span,{className:\\"icon icon-link\\"})}),\\"Add Fallback Text to Form\\"]}),`\\n`,(0,e.jsx)(t.p,{children:\\"Fill in text box element as follow\\"}),`\\n`,(0,e.jsx)(n,{src:\\"/assets/images/tutorials/bot-cms/bcms-11.webp\\",alt:\\"bcms-11\\",naturalHeight:1194,naturalWidth:2528}),`\\n`,(0,e.jsx)(t.p,{children:\\"Then, click on Save button to save the structure.\\"}),`\\n`,(0,e.jsxs)(t.h3,{id:\\"publish-cms\\",children:[(0,e.jsx)(t.a,{className:\\"anchor\\",href:\\"#publish-cms\\",children:(0,e.jsx)(t.span,{className:\\"icon icon-link\\"})}),\\"Publish CMS\\"]}),`\\n`,(0,e.jsx)(t.p,{children:\\"After you saved your CMS structure, go to Pages. Afterwards, click Publish.\\"}),`\\n`,(0,e.jsx)(n,{src:\\"/assets/images/tutorials/bot-cms/bcms-12.webp\\",alt:\\"bcms-12\\",naturalHeight:1724,naturalWidth:3358}),`\\n`,(0,e.jsxs)(t.p,{children:[\\"Publish is a term that similar with commit in Git. You must publish your saved CMS before you create a deployment. Further explanation can be seen on \\",(0,e.jsx)(t.a,{href:\\"./deployment-guide/introduction/\\",children:\\"Deployment Guide\\"})]}),`\\n`,(0,e.jsxs)(t.h2,{id:\\"invite-user-to-cms-client\\",children:[(0,e.jsx)(t.a,{className:\\"anchor\\",href:\\"#invite-user-to-cms-client\\",children:(0,e.jsx)(t.span,{className:\\"icon icon-link\\"})}),\\"Invite User to CMS Client\\"]}),`\\n`,(0,e.jsx)(t.p,{children:\\"You can only invite Kata Platform users to Kata Dashboard. So make sure your client already has registered account on Kata Platform before you invite them. In the future update, we will support inviting non-Kata Platform users.\\"}),`\\n`,(0,e.jsx)(t.p,{children:\\"Click on Users menu under CMS Studio\\"}),`\\n`,(0,e.jsx)(n,{src:\\"/assets/images/tutorials/bot-cms/bcms-13.webp\\",alt:\\"bcms-13\\",naturalHeight:1144,naturalWidth:1806}),`\\n`,(0,e.jsx)(t.p,{children:\\"Then, click on Add User button\\"}),`\\n`,(0,e.jsx)(n,{src:\\"/assets/images/tutorials/bot-cms/bcms-14.webp\\",alt:\\"bcms-14\\",naturalHeight:1258,naturalWidth:1914}),`\\n`,(0,e.jsx)(t.p,{children:\\"Next, Add User drawer will show\\"}),`\\n`,(0,e.jsx)(n,{src:\\"/assets/images/tutorials/bot-cms/bcms-15.webp\\",alt:\\"bcms-15\\",naturalHeight:1076,naturalWidth:1780}),`\\n`,(0,e.jsx)(t.p,{children:\\"Fill in e-mail and choose Development environment . Then click Add to send an invitation to that user\'s email.\\"}),`\\n`,(0,e.jsx)(n,{src:\\"/assets/images/tutorials/bot-cms/bcms-16.webp\\",alt:\\"bcms-16\\",naturalHeight:1086,naturalWidth:2526}),`\\n`,(0,e.jsxs)(t.h2,{id:\\"integrate-elements-to-bot\\",children:[(0,e.jsx)(t.a,{className:\\"anchor\\",href:\\"#integrate-elements-to-bot\\",children:(0,e.jsx)(t.span,{className:\\"icon icon-link\\"})}),\\"Integrate Elements to Bot\\"]}),`\\n`,(0,e.jsx)(t.p,{children:\\"There are 3 things that we have defined on CMS, which are:\\"}),`\\n`,(0,e.jsxs)(t.ul,{children:[`\\n`,(0,e.jsxs)(t.li,{children:[(0,e.jsx)(t.code,{children:\\"Page_label\\"}),\\" in Page (ex: \\",(0,e.jsx)(t.code,{children:\\"textResponse\\"}),\\")\\"]}),`\\n`,(0,e.jsxs)(t.li,{children:[(0,e.jsx)(t.code,{children:\\"Form_label\\"}),\\" in Form (ex: \\",(0,e.jsx)(t.code,{children:\\"orderPizza\\"}),\\")\\"]}),`\\n`,(0,e.jsxs)(t.li,{children:[(0,e.jsx)(t.code,{children:\\"ID\\"}),\\" in Element. (ex: \\",(0,e.jsx)(t.code,{children:\\"askingConfirmation\\"}),\\")\\"]}),`\\n`]}),`\\n`,(0,e.jsx)(t.p,{children:\\"This information will be used in Bot Studio to sync a value from your dashboard. To do that, we have to enter a code with this format on the action we want to sync:\\"}),`\\n`,(0,e.jsx)(t.pre,{children:(0,e.jsx)(t.code,{className:\\"code-highlight\\",children:(0,e.jsx)(t.span,{className:\\"code-line\\",children:`$(cms.[page_label].[form_label].[element_ID].value)\\n`})})}),`\\n`,(0,e.jsxs)(t.h3,{id:\\"change-value-in-confirmpizza-state\\",children:[(0,e.jsx)(t.a,{className:\\"anchor\\",href:\\"#change-value-in-confirmpizza-state\\",children:(0,e.jsx)(t.span,{className:\\"icon icon-link\\"})}),\\"Change Value in confirmPizza State\\"]}),`\\n`,(0,e.jsxs)(t.p,{children:[\\"In this case, this is what we will put on \\",(0,e.jsx)(t.code,{children:\\"confirmPizza\\"}),\\" action on Bot Studio.\\"]}),`\\n`,(0,e.jsx)(t.pre,{children:(0,e.jsx)(t.code,{className:\\"code-highlight\\",children:(0,e.jsx)(t.span,{className:\\"code-line\\",children:`$(cms.textResponse.orderPizza.askingConfirmation.value)\\n`})})}),`\\n`,(0,e.jsx)(t.p,{children:\\"To update the action, you have to go back to Bot Studio and click on confirmPizza state.\\"}),`\\n`,(0,e.jsx)(n,{src:\\"/assets/images/tutorials/bot-cms/bcms-17.webp\\",alt:\\"bcms-17\\",naturalHeight:976,naturalWidth:2092}),`\\n`,(0,e.jsx)(t.p,{children:\\"Then, click on confirmPizza state. Replace the original text which is this:\\"}),`\\n`,(0,e.jsx)(t.pre,{children:(0,e.jsx)(t.code,{className:\\"code-highlight\\",children:(0,e.jsx)(t.span,{className:\\"code-line\\",children:`Do you want to order $(context.pizza)?\\n`})})}),`\\n`,(0,e.jsx)(t.p,{children:\\"with this code:\\"}),`\\n`,(0,e.jsx)(t.pre,{children:(0,e.jsx)(t.code,{className:\\"code-highlight\\",children:(0,e.jsx)(t.span,{className:\\"code-line\\",children:`$(cms.textResponse.orderPizza.askingConfirmation.value)\\n`})})}),`\\n`,(0,e.jsx)(n,{src:\\"/assets/images/tutorials/bot-cms/bcms-18.webp\\",alt:\\"bcms-18\\",naturalHeight:1172,naturalWidth:1878}),`\\n`,(0,e.jsxs)(t.p,{children:[\\"Click Update Action to update your action. \\",(0,e.jsx)(t.strong,{children:\\"Then click on Update\\"}),\\" to update state.\\"]}),`\\n`,(0,e.jsxs)(t.h3,{id:\\"change-value-in-fallback-state\\",children:[(0,e.jsx)(t.a,{className:\\"anchor\\",href:\\"#change-value-in-fallback-state\\",children:(0,e.jsx)(t.span,{className:\\"icon icon-link\\"})}),\\"Change Value in Fallback State\\"]}),`\\n`,(0,e.jsx)(t.p,{children:\\"Click on init state in fallback flow.\\"}),`\\n`,(0,e.jsx)(n,{src:\\"/assets/images/tutorials/bot-cms/bcms-20.webp\\",alt:\\"bcms-20\\",naturalHeight:1378,naturalWidth:2106}),`\\n`,(0,e.jsx)(t.p,{children:\\"Click on init state to update the action\'s value. Fill in the value as follows\\"}),`\\n`,(0,e.jsx)(t.pre,{children:(0,e.jsx)(t.code,{className:\\"code-highlight\\",children:(0,e.jsx)(t.span,{className:\\"code-line\\",children:`$(cms.textResponse.orderPizza.sorryMessage.value)\\n`})})}),`\\n`,(0,e.jsx)(n,{src:\\"/assets/images/tutorials/bot-cms/bcms-20.webp\\",alt:\\"bcms-20\\",naturalHeight:1378,naturalWidth:2106}),`\\n`,(0,e.jsxs)(t.p,{children:[\\"Click Update Action to update your action. \\",(0,e.jsx)(t.strong,{children:\\"Then click on Update\\"}),\\" to update state.\\"]}),`\\n`,(0,e.jsxs)(t.h3,{id:\\"publish-your-bot\\",children:[(0,e.jsx)(t.a,{className:\\"anchor\\",href:\\"#publish-your-bot\\",children:(0,e.jsx)(t.span,{className:\\"icon icon-link\\"})}),\\"Publish Your Bot\\"]}),`\\n`,(0,e.jsx)(t.p,{children:\\"Afterward, publish your bot by clicking Publish.\\"}),`\\n`,(0,e.jsxs)(t.h2,{id:\\"deploy-cms--bot-revision\\",children:[(0,e.jsx)(t.a,{className:\\"anchor\\",href:\\"#deploy-cms--bot-revision\\",children:(0,e.jsx)(t.span,{className:\\"icon icon-link\\"})}),\\"Deploy CMS & Bot Revision\\"]}),`\\n`,(0,e.jsx)(t.p,{children:\\"Go to Deploy menu to deploy the newest version of your bot. Click on New Deployment, choose any deployment version and fill in change log. Then, click on Submit.\\"}),`\\n`,(0,e.jsx)(n,{src:\\"/assets/images/tutorials/bot-cms/bcms-21.webp\\",alt:\\"bcms-21\\",naturalHeight:1252,naturalWidth:2048}),`\\n`,(0,e.jsx)(t.p,{children:\\"Then, go to Environment to change deployment. Click on more button to update.\\"}),`\\n`,(0,e.jsx)(n,{src:\\"/assets/images/tutorials/bot-cms/bcms-22.webp\\",alt:\\"bcms-22\\",naturalHeight:1188,naturalWidth:2226}),`\\n`,(0,e.jsx)(t.p,{children:\\"Next, click Update. Update environment drawer will appear.\\"}),`\\n`,(0,e.jsx)(n,{src:\\"/assets/images/tutorials/bot-cms/bcms-23.webp\\",alt:\\"bcms-23\\",naturalHeight:1154,naturalWidth:1786}),`\\n`,(0,e.jsx)(t.p,{children:\\"Choose latest deployment then click Update. Changes will be shown as follow\\"}),`\\n`,(0,e.jsx)(n,{src:\\"/assets/images/tutorials/bot-cms/bcms-24.webp\\",alt:\\"bcms-24\\",naturalHeight:1134,naturalWidth:1486}),`\\n`,(0,e.jsxs)(t.h2,{id:\\"customize-content-in-cms-client\\",children:[(0,e.jsx)(t.a,{className:\\"anchor\\",href:\\"#customize-content-in-cms-client\\",children:(0,e.jsx)(t.span,{className:\\"icon icon-link\\"})}),\\"Customize Content in CMS Client\\"]}),`\\n`,(0,e.jsx)(t.p,{children:\\"Your invited user will receive an email containing the dashboard\'s URL or you can give them direct URL yourselves.\\"}),`\\n`,(0,e.jsxs)(t.h3,{id:\\"enter-cms-using-e-mail\\",children:[(0,e.jsx)(t.a,{className:\\"anchor\\",href:\\"#enter-cms-using-e-mail\\",children:(0,e.jsx)(t.span,{className:\\"icon icon-link\\"})}),\\"Enter CMS using E-mail\\"]}),`\\n`,(0,e.jsx)(t.p,{children:\\"If you get an e-mail, click on Accept Invitation then you will be redirected to login page\\"}),`\\n`,(0,e.jsxs)(t.h3,{id:\\"enter-cms-using-link\\",children:[(0,e.jsx)(t.a,{className:\\"anchor\\",href:\\"#enter-cms-using-link\\",children:(0,e.jsx)(t.span,{className:\\"icon icon-link\\"})}),\\"Enter CMS using Link\\"]}),`\\n`,(0,e.jsxs)(t.p,{children:[\\"Click on link for CMS client such as dashboard.kata.ai/(namespace). For this tutorial, we will access \\",(0,e.jsx)(\\"a\\",{href:\\"https://dashboard.kata.ai/login/my-cms\\",target:\\"_blank\\",children:(0,e.jsx)(t.a,{href:\\"https://dashboard.kata.ai/my-cms\\",children:\\"https://dashboard.kata.ai/my-cms\\"})})]}),`\\n`,(0,e.jsx)(t.p,{children:\\"The front page of Kata Dashboard looks like this\\"}),`\\n`,(0,e.jsx)(n,{src:\\"/assets/images/tutorials/bot-cms/bcms-25.webp\\",alt:\\"bcms-25\\",naturalHeight:1624,naturalWidth:2944}),`\\n`,(0,e.jsx)(t.p,{children:\\"Click on Login after you filled in username/e-mail and password.\\"}),`\\n`,(0,e.jsx)(n,{src:\\"/assets/images/tutorials/bot-cms/bcms-26.webp\\",alt:\\"bcms-26\\",naturalHeight:1730,naturalWidth:3358}),`\\n`,(0,e.jsxs)(t.h3,{id:\\"edit-content-in-cms-client\\",children:[(0,e.jsx)(t.a,{className:\\"anchor\\",href:\\"#edit-content-in-cms-client\\",children:(0,e.jsx)(t.span,{className:\\"icon icon-link\\"})}),\\"Edit Content in CMS Client\\"]}),`\\n`,(0,e.jsx)(t.p,{children:\\"Click on available form which is \\\\u201COrder Pizza\\\\u201D\\"}),`\\n`,(0,e.jsx)(n,{src:\\"/assets/images/tutorials/bot-cms/bcms-27.webp\\",alt:\\"bcms-27\\",naturalHeight:1702,naturalWidth:3292}),`\\n`,(0,e.jsx)(t.p,{children:\\"Fill in those elements with sentences that you want. For example:\\"}),`\\n`,(0,e.jsx)(t.pre,{children:(0,e.jsxs)(t.code,{className:\\"code-highlight\\",children:[(0,e.jsx)(t.span,{className:\\"code-line\\",children:`Asking confirmation: You\'re almost done. Do you want to order $(context.pizza)?\\n`}),(0,e.jsx)(t.span,{className:\\"code-line\\",children:`Fallback: Hmm, I don\'t understand that. How about we talk other things?\\n`}),(0,e.jsx)(t.span,{className:\\"code-line\\",children:`\\n`})]})}),`\\n`,(0,e.jsx)(t.p,{children:\\"Click on Save icon to save in each element.\\"}),`\\n`,(0,e.jsxs)(t.h2,{id:\\"show-changes-in-line\\",children:[(0,e.jsx)(t.a,{className:\\"anchor\\",href:\\"#show-changes-in-line\\",children:(0,e.jsx)(t.span,{className:\\"icon icon-link\\"})}),\\"Show Changes in LINE\\"]}),`\\n`,(0,e.jsx)(t.p,{children:\\"After you changed your deployment in environment, you can test directly in your bot\'s LINE account.\\"}),`\\n`,(0,e.jsx)(t.p,{children:\\"Testing for confirmation:\\"}),`\\n`,(0,e.jsx)(n,{src:\\"/assets/images/tutorials/bot-cms/bcms-28.webp\\",alt:\\"bcms-28\\",naturalHeight:1920,naturalWidth:1080}),`\\n`,(0,e.jsx)(t.p,{children:\\"Testing for fallback:\\"}),`\\n`,(0,e.jsx)(n,{src:\\"/assets/images/tutorials/bot-cms/bcms-29.webp\\",alt:\\"bcms-29\\",naturalHeight:1920,naturalWidth:1080})]})}}var C=v;function N(a,i){throw new Error(\\"Expected \\"+(i?\\"component\\":\\"object\\")+\\" `\\"+a+\\"` to be defined: you likely forgot to import, pass, or provide it.\\")}return k(x);})();\\n;return Component;"},"_id":"tutorials/integration-chatbot-with-cms-studio.mdx","_raw":{"sourceFilePath":"tutorials/integration-chatbot-with-cms-studio.mdx","sourceFileName":"integration-chatbot-with-cms-studio.mdx","sourceFileDir":"tutorials","contentType":"mdx","flattenedPath":"tutorials/integration-chatbot-with-cms-studio"},"type":"Tutorials","slug":["integration-chatbot-with-cms-studio"],"excerpt":"\\n## Introduction\\n\\nCMS Studio allows you to build a dashboard for your chatbot. This dashboard lets your clients to add, edit, or remove certain contents of your bot"}');
;// CONCATENATED MODULE: ./.contentlayer/generated/Tutorials/tutorials__integration-chatbot-with-nl-studio.mdx.json
const tutorials_integration_chatbot_with_nl_studio_mdx_namespaceObject = JSON.parse('{"layout":"tutorial","id":"integration-chatbot-with-nl-studio","imgSpot":"/assets/images/tutorials/spot-nl-studio-integration.webp","product":"kata-platform","title":"Integration Chatbot with NL Studio Tutorial","date":"2018-09-09T07:00:00+07:00","prev":"nl-studio-tutorial","next":"integration-chatbot-with-cms-studio","body":{"raw":"\\n## Introduction\\n\\nIn this tutorial, we will create a simple conversation bot and integrated to NL studio. For pre-condition, you must create a bot by follow this tutorial in here [Bot studio tutorial](/tutorials/bot-studio). You will create a NLModel which able to process pizza ordering orders. Further explanation for NLStudio, you may see in here [NL Studio Guideline](/tutorials/nl-studio)\\n\\nLet\'s start !\\n\\n## Create Entity\\n\\nAssumed you already logged in and visit your project. Go to NL Studio menu by click NL menu\\n\\n<FigureImage src=\\"/assets/images/tutorials/bot-nl/bnl-1.webp\\" alt=\\"bnl-1\\" naturalHeight={854} naturalWidth={1784} />\\n\\nThen, click on Create Entity to start.\\n\\n<FigureImage src=\\"/assets/images/tutorials/bot-nl/bnl-2.webp\\" alt=\\"bnl-2\\" naturalHeight={1256} naturalWidth={2324} />\\n\\nClick on Create. Here is a view after you create intent `entity`\\n\\n<FigureImage src=\\"/assets/images/tutorials/bot-nl/bnl-3.webp\\" alt=\\"bnl-3\\" naturalHeight={1046} naturalWidth={2476} />\\n\\n## Conduct Data Training\\n\\nAfter you created the entity, the next step is data training. You have to enter a sentence to train `intent` trait. Click on Training menu\\n\\n<FigureImage src=\\"/assets/images/tutorials/bot-nl/bnl-4.webp\\" alt=\\"bnl-4\\" naturalHeight={405} naturalWidth={1006} />\\n\\nThen, you are able to enter sentence to train data. Put a sentence “I want to order pizza” and press enter in your keyboard\\n\\n<FigureImage src=\\"/assets/images/tutorials/bot-nl/bnl-5.webp\\" alt=\\"bnl-5\\" naturalHeight={1480} naturalWidth={3356} />\\n\\nAfterward, click on Add Trait and select `intent:order`.\\n\\n<FigureImage src=\\"/assets/images/tutorials/bot-nl/bnl-6.webp\\" alt=\\"bnl-6\\" naturalHeight={425} naturalWidth={1008} />\\n\\nNext, click “Train” button to train entity you has created. The final display will look like this\\n\\n<FigureImage src=\\"/assets/images/tutorials/bot-nl/bnl-7.webp\\" alt=\\"bnl-7\\" naturalHeight={1198} naturalWidth={3184} />\\n\\nEntity shall train a lot for precisely understanding user\'s input, if you\'re doing training data in several sentences.\\n\\n<FigureImage src=\\"/assets/images/tutorials/bot-nl/bnl-8.webp\\" alt=\\"bnl-8\\" naturalHeight={1478} naturalWidth={2608} />\\n\\nIf you\'ve done enough training, you are able to try testing by click \\"Test NLU\\" button. This feature will support you to predict more data.\\n\\n<FigureImage src=\\"/assets/images/tutorials/bot-nl/bnl-9.webp\\" alt=\\"bnl-9\\" naturalHeight={1466} naturalWidth={2054} />\\n\\n## Publish Your NL\\n\\nThen, publish your NL for save training data and NL model.\\n\\n<FigureImage src=\\"/assets/images/tutorials/bot-nl/bnl-10.webp\\" alt=\\"bnl-10\\" naturalHeight={934} naturalWidth={1784} />\\n\\n## Integration with NLUs\\n\\nNext step is start integration with your bot using created entity. To get started, go to Bot menu and click NLUs sub-menu.\\n\\n<FigureImage src=\\"/assets/images/tutorials/bot-nl/bnl-11.webp\\" alt=\\"bnl-11\\" naturalHeight={1214} naturalWidth={2352} />\\n\\nClick on Create NLU and fill in as follow\\n\\n<FigureImage src=\\"/assets/images/tutorials/bot-nl/bnl-12.webp\\" alt=\\"bnl-12\\" naturalHeight={1252} naturalWidth={1976} />\\n\\nNLUid is found in NL menu in Setting. Click on NL menu, then click Settings\\n\\n<FigureImage src=\\"/assets/images/tutorials/bot-nl/bnl-13.webp\\" alt=\\"bnl-13\\" naturalHeight={1390} naturalWidth={2648} />\\n\\nAfterward, copy NLUid into NLUid field in Create NLU drawer as follow\\n\\n<FigureImage src=\\"/assets/images/tutorials/bot-nl/bnl-14.webp\\" alt=\\"bnl-14\\" naturalHeight={1268} naturalWidth={1934} />\\n\\nClick Create to continue. Successfully created NLUs will be appeared as follow\\n\\n<FigureImage src=\\"/assets/images/tutorials/bot-nl/bnl-15.webp\\" alt=\\"bnl-15\\" naturalHeight={1518} naturalWidth={2692} />\\n\\n## Integration with Bot\\n\\nNext, go to Conversation Flows and click on tab Intents. Select `orderTxt` that you\'ve created earlier to handle user input (you may see this tutorial [Bot studio tutorial](/tutorials/bot-studio/)), then add a new classifier as below\\n\\n<FigureImage src=\\"/assets/images/tutorials/bot-nl/bnl-16.webp\\" alt=\\"bnl-16\\" naturalHeight={1238} naturalWidth={2248} />\\n\\nClick Update to save updated Intent.\\n\\n## Testing Your Bot\\n\\nClick on Publish bot to save your bot.\\n\\n<FigureImage src=\\"/assets/images/tutorials/bot-nl/bnl-17.webp\\" alt=\\"bnl-17\\" naturalHeight={1038} naturalWidth={2096} />\\n\\nVoila, your bot is successfully integrated. Let\'s start in bot emulator.\\n\\n<FigureImage src=\\"/assets/images/tutorials/bot-nl/bnl-18.webp\\" alt=\\"bnl-18\\" naturalHeight={1198} naturalWidth={2098} />\\n","code":"var Component=(()=>{var d=Object.create;var l=Object.defineProperty;var h=Object.getOwnPropertyDescriptor;var b=Object.getOwnPropertyNames;var p=Object.getPrototypeOf,g=Object.prototype.hasOwnProperty;var o=e=>l(e,\\"__esModule\\",{value:!0});var m=(e,a)=>()=>(a||e((a={exports:{}}).exports,a),a.exports),w=(e,a)=>{for(var r in a)l(e,r,{get:a[r],enumerable:!0})},s=(e,a,r,n)=>{if(a&&typeof a==\\"object\\"||typeof a==\\"function\\")for(let i of b(a))!g.call(e,i)&&(r||i!==\\"default\\")&&l(e,i,{get:()=>a[i],enumerable:!(n=h(a,i))||n.enumerable});return e},y=(e,a)=>s(o(l(e!=null?d(p(e)):{},\\"default\\",!a&&e&&e.__esModule?{get:()=>e.default,enumerable:!0}:{value:e,enumerable:!0})),e),f=(e=>(a,r)=>e&&e.get(a)||(r=s(o({}),a,1),e&&e.set(a,r),r))(typeof WeakMap!=\\"undefined\\"?new WeakMap:0);var u=m((W,c)=>{c.exports=_jsx_runtime});var x={};w(x,{default:()=>L,frontmatter:()=>N});var t=y(u()),N={layout:\\"tutorial\\",id:\\"integration-chatbot-with-nl-studio\\",title:\\"Integration Chatbot with NL Studio Tutorial\\",imgSpot:\\"/assets/images/tutorials/spot-nl-studio-integration.webp\\",product:\\"kata-platform\\",prev:\\"nl-studio-tutorial\\",next:\\"integration-chatbot-with-cms-studio\\",date:\\"2018-09-09T07:00:00+07:00\\"};function k(e={}){let{wrapper:a}=e.components||{};return a?(0,t.jsx)(a,Object.assign({},e,{children:(0,t.jsx)(r,{})})):r();function r(){let n=Object.assign({h2:\\"h2\\",a:\\"a\\",span:\\"span\\",p:\\"p\\",code:\\"code\\"},e.components),{FigureImage:i}=n;return i||H(\\"FigureImage\\",!0),(0,t.jsxs)(t.Fragment,{children:[(0,t.jsxs)(n.h2,{id:\\"introduction\\",children:[(0,t.jsx)(n.a,{className:\\"anchor\\",href:\\"#introduction\\",children:(0,t.jsx)(n.span,{className:\\"icon icon-link\\"})}),\\"Introduction\\"]}),`\\n`,(0,t.jsxs)(n.p,{children:[\\"In this tutorial, we will create a simple conversation bot and integrated to NL studio. For pre-condition, you must create a bot by follow this tutorial in here \\",(0,t.jsx)(n.a,{href:\\"/tutorials/bot-studio\\",children:\\"Bot studio tutorial\\"}),\\". You will create a NLModel which able to process pizza ordering orders. Further explanation for NLStudio, you may see in here \\",(0,t.jsx)(n.a,{href:\\"/tutorials/nl-studio\\",children:\\"NL Studio Guideline\\"})]}),`\\n`,(0,t.jsx)(n.p,{children:\\"Let\'s start !\\"}),`\\n`,(0,t.jsxs)(n.h2,{id:\\"create-entity\\",children:[(0,t.jsx)(n.a,{className:\\"anchor\\",href:\\"#create-entity\\",children:(0,t.jsx)(n.span,{className:\\"icon icon-link\\"})}),\\"Create Entity\\"]}),`\\n`,(0,t.jsx)(n.p,{children:\\"Assumed you already logged in and visit your project. Go to NL Studio menu by click NL menu\\"}),`\\n`,(0,t.jsx)(i,{src:\\"/assets/images/tutorials/bot-nl/bnl-1.webp\\",alt:\\"bnl-1\\",naturalHeight:854,naturalWidth:1784}),`\\n`,(0,t.jsx)(n.p,{children:\\"Then, click on Create Entity to start.\\"}),`\\n`,(0,t.jsx)(i,{src:\\"/assets/images/tutorials/bot-nl/bnl-2.webp\\",alt:\\"bnl-2\\",naturalHeight:1256,naturalWidth:2324}),`\\n`,(0,t.jsxs)(n.p,{children:[\\"Click on Create. Here is a view after you create intent \\",(0,t.jsx)(n.code,{children:\\"entity\\"})]}),`\\n`,(0,t.jsx)(i,{src:\\"/assets/images/tutorials/bot-nl/bnl-3.webp\\",alt:\\"bnl-3\\",naturalHeight:1046,naturalWidth:2476}),`\\n`,(0,t.jsxs)(n.h2,{id:\\"conduct-data-training\\",children:[(0,t.jsx)(n.a,{className:\\"anchor\\",href:\\"#conduct-data-training\\",children:(0,t.jsx)(n.span,{className:\\"icon icon-link\\"})}),\\"Conduct Data Training\\"]}),`\\n`,(0,t.jsxs)(n.p,{children:[\\"After you created the entity, the next step is data training. You have to enter a sentence to train \\",(0,t.jsx)(n.code,{children:\\"intent\\"}),\\" trait. Click on Training menu\\"]}),`\\n`,(0,t.jsx)(i,{src:\\"/assets/images/tutorials/bot-nl/bnl-4.webp\\",alt:\\"bnl-4\\",naturalHeight:405,naturalWidth:1006}),`\\n`,(0,t.jsx)(n.p,{children:\\"Then, you are able to enter sentence to train data. Put a sentence \\\\u201CI want to order pizza\\\\u201D and press enter in your keyboard\\"}),`\\n`,(0,t.jsx)(i,{src:\\"/assets/images/tutorials/bot-nl/bnl-5.webp\\",alt:\\"bnl-5\\",naturalHeight:1480,naturalWidth:3356}),`\\n`,(0,t.jsxs)(n.p,{children:[\\"Afterward, click on Add Trait and select \\",(0,t.jsx)(n.code,{children:\\"intent:order\\"}),\\".\\"]}),`\\n`,(0,t.jsx)(i,{src:\\"/assets/images/tutorials/bot-nl/bnl-6.webp\\",alt:\\"bnl-6\\",naturalHeight:425,naturalWidth:1008}),`\\n`,(0,t.jsx)(n.p,{children:\\"Next, click \\\\u201CTrain\\\\u201D button to train entity you has created. The final display will look like this\\"}),`\\n`,(0,t.jsx)(i,{src:\\"/assets/images/tutorials/bot-nl/bnl-7.webp\\",alt:\\"bnl-7\\",naturalHeight:1198,naturalWidth:3184}),`\\n`,(0,t.jsx)(n.p,{children:\\"Entity shall train a lot for precisely understanding user\'s input, if you\'re doing training data in several sentences.\\"}),`\\n`,(0,t.jsx)(i,{src:\\"/assets/images/tutorials/bot-nl/bnl-8.webp\\",alt:\\"bnl-8\\",naturalHeight:1478,naturalWidth:2608}),`\\n`,(0,t.jsx)(n.p,{children:`If you\'ve done enough training, you are able to try testing by click \\"Test NLU\\" button. This feature will support you to predict more data.`}),`\\n`,(0,t.jsx)(i,{src:\\"/assets/images/tutorials/bot-nl/bnl-9.webp\\",alt:\\"bnl-9\\",naturalHeight:1466,naturalWidth:2054}),`\\n`,(0,t.jsxs)(n.h2,{id:\\"publish-your-nl\\",children:[(0,t.jsx)(n.a,{className:\\"anchor\\",href:\\"#publish-your-nl\\",children:(0,t.jsx)(n.span,{className:\\"icon icon-link\\"})}),\\"Publish Your NL\\"]}),`\\n`,(0,t.jsx)(n.p,{children:\\"Then, publish your NL for save training data and NL model.\\"}),`\\n`,(0,t.jsx)(i,{src:\\"/assets/images/tutorials/bot-nl/bnl-10.webp\\",alt:\\"bnl-10\\",naturalHeight:934,naturalWidth:1784}),`\\n`,(0,t.jsxs)(n.h2,{id:\\"integration-with-nlus\\",children:[(0,t.jsx)(n.a,{className:\\"anchor\\",href:\\"#integration-with-nlus\\",children:(0,t.jsx)(n.span,{className:\\"icon icon-link\\"})}),\\"Integration with NLUs\\"]}),`\\n`,(0,t.jsx)(n.p,{children:\\"Next step is start integration with your bot using created entity. To get started, go to Bot menu and click NLUs sub-menu.\\"}),`\\n`,(0,t.jsx)(i,{src:\\"/assets/images/tutorials/bot-nl/bnl-11.webp\\",alt:\\"bnl-11\\",naturalHeight:1214,naturalWidth:2352}),`\\n`,(0,t.jsx)(n.p,{children:\\"Click on Create NLU and fill in as follow\\"}),`\\n`,(0,t.jsx)(i,{src:\\"/assets/images/tutorials/bot-nl/bnl-12.webp\\",alt:\\"bnl-12\\",naturalHeight:1252,naturalWidth:1976}),`\\n`,(0,t.jsx)(n.p,{children:\\"NLUid is found in NL menu in Setting. Click on NL menu, then click Settings\\"}),`\\n`,(0,t.jsx)(i,{src:\\"/assets/images/tutorials/bot-nl/bnl-13.webp\\",alt:\\"bnl-13\\",naturalHeight:1390,naturalWidth:2648}),`\\n`,(0,t.jsx)(n.p,{children:\\"Afterward, copy NLUid into NLUid field in Create NLU drawer as follow\\"}),`\\n`,(0,t.jsx)(i,{src:\\"/assets/images/tutorials/bot-nl/bnl-14.webp\\",alt:\\"bnl-14\\",naturalHeight:1268,naturalWidth:1934}),`\\n`,(0,t.jsx)(n.p,{children:\\"Click Create to continue. Successfully created NLUs will be appeared as follow\\"}),`\\n`,(0,t.jsx)(i,{src:\\"/assets/images/tutorials/bot-nl/bnl-15.webp\\",alt:\\"bnl-15\\",naturalHeight:1518,naturalWidth:2692}),`\\n`,(0,t.jsxs)(n.h2,{id:\\"integration-with-bot\\",children:[(0,t.jsx)(n.a,{className:\\"anchor\\",href:\\"#integration-with-bot\\",children:(0,t.jsx)(n.span,{className:\\"icon icon-link\\"})}),\\"Integration with Bot\\"]}),`\\n`,(0,t.jsxs)(n.p,{children:[\\"Next, go to Conversation Flows and click on tab Intents. Select \\",(0,t.jsx)(n.code,{children:\\"orderTxt\\"}),\\" that you\'ve created earlier to handle user input (you may see this tutorial \\",(0,t.jsx)(n.a,{href:\\"/tutorials/bot-studio/\\",children:\\"Bot studio tutorial\\"}),\\"), then add a new classifier as below\\"]}),`\\n`,(0,t.jsx)(i,{src:\\"/assets/images/tutorials/bot-nl/bnl-16.webp\\",alt:\\"bnl-16\\",naturalHeight:1238,naturalWidth:2248}),`\\n`,(0,t.jsx)(n.p,{children:\\"Click Update to save updated Intent.\\"}),`\\n`,(0,t.jsxs)(n.h2,{id:\\"testing-your-bot\\",children:[(0,t.jsx)(n.a,{className:\\"anchor\\",href:\\"#testing-your-bot\\",children:(0,t.jsx)(n.span,{className:\\"icon icon-link\\"})}),\\"Testing Your Bot\\"]}),`\\n`,(0,t.jsx)(n.p,{children:\\"Click on Publish bot to save your bot.\\"}),`\\n`,(0,t.jsx)(i,{src:\\"/assets/images/tutorials/bot-nl/bnl-17.webp\\",alt:\\"bnl-17\\",naturalHeight:1038,naturalWidth:2096}),`\\n`,(0,t.jsx)(n.p,{children:\\"Voila, your bot is successfully integrated. Let\'s start in bot emulator.\\"}),`\\n`,(0,t.jsx)(i,{src:\\"/assets/images/tutorials/bot-nl/bnl-18.webp\\",alt:\\"bnl-18\\",naturalHeight:1198,naturalWidth:2098})]})}}var L=k;function H(e,a){throw new Error(\\"Expected \\"+(a?\\"component\\":\\"object\\")+\\" `\\"+e+\\"` to be defined: you likely forgot to import, pass, or provide it.\\")}return f(x);})();\\n;return Component;"},"_id":"tutorials/integration-chatbot-with-nl-studio.mdx","_raw":{"sourceFilePath":"tutorials/integration-chatbot-with-nl-studio.mdx","sourceFileName":"integration-chatbot-with-nl-studio.mdx","sourceFileDir":"tutorials","contentType":"mdx","flattenedPath":"tutorials/integration-chatbot-with-nl-studio"},"type":"Tutorials","slug":["integration-chatbot-with-nl-studio"],"excerpt":"\\n## Introduction\\n\\nIn this tutorial, we will create a simple conversation bot and integrated to NL studio. For pre-condition, you must create a bot by follow this tutorial in here [Bot studio tutorial](/tutorials/bot-studio)"}');
;// CONCATENATED MODULE: ./.contentlayer/generated/Tutorials/tutorials__nl-studio.mdx.json
const tutorials_nl_studio_mdx_namespaceObject = JSON.parse('{"layout":"tutorial","id":"nl-studio","imgSpot":"/assets/images/tutorials/spot-nl-studio.webp","product":"kata-platform","title":"NL Studio Tutorial","date":"2018-08-08T07:00:00+07:00","prev":"bot-studio-tutorial","next":"integration-chatbot-with-nl-studio","body":{"raw":"\\n## Introduction\\n\\nIn [Bot studio tutorial](/tutorials/bot-studio/), we learned how to make keyword-based chatbot to order pizza. However, keyword-based chatbot is not so smart. In this tutorial we will learn how to enhance the chatbot using NL Studio.\\n\\n## Creating a NL Model with NL Studio\\n\\n### Login to Kata | platform\\n\\nLogin to Kata | Platform by entering your username and password.\\n\\n<FigureImage\\n  src=\\"/assets/images/tutorials/nl-studio/nlst-1.webp\\"\\n  alt=\\"nlst-1\\"\\n  naturalHeight={1050}\\n  naturalWidth={878}\\n/>\\n\\nClick Login to continue\\n\\n### Create Entity Label\\n\\nAfter you entered to Kata Platform, click on the project you\'ve created\\n\\n<FigureImage\\n  src=\\"/assets/images/tutorials/nl-studio/nlst-2.webp\\"\\n  alt=\\"nlst-2\\"\\n  naturalHeight={501}\\n  naturalWidth={1919}\\n/>\\n\\nThen, click on NLU on the side bar\\n\\n<FigureImage\\n  src=\\"/assets/images/tutorials/nl-studio/nlst-3.webp\\"\\n  alt=\\"nlst-3\\"\\n  naturalHeight={557}\\n  naturalWidth={1088}\\n/>\\n\\nNext, click Create Entity. Entity has similar definition with NL Model. It will help us to classify every input from users.\\n\\n<FigureImage\\n  src=\\"/assets/images/tutorials/nl-studio/nlst-4.webp\\"\\n  alt=\\"nlst-4\\"\\n  naturalHeight={596}\\n  naturalWidth={1833}\\n/>\\n\\nNow, create an entity called `intent` that with 4 labels: `order`, `askOptions`, `confirm` and `cancel`. Further explanation about entity is explained in [NL Studio Docs](https://docs.kata.ai/nl-studio/nlu/)\\n\\n<FigureImage\\n  src=\\"/assets/images/tutorials/nl-studio/nlst-5.webp\\"\\n  alt=\\"nlst-5\\"\\n  naturalHeight={1188}\\n  naturalWidth={828}\\n/>\\n\\n### Create Entity Type\\n\\nIn this entity `type`, we will create an entity with dictionary type (further explanation about entity dictionary type is explained in [NL Studio Docs](https://docs.kata.ai/nl-studio/nlu/)). This entity will handle pizza type selection. Add new entity and fill in the data as follows\\n\\n<FigureImage\\n  src=\\"/assets/images/tutorials/nl-studio/nlst-6.webp\\"\\n  alt=\\"nlst-6\\"\\n  naturalHeight={1612}\\n  naturalWidth={832}\\n/>\\n\\nThen, continue filling the dictionary by adding other types\\n\\n<FigureImage\\n  src=\\"/assets/images/tutorials/nl-studio/nlst-7.webp\\"\\n  alt=\\"nlst-7\\"\\n  naturalHeight={1558}\\n  naturalWidth={824}\\n/>\\n\\n### Create Entity Size\\n\\nEntity `size` is used to handle pizzas size. In this entity, we will use `Belongs to` feature which binds an entity under another entity (further explanation about belongsTo usage is explained in [NL Studio Docs](https://docs.kata.ai/nl-studio/nlu/)). We will put entity `size` under entity `type`.\\n\\n<FigureImage\\n  src=\\"/assets/images/tutorials/nl-studio/nlst-8.webp\\"\\n  alt=\\"nlst-8\\"\\n  naturalHeight={1076}\\n  naturalWidth={808}\\n/>\\n\\nIn dictionary section, enter a keyword as a prediction for input from users\\n\\n<FigureImage\\n  src=\\"/assets/images/tutorials/nl-studio/nlst-9.webp\\"\\n  alt=\\"nlst-9\\"\\n  naturalHeight={1342}\\n  naturalWidth={842}\\n/>\\n\\n### Create Entity Crust\\n\\nNext, we will create an entity named `crust` to find out crust type on pizza. We\'ll put it under entity `type`.\\n\\n<FigureImage\\n  src=\\"/assets/images/tutorials/nl-studio/nlst-10.webp\\"\\n  alt=\\"nlst-10\\"\\n  naturalHeight={928}\\n  naturalWidth={1531}\\n/>\\n\\nEnter the data as follows\\n\\n<FigureImage\\n  src=\\"/assets/images/tutorials/nl-studio/nlst-11.webp\\"\\n  alt=\\"nlst-11\\"\\n  naturalHeight={1332}\\n  naturalWidth={856}\\n/>\\n\\n### Create Entity Qty\\n\\nIn pizza chatbot which we created earlier, user must enter pizza number to purchase using regex (regular expression.)\\n\\nEntity `qty` will use dictionary by entering numbers or keywords related to the number of pizzas ordered. Add entity then fill in the form as follows\\n\\n<FigureImage\\n  src=\\"/assets/images/tutorials/nl-studio/nlst-12.webp\\"\\n  alt=\\"nlst-12\\"\\n  naturalHeight={943}\\n  naturalWidth={1907}\\n/>\\n\\nThen, fill in as below\\n\\n<FigureImage\\n  src=\\"/assets/images/tutorials/nl-studio/nlst-13.webp\\"\\n  alt=\\"nlst-13\\"\\n  naturalHeight={1342}\\n  naturalWidth={846}\\n/>\\n\\nAfter you\'ve created entities, try to train data using your defined entities.\\n\\n### Training Your Model\\n\\nTo start training, enter Training menu under NLU\\n\\n<FigureImage\\n  src=\\"/assets/images/tutorials/nl-studio/nlst-14.webp\\"\\n  alt=\\"nlst-14\\"\\n  naturalHeight={405}\\n  naturalWidth={1006}\\n/>\\n\\nEnter a simple phrase like \\"want pizza\\" and press \\"enter\\" on your keyboard\\n\\n<FigureImage\\n  src=\\"/assets/images/tutorials/nl-studio/nlst-15.webp\\"\\n  alt=\\"nlst-15\\"\\n  naturalHeight={600}\\n  naturalWidth={1076}\\n/>\\n\\nThen, in this section you can start tagging and classifying text. Click on Add Trait, then select `intent: order`.\\n\\n<FigureImage\\n  src=\\"/assets/images/tutorials/nl-studio/nlst-16.webp\\"\\n  alt=\\"nlst-16\\"\\n  naturalHeight={678}\\n  naturalWidth={1086}\\n/>\\n\\nClick Train to submit your dataset.\\n\\n<FigureImage\\n  src=\\"/assets/images/tutorials/nl-studio/nlst-17.webp\\"\\n  alt=\\"nlst-17\\"\\n  naturalHeight={498}\\n  naturalWidth={1551}\\n/>\\n\\nThen, add a few more sentences to train more data. You can follow this\\n\\n<FigureImage\\n  src=\\"/assets/images/tutorials/nl-studio/nlst-18.webp\\"\\n  alt=\\"nlst-18\\"\\n  naturalHeight={764}\\n  naturalWidth={1543}\\n/>\\n\\nIn our next example, we will do partial tagging by entering text and doing text selection on the word we want to tag. **The process of selecting text can be done by blocking one or more words at a time using a cursor.**\\n\\nYou can follow the example in this following picture. On the sentence \\"how much american all star\\", select only on the word \\"American all star\\"\\n\\n<FigureImage\\n  src=\\"/assets/images/tutorials/nl-studio/nlst-19.webp\\"\\n  alt=\\"nlst-19\\"\\n  naturalHeight={760}\\n  naturalWidth={1068}\\n/>\\n\\nThen, select entity `type` to classify\\n\\n<FigureImage\\n  src=\\"/assets/images/tutorials/nl-studio/nlst-20.webp\\"\\n  alt=\\"nlst-20\\"\\n  naturalHeight={384}\\n  naturalWidth={1014}\\n/>\\n\\nYou can also enter a phrase \\"I want American all star pizza, two and bbq hand tossed one\\" and tag it like this\\n\\n<FigureImage\\n  src=\\"/assets/images/tutorials/nl-studio/nlst-21.webp\\"\\n  alt=\\"nlst-21\\"\\n  naturalHeight={1252}\\n  naturalWidth={1076}\\n/>\\n\\nYou may see a number beside an entity. That number represents how accurate an entity identifies a phrase (highest is 1.0)\\n\\nTry to tag more sentences.\\n\\n<FigureImage\\n  src=\\"/assets/images/tutorials/nl-studio/nlst-22.webp\\"\\n  alt=\\"nlst-22\\"\\n  naturalHeight={948}\\n  naturalWidth={1074}\\n/>\\n\\nNext, we will define parent entity using `BelongsTo`. Click on `BelongsTo` dropdown on `small` phrase, then select \\"Pepperoni\\". Final result looks like this\\n\\n<FigureImage\\n  src=\\"/assets/images/tutorials/nl-studio/nlst-23.webp\\"\\n  alt=\\"nlst-23\\"\\n  naturalHeight={954}\\n  naturalWidth={1070}\\n/>\\n\\n### Testing NLU in Prediction Console\\n\\nUse Test NLU to test a dataset.\\n\\n<FigureImage\\n  src=\\"/assets/images/tutorials/nl-studio/nlst-24.webp\\"\\n  alt=\\"nlst-24\\"\\n  naturalHeight={312}\\n  naturalWidth={846}\\n/>\\n\\nEnter a word such as \\"i want two aas\\" (read: aas means American All Star). You can see the prediction result as you can see in this image\\n\\n<FigureImage\\n  src=\\"/assets/images/tutorials/nl-studio/nlst-25.webp\\"\\n  alt=\\"nlst-25\\"\\n  naturalHeight={1162}\\n  naturalWidth={992}\\n/>\\n\\n## Adjusting the Dataset\\n\\nWhen performing NLU prediction in Test NLU, sometimes the prediction result is wrong, incomplete, or still has a low confidence score.\\n\\n<FigureImage\\n  src=\\"/assets/images/tutorials/nl-studio/nlst-26.webp\\"\\n  alt=\\"nlst-26\\"\\n  naturalHeight={1072}\\n  naturalWidth={914}\\n/>\\n\\nFor example, the sentence above should be tagged as `intent:order`. However, prediction result has no prediction to order. To improve or fix a prediction, enter Log menu.\\n\\n### Enter Log Menu\\n\\nGo to Log menu under NLU\\n\\n<FigureImage\\n  src=\\"/assets/images/tutorials/nl-studio/nlst-27.webp\\"\\n  alt=\\"nlst-27\\"\\n  naturalHeight={628}\\n  naturalWidth={1839}\\n/>\\n\\nOn this page, you will see previous dataset when you have predicted on Test NLU.\\n\\n### Fix The Prediction\\n\\nWe will adjust the dataset. Click on pencil icon (which placed in left icon)\\n\\n<FigureImage\\n  src=\\"/assets/images/tutorials/nl-studio/nlst-28.webp\\"\\n  alt=\\"nlst-28\\"\\n  naturalHeight={603}\\n  naturalWidth={1836}\\n/>\\n\\nThen, select `intent:order`.\\n\\n<FigureImage\\n  src=\\"/assets/images/tutorials/nl-studio/nlst-29.webp\\"\\n  alt=\\"nlst-29\\"\\n  naturalHeight={714}\\n  naturalWidth={1084}\\n/>\\n\\nClick train to revise the prediction. Trained data will be seen as follow.\\n\\n<FigureImage\\n  src=\\"/assets/images/tutorials/nl-studio/nlst-30.webp\\"\\n  alt=\\"nlst-30\\"\\n  naturalHeight={220}\\n  naturalWidth={1074}\\n/>\\n\\nYou will receive a notification after you click “Train”\\n\\n### Test NLU with data that has been fixed\\n\\nWe will try to predict another dataset and see if the result has been improved. Click Test NLU and enter a phrase \\"hi, do you sell aas\\".\\n\\n<FigureImage\\n  src=\\"/assets/images/tutorials/nl-studio/nlst-31.webp\\"\\n  alt=\\"nlst-31\\"\\n  naturalHeight={1148}\\n  naturalWidth={994}\\n/>\\n\\nCongratulations, now you have learned how to train entity in NL Studio.\\n","code":"var Component=(()=>{var h=Object.create;var l=Object.defineProperty;var u=Object.getOwnPropertyDescriptor;var p=Object.getOwnPropertyNames;var g=Object.getPrototypeOf,m=Object.prototype.hasOwnProperty;var r=a=>l(a,\\"__esModule\\",{value:!0});var w=(a,i)=>()=>(i||a((i={exports:{}}).exports,i),i.exports),y=(a,i)=>{for(var s in i)l(a,s,{get:i[s],enumerable:!0})},o=(a,i,s,e)=>{if(i&&typeof i==\\"object\\"||typeof i==\\"function\\")for(let n of p(i))!m.call(a,n)&&(s||n!==\\"default\\")&&l(a,n,{get:()=>i[n],enumerable:!(e=u(i,n))||e.enumerable});return a},b=(a,i)=>o(r(l(a!=null?h(g(a)):{},\\"default\\",!i&&a&&a.__esModule?{get:()=>a.default,enumerable:!0}:{value:a,enumerable:!0})),a),f=(a=>(i,s)=>a&&a.get(i)||(s=o(r({}),i,1),a&&a.set(i,s),s))(typeof WeakMap!=\\"undefined\\"?new WeakMap:0);var d=w((L,c)=>{c.exports=_jsx_runtime});var H={};y(H,{default:()=>x,frontmatter:()=>N});var t=b(d()),N={layout:\\"tutorial\\",id:\\"nl-studio\\",title:\\"NL Studio Tutorial\\",imgSpot:\\"/assets/images/tutorials/spot-nl-studio.webp\\",product:\\"kata-platform\\",prev:\\"bot-studio-tutorial\\",next:\\"integration-chatbot-with-nl-studio\\",date:\\"2018-08-08T07:00:00+07:00\\"};function k(a={}){let{wrapper:i}=a.components||{};return i?(0,t.jsx)(i,Object.assign({},a,{children:(0,t.jsx)(s,{})})):s();function s(){let e=Object.assign({h2:\\"h2\\",a:\\"a\\",span:\\"span\\",p:\\"p\\",h3:\\"h3\\",code:\\"code\\",strong:\\"strong\\"},a.components),{FigureImage:n}=e;return n||W(\\"FigureImage\\",!0),(0,t.jsxs)(t.Fragment,{children:[(0,t.jsxs)(e.h2,{id:\\"introduction\\",children:[(0,t.jsx)(e.a,{className:\\"anchor\\",href:\\"#introduction\\",children:(0,t.jsx)(e.span,{className:\\"icon icon-link\\"})}),\\"Introduction\\"]}),`\\n`,(0,t.jsxs)(e.p,{children:[\\"In \\",(0,t.jsx)(e.a,{href:\\"/tutorials/bot-studio/\\",children:\\"Bot studio tutorial\\"}),\\", we learned how to make keyword-based chatbot to order pizza. However, keyword-based chatbot is not so smart. In this tutorial we will learn how to enhance the chatbot using NL Studio.\\"]}),`\\n`,(0,t.jsxs)(e.h2,{id:\\"creating-a-nl-model-with-nl-studio\\",children:[(0,t.jsx)(e.a,{className:\\"anchor\\",href:\\"#creating-a-nl-model-with-nl-studio\\",children:(0,t.jsx)(e.span,{className:\\"icon icon-link\\"})}),\\"Creating a NL Model with NL Studio\\"]}),`\\n`,(0,t.jsxs)(e.h3,{id:\\"login-to-kata--platform\\",children:[(0,t.jsx)(e.a,{className:\\"anchor\\",href:\\"#login-to-kata--platform\\",children:(0,t.jsx)(e.span,{className:\\"icon icon-link\\"})}),\\"Login to Kata | platform\\"]}),`\\n`,(0,t.jsx)(e.p,{children:\\"Login to Kata | Platform by entering your username and password.\\"}),`\\n`,(0,t.jsx)(n,{src:\\"/assets/images/tutorials/nl-studio/nlst-1.webp\\",alt:\\"nlst-1\\",naturalHeight:1050,naturalWidth:878}),`\\n`,(0,t.jsx)(e.p,{children:\\"Click Login to continue\\"}),`\\n`,(0,t.jsxs)(e.h3,{id:\\"create-entity-label\\",children:[(0,t.jsx)(e.a,{className:\\"anchor\\",href:\\"#create-entity-label\\",children:(0,t.jsx)(e.span,{className:\\"icon icon-link\\"})}),\\"Create Entity Label\\"]}),`\\n`,(0,t.jsx)(e.p,{children:\\"After you entered to Kata Platform, click on the project you\'ve created\\"}),`\\n`,(0,t.jsx)(n,{src:\\"/assets/images/tutorials/nl-studio/nlst-2.webp\\",alt:\\"nlst-2\\",naturalHeight:501,naturalWidth:1919}),`\\n`,(0,t.jsx)(e.p,{children:\\"Then, click on NLU on the side bar\\"}),`\\n`,(0,t.jsx)(n,{src:\\"/assets/images/tutorials/nl-studio/nlst-3.webp\\",alt:\\"nlst-3\\",naturalHeight:557,naturalWidth:1088}),`\\n`,(0,t.jsx)(e.p,{children:\\"Next, click Create Entity. Entity has similar definition with NL Model. It will help us to classify every input from users.\\"}),`\\n`,(0,t.jsx)(n,{src:\\"/assets/images/tutorials/nl-studio/nlst-4.webp\\",alt:\\"nlst-4\\",naturalHeight:596,naturalWidth:1833}),`\\n`,(0,t.jsxs)(e.p,{children:[\\"Now, create an entity called \\",(0,t.jsx)(e.code,{children:\\"intent\\"}),\\" that with 4 labels: \\",(0,t.jsx)(e.code,{children:\\"order\\"}),\\", \\",(0,t.jsx)(e.code,{children:\\"askOptions\\"}),\\", \\",(0,t.jsx)(e.code,{children:\\"confirm\\"}),\\" and \\",(0,t.jsx)(e.code,{children:\\"cancel\\"}),\\". Further explanation about entity is explained in \\",(0,t.jsx)(e.a,{href:\\"https://docs.kata.ai/nl-studio/nlu/\\",children:\\"NL Studio Docs\\"})]}),`\\n`,(0,t.jsx)(n,{src:\\"/assets/images/tutorials/nl-studio/nlst-5.webp\\",alt:\\"nlst-5\\",naturalHeight:1188,naturalWidth:828}),`\\n`,(0,t.jsxs)(e.h3,{id:\\"create-entity-type\\",children:[(0,t.jsx)(e.a,{className:\\"anchor\\",href:\\"#create-entity-type\\",children:(0,t.jsx)(e.span,{className:\\"icon icon-link\\"})}),\\"Create Entity Type\\"]}),`\\n`,(0,t.jsxs)(e.p,{children:[\\"In this entity \\",(0,t.jsx)(e.code,{children:\\"type\\"}),\\", we will create an entity with dictionary type (further explanation about entity dictionary type is explained in \\",(0,t.jsx)(e.a,{href:\\"https://docs.kata.ai/nl-studio/nlu/\\",children:\\"NL Studio Docs\\"}),\\"). This entity will handle pizza type selection. Add new entity and fill in the data as follows\\"]}),`\\n`,(0,t.jsx)(n,{src:\\"/assets/images/tutorials/nl-studio/nlst-6.webp\\",alt:\\"nlst-6\\",naturalHeight:1612,naturalWidth:832}),`\\n`,(0,t.jsx)(e.p,{children:\\"Then, continue filling the dictionary by adding other types\\"}),`\\n`,(0,t.jsx)(n,{src:\\"/assets/images/tutorials/nl-studio/nlst-7.webp\\",alt:\\"nlst-7\\",naturalHeight:1558,naturalWidth:824}),`\\n`,(0,t.jsxs)(e.h3,{id:\\"create-entity-size\\",children:[(0,t.jsx)(e.a,{className:\\"anchor\\",href:\\"#create-entity-size\\",children:(0,t.jsx)(e.span,{className:\\"icon icon-link\\"})}),\\"Create Entity Size\\"]}),`\\n`,(0,t.jsxs)(e.p,{children:[\\"Entity \\",(0,t.jsx)(e.code,{children:\\"size\\"}),\\" is used to handle pizzas size. In this entity, we will use \\",(0,t.jsx)(e.code,{children:\\"Belongs to\\"}),\\" feature which binds an entity under another entity (further explanation about belongsTo usage is explained in \\",(0,t.jsx)(e.a,{href:\\"https://docs.kata.ai/nl-studio/nlu/\\",children:\\"NL Studio Docs\\"}),\\"). We will put entity \\",(0,t.jsx)(e.code,{children:\\"size\\"}),\\" under entity \\",(0,t.jsx)(e.code,{children:\\"type\\"}),\\".\\"]}),`\\n`,(0,t.jsx)(n,{src:\\"/assets/images/tutorials/nl-studio/nlst-8.webp\\",alt:\\"nlst-8\\",naturalHeight:1076,naturalWidth:808}),`\\n`,(0,t.jsx)(e.p,{children:\\"In dictionary section, enter a keyword as a prediction for input from users\\"}),`\\n`,(0,t.jsx)(n,{src:\\"/assets/images/tutorials/nl-studio/nlst-9.webp\\",alt:\\"nlst-9\\",naturalHeight:1342,naturalWidth:842}),`\\n`,(0,t.jsxs)(e.h3,{id:\\"create-entity-crust\\",children:[(0,t.jsx)(e.a,{className:\\"anchor\\",href:\\"#create-entity-crust\\",children:(0,t.jsx)(e.span,{className:\\"icon icon-link\\"})}),\\"Create Entity Crust\\"]}),`\\n`,(0,t.jsxs)(e.p,{children:[\\"Next, we will create an entity named \\",(0,t.jsx)(e.code,{children:\\"crust\\"}),\\" to find out crust type on pizza. We\'ll put it under entity \\",(0,t.jsx)(e.code,{children:\\"type\\"}),\\".\\"]}),`\\n`,(0,t.jsx)(n,{src:\\"/assets/images/tutorials/nl-studio/nlst-10.webp\\",alt:\\"nlst-10\\",naturalHeight:928,naturalWidth:1531}),`\\n`,(0,t.jsx)(e.p,{children:\\"Enter the data as follows\\"}),`\\n`,(0,t.jsx)(n,{src:\\"/assets/images/tutorials/nl-studio/nlst-11.webp\\",alt:\\"nlst-11\\",naturalHeight:1332,naturalWidth:856}),`\\n`,(0,t.jsxs)(e.h3,{id:\\"create-entity-qty\\",children:[(0,t.jsx)(e.a,{className:\\"anchor\\",href:\\"#create-entity-qty\\",children:(0,t.jsx)(e.span,{className:\\"icon icon-link\\"})}),\\"Create Entity Qty\\"]}),`\\n`,(0,t.jsx)(e.p,{children:\\"In pizza chatbot which we created earlier, user must enter pizza number to purchase using regex (regular expression.)\\"}),`\\n`,(0,t.jsxs)(e.p,{children:[\\"Entity \\",(0,t.jsx)(e.code,{children:\\"qty\\"}),\\" will use dictionary by entering numbers or keywords related to the number of pizzas ordered. Add entity then fill in the form as follows\\"]}),`\\n`,(0,t.jsx)(n,{src:\\"/assets/images/tutorials/nl-studio/nlst-12.webp\\",alt:\\"nlst-12\\",naturalHeight:943,naturalWidth:1907}),`\\n`,(0,t.jsx)(e.p,{children:\\"Then, fill in as below\\"}),`\\n`,(0,t.jsx)(n,{src:\\"/assets/images/tutorials/nl-studio/nlst-13.webp\\",alt:\\"nlst-13\\",naturalHeight:1342,naturalWidth:846}),`\\n`,(0,t.jsx)(e.p,{children:\\"After you\'ve created entities, try to train data using your defined entities.\\"}),`\\n`,(0,t.jsxs)(e.h3,{id:\\"training-your-model\\",children:[(0,t.jsx)(e.a,{className:\\"anchor\\",href:\\"#training-your-model\\",children:(0,t.jsx)(e.span,{className:\\"icon icon-link\\"})}),\\"Training Your Model\\"]}),`\\n`,(0,t.jsx)(e.p,{children:\\"To start training, enter Training menu under NLU\\"}),`\\n`,(0,t.jsx)(n,{src:\\"/assets/images/tutorials/nl-studio/nlst-14.webp\\",alt:\\"nlst-14\\",naturalHeight:405,naturalWidth:1006}),`\\n`,(0,t.jsx)(e.p,{children:\'Enter a simple phrase like \\"want pizza\\" and press \\"enter\\" on your keyboard\'}),`\\n`,(0,t.jsx)(n,{src:\\"/assets/images/tutorials/nl-studio/nlst-15.webp\\",alt:\\"nlst-15\\",naturalHeight:600,naturalWidth:1076}),`\\n`,(0,t.jsxs)(e.p,{children:[\\"Then, in this section you can start tagging and classifying text. Click on Add Trait, then select \\",(0,t.jsx)(e.code,{children:\\"intent: order\\"}),\\".\\"]}),`\\n`,(0,t.jsx)(n,{src:\\"/assets/images/tutorials/nl-studio/nlst-16.webp\\",alt:\\"nlst-16\\",naturalHeight:678,naturalWidth:1086}),`\\n`,(0,t.jsx)(e.p,{children:\\"Click Train to submit your dataset.\\"}),`\\n`,(0,t.jsx)(n,{src:\\"/assets/images/tutorials/nl-studio/nlst-17.webp\\",alt:\\"nlst-17\\",naturalHeight:498,naturalWidth:1551}),`\\n`,(0,t.jsx)(e.p,{children:\\"Then, add a few more sentences to train more data. You can follow this\\"}),`\\n`,(0,t.jsx)(n,{src:\\"/assets/images/tutorials/nl-studio/nlst-18.webp\\",alt:\\"nlst-18\\",naturalHeight:764,naturalWidth:1543}),`\\n`,(0,t.jsxs)(e.p,{children:[\\"In our next example, we will do partial tagging by entering text and doing text selection on the word we want to tag. \\",(0,t.jsx)(e.strong,{children:\\"The process of selecting text can be done by blocking one or more words at a time using a cursor.\\"})]}),`\\n`,(0,t.jsx)(e.p,{children:\'You can follow the example in this following picture. On the sentence \\"how much american all star\\", select only on the word \\"American all star\\"\'}),`\\n`,(0,t.jsx)(n,{src:\\"/assets/images/tutorials/nl-studio/nlst-19.webp\\",alt:\\"nlst-19\\",naturalHeight:760,naturalWidth:1068}),`\\n`,(0,t.jsxs)(e.p,{children:[\\"Then, select entity \\",(0,t.jsx)(e.code,{children:\\"type\\"}),\\" to classify\\"]}),`\\n`,(0,t.jsx)(n,{src:\\"/assets/images/tutorials/nl-studio/nlst-20.webp\\",alt:\\"nlst-20\\",naturalHeight:384,naturalWidth:1014}),`\\n`,(0,t.jsx)(e.p,{children:\'You can also enter a phrase \\"I want American all star pizza, two and bbq hand tossed one\\" and tag it like this\'}),`\\n`,(0,t.jsx)(n,{src:\\"/assets/images/tutorials/nl-studio/nlst-21.webp\\",alt:\\"nlst-21\\",naturalHeight:1252,naturalWidth:1076}),`\\n`,(0,t.jsx)(e.p,{children:\\"You may see a number beside an entity. That number represents how accurate an entity identifies a phrase (highest is 1.0)\\"}),`\\n`,(0,t.jsx)(e.p,{children:\\"Try to tag more sentences.\\"}),`\\n`,(0,t.jsx)(n,{src:\\"/assets/images/tutorials/nl-studio/nlst-22.webp\\",alt:\\"nlst-22\\",naturalHeight:948,naturalWidth:1074}),`\\n`,(0,t.jsxs)(e.p,{children:[\\"Next, we will define parent entity using \\",(0,t.jsx)(e.code,{children:\\"BelongsTo\\"}),\\". Click on \\",(0,t.jsx)(e.code,{children:\\"BelongsTo\\"}),\\" dropdown on \\",(0,t.jsx)(e.code,{children:\\"small\\"}),\' phrase, then select \\"Pepperoni\\". Final result looks like this\']}),`\\n`,(0,t.jsx)(n,{src:\\"/assets/images/tutorials/nl-studio/nlst-23.webp\\",alt:\\"nlst-23\\",naturalHeight:954,naturalWidth:1070}),`\\n`,(0,t.jsxs)(e.h3,{id:\\"testing-nlu-in-prediction-console\\",children:[(0,t.jsx)(e.a,{className:\\"anchor\\",href:\\"#testing-nlu-in-prediction-console\\",children:(0,t.jsx)(e.span,{className:\\"icon icon-link\\"})}),\\"Testing NLU in Prediction Console\\"]}),`\\n`,(0,t.jsx)(e.p,{children:\\"Use Test NLU to test a dataset.\\"}),`\\n`,(0,t.jsx)(n,{src:\\"/assets/images/tutorials/nl-studio/nlst-24.webp\\",alt:\\"nlst-24\\",naturalHeight:312,naturalWidth:846}),`\\n`,(0,t.jsx)(e.p,{children:\'Enter a word such as \\"i want two aas\\" (read: aas means American All Star). You can see the prediction result as you can see in this image\'}),`\\n`,(0,t.jsx)(n,{src:\\"/assets/images/tutorials/nl-studio/nlst-25.webp\\",alt:\\"nlst-25\\",naturalHeight:1162,naturalWidth:992}),`\\n`,(0,t.jsxs)(e.h2,{id:\\"adjusting-the-dataset\\",children:[(0,t.jsx)(e.a,{className:\\"anchor\\",href:\\"#adjusting-the-dataset\\",children:(0,t.jsx)(e.span,{className:\\"icon icon-link\\"})}),\\"Adjusting the Dataset\\"]}),`\\n`,(0,t.jsx)(e.p,{children:\\"When performing NLU prediction in Test NLU, sometimes the prediction result is wrong, incomplete, or still has a low confidence score.\\"}),`\\n`,(0,t.jsx)(n,{src:\\"/assets/images/tutorials/nl-studio/nlst-26.webp\\",alt:\\"nlst-26\\",naturalHeight:1072,naturalWidth:914}),`\\n`,(0,t.jsxs)(e.p,{children:[\\"For example, the sentence above should be tagged as \\",(0,t.jsx)(e.code,{children:\\"intent:order\\"}),\\". However, prediction result has no prediction to order. To improve or fix a prediction, enter Log menu.\\"]}),`\\n`,(0,t.jsxs)(e.h3,{id:\\"enter-log-menu\\",children:[(0,t.jsx)(e.a,{className:\\"anchor\\",href:\\"#enter-log-menu\\",children:(0,t.jsx)(e.span,{className:\\"icon icon-link\\"})}),\\"Enter Log Menu\\"]}),`\\n`,(0,t.jsx)(e.p,{children:\\"Go to Log menu under NLU\\"}),`\\n`,(0,t.jsx)(n,{src:\\"/assets/images/tutorials/nl-studio/nlst-27.webp\\",alt:\\"nlst-27\\",naturalHeight:628,naturalWidth:1839}),`\\n`,(0,t.jsx)(e.p,{children:\\"On this page, you will see previous dataset when you have predicted on Test NLU.\\"}),`\\n`,(0,t.jsxs)(e.h3,{id:\\"fix-the-prediction\\",children:[(0,t.jsx)(e.a,{className:\\"anchor\\",href:\\"#fix-the-prediction\\",children:(0,t.jsx)(e.span,{className:\\"icon icon-link\\"})}),\\"Fix The Prediction\\"]}),`\\n`,(0,t.jsx)(e.p,{children:\\"We will adjust the dataset. Click on pencil icon (which placed in left icon)\\"}),`\\n`,(0,t.jsx)(n,{src:\\"/assets/images/tutorials/nl-studio/nlst-28.webp\\",alt:\\"nlst-28\\",naturalHeight:603,naturalWidth:1836}),`\\n`,(0,t.jsxs)(e.p,{children:[\\"Then, select \\",(0,t.jsx)(e.code,{children:\\"intent:order\\"}),\\".\\"]}),`\\n`,(0,t.jsx)(n,{src:\\"/assets/images/tutorials/nl-studio/nlst-29.webp\\",alt:\\"nlst-29\\",naturalHeight:714,naturalWidth:1084}),`\\n`,(0,t.jsx)(e.p,{children:\\"Click train to revise the prediction. Trained data will be seen as follow.\\"}),`\\n`,(0,t.jsx)(n,{src:\\"/assets/images/tutorials/nl-studio/nlst-30.webp\\",alt:\\"nlst-30\\",naturalHeight:220,naturalWidth:1074}),`\\n`,(0,t.jsx)(e.p,{children:\\"You will receive a notification after you click \\\\u201CTrain\\\\u201D\\"}),`\\n`,(0,t.jsxs)(e.h3,{id:\\"test-nlu-with-data-that-has-been-fixed\\",children:[(0,t.jsx)(e.a,{className:\\"anchor\\",href:\\"#test-nlu-with-data-that-has-been-fixed\\",children:(0,t.jsx)(e.span,{className:\\"icon icon-link\\"})}),\\"Test NLU with data that has been fixed\\"]}),`\\n`,(0,t.jsx)(e.p,{children:\'We will try to predict another dataset and see if the result has been improved. Click Test NLU and enter a phrase \\"hi, do you sell aas\\".\'}),`\\n`,(0,t.jsx)(n,{src:\\"/assets/images/tutorials/nl-studio/nlst-31.webp\\",alt:\\"nlst-31\\",naturalHeight:1148,naturalWidth:994}),`\\n`,(0,t.jsx)(e.p,{children:\\"Congratulations, now you have learned how to train entity in NL Studio.\\"})]})}}var x=k;function W(a,i){throw new Error(\\"Expected \\"+(i?\\"component\\":\\"object\\")+\\" `\\"+a+\\"` to be defined: you likely forgot to import, pass, or provide it.\\")}return f(H);})();\\n;return Component;"},"_id":"tutorials/nl-studio.mdx","_raw":{"sourceFilePath":"tutorials/nl-studio.mdx","sourceFileName":"nl-studio.mdx","sourceFileDir":"tutorials","contentType":"mdx","flattenedPath":"tutorials/nl-studio"},"type":"Tutorials","slug":["nl-studio"],"excerpt":"\\n## Introduction\\n\\nIn [Bot studio tutorial](/tutorials/bot-studio/), we learned how to make keyword-based chatbot to order pizza. However, keyword-based chatbot is not so smart"}');
;// CONCATENATED MODULE: ./.contentlayer/generated/allTutorials.mjs
// NOTE This file is auto-generated by the Contentlayer CLI
















const allTutorials = [
    tutorials_bot_studio_mdx_namespaceObject,
    tutorials_create_igdm_bot_handover_from_chatbot_to_agent_mdx_namespaceObject,
    tutorials_create_simple_bot_handover_from_chatbot_to_agent_mdx_namespaceObject,
    tutorials_hello_world_mdx_namespaceObject,
    tutorials_how_to_deploy_your_chatbot_to_line_mdx_namespaceObject,
    tutorials_how_to_deploy_your_chatbot_using_twitter_mdx_namespaceObject,
    tutorials_how_to_use_facebook_messenger_for_your_chatbot_mdx_namespaceObject,
    tutorials_how_to_use_freshchat_for_your_chatbot_mdx_namespaceObject,
    tutorials_how_to_use_instagram_messaging_automation_in_your_project_mdx_namespaceObject,
    tutorials_how_to_use_qiscus_omnichannel_to_your_chatbot_mdx_namespaceObject,
    tutorials_how_to_use_slack_as_your_chatbot_messaging_platform_mdx_namespaceObject,
    tutorials_how_to_use_telegram_as_your_chatbox_messaging_platform_mdx_namespaceObject,
    tutorials_how_to_use_whatsapp_business_api_in_my_chatbot_mdx_namespaceObject,
    tutorials_integration_chatbot_with_cms_studio_mdx_namespaceObject,
    tutorials_integration_chatbot_with_nl_studio_mdx_namespaceObject,
    tutorials_nl_studio_mdx_namespaceObject
];


/***/ }),

/***/ 5390:
/***/ ((module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.a(module, async (__webpack_handle_async_dependencies__) => {
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Hr": () => (/* reexport safe */ _allBusinessDashboards_mjs__WEBPACK_IMPORTED_MODULE_0__.H),
/* harmony export */   "xj": () => (/* reexport safe */ _allKataOmnichats_mjs__WEBPACK_IMPORTED_MODULE_1__.x),
/* harmony export */   "hF": () => (/* reexport safe */ _allKataPlatforms_mjs__WEBPACK_IMPORTED_MODULE_2__.h),
/* harmony export */   "Wt": () => (/* reexport safe */ _allQios_mjs__WEBPACK_IMPORTED_MODULE_3__.W),
/* harmony export */   "ez": () => (/* reexport safe */ _allTutorials_mjs__WEBPACK_IMPORTED_MODULE_4__.e)
/* harmony export */ });
/* unused harmony export allDocuments */
/* harmony import */ var _allBusinessDashboards_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(7702);
/* harmony import */ var _allKataOmnichats_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(7384);
/* harmony import */ var _allKataPlatforms_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(9415);
/* harmony import */ var _allQios_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(3697);
/* harmony import */ var _allTutorials_mjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(1055);
/* harmony import */ var contentlayer_client__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(7008);
var __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([contentlayer_client__WEBPACK_IMPORTED_MODULE_5__]);
contentlayer_client__WEBPACK_IMPORTED_MODULE_5__ = (__webpack_async_dependencies__.then ? await __webpack_async_dependencies__ : __webpack_async_dependencies__)[0];





// NOTE This file is auto-generated by the Contentlayer CLI






const allDocuments = [
    ..._allBusinessDashboards_mjs__WEBPACK_IMPORTED_MODULE_0__/* .allBusinessDashboards */ .H,
    ..._allKataOmnichats_mjs__WEBPACK_IMPORTED_MODULE_1__/* .allKataOmnichats */ .x,
    ..._allKataPlatforms_mjs__WEBPACK_IMPORTED_MODULE_2__/* .allKataPlatforms */ .h,
    ..._allQios_mjs__WEBPACK_IMPORTED_MODULE_3__/* .allQios */ .W,
    ..._allTutorials_mjs__WEBPACK_IMPORTED_MODULE_4__/* .allTutorials */ .e
];

});

/***/ }),

/***/ 9626:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "o": () => (/* binding */ NextImage)
/* harmony export */ });
/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(997);
/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var next_image__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(5675);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(6689);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_2__);



const MAX_PORTRAIT_HEIGHT = 480;
const MAX_LANDSCAPE_WIDTH = 720;
const calculateImageDimension = ({ naturalHeight , naturalWidth  })=>{
    // If layout is other than fill, onLoadingComplete will return small size for naturalHeight and naturalWidth
    if (naturalHeight === 0 || naturalWidth === 0) return {
        height: 0,
        width: 0,
        layout: 'fill'
    };
    if (naturalHeight > naturalWidth) {
        if (naturalHeight <= MAX_PORTRAIT_HEIGHT) {
            return {
                height: naturalHeight,
                width: naturalWidth > MAX_LANDSCAPE_WIDTH ? MAX_LANDSCAPE_WIDTH : naturalWidth,
                layout: 'intrinsic'
            };
        } else {
            return {
                height: MAX_PORTRAIT_HEIGHT,
                width: Math.floor(MAX_PORTRAIT_HEIGHT / naturalHeight * naturalWidth),
                layout: 'intrinsic'
            };
        }
    } else {
        if (naturalWidth <= MAX_LANDSCAPE_WIDTH) {
            return {
                height: naturalHeight > MAX_PORTRAIT_HEIGHT ? MAX_PORTRAIT_HEIGHT : naturalHeight,
                width: naturalWidth,
                layout: 'intrinsic'
            };
        } else {
            // Resize using max width if larger than threshold
            return {
                height: Math.floor(MAX_LANDSCAPE_WIDTH / naturalWidth * naturalHeight),
                width: MAX_LANDSCAPE_WIDTH,
                layout: 'intrinsic'
            };
        }
    }
};
const NextImage = (props)=>{
    //natural Width and naturalHeight for handling old cases
    const { src , alt , naturalWidth , naturalHeight , layout: _ , ...rest } = props;
    // const [naturalDimension, setNaturalDimension] = React.useState({ naturalWidth, naturalHeight });
    const dimension = react__WEBPACK_IMPORTED_MODULE_2___default().useMemo(()=>calculateImageDimension({
            naturalWidth,
            naturalHeight
        })
    , [
        naturalWidth,
        naturalHeight
    ]);
    return(/*#__PURE__*/ react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx(next_image__WEBPACK_IMPORTED_MODULE_1__["default"], {
        src: src,
        alt: alt,
        ...rest,
        width: dimension.width,
        height: dimension.height,
        layout: dimension.layout
    }));
};


/***/ })

};
;