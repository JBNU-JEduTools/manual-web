{"pageProps":{"tutorialPosts":[{"layout":"tutorial","id":"bot-studio","imgSpot":"/assets/images/tutorials/spot-cms.webp","product":"kata-platform","title":"Bot Studio Tutorial","date":"2018-07-07T07:00:00+07:00","prev":"hello-world-tutorial","next":"nl-studio-tutorial","body":{"raw":"\n## Introduction\n\nBuilding a chatbot on Kata | Platform is quick and easy, even with a lack of programming knowledge. In this tutorial, we will learn how to create a simple bot on LINE Messenger to order a pizza. We will also learn how to train your bot with NL Studio.\n\nLet's start by looking at this bot diagram, or commonly called “conversation tree.” Conversation tree is an overview of chatbot functionalities. In this conversation tree, we break down the process of ordering pizza and the types of bot action we want to use on each state.\n\n<FigureImage\n  src=\"/assets/images/tutorials/bot-studio/bse-1.webp\"\n  alt=\"bse-1\"\n  naturalHeight={1040}\n  naturalWidth={1040}\n/>\n\n## Sign up to Kata | Platform\n\nCreate an account on Kata | Platform to start building chatbot.\n\nOn your browser, open <a href=\"https://platform.kata.ai/login\" target=\"_blank\">https://platform.kata.ai/login</a> and click “Sign Up”\n\n<FigureImage src=\"/assets/images/tutorials/bot-studio/bse-2.webp\" alt=\"bse-2\" naturalHeight={1016} naturalWidth={870} />\n\nThen fill the form with a username, an email, and an account type. Continue by clicking \"Sign Up.\"\n\n<FigureImage src=\"/assets/images/tutorials/bot-studio/bse-3.webp\" alt=\"bse-3\" naturalHeight={1238} naturalWidth={872} />\n\nYou will get a confirmation email once our team has verified your account.\n\nYou may follow the instructions provided in the confirmation email to activate and start using your account.\n\n## Create a Project\n\n### Login to Kata | Platform\n\nOn your browser, open <a href=\"https://platform.kata.ai/login\" target=\"_blank\">platform.kata.ai/login</a> and enter your username & password.\n\n<FigureImage src=\"/assets/images/tutorials/bot-studio/bse-4.webp\" alt=\"bse-4\" naturalHeight={1050} naturalWidth={878} />\n\nClick \"Login\" to continue.\n\n### Create a project\n\nAfter you logged in, you will be taken to the Project Page.\n\n<FigureImage\n  src=\"/assets/images/tutorials/bot-studio/bse-5.webp\"\n  alt=\"bse-5\"\n  naturalHeight={1046}\n  naturalWidth={2896}\n/>\n\nClick on “Create Project” and fill in the form. Each project contains one bot design, one NL, and one CMS.\n\n<FigureImage src=\"/assets/images/tutorials/bot-studio/bse-6.webp\" alt=\"bse-6\" naturalHeight={1152} naturalWidth={842} />\n\nNLU language is used to determine which language model you want to use. Currently, we support Bahasa Indonesia and English.\n\nYou can also choose NLU Visibility to be public or private. If you choose public, **all Kata | Platform users** can utilize your NLU using root and inherit function.\n\n## Create Fallback Flow\n\n### Create fallback flow\n\nOnce you create a project, you will be redirected to the Bot Studio menu.\n\nNow we are going to learn how to create a flow. Flow is a container of **intent, state, and action**. A flow typically represents a linear process.\n\nThe first flow that we will create is a Fallback Flow. Its purpose is to handle undefined users input, or commonly called “else condition” state. In this case, the “else condition” is everything that is not “Start Order”.\n\n<FigureImage\n  src=\"/assets/images/tutorials/bot-studio/bse-1.webp\"\n  alt=\"bse-1\"\n  naturalHeight={1040}\n  naturalWidth={1040}\n/>\n\nYou may find a flow that is created automatically by the system or default flow. We will delete that flow by pressing more button and then “Delete.”\n\n<FigureImage\n  src=\"/assets/images/tutorials/bot-studio/bse-8.webp\"\n  alt=\"bse-8\"\n  naturalHeight={1008}\n  naturalWidth={1762}\n/>\n\nNext, click “Create Flow” button to create `fallback` flow. Set flow to active, persistent, and default.\n\n<FigureImage src=\"/assets/images/tutorials/bot-studio/bse-9.webp\" alt=\"bse-9\" naturalHeight={780} naturalWidth={846} />\n\n### Create fallback intent\n\nAfter you have created `fallback` flow, we will create new intent by pressing the Intents tab on the sub-menu. Then, we will create a new intent for `fallback` flow. Click “Create Intent” button to create.\n\n<FigureImage\n  src=\"/assets/images/tutorials/bot-studio/bse-10.webp\"\n  alt=\"bse-10\"\n  naturalHeight={674}\n  naturalWidth={1960}\n/>\n\nThen, fill in the form as follows\n\n<FigureImage\n  src=\"/assets/images/tutorials/bot-studio/bse-11.webp\"\n  alt=\"bse-11\"\n  naturalHeight={808}\n  naturalWidth={892}\n/>\n\n### Create State init\n\nNext, we will create a state called `init`. Click the ”+” button at the bottom right of your screen.\n\n<FigureImage\n  src=\"/assets/images/tutorials/bot-studio/bse-12.webp\"\n  alt=\"bse-12\"\n  naturalHeight={1722}\n  naturalWidth={3342}\n/>\n\nFill state with name `init` on Overview tab and set it to initial state and end state (as shown below).\n\nEnabling Initial State and End State will make `init` the first and the last flow to be checked by the bot when there isn't any flow that matches a user's input.\n\n<FigureImage\n  src=\"/assets/images/tutorials/bot-studio/bse-13.webp\"\n  alt=\"bse-13\"\n  naturalHeight={734}\n  naturalWidth={910}\n/>\n\nNow we will create a bot response to display an apology message. Click “Add actions” button to create a response.\n\n<FigureImage\n  src=\"/assets/images/tutorials/bot-studio/bse-14.webp\"\n  alt=\"bse-14\"\n  naturalHeight={626}\n  naturalWidth={860}\n/>\n\nContainer for creating action will appear\n\n<FigureImage\n  src=\"/assets/images/tutorials/bot-studio/bse-15.webp\"\n  alt=\"bse-15\"\n  naturalHeight={1200}\n  naturalWidth={840}\n/>\n\n### Create Action Text in State init\n\nClick on “+” button to create a new action.\n\n<FigureImage\n  src=\"/assets/images/tutorials/bot-studio/bse-16.webp\"\n  alt=\"bse-16\"\n  naturalHeight={1110}\n  naturalWidth={870}\n/>\n\nChoose action type “Text”\n\n<FigureImage\n  src=\"/assets/images/tutorials/bot-studio/bse-17.webp\"\n  alt=\"bse-17\"\n  naturalHeight={1382}\n  naturalWidth={860}\n/>\n\nThen, fill in the form\n\n<FigureImage\n  src=\"/assets/images/tutorials/bot-studio/bse-18.webp\"\n  alt=\"bse-18\"\n  naturalHeight={1348}\n  naturalWidth={866}\n/>\n\nClick on “Create Action” button.\n\n<FigureImage\n  src=\"/assets/images/tutorials/bot-studio/bse-19.webp\"\n  alt=\"bse-19\"\n  naturalHeight={770}\n  naturalWidth={876}\n/>\n\n### Create Self Transition in State Init\n\nThe last step to finalize `fallback` flow is to create self-transition for `init` state. Self transition is required to avoid error when the next state is not available. Click on “Transitions” and enable Self Transition.\n\n<FigureImage\n  src=\"/assets/images/tutorials/bot-studio/bse-20.webp\"\n  alt=\"bse-20\"\n  naturalHeight={1202}\n  naturalWidth={866}\n/>\n\nClick “Create” button. Your screen should look like this\n\n<FigureImage\n  src=\"/assets/images/tutorials/bot-studio/bse-21.webp\"\n  alt=\"bse-21\"\n  naturalHeight={1018}\n  naturalWidth={1840}\n/>\n\n## Create Order Flow\n\nNext, we will create `Start Order` flow to handle pizza order.\n\n<FigureImage\n  src=\"/assets/images/tutorials/bot-studio/bse-1.webp\"\n  alt=\"bse-1\"\n  naturalHeight={1040}\n  naturalWidth={1040}\n/>\n\n### Create Flow Order\n\nFirst step is to create another flow called `order` .\n\n<FigureImage\n  src=\"/assets/images/tutorials/bot-studio/bse-22.webp\"\n  alt=\"bse-22\"\n  naturalHeight={1676}\n  naturalWidth={880}\n/>\n\nCreated flow will be shown like this\n\n<FigureImage\n  src=\"/assets/images/tutorials/bot-studio/bse-23.webp\"\n  alt=\"bse-23\"\n  naturalHeight={1098}\n  naturalWidth={1642}\n/>\n\n### Create Keyword NLUs for 'Order'\n\nIn this step, we will define the NLU (Natural Language Understanding) to trigger `order` flow. NLU is used to translate user inputs into data that machine can understand. There are many types of NLU, but the type that we will use in this particular flow is called `keyword`. To define the NLU, go to NLUs menu.\n\n<FigureImage\n  src=\"/assets/images/tutorials/bot-studio/bse-24.webp\"\n  alt=\"bse-24\"\n  naturalHeight={1114}\n  naturalWidth={1680}\n/>\n\nNext, click on “Create NLU”\n\n<FigureImage\n  src=\"/assets/images/tutorials/bot-studio/bse-25.webp\"\n  alt=\"bse-25\"\n  naturalHeight={1078}\n  naturalWidth={1986}\n/>\n\nChoose Keyword type and enter keywords that represents `order`, such as “order”, “pls order”, “order pza”.\n\n<FigureImage\n  src=\"/assets/images/tutorials/bot-studio/bse-26.webp\"\n  alt=\"bse-26\"\n  naturalHeight={1698}\n  naturalWidth={904}\n/>\n\nSuccessfully created NLU looks like this\n\n<FigureImage\n  src=\"/assets/images/tutorials/bot-studio/bse-27.webp\"\n  alt=\"bse-27\"\n  naturalHeight={1034}\n  naturalWidth={2464}\n/>\n\n### Create Intent for Order\n\nEach flow requires an `intent` to classify user's inquiry and trigger matching flow. So our next step is to set initial intent for `order` flow.\n\nGo back to Conversation Flow menu and click on `order` flow, then click on “Intents” tab.\n\n<FigureImage\n  src=\"/assets/images/tutorials/bot-studio/bse-28.webp\"\n  alt=\"bse-28\"\n  naturalHeight={1012}\n  naturalWidth={1922}\n/>\n\nPreviously, you already created keyword NLUs called `order`. We will set that keyword as intent in `order` flow. Map the NLU on classifier section.\n\n<FigureImage\n  src=\"/assets/images/tutorials/bot-studio/bse-29.webp\"\n  alt=\"bse-29\"\n  naturalHeight={1688}\n  naturalWidth={922}\n/>\n\nClick “Create” to create the intent. Your screen should look like this\n\n<FigureImage\n  src=\"/assets/images/tutorials/bot-studio/bse-30.webp\"\n  alt=\"bse-30\"\n  naturalHeight={1060}\n  naturalWidth={2564}\n/>\n\n### Create a State Named init\n\nEvery flow must have at least one state. Because we haven't created any state in `order` flow, we have to create one. Let's create a state called `init`.\n\n<FigureImage\n  src=\"/assets/images/tutorials/bot-studio/bse-31.webp\"\n  alt=\"bse-31\"\n  naturalHeight={1676}\n  naturalWidth={854}\n/>\n\nClick “Create” button to create initial state.\n\nNext, we will define how the bot will respond to user who entered `order` flow.\n\n## Create Action for Pizza Menu\n\nAs seen on the conversation tree below, the first message in `order` flow is “Show Pizza Type”\n\n<FigureImage\n  src=\"/assets/images/tutorials/bot-studio/bse-1.webp\"\n  alt=\"bse-1\"\n  naturalHeight={1040}\n  naturalWidth={1040}\n/>\n\n### Create a State to Show Pizza type in Text Action Type\n\nTo get started, we need to create a state named `showPizza` on `order` flow. Click on “+” button in Conversation Flow menu.\n\n<FigureImage\n  src=\"/assets/images/tutorials/bot-studio/bse-33.webp\"\n  alt=\"bse-33\"\n  naturalHeight={1304}\n  naturalWidth={854}\n/>\n\nLet's begin by creating an action called `pizzaOptions`. This action will inform users in **text about our available pizza menu**.\n\nClick on “+” button to create an action and choose Text as action type.\n\n<FigureImage\n  src=\"/assets/images/tutorials/bot-studio/bse-34.webp\"\n  alt=\"bse-34\"\n  naturalHeight={1540}\n  naturalWidth={850}\n/>\n\nFill in Text action type to inform our pizza menu\n\n<FigureImage\n  src=\"/assets/images/tutorials/bot-studio/bse-35.webp\"\n  alt=\"bse-35\"\n  naturalHeight={917}\n  naturalWidth={792}\n/>\n\nClick on “Create Action” to finalize. Next step is to create an action called `askOptions`\n\n<FigureImage\n  src=\"/assets/images/tutorials/bot-studio/bse-36.webp\"\n  alt=\"bse-36\"\n  naturalHeight={924}\n  naturalWidth={792}\n/>\n\nClick on “Create Action” button. Your form should look like this\n\n<FigureImage\n  src=\"/assets/images/tutorials/bot-studio/bse-37.webp\"\n  alt=\"bse-37\"\n  naturalHeight={886}\n  naturalWidth={864}\n/>\n\nThen you have to make self-transition in Transition tab as follow\n\n<FigureImage\n  src=\"/assets/images/tutorials/bot-studio/bse-37-1.webp\"\n  alt=\"bse-37-1\"\n  naturalHeight={920}\n  naturalWidth={1308}\n/>\n\nClick “Create” to create the state. Successfully created state will look like this\n\n<FigureImage\n  src=\"/assets/images/tutorials/bot-studio/bse-38.webp\"\n  alt=\"bse-38\"\n  naturalHeight={1042}\n  naturalWidth={2014}\n/>\n\n### Update showPizza state Into Show Pizza Menu in Carousel Action Type\n\nPrevious step is an example to create action to **show pizza menu in text.** Let's try to update the state into Carousel action type.\n\nTo update the state, click on `showPizza` state and an update state form will appear\n\n<FigureImage\n  src=\"/assets/images/tutorials/bot-studio/bse-39.webp\"\n  alt=\"bse-39\"\n  naturalHeight={1732}\n  naturalWidth={1008}\n/>\n\nThen, remove all actions in the state by clicking “x” on each action.\n\n<FigureImage\n  src=\"/assets/images/tutorials/bot-studio/bse-40.webp\"\n  alt=\"bse-40\"\n  naturalHeight={918}\n  naturalWidth={832}\n/>\n\nAfter removing available actions, we will create an action called `pizzaMenu` as Carousel action type.\n\nClick on “Add” actions button then click on “+” button to create a new action. Choose Carousel action type to continue.\n\n<FigureImage\n  src=\"/assets/images/tutorials/bot-studio/bse-41.webp\"\n  alt=\"bse-41\"\n  naturalHeight={1142}\n  naturalWidth={836}\n/>\n\nEnter `pizzaMenu` as name\n\n<FigureImage\n  src=\"/assets/images/tutorials/bot-studio/bse-42.webp\"\n  alt=\"bse-42\"\n  naturalHeight={474}\n  naturalWidth={826}\n/>\n\nFill in the carousel content by clicking “Add carousel” button, then click on “Add action” button to define the **label and type**. Next, click on Add Payload button to enter **key and value**.\n\nFill in first carousel with this data\n\n```\nTitle: Pepperoni\nText: This is the favorite of Peps\nThumbnail Image Url: https://www.wikihow.com/images/thumb/a/a7/Make-Pepperoni-Pizza-Step-19-Version-2.jpg/aid1074004-v4-728px-Make-Pepperoni-Pizza-Step-19-Version-2.jpg.webp\nActions:\n  Label: Pepperoni\n  Type: Postback\n  Payload:\n    - key: type\n      value: pizza\n    - key: pizza\n      value: Pepperoni\n```\n\nFill in second carousel with this data\n\n```\nTitle: Veggie Lovers\nText: Vegie vegie stay healthy\nThumbnail Image Url: https://www.calcuttaweb.com/store/image/data/calcutta/pizza/veggie-lovers-pizza-pihu-7.jpg\nActions:\n  Label: Veggie Lovers\n  Type: Postback\n  Payload:\n    - key: type\n      value: pizza\n    - key: pizza\n      value: Veggie Lovers\n```\n\nYour first form should look like this\n\n<FigureImage\n  src=\"/assets/images/tutorials/bot-studio/bse-43.webp\"\n  alt=\"bse-43\"\n  naturalHeight={1336}\n  naturalWidth={752}\n/>\n\nYour second form should look like this\n\n<FigureImage\n  src=\"/assets/images/tutorials/bot-studio/bse-44.webp\"\n  alt=\"bse-44\"\n  naturalHeight={1332}\n  naturalWidth={744}\n/>\n\nFinalize this step by clicking “Create Action.”\n\nIt should look like this\n\n<FigureImage\n  src=\"/assets/images/tutorials/bot-studio/bse-45.webp\"\n  alt=\"bse-45\"\n  naturalHeight={926}\n  naturalWidth={842}\n/>\n\nOnce the bot displays a carousel containing the type for pizza menu, its next step is to ask user to select the pizza. Click “Add actions” button to trigger drop-down list, then choose `askOptions`\n\n<FigureImage\n  src=\"/assets/images/tutorials/bot-studio/bse-46.webp\"\n  alt=\"bse-46\"\n  naturalHeight={1290}\n  naturalWidth={846}\n/>\n\nAfter you select `askOptions` action click “Create Action” button to finalize this step.\n\n<FigureImage\n  src=\"/assets/images/tutorials/bot-studio/bse-47.webp\"\n  alt=\"bse-47\"\n  naturalHeight={1506}\n  naturalWidth={848}\n/>\n\nYour form should look like this\n\n<FigureImage\n  src=\"/assets/images/tutorials/bot-studio/bse-48.webp\"\n  alt=\"bse-48\"\n  naturalHeight={1704}\n  naturalWidth={850}\n/>\n\nClick “Update” to update the state.\n\n### Create Intent to Choose A Pizza\n\nNow we have to create an intent called `pizzaChosen` to handle user's input after they have selected a pizza type. Click on Intent menu in `order` flow.\n\n<FigureImage\n  src=\"/assets/images/tutorials/bot-studio/bse-49.webp\"\n  alt=\"bse-49\"\n  naturalHeight={1288}\n  naturalWidth={2716}\n/>\n\nClick on Create Intent and create intent as follow\n\n<FigureImage\n  src=\"/assets/images/tutorials/bot-studio/bse-50.webp\"\n  alt=\"bse-50\"\n  naturalHeight={1076}\n  naturalWidth={854}\n/>\n\nSuccessfully created intent looks like this\n\n<FigureImage\n  src=\"/assets/images/tutorials/bot-studio/bse-51.webp\"\n  alt=\"bse-51\"\n  naturalHeight={1074}\n  naturalWidth={3330}\n/>\n\n### Create Transition between init and showPizza\n\nNow, we will create a transition between two states that we have created before.\n\nClick the green dot on `init` state, and a connector line will appear. Connect that line to `showPizza` state. If you do it right, a Create Transition form will appear.\n\n<FigureImage\n  src=\"/assets/images/tutorials/bot-studio/bse-52.webp\"\n  alt=\"bse-52\"\n  naturalHeight={888}\n  naturalWidth={1693}\n/>\n\nFill in the form with these data, and click “Create”\n\n<FigureImage\n  src=\"/assets/images/tutorials/bot-studio/bse-52-1.webp\"\n  alt=\"bse-52-1\"\n  naturalHeight={1278}\n  naturalWidth={2766}\n/>\n\n### Create 'reenter' intent\n\nNext, we will add `reenter` intent so the bot can return to its previous state after triggering fallback state. Create the intent in `order` flow.\n\n<FigureImage\n  src=\"/assets/images/tutorials/bot-studio/bse-53.webp\"\n  alt=\"bse-53\"\n  naturalHeight={1128}\n  naturalWidth={2802}\n/>\n\n## Create Action for Asking Pizza Quantity\n\nIn this step we will learn how to create “Ask quantity” state.\n\n<FigureImage\n  src=\"/assets/images/tutorials/bot-studio/bse-1.webp\"\n  alt=\"bse-1\"\n  naturalHeight={1040}\n  naturalWidth={1040}\n/>\n\n### Create pizzaQuantity state\n\nIn this step we will create `pizzaQuantity` state to handle order quantity. The type of action we will use is in this state is Text. Click on “+” button on `order` flow and fill the form as follows\n\n<FigureImage\n  src=\"/assets/images/tutorials/bot-studio/bse-54.webp\"\n  alt=\"bse-54\"\n  naturalHeight={1418}\n  naturalWidth={786}\n/>\n\nThen you have to make self-transition in Transition tab as follow\n\n<FigureImage\n  src=\"/assets/images/tutorials/bot-studio/bse-54_1.webp\"\n  alt=\"bse-54_1\"\n  naturalHeight={920}\n  naturalWidth={1308}\n/>\n\nResult:\n\n<FigureImage\n  src=\"/assets/images/tutorials/bot-studio/bse-55.webp\"\n  alt=\"bse-55\"\n  naturalHeight={1114}\n  naturalWidth={1986}\n/>\n\n### Create NLUs quantity\n\nAfterwards, we have to handle user's input with NLUs. Because we only allowed number from 1 to 9, we will create a limitation in regex format. Click on Create NLUs and follow this screenshot\n\n<FigureImage\n  src=\"/assets/images/tutorials/bot-studio/bse-56.webp\"\n  alt=\"bse-56\"\n  naturalHeight={1062}\n  naturalWidth={816}\n/>\n\nSuccessfully created NLU will be shown like this\n\n<FigureImage\n  src=\"/assets/images/tutorials/bot-studio/bse-57.webp\"\n  alt=\"bse-57\"\n  naturalHeight={870}\n  naturalWidth={3282}\n/>\n\n### Create Intent quantity\n\nAfter we created the NLU, we will add an intent to respond user's input. In `order` flow, click on Create Intent and fill in the form\n\n<FigureImage\n  src=\"/assets/images/tutorials/bot-studio/bse-58.webp\"\n  alt=\"bse-58\"\n  naturalHeight={1414}\n  naturalWidth={816}\n/>\n\nSuccessfully created intent will look like this\n\n<FigureImage\n  src=\"/assets/images/tutorials/bot-studio/bse-59.webp\"\n  alt=\"bse-59\"\n  naturalHeight={1104}\n  naturalWidth={3288}\n/>\n\n### Create Transition between showPizza and pizzaQuantity\n\nNow we have to create a transition between `showPizza`and `pizzaQuantity`. We will also store `payload.pizza` value into `context.pizza`. Click on the blue dot on `showPizza` and drag the line to `pizzaQuantity` state to create the transition. Create Transition form will appear after you have successfully connected the states.\n\n<FigureImage\n  src=\"/assets/images/tutorials/bot-studio/bse-60.webp\"\n  alt=\"bse-60\"\n  naturalHeight={1244}\n  naturalWidth={866}\n/>\n\nCreated transition will look like this\n\n<FigureImage\n  src=\"/assets/images/tutorials/bot-studio/bse-61.webp\"\n  alt=\"bse-61\"\n  naturalHeight={1082}\n  naturalWidth={2298}\n/>\n\n## Create Confirmation Action\n\nOur next step is creating `Ask confirmation` state.\n\n<FigureImage\n  src=\"/assets/images/tutorials/bot-studio/bse-1.webp\"\n  alt=\"bse-1\"\n  naturalHeight={1040}\n  naturalWidth={1040}\n/>\n\n### Create “YESNO” keyword NLUs\n\nFirst, we will create a keyword NLU to handle `yes` and `no`. Click on Create NLUs and fill in as follows\n\n<FigureImage\n  src=\"/assets/images/tutorials/bot-studio/bse-62.webp\"\n  alt=\"bse-62\"\n  naturalHeight={1512}\n  naturalWidth={832}\n/>\n\nSuccessfully created NLU will look like this\n\n<FigureImage\n  src=\"/assets/images/tutorials/bot-studio/bse-63.webp\"\n  alt=\"bse-63\"\n  naturalHeight={1164}\n  naturalWidth={3270}\n/>\n\n### Create confirmPizza state\n\nNow we will create `confirmPizza` state to handle order confirmation. We will also store chosen pizza & quantity information in this state. Select `order` flow and click on “+” button to create `confirmPizza` state.\n\n<FigureImage\n  src=\"/assets/images/tutorials/bot-studio/bse-64.webp\"\n  alt=\"bse-64\"\n  naturalHeight={1408}\n  naturalWidth={758}\n/>\n\n## Add mapping in onTransit tab\n\n<FigureImage\n  src=\"/assets/images/tutorials/bot-studio/bse-67.webp\"\n  alt=\"bse-67\"\n  naturalHeight={510}\n  naturalWidth={760}\n/>\n\nDon't forget to add self-transition in a state. Click Create Action. Your screen should look like this\n\n<FigureImage\n  src=\"/assets/images/tutorials/bot-studio/bse-65.webp\"\n  alt=\"bse-65\"\n  naturalHeight={1192}\n  naturalWidth={2330}\n/>\n\n### Create a transition from pizzaQuantity to confirmPizza\n\nWe will make a transition by storing value (mapping) from pizza quantity **and** chosen pizza type. Click the blue dot on `pizzaQuantity` and drag the line to `confirmPizza` state to create a transition. Create Transition form will appear after you successfully connected the states.\n\n<FigureImage\n  src=\"/assets/images/tutorials/bot-studio/bse-66.webp\"\n  alt=\"bse-66\"\n  naturalHeight={1324}\n  naturalWidth={846}\n/>\n\nResult will be shown as follows\n\n<FigureImage\n  src=\"/assets/images/tutorials/bot-studio/bse-68.webp\"\n  alt=\"bse-68\"\n  naturalHeight={990}\n  naturalWidth={2420}\n/>\n\n### Create intent yesno\n\nPreviously, we already made an NLU containing `yes` and `no` keywords. We will use that NLU as a classifier on an intent.\n\nFirst of all, we will create an intent in `order` flow for the keyword `yes`\n\n<FigureImage\n  src=\"/assets/images/tutorials/bot-studio/bse-69.webp\"\n  alt=\"bse-69\"\n  naturalHeight={1422}\n  naturalWidth={804}\n/>\n\nThen, we will create an intent for keyword `no`\n\n<FigureImage\n  src=\"/assets/images/tutorials/bot-studio/bse-70.webp\"\n  alt=\"bse-70\"\n  naturalHeight={1392}\n  naturalWidth={822}\n/>\n\nBoth intent will appear as follows\n\n<FigureImage\n  src=\"/assets/images/tutorials/bot-studio/bse-71.webp\"\n  alt=\"bse-71\"\n  naturalHeight={1378}\n  naturalWidth={3276}\n/>\n\n### Create done state\n\nIn `done` state, we will complete the order by saying thank you and end the conversation. We will also set a condition when a user wants to cancel the order. So in this state we will create two actions: `sayThanks` and `sayCancel`.\n\n<FigureImage\n  src=\"/assets/images/tutorials/bot-studio/bse-72.webp\"\n  alt=\"bse-72\"\n  naturalHeight={940}\n  naturalWidth={798}\n/>\n\n<FigureImage\n  src=\"/assets/images/tutorials/bot-studio/bse-73.webp\"\n  alt=\"bse-73\"\n  naturalHeight={914}\n  naturalWidth={786}\n/>\n\nAlso, don't forget to add self transition in the state. Result:\n\n<FigureImage\n  src=\"/assets/images/tutorials/bot-studio/bse-74.webp\"\n  alt=\"bse-74\"\n  naturalHeight={1218}\n  naturalWidth={2390}\n/>\n\n### Create a transition from confirmPizza to done\n\nNext, we will connect `confirmPizza` state to `done` state. Because `done` is the last state, we will set it as default transition. Connect `confirmPizza` to `done` by clicking the blue dot and drag the line to connect the states. Create Transition form will appear after you have successfully connected the states.\n\n<FigureImage\n  src=\"/assets/images/tutorials/bot-studio/bse-75.webp\"\n  alt=\"bse-75\"\n  naturalHeight={1084}\n  naturalWidth={840}\n/>\n\nFinal flow:\n\n<FigureImage\n  src=\"/assets/images/tutorials/bot-studio/bse-76.webp\"\n  alt=\"bse-76\"\n  naturalHeight={1208}\n  naturalWidth={3262}\n/>\n\n## Publish Your Bot\n\nTo save your work, click on Publish button located at the top right of your screen. Fill in the changelog as “initial version of pizza bot” for future reference. Click “Publish” to continue.\n\n<FigureImage\n  src=\"/assets/images/tutorials/bot-studio/bse-77.webp\"\n  alt=\"bse-77\"\n  naturalHeight={1218}\n  naturalWidth={2390}\n/>\n\n<FigureImage\n  src=\"/assets/images/tutorials/bot-studio/bse-78.webp\"\n  alt=\"bse-78\"\n  naturalHeight={974}\n  naturalWidth={1066}\n/>\n\nEvery time you publish a bot, it will record a hash number (similar to Git's hash number) in Revision List.\n\n<FigureImage\n  src=\"/assets/images/tutorials/bot-studio/bse-79.webp\"\n  alt=\"bse-79\"\n  naturalHeight={538}\n  naturalWidth={3298}\n/>\n\n## Testing Your Chatbot\n\nClick on Test Chatbot on Bot Studio then type “order” to initialize `order` flow.\n\n<FigureImage\n  src=\"/assets/images/tutorials/bot-studio/bse-80.webp\"\n  alt=\"bse-80\"\n  naturalHeight={994}\n  naturalWidth={1740}\n/>\n\nCheck on the rest of the flow and make sure everything you've made works.\n\n## Deploy Your Chatbot\n\nNow we will try to deploy our chatbot to LINE Messenger.\n\n### Create deployment\n\nFirst of all, we have to create a deployment first. Find the “Deployment” menu on the left sidebar.\n\n<FigureImage\n  src=\"/assets/images/tutorials/bot-studio/bse-81.webp\"\n  alt=\"bse-81\"\n  naturalHeight={1118}\n  naturalWidth={648}\n/>\n\nClick on Create Deployment button on top right\n\n<FigureImage\n  src=\"/assets/images/tutorials/bot-studio/bse-82.webp\"\n  alt=\"bse-82\"\n  naturalHeight={794}\n  naturalWidth={3296}\n/>\n\nChoose Patch on Deployment Version.\n\n<FigureImage\n  src=\"/assets/images/tutorials/bot-studio/bse-83.webp\"\n  alt=\"bse-83\"\n  naturalHeight={932}\n  naturalWidth={1557}\n/>\n\nSuccesfully created deployment looks like this.\n\n<FigureImage\n  src=\"/assets/images/tutorials/bot-studio/bse-84.webp\"\n  alt=\"bse-84\"\n  naturalHeight={511}\n  naturalWidth={1906}\n/>\n\n### Create Environment\n\nKata | Platform 3.0 allows you to set up 3 separate environments in your project: Development, Staging, and Production. Inside each environment, you can add as many messaging channel as you like. You have to setup environment first before integrating to messaging channel.\n\nIn this tutorial, we will try to setup Production environment. Click on Environment menu under Deploy and you will be shown 3 available environments.\n\n<FigureImage\n  src=\"/assets/images/tutorials/bot-studio/bse-85.webp\"\n  alt=\"bse-85\"\n  naturalHeight={1230}\n  naturalWidth={3342}\n/>\n\nClick “Create Environment” button in Production.\n\nThe first field we have to fill in is deployment version. Choose 0.0.1 (shown on the previous step) as deployment version in Production.\n\nAnother field we have to fill in is environment URL. This URL is used to access CMS Client later.\n\n<FigureImage\n  src=\"/assets/images/tutorials/bot-studio/bse-86.webp\"\n  alt=\"bse-86\"\n  naturalHeight={788}\n  naturalWidth={858}\n/>\n\nSuccessfully created environment will look like this\n\n<FigureImage\n  src=\"/assets/images/tutorials/bot-studio/bse-87.webp\"\n  alt=\"bse-87\"\n  naturalHeight={480}\n  naturalWidth={882}\n/>\n\nNext, we need to create channel inside the environment. Click on Create Channel on Production environment and you will be redirected to Create Channel page\n\n<FigureImage\n  src=\"/assets/images/tutorials/bot-studio/bse-88.webp\"\n  alt=\"bse-88\"\n  naturalHeight={1342}\n  naturalWidth={3352}\n/>\n\nNext, click “Create Channel” and fill in as follows\n\n<FigureImage\n  src=\"/assets/images/tutorials/bot-studio/bse-89.webp\"\n  alt=\"bse-89\"\n  naturalHeight={1280}\n  naturalWidth={916}\n/>\n\nLet's setup LINE developer console so you can fill in fields highlighted with red box.\n\n### Registration to LINE Developer console\n\n**Create LINE account**\n\nTo sign up for a LINE developer account, you have to have a LINE account by <a href=\"https://line.me/en/download\" target=\"_blank\"> installing LINE application, either desktop or mobile app.</a> After you successfully registered, sign in to <a href=\"https://developers.line.biz/en/\" target=\"_blank\">https://developers.line.biz/en/</a>\n\nIn LINE Developer Console click Log In.\n\n<FigureImage\n  src=\"/assets/images/tutorials/bot-studio/bse-90.webp\"\n  alt=\"bse-90\"\n  naturalHeight={1726}\n  naturalWidth={3358}\n/>\n\nClick on Log in with LINE\n\n<FigureImage\n  src=\"/assets/images/tutorials/bot-studio/bse-91.webp\"\n  alt=\"bse-91\"\n  naturalHeight={1134}\n  naturalWidth={1054}\n/>\n\nEnter your email and password\n\n<FigureImage\n  src=\"/assets/images/tutorials/bot-studio/bse-92.webp\"\n  alt=\"bse-92\"\n  naturalHeight={1046}\n  naturalWidth={994}\n/>\n\nAfter you successfully logged in, you will be redirected to provider list dashboard\n\n<FigureImage\n  src=\"/assets/images/tutorials/bot-studio/bse-93.webp\"\n  alt=\"bse-93\"\n  naturalHeight={1686}\n  naturalWidth={3328}\n/>\n\n**Create a Provider**\n\nClick “Create New Provider”\n\n<FigureImage\n  src=\"/assets/images/tutorials/bot-studio/bse-94.webp\"\n  alt=\"bse-94\"\n  naturalHeight={1158}\n  naturalWidth={2814}\n/>\n\nFill in provider name\n\n<FigureImage\n  src=\"/assets/images/tutorials/bot-studio/bse-95.webp\"\n  alt=\"bse-95\"\n  naturalHeight={1382}\n  naturalWidth={3358}\n/>\n\nClick Confirm to continue. You will have to re-confirm the provider name since it cannot be changed later. Click “Create” to confirm.\n\n<FigureImage\n  src=\"/assets/images/tutorials/bot-studio/bse-96.webp\"\n  alt=\"bse-96\"\n  naturalHeight={1154}\n  naturalWidth={3358}\n/>\n\n### Setup Channel for LINE Integration\n\nSetup channel in Messaging API by clicking Create Channel on Messaging API.\n\n<FigureImage\n  src=\"/assets/images/tutorials/bot-studio/bse-97.webp\"\n  alt=\"bse-97\"\n  naturalHeight={1438}\n  naturalWidth={2812}\n/>\n\nFill in the form as follows\n\n<FigureImage\n  src=\"/assets/images/tutorials/bot-studio/bse-98.webp\"\n  alt=\"bse-98\"\n  naturalHeight={1714}\n  naturalWidth={3348}\n/>\n\n<FigureImage\n  src=\"/assets/images/tutorials/bot-studio/bse-99.webp\"\n  alt=\"bse-99\"\n  naturalHeight={536}\n  naturalWidth={2726}\n/>\n\nNext, you have to choose **Developer Trial as Plan**\n\n<FigureImage\n  src=\"/assets/images/tutorials/bot-studio/bse-100.webp\"\n  alt=\"bse-100\"\n  naturalHeight={510}\n  naturalWidth={2322}\n/>\n\nAccept Terms of Use from LINE then click Create\n\n<FigureImage\n  src=\"/assets/images/tutorials/bot-studio/bse-101.webp\"\n  alt=\"bse-101\"\n  naturalHeight={548}\n  naturalWidth={1970}\n/>\n\nSuccessfuly created channel will look like this\n\n<FigureImage\n  src=\"/assets/images/tutorials/bot-studio/bse-102.webp\"\n  alt=\"bse-102\"\n  naturalHeight={1012}\n  naturalWidth={1176}\n/>\n\n### Integration LINE and Your Chatbot\n\nClick on created channel to fill in Channel Access Token and Channel Secret. Here is the guideline to fill in those fields\n\n#### Fill in Channel Access Token field\n\nClick “Issue” in Messaging Settings section\n\n<FigureImage\n  src=\"/assets/images/tutorials/bot-studio/bse-103.webp\"\n  alt=\"bse-103\"\n  naturalHeight={1086}\n  naturalWidth={2724}\n/>\n\nThen, issue dialog will pop up. Click on Issue to continue\n\n<FigureImage\n  src=\"/assets/images/tutorials/bot-studio/bse-104.webp\"\n  alt=\"bse-104\"\n  naturalHeight={782}\n  naturalWidth={1084}\n/>\n\nThen, copy Channel Access Token below and paste it on Create Channel form in Kata | Platform\n\n<FigureImage\n  src=\"/assets/images/tutorials/bot-studio/bse-105.webp\"\n  alt=\"bse-105\"\n  naturalHeight={380}\n  naturalWidth={2732}\n/>\n\n<FigureImage\n  src=\"/assets/images/tutorials/bot-studio/bse-106.webp\"\n  alt=\"bse-106\"\n  naturalHeight={964}\n  naturalWidth={740}\n/>\n\n**Fill in Channel Secret field**\n\nIn Basic Information, copy Channel Secret from LINE to Kata | Platform\n\n<FigureImage\n  src=\"/assets/images/tutorials/bot-studio/bse-107.webp\"\n  alt=\"bse-107\"\n  naturalHeight={1612}\n  naturalWidth={2896}\n/>\n\n<FigureImage\n  src=\"/assets/images/tutorials/bot-studio/bse-108.webp\"\n  alt=\"bse-108\"\n  naturalHeight={996}\n  naturalWidth={766}\n/>\n\nFinal result in Kata | Platform will look like this\n\n<FigureImage\n  src=\"/assets/images/tutorials/bot-studio/bse-109.webp\"\n  alt=\"bse-109\"\n  naturalHeight={996}\n  naturalWidth={766}\n/>\n\nClick “Create” to generate webhook URL from Kata | Platform.\n\n<FigureImage\n  src=\"/assets/images/tutorials/bot-studio/bse-110.webp\"\n  alt=\"bse-110\"\n  naturalHeight={506}\n  naturalWidth={2780}\n/>\n\nAfter webhook URL is generated, go to Messaging Settings in LINE developer console to enable webhook. **Please check that you already enable the webhook by click on Enable in \"Use Webhoooks\" section which placed above Webhook URL field**\n\n<FigureImage\n  src=\"/assets/images/tutorials/bot-studio/bse-111.webp\"\n  alt=\"bse-111\"\n  naturalHeight={678}\n  naturalWidth={2832}\n/>\n\nClick “Update” then paste the webhook URL to LINE developer console.\n\n<FigureImage\n  src=\"/assets/images/tutorials/bot-studio/bse-112.webp\"\n  alt=\"bse-112\"\n  naturalHeight={892}\n  naturalWidth={2820}\n/>\n\nClick “Update” then click “Verify.”\n\n<FigureImage\n  src=\"/assets/images/tutorials/bot-studio/bse-113.webp\"\n  alt=\"bse-113\"\n  naturalHeight={928}\n  naturalWidth={2836}\n/>\n\nNext, disable auto-reply messages and greeting messages\n\n<FigureImage\n  src=\"/assets/images/tutorials/bot-studio/bse-114.webp\"\n  alt=\"bse-114\"\n  naturalHeight={856}\n  naturalWidth={2828}\n/>\n\nVoila! You have successfully deployed your bot to LINE Messenger.\n\nScan the QR Code in LINE Developer Console to add the bot.\n\n<FigureImage\n  src=\"/assets/images/tutorials/bot-studio/bse-115.webp\"\n  alt=\"bse-115\"\n  naturalHeight={582}\n  naturalWidth={2082}\n/>\n\nThen, test to scan QR Code\n\n<FigureImage\n  src=\"/assets/images/tutorials/bot-studio/bse-116.webp\"\n  alt=\"bse-116\"\n  naturalHeight={1920}\n  naturalWidth={1080}\n/>\n","code":"var Component=(()=>{var h=Object.create;var o=Object.defineProperty;var u=Object.getOwnPropertyDescriptor;var b=Object.getOwnPropertyNames;var p=Object.getPrototypeOf,m=Object.prototype.hasOwnProperty;var l=n=>o(n,\"__esModule\",{value:!0});var g=(n,i)=>()=>(i||n((i={exports:{}}).exports,i),i.exports),w=(n,i)=>{for(var s in i)o(n,s,{get:i[s],enumerable:!0})},r=(n,i,s,t)=>{if(i&&typeof i==\"object\"||typeof i==\"function\")for(let a of b(i))!m.call(n,a)&&(s||a!==\"default\")&&o(n,a,{get:()=>i[a],enumerable:!(t=u(i,a))||t.enumerable});return n},f=(n,i)=>r(l(o(n!=null?h(p(n)):{},\"default\",!i&&n&&n.__esModule?{get:()=>n.default,enumerable:!0}:{value:n,enumerable:!0})),n),k=(n=>(i,s)=>n&&n.get(i)||(s=r(l({}),i,1),n&&n.set(i,s),s))(typeof WeakMap!=\"undefined\"?new WeakMap:0);var d=g((v,c)=>{c.exports=_jsx_runtime});var W={};w(W,{default:()=>z,frontmatter:()=>y});var e=f(d()),y={layout:\"tutorial\",id:\"bot-studio\",title:\"Bot Studio Tutorial\",imgSpot:\"/assets/images/tutorials/spot-cms.webp\",product:\"kata-platform\",prev:\"hello-world-tutorial\",next:\"nl-studio-tutorial\",date:\"2018-07-07T07:00:00+07:00\"};function N(n={}){let{wrapper:i}=n.components||{};return i?(0,e.jsx)(i,Object.assign({},n,{children:(0,e.jsx)(s,{})})):s();function s(){let t=Object.assign({h2:\"h2\",a:\"a\",span:\"span\",p:\"p\",h3:\"h3\",strong:\"strong\",code:\"code\",pre:\"pre\",h4:\"h4\"},n.components),{FigureImage:a}=t;return a||C(\"FigureImage\",!0),(0,e.jsxs)(e.Fragment,{children:[(0,e.jsxs)(t.h2,{id:\"introduction\",children:[(0,e.jsx)(t.a,{className:\"anchor\",href:\"#introduction\",children:(0,e.jsx)(t.span,{className:\"icon icon-link\"})}),\"Introduction\"]}),`\n`,(0,e.jsx)(t.p,{children:\"Building a chatbot on Kata | Platform is quick and easy, even with a lack of programming knowledge. In this tutorial, we will learn how to create a simple bot on LINE Messenger to order a pizza. We will also learn how to train your bot with NL Studio.\"}),`\n`,(0,e.jsx)(t.p,{children:\"Let's start by looking at this bot diagram, or commonly called \\u201Cconversation tree.\\u201D Conversation tree is an overview of chatbot functionalities. In this conversation tree, we break down the process of ordering pizza and the types of bot action we want to use on each state.\"}),`\n`,(0,e.jsx)(a,{src:\"/assets/images/tutorials/bot-studio/bse-1.webp\",alt:\"bse-1\",naturalHeight:1040,naturalWidth:1040}),`\n`,(0,e.jsxs)(t.h2,{id:\"sign-up-to-kata--platform\",children:[(0,e.jsx)(t.a,{className:\"anchor\",href:\"#sign-up-to-kata--platform\",children:(0,e.jsx)(t.span,{className:\"icon icon-link\"})}),\"Sign up to Kata | Platform\"]}),`\n`,(0,e.jsx)(t.p,{children:\"Create an account on Kata | Platform to start building chatbot.\"}),`\n`,(0,e.jsxs)(t.p,{children:[\"On your browser, open \",(0,e.jsx)(\"a\",{href:\"https://platform.kata.ai/login\",target:\"_blank\",children:(0,e.jsx)(t.a,{href:\"https://platform.kata.ai/login\",children:\"https://platform.kata.ai/login\"})}),\" and click \\u201CSign Up\\u201D\"]}),`\n`,(0,e.jsx)(a,{src:\"/assets/images/tutorials/bot-studio/bse-2.webp\",alt:\"bse-2\",naturalHeight:1016,naturalWidth:870}),`\n`,(0,e.jsx)(t.p,{children:'Then fill the form with a username, an email, and an account type. Continue by clicking \"Sign Up.\"'}),`\n`,(0,e.jsx)(a,{src:\"/assets/images/tutorials/bot-studio/bse-3.webp\",alt:\"bse-3\",naturalHeight:1238,naturalWidth:872}),`\n`,(0,e.jsx)(t.p,{children:\"You will get a confirmation email once our team has verified your account.\"}),`\n`,(0,e.jsx)(t.p,{children:\"You may follow the instructions provided in the confirmation email to activate and start using your account.\"}),`\n`,(0,e.jsxs)(t.h2,{id:\"create-a-project\",children:[(0,e.jsx)(t.a,{className:\"anchor\",href:\"#create-a-project\",children:(0,e.jsx)(t.span,{className:\"icon icon-link\"})}),\"Create a Project\"]}),`\n`,(0,e.jsxs)(t.h3,{id:\"login-to-kata--platform\",children:[(0,e.jsx)(t.a,{className:\"anchor\",href:\"#login-to-kata--platform\",children:(0,e.jsx)(t.span,{className:\"icon icon-link\"})}),\"Login to Kata | Platform\"]}),`\n`,(0,e.jsxs)(t.p,{children:[\"On your browser, open \",(0,e.jsx)(\"a\",{href:\"https://platform.kata.ai/login\",target:\"_blank\",children:\"platform.kata.ai/login\"}),\" and enter your username & password.\"]}),`\n`,(0,e.jsx)(a,{src:\"/assets/images/tutorials/bot-studio/bse-4.webp\",alt:\"bse-4\",naturalHeight:1050,naturalWidth:878}),`\n`,(0,e.jsx)(t.p,{children:'Click \"Login\" to continue.'}),`\n`,(0,e.jsxs)(t.h3,{id:\"create-a-project-1\",children:[(0,e.jsx)(t.a,{className:\"anchor\",href:\"#create-a-project-1\",children:(0,e.jsx)(t.span,{className:\"icon icon-link\"})}),\"Create a project\"]}),`\n`,(0,e.jsx)(t.p,{children:\"After you logged in, you will be taken to the Project Page.\"}),`\n`,(0,e.jsx)(a,{src:\"/assets/images/tutorials/bot-studio/bse-5.webp\",alt:\"bse-5\",naturalHeight:1046,naturalWidth:2896}),`\n`,(0,e.jsx)(t.p,{children:\"Click on \\u201CCreate Project\\u201D and fill in the form. Each project contains one bot design, one NL, and one CMS.\"}),`\n`,(0,e.jsx)(a,{src:\"/assets/images/tutorials/bot-studio/bse-6.webp\",alt:\"bse-6\",naturalHeight:1152,naturalWidth:842}),`\n`,(0,e.jsx)(t.p,{children:\"NLU language is used to determine which language model you want to use. Currently, we support Bahasa Indonesia and English.\"}),`\n`,(0,e.jsxs)(t.p,{children:[\"You can also choose NLU Visibility to be public or private. If you choose public, \",(0,e.jsx)(t.strong,{children:\"all Kata | Platform users\"}),\" can utilize your NLU using root and inherit function.\"]}),`\n`,(0,e.jsxs)(t.h2,{id:\"create-fallback-flow\",children:[(0,e.jsx)(t.a,{className:\"anchor\",href:\"#create-fallback-flow\",children:(0,e.jsx)(t.span,{className:\"icon icon-link\"})}),\"Create Fallback Flow\"]}),`\n`,(0,e.jsxs)(t.h3,{id:\"create-fallback-flow-1\",children:[(0,e.jsx)(t.a,{className:\"anchor\",href:\"#create-fallback-flow-1\",children:(0,e.jsx)(t.span,{className:\"icon icon-link\"})}),\"Create fallback flow\"]}),`\n`,(0,e.jsx)(t.p,{children:\"Once you create a project, you will be redirected to the Bot Studio menu.\"}),`\n`,(0,e.jsxs)(t.p,{children:[\"Now we are going to learn how to create a flow. Flow is a container of \",(0,e.jsx)(t.strong,{children:\"intent, state, and action\"}),\". A flow typically represents a linear process.\"]}),`\n`,(0,e.jsx)(t.p,{children:\"The first flow that we will create is a Fallback Flow. Its purpose is to handle undefined users input, or commonly called \\u201Celse condition\\u201D state. In this case, the \\u201Celse condition\\u201D is everything that is not \\u201CStart Order\\u201D.\"}),`\n`,(0,e.jsx)(a,{src:\"/assets/images/tutorials/bot-studio/bse-1.webp\",alt:\"bse-1\",naturalHeight:1040,naturalWidth:1040}),`\n`,(0,e.jsx)(t.p,{children:\"You may find a flow that is created automatically by the system or default flow. We will delete that flow by pressing more button and then \\u201CDelete.\\u201D\"}),`\n`,(0,e.jsx)(a,{src:\"/assets/images/tutorials/bot-studio/bse-8.webp\",alt:\"bse-8\",naturalHeight:1008,naturalWidth:1762}),`\n`,(0,e.jsxs)(t.p,{children:[\"Next, click \\u201CCreate Flow\\u201D button to create \",(0,e.jsx)(t.code,{children:\"fallback\"}),\" flow. Set flow to active, persistent, and default.\"]}),`\n`,(0,e.jsx)(a,{src:\"/assets/images/tutorials/bot-studio/bse-9.webp\",alt:\"bse-9\",naturalHeight:780,naturalWidth:846}),`\n`,(0,e.jsxs)(t.h3,{id:\"create-fallback-intent\",children:[(0,e.jsx)(t.a,{className:\"anchor\",href:\"#create-fallback-intent\",children:(0,e.jsx)(t.span,{className:\"icon icon-link\"})}),\"Create fallback intent\"]}),`\n`,(0,e.jsxs)(t.p,{children:[\"After you have created \",(0,e.jsx)(t.code,{children:\"fallback\"}),\" flow, we will create new intent by pressing the Intents tab on the sub-menu. Then, we will create a new intent for \",(0,e.jsx)(t.code,{children:\"fallback\"}),\" flow. Click \\u201CCreate Intent\\u201D button to create.\"]}),`\n`,(0,e.jsx)(a,{src:\"/assets/images/tutorials/bot-studio/bse-10.webp\",alt:\"bse-10\",naturalHeight:674,naturalWidth:1960}),`\n`,(0,e.jsx)(t.p,{children:\"Then, fill in the form as follows\"}),`\n`,(0,e.jsx)(a,{src:\"/assets/images/tutorials/bot-studio/bse-11.webp\",alt:\"bse-11\",naturalHeight:808,naturalWidth:892}),`\n`,(0,e.jsxs)(t.h3,{id:\"create-state-init\",children:[(0,e.jsx)(t.a,{className:\"anchor\",href:\"#create-state-init\",children:(0,e.jsx)(t.span,{className:\"icon icon-link\"})}),\"Create State init\"]}),`\n`,(0,e.jsxs)(t.p,{children:[\"Next, we will create a state called \",(0,e.jsx)(t.code,{children:\"init\"}),\". Click the \\u201D+\\u201D button at the bottom right of your screen.\"]}),`\n`,(0,e.jsx)(a,{src:\"/assets/images/tutorials/bot-studio/bse-12.webp\",alt:\"bse-12\",naturalHeight:1722,naturalWidth:3342}),`\n`,(0,e.jsxs)(t.p,{children:[\"Fill state with name \",(0,e.jsx)(t.code,{children:\"init\"}),\" on Overview tab and set it to initial state and end state (as shown below).\"]}),`\n`,(0,e.jsxs)(t.p,{children:[\"Enabling Initial State and End State will make \",(0,e.jsx)(t.code,{children:\"init\"}),\" the first and the last flow to be checked by the bot when there isn't any flow that matches a user's input.\"]}),`\n`,(0,e.jsx)(a,{src:\"/assets/images/tutorials/bot-studio/bse-13.webp\",alt:\"bse-13\",naturalHeight:734,naturalWidth:910}),`\n`,(0,e.jsx)(t.p,{children:\"Now we will create a bot response to display an apology message. Click \\u201CAdd actions\\u201D button to create a response.\"}),`\n`,(0,e.jsx)(a,{src:\"/assets/images/tutorials/bot-studio/bse-14.webp\",alt:\"bse-14\",naturalHeight:626,naturalWidth:860}),`\n`,(0,e.jsx)(t.p,{children:\"Container for creating action will appear\"}),`\n`,(0,e.jsx)(a,{src:\"/assets/images/tutorials/bot-studio/bse-15.webp\",alt:\"bse-15\",naturalHeight:1200,naturalWidth:840}),`\n`,(0,e.jsxs)(t.h3,{id:\"create-action-text-in-state-init\",children:[(0,e.jsx)(t.a,{className:\"anchor\",href:\"#create-action-text-in-state-init\",children:(0,e.jsx)(t.span,{className:\"icon icon-link\"})}),\"Create Action Text in State init\"]}),`\n`,(0,e.jsx)(t.p,{children:\"Click on \\u201C+\\u201D button to create a new action.\"}),`\n`,(0,e.jsx)(a,{src:\"/assets/images/tutorials/bot-studio/bse-16.webp\",alt:\"bse-16\",naturalHeight:1110,naturalWidth:870}),`\n`,(0,e.jsx)(t.p,{children:\"Choose action type \\u201CText\\u201D\"}),`\n`,(0,e.jsx)(a,{src:\"/assets/images/tutorials/bot-studio/bse-17.webp\",alt:\"bse-17\",naturalHeight:1382,naturalWidth:860}),`\n`,(0,e.jsx)(t.p,{children:\"Then, fill in the form\"}),`\n`,(0,e.jsx)(a,{src:\"/assets/images/tutorials/bot-studio/bse-18.webp\",alt:\"bse-18\",naturalHeight:1348,naturalWidth:866}),`\n`,(0,e.jsx)(t.p,{children:\"Click on \\u201CCreate Action\\u201D button.\"}),`\n`,(0,e.jsx)(a,{src:\"/assets/images/tutorials/bot-studio/bse-19.webp\",alt:\"bse-19\",naturalHeight:770,naturalWidth:876}),`\n`,(0,e.jsxs)(t.h3,{id:\"create-self-transition-in-state-init\",children:[(0,e.jsx)(t.a,{className:\"anchor\",href:\"#create-self-transition-in-state-init\",children:(0,e.jsx)(t.span,{className:\"icon icon-link\"})}),\"Create Self Transition in State Init\"]}),`\n`,(0,e.jsxs)(t.p,{children:[\"The last step to finalize \",(0,e.jsx)(t.code,{children:\"fallback\"}),\" flow is to create self-transition for \",(0,e.jsx)(t.code,{children:\"init\"}),\" state. Self transition is required to avoid error when the next state is not available. Click on \\u201CTransitions\\u201D and enable Self Transition.\"]}),`\n`,(0,e.jsx)(a,{src:\"/assets/images/tutorials/bot-studio/bse-20.webp\",alt:\"bse-20\",naturalHeight:1202,naturalWidth:866}),`\n`,(0,e.jsx)(t.p,{children:\"Click \\u201CCreate\\u201D button. Your screen should look like this\"}),`\n`,(0,e.jsx)(a,{src:\"/assets/images/tutorials/bot-studio/bse-21.webp\",alt:\"bse-21\",naturalHeight:1018,naturalWidth:1840}),`\n`,(0,e.jsxs)(t.h2,{id:\"create-order-flow\",children:[(0,e.jsx)(t.a,{className:\"anchor\",href:\"#create-order-flow\",children:(0,e.jsx)(t.span,{className:\"icon icon-link\"})}),\"Create Order Flow\"]}),`\n`,(0,e.jsxs)(t.p,{children:[\"Next, we will create \",(0,e.jsx)(t.code,{children:\"Start Order\"}),\" flow to handle pizza order.\"]}),`\n`,(0,e.jsx)(a,{src:\"/assets/images/tutorials/bot-studio/bse-1.webp\",alt:\"bse-1\",naturalHeight:1040,naturalWidth:1040}),`\n`,(0,e.jsxs)(t.h3,{id:\"create-flow-order\",children:[(0,e.jsx)(t.a,{className:\"anchor\",href:\"#create-flow-order\",children:(0,e.jsx)(t.span,{className:\"icon icon-link\"})}),\"Create Flow Order\"]}),`\n`,(0,e.jsxs)(t.p,{children:[\"First step is to create another flow called \",(0,e.jsx)(t.code,{children:\"order\"}),\" .\"]}),`\n`,(0,e.jsx)(a,{src:\"/assets/images/tutorials/bot-studio/bse-22.webp\",alt:\"bse-22\",naturalHeight:1676,naturalWidth:880}),`\n`,(0,e.jsx)(t.p,{children:\"Created flow will be shown like this\"}),`\n`,(0,e.jsx)(a,{src:\"/assets/images/tutorials/bot-studio/bse-23.webp\",alt:\"bse-23\",naturalHeight:1098,naturalWidth:1642}),`\n`,(0,e.jsxs)(t.h3,{id:\"create-keyword-nlus-for-order\",children:[(0,e.jsx)(t.a,{className:\"anchor\",href:\"#create-keyword-nlus-for-order\",children:(0,e.jsx)(t.span,{className:\"icon icon-link\"})}),\"Create Keyword NLUs for 'Order'\"]}),`\n`,(0,e.jsxs)(t.p,{children:[\"In this step, we will define the NLU (Natural Language Understanding) to trigger \",(0,e.jsx)(t.code,{children:\"order\"}),\" flow. NLU is used to translate user inputs into data that machine can understand. There are many types of NLU, but the type that we will use in this particular flow is called \",(0,e.jsx)(t.code,{children:\"keyword\"}),\". To define the NLU, go to NLUs menu.\"]}),`\n`,(0,e.jsx)(a,{src:\"/assets/images/tutorials/bot-studio/bse-24.webp\",alt:\"bse-24\",naturalHeight:1114,naturalWidth:1680}),`\n`,(0,e.jsx)(t.p,{children:\"Next, click on \\u201CCreate NLU\\u201D\"}),`\n`,(0,e.jsx)(a,{src:\"/assets/images/tutorials/bot-studio/bse-25.webp\",alt:\"bse-25\",naturalHeight:1078,naturalWidth:1986}),`\n`,(0,e.jsxs)(t.p,{children:[\"Choose Keyword type and enter keywords that represents \",(0,e.jsx)(t.code,{children:\"order\"}),\", such as \\u201Corder\\u201D, \\u201Cpls order\\u201D, \\u201Corder pza\\u201D.\"]}),`\n`,(0,e.jsx)(a,{src:\"/assets/images/tutorials/bot-studio/bse-26.webp\",alt:\"bse-26\",naturalHeight:1698,naturalWidth:904}),`\n`,(0,e.jsx)(t.p,{children:\"Successfully created NLU looks like this\"}),`\n`,(0,e.jsx)(a,{src:\"/assets/images/tutorials/bot-studio/bse-27.webp\",alt:\"bse-27\",naturalHeight:1034,naturalWidth:2464}),`\n`,(0,e.jsxs)(t.h3,{id:\"create-intent-for-order\",children:[(0,e.jsx)(t.a,{className:\"anchor\",href:\"#create-intent-for-order\",children:(0,e.jsx)(t.span,{className:\"icon icon-link\"})}),\"Create Intent for Order\"]}),`\n`,(0,e.jsxs)(t.p,{children:[\"Each flow requires an \",(0,e.jsx)(t.code,{children:\"intent\"}),\" to classify user's inquiry and trigger matching flow. So our next step is to set initial intent for \",(0,e.jsx)(t.code,{children:\"order\"}),\" flow.\"]}),`\n`,(0,e.jsxs)(t.p,{children:[\"Go back to Conversation Flow menu and click on \",(0,e.jsx)(t.code,{children:\"order\"}),\" flow, then click on \\u201CIntents\\u201D tab.\"]}),`\n`,(0,e.jsx)(a,{src:\"/assets/images/tutorials/bot-studio/bse-28.webp\",alt:\"bse-28\",naturalHeight:1012,naturalWidth:1922}),`\n`,(0,e.jsxs)(t.p,{children:[\"Previously, you already created keyword NLUs called \",(0,e.jsx)(t.code,{children:\"order\"}),\". We will set that keyword as intent in \",(0,e.jsx)(t.code,{children:\"order\"}),\" flow. Map the NLU on classifier section.\"]}),`\n`,(0,e.jsx)(a,{src:\"/assets/images/tutorials/bot-studio/bse-29.webp\",alt:\"bse-29\",naturalHeight:1688,naturalWidth:922}),`\n`,(0,e.jsx)(t.p,{children:\"Click \\u201CCreate\\u201D to create the intent. Your screen should look like this\"}),`\n`,(0,e.jsx)(a,{src:\"/assets/images/tutorials/bot-studio/bse-30.webp\",alt:\"bse-30\",naturalHeight:1060,naturalWidth:2564}),`\n`,(0,e.jsxs)(t.h3,{id:\"create-a-state-named-init\",children:[(0,e.jsx)(t.a,{className:\"anchor\",href:\"#create-a-state-named-init\",children:(0,e.jsx)(t.span,{className:\"icon icon-link\"})}),\"Create a State Named init\"]}),`\n`,(0,e.jsxs)(t.p,{children:[\"Every flow must have at least one state. Because we haven't created any state in \",(0,e.jsx)(t.code,{children:\"order\"}),\" flow, we have to create one. Let's create a state called \",(0,e.jsx)(t.code,{children:\"init\"}),\".\"]}),`\n`,(0,e.jsx)(a,{src:\"/assets/images/tutorials/bot-studio/bse-31.webp\",alt:\"bse-31\",naturalHeight:1676,naturalWidth:854}),`\n`,(0,e.jsx)(t.p,{children:\"Click \\u201CCreate\\u201D button to create initial state.\"}),`\n`,(0,e.jsxs)(t.p,{children:[\"Next, we will define how the bot will respond to user who entered \",(0,e.jsx)(t.code,{children:\"order\"}),\" flow.\"]}),`\n`,(0,e.jsxs)(t.h2,{id:\"create-action-for-pizza-menu\",children:[(0,e.jsx)(t.a,{className:\"anchor\",href:\"#create-action-for-pizza-menu\",children:(0,e.jsx)(t.span,{className:\"icon icon-link\"})}),\"Create Action for Pizza Menu\"]}),`\n`,(0,e.jsxs)(t.p,{children:[\"As seen on the conversation tree below, the first message in \",(0,e.jsx)(t.code,{children:\"order\"}),\" flow is \\u201CShow Pizza Type\\u201D\"]}),`\n`,(0,e.jsx)(a,{src:\"/assets/images/tutorials/bot-studio/bse-1.webp\",alt:\"bse-1\",naturalHeight:1040,naturalWidth:1040}),`\n`,(0,e.jsxs)(t.h3,{id:\"create-a-state-to-show-pizza-type-in-text-action-type\",children:[(0,e.jsx)(t.a,{className:\"anchor\",href:\"#create-a-state-to-show-pizza-type-in-text-action-type\",children:(0,e.jsx)(t.span,{className:\"icon icon-link\"})}),\"Create a State to Show Pizza type in Text Action Type\"]}),`\n`,(0,e.jsxs)(t.p,{children:[\"To get started, we need to create a state named \",(0,e.jsx)(t.code,{children:\"showPizza\"}),\" on \",(0,e.jsx)(t.code,{children:\"order\"}),\" flow. Click on \\u201C+\\u201D button in Conversation Flow menu.\"]}),`\n`,(0,e.jsx)(a,{src:\"/assets/images/tutorials/bot-studio/bse-33.webp\",alt:\"bse-33\",naturalHeight:1304,naturalWidth:854}),`\n`,(0,e.jsxs)(t.p,{children:[\"Let's begin by creating an action called \",(0,e.jsx)(t.code,{children:\"pizzaOptions\"}),\". This action will inform users in \",(0,e.jsx)(t.strong,{children:\"text about our available pizza menu\"}),\".\"]}),`\n`,(0,e.jsx)(t.p,{children:\"Click on \\u201C+\\u201D button to create an action and choose Text as action type.\"}),`\n`,(0,e.jsx)(a,{src:\"/assets/images/tutorials/bot-studio/bse-34.webp\",alt:\"bse-34\",naturalHeight:1540,naturalWidth:850}),`\n`,(0,e.jsx)(t.p,{children:\"Fill in Text action type to inform our pizza menu\"}),`\n`,(0,e.jsx)(a,{src:\"/assets/images/tutorials/bot-studio/bse-35.webp\",alt:\"bse-35\",naturalHeight:917,naturalWidth:792}),`\n`,(0,e.jsxs)(t.p,{children:[\"Click on \\u201CCreate Action\\u201D to finalize. Next step is to create an action called \",(0,e.jsx)(t.code,{children:\"askOptions\"})]}),`\n`,(0,e.jsx)(a,{src:\"/assets/images/tutorials/bot-studio/bse-36.webp\",alt:\"bse-36\",naturalHeight:924,naturalWidth:792}),`\n`,(0,e.jsx)(t.p,{children:\"Click on \\u201CCreate Action\\u201D button. Your form should look like this\"}),`\n`,(0,e.jsx)(a,{src:\"/assets/images/tutorials/bot-studio/bse-37.webp\",alt:\"bse-37\",naturalHeight:886,naturalWidth:864}),`\n`,(0,e.jsx)(t.p,{children:\"Then you have to make self-transition in Transition tab as follow\"}),`\n`,(0,e.jsx)(a,{src:\"/assets/images/tutorials/bot-studio/bse-37-1.webp\",alt:\"bse-37-1\",naturalHeight:920,naturalWidth:1308}),`\n`,(0,e.jsx)(t.p,{children:\"Click \\u201CCreate\\u201D to create the state. Successfully created state will look like this\"}),`\n`,(0,e.jsx)(a,{src:\"/assets/images/tutorials/bot-studio/bse-38.webp\",alt:\"bse-38\",naturalHeight:1042,naturalWidth:2014}),`\n`,(0,e.jsxs)(t.h3,{id:\"update-showpizza-state-into-show-pizza-menu-in-carousel-action-type\",children:[(0,e.jsx)(t.a,{className:\"anchor\",href:\"#update-showpizza-state-into-show-pizza-menu-in-carousel-action-type\",children:(0,e.jsx)(t.span,{className:\"icon icon-link\"})}),\"Update showPizza state Into Show Pizza Menu in Carousel Action Type\"]}),`\n`,(0,e.jsxs)(t.p,{children:[\"Previous step is an example to create action to \",(0,e.jsx)(t.strong,{children:\"show pizza menu in text.\"}),\" Let's try to update the state into Carousel action type.\"]}),`\n`,(0,e.jsxs)(t.p,{children:[\"To update the state, click on \",(0,e.jsx)(t.code,{children:\"showPizza\"}),\" state and an update state form will appear\"]}),`\n`,(0,e.jsx)(a,{src:\"/assets/images/tutorials/bot-studio/bse-39.webp\",alt:\"bse-39\",naturalHeight:1732,naturalWidth:1008}),`\n`,(0,e.jsx)(t.p,{children:\"Then, remove all actions in the state by clicking \\u201Cx\\u201D on each action.\"}),`\n`,(0,e.jsx)(a,{src:\"/assets/images/tutorials/bot-studio/bse-40.webp\",alt:\"bse-40\",naturalHeight:918,naturalWidth:832}),`\n`,(0,e.jsxs)(t.p,{children:[\"After removing available actions, we will create an action called \",(0,e.jsx)(t.code,{children:\"pizzaMenu\"}),\" as Carousel action type.\"]}),`\n`,(0,e.jsx)(t.p,{children:\"Click on \\u201CAdd\\u201D actions button then click on \\u201C+\\u201D button to create a new action. Choose Carousel action type to continue.\"}),`\n`,(0,e.jsx)(a,{src:\"/assets/images/tutorials/bot-studio/bse-41.webp\",alt:\"bse-41\",naturalHeight:1142,naturalWidth:836}),`\n`,(0,e.jsxs)(t.p,{children:[\"Enter \",(0,e.jsx)(t.code,{children:\"pizzaMenu\"}),\" as name\"]}),`\n`,(0,e.jsx)(a,{src:\"/assets/images/tutorials/bot-studio/bse-42.webp\",alt:\"bse-42\",naturalHeight:474,naturalWidth:826}),`\n`,(0,e.jsxs)(t.p,{children:[\"Fill in the carousel content by clicking \\u201CAdd carousel\\u201D button, then click on \\u201CAdd action\\u201D button to define the \",(0,e.jsx)(t.strong,{children:\"label and type\"}),\". Next, click on Add Payload button to enter \",(0,e.jsx)(t.strong,{children:\"key and value\"}),\".\"]}),`\n`,(0,e.jsx)(t.p,{children:\"Fill in first carousel with this data\"}),`\n`,(0,e.jsx)(t.pre,{children:(0,e.jsxs)(t.code,{className:\"code-highlight\",children:[(0,e.jsx)(t.span,{className:\"code-line\",children:`Title: Pepperoni\n`}),(0,e.jsx)(t.span,{className:\"code-line\",children:`Text: This is the favorite of Peps\n`}),(0,e.jsx)(t.span,{className:\"code-line\",children:`Thumbnail Image Url: https://www.wikihow.com/images/thumb/a/a7/Make-Pepperoni-Pizza-Step-19-Version-2.jpg/aid1074004-v4-728px-Make-Pepperoni-Pizza-Step-19-Version-2.jpg.webp\n`}),(0,e.jsx)(t.span,{className:\"code-line\",children:`Actions:\n`}),(0,e.jsx)(t.span,{className:\"code-line\",children:`  Label: Pepperoni\n`}),(0,e.jsx)(t.span,{className:\"code-line\",children:`  Type: Postback\n`}),(0,e.jsx)(t.span,{className:\"code-line\",children:`  Payload:\n`}),(0,e.jsx)(t.span,{className:\"code-line\",children:`    - key: type\n`}),(0,e.jsx)(t.span,{className:\"code-line\",children:`      value: pizza\n`}),(0,e.jsx)(t.span,{className:\"code-line\",children:`    - key: pizza\n`}),(0,e.jsx)(t.span,{className:\"code-line\",children:`      value: Pepperoni\n`})]})}),`\n`,(0,e.jsx)(t.p,{children:\"Fill in second carousel with this data\"}),`\n`,(0,e.jsx)(t.pre,{children:(0,e.jsxs)(t.code,{className:\"code-highlight\",children:[(0,e.jsx)(t.span,{className:\"code-line\",children:`Title: Veggie Lovers\n`}),(0,e.jsx)(t.span,{className:\"code-line\",children:`Text: Vegie vegie stay healthy\n`}),(0,e.jsx)(t.span,{className:\"code-line\",children:`Thumbnail Image Url: https://www.calcuttaweb.com/store/image/data/calcutta/pizza/veggie-lovers-pizza-pihu-7.jpg\n`}),(0,e.jsx)(t.span,{className:\"code-line\",children:`Actions:\n`}),(0,e.jsx)(t.span,{className:\"code-line\",children:`  Label: Veggie Lovers\n`}),(0,e.jsx)(t.span,{className:\"code-line\",children:`  Type: Postback\n`}),(0,e.jsx)(t.span,{className:\"code-line\",children:`  Payload:\n`}),(0,e.jsx)(t.span,{className:\"code-line\",children:`    - key: type\n`}),(0,e.jsx)(t.span,{className:\"code-line\",children:`      value: pizza\n`}),(0,e.jsx)(t.span,{className:\"code-line\",children:`    - key: pizza\n`}),(0,e.jsx)(t.span,{className:\"code-line\",children:`      value: Veggie Lovers\n`})]})}),`\n`,(0,e.jsx)(t.p,{children:\"Your first form should look like this\"}),`\n`,(0,e.jsx)(a,{src:\"/assets/images/tutorials/bot-studio/bse-43.webp\",alt:\"bse-43\",naturalHeight:1336,naturalWidth:752}),`\n`,(0,e.jsx)(t.p,{children:\"Your second form should look like this\"}),`\n`,(0,e.jsx)(a,{src:\"/assets/images/tutorials/bot-studio/bse-44.webp\",alt:\"bse-44\",naturalHeight:1332,naturalWidth:744}),`\n`,(0,e.jsx)(t.p,{children:\"Finalize this step by clicking \\u201CCreate Action.\\u201D\"}),`\n`,(0,e.jsx)(t.p,{children:\"It should look like this\"}),`\n`,(0,e.jsx)(a,{src:\"/assets/images/tutorials/bot-studio/bse-45.webp\",alt:\"bse-45\",naturalHeight:926,naturalWidth:842}),`\n`,(0,e.jsxs)(t.p,{children:[\"Once the bot displays a carousel containing the type for pizza menu, its next step is to ask user to select the pizza. Click \\u201CAdd actions\\u201D button to trigger drop-down list, then choose \",(0,e.jsx)(t.code,{children:\"askOptions\"})]}),`\n`,(0,e.jsx)(a,{src:\"/assets/images/tutorials/bot-studio/bse-46.webp\",alt:\"bse-46\",naturalHeight:1290,naturalWidth:846}),`\n`,(0,e.jsxs)(t.p,{children:[\"After you select \",(0,e.jsx)(t.code,{children:\"askOptions\"}),\" action click \\u201CCreate Action\\u201D button to finalize this step.\"]}),`\n`,(0,e.jsx)(a,{src:\"/assets/images/tutorials/bot-studio/bse-47.webp\",alt:\"bse-47\",naturalHeight:1506,naturalWidth:848}),`\n`,(0,e.jsx)(t.p,{children:\"Your form should look like this\"}),`\n`,(0,e.jsx)(a,{src:\"/assets/images/tutorials/bot-studio/bse-48.webp\",alt:\"bse-48\",naturalHeight:1704,naturalWidth:850}),`\n`,(0,e.jsx)(t.p,{children:\"Click \\u201CUpdate\\u201D to update the state.\"}),`\n`,(0,e.jsxs)(t.h3,{id:\"create-intent-to-choose-a-pizza\",children:[(0,e.jsx)(t.a,{className:\"anchor\",href:\"#create-intent-to-choose-a-pizza\",children:(0,e.jsx)(t.span,{className:\"icon icon-link\"})}),\"Create Intent to Choose A Pizza\"]}),`\n`,(0,e.jsxs)(t.p,{children:[\"Now we have to create an intent called \",(0,e.jsx)(t.code,{children:\"pizzaChosen\"}),\" to handle user's input after they have selected a pizza type. Click on Intent menu in \",(0,e.jsx)(t.code,{children:\"order\"}),\" flow.\"]}),`\n`,(0,e.jsx)(a,{src:\"/assets/images/tutorials/bot-studio/bse-49.webp\",alt:\"bse-49\",naturalHeight:1288,naturalWidth:2716}),`\n`,(0,e.jsx)(t.p,{children:\"Click on Create Intent and create intent as follow\"}),`\n`,(0,e.jsx)(a,{src:\"/assets/images/tutorials/bot-studio/bse-50.webp\",alt:\"bse-50\",naturalHeight:1076,naturalWidth:854}),`\n`,(0,e.jsx)(t.p,{children:\"Successfully created intent looks like this\"}),`\n`,(0,e.jsx)(a,{src:\"/assets/images/tutorials/bot-studio/bse-51.webp\",alt:\"bse-51\",naturalHeight:1074,naturalWidth:3330}),`\n`,(0,e.jsxs)(t.h3,{id:\"create-transition-between-init-and-showpizza\",children:[(0,e.jsx)(t.a,{className:\"anchor\",href:\"#create-transition-between-init-and-showpizza\",children:(0,e.jsx)(t.span,{className:\"icon icon-link\"})}),\"Create Transition between init and showPizza\"]}),`\n`,(0,e.jsx)(t.p,{children:\"Now, we will create a transition between two states that we have created before.\"}),`\n`,(0,e.jsxs)(t.p,{children:[\"Click the green dot on \",(0,e.jsx)(t.code,{children:\"init\"}),\" state, and a connector line will appear. Connect that line to \",(0,e.jsx)(t.code,{children:\"showPizza\"}),\" state. If you do it right, a Create Transition form will appear.\"]}),`\n`,(0,e.jsx)(a,{src:\"/assets/images/tutorials/bot-studio/bse-52.webp\",alt:\"bse-52\",naturalHeight:888,naturalWidth:1693}),`\n`,(0,e.jsx)(t.p,{children:\"Fill in the form with these data, and click \\u201CCreate\\u201D\"}),`\n`,(0,e.jsx)(a,{src:\"/assets/images/tutorials/bot-studio/bse-52-1.webp\",alt:\"bse-52-1\",naturalHeight:1278,naturalWidth:2766}),`\n`,(0,e.jsxs)(t.h3,{id:\"create-reenter-intent\",children:[(0,e.jsx)(t.a,{className:\"anchor\",href:\"#create-reenter-intent\",children:(0,e.jsx)(t.span,{className:\"icon icon-link\"})}),\"Create 'reenter' intent\"]}),`\n`,(0,e.jsxs)(t.p,{children:[\"Next, we will add \",(0,e.jsx)(t.code,{children:\"reenter\"}),\" intent so the bot can return to its previous state after triggering fallback state. Create the intent in \",(0,e.jsx)(t.code,{children:\"order\"}),\" flow.\"]}),`\n`,(0,e.jsx)(a,{src:\"/assets/images/tutorials/bot-studio/bse-53.webp\",alt:\"bse-53\",naturalHeight:1128,naturalWidth:2802}),`\n`,(0,e.jsxs)(t.h2,{id:\"create-action-for-asking-pizza-quantity\",children:[(0,e.jsx)(t.a,{className:\"anchor\",href:\"#create-action-for-asking-pizza-quantity\",children:(0,e.jsx)(t.span,{className:\"icon icon-link\"})}),\"Create Action for Asking Pizza Quantity\"]}),`\n`,(0,e.jsx)(t.p,{children:\"In this step we will learn how to create \\u201CAsk quantity\\u201D state.\"}),`\n`,(0,e.jsx)(a,{src:\"/assets/images/tutorials/bot-studio/bse-1.webp\",alt:\"bse-1\",naturalHeight:1040,naturalWidth:1040}),`\n`,(0,e.jsxs)(t.h3,{id:\"create-pizzaquantity-state\",children:[(0,e.jsx)(t.a,{className:\"anchor\",href:\"#create-pizzaquantity-state\",children:(0,e.jsx)(t.span,{className:\"icon icon-link\"})}),\"Create pizzaQuantity state\"]}),`\n`,(0,e.jsxs)(t.p,{children:[\"In this step we will create \",(0,e.jsx)(t.code,{children:\"pizzaQuantity\"}),\" state to handle order quantity. The type of action we will use is in this state is Text. Click on \\u201C+\\u201D button on \",(0,e.jsx)(t.code,{children:\"order\"}),\" flow and fill the form as follows\"]}),`\n`,(0,e.jsx)(a,{src:\"/assets/images/tutorials/bot-studio/bse-54.webp\",alt:\"bse-54\",naturalHeight:1418,naturalWidth:786}),`\n`,(0,e.jsx)(t.p,{children:\"Then you have to make self-transition in Transition tab as follow\"}),`\n`,(0,e.jsx)(a,{src:\"/assets/images/tutorials/bot-studio/bse-54_1.webp\",alt:\"bse-54_1\",naturalHeight:920,naturalWidth:1308}),`\n`,(0,e.jsx)(t.p,{children:\"Result:\"}),`\n`,(0,e.jsx)(a,{src:\"/assets/images/tutorials/bot-studio/bse-55.webp\",alt:\"bse-55\",naturalHeight:1114,naturalWidth:1986}),`\n`,(0,e.jsxs)(t.h3,{id:\"create-nlus-quantity\",children:[(0,e.jsx)(t.a,{className:\"anchor\",href:\"#create-nlus-quantity\",children:(0,e.jsx)(t.span,{className:\"icon icon-link\"})}),\"Create NLUs quantity\"]}),`\n`,(0,e.jsx)(t.p,{children:\"Afterwards, we have to handle user's input with NLUs. Because we only allowed number from 1 to 9, we will create a limitation in regex format. Click on Create NLUs and follow this screenshot\"}),`\n`,(0,e.jsx)(a,{src:\"/assets/images/tutorials/bot-studio/bse-56.webp\",alt:\"bse-56\",naturalHeight:1062,naturalWidth:816}),`\n`,(0,e.jsx)(t.p,{children:\"Successfully created NLU will be shown like this\"}),`\n`,(0,e.jsx)(a,{src:\"/assets/images/tutorials/bot-studio/bse-57.webp\",alt:\"bse-57\",naturalHeight:870,naturalWidth:3282}),`\n`,(0,e.jsxs)(t.h3,{id:\"create-intent-quantity\",children:[(0,e.jsx)(t.a,{className:\"anchor\",href:\"#create-intent-quantity\",children:(0,e.jsx)(t.span,{className:\"icon icon-link\"})}),\"Create Intent quantity\"]}),`\n`,(0,e.jsxs)(t.p,{children:[\"After we created the NLU, we will add an intent to respond user's input. In \",(0,e.jsx)(t.code,{children:\"order\"}),\" flow, click on Create Intent and fill in the form\"]}),`\n`,(0,e.jsx)(a,{src:\"/assets/images/tutorials/bot-studio/bse-58.webp\",alt:\"bse-58\",naturalHeight:1414,naturalWidth:816}),`\n`,(0,e.jsx)(t.p,{children:\"Successfully created intent will look like this\"}),`\n`,(0,e.jsx)(a,{src:\"/assets/images/tutorials/bot-studio/bse-59.webp\",alt:\"bse-59\",naturalHeight:1104,naturalWidth:3288}),`\n`,(0,e.jsxs)(t.h3,{id:\"create-transition-between-showpizza-and-pizzaquantity\",children:[(0,e.jsx)(t.a,{className:\"anchor\",href:\"#create-transition-between-showpizza-and-pizzaquantity\",children:(0,e.jsx)(t.span,{className:\"icon icon-link\"})}),\"Create Transition between showPizza and pizzaQuantity\"]}),`\n`,(0,e.jsxs)(t.p,{children:[\"Now we have to create a transition between \",(0,e.jsx)(t.code,{children:\"showPizza\"}),\"and \",(0,e.jsx)(t.code,{children:\"pizzaQuantity\"}),\". We will also store \",(0,e.jsx)(t.code,{children:\"payload.pizza\"}),\" value into \",(0,e.jsx)(t.code,{children:\"context.pizza\"}),\". Click on the blue dot on \",(0,e.jsx)(t.code,{children:\"showPizza\"}),\" and drag the line to \",(0,e.jsx)(t.code,{children:\"pizzaQuantity\"}),\" state to create the transition. Create Transition form will appear after you have successfully connected the states.\"]}),`\n`,(0,e.jsx)(a,{src:\"/assets/images/tutorials/bot-studio/bse-60.webp\",alt:\"bse-60\",naturalHeight:1244,naturalWidth:866}),`\n`,(0,e.jsx)(t.p,{children:\"Created transition will look like this\"}),`\n`,(0,e.jsx)(a,{src:\"/assets/images/tutorials/bot-studio/bse-61.webp\",alt:\"bse-61\",naturalHeight:1082,naturalWidth:2298}),`\n`,(0,e.jsxs)(t.h2,{id:\"create-confirmation-action\",children:[(0,e.jsx)(t.a,{className:\"anchor\",href:\"#create-confirmation-action\",children:(0,e.jsx)(t.span,{className:\"icon icon-link\"})}),\"Create Confirmation Action\"]}),`\n`,(0,e.jsxs)(t.p,{children:[\"Our next step is creating \",(0,e.jsx)(t.code,{children:\"Ask confirmation\"}),\" state.\"]}),`\n`,(0,e.jsx)(a,{src:\"/assets/images/tutorials/bot-studio/bse-1.webp\",alt:\"bse-1\",naturalHeight:1040,naturalWidth:1040}),`\n`,(0,e.jsxs)(t.h3,{id:\"create-yesno-keyword-nlus\",children:[(0,e.jsx)(t.a,{className:\"anchor\",href:\"#create-yesno-keyword-nlus\",children:(0,e.jsx)(t.span,{className:\"icon icon-link\"})}),\"Create \\u201CYESNO\\u201D keyword NLUs\"]}),`\n`,(0,e.jsxs)(t.p,{children:[\"First, we will create a keyword NLU to handle \",(0,e.jsx)(t.code,{children:\"yes\"}),\" and \",(0,e.jsx)(t.code,{children:\"no\"}),\". Click on Create NLUs and fill in as follows\"]}),`\n`,(0,e.jsx)(a,{src:\"/assets/images/tutorials/bot-studio/bse-62.webp\",alt:\"bse-62\",naturalHeight:1512,naturalWidth:832}),`\n`,(0,e.jsx)(t.p,{children:\"Successfully created NLU will look like this\"}),`\n`,(0,e.jsx)(a,{src:\"/assets/images/tutorials/bot-studio/bse-63.webp\",alt:\"bse-63\",naturalHeight:1164,naturalWidth:3270}),`\n`,(0,e.jsxs)(t.h3,{id:\"create-confirmpizza-state\",children:[(0,e.jsx)(t.a,{className:\"anchor\",href:\"#create-confirmpizza-state\",children:(0,e.jsx)(t.span,{className:\"icon icon-link\"})}),\"Create confirmPizza state\"]}),`\n`,(0,e.jsxs)(t.p,{children:[\"Now we will create \",(0,e.jsx)(t.code,{children:\"confirmPizza\"}),\" state to handle order confirmation. We will also store chosen pizza & quantity information in this state. Select \",(0,e.jsx)(t.code,{children:\"order\"}),\" flow and click on \\u201C+\\u201D button to create \",(0,e.jsx)(t.code,{children:\"confirmPizza\"}),\" state.\"]}),`\n`,(0,e.jsx)(a,{src:\"/assets/images/tutorials/bot-studio/bse-64.webp\",alt:\"bse-64\",naturalHeight:1408,naturalWidth:758}),`\n`,(0,e.jsxs)(t.h2,{id:\"add-mapping-in-ontransit-tab\",children:[(0,e.jsx)(t.a,{className:\"anchor\",href:\"#add-mapping-in-ontransit-tab\",children:(0,e.jsx)(t.span,{className:\"icon icon-link\"})}),\"Add mapping in onTransit tab\"]}),`\n`,(0,e.jsx)(a,{src:\"/assets/images/tutorials/bot-studio/bse-67.webp\",alt:\"bse-67\",naturalHeight:510,naturalWidth:760}),`\n`,(0,e.jsx)(t.p,{children:\"Don't forget to add self-transition in a state. Click Create Action. Your screen should look like this\"}),`\n`,(0,e.jsx)(a,{src:\"/assets/images/tutorials/bot-studio/bse-65.webp\",alt:\"bse-65\",naturalHeight:1192,naturalWidth:2330}),`\n`,(0,e.jsxs)(t.h3,{id:\"create-a-transition-from-pizzaquantity-to-confirmpizza\",children:[(0,e.jsx)(t.a,{className:\"anchor\",href:\"#create-a-transition-from-pizzaquantity-to-confirmpizza\",children:(0,e.jsx)(t.span,{className:\"icon icon-link\"})}),\"Create a transition from pizzaQuantity to confirmPizza\"]}),`\n`,(0,e.jsxs)(t.p,{children:[\"We will make a transition by storing value (mapping) from pizza quantity \",(0,e.jsx)(t.strong,{children:\"and\"}),\" chosen pizza type. Click the blue dot on \",(0,e.jsx)(t.code,{children:\"pizzaQuantity\"}),\" and drag the line to \",(0,e.jsx)(t.code,{children:\"confirmPizza\"}),\" state to create a transition. Create Transition form will appear after you successfully connected the states.\"]}),`\n`,(0,e.jsx)(a,{src:\"/assets/images/tutorials/bot-studio/bse-66.webp\",alt:\"bse-66\",naturalHeight:1324,naturalWidth:846}),`\n`,(0,e.jsx)(t.p,{children:\"Result will be shown as follows\"}),`\n`,(0,e.jsx)(a,{src:\"/assets/images/tutorials/bot-studio/bse-68.webp\",alt:\"bse-68\",naturalHeight:990,naturalWidth:2420}),`\n`,(0,e.jsxs)(t.h3,{id:\"create-intent-yesno\",children:[(0,e.jsx)(t.a,{className:\"anchor\",href:\"#create-intent-yesno\",children:(0,e.jsx)(t.span,{className:\"icon icon-link\"})}),\"Create intent yesno\"]}),`\n`,(0,e.jsxs)(t.p,{children:[\"Previously, we already made an NLU containing \",(0,e.jsx)(t.code,{children:\"yes\"}),\" and \",(0,e.jsx)(t.code,{children:\"no\"}),\" keywords. We will use that NLU as a classifier on an intent.\"]}),`\n`,(0,e.jsxs)(t.p,{children:[\"First of all, we will create an intent in \",(0,e.jsx)(t.code,{children:\"order\"}),\" flow for the keyword \",(0,e.jsx)(t.code,{children:\"yes\"})]}),`\n`,(0,e.jsx)(a,{src:\"/assets/images/tutorials/bot-studio/bse-69.webp\",alt:\"bse-69\",naturalHeight:1422,naturalWidth:804}),`\n`,(0,e.jsxs)(t.p,{children:[\"Then, we will create an intent for keyword \",(0,e.jsx)(t.code,{children:\"no\"})]}),`\n`,(0,e.jsx)(a,{src:\"/assets/images/tutorials/bot-studio/bse-70.webp\",alt:\"bse-70\",naturalHeight:1392,naturalWidth:822}),`\n`,(0,e.jsx)(t.p,{children:\"Both intent will appear as follows\"}),`\n`,(0,e.jsx)(a,{src:\"/assets/images/tutorials/bot-studio/bse-71.webp\",alt:\"bse-71\",naturalHeight:1378,naturalWidth:3276}),`\n`,(0,e.jsxs)(t.h3,{id:\"create-done-state\",children:[(0,e.jsx)(t.a,{className:\"anchor\",href:\"#create-done-state\",children:(0,e.jsx)(t.span,{className:\"icon icon-link\"})}),\"Create done state\"]}),`\n`,(0,e.jsxs)(t.p,{children:[\"In \",(0,e.jsx)(t.code,{children:\"done\"}),\" state, we will complete the order by saying thank you and end the conversation. We will also set a condition when a user wants to cancel the order. So in this state we will create two actions: \",(0,e.jsx)(t.code,{children:\"sayThanks\"}),\" and \",(0,e.jsx)(t.code,{children:\"sayCancel\"}),\".\"]}),`\n`,(0,e.jsx)(a,{src:\"/assets/images/tutorials/bot-studio/bse-72.webp\",alt:\"bse-72\",naturalHeight:940,naturalWidth:798}),`\n`,(0,e.jsx)(a,{src:\"/assets/images/tutorials/bot-studio/bse-73.webp\",alt:\"bse-73\",naturalHeight:914,naturalWidth:786}),`\n`,(0,e.jsx)(t.p,{children:\"Also, don't forget to add self transition in the state. Result:\"}),`\n`,(0,e.jsx)(a,{src:\"/assets/images/tutorials/bot-studio/bse-74.webp\",alt:\"bse-74\",naturalHeight:1218,naturalWidth:2390}),`\n`,(0,e.jsxs)(t.h3,{id:\"create-a-transition-from-confirmpizza-to-done\",children:[(0,e.jsx)(t.a,{className:\"anchor\",href:\"#create-a-transition-from-confirmpizza-to-done\",children:(0,e.jsx)(t.span,{className:\"icon icon-link\"})}),\"Create a transition from confirmPizza to done\"]}),`\n`,(0,e.jsxs)(t.p,{children:[\"Next, we will connect \",(0,e.jsx)(t.code,{children:\"confirmPizza\"}),\" state to \",(0,e.jsx)(t.code,{children:\"done\"}),\" state. Because \",(0,e.jsx)(t.code,{children:\"done\"}),\" is the last state, we will set it as default transition. Connect \",(0,e.jsx)(t.code,{children:\"confirmPizza\"}),\" to \",(0,e.jsx)(t.code,{children:\"done\"}),\" by clicking the blue dot and drag the line to connect the states. Create Transition form will appear after you have successfully connected the states.\"]}),`\n`,(0,e.jsx)(a,{src:\"/assets/images/tutorials/bot-studio/bse-75.webp\",alt:\"bse-75\",naturalHeight:1084,naturalWidth:840}),`\n`,(0,e.jsx)(t.p,{children:\"Final flow:\"}),`\n`,(0,e.jsx)(a,{src:\"/assets/images/tutorials/bot-studio/bse-76.webp\",alt:\"bse-76\",naturalHeight:1208,naturalWidth:3262}),`\n`,(0,e.jsxs)(t.h2,{id:\"publish-your-bot\",children:[(0,e.jsx)(t.a,{className:\"anchor\",href:\"#publish-your-bot\",children:(0,e.jsx)(t.span,{className:\"icon icon-link\"})}),\"Publish Your Bot\"]}),`\n`,(0,e.jsx)(t.p,{children:\"To save your work, click on Publish button located at the top right of your screen. Fill in the changelog as \\u201Cinitial version of pizza bot\\u201D for future reference. Click \\u201CPublish\\u201D to continue.\"}),`\n`,(0,e.jsx)(a,{src:\"/assets/images/tutorials/bot-studio/bse-77.webp\",alt:\"bse-77\",naturalHeight:1218,naturalWidth:2390}),`\n`,(0,e.jsx)(a,{src:\"/assets/images/tutorials/bot-studio/bse-78.webp\",alt:\"bse-78\",naturalHeight:974,naturalWidth:1066}),`\n`,(0,e.jsx)(t.p,{children:\"Every time you publish a bot, it will record a hash number (similar to Git's hash number) in Revision List.\"}),`\n`,(0,e.jsx)(a,{src:\"/assets/images/tutorials/bot-studio/bse-79.webp\",alt:\"bse-79\",naturalHeight:538,naturalWidth:3298}),`\n`,(0,e.jsxs)(t.h2,{id:\"testing-your-chatbot\",children:[(0,e.jsx)(t.a,{className:\"anchor\",href:\"#testing-your-chatbot\",children:(0,e.jsx)(t.span,{className:\"icon icon-link\"})}),\"Testing Your Chatbot\"]}),`\n`,(0,e.jsxs)(t.p,{children:[\"Click on Test Chatbot on Bot Studio then type \\u201Corder\\u201D to initialize \",(0,e.jsx)(t.code,{children:\"order\"}),\" flow.\"]}),`\n`,(0,e.jsx)(a,{src:\"/assets/images/tutorials/bot-studio/bse-80.webp\",alt:\"bse-80\",naturalHeight:994,naturalWidth:1740}),`\n`,(0,e.jsx)(t.p,{children:\"Check on the rest of the flow and make sure everything you've made works.\"}),`\n`,(0,e.jsxs)(t.h2,{id:\"deploy-your-chatbot\",children:[(0,e.jsx)(t.a,{className:\"anchor\",href:\"#deploy-your-chatbot\",children:(0,e.jsx)(t.span,{className:\"icon icon-link\"})}),\"Deploy Your Chatbot\"]}),`\n`,(0,e.jsx)(t.p,{children:\"Now we will try to deploy our chatbot to LINE Messenger.\"}),`\n`,(0,e.jsxs)(t.h3,{id:\"create-deployment\",children:[(0,e.jsx)(t.a,{className:\"anchor\",href:\"#create-deployment\",children:(0,e.jsx)(t.span,{className:\"icon icon-link\"})}),\"Create deployment\"]}),`\n`,(0,e.jsx)(t.p,{children:\"First of all, we have to create a deployment first. Find the \\u201CDeployment\\u201D menu on the left sidebar.\"}),`\n`,(0,e.jsx)(a,{src:\"/assets/images/tutorials/bot-studio/bse-81.webp\",alt:\"bse-81\",naturalHeight:1118,naturalWidth:648}),`\n`,(0,e.jsx)(t.p,{children:\"Click on Create Deployment button on top right\"}),`\n`,(0,e.jsx)(a,{src:\"/assets/images/tutorials/bot-studio/bse-82.webp\",alt:\"bse-82\",naturalHeight:794,naturalWidth:3296}),`\n`,(0,e.jsx)(t.p,{children:\"Choose Patch on Deployment Version.\"}),`\n`,(0,e.jsx)(a,{src:\"/assets/images/tutorials/bot-studio/bse-83.webp\",alt:\"bse-83\",naturalHeight:932,naturalWidth:1557}),`\n`,(0,e.jsx)(t.p,{children:\"Succesfully created deployment looks like this.\"}),`\n`,(0,e.jsx)(a,{src:\"/assets/images/tutorials/bot-studio/bse-84.webp\",alt:\"bse-84\",naturalHeight:511,naturalWidth:1906}),`\n`,(0,e.jsxs)(t.h3,{id:\"create-environment\",children:[(0,e.jsx)(t.a,{className:\"anchor\",href:\"#create-environment\",children:(0,e.jsx)(t.span,{className:\"icon icon-link\"})}),\"Create Environment\"]}),`\n`,(0,e.jsx)(t.p,{children:\"Kata | Platform 3.0 allows you to set up 3 separate environments in your project: Development, Staging, and Production. Inside each environment, you can add as many messaging channel as you like. You have to setup environment first before integrating to messaging channel.\"}),`\n`,(0,e.jsx)(t.p,{children:\"In this tutorial, we will try to setup Production environment. Click on Environment menu under Deploy and you will be shown 3 available environments.\"}),`\n`,(0,e.jsx)(a,{src:\"/assets/images/tutorials/bot-studio/bse-85.webp\",alt:\"bse-85\",naturalHeight:1230,naturalWidth:3342}),`\n`,(0,e.jsx)(t.p,{children:\"Click \\u201CCreate Environment\\u201D button in Production.\"}),`\n`,(0,e.jsx)(t.p,{children:\"The first field we have to fill in is deployment version. Choose 0.0.1 (shown on the previous step) as deployment version in Production.\"}),`\n`,(0,e.jsx)(t.p,{children:\"Another field we have to fill in is environment URL. This URL is used to access CMS Client later.\"}),`\n`,(0,e.jsx)(a,{src:\"/assets/images/tutorials/bot-studio/bse-86.webp\",alt:\"bse-86\",naturalHeight:788,naturalWidth:858}),`\n`,(0,e.jsx)(t.p,{children:\"Successfully created environment will look like this\"}),`\n`,(0,e.jsx)(a,{src:\"/assets/images/tutorials/bot-studio/bse-87.webp\",alt:\"bse-87\",naturalHeight:480,naturalWidth:882}),`\n`,(0,e.jsx)(t.p,{children:\"Next, we need to create channel inside the environment. Click on Create Channel on Production environment and you will be redirected to Create Channel page\"}),`\n`,(0,e.jsx)(a,{src:\"/assets/images/tutorials/bot-studio/bse-88.webp\",alt:\"bse-88\",naturalHeight:1342,naturalWidth:3352}),`\n`,(0,e.jsx)(t.p,{children:\"Next, click \\u201CCreate Channel\\u201D and fill in as follows\"}),`\n`,(0,e.jsx)(a,{src:\"/assets/images/tutorials/bot-studio/bse-89.webp\",alt:\"bse-89\",naturalHeight:1280,naturalWidth:916}),`\n`,(0,e.jsx)(t.p,{children:\"Let's setup LINE developer console so you can fill in fields highlighted with red box.\"}),`\n`,(0,e.jsxs)(t.h3,{id:\"registration-to-line-developer-console\",children:[(0,e.jsx)(t.a,{className:\"anchor\",href:\"#registration-to-line-developer-console\",children:(0,e.jsx)(t.span,{className:\"icon icon-link\"})}),\"Registration to LINE Developer console\"]}),`\n`,(0,e.jsx)(t.p,{children:(0,e.jsx)(t.strong,{children:\"Create LINE account\"})}),`\n`,(0,e.jsxs)(t.p,{children:[\"To sign up for a LINE developer account, you have to have a LINE account by \",(0,e.jsx)(\"a\",{href:\"https://line.me/en/download\",target:\"_blank\",children:\" installing LINE application, either desktop or mobile app.\"}),\" After you successfully registered, sign in to \",(0,e.jsx)(\"a\",{href:\"https://developers.line.biz/en/\",target:\"_blank\",children:(0,e.jsx)(t.a,{href:\"https://developers.line.biz/en/\",children:\"https://developers.line.biz/en/\"})})]}),`\n`,(0,e.jsx)(t.p,{children:\"In LINE Developer Console click Log In.\"}),`\n`,(0,e.jsx)(a,{src:\"/assets/images/tutorials/bot-studio/bse-90.webp\",alt:\"bse-90\",naturalHeight:1726,naturalWidth:3358}),`\n`,(0,e.jsx)(t.p,{children:\"Click on Log in with LINE\"}),`\n`,(0,e.jsx)(a,{src:\"/assets/images/tutorials/bot-studio/bse-91.webp\",alt:\"bse-91\",naturalHeight:1134,naturalWidth:1054}),`\n`,(0,e.jsx)(t.p,{children:\"Enter your email and password\"}),`\n`,(0,e.jsx)(a,{src:\"/assets/images/tutorials/bot-studio/bse-92.webp\",alt:\"bse-92\",naturalHeight:1046,naturalWidth:994}),`\n`,(0,e.jsx)(t.p,{children:\"After you successfully logged in, you will be redirected to provider list dashboard\"}),`\n`,(0,e.jsx)(a,{src:\"/assets/images/tutorials/bot-studio/bse-93.webp\",alt:\"bse-93\",naturalHeight:1686,naturalWidth:3328}),`\n`,(0,e.jsx)(t.p,{children:(0,e.jsx)(t.strong,{children:\"Create a Provider\"})}),`\n`,(0,e.jsx)(t.p,{children:\"Click \\u201CCreate New Provider\\u201D\"}),`\n`,(0,e.jsx)(a,{src:\"/assets/images/tutorials/bot-studio/bse-94.webp\",alt:\"bse-94\",naturalHeight:1158,naturalWidth:2814}),`\n`,(0,e.jsx)(t.p,{children:\"Fill in provider name\"}),`\n`,(0,e.jsx)(a,{src:\"/assets/images/tutorials/bot-studio/bse-95.webp\",alt:\"bse-95\",naturalHeight:1382,naturalWidth:3358}),`\n`,(0,e.jsx)(t.p,{children:\"Click Confirm to continue. You will have to re-confirm the provider name since it cannot be changed later. Click \\u201CCreate\\u201D to confirm.\"}),`\n`,(0,e.jsx)(a,{src:\"/assets/images/tutorials/bot-studio/bse-96.webp\",alt:\"bse-96\",naturalHeight:1154,naturalWidth:3358}),`\n`,(0,e.jsxs)(t.h3,{id:\"setup-channel-for-line-integration\",children:[(0,e.jsx)(t.a,{className:\"anchor\",href:\"#setup-channel-for-line-integration\",children:(0,e.jsx)(t.span,{className:\"icon icon-link\"})}),\"Setup Channel for LINE Integration\"]}),`\n`,(0,e.jsx)(t.p,{children:\"Setup channel in Messaging API by clicking Create Channel on Messaging API.\"}),`\n`,(0,e.jsx)(a,{src:\"/assets/images/tutorials/bot-studio/bse-97.webp\",alt:\"bse-97\",naturalHeight:1438,naturalWidth:2812}),`\n`,(0,e.jsx)(t.p,{children:\"Fill in the form as follows\"}),`\n`,(0,e.jsx)(a,{src:\"/assets/images/tutorials/bot-studio/bse-98.webp\",alt:\"bse-98\",naturalHeight:1714,naturalWidth:3348}),`\n`,(0,e.jsx)(a,{src:\"/assets/images/tutorials/bot-studio/bse-99.webp\",alt:\"bse-99\",naturalHeight:536,naturalWidth:2726}),`\n`,(0,e.jsxs)(t.p,{children:[\"Next, you have to choose \",(0,e.jsx)(t.strong,{children:\"Developer Trial as Plan\"})]}),`\n`,(0,e.jsx)(a,{src:\"/assets/images/tutorials/bot-studio/bse-100.webp\",alt:\"bse-100\",naturalHeight:510,naturalWidth:2322}),`\n`,(0,e.jsx)(t.p,{children:\"Accept Terms of Use from LINE then click Create\"}),`\n`,(0,e.jsx)(a,{src:\"/assets/images/tutorials/bot-studio/bse-101.webp\",alt:\"bse-101\",naturalHeight:548,naturalWidth:1970}),`\n`,(0,e.jsx)(t.p,{children:\"Successfuly created channel will look like this\"}),`\n`,(0,e.jsx)(a,{src:\"/assets/images/tutorials/bot-studio/bse-102.webp\",alt:\"bse-102\",naturalHeight:1012,naturalWidth:1176}),`\n`,(0,e.jsxs)(t.h3,{id:\"integration-line-and-your-chatbot\",children:[(0,e.jsx)(t.a,{className:\"anchor\",href:\"#integration-line-and-your-chatbot\",children:(0,e.jsx)(t.span,{className:\"icon icon-link\"})}),\"Integration LINE and Your Chatbot\"]}),`\n`,(0,e.jsx)(t.p,{children:\"Click on created channel to fill in Channel Access Token and Channel Secret. Here is the guideline to fill in those fields\"}),`\n`,(0,e.jsxs)(t.h4,{id:\"fill-in-channel-access-token-field\",children:[(0,e.jsx)(t.a,{className:\"anchor\",href:\"#fill-in-channel-access-token-field\",children:(0,e.jsx)(t.span,{className:\"icon icon-link\"})}),\"Fill in Channel Access Token field\"]}),`\n`,(0,e.jsx)(t.p,{children:\"Click \\u201CIssue\\u201D in Messaging Settings section\"}),`\n`,(0,e.jsx)(a,{src:\"/assets/images/tutorials/bot-studio/bse-103.webp\",alt:\"bse-103\",naturalHeight:1086,naturalWidth:2724}),`\n`,(0,e.jsx)(t.p,{children:\"Then, issue dialog will pop up. Click on Issue to continue\"}),`\n`,(0,e.jsx)(a,{src:\"/assets/images/tutorials/bot-studio/bse-104.webp\",alt:\"bse-104\",naturalHeight:782,naturalWidth:1084}),`\n`,(0,e.jsx)(t.p,{children:\"Then, copy Channel Access Token below and paste it on Create Channel form in Kata | Platform\"}),`\n`,(0,e.jsx)(a,{src:\"/assets/images/tutorials/bot-studio/bse-105.webp\",alt:\"bse-105\",naturalHeight:380,naturalWidth:2732}),`\n`,(0,e.jsx)(a,{src:\"/assets/images/tutorials/bot-studio/bse-106.webp\",alt:\"bse-106\",naturalHeight:964,naturalWidth:740}),`\n`,(0,e.jsx)(t.p,{children:(0,e.jsx)(t.strong,{children:\"Fill in Channel Secret field\"})}),`\n`,(0,e.jsx)(t.p,{children:\"In Basic Information, copy Channel Secret from LINE to Kata | Platform\"}),`\n`,(0,e.jsx)(a,{src:\"/assets/images/tutorials/bot-studio/bse-107.webp\",alt:\"bse-107\",naturalHeight:1612,naturalWidth:2896}),`\n`,(0,e.jsx)(a,{src:\"/assets/images/tutorials/bot-studio/bse-108.webp\",alt:\"bse-108\",naturalHeight:996,naturalWidth:766}),`\n`,(0,e.jsx)(t.p,{children:\"Final result in Kata | Platform will look like this\"}),`\n`,(0,e.jsx)(a,{src:\"/assets/images/tutorials/bot-studio/bse-109.webp\",alt:\"bse-109\",naturalHeight:996,naturalWidth:766}),`\n`,(0,e.jsx)(t.p,{children:\"Click \\u201CCreate\\u201D to generate webhook URL from Kata | Platform.\"}),`\n`,(0,e.jsx)(a,{src:\"/assets/images/tutorials/bot-studio/bse-110.webp\",alt:\"bse-110\",naturalHeight:506,naturalWidth:2780}),`\n`,(0,e.jsxs)(t.p,{children:[\"After webhook URL is generated, go to Messaging Settings in LINE developer console to enable webhook. \",(0,e.jsx)(t.strong,{children:'Please check that you already enable the webhook by click on Enable in \"Use Webhoooks\" section which placed above Webhook URL field'})]}),`\n`,(0,e.jsx)(a,{src:\"/assets/images/tutorials/bot-studio/bse-111.webp\",alt:\"bse-111\",naturalHeight:678,naturalWidth:2832}),`\n`,(0,e.jsx)(t.p,{children:\"Click \\u201CUpdate\\u201D then paste the webhook URL to LINE developer console.\"}),`\n`,(0,e.jsx)(a,{src:\"/assets/images/tutorials/bot-studio/bse-112.webp\",alt:\"bse-112\",naturalHeight:892,naturalWidth:2820}),`\n`,(0,e.jsx)(t.p,{children:\"Click \\u201CUpdate\\u201D then click \\u201CVerify.\\u201D\"}),`\n`,(0,e.jsx)(a,{src:\"/assets/images/tutorials/bot-studio/bse-113.webp\",alt:\"bse-113\",naturalHeight:928,naturalWidth:2836}),`\n`,(0,e.jsx)(t.p,{children:\"Next, disable auto-reply messages and greeting messages\"}),`\n`,(0,e.jsx)(a,{src:\"/assets/images/tutorials/bot-studio/bse-114.webp\",alt:\"bse-114\",naturalHeight:856,naturalWidth:2828}),`\n`,(0,e.jsx)(t.p,{children:\"Voila! You have successfully deployed your bot to LINE Messenger.\"}),`\n`,(0,e.jsx)(t.p,{children:\"Scan the QR Code in LINE Developer Console to add the bot.\"}),`\n`,(0,e.jsx)(a,{src:\"/assets/images/tutorials/bot-studio/bse-115.webp\",alt:\"bse-115\",naturalHeight:582,naturalWidth:2082}),`\n`,(0,e.jsx)(t.p,{children:\"Then, test to scan QR Code\"}),`\n`,(0,e.jsx)(a,{src:\"/assets/images/tutorials/bot-studio/bse-116.webp\",alt:\"bse-116\",naturalHeight:1920,naturalWidth:1080})]})}}var z=N;function C(n,i){throw new Error(\"Expected \"+(i?\"component\":\"object\")+\" `\"+n+\"` to be defined: you likely forgot to import, pass, or provide it.\")}return k(W);})();\n;return Component;"},"_id":"tutorials/bot-studio.mdx","_raw":{"sourceFilePath":"tutorials/bot-studio.mdx","sourceFileName":"bot-studio.mdx","sourceFileDir":"tutorials","contentType":"mdx","flattenedPath":"tutorials/bot-studio"},"type":"Tutorials","slug":["bot-studio"],"excerpt":"\n## Introduction\n\nBuilding a chatbot on Kata | Platform is quick and easy, even with a lack of programming knowledge. In this tutorial, we will learn how to create a simple bot on LINE Messenger to order a pizza"},{"layout":"tutorial","id":"create-igdm-bot-handover-from-chatbot-to-agent","imgSpot":"/assets/images/tutorials/spot-ig-handover.webp","product":"kata-platform","title":"Create Instagram Bot Handover from Chatbot to Agent Tutorial","date":"2018-10-10T07:00:00+07:00","prev":"integration-chatbot-with-cms-studio","next":"create-simple-bot-handover-from-chatbot-to-agent","body":{"raw":"\nKata Platform <a href=\"https://platform.kata.ai\" target=\"_blank\">https://platform.kata.ai</a> is a platform to create chatbots and train them with Natural Language Processing (NLP). You can create any chatbots for any use-cases, such as FAQ, campaign, customer service, handover to human agents, and more.\n\nCurrently, we’ve launched Instagram chatbot with various features, such as End-users can receive automated replies by creating an Instagram story that mentioned brand, receive automated replies by replying to brand Instagram story, receive bot responses in image, text, quick reply, ice breaker (for first-time users only) and generic template (similar with a carousel in other messaging platforms). Learn more about [Instagram DM Automation](/tutorials/how-to-use-instagram-messaging-automation-in-your-project).\n\nIn this tutorial, we will create an Instagram chatbot that is able to send conversations to human agents, also known as \"Agent Handover''. We will use the Kata Omnichat dashboard to connect chatbots with human agents. Learn more about [Omnichat](/kata-omnichat/introduction/what-is-kata-omnichat).\n\n<YoutubeEmbedWrapper>\n  <YoutubeEmbed\n    id=\"dAHnoTX4BUE\"\n    params=\"v=dAHnoTX4BUE\"\n    title=\"Create Instagram Bot Handover from Chatbot to Agent Tutorial\"\n  />\n</YoutubeEmbedWrapper>\n\n## Chatbot Flow\n\nBefore we jump into the tutorial, let’s see the scenario for the conversation. We will create a chatbot using _keywords_.\n\n### Conversation Flow Table\n\nConversation flow table details can be seen <a href=\"https://drive.google.com/file/d/1rh5XvmGvbNyXZetG6v-tjAr8LvXjU-aj/view\" target=\"_blank\">here</a>\n\n## Create Project\n\n### Objective: Register your new account and login to the Platform\n\n1. Go to <a href=\"https://platform.kata.ai\" target=\"_blank\">https://platform.kata.ai</a> and click **Sign Up** to create new account\n\n2. Input required fields in sign up page: **Username, email address, role and captcha**\n\n3. Go to your registered email inbox. You will receive an email to verify your account and input your password\n\n4. When you click the **Confirm Email** button in the verification email, you will be redirected to set up a password. Insert your password and confirm the password.\n\n5. You will be redirected to the Login **Page**. Input your username and password to continue.\n\n### Objective: Create new chatbot project\n\n#### Login to Kata Platform and create a project\n\n1. Open your browser, then open the URL <a href=\"https://platform.kata.ai/login\" target=\"_blank\">https://platform.kata.ai/login</a> and enter your username & password.\n\n2. Click **\"Login\"** to continue.\n\n3. Click on **\"Create Project\"** and fill in the form. Each project contains one bot design, one NL, and one CMS.\n\n## Create Handover Flow\n\n### Objective: Define a flow\n\n#### Create a flow name \"handover\". We will use 1 flow for this simple bot\n\n1. Click **\"Create Flow\"** button on the Conversation Flow screen\n\n2. Create flow \"handover\", other fields are left blank. Then, click **Create**.\n\n#### Create \"init\" state\n\n1. Click **\"+\"** icon in the bottom right to create a new state\n\n2. Create state \"init\" and click the toggle to turn on “Initial State” and other fields are left blank. Then, click **Create**.\n\n## Create Greetings State to Respond End-User’s who Greet Bot via Direct Message\n\nIn this part, we are going to create a greeting flow to respond to end-users who greet the brand's bot via direct message, **but** **not** via Ice Breaker. For example, the end-user says \"hi\" to the bot and does not want to choose via Ice Breaker. Learn more about [Ice Breaker](/kata-omnichat/manage-inbox-settings/set-up-ice-breaker).\n\n### Objective: Create greetings state to define how to respond\n\n#### Create \"greetingsState\" as bot response to show keywords menu\n\n1. Create another state by clicking the **\"+\"** icon in the bottom right to create a new state named “greetingsState”\n\n2. Click **\"Add action\"**, then click **“+”** in the action box to create a new action\n\n3. When all actions available are shown, then choose \"Text\"\n\n4. Input action name \"greetingsText\"\n\n5. Next, click the **Add Variant** button to fill in with this text:\n\n```\nHalo, selamat datang di layanan CS Bank ABC 😊 \\n\\nUntuk memulai, pilih menu yang tersedia: \\n\\nKetik \"1\" untuk melihat FAQ \\nKetik “2” untuk melihat promo yang tersedia \\nKetik “3” untuk melihat lokasi Bank ABC \\nKetik “4” untuk berbicara dengan CS Bank ABC \\n\\n💡 Cukup ketik angka pilihannya, ya\n```\n\n6. Click **Create Action**\n\n#### Set the state into self-transition\n\nThe self-transition will make the actions under state will be repeatedly shown if end-users give an incorrect answer\n\n1. Go to tab **Transitions**\n\n2. Turn on on the Self Transition toggle\n\n3. Then, click Create to finalize the state\n\n### Objective: Catch end-users messages when greeting the bot\n\n#### Create \"greetings\" keywords to build understanding in chatbots when end-users greet the bot. We will use the NLUs feature to create the keywords.\n\n1. Go to the menu **\"NLUs\"** which is placed under the “Conversation Flows” menu. Your screen will be switched to create NLUs\n\n2. Click **Create NLU**\n\n3. Then, fill in the fields as follow\n\n```\nNLU Name: greetings\nNLU Type: Keyword\n```\n\n4. Next, click **\"Add Keyword\"** to define any words to trigger the bot. Fill in the main keyword as follow\n\n```\nMain keyword: greetings\n```\n\n5. Add a new word by pressing \"enter\" on your keyboard. Every time you write a new word, press “enter” on your keyboard to save words. Add these words\n\n<FigureImage\n  caption={{ title: 'Figure 1.', description: `Create \"greetings\" keyword` }}\n  src=\"/assets/images/tutorials/ig-handover/image_1.webp\"\n  alt=\"Simple Handover\"\n  naturalHeight={838}\n  naturalWidth={1828}\n/>\n\n6. Click **\"Create\"** to save the NLUs\n\n#### Create \"greetingsIntent\" intent to catch user’s input\n\n1. Click the Intent tab which is placed next to the Conversation Flows sidebar.\n\n2. Click **Create Intent** button\n\n3. Fill in the intent as follows. The choice of \"Intent type\" is text, which means it will catch incoming messages with text only. We also set up the intent into “As Initial”, which means the intent will be executed for the first time. On classifier, use “greetings” NLUs that we’ve created in the previous step to connect the intent with creating keywords for greetings.\n\n<FigureImage\n  caption={{ title: 'Figure 2.', description: `Create intent and create mapping with greetings keyword` }}\n  src=\"/assets/images/tutorials/ig-handover/image_2.webp\"\n  alt=\"Simple Handover\"\n  naturalHeight={1162}\n  naturalWidth={1888}\n/>\n\n### Objective: Connect \"init\" and “greetingsState” states by creating a transition\n\n#### Create a transition to connect \"init\" and “greetingsState” states. The transition will define in which condition the greetings state, including the actions’ state, will be executed.\n\n1. Pull a line from the \"init\" state and drag it to the “greetingsState” state. If you succeed, then it will show a **Create Transition** drawer\n\n2. Fill in the transition condition as follow\n\n```\nintent == \"greetingsIntent\"\n```\n\n3. Click **\"Create Transition\"**\n\n## Create Greetings State to Respond End-User’s who Greet Bot via Instagram Story Mention\n\nIn this part, we are going to create a greeting flow to respond to end-users who mentioned the brand’s Instagram account in the end-users Instagram Stories. End-user will receive an automatic message in a direct message. Learn more about [Instagram Story Mention](/tutorials/how-to-use-instagram-messaging-automation-in-your-project).\n\n### Objective: Catch end-users who mentioned the brand’s in the end-users Instagram Story\n\n#### Create \"igMentionedIntent\" intent to catch user’s input\n\n1. Click the Intent tab which is placed next to the Conversation Flows sidebar.\n\n2. Click **Create Intent** button\n\n3. Fill in the intent as follows. We set up the intent into \"As Initial\", which means the intent will be executed for the first time. Choose intent type into data, because we will use a payload named story_mention.\n\n<FigureImage\n  caption={{ title: 'Figure 3.', description: `Create intent for Instagram Story Mention feature` }}\n  src=\"/assets/images/tutorials/ig-handover/image_3.webp\"\n  alt=\"Simple Handover\"\n  naturalHeight={991}\n  naturalWidth={2048}\n/>\n\n4. Then, click **Create**.\n\n### Objective: Create greetings state to define how to respond\n\n#### Create \"igMentionedState\" as bot response to show keywords menu\n\n1. Create another state by clicking the **\"+\"** icon in the bottom right to create a new state named “_igMentionedState_”\n\n2. Click **\"Add action\"**, then click **“+”** in the action box to create a new action\n\n3. When all actions available are shown, then choose \"Text\"\n\n4. Input action name \"igMentionedText\"\n\n5. Next, click the **Add Variant** button to fill in with this text:\n\n```\nHalo, terima kasih telah menyapa Bank ABC di Instagram Story Anda 😊 \\n\\nUntuk memulai, pilih menu yang tersedia: \\n\\nKetik \"1\" untuk melihat FAQ \\nKetik “2” untuk melihat promo yang tersedia \\nKetik “3” untuk melihat lokasi Bank ABC \\nKetik “4” untuk berbicara dengan CS Bank ABC \\n\\n💡 Cukup ketik angka pilihannya, ya\n```\n\n6. Click **Create Action**\n\n#### Set the state into self-transition\n\nThe self-transition will make the actions under state will be repeatedly shown if end-users give an incorrect answer\n\n1. Go to tab **Transitions**\n\n2. Turn on on the Self Transition toggle\n\n3. Then, click Create to finalize the state\n\n### Objective: Connect \"init\" and “igMentionedState” states by creating a transition\n\n#### Create a transition to connect \"init\" and “igMentionedState” states. The transition will define in which condition the greetings state, including the actions’ state, will be executed.\n\n1. Pull a line from the \"init\" state and drag it to the “greetings” state. If you succeed, then it will show a **Create Transition** drawer\n\n2. Fill in the transition as follow\n\n<FigureImage\n  caption={{\n    title: 'Figure 4.',\n    description: `Create transition and define which intent to trigger the next state \"igMentionedState\"`,\n  }}\n  src=\"/assets/images/tutorials/ig-handover/image_4.webp\"\n  alt=\"Simple Handover\"\n  naturalHeight={898}\n  naturalWidth={1800}\n/>\n\n3. Click **\"Create Transition\"**\n\n## Create Greetings State to Respond End-User’s who Greet Bot via Instagram Story Reply\n\nIn this part, we are going to create a greeting flow to respond to end-users who reply to the brand's Instagram Story. Learn more about [Instagram Story Reply](/tutorials/how-to-use-instagram-messaging-automation-in-your-project).\n\n### Objective: Catch end-users who reply to the brand’s Instagram Story\n\n#### Create \"replyStoryIntent\" intent to catch user’s input\n\n1. Click the Intent tab which is placed next to the Conversation Flows sidebar.\n\n2. Click **Create Intent** button\n\n3. Fill in the intent as follows. We set up the intent into \"As Initial\", which means the intent will be executed for the first time. Choose intent type into data, because we will use a payload named story_reply.\n\n<FigureImage\n  caption={{ title: 'Figure 5.', description: `Create intent for Instagram Story Reply` }}\n  src=\"/assets/images/tutorials/ig-handover/image_5.webp\"\n  alt=\"Simple Handover\"\n  naturalHeight={932}\n  naturalWidth={1692}\n/>\n\n5. Then, click **Create**.\n\n### Objective: Create greetings state to define how to respond\n\n#### Create \"igStoryReplyState\" as bot response to show keywords menu\n\n1. Create another state by clicking the **\"+\"** icon in the bottom right to create a new state named “igStoryReplyState”\n\n2. Click **\"Add action\"**, then click **“+”** in the action box to create a new action\n\n3. When all actions available are shown, then choose \"Text\"\n\n4. Input action name \"igStoryReplyText\"\n\n5. Next, click the **Add Variant** button to fill in with this text:\n\n```\nHalo, terima kasih telah menyapa Instagram Story Bank ABC 😊 \\n\\nUntuk memulai, pilih menu yang tersedia: \\n\\nKetik \"1\" untuk melihat FAQ \\nKetik “2” untuk melihat promo yang tersedia \\nKetik “3” untuk melihat lokasi Bank ABC \\nKetik “4” untuk berbicara dengan CS Bank ABC \\n\\n💡 Cukup ketik angka pilihannya, ya\n```\n\n6. Click **Create Action**\n\n#### Set the state into self-transition\n\nThe self-transition will make the actions under state will be repeatedly shown if end-users give an incorrect answer\n\n1. Go to tab **Transitions**\n\n2. Turn on on the Self Transition toggle\n\n3. Then, click Create to finalize the state\n\n### Objective: Connect \"init\" and “igStoryReplyState” states by creating a transition\n\n#### Create a transition to connect \"init\" and “igStoryReplyState” states. The transition will define in which condition the greetings state, including the actions’ state, will be executed.\n\n1. Pull a line from the \"init\" state and drag it to the “igStoryReplyState” state. If you succeed, then it will show a **Create Transition** drawer\n\n2. Fill in the transition as follow\n\n<FigureImage\n  caption={{\n    title: 'Figure 6.',\n    description: `Create transition and define which intent to trigger the next state \"igStoryReply\"`,\n  }}\n  src=\"/assets/images/tutorials/ig-handover/image_6.webp\"\n  alt=\"Simple Handover\"\n  naturalHeight={854}\n  naturalWidth={1524}\n/>\n\n3. Click **\"Create Transition\"**\n\n## Create Quick Replies\n\nIn this step, we will create bot responses named quick reply. Learn more about [Quick Reply for Instagram Messaging](/tutorials/how-to-use-instagram-messaging-automation-in-your-project).\n\n### Objective: Show available FAQ topics to end-user\n\n#### Create \"faqState\" state\n\n1. Click **\"+\"** icon in bottom right to create a new state\n\n2. Fill in the state name with \"_faqState_\"\n\n#### Create quick reply response type\n\n1. Click **\"+\"** in action box to create a new action\n\n2. When all actions available are shown, then choose \"Quick Reply\"\n\n3. Input action name \"qrText\"\n\n4. Fill in the Message field with:\n\n```\nPilih topik yang kamu inginkan 😊\n```\n\n5. Next, click **Add action** button\n\n6. Fill in the fields as follow\n\n<FigureImage\n  caption={{ title: 'Figure 7.', description: `Create message in quick replies` }}\n  src=\"/assets/images/tutorials/ig-handover/image_7.webp\"\n  alt=\"Simple Handover\"\n  naturalHeight={954}\n  naturalWidth={1348}\n/>\n\n7. Click button Create Action\n\n#### Set the state into self-transition\n\nThe self-transition will make the actions under state will be repeatedly shown if end-users give an incorrect answer\n\n1. Go to tab **Transitions**\n\n2. Turn on on the Self Transition toggle\n\n3. Then, click Create to finalize the state\n\n### Objective: Connect all greetings states to FAQ state\n\n#### Connect greetings via direct message to FAQ state\n\n1. Pull transition line which starts from \"greetingState\" to “faqState”\n\n2. Fill in the **Condition** field:\n\n```\ncontent == \"1\"\n```\n\n3. Click Create\n\n#### Connect greetings via Instagram story mention to FAQ state\n\n1. Pull transition line which starts from \"igMentionedState\" to “faqState”\n\n2. Fill in the **Condition** field:\n\n```\ncontent == \"1\"\n```\n\n3. Click Create\n\n#### Connect greetings via Instagram story reply to FAQ state\n\n1. Pull transition line which starts from \"igStoryReplyState\" to “faqState”\n\n2. Fill in the **Condition** field:\n\n```\ncontent == \"1\"\n```\n\n3. Click Create\n\n### Objective: Show bot response after end-user choose \"Daftar rekening baru\"\n\n#### Create \"rekeningBaruState\" state\n\n1. Click **\"+\"** icon in the bottom right to create a new state\n\n2. Fill in the state name with \"rekeningBaruState\"\n\n#### Create bot response\n\n1. Click **\"+\"** in action box to create a new action\n\n2. When all actions available are shown, then choose \"Text\"\n\n3. Input action name \"rekeningBaruText\"\n\n4. Fill in Message field with:\n\n```\nUntuk mendaftar rekening baru, kamu harus menyiapkan KTP, KK asli dan foto diri\n```\n\n5. Click button Create Action\n\n#### Create bot action command to trigger next state to be executed\n\nIn this section, the bot will send the \"next\" command whenever this state is executed. The “next” command will be caught later into an intent for executing another state to confirm end-users whether they want to restart and show the menu or end the conversation.\n\n1. Click **\"+\"** in action box to create a new action\n\n2. When all actions available are shown, then choose \"Command\"\n\n3. Input action name \"nextCommand\"\n\n4. Fill in Command field with:\n\n```\nnext\n```\n\n6. Click button Create Action\n\n### Objective: Show bot response after end-user choose \"Daftar kartu kredit\"\n\n#### Create \"kartuKreditState\" state\n\n1. Click **\"+\"** icon in the bottom right to create a new state\n\n2. Fill in the state name with \"kartuKreditText\"\n\n#### Create bot response\n\n3. Click **\"+\"** in action box to create a new action\n\n4. When all actions available are shown, then choose \"Text\"\n\n5. Input action name \"kartuKreditText\"\n\n6. Fill in Message field with:\n\n```\nUntuk mendaftar kartu kredit baru, kamu harus menyiapkan KTP, KK asli dan foto diri\n```\n\n7. Click the button Create Action\n\n#### Create bot action command to trigger next state to be executed\n\nIn this section, the bot will send the \"next\" command whenever this state is executed. The “next” command will be caught later into an intent for executing another state to confirm end-users whether they want to restart and show the menu or end the conversation. We already created this action in the previous step, so we will choose from available actions.\n\n1. Click button **Add action** to add more action\n\n2. In \"Action name\" dropdown, search “nextCommand” actions\n\n3. Click \"nextComman\" action\n\n4. Then, click **Create Action** button\n\n5. Click **Create** to finalize the state\n\n### Objective: Connect FAQ menu response to quick reply options\n\n#### Create transition to connect from faqState to rekeningBaruState\n\n1. Pull transition line which starts from \"faqState\" to “rekeningBaruState”\n\n2. Fill in the **Condition** field:\n\n```\ncontent == \"Daftar rekening baru\"\n```\n\n3. Click Save\n\n#### Create transition to connect from faqState to kartuKreditState\n\n1. Pull transition line which starts from \"faqState\" to “kartuKreditState”\n\n2. Fill in the **Condition** field:\n\n```\ncontent == \"Daftar kartu kredit\"\n```\n\n5. Click Save\n\n## Create Generic Template (Carousel)\n\nIn this step, we will create bot responses named generic template. Learn more about [Generic Template for Instagram Messaging](/tutorials/how-to-use-instagram-messaging-automation-in-your-project).\n\n### Objective: Show bot response of generic template (\"carousel\") to end-users\n\n#### Create carousel\n\n1. Click **\"+\"** icon in the bottom right to create a new state\n\n2. Fill in the state name with \"carouselState\"\n\n#### Create bot response for the first carousel: Buy 1 Get 1\n\n1. Click **\"+\"** in the action box to create a new action\n\n2. When all actions available are shown, then choose \"Carousel\"\n\n3. Input action name \"carousel\"\n\n4. Next, click the **Add Carousel** button and fill in with the following fields:\n\n```\nTitle: Buy 1 Get 1\nText: Gratis 1 pancake di Kafe ABC\nThumbnail image URL: https://images.unsplash.com/photo-1630370939015-408e783fb273?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1yZWxhdGVkfDF8fHxlbnwwfHx8fA%3D%3D&auto=format&fit=crop&w=900&q=60.jpg\n```\n\n5. Click the **Add action** button. The first action will trigger another state to execute. Fill in with the following fields:\n\n```\nLabel: B1G1\nPostback\n\nPayload\nKey: carousel\nValue: b1g1\n```\n\n6. Then click the **Add action** button again to create another action. The second action will redirect to the open link. Fill in with the following fields:\n\n```\nLabel: Lihat detail\nURL\nhttps://docs.kata.ai\n```\n\n#### Create bot response for the second carousel: Diskon 10%\n\n1. Next, click the **Add Carousel** button and fill in with the following fields:\n\n```\nTitle: Diskon 10%\nText: Dapatkan di Mart ABC\nThumbnail image URL: https://images.unsplash.com/photo-1515706886582-54c73c5eaf41?ixid=MnwxMjA3fDB8MHxzZWFyY2h8MTR8fHNob3B8ZW58MHx8MHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=900&q=60.jpg\n```\n\n8. Click the **Add action** button. The first action will trigger another state to execute. Fill in with the following fields:\n\n```\nLabel: Diskon\nPostback\n\nPayload\nKey: carousel\nValue: diskon\n```\n\n9. Then click the **Add action** button again to create another action. The second action will redirect to the open link. Fill in with the following fields:\n\n```\nLabel: Lihat detail\nURL\nhttps://docs.kata.ai\n```\n\n10. Click **Create Action**\n\n11. To finalize the state creation, click **Create** in the state drawer\n\n#### Set the state into self-transition\n\nThe self-transition will make the actions under state will be repeatedly shown if end-users give an incorrect answer\n\n1. Go to tab **Transitions**\n\n2. Turn on on the Self Transition toggle\n\n3. Then, click Create to finalize the state\n\n### Objective: Connect all greetings states to carouselState\n\n#### Connect greetings via direct message to carousel state\n\n1. Pull transition line which starts from \"greetingState\" to “carouselState”\n\n2. Fill in the **Condition** field:\n\n```\ncontent == \"2\"\n```\n\n3. Click Create\n\n#### Connect greetings via Instagram story mention to carousel state\n\n1. Pull transition line which start from \"igMentionedState\" to “carouselState”\n\n2. Fill in the **Condition** field:\n\n```\ncontent == \"2\"\n```\n\n3. Click Create\n\n#### Connect greetings via Instagram story reply to carousel state\n\n1. Pull transition line which start from \"igStoryReplyState\" to “carouselState”\n\n2. Fill in the **Condition** field:\n\n```\ncontent == \"2\"\n```\n\n3. Click Create\n\n### Objective: Show bot response after end-users choose \"Buy 1 Get 1\"\n\n#### Create \"b1g1State\" state\n\n1. Click **\"+\"** icon in the bottom right to create a new state\n\n2. Fill in the state name with \"b1g1State\"\n\n#### Create bot response\n\n1. Click **\"+\"** in the action box to create a new action\n\n2. When all actions available are shown, then choose \"Text\"\n\n3. Input action name \"b1g1Text\"\n\n4. Fill in Text Response field with:\n\n```\nKamu telah memilih promo \"Buy 1 Get 1\" dari Bank ABC. Silahkan mengunjungi Kafe ABC terdekat Anda dan tunjukkan pesan ini 😊\n```\n\n5. Click button Create Action\n\n#### Create bot action command to trigger next state to be executed\n\nIn this section, the bot will send the \"next\" command whenever this state is executed. The “next” command will be caught later into an intent for executing another state to confirm end-users whether they want to restart and show the menu or end the conversation. We already created this action in the previous step, so we will choose from available actions.\n\n1. Click button Add action to add more action\n\n2. In the \"Action name\" dropdown, search “nextCommand” actions\n\n3. Click \"nextCommand\" action\n\n4. Then, click Create Action button\n\n### Objective: Show bot response after end-users choose \"Disc 10%\"\n\n#### Create \"discState\" state\n\n1. Click **\"+\"** icon in the bottom right to create a new state\n\n2. Fill in the state name with \"discState\"\n\n#### Create bot response\n\n1. Click **\"+\"** in action box to create a new action\n\n2. When all actions available are shown, then choose \"Text\"\n\n3. Input action name \"discText\"\n\n4. Fill in Text Response field with:\n\n```\nKamu telah memilih promo \"Diskon 10% di Mart ABC\" dari Bank ABC. Silahkan mengunjungi Mart ABC terdekat Anda dan tunjukkan pesan ini 😊\n```\n\n6. Click button Create Action\n\n#### Create bot action command to trigger next state to be executed\n\nIn this section, the bot will send the \"next\" command whenever this state is executed. The “next” command will be caught later into an intent for executing another state to confirm end-users whether they want to restart and show the menu or end the conversation. We already created this action in the previous step, so we will choose from available actions.\n\n1. Click button Add action to add more action\n\n2. In the \"Action name\" dropdown, search “nextCommand” actions\n\n3. Click \"nextCommand\" action\n\n4. Then, click Create Action button\n\n### Objective: Connect carousel menu response to postback options\n\n#### Create transition to connect from carouselState to b1g1State\n\n1. Pull transition line which starts from \"carouselState\" to “b1g1State”\n\n2. Fill in the **Condition** field:\n\n```\ncontent == \"B1G1\" || (intent == \"carouselIntent\" && payload.carousel == \"b1g1\")\n```\n\n3. Click Save\n\n#### Create transition to connect from faqState to kartuKreditState\n\n1. Pull transition line which starts from \"carouselState\" to “discState”\n\n2. Fill in the **Condition** field:\n\n```\ncontent == \"Diskon\" || (intent == \"carouselIntent\" && payload.carousel == \"diskon\")\n```\n\n3. Click Save\n\n## Create Text Response\n\n### Objective: Show bot response in the text to end-users\n\n#### Create text\n\n1. Click **\"+\"** icon in the bottom right to create a new state\n\n2. Fill in the state name with \"locationState\"\n\n3. Click **\"+\"** in the action box to create a new action\n\n4. When all actions available are shown, then choose \"Text\"\n\n5. Input action name \"locationText\"\n\n6. Next, click the **Add Variant** button and fill in with following fields:\n\n```\nLokasi bank ABC terdapat di Jalan Haji Nawi, Jakarta Selatan. Lihat peta: https://goo.gl/maps/eD2BGC6ZL7JpgBnU6\n```\n\n8. Click Create Action\n\n#### Create bot action command to trigger next state to be executed\n\nIn this section, the bot will send the \"next\" command whenever this state is executed. The “next” command will be catched later into an intent for executing another state to confirm end-users whether they want to restart and show menu or end the conversation.\n\n1. Click **\"+\"** in action box to create a new action\n\n2. When all actions available are shown, then choose \"Command\"\n\n3. Input action name \"nextCommand\"\n\n4. Fill in Command field with:\n\n```\nnext\n```\n\n5. Click button Create Action\n\n6. Then, click Create to finalize the state\n\n### Objective: Connect all greetings states to locationState\n\n#### Connect greetings via direct message to location state\n\n1. Pull transition line which start from \"greetingState\" to “locationState”\n\n2. Fill in the **Condition** field:\n\n```\ncontent == \"3\"\n```\n\n3. Click Save\n\n#### Connect greetings via Instagram story mention to carousel state\n\n1. Pull transition line which start from \"igMentionedState\" to “locationState”\n\n2. Fill in the **Condition** field:\n\n```\ncontent == \"3\"\n```\n\n3. Click Save\n\n#### Connect greetings via Instagram story reply to carousel state\n\n1. Pull transition line which start from \"igStoryReplyState\" to “locationState”\n\n2. Fill in the **Condition** field:\n\n```\ncontent == \"3\"\n```\n\n3. Click Save\n\n## Create Handover to Human Agent Flow\n\nHandover to human agent path is required to be implemented in Instagram Messaging and we will use Handover API template.\n\n### Objective: Create a flow that end-user can request handover to human agents by using Handover API\n\n#### Create handover state\n\n1. Click **\"+\"** icon in bottom right to create new state\n\n2. Fill in the state name with \"handover\" and activate toggle “End state”\n\n#### Create bot response to inform end-user that the handover request has been received and waiting for agents to reply\n\n1. Click **\"+\"** in action box to create new action\n\n2. When all actions available are shown, then choose \"Text\"\n\n3. Input action name \"waitForAgent\"\n\n4. Next, click the **Add Variant** button to fill in with this text:\n\n```\nMohon menunggu, ya. Sedang kami hubungkan ke CS Bank ABC yang tersedia! 😊\n```\n\n5. Click **Create Action**\n\n#### Use Handover API to send handover request to Omnichat\n\n1. Create another action by clicking **\"Add action\"**\n\n2. Click **\"+\"** in action box to create new action\n\n3. Fill in action name with \"handover\"\n\n4. When all actions available are shown, then choose \"API\"\n\n5. Choose **Handover API**\n\n6. Click **Create Action** button\n\n7. To finalize this step when creating a new state, click the **Create** button in the state drawer\n\n### Objective: Connect all greetings states to handoverState\n\n#### Connect greetings via direct message to handover state\n\n1. Pull transition line which start from \"greetingState\" to “handoverState”\n\n2. Fill in the **Condition** field:\n\n```\ncontent == \"4\"\n```\n\n3. Click Save\n\n#### Connect greetings via Instagram story mention to handover state\n\n1. Pull transition line which start from \"igMentionedState\" to “handoverState”\n\n2. Fill in the **Condition** field:\n\n```\ncontent == \"4\"\n```\n\n3. Click Save\n\n#### Connect greetings via Instagram story reply to handover state\n\n1. Pull transition line which start from \"igStoryReplyState\" to “handoverState”\n\n2. Fill in the **Condition** field:\n\n```\ncontent == \"4\"\n```\n\n3. Click Save\n\n## Create Confirmation State\n\n### Objective: Create a state that end-user will be asked to restart for showing all menu or end conversation\n\n#### Create \"confirmState\"\n\n1. Click **\"+\"** icon in bottom left to create new state\n\n2. Fill in the state name with \"confirmState\"\n\n3. Click **\"Add action\",** then click “+” to create new action\n\n4. Choose Text, then fill in the action name with \"confirmText\".\n\n5. Next, click the **\"Add Variant\"** button and input the following text:\n\n```\nApakah ada yang ingin kamu tanyakan kembali? Pilih menu yang tersedia:\\n\\n1. Ketik \"1\" untuk melihat menu\\n2. Ketik “2” untuk menyelesaikan pembicaraan\n```\n\n#### Set the state into self-transition\n\nThe self-transition will make the actions under state will be repeatedly shown if end-users give an incorrect answer\n\n1. Go to tab **Transitions**\n\n2. Turn on on the Self Transition toggle\n\n3. Then, click Create to finalize the state\n\n### Objective: Create an intent to catch command for executing next state\n\n1. Click the Intent tab which is placed next to the Conversation Flows sidebar.\n\n2. Click **Create Intent** button\n\n3. Fill in the intent as follows. The choice of \"Intent type\" is command, which means it will catch command only. On condition, it fills in with content with “next” which is a command that is sent from bot after executed responses such as quick replies, carousel, and text.\n\n<FigureImage\n  caption={{ title: 'Figure 8.', description: `Create intent to catch command for triggering next flow` }}\n  src=\"/assets/images/tutorials/ig-handover/image_8.webp\"\n  alt=\"Simple Handover\"\n  naturalHeight={862}\n  naturalWidth={1724}\n/>\n\n4. Click Create to finalize\n\n### Objective: Connect all bot responses states to confirmState\n\n#### Connect quick replies responses states to confirmation state\n\n1. Pull transition line which starts from \"rekeningBaruState\" to “confirmState”\n\n2. Fill in the **Condition** field:\n\n```\nintent == \"nextIntent\"\n```\n\n3. Click Save\n\n4. Next, pull transition line which starts from \"kartuKreditState\" to “confirmState”\n\n5. Fill in the **Condition** field:\n\n```\nintent == \"nextIntent\"\n```\n\n6. Click Save\n\n#### Connect carousel responses to confirmation state\n\n1. Pull transition line which starts from \"b1g1State\" to “confirmState”\n\n2. Fill in the **Condition** field:\n\n```\nintent == \"nextIntent\"\n```\n\n3. Click Save\n\n4. Next, pull transition line which start from \"discState\" to “confirmState”\n\n5. Fill in the **Condition** field:\n\n```\nintent == \"nextIntent\"\n```\n\n6. Click Save\n\n#### Connect \"locationState\" to “confirmState”\n\n1. Pull transition line which start from \"locationState\" to “confirmState”\n\n2. Fill in the **Condition** field:\n\n```\nintent == \"nextIntent\"\n```\n\n3. Click Save\n\n### Objective: Create state to restart menu\n\n#### Create a \"backToMenu\" state to restart menu\n\n1. Click **\"+\"** icon in bottom left to create a new state\n\n2. Fill in the state name with \"backToMenu\"\n\n3. Turn on toggle **End State**\n\n4. Click **\"Add action\",** then click “+” to create a new action\n\n5. Choose Command, then fill in the action name with \"backToMenu\".\n\n6. Next, fill in the Command with:\n\n```\ntoMenu\n```\n\n7. Click Create to finalize\n\n#### Create \"toMenuIntent\" intent\n\n1. Click the Intent tab which is placed next to the Conversation Flows sidebar.\n\n2. Click **Create Intent** button\n\n3. Fill in the intent as follows. This intent will trigger show main menu as bot response\n\n<FigureImage\n  caption={{ title: 'Figure 9.', description: `Create intent to catch command for showing main menu again` }}\n  src=\"/assets/images/tutorials/ig-handover/image_9.webp\"\n  alt=\"Simple Handover\"\n  naturalHeight={868}\n  naturalWidth={1466}\n/>\n\n4. Then, click **Create**.\n\n#### Update transition condition from \"init\" to “greetingsState”\n\nIn this step, we will update transition condition and use toMenuIntent as one of the conditions. It is because this intent, if executed, will trigger a greeting response and showing the menu in bot.\n\n1. Click transition between \"init\" and “greetingState”\n\n2. Edit drawer will be shown\n\n3. Update condition field into this\n\n```\nintent == \"greetingsIntent\" || intent == \"toMenuIntent\"\n```\n\n4. Click Save to update\n\n### Objective: Create state to end conversation\n\n#### Create a \"bye\" state to end conversation and show thank you response\n\n1. Click **\"+\"** icon in bottom left to create a new state\n\n2. Fill in the state name with \"bye\"\n\n3. Turn on toggle **End State**\n\n4. Click **\"Add action\",** then click “+” to create a new action\n\n5. Choose Text, then fill in the action name with \"bye\".\n\n6. Click **Add Variant** button\n\n7. Next, fill in the Text with:\n\n```\nTerima kasih sudah menghubungi Bank ABC 😊\n```\n\n8. Click **Create** to finalize\n\n### Objective: Connect transition between confirmState to backToMenu and bye state\n\n1. Pull transition line which starts from \"confirmState\" to “backToMenu”\n\n2. Fill in the **Condition** field:\n\n```\ncontent == \"1\"\n```\n\n4. Click Save\n\n5. Next, pull transition line which start from \"confirmState\" to “bye”\n\n6. Fill in the **Condition** field:\n\n```\ncontent == \"2\"\n```\n\n7. Click Save\n\n## Create Fallback Intent\n\n1. Click the Intent tab which is placed next to the Conversation Flows sidebar.\n\n2. Click **Create Intent** button\n\n3. Fill in the intent as follows. We set up the intent into \"As Fallback\", which means the intent will be executed as fallback. It becomes a new layer of fallback in Handover flow, before literally fallback-ed to fallback flow.\n\n<FigureImage\n  caption={{ title: 'Figure 10.', description: `Create intent for being \"guard\" before fallback flow` }}\n  src=\"/assets/images/tutorials/ig-handover/image_10.webp\"\n  alt=\"Simple Handover\"\n  naturalHeight={452}\n  naturalWidth={1150}\n/>\n\n4. Click Create to finalize\n\n## Finalize Your New Bot\n\n### Objective: Publish your bot to save the chatbot flow\n\n1. Click on the **\"Publish\"** button which is placed on top right corner\n\n2. Fill in the **changelog**. You can input \"Initial version\" in the changelog\n\n3. Click **Publish** to save the changelog. Lastly, your final chatbot flow will be like this:\n\n<FigureImage\n  caption={{ title: 'Figure 11.', description: `Final conversation flow` }}\n  src=\"/assets/images/tutorials/ig-handover/image_11.webp\"\n  alt=\"Simple Handover\"\n  naturalHeight={748}\n  naturalWidth={2048}\n/>\n\n### Objective: Testing your bot in emulator\n\n1. On the bottom of your right screen, there is a small button named **\"Test Chatbot\".** Click the **button** to start.\n\n2. You can try to test your bot by inputting a message in the text bot. Say \"hi\" to your bot. If it succeeds, your bot will reply as follows\n\n<FigureImage\n  caption={{ title: 'Figure 12.', description: `Testing your bot by typing \"hai\"` }}\n  src=\"/assets/images/tutorials/ig-handover/image_12.webp\"\n  alt=\"Simple Handover\"\n  naturalHeight={1042}\n  naturalWidth={2048}\n/>\n\n<FigureImage\n  caption={{ title: 'Figure 13.', description: `Testing another action response, this example is for text action` }}\n  src=\"/assets/images/tutorials/ig-handover/image_13.webp\"\n  alt=\"Simple Handover\"\n  naturalHeight={1140}\n  naturalWidth={2048}\n/>\n\n3. If you want to **restart** the session, click refresh icon which is placed at the bottom\n\n### Objective: Deploy your bot\n\n#### Create new deployment\n\n1. Go to the **\"Deploy\"** menu in the left sidebar\n\n2. On this page, click on the **\"New Deployment\"** button which is placed in the top right corner. If you successfully clicked, it will show a create deployment drawer\n\n3. Choose any deployment version you want to deploy and fill in the changelog. Or you can simply follow this screenshot\n\n<FigureImage\n  caption={{ title: 'Figure 14.', description: `Create new deployment` }}\n  src=\"/assets/images/tutorials/ig-handover/image_14.webp\"\n  alt=\"Simple Handover\"\n  naturalHeight={1890}\n  naturalWidth={1338}\n/>\n\n4. Click **Submit** to finish the deployment\n\n#### Create a new environment as prerequisites to deploy the bot to channel\n\n1. Go to the **Environment** menu which is placed under the current menu (\"Overview\"). If you successfully entered the Environment menu, you will see a page like this. These 3 environments represent that your chatbot will be tested in development or staging first before go live as in Production stage.\n\n<FigureImage\n  caption={{ title: 'Figure 15.', description: `Set up environment, then set up Omnichat channel` }}\n  src=\"/assets/images/tutorials/ig-handover/image_15.webp\"\n  alt=\"Simple Handover\"\n  naturalHeight={647}\n  naturalWidth={2048}\n/>\n\n2. Click the **Create Environment** button in the Development environment and you will see a drawer to create a new environment\n\n3. Choose the **development version** you want to (in this tutorial we will use the 1.0.0 version)\n\n4. Fill in the **environment URL**. This environment URL will be useful if you use our CMS feature, [learn more about CMS](https://docs.kata.ai/cms-studio/about/').\n\n5. Click **Create** to finalize\n\n6. You will notice the button is changed into the Create **Channel** button.\n\nIn this step, you will need an Omnichat <a href=\"https://kata-omnichat.kata.ai\" target=\"_blank\">https://omnichat.kata.ai</a> account and an Omnichat inbox to deploy the bot. Let’s get started!\n\n## Create Inbox in Omnichat\n\nFollow these tutorials in Omnichat to continue:\n\n1. Register a new Omnichat account in Omnichat. Learn more about how to [register account in Omnichat](/kata-omnichat/getting-started/register-your-account-first)\n\n2. Create a new channel inbox. Learn more about [create inbox in Omnichat](/kata-omnichat/getting-started/connect-your-instagram-messaging-inbox)\n\n   1. For IGDM chatbot: Section **How to Set Up > Connect to Instagram Messaging**\n\n   2. For WA chatbot: Section **How to Set Up > Connect to Whatsapp Messaging**\n\n## Create Agent Bot in Omnichat\n\nFollow the tutorial in Omnichat to continue. Continue to [create agent bot](/kata-omnichat/configure-your-agent-chatbot/setup-agent-bot-in-kata-omnichat).\n\n### Connect Bot to Omnichat\n\n1. If you succeed to follow the above tutorials, you will see an access token generated in Omnichat that needs to be pasted into the Platform. The screenshot below\n\n<FigureImage\n  caption={{ title: 'Figure 16.', description: `Create agent bot` }}\n  src=\"/assets/images/tutorials/ig-handover/image_16.webp\"\n  alt=\"Simple Handover\"\n  naturalHeight={967}\n  naturalWidth={2048}\n/>\n\n2. Next, open the Kata Platform URL <a href=\"https://platform.kata.ai\" target=\"_blank\">https://platform.kata.ai</a> and do login\n\n3. Click your project that already had a chatbot and deployed\n\n4. Then, go to the menu: Deploy > Environment. You will see this screen.\n\n<FigureImage\n  caption={{\n    title: 'Figure 17.',\n    description: `Click button \"Create channel\" to continue copying access token from Omnichat`,\n  }}\n  src=\"/assets/images/tutorials/ig-handover/image_17.webp\"\n  alt=\"Simple Handover\"\n  naturalHeight={695}\n  naturalWidth={2048}\n/>\n\n5. Click \"+\" Create Channel” button in channel table list and drawer to set up the channel will be shown\n\n6. Choose Omnichat in Channel Type\n\n7. In the Access Token field, paste your access token that was generated from the Omnichat inbox.\n\n8. Click Save to deploy your bot\n\n9. Few steps to the final ✨ A created channel will generate a webhook URL. Copy the webhook URL in the Platform to Omnichat.\n\n### Finalize Agent Bot in Omnichat\n\n1. Go back to Omnichat <a href=\"https://kata-omnichat.kata.ai\" target=\"_blank\">https://omnichat.kata.ai</a> and do login\n\n2. Go to menu: Settings > Integrations > Agent Bot. You will see this screen and information that you’re still in the first step to finalize\n\n<FigureImage\n  caption={{ title: 'Figure 18.', description: `Edit the agent bot to paste webhook URL from Kata Platform` }}\n  src=\"/assets/images/tutorials/ig-handover/image_18.webp\"\n  alt=\"Simple Handover\"\n  naturalHeight={1078}\n  naturalWidth={2048}\n/>\n\n3. Click \"Edit\" button in the agent bot configuration\n\n4. A drawer will appear to fill in the Platform webhook URL. Paste your chatbot webhook URL\n\n5. Click Update and you will be redirected to agent bot list\n\n6. Lastly, turn on the toggle in Activate Agent Bot. Your chatbot is already connected to the Omnichat inbox and ready to use!\n\n## Update Instagram Bot to Use Ice Breaker\n\nIce Breaker is useful for first-time users can understand the available menu or topics in your Instagram bot. To use Ice Breaker, we need to create an Instagram inbox as a prerequisite. Learn more about [Ice Breaker](/channels/instagram-messaging/#sending-ice-breaker-reply).\n\nAlso, you need to successfully finish the Instagram bot until connect to agent bot Omnichat. Go back to the first step.\n\nBefore we jump to the tutorial, here is the general conversation flow for using Ice Breaker.\n\n<Table>\n  <TableHead>\n    <TableHeadRow>\n      <TableHeadCell>Scenario Flow </TableHeadCell>\n      <TableHeadCell>\n        Details <br />\n        (Each row represents 1 bubble message)\n      </TableHeadCell>\n      <TableHeadCell>Component Details </TableHeadCell>\n    </TableHeadRow>\n  </TableHead>\n  <TableBody>\n    <TableBodyRow>\n      <TableBodyCell>\n        First time end-users chat the brand's Instagram DM, then it will show Ice Breaker. Learn more about Ice Breaker.\n        It will not show when using Instagram Story Mention or Instagram Story Reply.\n      </TableBodyCell>\n      <TableBodyCell>\n        Show ice breaker\n        <br />\n        FAQ\n        <br />\n        Promo <br />\n        Lokasi <br />\n        Berbicara dengan CS\n      </TableBodyCell>\n      <TableBodyCell>-</TableBodyCell>\n    </TableBodyRow>\n  </TableBody>\n</Table>\n### Objective: Create Ice Breaker in your Instagram inbox\n\nFollow the tutorial on [how to set up Ice Breaker in Instagram Inbox](/tutorials/how-to-use-instagram-messaging-automation-in-your-project).\n\n### Objective: Create intent to trigger bot response if end-users click all Ice Breaker\n\n#### Create intent for FAQ menu\n\n1. Click the Intent tab which is placed next to the Conversation Flows sidebar.\n\n2. Click **Create Intent** button\n\n3. Fill in the intent as follows. This intent will trigger the FAQ state to show FAQ response when end-user click \"FAQ\" in Ice Breaker feature\n\n<FigureImage\n  caption={{ title: 'Figure 19.', description: `Edit the agent bot to paste webhook URL from Kata Platform` }}\n  src=\"/assets/images/tutorials/ig-handover/image_19.webp\"\n  alt=\"Simple Handover\"\n  naturalHeight={1244}\n  naturalWidth={1942}\n/>\n\n4. Then, click **Create**.\n\n#### Create intent for Promo menu\n\n1. Click the Intent tab which is placed next to the Conversation Flows sidebar.\n\n2. Click **Create Intent** button\n\n3. Fill in the intent as follows. This intent will trigger the promo state to show promo response when end-user click \"Promo\" in Ice Breaker feature\n\n<FigureImage\n  caption={{\n    title: 'Figure 20.',\n    description: `Create intent for triggering Promo state when user click Ice Breaker with Promo item`,\n  }}\n  src=\"/assets/images/tutorials/ig-handover/image_20.webp\"\n  alt=\"Simple Handover\"\n  naturalHeight={1234}\n  naturalWidth={1682}\n/>\n\n4. Then, click **Create**.\n\n#### Create intent for \"Lokasi\" menu\n\n1. Click the Intent tab which is placed next to the Conversation Flows sidebar.\n\n2. Click **Create Intent** button\n\n3. Fill in the intent as follows. This intent will trigger the location state to show location response when end-user click \"Lokasi`\" in Ice Breaker feature\n\n<FigureImage\n  caption={{\n    title: 'Figure 21.',\n    description: `Create intent for triggering Lokasi state when user click Ice Breaker with Location item`,\n  }}\n  src=\"/assets/images/tutorials/ig-handover/image_21.webp\"\n  alt=\"Simple Handover\"\n  naturalHeight={782}\n  naturalWidth={1622}\n/>\n\n4. Then, click **Create**.\n\n#### Create intent for \"Berbicara dengan CS\" menu\n\n1. Click the Intent tab which is placed next to the Conversation Flows sidebar.\n\n2. Click **Create Intent** button\n\n3. Fill in the intent as follows. This intent will trigger the handover state to handover end-user to human agent when end-user click \"Berbicara dengan CS\" in Ice Breaker feature\n\n<FigureImage\n  caption={{ title: 'Figure 22.', description: `Create intent for triggering CS state item` }}\n  src=\"/assets/images/tutorials/ig-handover/image_22.webp\"\n  alt=\"Simple Handover\"\n  naturalHeight={860}\n  naturalWidth={1512}\n/>\n\n4. Then, click **Create**.\n\n### Objective: Create transition for mapping bot responses after end-users clicked the Ice Breaker\n\n#### Connect \"init\" to “faqState” to trigger FAQ response after end-users clicked “FAQ” in Ice Breaker\n\n1. Pull transition line from \"init\" to “faqState”.\n\n2. Create transition drawer will show.\n\n3. Fill in condition as follow:\n\n```\nintent == \"faqIceBreaker\"\n```\n\n4. Click Create\n\n#### Connect \"init\" to “carouselState” to trigger generic template (“carousel”) response after end-users clicked “Promo” in Ice Breaker\n\n1. Pull transition line from \"init\" to “carouselState”.\n\n2. Create transition drawer will show.\n\n3. Fill in condition as follow:\n\n```\nintent == \"promoIceBreaker\"\n```\n\n4. Click Create\n\n#### Connect \"init\" to “carouselState” to trigger text response after end-users clicked “Lokasi” in Ice Breaker\n\n1. Pull transition line from \"init\" to “locationState”.\n\n2. Create transition drawer will show.\n\n3. Fill in condition as follow:\n\n```\nintent == \"locationIceBreaker\"\n```\n\n4. Click Create\n\n#### Connect \"init\" to “handoverState” to trigger handover to human agents after end-users clicked “Berbicara dengan CS” in Ice Breaker\n\n1. Pull transition line from \"init\" to “handoverState”.\n\n2. Create transition drawer will show.\n\n3. Fill in condition as follow:\n\n```\nintent == \"csIceBreaker\"\n```\n\n4. Click Create\n\n### Objective: Publish updated bot and deploy to Omnichat again\n\nFollow the tutorial to [finalize your bot](/tutorial/create-igdm-bot-handover-from-chatbot-to-agent/#finalize-your-new-bot).\n","code":"var Component=(()=>{var N=Object.create;var h=Object.defineProperty;var v=Object.getOwnPropertyDescriptor;var y=Object.getOwnPropertyNames;var x=Object.getPrototypeOf,S=Object.prototype.hasOwnProperty;var f=t=>h(t,\"__esModule\",{value:!0});var I=(t,i)=>()=>(i||t((i={exports:{}}).exports,i),i.exports),j=(t,i)=>{for(var r in i)h(t,r,{get:i[r],enumerable:!0})},k=(t,i,r,n)=>{if(i&&typeof i==\"object\"||typeof i==\"function\")for(let l of y(i))!S.call(t,l)&&(r||l!==\"default\")&&h(t,l,{get:()=>i[l],enumerable:!(n=v(i,l))||n.enumerable});return t},T=(t,i)=>k(f(h(t!=null?N(x(t)):{},\"default\",!i&&t&&t.__esModule?{get:()=>t.default,enumerable:!0}:{value:t,enumerable:!0})),t),F=(t=>(i,r)=>t&&t.get(i)||(r=k(f({}),i,1),t&&t.set(i,r),r))(typeof WeakMap!=\"undefined\"?new WeakMap:0);var C=I((P,w)=>{w.exports=_jsx_runtime});var q={};j(q,{default:()=>H,frontmatter:()=>A});var e=T(C()),A={layout:\"tutorial\",id:\"create-igdm-bot-handover-from-chatbot-to-agent\",title:\"Create Instagram Bot Handover from Chatbot to Agent Tutorial\",imgSpot:\"/assets/images/tutorials/spot-ig-handover.webp\",product:\"kata-platform\",prev:\"integration-chatbot-with-cms-studio\",next:\"create-simple-bot-handover-from-chatbot-to-agent\",date:\"2018-10-10T07:00:00+07:00\"};function B(t={}){let{wrapper:i}=t.components||{};return i?(0,e.jsx)(i,Object.assign({},t,{children:(0,e.jsx)(r,{})})):r();function r(){let n=Object.assign({p:\"p\",a:\"a\",h2:\"h2\",span:\"span\",em:\"em\",h3:\"h3\",ol:\"ol\",li:\"li\",strong:\"strong\",h4:\"h4\",pre:\"pre\",code:\"code\"},t.components),{YoutubeEmbedWrapper:l,YoutubeEmbed:d,FigureImage:a,Table:m,TableHead:g,TableHeadRow:p,TableHeadCell:o,TableBody:u,TableBodyRow:b,TableBodyCell:s}=n;return a||c(\"FigureImage\",!0),m||c(\"Table\",!0),u||c(\"TableBody\",!0),s||c(\"TableBodyCell\",!0),b||c(\"TableBodyRow\",!0),g||c(\"TableHead\",!0),o||c(\"TableHeadCell\",!0),p||c(\"TableHeadRow\",!0),d||c(\"YoutubeEmbed\",!0),l||c(\"YoutubeEmbedWrapper\",!0),(0,e.jsxs)(e.Fragment,{children:[(0,e.jsxs)(n.p,{children:[\"Kata Platform \",(0,e.jsx)(\"a\",{href:\"https://platform.kata.ai\",target:\"_blank\",children:(0,e.jsx)(n.a,{href:\"https://platform.kata.ai\",children:\"https://platform.kata.ai\"})}),\" is a platform to create chatbots and train them with Natural Language Processing (NLP). You can create any chatbots for any use-cases, such as FAQ, campaign, customer service, handover to human agents, and more.\"]}),`\n`,(0,e.jsxs)(n.p,{children:[\"Currently, we\\u2019ve launched Instagram chatbot with various features, such as End-users can receive automated replies by creating an Instagram story that mentioned brand, receive automated replies by replying to brand Instagram story, receive bot responses in image, text, quick reply, ice breaker (for first-time users only) and generic template (similar with a carousel in other messaging platforms). Learn more about \",(0,e.jsx)(n.a,{href:\"/tutorials/how-to-use-instagram-messaging-automation-in-your-project\",children:\"Instagram DM Automation\"}),\".\"]}),`\n`,(0,e.jsxs)(n.p,{children:[`In this tutorial, we will create an Instagram chatbot that is able to send conversations to human agents, also known as \"Agent Handover''. We will use the Kata Omnichat dashboard to connect chatbots with human agents. Learn more about `,(0,e.jsx)(n.a,{href:\"/kata-omnichat/introduction/what-is-kata-omnichat\",children:\"Omnichat\"}),\".\"]}),`\n`,(0,e.jsx)(l,{children:(0,e.jsx)(d,{id:\"dAHnoTX4BUE\",params:\"v=dAHnoTX4BUE\",title:\"Create Instagram Bot Handover from Chatbot to Agent Tutorial\"})}),`\n`,(0,e.jsxs)(n.h2,{id:\"chatbot-flow\",children:[(0,e.jsx)(n.a,{className:\"anchor\",href:\"#chatbot-flow\",children:(0,e.jsx)(n.span,{className:\"icon icon-link\"})}),\"Chatbot Flow\"]}),`\n`,(0,e.jsxs)(n.p,{children:[\"Before we jump into the tutorial, let\\u2019s see the scenario for the conversation. We will create a chatbot using \",(0,e.jsx)(n.em,{children:\"keywords\"}),\".\"]}),`\n`,(0,e.jsxs)(n.h3,{id:\"conversation-flow-table\",children:[(0,e.jsx)(n.a,{className:\"anchor\",href:\"#conversation-flow-table\",children:(0,e.jsx)(n.span,{className:\"icon icon-link\"})}),\"Conversation Flow Table\"]}),`\n`,(0,e.jsxs)(n.p,{children:[\"Conversation flow table details can be seen \",(0,e.jsx)(\"a\",{href:\"https://drive.google.com/file/d/1rh5XvmGvbNyXZetG6v-tjAr8LvXjU-aj/view\",target:\"_blank\",children:\"here\"})]}),`\n`,(0,e.jsxs)(n.h2,{id:\"create-project\",children:[(0,e.jsx)(n.a,{className:\"anchor\",href:\"#create-project\",children:(0,e.jsx)(n.span,{className:\"icon icon-link\"})}),\"Create Project\"]}),`\n`,(0,e.jsxs)(n.h3,{id:\"objective-register-your-new-account-and-login-to-the-platform\",children:[(0,e.jsx)(n.a,{className:\"anchor\",href:\"#objective-register-your-new-account-and-login-to-the-platform\",children:(0,e.jsx)(n.span,{className:\"icon icon-link\"})}),\"Objective: Register your new account and login to the Platform\"]}),`\n`,(0,e.jsxs)(n.ol,{children:[`\n`,(0,e.jsxs)(n.li,{children:[`\n`,(0,e.jsxs)(n.p,{children:[\"Go to \",(0,e.jsx)(\"a\",{href:\"https://platform.kata.ai\",target:\"_blank\",children:(0,e.jsx)(n.a,{href:\"https://platform.kata.ai\",children:\"https://platform.kata.ai\"})}),\" and click \",(0,e.jsx)(n.strong,{children:\"Sign Up\"}),\" to create new account\"]}),`\n`]}),`\n`,(0,e.jsxs)(n.li,{children:[`\n`,(0,e.jsxs)(n.p,{children:[\"Input required fields in sign up page: \",(0,e.jsx)(n.strong,{children:\"Username, email address, role and captcha\"})]}),`\n`]}),`\n`,(0,e.jsxs)(n.li,{children:[`\n`,(0,e.jsx)(n.p,{children:\"Go to your registered email inbox. You will receive an email to verify your account and input your password\"}),`\n`]}),`\n`,(0,e.jsxs)(n.li,{children:[`\n`,(0,e.jsxs)(n.p,{children:[\"When you click the \",(0,e.jsx)(n.strong,{children:\"Confirm Email\"}),\" button in the verification email, you will be redirected to set up a password. Insert your password and confirm the password.\"]}),`\n`]}),`\n`,(0,e.jsxs)(n.li,{children:[`\n`,(0,e.jsxs)(n.p,{children:[\"You will be redirected to the Login \",(0,e.jsx)(n.strong,{children:\"Page\"}),\". Input your username and password to continue.\"]}),`\n`]}),`\n`]}),`\n`,(0,e.jsxs)(n.h3,{id:\"objective-create-new-chatbot-project\",children:[(0,e.jsx)(n.a,{className:\"anchor\",href:\"#objective-create-new-chatbot-project\",children:(0,e.jsx)(n.span,{className:\"icon icon-link\"})}),\"Objective: Create new chatbot project\"]}),`\n`,(0,e.jsxs)(n.h4,{id:\"login-to-kata-platform-and-create-a-project\",children:[(0,e.jsx)(n.a,{className:\"anchor\",href:\"#login-to-kata-platform-and-create-a-project\",children:(0,e.jsx)(n.span,{className:\"icon icon-link\"})}),\"Login to Kata Platform and create a project\"]}),`\n`,(0,e.jsxs)(n.ol,{children:[`\n`,(0,e.jsxs)(n.li,{children:[`\n`,(0,e.jsxs)(n.p,{children:[\"Open your browser, then open the URL \",(0,e.jsx)(\"a\",{href:\"https://platform.kata.ai/login\",target:\"_blank\",children:(0,e.jsx)(n.a,{href:\"https://platform.kata.ai/login\",children:\"https://platform.kata.ai/login\"})}),\" and enter your username & password.\"]}),`\n`]}),`\n`,(0,e.jsxs)(n.li,{children:[`\n`,(0,e.jsxs)(n.p,{children:[\"Click \",(0,e.jsx)(n.strong,{children:'\"Login\"'}),\" to continue.\"]}),`\n`]}),`\n`,(0,e.jsxs)(n.li,{children:[`\n`,(0,e.jsxs)(n.p,{children:[\"Click on \",(0,e.jsx)(n.strong,{children:'\"Create Project\"'}),\" and fill in the form. Each project contains one bot design, one NL, and one CMS.\"]}),`\n`]}),`\n`]}),`\n`,(0,e.jsxs)(n.h2,{id:\"create-handover-flow\",children:[(0,e.jsx)(n.a,{className:\"anchor\",href:\"#create-handover-flow\",children:(0,e.jsx)(n.span,{className:\"icon icon-link\"})}),\"Create Handover Flow\"]}),`\n`,(0,e.jsxs)(n.h3,{id:\"objective-define-a-flow\",children:[(0,e.jsx)(n.a,{className:\"anchor\",href:\"#objective-define-a-flow\",children:(0,e.jsx)(n.span,{className:\"icon icon-link\"})}),\"Objective: Define a flow\"]}),`\n`,(0,e.jsxs)(n.h4,{id:\"create-a-flow-name-handover-we-will-use-1-flow-for-this-simple-bot\",children:[(0,e.jsx)(n.a,{className:\"anchor\",href:\"#create-a-flow-name-handover-we-will-use-1-flow-for-this-simple-bot\",children:(0,e.jsx)(n.span,{className:\"icon icon-link\"})}),'Create a flow name \"handover\". We will use 1 flow for this simple bot']}),`\n`,(0,e.jsxs)(n.ol,{children:[`\n`,(0,e.jsxs)(n.li,{children:[`\n`,(0,e.jsxs)(n.p,{children:[\"Click \",(0,e.jsx)(n.strong,{children:'\"Create Flow\"'}),\" button on the Conversation Flow screen\"]}),`\n`]}),`\n`,(0,e.jsxs)(n.li,{children:[`\n`,(0,e.jsxs)(n.p,{children:['Create flow \"handover\", other fields are left blank. Then, click ',(0,e.jsx)(n.strong,{children:\"Create\"}),\".\"]}),`\n`]}),`\n`]}),`\n`,(0,e.jsxs)(n.h4,{id:\"create-init-state\",children:[(0,e.jsx)(n.a,{className:\"anchor\",href:\"#create-init-state\",children:(0,e.jsx)(n.span,{className:\"icon icon-link\"})}),'Create \"init\" state']}),`\n`,(0,e.jsxs)(n.ol,{children:[`\n`,(0,e.jsxs)(n.li,{children:[`\n`,(0,e.jsxs)(n.p,{children:[\"Click \",(0,e.jsx)(n.strong,{children:'\"+\"'}),\" icon in the bottom right to create a new state\"]}),`\n`]}),`\n`,(0,e.jsxs)(n.li,{children:[`\n`,(0,e.jsxs)(n.p,{children:['Create state \"init\" and click the toggle to turn on \\u201CInitial State\\u201D and other fields are left blank. Then, click ',(0,e.jsx)(n.strong,{children:\"Create\"}),\".\"]}),`\n`]}),`\n`]}),`\n`,(0,e.jsxs)(n.h2,{id:\"create-greetings-state-to-respond-end-users-who-greet-bot-via-direct-message\",children:[(0,e.jsx)(n.a,{className:\"anchor\",href:\"#create-greetings-state-to-respond-end-users-who-greet-bot-via-direct-message\",children:(0,e.jsx)(n.span,{className:\"icon icon-link\"})}),\"Create Greetings State to Respond End-User\\u2019s who Greet Bot via Direct Message\"]}),`\n`,(0,e.jsxs)(n.p,{children:[\"In this part, we are going to create a greeting flow to respond to end-users who greet the brand's bot via direct message, \",(0,e.jsx)(n.strong,{children:\"but\"}),\" \",(0,e.jsx)(n.strong,{children:\"not\"}),' via Ice Breaker. For example, the end-user says \"hi\" to the bot and does not want to choose via Ice Breaker. Learn more about ',(0,e.jsx)(n.a,{href:\"/kata-omnichat/manage-inbox-settings/set-up-ice-breaker\",children:\"Ice Breaker\"}),\".\"]}),`\n`,(0,e.jsxs)(n.h3,{id:\"objective-create-greetings-state-to-define-how-to-respond\",children:[(0,e.jsx)(n.a,{className:\"anchor\",href:\"#objective-create-greetings-state-to-define-how-to-respond\",children:(0,e.jsx)(n.span,{className:\"icon icon-link\"})}),\"Objective: Create greetings state to define how to respond\"]}),`\n`,(0,e.jsxs)(n.h4,{id:\"create-greetingsstate-as-bot-response-to-show-keywords-menu\",children:[(0,e.jsx)(n.a,{className:\"anchor\",href:\"#create-greetingsstate-as-bot-response-to-show-keywords-menu\",children:(0,e.jsx)(n.span,{className:\"icon icon-link\"})}),'Create \"greetingsState\" as bot response to show keywords menu']}),`\n`,(0,e.jsxs)(n.ol,{children:[`\n`,(0,e.jsxs)(n.li,{children:[`\n`,(0,e.jsxs)(n.p,{children:[\"Create another state by clicking the \",(0,e.jsx)(n.strong,{children:'\"+\"'}),\" icon in the bottom right to create a new state named \\u201CgreetingsState\\u201D\"]}),`\n`]}),`\n`,(0,e.jsxs)(n.li,{children:[`\n`,(0,e.jsxs)(n.p,{children:[\"Click \",(0,e.jsx)(n.strong,{children:'\"Add action\"'}),\", then click \",(0,e.jsx)(n.strong,{children:\"\\u201C+\\u201D\"}),\" in the action box to create a new action\"]}),`\n`]}),`\n`,(0,e.jsxs)(n.li,{children:[`\n`,(0,e.jsx)(n.p,{children:'When all actions available are shown, then choose \"Text\"'}),`\n`]}),`\n`,(0,e.jsxs)(n.li,{children:[`\n`,(0,e.jsx)(n.p,{children:'Input action name \"greetingsText\"'}),`\n`]}),`\n`,(0,e.jsxs)(n.li,{children:[`\n`,(0,e.jsxs)(n.p,{children:[\"Next, click the \",(0,e.jsx)(n.strong,{children:\"Add Variant\"}),\" button to fill in with this text:\"]}),`\n`]}),`\n`]}),`\n`,(0,e.jsx)(n.pre,{children:(0,e.jsx)(n.code,{className:\"code-highlight\",children:(0,e.jsx)(n.span,{className:\"code-line\",children:`Halo, selamat datang di layanan CS Bank ABC \\u{1F60A} \\\\n\\\\nUntuk memulai, pilih menu yang tersedia: \\\\n\\\\nKetik \"1\" untuk melihat FAQ \\\\nKetik \\u201C2\\u201D untuk melihat promo yang tersedia \\\\nKetik \\u201C3\\u201D untuk melihat lokasi Bank ABC \\\\nKetik \\u201C4\\u201D untuk berbicara dengan CS Bank ABC \\\\n\\\\n\\u{1F4A1} Cukup ketik angka pilihannya, ya\n`})})}),`\n`,(0,e.jsxs)(n.ol,{start:\"6\",children:[`\n`,(0,e.jsxs)(n.li,{children:[\"Click \",(0,e.jsx)(n.strong,{children:\"Create Action\"})]}),`\n`]}),`\n`,(0,e.jsxs)(n.h4,{id:\"set-the-state-into-self-transition\",children:[(0,e.jsx)(n.a,{className:\"anchor\",href:\"#set-the-state-into-self-transition\",children:(0,e.jsx)(n.span,{className:\"icon icon-link\"})}),\"Set the state into self-transition\"]}),`\n`,(0,e.jsx)(n.p,{children:\"The self-transition will make the actions under state will be repeatedly shown if end-users give an incorrect answer\"}),`\n`,(0,e.jsxs)(n.ol,{children:[`\n`,(0,e.jsxs)(n.li,{children:[`\n`,(0,e.jsxs)(n.p,{children:[\"Go to tab \",(0,e.jsx)(n.strong,{children:\"Transitions\"})]}),`\n`]}),`\n`,(0,e.jsxs)(n.li,{children:[`\n`,(0,e.jsx)(n.p,{children:\"Turn on on the Self Transition toggle\"}),`\n`]}),`\n`,(0,e.jsxs)(n.li,{children:[`\n`,(0,e.jsx)(n.p,{children:\"Then, click Create to finalize the state\"}),`\n`]}),`\n`]}),`\n`,(0,e.jsxs)(n.h3,{id:\"objective-catch-end-users-messages-when-greeting-the-bot\",children:[(0,e.jsx)(n.a,{className:\"anchor\",href:\"#objective-catch-end-users-messages-when-greeting-the-bot\",children:(0,e.jsx)(n.span,{className:\"icon icon-link\"})}),\"Objective: Catch end-users messages when greeting the bot\"]}),`\n`,(0,e.jsxs)(n.h4,{id:\"create-greetings-keywords-to-build-understanding-in-chatbots-when-end-users-greet-the-bot-we-will-use-the-nlus-feature-to-create-the-keywords\",children:[(0,e.jsx)(n.a,{className:\"anchor\",href:\"#create-greetings-keywords-to-build-understanding-in-chatbots-when-end-users-greet-the-bot-we-will-use-the-nlus-feature-to-create-the-keywords\",children:(0,e.jsx)(n.span,{className:\"icon icon-link\"})}),'Create \"greetings\" keywords to build understanding in chatbots when end-users greet the bot. We will use the NLUs feature to create the keywords.']}),`\n`,(0,e.jsxs)(n.ol,{children:[`\n`,(0,e.jsxs)(n.li,{children:[`\n`,(0,e.jsxs)(n.p,{children:[\"Go to the menu \",(0,e.jsx)(n.strong,{children:'\"NLUs\"'}),\" which is placed under the \\u201CConversation Flows\\u201D menu. Your screen will be switched to create NLUs\"]}),`\n`]}),`\n`,(0,e.jsxs)(n.li,{children:[`\n`,(0,e.jsxs)(n.p,{children:[\"Click \",(0,e.jsx)(n.strong,{children:\"Create NLU\"})]}),`\n`]}),`\n`,(0,e.jsxs)(n.li,{children:[`\n`,(0,e.jsx)(n.p,{children:\"Then, fill in the fields as follow\"}),`\n`]}),`\n`]}),`\n`,(0,e.jsx)(n.pre,{children:(0,e.jsxs)(n.code,{className:\"code-highlight\",children:[(0,e.jsx)(n.span,{className:\"code-line\",children:`NLU Name: greetings\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`NLU Type: Keyword\n`})]})}),`\n`,(0,e.jsxs)(n.ol,{start:\"4\",children:[`\n`,(0,e.jsxs)(n.li,{children:[\"Next, click \",(0,e.jsx)(n.strong,{children:'\"Add Keyword\"'}),\" to define any words to trigger the bot. Fill in the main keyword as follow\"]}),`\n`]}),`\n`,(0,e.jsx)(n.pre,{children:(0,e.jsx)(n.code,{className:\"code-highlight\",children:(0,e.jsx)(n.span,{className:\"code-line\",children:`Main keyword: greetings\n`})})}),`\n`,(0,e.jsxs)(n.ol,{start:\"5\",children:[`\n`,(0,e.jsx)(n.li,{children:'Add a new word by pressing \"enter\" on your keyboard. Every time you write a new word, press \\u201Center\\u201D on your keyboard to save words. Add these words'}),`\n`]}),`\n`,(0,e.jsx)(a,{caption:{title:\"Figure 1.\",description:'Create \"greetings\" keyword'},src:\"/assets/images/tutorials/ig-handover/image_1.webp\",alt:\"Simple Handover\",naturalHeight:838,naturalWidth:1828}),`\n`,(0,e.jsxs)(n.ol,{start:\"6\",children:[`\n`,(0,e.jsxs)(n.li,{children:[\"Click \",(0,e.jsx)(n.strong,{children:'\"Create\"'}),\" to save the NLUs\"]}),`\n`]}),`\n`,(0,e.jsxs)(n.h4,{id:\"create-greetingsintent-intent-to-catch-users-input\",children:[(0,e.jsx)(n.a,{className:\"anchor\",href:\"#create-greetingsintent-intent-to-catch-users-input\",children:(0,e.jsx)(n.span,{className:\"icon icon-link\"})}),'Create \"greetingsIntent\" intent to catch user\\u2019s input']}),`\n`,(0,e.jsxs)(n.ol,{children:[`\n`,(0,e.jsxs)(n.li,{children:[`\n`,(0,e.jsx)(n.p,{children:\"Click the Intent tab which is placed next to the Conversation Flows sidebar.\"}),`\n`]}),`\n`,(0,e.jsxs)(n.li,{children:[`\n`,(0,e.jsxs)(n.p,{children:[\"Click \",(0,e.jsx)(n.strong,{children:\"Create Intent\"}),\" button\"]}),`\n`]}),`\n`,(0,e.jsxs)(n.li,{children:[`\n`,(0,e.jsx)(n.p,{children:'Fill in the intent as follows. The choice of \"Intent type\" is text, which means it will catch incoming messages with text only. We also set up the intent into \\u201CAs Initial\\u201D, which means the intent will be executed for the first time. On classifier, use \\u201Cgreetings\\u201D NLUs that we\\u2019ve created in the previous step to connect the intent with creating keywords for greetings.'}),`\n`]}),`\n`]}),`\n`,(0,e.jsx)(a,{caption:{title:\"Figure 2.\",description:\"Create intent and create mapping with greetings keyword\"},src:\"/assets/images/tutorials/ig-handover/image_2.webp\",alt:\"Simple Handover\",naturalHeight:1162,naturalWidth:1888}),`\n`,(0,e.jsxs)(n.h3,{id:\"objective-connect-init-and-greetingsstate-states-by-creating-a-transition\",children:[(0,e.jsx)(n.a,{className:\"anchor\",href:\"#objective-connect-init-and-greetingsstate-states-by-creating-a-transition\",children:(0,e.jsx)(n.span,{className:\"icon icon-link\"})}),'Objective: Connect \"init\" and \\u201CgreetingsState\\u201D states by creating a transition']}),`\n`,(0,e.jsxs)(n.h4,{id:\"create-a-transition-to-connect-init-and-greetingsstate-states-the-transition-will-define-in-which-condition-the-greetings-state-including-the-actions-state-will-be-executed\",children:[(0,e.jsx)(n.a,{className:\"anchor\",href:\"#create-a-transition-to-connect-init-and-greetingsstate-states-the-transition-will-define-in-which-condition-the-greetings-state-including-the-actions-state-will-be-executed\",children:(0,e.jsx)(n.span,{className:\"icon icon-link\"})}),'Create a transition to connect \"init\" and \\u201CgreetingsState\\u201D states. The transition will define in which condition the greetings state, including the actions\\u2019 state, will be executed.']}),`\n`,(0,e.jsxs)(n.ol,{children:[`\n`,(0,e.jsxs)(n.li,{children:[`\n`,(0,e.jsxs)(n.p,{children:['Pull a line from the \"init\" state and drag it to the \\u201CgreetingsState\\u201D state. If you succeed, then it will show a ',(0,e.jsx)(n.strong,{children:\"Create Transition\"}),\" drawer\"]}),`\n`]}),`\n`,(0,e.jsxs)(n.li,{children:[`\n`,(0,e.jsx)(n.p,{children:\"Fill in the transition condition as follow\"}),`\n`]}),`\n`]}),`\n`,(0,e.jsx)(n.pre,{children:(0,e.jsx)(n.code,{className:\"code-highlight\",children:(0,e.jsx)(n.span,{className:\"code-line\",children:`intent == \"greetingsIntent\"\n`})})}),`\n`,(0,e.jsxs)(n.ol,{start:\"3\",children:[`\n`,(0,e.jsxs)(n.li,{children:[\"Click \",(0,e.jsx)(n.strong,{children:'\"Create Transition\"'})]}),`\n`]}),`\n`,(0,e.jsxs)(n.h2,{id:\"create-greetings-state-to-respond-end-users-who-greet-bot-via-instagram-story-mention\",children:[(0,e.jsx)(n.a,{className:\"anchor\",href:\"#create-greetings-state-to-respond-end-users-who-greet-bot-via-instagram-story-mention\",children:(0,e.jsx)(n.span,{className:\"icon icon-link\"})}),\"Create Greetings State to Respond End-User\\u2019s who Greet Bot via Instagram Story Mention\"]}),`\n`,(0,e.jsxs)(n.p,{children:[\"In this part, we are going to create a greeting flow to respond to end-users who mentioned the brand\\u2019s Instagram account in the end-users Instagram Stories. End-user will receive an automatic message in a direct message. Learn more about \",(0,e.jsx)(n.a,{href:\"/tutorials/how-to-use-instagram-messaging-automation-in-your-project\",children:\"Instagram Story Mention\"}),\".\"]}),`\n`,(0,e.jsxs)(n.h3,{id:\"objective-catch-end-users-who-mentioned-the-brands-in-the-end-users-instagram-story\",children:[(0,e.jsx)(n.a,{className:\"anchor\",href:\"#objective-catch-end-users-who-mentioned-the-brands-in-the-end-users-instagram-story\",children:(0,e.jsx)(n.span,{className:\"icon icon-link\"})}),\"Objective: Catch end-users who mentioned the brand\\u2019s in the end-users Instagram Story\"]}),`\n`,(0,e.jsxs)(n.h4,{id:\"create-igmentionedintent-intent-to-catch-users-input\",children:[(0,e.jsx)(n.a,{className:\"anchor\",href:\"#create-igmentionedintent-intent-to-catch-users-input\",children:(0,e.jsx)(n.span,{className:\"icon icon-link\"})}),'Create \"igMentionedIntent\" intent to catch user\\u2019s input']}),`\n`,(0,e.jsxs)(n.ol,{children:[`\n`,(0,e.jsxs)(n.li,{children:[`\n`,(0,e.jsx)(n.p,{children:\"Click the Intent tab which is placed next to the Conversation Flows sidebar.\"}),`\n`]}),`\n`,(0,e.jsxs)(n.li,{children:[`\n`,(0,e.jsxs)(n.p,{children:[\"Click \",(0,e.jsx)(n.strong,{children:\"Create Intent\"}),\" button\"]}),`\n`]}),`\n`,(0,e.jsxs)(n.li,{children:[`\n`,(0,e.jsx)(n.p,{children:'Fill in the intent as follows. We set up the intent into \"As Initial\", which means the intent will be executed for the first time. Choose intent type into data, because we will use a payload named story_mention.'}),`\n`]}),`\n`]}),`\n`,(0,e.jsx)(a,{caption:{title:\"Figure 3.\",description:\"Create intent for Instagram Story Mention feature\"},src:\"/assets/images/tutorials/ig-handover/image_3.webp\",alt:\"Simple Handover\",naturalHeight:991,naturalWidth:2048}),`\n`,(0,e.jsxs)(n.ol,{start:\"4\",children:[`\n`,(0,e.jsxs)(n.li,{children:[\"Then, click \",(0,e.jsx)(n.strong,{children:\"Create\"}),\".\"]}),`\n`]}),`\n`,(0,e.jsxs)(n.h3,{id:\"objective-create-greetings-state-to-define-how-to-respond-1\",children:[(0,e.jsx)(n.a,{className:\"anchor\",href:\"#objective-create-greetings-state-to-define-how-to-respond-1\",children:(0,e.jsx)(n.span,{className:\"icon icon-link\"})}),\"Objective: Create greetings state to define how to respond\"]}),`\n`,(0,e.jsxs)(n.h4,{id:\"create-igmentionedstate-as-bot-response-to-show-keywords-menu\",children:[(0,e.jsx)(n.a,{className:\"anchor\",href:\"#create-igmentionedstate-as-bot-response-to-show-keywords-menu\",children:(0,e.jsx)(n.span,{className:\"icon icon-link\"})}),'Create \"igMentionedState\" as bot response to show keywords menu']}),`\n`,(0,e.jsxs)(n.ol,{children:[`\n`,(0,e.jsxs)(n.li,{children:[`\n`,(0,e.jsxs)(n.p,{children:[\"Create another state by clicking the \",(0,e.jsx)(n.strong,{children:'\"+\"'}),\" icon in the bottom right to create a new state named \\u201C\",(0,e.jsx)(n.em,{children:\"igMentionedState\"}),\"\\u201D\"]}),`\n`]}),`\n`,(0,e.jsxs)(n.li,{children:[`\n`,(0,e.jsxs)(n.p,{children:[\"Click \",(0,e.jsx)(n.strong,{children:'\"Add action\"'}),\", then click \",(0,e.jsx)(n.strong,{children:\"\\u201C+\\u201D\"}),\" in the action box to create a new action\"]}),`\n`]}),`\n`,(0,e.jsxs)(n.li,{children:[`\n`,(0,e.jsx)(n.p,{children:'When all actions available are shown, then choose \"Text\"'}),`\n`]}),`\n`,(0,e.jsxs)(n.li,{children:[`\n`,(0,e.jsx)(n.p,{children:'Input action name \"igMentionedText\"'}),`\n`]}),`\n`,(0,e.jsxs)(n.li,{children:[`\n`,(0,e.jsxs)(n.p,{children:[\"Next, click the \",(0,e.jsx)(n.strong,{children:\"Add Variant\"}),\" button to fill in with this text:\"]}),`\n`]}),`\n`]}),`\n`,(0,e.jsx)(n.pre,{children:(0,e.jsx)(n.code,{className:\"code-highlight\",children:(0,e.jsx)(n.span,{className:\"code-line\",children:`Halo, terima kasih telah menyapa Bank ABC di Instagram Story Anda \\u{1F60A} \\\\n\\\\nUntuk memulai, pilih menu yang tersedia: \\\\n\\\\nKetik \"1\" untuk melihat FAQ \\\\nKetik \\u201C2\\u201D untuk melihat promo yang tersedia \\\\nKetik \\u201C3\\u201D untuk melihat lokasi Bank ABC \\\\nKetik \\u201C4\\u201D untuk berbicara dengan CS Bank ABC \\\\n\\\\n\\u{1F4A1} Cukup ketik angka pilihannya, ya\n`})})}),`\n`,(0,e.jsxs)(n.ol,{start:\"6\",children:[`\n`,(0,e.jsxs)(n.li,{children:[\"Click \",(0,e.jsx)(n.strong,{children:\"Create Action\"})]}),`\n`]}),`\n`,(0,e.jsxs)(n.h4,{id:\"set-the-state-into-self-transition-1\",children:[(0,e.jsx)(n.a,{className:\"anchor\",href:\"#set-the-state-into-self-transition-1\",children:(0,e.jsx)(n.span,{className:\"icon icon-link\"})}),\"Set the state into self-transition\"]}),`\n`,(0,e.jsx)(n.p,{children:\"The self-transition will make the actions under state will be repeatedly shown if end-users give an incorrect answer\"}),`\n`,(0,e.jsxs)(n.ol,{children:[`\n`,(0,e.jsxs)(n.li,{children:[`\n`,(0,e.jsxs)(n.p,{children:[\"Go to tab \",(0,e.jsx)(n.strong,{children:\"Transitions\"})]}),`\n`]}),`\n`,(0,e.jsxs)(n.li,{children:[`\n`,(0,e.jsx)(n.p,{children:\"Turn on on the Self Transition toggle\"}),`\n`]}),`\n`,(0,e.jsxs)(n.li,{children:[`\n`,(0,e.jsx)(n.p,{children:\"Then, click Create to finalize the state\"}),`\n`]}),`\n`]}),`\n`,(0,e.jsxs)(n.h3,{id:\"objective-connect-init-and-igmentionedstate-states-by-creating-a-transition\",children:[(0,e.jsx)(n.a,{className:\"anchor\",href:\"#objective-connect-init-and-igmentionedstate-states-by-creating-a-transition\",children:(0,e.jsx)(n.span,{className:\"icon icon-link\"})}),'Objective: Connect \"init\" and \\u201CigMentionedState\\u201D states by creating a transition']}),`\n`,(0,e.jsxs)(n.h4,{id:\"create-a-transition-to-connect-init-and-igmentionedstate-states-the-transition-will-define-in-which-condition-the-greetings-state-including-the-actions-state-will-be-executed\",children:[(0,e.jsx)(n.a,{className:\"anchor\",href:\"#create-a-transition-to-connect-init-and-igmentionedstate-states-the-transition-will-define-in-which-condition-the-greetings-state-including-the-actions-state-will-be-executed\",children:(0,e.jsx)(n.span,{className:\"icon icon-link\"})}),'Create a transition to connect \"init\" and \\u201CigMentionedState\\u201D states. The transition will define in which condition the greetings state, including the actions\\u2019 state, will be executed.']}),`\n`,(0,e.jsxs)(n.ol,{children:[`\n`,(0,e.jsxs)(n.li,{children:[`\n`,(0,e.jsxs)(n.p,{children:['Pull a line from the \"init\" state and drag it to the \\u201Cgreetings\\u201D state. If you succeed, then it will show a ',(0,e.jsx)(n.strong,{children:\"Create Transition\"}),\" drawer\"]}),`\n`]}),`\n`,(0,e.jsxs)(n.li,{children:[`\n`,(0,e.jsx)(n.p,{children:\"Fill in the transition as follow\"}),`\n`]}),`\n`]}),`\n`,(0,e.jsx)(a,{caption:{title:\"Figure 4.\",description:'Create transition and define which intent to trigger the next state \"igMentionedState\"'},src:\"/assets/images/tutorials/ig-handover/image_4.webp\",alt:\"Simple Handover\",naturalHeight:898,naturalWidth:1800}),`\n`,(0,e.jsxs)(n.ol,{start:\"3\",children:[`\n`,(0,e.jsxs)(n.li,{children:[\"Click \",(0,e.jsx)(n.strong,{children:'\"Create Transition\"'})]}),`\n`]}),`\n`,(0,e.jsxs)(n.h2,{id:\"create-greetings-state-to-respond-end-users-who-greet-bot-via-instagram-story-reply\",children:[(0,e.jsx)(n.a,{className:\"anchor\",href:\"#create-greetings-state-to-respond-end-users-who-greet-bot-via-instagram-story-reply\",children:(0,e.jsx)(n.span,{className:\"icon icon-link\"})}),\"Create Greetings State to Respond End-User\\u2019s who Greet Bot via Instagram Story Reply\"]}),`\n`,(0,e.jsxs)(n.p,{children:[\"In this part, we are going to create a greeting flow to respond to end-users who reply to the brand's Instagram Story. Learn more about \",(0,e.jsx)(n.a,{href:\"/tutorials/how-to-use-instagram-messaging-automation-in-your-project\",children:\"Instagram Story Reply\"}),\".\"]}),`\n`,(0,e.jsxs)(n.h3,{id:\"objective-catch-end-users-who-reply-to-the-brands-instagram-story\",children:[(0,e.jsx)(n.a,{className:\"anchor\",href:\"#objective-catch-end-users-who-reply-to-the-brands-instagram-story\",children:(0,e.jsx)(n.span,{className:\"icon icon-link\"})}),\"Objective: Catch end-users who reply to the brand\\u2019s Instagram Story\"]}),`\n`,(0,e.jsxs)(n.h4,{id:\"create-replystoryintent-intent-to-catch-users-input\",children:[(0,e.jsx)(n.a,{className:\"anchor\",href:\"#create-replystoryintent-intent-to-catch-users-input\",children:(0,e.jsx)(n.span,{className:\"icon icon-link\"})}),'Create \"replyStoryIntent\" intent to catch user\\u2019s input']}),`\n`,(0,e.jsxs)(n.ol,{children:[`\n`,(0,e.jsxs)(n.li,{children:[`\n`,(0,e.jsx)(n.p,{children:\"Click the Intent tab which is placed next to the Conversation Flows sidebar.\"}),`\n`]}),`\n`,(0,e.jsxs)(n.li,{children:[`\n`,(0,e.jsxs)(n.p,{children:[\"Click \",(0,e.jsx)(n.strong,{children:\"Create Intent\"}),\" button\"]}),`\n`]}),`\n`,(0,e.jsxs)(n.li,{children:[`\n`,(0,e.jsx)(n.p,{children:'Fill in the intent as follows. We set up the intent into \"As Initial\", which means the intent will be executed for the first time. Choose intent type into data, because we will use a payload named story_reply.'}),`\n`]}),`\n`]}),`\n`,(0,e.jsx)(a,{caption:{title:\"Figure 5.\",description:\"Create intent for Instagram Story Reply\"},src:\"/assets/images/tutorials/ig-handover/image_5.webp\",alt:\"Simple Handover\",naturalHeight:932,naturalWidth:1692}),`\n`,(0,e.jsxs)(n.ol,{start:\"5\",children:[`\n`,(0,e.jsxs)(n.li,{children:[\"Then, click \",(0,e.jsx)(n.strong,{children:\"Create\"}),\".\"]}),`\n`]}),`\n`,(0,e.jsxs)(n.h3,{id:\"objective-create-greetings-state-to-define-how-to-respond-2\",children:[(0,e.jsx)(n.a,{className:\"anchor\",href:\"#objective-create-greetings-state-to-define-how-to-respond-2\",children:(0,e.jsx)(n.span,{className:\"icon icon-link\"})}),\"Objective: Create greetings state to define how to respond\"]}),`\n`,(0,e.jsxs)(n.h4,{id:\"create-igstoryreplystate-as-bot-response-to-show-keywords-menu\",children:[(0,e.jsx)(n.a,{className:\"anchor\",href:\"#create-igstoryreplystate-as-bot-response-to-show-keywords-menu\",children:(0,e.jsx)(n.span,{className:\"icon icon-link\"})}),'Create \"igStoryReplyState\" as bot response to show keywords menu']}),`\n`,(0,e.jsxs)(n.ol,{children:[`\n`,(0,e.jsxs)(n.li,{children:[`\n`,(0,e.jsxs)(n.p,{children:[\"Create another state by clicking the \",(0,e.jsx)(n.strong,{children:'\"+\"'}),\" icon in the bottom right to create a new state named \\u201CigStoryReplyState\\u201D\"]}),`\n`]}),`\n`,(0,e.jsxs)(n.li,{children:[`\n`,(0,e.jsxs)(n.p,{children:[\"Click \",(0,e.jsx)(n.strong,{children:'\"Add action\"'}),\", then click \",(0,e.jsx)(n.strong,{children:\"\\u201C+\\u201D\"}),\" in the action box to create a new action\"]}),`\n`]}),`\n`,(0,e.jsxs)(n.li,{children:[`\n`,(0,e.jsx)(n.p,{children:'When all actions available are shown, then choose \"Text\"'}),`\n`]}),`\n`,(0,e.jsxs)(n.li,{children:[`\n`,(0,e.jsx)(n.p,{children:'Input action name \"igStoryReplyText\"'}),`\n`]}),`\n`,(0,e.jsxs)(n.li,{children:[`\n`,(0,e.jsxs)(n.p,{children:[\"Next, click the \",(0,e.jsx)(n.strong,{children:\"Add Variant\"}),\" button to fill in with this text:\"]}),`\n`]}),`\n`]}),`\n`,(0,e.jsx)(n.pre,{children:(0,e.jsx)(n.code,{className:\"code-highlight\",children:(0,e.jsx)(n.span,{className:\"code-line\",children:`Halo, terima kasih telah menyapa Instagram Story Bank ABC \\u{1F60A} \\\\n\\\\nUntuk memulai, pilih menu yang tersedia: \\\\n\\\\nKetik \"1\" untuk melihat FAQ \\\\nKetik \\u201C2\\u201D untuk melihat promo yang tersedia \\\\nKetik \\u201C3\\u201D untuk melihat lokasi Bank ABC \\\\nKetik \\u201C4\\u201D untuk berbicara dengan CS Bank ABC \\\\n\\\\n\\u{1F4A1} Cukup ketik angka pilihannya, ya\n`})})}),`\n`,(0,e.jsxs)(n.ol,{start:\"6\",children:[`\n`,(0,e.jsxs)(n.li,{children:[\"Click \",(0,e.jsx)(n.strong,{children:\"Create Action\"})]}),`\n`]}),`\n`,(0,e.jsxs)(n.h4,{id:\"set-the-state-into-self-transition-2\",children:[(0,e.jsx)(n.a,{className:\"anchor\",href:\"#set-the-state-into-self-transition-2\",children:(0,e.jsx)(n.span,{className:\"icon icon-link\"})}),\"Set the state into self-transition\"]}),`\n`,(0,e.jsx)(n.p,{children:\"The self-transition will make the actions under state will be repeatedly shown if end-users give an incorrect answer\"}),`\n`,(0,e.jsxs)(n.ol,{children:[`\n`,(0,e.jsxs)(n.li,{children:[`\n`,(0,e.jsxs)(n.p,{children:[\"Go to tab \",(0,e.jsx)(n.strong,{children:\"Transitions\"})]}),`\n`]}),`\n`,(0,e.jsxs)(n.li,{children:[`\n`,(0,e.jsx)(n.p,{children:\"Turn on on the Self Transition toggle\"}),`\n`]}),`\n`,(0,e.jsxs)(n.li,{children:[`\n`,(0,e.jsx)(n.p,{children:\"Then, click Create to finalize the state\"}),`\n`]}),`\n`]}),`\n`,(0,e.jsxs)(n.h3,{id:\"objective-connect-init-and-igstoryreplystate-states-by-creating-a-transition\",children:[(0,e.jsx)(n.a,{className:\"anchor\",href:\"#objective-connect-init-and-igstoryreplystate-states-by-creating-a-transition\",children:(0,e.jsx)(n.span,{className:\"icon icon-link\"})}),'Objective: Connect \"init\" and \\u201CigStoryReplyState\\u201D states by creating a transition']}),`\n`,(0,e.jsxs)(n.h4,{id:\"create-a-transition-to-connect-init-and-igstoryreplystate-states-the-transition-will-define-in-which-condition-the-greetings-state-including-the-actions-state-will-be-executed\",children:[(0,e.jsx)(n.a,{className:\"anchor\",href:\"#create-a-transition-to-connect-init-and-igstoryreplystate-states-the-transition-will-define-in-which-condition-the-greetings-state-including-the-actions-state-will-be-executed\",children:(0,e.jsx)(n.span,{className:\"icon icon-link\"})}),'Create a transition to connect \"init\" and \\u201CigStoryReplyState\\u201D states. The transition will define in which condition the greetings state, including the actions\\u2019 state, will be executed.']}),`\n`,(0,e.jsxs)(n.ol,{children:[`\n`,(0,e.jsxs)(n.li,{children:[`\n`,(0,e.jsxs)(n.p,{children:['Pull a line from the \"init\" state and drag it to the \\u201CigStoryReplyState\\u201D state. If you succeed, then it will show a ',(0,e.jsx)(n.strong,{children:\"Create Transition\"}),\" drawer\"]}),`\n`]}),`\n`,(0,e.jsxs)(n.li,{children:[`\n`,(0,e.jsx)(n.p,{children:\"Fill in the transition as follow\"}),`\n`]}),`\n`]}),`\n`,(0,e.jsx)(a,{caption:{title:\"Figure 6.\",description:'Create transition and define which intent to trigger the next state \"igStoryReply\"'},src:\"/assets/images/tutorials/ig-handover/image_6.webp\",alt:\"Simple Handover\",naturalHeight:854,naturalWidth:1524}),`\n`,(0,e.jsxs)(n.ol,{start:\"3\",children:[`\n`,(0,e.jsxs)(n.li,{children:[\"Click \",(0,e.jsx)(n.strong,{children:'\"Create Transition\"'})]}),`\n`]}),`\n`,(0,e.jsxs)(n.h2,{id:\"create-quick-replies\",children:[(0,e.jsx)(n.a,{className:\"anchor\",href:\"#create-quick-replies\",children:(0,e.jsx)(n.span,{className:\"icon icon-link\"})}),\"Create Quick Replies\"]}),`\n`,(0,e.jsxs)(n.p,{children:[\"In this step, we will create bot responses named quick reply. Learn more about \",(0,e.jsx)(n.a,{href:\"/tutorials/how-to-use-instagram-messaging-automation-in-your-project\",children:\"Quick Reply for Instagram Messaging\"}),\".\"]}),`\n`,(0,e.jsxs)(n.h3,{id:\"objective-show-available-faq-topics-to-end-user\",children:[(0,e.jsx)(n.a,{className:\"anchor\",href:\"#objective-show-available-faq-topics-to-end-user\",children:(0,e.jsx)(n.span,{className:\"icon icon-link\"})}),\"Objective: Show available FAQ topics to end-user\"]}),`\n`,(0,e.jsxs)(n.h4,{id:\"create-faqstate-state\",children:[(0,e.jsx)(n.a,{className:\"anchor\",href:\"#create-faqstate-state\",children:(0,e.jsx)(n.span,{className:\"icon icon-link\"})}),'Create \"faqState\" state']}),`\n`,(0,e.jsxs)(n.ol,{children:[`\n`,(0,e.jsxs)(n.li,{children:[`\n`,(0,e.jsxs)(n.p,{children:[\"Click \",(0,e.jsx)(n.strong,{children:'\"+\"'}),\" icon in bottom right to create a new state\"]}),`\n`]}),`\n`,(0,e.jsxs)(n.li,{children:[`\n`,(0,e.jsxs)(n.p,{children:['Fill in the state name with \"',(0,e.jsx)(n.em,{children:\"faqState\"}),'\"']}),`\n`]}),`\n`]}),`\n`,(0,e.jsxs)(n.h4,{id:\"create-quick-reply-response-type\",children:[(0,e.jsx)(n.a,{className:\"anchor\",href:\"#create-quick-reply-response-type\",children:(0,e.jsx)(n.span,{className:\"icon icon-link\"})}),\"Create quick reply response type\"]}),`\n`,(0,e.jsxs)(n.ol,{children:[`\n`,(0,e.jsxs)(n.li,{children:[`\n`,(0,e.jsxs)(n.p,{children:[\"Click \",(0,e.jsx)(n.strong,{children:'\"+\"'}),\" in action box to create a new action\"]}),`\n`]}),`\n`,(0,e.jsxs)(n.li,{children:[`\n`,(0,e.jsx)(n.p,{children:'When all actions available are shown, then choose \"Quick Reply\"'}),`\n`]}),`\n`,(0,e.jsxs)(n.li,{children:[`\n`,(0,e.jsx)(n.p,{children:'Input action name \"qrText\"'}),`\n`]}),`\n`,(0,e.jsxs)(n.li,{children:[`\n`,(0,e.jsx)(n.p,{children:\"Fill in the Message field with:\"}),`\n`]}),`\n`]}),`\n`,(0,e.jsx)(n.pre,{children:(0,e.jsx)(n.code,{className:\"code-highlight\",children:(0,e.jsx)(n.span,{className:\"code-line\",children:`Pilih topik yang kamu inginkan \\u{1F60A}\n`})})}),`\n`,(0,e.jsxs)(n.ol,{start:\"5\",children:[`\n`,(0,e.jsxs)(n.li,{children:[`\n`,(0,e.jsxs)(n.p,{children:[\"Next, click \",(0,e.jsx)(n.strong,{children:\"Add action\"}),\" button\"]}),`\n`]}),`\n`,(0,e.jsxs)(n.li,{children:[`\n`,(0,e.jsx)(n.p,{children:\"Fill in the fields as follow\"}),`\n`]}),`\n`]}),`\n`,(0,e.jsx)(a,{caption:{title:\"Figure 7.\",description:\"Create message in quick replies\"},src:\"/assets/images/tutorials/ig-handover/image_7.webp\",alt:\"Simple Handover\",naturalHeight:954,naturalWidth:1348}),`\n`,(0,e.jsxs)(n.ol,{start:\"7\",children:[`\n`,(0,e.jsx)(n.li,{children:\"Click button Create Action\"}),`\n`]}),`\n`,(0,e.jsxs)(n.h4,{id:\"set-the-state-into-self-transition-3\",children:[(0,e.jsx)(n.a,{className:\"anchor\",href:\"#set-the-state-into-self-transition-3\",children:(0,e.jsx)(n.span,{className:\"icon icon-link\"})}),\"Set the state into self-transition\"]}),`\n`,(0,e.jsx)(n.p,{children:\"The self-transition will make the actions under state will be repeatedly shown if end-users give an incorrect answer\"}),`\n`,(0,e.jsxs)(n.ol,{children:[`\n`,(0,e.jsxs)(n.li,{children:[`\n`,(0,e.jsxs)(n.p,{children:[\"Go to tab \",(0,e.jsx)(n.strong,{children:\"Transitions\"})]}),`\n`]}),`\n`,(0,e.jsxs)(n.li,{children:[`\n`,(0,e.jsx)(n.p,{children:\"Turn on on the Self Transition toggle\"}),`\n`]}),`\n`,(0,e.jsxs)(n.li,{children:[`\n`,(0,e.jsx)(n.p,{children:\"Then, click Create to finalize the state\"}),`\n`]}),`\n`]}),`\n`,(0,e.jsxs)(n.h3,{id:\"objective-connect-all-greetings-states-to-faq-state\",children:[(0,e.jsx)(n.a,{className:\"anchor\",href:\"#objective-connect-all-greetings-states-to-faq-state\",children:(0,e.jsx)(n.span,{className:\"icon icon-link\"})}),\"Objective: Connect all greetings states to FAQ state\"]}),`\n`,(0,e.jsxs)(n.h4,{id:\"connect-greetings-via-direct-message-to-faq-state\",children:[(0,e.jsx)(n.a,{className:\"anchor\",href:\"#connect-greetings-via-direct-message-to-faq-state\",children:(0,e.jsx)(n.span,{className:\"icon icon-link\"})}),\"Connect greetings via direct message to FAQ state\"]}),`\n`,(0,e.jsxs)(n.ol,{children:[`\n`,(0,e.jsxs)(n.li,{children:[`\n`,(0,e.jsx)(n.p,{children:'Pull transition line which starts from \"greetingState\" to \\u201CfaqState\\u201D'}),`\n`]}),`\n`,(0,e.jsxs)(n.li,{children:[`\n`,(0,e.jsxs)(n.p,{children:[\"Fill in the \",(0,e.jsx)(n.strong,{children:\"Condition\"}),\" field:\"]}),`\n`]}),`\n`]}),`\n`,(0,e.jsx)(n.pre,{children:(0,e.jsx)(n.code,{className:\"code-highlight\",children:(0,e.jsx)(n.span,{className:\"code-line\",children:`content == \"1\"\n`})})}),`\n`,(0,e.jsxs)(n.ol,{start:\"3\",children:[`\n`,(0,e.jsx)(n.li,{children:\"Click Create\"}),`\n`]}),`\n`,(0,e.jsxs)(n.h4,{id:\"connect-greetings-via-instagram-story-mention-to-faq-state\",children:[(0,e.jsx)(n.a,{className:\"anchor\",href:\"#connect-greetings-via-instagram-story-mention-to-faq-state\",children:(0,e.jsx)(n.span,{className:\"icon icon-link\"})}),\"Connect greetings via Instagram story mention to FAQ state\"]}),`\n`,(0,e.jsxs)(n.ol,{children:[`\n`,(0,e.jsxs)(n.li,{children:[`\n`,(0,e.jsx)(n.p,{children:'Pull transition line which starts from \"igMentionedState\" to \\u201CfaqState\\u201D'}),`\n`]}),`\n`,(0,e.jsxs)(n.li,{children:[`\n`,(0,e.jsxs)(n.p,{children:[\"Fill in the \",(0,e.jsx)(n.strong,{children:\"Condition\"}),\" field:\"]}),`\n`]}),`\n`]}),`\n`,(0,e.jsx)(n.pre,{children:(0,e.jsx)(n.code,{className:\"code-highlight\",children:(0,e.jsx)(n.span,{className:\"code-line\",children:`content == \"1\"\n`})})}),`\n`,(0,e.jsxs)(n.ol,{start:\"3\",children:[`\n`,(0,e.jsx)(n.li,{children:\"Click Create\"}),`\n`]}),`\n`,(0,e.jsxs)(n.h4,{id:\"connect-greetings-via-instagram-story-reply-to-faq-state\",children:[(0,e.jsx)(n.a,{className:\"anchor\",href:\"#connect-greetings-via-instagram-story-reply-to-faq-state\",children:(0,e.jsx)(n.span,{className:\"icon icon-link\"})}),\"Connect greetings via Instagram story reply to FAQ state\"]}),`\n`,(0,e.jsxs)(n.ol,{children:[`\n`,(0,e.jsxs)(n.li,{children:[`\n`,(0,e.jsx)(n.p,{children:'Pull transition line which starts from \"igStoryReplyState\" to \\u201CfaqState\\u201D'}),`\n`]}),`\n`,(0,e.jsxs)(n.li,{children:[`\n`,(0,e.jsxs)(n.p,{children:[\"Fill in the \",(0,e.jsx)(n.strong,{children:\"Condition\"}),\" field:\"]}),`\n`]}),`\n`]}),`\n`,(0,e.jsx)(n.pre,{children:(0,e.jsx)(n.code,{className:\"code-highlight\",children:(0,e.jsx)(n.span,{className:\"code-line\",children:`content == \"1\"\n`})})}),`\n`,(0,e.jsxs)(n.ol,{start:\"3\",children:[`\n`,(0,e.jsx)(n.li,{children:\"Click Create\"}),`\n`]}),`\n`,(0,e.jsxs)(n.h3,{id:\"objective-show-bot-response-after-end-user-choose-daftar-rekening-baru\",children:[(0,e.jsx)(n.a,{className:\"anchor\",href:\"#objective-show-bot-response-after-end-user-choose-daftar-rekening-baru\",children:(0,e.jsx)(n.span,{className:\"icon icon-link\"})}),'Objective: Show bot response after end-user choose \"Daftar rekening baru\"']}),`\n`,(0,e.jsxs)(n.h4,{id:\"create-rekeningbarustate-state\",children:[(0,e.jsx)(n.a,{className:\"anchor\",href:\"#create-rekeningbarustate-state\",children:(0,e.jsx)(n.span,{className:\"icon icon-link\"})}),'Create \"rekeningBaruState\" state']}),`\n`,(0,e.jsxs)(n.ol,{children:[`\n`,(0,e.jsxs)(n.li,{children:[`\n`,(0,e.jsxs)(n.p,{children:[\"Click \",(0,e.jsx)(n.strong,{children:'\"+\"'}),\" icon in the bottom right to create a new state\"]}),`\n`]}),`\n`,(0,e.jsxs)(n.li,{children:[`\n`,(0,e.jsx)(n.p,{children:'Fill in the state name with \"rekeningBaruState\"'}),`\n`]}),`\n`]}),`\n`,(0,e.jsxs)(n.h4,{id:\"create-bot-response\",children:[(0,e.jsx)(n.a,{className:\"anchor\",href:\"#create-bot-response\",children:(0,e.jsx)(n.span,{className:\"icon icon-link\"})}),\"Create bot response\"]}),`\n`,(0,e.jsxs)(n.ol,{children:[`\n`,(0,e.jsxs)(n.li,{children:[`\n`,(0,e.jsxs)(n.p,{children:[\"Click \",(0,e.jsx)(n.strong,{children:'\"+\"'}),\" in action box to create a new action\"]}),`\n`]}),`\n`,(0,e.jsxs)(n.li,{children:[`\n`,(0,e.jsx)(n.p,{children:'When all actions available are shown, then choose \"Text\"'}),`\n`]}),`\n`,(0,e.jsxs)(n.li,{children:[`\n`,(0,e.jsx)(n.p,{children:'Input action name \"rekeningBaruText\"'}),`\n`]}),`\n`,(0,e.jsxs)(n.li,{children:[`\n`,(0,e.jsx)(n.p,{children:\"Fill in Message field with:\"}),`\n`]}),`\n`]}),`\n`,(0,e.jsx)(n.pre,{children:(0,e.jsx)(n.code,{className:\"code-highlight\",children:(0,e.jsx)(n.span,{className:\"code-line\",children:`Untuk mendaftar rekening baru, kamu harus menyiapkan KTP, KK asli dan foto diri\n`})})}),`\n`,(0,e.jsxs)(n.ol,{start:\"5\",children:[`\n`,(0,e.jsx)(n.li,{children:\"Click button Create Action\"}),`\n`]}),`\n`,(0,e.jsxs)(n.h4,{id:\"create-bot-action-command-to-trigger-next-state-to-be-executed\",children:[(0,e.jsx)(n.a,{className:\"anchor\",href:\"#create-bot-action-command-to-trigger-next-state-to-be-executed\",children:(0,e.jsx)(n.span,{className:\"icon icon-link\"})}),\"Create bot action command to trigger next state to be executed\"]}),`\n`,(0,e.jsx)(n.p,{children:'In this section, the bot will send the \"next\" command whenever this state is executed. The \\u201Cnext\\u201D command will be caught later into an intent for executing another state to confirm end-users whether they want to restart and show the menu or end the conversation.'}),`\n`,(0,e.jsxs)(n.ol,{children:[`\n`,(0,e.jsxs)(n.li,{children:[`\n`,(0,e.jsxs)(n.p,{children:[\"Click \",(0,e.jsx)(n.strong,{children:'\"+\"'}),\" in action box to create a new action\"]}),`\n`]}),`\n`,(0,e.jsxs)(n.li,{children:[`\n`,(0,e.jsx)(n.p,{children:'When all actions available are shown, then choose \"Command\"'}),`\n`]}),`\n`,(0,e.jsxs)(n.li,{children:[`\n`,(0,e.jsx)(n.p,{children:'Input action name \"nextCommand\"'}),`\n`]}),`\n`,(0,e.jsxs)(n.li,{children:[`\n`,(0,e.jsx)(n.p,{children:\"Fill in Command field with:\"}),`\n`]}),`\n`]}),`\n`,(0,e.jsx)(n.pre,{children:(0,e.jsx)(n.code,{className:\"code-highlight\",children:(0,e.jsx)(n.span,{className:\"code-line\",children:`next\n`})})}),`\n`,(0,e.jsxs)(n.ol,{start:\"6\",children:[`\n`,(0,e.jsx)(n.li,{children:\"Click button Create Action\"}),`\n`]}),`\n`,(0,e.jsxs)(n.h3,{id:\"objective-show-bot-response-after-end-user-choose-daftar-kartu-kredit\",children:[(0,e.jsx)(n.a,{className:\"anchor\",href:\"#objective-show-bot-response-after-end-user-choose-daftar-kartu-kredit\",children:(0,e.jsx)(n.span,{className:\"icon icon-link\"})}),'Objective: Show bot response after end-user choose \"Daftar kartu kredit\"']}),`\n`,(0,e.jsxs)(n.h4,{id:\"create-kartukreditstate-state\",children:[(0,e.jsx)(n.a,{className:\"anchor\",href:\"#create-kartukreditstate-state\",children:(0,e.jsx)(n.span,{className:\"icon icon-link\"})}),'Create \"kartuKreditState\" state']}),`\n`,(0,e.jsxs)(n.ol,{children:[`\n`,(0,e.jsxs)(n.li,{children:[`\n`,(0,e.jsxs)(n.p,{children:[\"Click \",(0,e.jsx)(n.strong,{children:'\"+\"'}),\" icon in the bottom right to create a new state\"]}),`\n`]}),`\n`,(0,e.jsxs)(n.li,{children:[`\n`,(0,e.jsx)(n.p,{children:'Fill in the state name with \"kartuKreditText\"'}),`\n`]}),`\n`]}),`\n`,(0,e.jsxs)(n.h4,{id:\"create-bot-response-1\",children:[(0,e.jsx)(n.a,{className:\"anchor\",href:\"#create-bot-response-1\",children:(0,e.jsx)(n.span,{className:\"icon icon-link\"})}),\"Create bot response\"]}),`\n`,(0,e.jsxs)(n.ol,{start:\"3\",children:[`\n`,(0,e.jsxs)(n.li,{children:[`\n`,(0,e.jsxs)(n.p,{children:[\"Click \",(0,e.jsx)(n.strong,{children:'\"+\"'}),\" in action box to create a new action\"]}),`\n`]}),`\n`,(0,e.jsxs)(n.li,{children:[`\n`,(0,e.jsx)(n.p,{children:'When all actions available are shown, then choose \"Text\"'}),`\n`]}),`\n`,(0,e.jsxs)(n.li,{children:[`\n`,(0,e.jsx)(n.p,{children:'Input action name \"kartuKreditText\"'}),`\n`]}),`\n`,(0,e.jsxs)(n.li,{children:[`\n`,(0,e.jsx)(n.p,{children:\"Fill in Message field with:\"}),`\n`]}),`\n`]}),`\n`,(0,e.jsx)(n.pre,{children:(0,e.jsx)(n.code,{className:\"code-highlight\",children:(0,e.jsx)(n.span,{className:\"code-line\",children:`Untuk mendaftar kartu kredit baru, kamu harus menyiapkan KTP, KK asli dan foto diri\n`})})}),`\n`,(0,e.jsxs)(n.ol,{start:\"7\",children:[`\n`,(0,e.jsx)(n.li,{children:\"Click the button Create Action\"}),`\n`]}),`\n`,(0,e.jsxs)(n.h4,{id:\"create-bot-action-command-to-trigger-next-state-to-be-executed-1\",children:[(0,e.jsx)(n.a,{className:\"anchor\",href:\"#create-bot-action-command-to-trigger-next-state-to-be-executed-1\",children:(0,e.jsx)(n.span,{className:\"icon icon-link\"})}),\"Create bot action command to trigger next state to be executed\"]}),`\n`,(0,e.jsx)(n.p,{children:'In this section, the bot will send the \"next\" command whenever this state is executed. The \\u201Cnext\\u201D command will be caught later into an intent for executing another state to confirm end-users whether they want to restart and show the menu or end the conversation. We already created this action in the previous step, so we will choose from available actions.'}),`\n`,(0,e.jsxs)(n.ol,{children:[`\n`,(0,e.jsxs)(n.li,{children:[`\n`,(0,e.jsxs)(n.p,{children:[\"Click button \",(0,e.jsx)(n.strong,{children:\"Add action\"}),\" to add more action\"]}),`\n`]}),`\n`,(0,e.jsxs)(n.li,{children:[`\n`,(0,e.jsx)(n.p,{children:'In \"Action name\" dropdown, search \\u201CnextCommand\\u201D actions'}),`\n`]}),`\n`,(0,e.jsxs)(n.li,{children:[`\n`,(0,e.jsx)(n.p,{children:'Click \"nextComman\" action'}),`\n`]}),`\n`,(0,e.jsxs)(n.li,{children:[`\n`,(0,e.jsxs)(n.p,{children:[\"Then, click \",(0,e.jsx)(n.strong,{children:\"Create Action\"}),\" button\"]}),`\n`]}),`\n`,(0,e.jsxs)(n.li,{children:[`\n`,(0,e.jsxs)(n.p,{children:[\"Click \",(0,e.jsx)(n.strong,{children:\"Create\"}),\" to finalize the state\"]}),`\n`]}),`\n`]}),`\n`,(0,e.jsxs)(n.h3,{id:\"objective-connect-faq-menu-response-to-quick-reply-options\",children:[(0,e.jsx)(n.a,{className:\"anchor\",href:\"#objective-connect-faq-menu-response-to-quick-reply-options\",children:(0,e.jsx)(n.span,{className:\"icon icon-link\"})}),\"Objective: Connect FAQ menu response to quick reply options\"]}),`\n`,(0,e.jsxs)(n.h4,{id:\"create-transition-to-connect-from-faqstate-to-rekeningbarustate\",children:[(0,e.jsx)(n.a,{className:\"anchor\",href:\"#create-transition-to-connect-from-faqstate-to-rekeningbarustate\",children:(0,e.jsx)(n.span,{className:\"icon icon-link\"})}),\"Create transition to connect from faqState to rekeningBaruState\"]}),`\n`,(0,e.jsxs)(n.ol,{children:[`\n`,(0,e.jsxs)(n.li,{children:[`\n`,(0,e.jsx)(n.p,{children:'Pull transition line which starts from \"faqState\" to \\u201CrekeningBaruState\\u201D'}),`\n`]}),`\n`,(0,e.jsxs)(n.li,{children:[`\n`,(0,e.jsxs)(n.p,{children:[\"Fill in the \",(0,e.jsx)(n.strong,{children:\"Condition\"}),\" field:\"]}),`\n`]}),`\n`]}),`\n`,(0,e.jsx)(n.pre,{children:(0,e.jsx)(n.code,{className:\"code-highlight\",children:(0,e.jsx)(n.span,{className:\"code-line\",children:`content == \"Daftar rekening baru\"\n`})})}),`\n`,(0,e.jsxs)(n.ol,{start:\"3\",children:[`\n`,(0,e.jsx)(n.li,{children:\"Click Save\"}),`\n`]}),`\n`,(0,e.jsxs)(n.h4,{id:\"create-transition-to-connect-from-faqstate-to-kartukreditstate\",children:[(0,e.jsx)(n.a,{className:\"anchor\",href:\"#create-transition-to-connect-from-faqstate-to-kartukreditstate\",children:(0,e.jsx)(n.span,{className:\"icon icon-link\"})}),\"Create transition to connect from faqState to kartuKreditState\"]}),`\n`,(0,e.jsxs)(n.ol,{children:[`\n`,(0,e.jsxs)(n.li,{children:[`\n`,(0,e.jsx)(n.p,{children:'Pull transition line which starts from \"faqState\" to \\u201CkartuKreditState\\u201D'}),`\n`]}),`\n`,(0,e.jsxs)(n.li,{children:[`\n`,(0,e.jsxs)(n.p,{children:[\"Fill in the \",(0,e.jsx)(n.strong,{children:\"Condition\"}),\" field:\"]}),`\n`]}),`\n`]}),`\n`,(0,e.jsx)(n.pre,{children:(0,e.jsx)(n.code,{className:\"code-highlight\",children:(0,e.jsx)(n.span,{className:\"code-line\",children:`content == \"Daftar kartu kredit\"\n`})})}),`\n`,(0,e.jsxs)(n.ol,{start:\"5\",children:[`\n`,(0,e.jsx)(n.li,{children:\"Click Save\"}),`\n`]}),`\n`,(0,e.jsxs)(n.h2,{id:\"create-generic-template-carousel\",children:[(0,e.jsx)(n.a,{className:\"anchor\",href:\"#create-generic-template-carousel\",children:(0,e.jsx)(n.span,{className:\"icon icon-link\"})}),\"Create Generic Template (Carousel)\"]}),`\n`,(0,e.jsxs)(n.p,{children:[\"In this step, we will create bot responses named generic template. Learn more about \",(0,e.jsx)(n.a,{href:\"/tutorials/how-to-use-instagram-messaging-automation-in-your-project\",children:\"Generic Template for Instagram Messaging\"}),\".\"]}),`\n`,(0,e.jsxs)(n.h3,{id:\"objective-show-bot-response-of-generic-template-carousel-to-end-users\",children:[(0,e.jsx)(n.a,{className:\"anchor\",href:\"#objective-show-bot-response-of-generic-template-carousel-to-end-users\",children:(0,e.jsx)(n.span,{className:\"icon icon-link\"})}),'Objective: Show bot response of generic template (\"carousel\") to end-users']}),`\n`,(0,e.jsxs)(n.h4,{id:\"create-carousel\",children:[(0,e.jsx)(n.a,{className:\"anchor\",href:\"#create-carousel\",children:(0,e.jsx)(n.span,{className:\"icon icon-link\"})}),\"Create carousel\"]}),`\n`,(0,e.jsxs)(n.ol,{children:[`\n`,(0,e.jsxs)(n.li,{children:[`\n`,(0,e.jsxs)(n.p,{children:[\"Click \",(0,e.jsx)(n.strong,{children:'\"+\"'}),\" icon in the bottom right to create a new state\"]}),`\n`]}),`\n`,(0,e.jsxs)(n.li,{children:[`\n`,(0,e.jsx)(n.p,{children:'Fill in the state name with \"carouselState\"'}),`\n`]}),`\n`]}),`\n`,(0,e.jsxs)(n.h4,{id:\"create-bot-response-for-the-first-carousel-buy-1-get-1\",children:[(0,e.jsx)(n.a,{className:\"anchor\",href:\"#create-bot-response-for-the-first-carousel-buy-1-get-1\",children:(0,e.jsx)(n.span,{className:\"icon icon-link\"})}),\"Create bot response for the first carousel: Buy 1 Get 1\"]}),`\n`,(0,e.jsxs)(n.ol,{children:[`\n`,(0,e.jsxs)(n.li,{children:[`\n`,(0,e.jsxs)(n.p,{children:[\"Click \",(0,e.jsx)(n.strong,{children:'\"+\"'}),\" in the action box to create a new action\"]}),`\n`]}),`\n`,(0,e.jsxs)(n.li,{children:[`\n`,(0,e.jsx)(n.p,{children:'When all actions available are shown, then choose \"Carousel\"'}),`\n`]}),`\n`,(0,e.jsxs)(n.li,{children:[`\n`,(0,e.jsx)(n.p,{children:'Input action name \"carousel\"'}),`\n`]}),`\n`,(0,e.jsxs)(n.li,{children:[`\n`,(0,e.jsxs)(n.p,{children:[\"Next, click the \",(0,e.jsx)(n.strong,{children:\"Add Carousel\"}),\" button and fill in with the following fields:\"]}),`\n`]}),`\n`]}),`\n`,(0,e.jsx)(n.pre,{children:(0,e.jsxs)(n.code,{className:\"code-highlight\",children:[(0,e.jsx)(n.span,{className:\"code-line\",children:`Title: Buy 1 Get 1\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`Text: Gratis 1 pancake di Kafe ABC\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`Thumbnail image URL: https://images.unsplash.com/photo-1630370939015-408e783fb273?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1yZWxhdGVkfDF8fHxlbnwwfHx8fA%3D%3D&auto=format&fit=crop&w=900&q=60.jpg\n`})]})}),`\n`,(0,e.jsxs)(n.ol,{start:\"5\",children:[`\n`,(0,e.jsxs)(n.li,{children:[\"Click the \",(0,e.jsx)(n.strong,{children:\"Add action\"}),\" button. The first action will trigger another state to execute. Fill in with the following fields:\"]}),`\n`]}),`\n`,(0,e.jsx)(n.pre,{children:(0,e.jsxs)(n.code,{className:\"code-highlight\",children:[(0,e.jsx)(n.span,{className:\"code-line\",children:`Label: B1G1\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`Postback\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`Payload\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`Key: carousel\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`Value: b1g1\n`})]})}),`\n`,(0,e.jsxs)(n.ol,{start:\"6\",children:[`\n`,(0,e.jsxs)(n.li,{children:[\"Then click the \",(0,e.jsx)(n.strong,{children:\"Add action\"}),\" button again to create another action. The second action will redirect to the open link. Fill in with the following fields:\"]}),`\n`]}),`\n`,(0,e.jsx)(n.pre,{children:(0,e.jsxs)(n.code,{className:\"code-highlight\",children:[(0,e.jsx)(n.span,{className:\"code-line\",children:`Label: Lihat detail\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`URL\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`https://docs.kata.ai\n`})]})}),`\n`,(0,e.jsxs)(n.h4,{id:\"create-bot-response-for-the-second-carousel-diskon-10\",children:[(0,e.jsx)(n.a,{className:\"anchor\",href:\"#create-bot-response-for-the-second-carousel-diskon-10\",children:(0,e.jsx)(n.span,{className:\"icon icon-link\"})}),\"Create bot response for the second carousel: Diskon 10%\"]}),`\n`,(0,e.jsxs)(n.ol,{children:[`\n`,(0,e.jsxs)(n.li,{children:[\"Next, click the \",(0,e.jsx)(n.strong,{children:\"Add Carousel\"}),\" button and fill in with the following fields:\"]}),`\n`]}),`\n`,(0,e.jsx)(n.pre,{children:(0,e.jsxs)(n.code,{className:\"code-highlight\",children:[(0,e.jsx)(n.span,{className:\"code-line\",children:`Title: Diskon 10%\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`Text: Dapatkan di Mart ABC\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`Thumbnail image URL: https://images.unsplash.com/photo-1515706886582-54c73c5eaf41?ixid=MnwxMjA3fDB8MHxzZWFyY2h8MTR8fHNob3B8ZW58MHx8MHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=900&q=60.jpg\n`})]})}),`\n`,(0,e.jsxs)(n.ol,{start:\"8\",children:[`\n`,(0,e.jsxs)(n.li,{children:[\"Click the \",(0,e.jsx)(n.strong,{children:\"Add action\"}),\" button. The first action will trigger another state to execute. Fill in with the following fields:\"]}),`\n`]}),`\n`,(0,e.jsx)(n.pre,{children:(0,e.jsxs)(n.code,{className:\"code-highlight\",children:[(0,e.jsx)(n.span,{className:\"code-line\",children:`Label: Diskon\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`Postback\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`Payload\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`Key: carousel\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`Value: diskon\n`})]})}),`\n`,(0,e.jsxs)(n.ol,{start:\"9\",children:[`\n`,(0,e.jsxs)(n.li,{children:[\"Then click the \",(0,e.jsx)(n.strong,{children:\"Add action\"}),\" button again to create another action. The second action will redirect to the open link. Fill in with the following fields:\"]}),`\n`]}),`\n`,(0,e.jsx)(n.pre,{children:(0,e.jsxs)(n.code,{className:\"code-highlight\",children:[(0,e.jsx)(n.span,{className:\"code-line\",children:`Label: Lihat detail\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`URL\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`https://docs.kata.ai\n`})]})}),`\n`,(0,e.jsxs)(n.ol,{start:\"10\",children:[`\n`,(0,e.jsxs)(n.li,{children:[`\n`,(0,e.jsxs)(n.p,{children:[\"Click \",(0,e.jsx)(n.strong,{children:\"Create Action\"})]}),`\n`]}),`\n`,(0,e.jsxs)(n.li,{children:[`\n`,(0,e.jsxs)(n.p,{children:[\"To finalize the state creation, click \",(0,e.jsx)(n.strong,{children:\"Create\"}),\" in the state drawer\"]}),`\n`]}),`\n`]}),`\n`,(0,e.jsxs)(n.h4,{id:\"set-the-state-into-self-transition-4\",children:[(0,e.jsx)(n.a,{className:\"anchor\",href:\"#set-the-state-into-self-transition-4\",children:(0,e.jsx)(n.span,{className:\"icon icon-link\"})}),\"Set the state into self-transition\"]}),`\n`,(0,e.jsx)(n.p,{children:\"The self-transition will make the actions under state will be repeatedly shown if end-users give an incorrect answer\"}),`\n`,(0,e.jsxs)(n.ol,{children:[`\n`,(0,e.jsxs)(n.li,{children:[`\n`,(0,e.jsxs)(n.p,{children:[\"Go to tab \",(0,e.jsx)(n.strong,{children:\"Transitions\"})]}),`\n`]}),`\n`,(0,e.jsxs)(n.li,{children:[`\n`,(0,e.jsx)(n.p,{children:\"Turn on on the Self Transition toggle\"}),`\n`]}),`\n`,(0,e.jsxs)(n.li,{children:[`\n`,(0,e.jsx)(n.p,{children:\"Then, click Create to finalize the state\"}),`\n`]}),`\n`]}),`\n`,(0,e.jsxs)(n.h3,{id:\"objective-connect-all-greetings-states-to-carouselstate\",children:[(0,e.jsx)(n.a,{className:\"anchor\",href:\"#objective-connect-all-greetings-states-to-carouselstate\",children:(0,e.jsx)(n.span,{className:\"icon icon-link\"})}),\"Objective: Connect all greetings states to carouselState\"]}),`\n`,(0,e.jsxs)(n.h4,{id:\"connect-greetings-via-direct-message-to-carousel-state\",children:[(0,e.jsx)(n.a,{className:\"anchor\",href:\"#connect-greetings-via-direct-message-to-carousel-state\",children:(0,e.jsx)(n.span,{className:\"icon icon-link\"})}),\"Connect greetings via direct message to carousel state\"]}),`\n`,(0,e.jsxs)(n.ol,{children:[`\n`,(0,e.jsxs)(n.li,{children:[`\n`,(0,e.jsx)(n.p,{children:'Pull transition line which starts from \"greetingState\" to \\u201CcarouselState\\u201D'}),`\n`]}),`\n`,(0,e.jsxs)(n.li,{children:[`\n`,(0,e.jsxs)(n.p,{children:[\"Fill in the \",(0,e.jsx)(n.strong,{children:\"Condition\"}),\" field:\"]}),`\n`]}),`\n`]}),`\n`,(0,e.jsx)(n.pre,{children:(0,e.jsx)(n.code,{className:\"code-highlight\",children:(0,e.jsx)(n.span,{className:\"code-line\",children:`content == \"2\"\n`})})}),`\n`,(0,e.jsxs)(n.ol,{start:\"3\",children:[`\n`,(0,e.jsx)(n.li,{children:\"Click Create\"}),`\n`]}),`\n`,(0,e.jsxs)(n.h4,{id:\"connect-greetings-via-instagram-story-mention-to-carousel-state\",children:[(0,e.jsx)(n.a,{className:\"anchor\",href:\"#connect-greetings-via-instagram-story-mention-to-carousel-state\",children:(0,e.jsx)(n.span,{className:\"icon icon-link\"})}),\"Connect greetings via Instagram story mention to carousel state\"]}),`\n`,(0,e.jsxs)(n.ol,{children:[`\n`,(0,e.jsxs)(n.li,{children:[`\n`,(0,e.jsx)(n.p,{children:'Pull transition line which start from \"igMentionedState\" to \\u201CcarouselState\\u201D'}),`\n`]}),`\n`,(0,e.jsxs)(n.li,{children:[`\n`,(0,e.jsxs)(n.p,{children:[\"Fill in the \",(0,e.jsx)(n.strong,{children:\"Condition\"}),\" field:\"]}),`\n`]}),`\n`]}),`\n`,(0,e.jsx)(n.pre,{children:(0,e.jsx)(n.code,{className:\"code-highlight\",children:(0,e.jsx)(n.span,{className:\"code-line\",children:`content == \"2\"\n`})})}),`\n`,(0,e.jsxs)(n.ol,{start:\"3\",children:[`\n`,(0,e.jsx)(n.li,{children:\"Click Create\"}),`\n`]}),`\n`,(0,e.jsxs)(n.h4,{id:\"connect-greetings-via-instagram-story-reply-to-carousel-state\",children:[(0,e.jsx)(n.a,{className:\"anchor\",href:\"#connect-greetings-via-instagram-story-reply-to-carousel-state\",children:(0,e.jsx)(n.span,{className:\"icon icon-link\"})}),\"Connect greetings via Instagram story reply to carousel state\"]}),`\n`,(0,e.jsxs)(n.ol,{children:[`\n`,(0,e.jsxs)(n.li,{children:[`\n`,(0,e.jsx)(n.p,{children:'Pull transition line which start from \"igStoryReplyState\" to \\u201CcarouselState\\u201D'}),`\n`]}),`\n`,(0,e.jsxs)(n.li,{children:[`\n`,(0,e.jsxs)(n.p,{children:[\"Fill in the \",(0,e.jsx)(n.strong,{children:\"Condition\"}),\" field:\"]}),`\n`]}),`\n`]}),`\n`,(0,e.jsx)(n.pre,{children:(0,e.jsx)(n.code,{className:\"code-highlight\",children:(0,e.jsx)(n.span,{className:\"code-line\",children:`content == \"2\"\n`})})}),`\n`,(0,e.jsxs)(n.ol,{start:\"3\",children:[`\n`,(0,e.jsx)(n.li,{children:\"Click Create\"}),`\n`]}),`\n`,(0,e.jsxs)(n.h3,{id:\"objective-show-bot-response-after-end-users-choose-buy-1-get-1\",children:[(0,e.jsx)(n.a,{className:\"anchor\",href:\"#objective-show-bot-response-after-end-users-choose-buy-1-get-1\",children:(0,e.jsx)(n.span,{className:\"icon icon-link\"})}),'Objective: Show bot response after end-users choose \"Buy 1 Get 1\"']}),`\n`,(0,e.jsxs)(n.h4,{id:\"create-b1g1state-state\",children:[(0,e.jsx)(n.a,{className:\"anchor\",href:\"#create-b1g1state-state\",children:(0,e.jsx)(n.span,{className:\"icon icon-link\"})}),'Create \"b1g1State\" state']}),`\n`,(0,e.jsxs)(n.ol,{children:[`\n`,(0,e.jsxs)(n.li,{children:[`\n`,(0,e.jsxs)(n.p,{children:[\"Click \",(0,e.jsx)(n.strong,{children:'\"+\"'}),\" icon in the bottom right to create a new state\"]}),`\n`]}),`\n`,(0,e.jsxs)(n.li,{children:[`\n`,(0,e.jsx)(n.p,{children:'Fill in the state name with \"b1g1State\"'}),`\n`]}),`\n`]}),`\n`,(0,e.jsxs)(n.h4,{id:\"create-bot-response-2\",children:[(0,e.jsx)(n.a,{className:\"anchor\",href:\"#create-bot-response-2\",children:(0,e.jsx)(n.span,{className:\"icon icon-link\"})}),\"Create bot response\"]}),`\n`,(0,e.jsxs)(n.ol,{children:[`\n`,(0,e.jsxs)(n.li,{children:[`\n`,(0,e.jsxs)(n.p,{children:[\"Click \",(0,e.jsx)(n.strong,{children:'\"+\"'}),\" in the action box to create a new action\"]}),`\n`]}),`\n`,(0,e.jsxs)(n.li,{children:[`\n`,(0,e.jsx)(n.p,{children:'When all actions available are shown, then choose \"Text\"'}),`\n`]}),`\n`,(0,e.jsxs)(n.li,{children:[`\n`,(0,e.jsx)(n.p,{children:'Input action name \"b1g1Text\"'}),`\n`]}),`\n`,(0,e.jsxs)(n.li,{children:[`\n`,(0,e.jsx)(n.p,{children:\"Fill in Text Response field with:\"}),`\n`]}),`\n`]}),`\n`,(0,e.jsx)(n.pre,{children:(0,e.jsx)(n.code,{className:\"code-highlight\",children:(0,e.jsx)(n.span,{className:\"code-line\",children:`Kamu telah memilih promo \"Buy 1 Get 1\" dari Bank ABC. Silahkan mengunjungi Kafe ABC terdekat Anda dan tunjukkan pesan ini \\u{1F60A}\n`})})}),`\n`,(0,e.jsxs)(n.ol,{start:\"5\",children:[`\n`,(0,e.jsx)(n.li,{children:\"Click button Create Action\"}),`\n`]}),`\n`,(0,e.jsxs)(n.h4,{id:\"create-bot-action-command-to-trigger-next-state-to-be-executed-2\",children:[(0,e.jsx)(n.a,{className:\"anchor\",href:\"#create-bot-action-command-to-trigger-next-state-to-be-executed-2\",children:(0,e.jsx)(n.span,{className:\"icon icon-link\"})}),\"Create bot action command to trigger next state to be executed\"]}),`\n`,(0,e.jsx)(n.p,{children:'In this section, the bot will send the \"next\" command whenever this state is executed. The \\u201Cnext\\u201D command will be caught later into an intent for executing another state to confirm end-users whether they want to restart and show the menu or end the conversation. We already created this action in the previous step, so we will choose from available actions.'}),`\n`,(0,e.jsxs)(n.ol,{children:[`\n`,(0,e.jsxs)(n.li,{children:[`\n`,(0,e.jsx)(n.p,{children:\"Click button Add action to add more action\"}),`\n`]}),`\n`,(0,e.jsxs)(n.li,{children:[`\n`,(0,e.jsx)(n.p,{children:'In the \"Action name\" dropdown, search \\u201CnextCommand\\u201D actions'}),`\n`]}),`\n`,(0,e.jsxs)(n.li,{children:[`\n`,(0,e.jsx)(n.p,{children:'Click \"nextCommand\" action'}),`\n`]}),`\n`,(0,e.jsxs)(n.li,{children:[`\n`,(0,e.jsx)(n.p,{children:\"Then, click Create Action button\"}),`\n`]}),`\n`]}),`\n`,(0,e.jsxs)(n.h3,{id:\"objective-show-bot-response-after-end-users-choose-disc-10\",children:[(0,e.jsx)(n.a,{className:\"anchor\",href:\"#objective-show-bot-response-after-end-users-choose-disc-10\",children:(0,e.jsx)(n.span,{className:\"icon icon-link\"})}),'Objective: Show bot response after end-users choose \"Disc 10%\"']}),`\n`,(0,e.jsxs)(n.h4,{id:\"create-discstate-state\",children:[(0,e.jsx)(n.a,{className:\"anchor\",href:\"#create-discstate-state\",children:(0,e.jsx)(n.span,{className:\"icon icon-link\"})}),'Create \"discState\" state']}),`\n`,(0,e.jsxs)(n.ol,{children:[`\n`,(0,e.jsxs)(n.li,{children:[`\n`,(0,e.jsxs)(n.p,{children:[\"Click \",(0,e.jsx)(n.strong,{children:'\"+\"'}),\" icon in the bottom right to create a new state\"]}),`\n`]}),`\n`,(0,e.jsxs)(n.li,{children:[`\n`,(0,e.jsx)(n.p,{children:'Fill in the state name with \"discState\"'}),`\n`]}),`\n`]}),`\n`,(0,e.jsxs)(n.h4,{id:\"create-bot-response-3\",children:[(0,e.jsx)(n.a,{className:\"anchor\",href:\"#create-bot-response-3\",children:(0,e.jsx)(n.span,{className:\"icon icon-link\"})}),\"Create bot response\"]}),`\n`,(0,e.jsxs)(n.ol,{children:[`\n`,(0,e.jsxs)(n.li,{children:[`\n`,(0,e.jsxs)(n.p,{children:[\"Click \",(0,e.jsx)(n.strong,{children:'\"+\"'}),\" in action box to create a new action\"]}),`\n`]}),`\n`,(0,e.jsxs)(n.li,{children:[`\n`,(0,e.jsx)(n.p,{children:'When all actions available are shown, then choose \"Text\"'}),`\n`]}),`\n`,(0,e.jsxs)(n.li,{children:[`\n`,(0,e.jsx)(n.p,{children:'Input action name \"discText\"'}),`\n`]}),`\n`,(0,e.jsxs)(n.li,{children:[`\n`,(0,e.jsx)(n.p,{children:\"Fill in Text Response field with:\"}),`\n`]}),`\n`]}),`\n`,(0,e.jsx)(n.pre,{children:(0,e.jsx)(n.code,{className:\"code-highlight\",children:(0,e.jsx)(n.span,{className:\"code-line\",children:`Kamu telah memilih promo \"Diskon 10% di Mart ABC\" dari Bank ABC. Silahkan mengunjungi Mart ABC terdekat Anda dan tunjukkan pesan ini \\u{1F60A}\n`})})}),`\n`,(0,e.jsxs)(n.ol,{start:\"6\",children:[`\n`,(0,e.jsx)(n.li,{children:\"Click button Create Action\"}),`\n`]}),`\n`,(0,e.jsxs)(n.h4,{id:\"create-bot-action-command-to-trigger-next-state-to-be-executed-3\",children:[(0,e.jsx)(n.a,{className:\"anchor\",href:\"#create-bot-action-command-to-trigger-next-state-to-be-executed-3\",children:(0,e.jsx)(n.span,{className:\"icon icon-link\"})}),\"Create bot action command to trigger next state to be executed\"]}),`\n`,(0,e.jsx)(n.p,{children:'In this section, the bot will send the \"next\" command whenever this state is executed. The \\u201Cnext\\u201D command will be caught later into an intent for executing another state to confirm end-users whether they want to restart and show the menu or end the conversation. We already created this action in the previous step, so we will choose from available actions.'}),`\n`,(0,e.jsxs)(n.ol,{children:[`\n`,(0,e.jsxs)(n.li,{children:[`\n`,(0,e.jsx)(n.p,{children:\"Click button Add action to add more action\"}),`\n`]}),`\n`,(0,e.jsxs)(n.li,{children:[`\n`,(0,e.jsx)(n.p,{children:'In the \"Action name\" dropdown, search \\u201CnextCommand\\u201D actions'}),`\n`]}),`\n`,(0,e.jsxs)(n.li,{children:[`\n`,(0,e.jsx)(n.p,{children:'Click \"nextCommand\" action'}),`\n`]}),`\n`,(0,e.jsxs)(n.li,{children:[`\n`,(0,e.jsx)(n.p,{children:\"Then, click Create Action button\"}),`\n`]}),`\n`]}),`\n`,(0,e.jsxs)(n.h3,{id:\"objective-connect-carousel-menu-response-to-postback-options\",children:[(0,e.jsx)(n.a,{className:\"anchor\",href:\"#objective-connect-carousel-menu-response-to-postback-options\",children:(0,e.jsx)(n.span,{className:\"icon icon-link\"})}),\"Objective: Connect carousel menu response to postback options\"]}),`\n`,(0,e.jsxs)(n.h4,{id:\"create-transition-to-connect-from-carouselstate-to-b1g1state\",children:[(0,e.jsx)(n.a,{className:\"anchor\",href:\"#create-transition-to-connect-from-carouselstate-to-b1g1state\",children:(0,e.jsx)(n.span,{className:\"icon icon-link\"})}),\"Create transition to connect from carouselState to b1g1State\"]}),`\n`,(0,e.jsxs)(n.ol,{children:[`\n`,(0,e.jsxs)(n.li,{children:[`\n`,(0,e.jsx)(n.p,{children:'Pull transition line which starts from \"carouselState\" to \\u201Cb1g1State\\u201D'}),`\n`]}),`\n`,(0,e.jsxs)(n.li,{children:[`\n`,(0,e.jsxs)(n.p,{children:[\"Fill in the \",(0,e.jsx)(n.strong,{children:\"Condition\"}),\" field:\"]}),`\n`]}),`\n`]}),`\n`,(0,e.jsx)(n.pre,{children:(0,e.jsx)(n.code,{className:\"code-highlight\",children:(0,e.jsx)(n.span,{className:\"code-line\",children:`content == \"B1G1\" || (intent == \"carouselIntent\" && payload.carousel == \"b1g1\")\n`})})}),`\n`,(0,e.jsxs)(n.ol,{start:\"3\",children:[`\n`,(0,e.jsx)(n.li,{children:\"Click Save\"}),`\n`]}),`\n`,(0,e.jsxs)(n.h4,{id:\"create-transition-to-connect-from-faqstate-to-kartukreditstate-1\",children:[(0,e.jsx)(n.a,{className:\"anchor\",href:\"#create-transition-to-connect-from-faqstate-to-kartukreditstate-1\",children:(0,e.jsx)(n.span,{className:\"icon icon-link\"})}),\"Create transition to connect from faqState to kartuKreditState\"]}),`\n`,(0,e.jsxs)(n.ol,{children:[`\n`,(0,e.jsxs)(n.li,{children:[`\n`,(0,e.jsx)(n.p,{children:'Pull transition line which starts from \"carouselState\" to \\u201CdiscState\\u201D'}),`\n`]}),`\n`,(0,e.jsxs)(n.li,{children:[`\n`,(0,e.jsxs)(n.p,{children:[\"Fill in the \",(0,e.jsx)(n.strong,{children:\"Condition\"}),\" field:\"]}),`\n`]}),`\n`]}),`\n`,(0,e.jsx)(n.pre,{children:(0,e.jsx)(n.code,{className:\"code-highlight\",children:(0,e.jsx)(n.span,{className:\"code-line\",children:`content == \"Diskon\" || (intent == \"carouselIntent\" && payload.carousel == \"diskon\")\n`})})}),`\n`,(0,e.jsxs)(n.ol,{start:\"3\",children:[`\n`,(0,e.jsx)(n.li,{children:\"Click Save\"}),`\n`]}),`\n`,(0,e.jsxs)(n.h2,{id:\"create-text-response\",children:[(0,e.jsx)(n.a,{className:\"anchor\",href:\"#create-text-response\",children:(0,e.jsx)(n.span,{className:\"icon icon-link\"})}),\"Create Text Response\"]}),`\n`,(0,e.jsxs)(n.h3,{id:\"objective-show-bot-response-in-the-text-to-end-users\",children:[(0,e.jsx)(n.a,{className:\"anchor\",href:\"#objective-show-bot-response-in-the-text-to-end-users\",children:(0,e.jsx)(n.span,{className:\"icon icon-link\"})}),\"Objective: Show bot response in the text to end-users\"]}),`\n`,(0,e.jsxs)(n.h4,{id:\"create-text\",children:[(0,e.jsx)(n.a,{className:\"anchor\",href:\"#create-text\",children:(0,e.jsx)(n.span,{className:\"icon icon-link\"})}),\"Create text\"]}),`\n`,(0,e.jsxs)(n.ol,{children:[`\n`,(0,e.jsxs)(n.li,{children:[`\n`,(0,e.jsxs)(n.p,{children:[\"Click \",(0,e.jsx)(n.strong,{children:'\"+\"'}),\" icon in the bottom right to create a new state\"]}),`\n`]}),`\n`,(0,e.jsxs)(n.li,{children:[`\n`,(0,e.jsx)(n.p,{children:'Fill in the state name with \"locationState\"'}),`\n`]}),`\n`,(0,e.jsxs)(n.li,{children:[`\n`,(0,e.jsxs)(n.p,{children:[\"Click \",(0,e.jsx)(n.strong,{children:'\"+\"'}),\" in the action box to create a new action\"]}),`\n`]}),`\n`,(0,e.jsxs)(n.li,{children:[`\n`,(0,e.jsx)(n.p,{children:'When all actions available are shown, then choose \"Text\"'}),`\n`]}),`\n`,(0,e.jsxs)(n.li,{children:[`\n`,(0,e.jsx)(n.p,{children:'Input action name \"locationText\"'}),`\n`]}),`\n`,(0,e.jsxs)(n.li,{children:[`\n`,(0,e.jsxs)(n.p,{children:[\"Next, click the \",(0,e.jsx)(n.strong,{children:\"Add Variant\"}),\" button and fill in with following fields:\"]}),`\n`]}),`\n`]}),`\n`,(0,e.jsx)(n.pre,{children:(0,e.jsx)(n.code,{className:\"code-highlight\",children:(0,e.jsx)(n.span,{className:\"code-line\",children:`Lokasi bank ABC terdapat di Jalan Haji Nawi, Jakarta Selatan. Lihat peta: https://goo.gl/maps/eD2BGC6ZL7JpgBnU6\n`})})}),`\n`,(0,e.jsxs)(n.ol,{start:\"8\",children:[`\n`,(0,e.jsx)(n.li,{children:\"Click Create Action\"}),`\n`]}),`\n`,(0,e.jsxs)(n.h4,{id:\"create-bot-action-command-to-trigger-next-state-to-be-executed-4\",children:[(0,e.jsx)(n.a,{className:\"anchor\",href:\"#create-bot-action-command-to-trigger-next-state-to-be-executed-4\",children:(0,e.jsx)(n.span,{className:\"icon icon-link\"})}),\"Create bot action command to trigger next state to be executed\"]}),`\n`,(0,e.jsx)(n.p,{children:'In this section, the bot will send the \"next\" command whenever this state is executed. The \\u201Cnext\\u201D command will be catched later into an intent for executing another state to confirm end-users whether they want to restart and show menu or end the conversation.'}),`\n`,(0,e.jsxs)(n.ol,{children:[`\n`,(0,e.jsxs)(n.li,{children:[`\n`,(0,e.jsxs)(n.p,{children:[\"Click \",(0,e.jsx)(n.strong,{children:'\"+\"'}),\" in action box to create a new action\"]}),`\n`]}),`\n`,(0,e.jsxs)(n.li,{children:[`\n`,(0,e.jsx)(n.p,{children:'When all actions available are shown, then choose \"Command\"'}),`\n`]}),`\n`,(0,e.jsxs)(n.li,{children:[`\n`,(0,e.jsx)(n.p,{children:'Input action name \"nextCommand\"'}),`\n`]}),`\n`,(0,e.jsxs)(n.li,{children:[`\n`,(0,e.jsx)(n.p,{children:\"Fill in Command field with:\"}),`\n`]}),`\n`]}),`\n`,(0,e.jsx)(n.pre,{children:(0,e.jsx)(n.code,{className:\"code-highlight\",children:(0,e.jsx)(n.span,{className:\"code-line\",children:`next\n`})})}),`\n`,(0,e.jsxs)(n.ol,{start:\"5\",children:[`\n`,(0,e.jsxs)(n.li,{children:[`\n`,(0,e.jsx)(n.p,{children:\"Click button Create Action\"}),`\n`]}),`\n`,(0,e.jsxs)(n.li,{children:[`\n`,(0,e.jsx)(n.p,{children:\"Then, click Create to finalize the state\"}),`\n`]}),`\n`]}),`\n`,(0,e.jsxs)(n.h3,{id:\"objective-connect-all-greetings-states-to-locationstate\",children:[(0,e.jsx)(n.a,{className:\"anchor\",href:\"#objective-connect-all-greetings-states-to-locationstate\",children:(0,e.jsx)(n.span,{className:\"icon icon-link\"})}),\"Objective: Connect all greetings states to locationState\"]}),`\n`,(0,e.jsxs)(n.h4,{id:\"connect-greetings-via-direct-message-to-location-state\",children:[(0,e.jsx)(n.a,{className:\"anchor\",href:\"#connect-greetings-via-direct-message-to-location-state\",children:(0,e.jsx)(n.span,{className:\"icon icon-link\"})}),\"Connect greetings via direct message to location state\"]}),`\n`,(0,e.jsxs)(n.ol,{children:[`\n`,(0,e.jsxs)(n.li,{children:[`\n`,(0,e.jsx)(n.p,{children:'Pull transition line which start from \"greetingState\" to \\u201ClocationState\\u201D'}),`\n`]}),`\n`,(0,e.jsxs)(n.li,{children:[`\n`,(0,e.jsxs)(n.p,{children:[\"Fill in the \",(0,e.jsx)(n.strong,{children:\"Condition\"}),\" field:\"]}),`\n`]}),`\n`]}),`\n`,(0,e.jsx)(n.pre,{children:(0,e.jsx)(n.code,{className:\"code-highlight\",children:(0,e.jsx)(n.span,{className:\"code-line\",children:`content == \"3\"\n`})})}),`\n`,(0,e.jsxs)(n.ol,{start:\"3\",children:[`\n`,(0,e.jsx)(n.li,{children:\"Click Save\"}),`\n`]}),`\n`,(0,e.jsxs)(n.h4,{id:\"connect-greetings-via-instagram-story-mention-to-carousel-state-1\",children:[(0,e.jsx)(n.a,{className:\"anchor\",href:\"#connect-greetings-via-instagram-story-mention-to-carousel-state-1\",children:(0,e.jsx)(n.span,{className:\"icon icon-link\"})}),\"Connect greetings via Instagram story mention to carousel state\"]}),`\n`,(0,e.jsxs)(n.ol,{children:[`\n`,(0,e.jsxs)(n.li,{children:[`\n`,(0,e.jsx)(n.p,{children:'Pull transition line which start from \"igMentionedState\" to \\u201ClocationState\\u201D'}),`\n`]}),`\n`,(0,e.jsxs)(n.li,{children:[`\n`,(0,e.jsxs)(n.p,{children:[\"Fill in the \",(0,e.jsx)(n.strong,{children:\"Condition\"}),\" field:\"]}),`\n`]}),`\n`]}),`\n`,(0,e.jsx)(n.pre,{children:(0,e.jsx)(n.code,{className:\"code-highlight\",children:(0,e.jsx)(n.span,{className:\"code-line\",children:`content == \"3\"\n`})})}),`\n`,(0,e.jsxs)(n.ol,{start:\"3\",children:[`\n`,(0,e.jsx)(n.li,{children:\"Click Save\"}),`\n`]}),`\n`,(0,e.jsxs)(n.h4,{id:\"connect-greetings-via-instagram-story-reply-to-carousel-state-1\",children:[(0,e.jsx)(n.a,{className:\"anchor\",href:\"#connect-greetings-via-instagram-story-reply-to-carousel-state-1\",children:(0,e.jsx)(n.span,{className:\"icon icon-link\"})}),\"Connect greetings via Instagram story reply to carousel state\"]}),`\n`,(0,e.jsxs)(n.ol,{children:[`\n`,(0,e.jsxs)(n.li,{children:[`\n`,(0,e.jsx)(n.p,{children:'Pull transition line which start from \"igStoryReplyState\" to \\u201ClocationState\\u201D'}),`\n`]}),`\n`,(0,e.jsxs)(n.li,{children:[`\n`,(0,e.jsxs)(n.p,{children:[\"Fill in the \",(0,e.jsx)(n.strong,{children:\"Condition\"}),\" field:\"]}),`\n`]}),`\n`]}),`\n`,(0,e.jsx)(n.pre,{children:(0,e.jsx)(n.code,{className:\"code-highlight\",children:(0,e.jsx)(n.span,{className:\"code-line\",children:`content == \"3\"\n`})})}),`\n`,(0,e.jsxs)(n.ol,{start:\"3\",children:[`\n`,(0,e.jsx)(n.li,{children:\"Click Save\"}),`\n`]}),`\n`,(0,e.jsxs)(n.h2,{id:\"create-handover-to-human-agent-flow\",children:[(0,e.jsx)(n.a,{className:\"anchor\",href:\"#create-handover-to-human-agent-flow\",children:(0,e.jsx)(n.span,{className:\"icon icon-link\"})}),\"Create Handover to Human Agent Flow\"]}),`\n`,(0,e.jsx)(n.p,{children:\"Handover to human agent path is required to be implemented in Instagram Messaging and we will use Handover API template.\"}),`\n`,(0,e.jsxs)(n.h3,{id:\"objective-create-a-flow-that-end-user-can-request-handover-to-human-agents-by-using-handover-api\",children:[(0,e.jsx)(n.a,{className:\"anchor\",href:\"#objective-create-a-flow-that-end-user-can-request-handover-to-human-agents-by-using-handover-api\",children:(0,e.jsx)(n.span,{className:\"icon icon-link\"})}),\"Objective: Create a flow that end-user can request handover to human agents by using Handover API\"]}),`\n`,(0,e.jsxs)(n.h4,{id:\"create-handover-state\",children:[(0,e.jsx)(n.a,{className:\"anchor\",href:\"#create-handover-state\",children:(0,e.jsx)(n.span,{className:\"icon icon-link\"})}),\"Create handover state\"]}),`\n`,(0,e.jsxs)(n.ol,{children:[`\n`,(0,e.jsxs)(n.li,{children:[`\n`,(0,e.jsxs)(n.p,{children:[\"Click \",(0,e.jsx)(n.strong,{children:'\"+\"'}),\" icon in bottom right to create new state\"]}),`\n`]}),`\n`,(0,e.jsxs)(n.li,{children:[`\n`,(0,e.jsx)(n.p,{children:'Fill in the state name with \"handover\" and activate toggle \\u201CEnd state\\u201D'}),`\n`]}),`\n`]}),`\n`,(0,e.jsxs)(n.h4,{id:\"create-bot-response-to-inform-end-user-that-the-handover-request-has-been-received-and-waiting-for-agents-to-reply\",children:[(0,e.jsx)(n.a,{className:\"anchor\",href:\"#create-bot-response-to-inform-end-user-that-the-handover-request-has-been-received-and-waiting-for-agents-to-reply\",children:(0,e.jsx)(n.span,{className:\"icon icon-link\"})}),\"Create bot response to inform end-user that the handover request has been received and waiting for agents to reply\"]}),`\n`,(0,e.jsxs)(n.ol,{children:[`\n`,(0,e.jsxs)(n.li,{children:[`\n`,(0,e.jsxs)(n.p,{children:[\"Click \",(0,e.jsx)(n.strong,{children:'\"+\"'}),\" in action box to create new action\"]}),`\n`]}),`\n`,(0,e.jsxs)(n.li,{children:[`\n`,(0,e.jsx)(n.p,{children:'When all actions available are shown, then choose \"Text\"'}),`\n`]}),`\n`,(0,e.jsxs)(n.li,{children:[`\n`,(0,e.jsx)(n.p,{children:'Input action name \"waitForAgent\"'}),`\n`]}),`\n`,(0,e.jsxs)(n.li,{children:[`\n`,(0,e.jsxs)(n.p,{children:[\"Next, click the \",(0,e.jsx)(n.strong,{children:\"Add Variant\"}),\" button to fill in with this text:\"]}),`\n`]}),`\n`]}),`\n`,(0,e.jsx)(n.pre,{children:(0,e.jsx)(n.code,{className:\"code-highlight\",children:(0,e.jsx)(n.span,{className:\"code-line\",children:`Mohon menunggu, ya. Sedang kami hubungkan ke CS Bank ABC yang tersedia! \\u{1F60A}\n`})})}),`\n`,(0,e.jsxs)(n.ol,{start:\"5\",children:[`\n`,(0,e.jsxs)(n.li,{children:[\"Click \",(0,e.jsx)(n.strong,{children:\"Create Action\"})]}),`\n`]}),`\n`,(0,e.jsxs)(n.h4,{id:\"use-handover-api-to-send-handover-request-to-omnichat\",children:[(0,e.jsx)(n.a,{className:\"anchor\",href:\"#use-handover-api-to-send-handover-request-to-omnichat\",children:(0,e.jsx)(n.span,{className:\"icon icon-link\"})}),\"Use Handover API to send handover request to Omnichat\"]}),`\n`,(0,e.jsxs)(n.ol,{children:[`\n`,(0,e.jsxs)(n.li,{children:[`\n`,(0,e.jsxs)(n.p,{children:[\"Create another action by clicking \",(0,e.jsx)(n.strong,{children:'\"Add action\"'})]}),`\n`]}),`\n`,(0,e.jsxs)(n.li,{children:[`\n`,(0,e.jsxs)(n.p,{children:[\"Click \",(0,e.jsx)(n.strong,{children:'\"+\"'}),\" in action box to create new action\"]}),`\n`]}),`\n`,(0,e.jsxs)(n.li,{children:[`\n`,(0,e.jsx)(n.p,{children:'Fill in action name with \"handover\"'}),`\n`]}),`\n`,(0,e.jsxs)(n.li,{children:[`\n`,(0,e.jsx)(n.p,{children:'When all actions available are shown, then choose \"API\"'}),`\n`]}),`\n`,(0,e.jsxs)(n.li,{children:[`\n`,(0,e.jsxs)(n.p,{children:[\"Choose \",(0,e.jsx)(n.strong,{children:\"Handover API\"})]}),`\n`]}),`\n`,(0,e.jsxs)(n.li,{children:[`\n`,(0,e.jsxs)(n.p,{children:[\"Click \",(0,e.jsx)(n.strong,{children:\"Create Action\"}),\" button\"]}),`\n`]}),`\n`,(0,e.jsxs)(n.li,{children:[`\n`,(0,e.jsxs)(n.p,{children:[\"To finalize this step when creating a new state, click the \",(0,e.jsx)(n.strong,{children:\"Create\"}),\" button in the state drawer\"]}),`\n`]}),`\n`]}),`\n`,(0,e.jsxs)(n.h3,{id:\"objective-connect-all-greetings-states-to-handoverstate\",children:[(0,e.jsx)(n.a,{className:\"anchor\",href:\"#objective-connect-all-greetings-states-to-handoverstate\",children:(0,e.jsx)(n.span,{className:\"icon icon-link\"})}),\"Objective: Connect all greetings states to handoverState\"]}),`\n`,(0,e.jsxs)(n.h4,{id:\"connect-greetings-via-direct-message-to-handover-state\",children:[(0,e.jsx)(n.a,{className:\"anchor\",href:\"#connect-greetings-via-direct-message-to-handover-state\",children:(0,e.jsx)(n.span,{className:\"icon icon-link\"})}),\"Connect greetings via direct message to handover state\"]}),`\n`,(0,e.jsxs)(n.ol,{children:[`\n`,(0,e.jsxs)(n.li,{children:[`\n`,(0,e.jsx)(n.p,{children:'Pull transition line which start from \"greetingState\" to \\u201ChandoverState\\u201D'}),`\n`]}),`\n`,(0,e.jsxs)(n.li,{children:[`\n`,(0,e.jsxs)(n.p,{children:[\"Fill in the \",(0,e.jsx)(n.strong,{children:\"Condition\"}),\" field:\"]}),`\n`]}),`\n`]}),`\n`,(0,e.jsx)(n.pre,{children:(0,e.jsx)(n.code,{className:\"code-highlight\",children:(0,e.jsx)(n.span,{className:\"code-line\",children:`content == \"4\"\n`})})}),`\n`,(0,e.jsxs)(n.ol,{start:\"3\",children:[`\n`,(0,e.jsx)(n.li,{children:\"Click Save\"}),`\n`]}),`\n`,(0,e.jsxs)(n.h4,{id:\"connect-greetings-via-instagram-story-mention-to-handover-state\",children:[(0,e.jsx)(n.a,{className:\"anchor\",href:\"#connect-greetings-via-instagram-story-mention-to-handover-state\",children:(0,e.jsx)(n.span,{className:\"icon icon-link\"})}),\"Connect greetings via Instagram story mention to handover state\"]}),`\n`,(0,e.jsxs)(n.ol,{children:[`\n`,(0,e.jsxs)(n.li,{children:[`\n`,(0,e.jsx)(n.p,{children:'Pull transition line which start from \"igMentionedState\" to \\u201ChandoverState\\u201D'}),`\n`]}),`\n`,(0,e.jsxs)(n.li,{children:[`\n`,(0,e.jsxs)(n.p,{children:[\"Fill in the \",(0,e.jsx)(n.strong,{children:\"Condition\"}),\" field:\"]}),`\n`]}),`\n`]}),`\n`,(0,e.jsx)(n.pre,{children:(0,e.jsx)(n.code,{className:\"code-highlight\",children:(0,e.jsx)(n.span,{className:\"code-line\",children:`content == \"4\"\n`})})}),`\n`,(0,e.jsxs)(n.ol,{start:\"3\",children:[`\n`,(0,e.jsx)(n.li,{children:\"Click Save\"}),`\n`]}),`\n`,(0,e.jsxs)(n.h4,{id:\"connect-greetings-via-instagram-story-reply-to-handover-state\",children:[(0,e.jsx)(n.a,{className:\"anchor\",href:\"#connect-greetings-via-instagram-story-reply-to-handover-state\",children:(0,e.jsx)(n.span,{className:\"icon icon-link\"})}),\"Connect greetings via Instagram story reply to handover state\"]}),`\n`,(0,e.jsxs)(n.ol,{children:[`\n`,(0,e.jsxs)(n.li,{children:[`\n`,(0,e.jsx)(n.p,{children:'Pull transition line which start from \"igStoryReplyState\" to \\u201ChandoverState\\u201D'}),`\n`]}),`\n`,(0,e.jsxs)(n.li,{children:[`\n`,(0,e.jsxs)(n.p,{children:[\"Fill in the \",(0,e.jsx)(n.strong,{children:\"Condition\"}),\" field:\"]}),`\n`]}),`\n`]}),`\n`,(0,e.jsx)(n.pre,{children:(0,e.jsx)(n.code,{className:\"code-highlight\",children:(0,e.jsx)(n.span,{className:\"code-line\",children:`content == \"4\"\n`})})}),`\n`,(0,e.jsxs)(n.ol,{start:\"3\",children:[`\n`,(0,e.jsx)(n.li,{children:\"Click Save\"}),`\n`]}),`\n`,(0,e.jsxs)(n.h2,{id:\"create-confirmation-state\",children:[(0,e.jsx)(n.a,{className:\"anchor\",href:\"#create-confirmation-state\",children:(0,e.jsx)(n.span,{className:\"icon icon-link\"})}),\"Create Confirmation State\"]}),`\n`,(0,e.jsxs)(n.h3,{id:\"objective-create-a-state-that-end-user-will-be-asked-to-restart-for-showing-all-menu-or-end-conversation\",children:[(0,e.jsx)(n.a,{className:\"anchor\",href:\"#objective-create-a-state-that-end-user-will-be-asked-to-restart-for-showing-all-menu-or-end-conversation\",children:(0,e.jsx)(n.span,{className:\"icon icon-link\"})}),\"Objective: Create a state that end-user will be asked to restart for showing all menu or end conversation\"]}),`\n`,(0,e.jsxs)(n.h4,{id:\"create-confirmstate\",children:[(0,e.jsx)(n.a,{className:\"anchor\",href:\"#create-confirmstate\",children:(0,e.jsx)(n.span,{className:\"icon icon-link\"})}),'Create \"confirmState\"']}),`\n`,(0,e.jsxs)(n.ol,{children:[`\n`,(0,e.jsxs)(n.li,{children:[`\n`,(0,e.jsxs)(n.p,{children:[\"Click \",(0,e.jsx)(n.strong,{children:'\"+\"'}),\" icon in bottom left to create new state\"]}),`\n`]}),`\n`,(0,e.jsxs)(n.li,{children:[`\n`,(0,e.jsx)(n.p,{children:'Fill in the state name with \"confirmState\"'}),`\n`]}),`\n`,(0,e.jsxs)(n.li,{children:[`\n`,(0,e.jsxs)(n.p,{children:[\"Click \",(0,e.jsx)(n.strong,{children:'\"Add action\",'}),\" then click \\u201C+\\u201D to create new action\"]}),`\n`]}),`\n`,(0,e.jsxs)(n.li,{children:[`\n`,(0,e.jsx)(n.p,{children:'Choose Text, then fill in the action name with \"confirmText\".'}),`\n`]}),`\n`,(0,e.jsxs)(n.li,{children:[`\n`,(0,e.jsxs)(n.p,{children:[\"Next, click the \",(0,e.jsx)(n.strong,{children:'\"Add Variant\"'}),\" button and input the following text:\"]}),`\n`]}),`\n`]}),`\n`,(0,e.jsx)(n.pre,{children:(0,e.jsx)(n.code,{className:\"code-highlight\",children:(0,e.jsx)(n.span,{className:\"code-line\",children:`Apakah ada yang ingin kamu tanyakan kembali? Pilih menu yang tersedia:\\\\n\\\\n1. Ketik \"1\" untuk melihat menu\\\\n2. Ketik \\u201C2\\u201D untuk menyelesaikan pembicaraan\n`})})}),`\n`,(0,e.jsxs)(n.h4,{id:\"set-the-state-into-self-transition-5\",children:[(0,e.jsx)(n.a,{className:\"anchor\",href:\"#set-the-state-into-self-transition-5\",children:(0,e.jsx)(n.span,{className:\"icon icon-link\"})}),\"Set the state into self-transition\"]}),`\n`,(0,e.jsx)(n.p,{children:\"The self-transition will make the actions under state will be repeatedly shown if end-users give an incorrect answer\"}),`\n`,(0,e.jsxs)(n.ol,{children:[`\n`,(0,e.jsxs)(n.li,{children:[`\n`,(0,e.jsxs)(n.p,{children:[\"Go to tab \",(0,e.jsx)(n.strong,{children:\"Transitions\"})]}),`\n`]}),`\n`,(0,e.jsxs)(n.li,{children:[`\n`,(0,e.jsx)(n.p,{children:\"Turn on on the Self Transition toggle\"}),`\n`]}),`\n`,(0,e.jsxs)(n.li,{children:[`\n`,(0,e.jsx)(n.p,{children:\"Then, click Create to finalize the state\"}),`\n`]}),`\n`]}),`\n`,(0,e.jsxs)(n.h3,{id:\"objective-create-an-intent-to-catch-command-for-executing-next-state\",children:[(0,e.jsx)(n.a,{className:\"anchor\",href:\"#objective-create-an-intent-to-catch-command-for-executing-next-state\",children:(0,e.jsx)(n.span,{className:\"icon icon-link\"})}),\"Objective: Create an intent to catch command for executing next state\"]}),`\n`,(0,e.jsxs)(n.ol,{children:[`\n`,(0,e.jsxs)(n.li,{children:[`\n`,(0,e.jsx)(n.p,{children:\"Click the Intent tab which is placed next to the Conversation Flows sidebar.\"}),`\n`]}),`\n`,(0,e.jsxs)(n.li,{children:[`\n`,(0,e.jsxs)(n.p,{children:[\"Click \",(0,e.jsx)(n.strong,{children:\"Create Intent\"}),\" button\"]}),`\n`]}),`\n`,(0,e.jsxs)(n.li,{children:[`\n`,(0,e.jsx)(n.p,{children:'Fill in the intent as follows. The choice of \"Intent type\" is command, which means it will catch command only. On condition, it fills in with content with \\u201Cnext\\u201D which is a command that is sent from bot after executed responses such as quick replies, carousel, and text.'}),`\n`]}),`\n`]}),`\n`,(0,e.jsx)(a,{caption:{title:\"Figure 8.\",description:\"Create intent to catch command for triggering next flow\"},src:\"/assets/images/tutorials/ig-handover/image_8.webp\",alt:\"Simple Handover\",naturalHeight:862,naturalWidth:1724}),`\n`,(0,e.jsxs)(n.ol,{start:\"4\",children:[`\n`,(0,e.jsx)(n.li,{children:\"Click Create to finalize\"}),`\n`]}),`\n`,(0,e.jsxs)(n.h3,{id:\"objective-connect-all-bot-responses-states-to-confirmstate\",children:[(0,e.jsx)(n.a,{className:\"anchor\",href:\"#objective-connect-all-bot-responses-states-to-confirmstate\",children:(0,e.jsx)(n.span,{className:\"icon icon-link\"})}),\"Objective: Connect all bot responses states to confirmState\"]}),`\n`,(0,e.jsxs)(n.h4,{id:\"connect-quick-replies-responses-states-to-confirmation-state\",children:[(0,e.jsx)(n.a,{className:\"anchor\",href:\"#connect-quick-replies-responses-states-to-confirmation-state\",children:(0,e.jsx)(n.span,{className:\"icon icon-link\"})}),\"Connect quick replies responses states to confirmation state\"]}),`\n`,(0,e.jsxs)(n.ol,{children:[`\n`,(0,e.jsxs)(n.li,{children:[`\n`,(0,e.jsx)(n.p,{children:'Pull transition line which starts from \"rekeningBaruState\" to \\u201CconfirmState\\u201D'}),`\n`]}),`\n`,(0,e.jsxs)(n.li,{children:[`\n`,(0,e.jsxs)(n.p,{children:[\"Fill in the \",(0,e.jsx)(n.strong,{children:\"Condition\"}),\" field:\"]}),`\n`]}),`\n`]}),`\n`,(0,e.jsx)(n.pre,{children:(0,e.jsx)(n.code,{className:\"code-highlight\",children:(0,e.jsx)(n.span,{className:\"code-line\",children:`intent == \"nextIntent\"\n`})})}),`\n`,(0,e.jsxs)(n.ol,{start:\"3\",children:[`\n`,(0,e.jsxs)(n.li,{children:[`\n`,(0,e.jsx)(n.p,{children:\"Click Save\"}),`\n`]}),`\n`,(0,e.jsxs)(n.li,{children:[`\n`,(0,e.jsx)(n.p,{children:'Next, pull transition line which starts from \"kartuKreditState\" to \\u201CconfirmState\\u201D'}),`\n`]}),`\n`,(0,e.jsxs)(n.li,{children:[`\n`,(0,e.jsxs)(n.p,{children:[\"Fill in the \",(0,e.jsx)(n.strong,{children:\"Condition\"}),\" field:\"]}),`\n`]}),`\n`]}),`\n`,(0,e.jsx)(n.pre,{children:(0,e.jsx)(n.code,{className:\"code-highlight\",children:(0,e.jsx)(n.span,{className:\"code-line\",children:`intent == \"nextIntent\"\n`})})}),`\n`,(0,e.jsxs)(n.ol,{start:\"6\",children:[`\n`,(0,e.jsx)(n.li,{children:\"Click Save\"}),`\n`]}),`\n`,(0,e.jsxs)(n.h4,{id:\"connect-carousel-responses-to-confirmation-state\",children:[(0,e.jsx)(n.a,{className:\"anchor\",href:\"#connect-carousel-responses-to-confirmation-state\",children:(0,e.jsx)(n.span,{className:\"icon icon-link\"})}),\"Connect carousel responses to confirmation state\"]}),`\n`,(0,e.jsxs)(n.ol,{children:[`\n`,(0,e.jsxs)(n.li,{children:[`\n`,(0,e.jsx)(n.p,{children:'Pull transition line which starts from \"b1g1State\" to \\u201CconfirmState\\u201D'}),`\n`]}),`\n`,(0,e.jsxs)(n.li,{children:[`\n`,(0,e.jsxs)(n.p,{children:[\"Fill in the \",(0,e.jsx)(n.strong,{children:\"Condition\"}),\" field:\"]}),`\n`]}),`\n`]}),`\n`,(0,e.jsx)(n.pre,{children:(0,e.jsx)(n.code,{className:\"code-highlight\",children:(0,e.jsx)(n.span,{className:\"code-line\",children:`intent == \"nextIntent\"\n`})})}),`\n`,(0,e.jsxs)(n.ol,{start:\"3\",children:[`\n`,(0,e.jsxs)(n.li,{children:[`\n`,(0,e.jsx)(n.p,{children:\"Click Save\"}),`\n`]}),`\n`,(0,e.jsxs)(n.li,{children:[`\n`,(0,e.jsx)(n.p,{children:'Next, pull transition line which start from \"discState\" to \\u201CconfirmState\\u201D'}),`\n`]}),`\n`,(0,e.jsxs)(n.li,{children:[`\n`,(0,e.jsxs)(n.p,{children:[\"Fill in the \",(0,e.jsx)(n.strong,{children:\"Condition\"}),\" field:\"]}),`\n`]}),`\n`]}),`\n`,(0,e.jsx)(n.pre,{children:(0,e.jsx)(n.code,{className:\"code-highlight\",children:(0,e.jsx)(n.span,{className:\"code-line\",children:`intent == \"nextIntent\"\n`})})}),`\n`,(0,e.jsxs)(n.ol,{start:\"6\",children:[`\n`,(0,e.jsx)(n.li,{children:\"Click Save\"}),`\n`]}),`\n`,(0,e.jsxs)(n.h4,{id:\"connect-locationstate-to-confirmstate\",children:[(0,e.jsx)(n.a,{className:\"anchor\",href:\"#connect-locationstate-to-confirmstate\",children:(0,e.jsx)(n.span,{className:\"icon icon-link\"})}),'Connect \"locationState\" to \\u201CconfirmState\\u201D']}),`\n`,(0,e.jsxs)(n.ol,{children:[`\n`,(0,e.jsxs)(n.li,{children:[`\n`,(0,e.jsx)(n.p,{children:'Pull transition line which start from \"locationState\" to \\u201CconfirmState\\u201D'}),`\n`]}),`\n`,(0,e.jsxs)(n.li,{children:[`\n`,(0,e.jsxs)(n.p,{children:[\"Fill in the \",(0,e.jsx)(n.strong,{children:\"Condition\"}),\" field:\"]}),`\n`]}),`\n`]}),`\n`,(0,e.jsx)(n.pre,{children:(0,e.jsx)(n.code,{className:\"code-highlight\",children:(0,e.jsx)(n.span,{className:\"code-line\",children:`intent == \"nextIntent\"\n`})})}),`\n`,(0,e.jsxs)(n.ol,{start:\"3\",children:[`\n`,(0,e.jsx)(n.li,{children:\"Click Save\"}),`\n`]}),`\n`,(0,e.jsxs)(n.h3,{id:\"objective-create-state-to-restart-menu\",children:[(0,e.jsx)(n.a,{className:\"anchor\",href:\"#objective-create-state-to-restart-menu\",children:(0,e.jsx)(n.span,{className:\"icon icon-link\"})}),\"Objective: Create state to restart menu\"]}),`\n`,(0,e.jsxs)(n.h4,{id:\"create-a-backtomenu-state-to-restart-menu\",children:[(0,e.jsx)(n.a,{className:\"anchor\",href:\"#create-a-backtomenu-state-to-restart-menu\",children:(0,e.jsx)(n.span,{className:\"icon icon-link\"})}),'Create a \"backToMenu\" state to restart menu']}),`\n`,(0,e.jsxs)(n.ol,{children:[`\n`,(0,e.jsxs)(n.li,{children:[`\n`,(0,e.jsxs)(n.p,{children:[\"Click \",(0,e.jsx)(n.strong,{children:'\"+\"'}),\" icon in bottom left to create a new state\"]}),`\n`]}),`\n`,(0,e.jsxs)(n.li,{children:[`\n`,(0,e.jsx)(n.p,{children:'Fill in the state name with \"backToMenu\"'}),`\n`]}),`\n`,(0,e.jsxs)(n.li,{children:[`\n`,(0,e.jsxs)(n.p,{children:[\"Turn on toggle \",(0,e.jsx)(n.strong,{children:\"End State\"})]}),`\n`]}),`\n`,(0,e.jsxs)(n.li,{children:[`\n`,(0,e.jsxs)(n.p,{children:[\"Click \",(0,e.jsx)(n.strong,{children:'\"Add action\",'}),\" then click \\u201C+\\u201D to create a new action\"]}),`\n`]}),`\n`,(0,e.jsxs)(n.li,{children:[`\n`,(0,e.jsx)(n.p,{children:'Choose Command, then fill in the action name with \"backToMenu\".'}),`\n`]}),`\n`,(0,e.jsxs)(n.li,{children:[`\n`,(0,e.jsx)(n.p,{children:\"Next, fill in the Command with:\"}),`\n`]}),`\n`]}),`\n`,(0,e.jsx)(n.pre,{children:(0,e.jsx)(n.code,{className:\"code-highlight\",children:(0,e.jsx)(n.span,{className:\"code-line\",children:`toMenu\n`})})}),`\n`,(0,e.jsxs)(n.ol,{start:\"7\",children:[`\n`,(0,e.jsx)(n.li,{children:\"Click Create to finalize\"}),`\n`]}),`\n`,(0,e.jsxs)(n.h4,{id:\"create-tomenuintent-intent\",children:[(0,e.jsx)(n.a,{className:\"anchor\",href:\"#create-tomenuintent-intent\",children:(0,e.jsx)(n.span,{className:\"icon icon-link\"})}),'Create \"toMenuIntent\" intent']}),`\n`,(0,e.jsxs)(n.ol,{children:[`\n`,(0,e.jsxs)(n.li,{children:[`\n`,(0,e.jsx)(n.p,{children:\"Click the Intent tab which is placed next to the Conversation Flows sidebar.\"}),`\n`]}),`\n`,(0,e.jsxs)(n.li,{children:[`\n`,(0,e.jsxs)(n.p,{children:[\"Click \",(0,e.jsx)(n.strong,{children:\"Create Intent\"}),\" button\"]}),`\n`]}),`\n`,(0,e.jsxs)(n.li,{children:[`\n`,(0,e.jsx)(n.p,{children:\"Fill in the intent as follows. This intent will trigger show main menu as bot response\"}),`\n`]}),`\n`]}),`\n`,(0,e.jsx)(a,{caption:{title:\"Figure 9.\",description:\"Create intent to catch command for showing main menu again\"},src:\"/assets/images/tutorials/ig-handover/image_9.webp\",alt:\"Simple Handover\",naturalHeight:868,naturalWidth:1466}),`\n`,(0,e.jsxs)(n.ol,{start:\"4\",children:[`\n`,(0,e.jsxs)(n.li,{children:[\"Then, click \",(0,e.jsx)(n.strong,{children:\"Create\"}),\".\"]}),`\n`]}),`\n`,(0,e.jsxs)(n.h4,{id:\"update-transition-condition-from-init-to-greetingsstate\",children:[(0,e.jsx)(n.a,{className:\"anchor\",href:\"#update-transition-condition-from-init-to-greetingsstate\",children:(0,e.jsx)(n.span,{className:\"icon icon-link\"})}),'Update transition condition from \"init\" to \\u201CgreetingsState\\u201D']}),`\n`,(0,e.jsx)(n.p,{children:\"In this step, we will update transition condition and use toMenuIntent as one of the conditions. It is because this intent, if executed, will trigger a greeting response and showing the menu in bot.\"}),`\n`,(0,e.jsxs)(n.ol,{children:[`\n`,(0,e.jsxs)(n.li,{children:[`\n`,(0,e.jsx)(n.p,{children:'Click transition between \"init\" and \\u201CgreetingState\\u201D'}),`\n`]}),`\n`,(0,e.jsxs)(n.li,{children:[`\n`,(0,e.jsx)(n.p,{children:\"Edit drawer will be shown\"}),`\n`]}),`\n`,(0,e.jsxs)(n.li,{children:[`\n`,(0,e.jsx)(n.p,{children:\"Update condition field into this\"}),`\n`]}),`\n`]}),`\n`,(0,e.jsx)(n.pre,{children:(0,e.jsx)(n.code,{className:\"code-highlight\",children:(0,e.jsx)(n.span,{className:\"code-line\",children:`intent == \"greetingsIntent\" || intent == \"toMenuIntent\"\n`})})}),`\n`,(0,e.jsxs)(n.ol,{start:\"4\",children:[`\n`,(0,e.jsx)(n.li,{children:\"Click Save to update\"}),`\n`]}),`\n`,(0,e.jsxs)(n.h3,{id:\"objective-create-state-to-end-conversation\",children:[(0,e.jsx)(n.a,{className:\"anchor\",href:\"#objective-create-state-to-end-conversation\",children:(0,e.jsx)(n.span,{className:\"icon icon-link\"})}),\"Objective: Create state to end conversation\"]}),`\n`,(0,e.jsxs)(n.h4,{id:\"create-a-bye-state-to-end-conversation-and-show-thank-you-response\",children:[(0,e.jsx)(n.a,{className:\"anchor\",href:\"#create-a-bye-state-to-end-conversation-and-show-thank-you-response\",children:(0,e.jsx)(n.span,{className:\"icon icon-link\"})}),'Create a \"bye\" state to end conversation and show thank you response']}),`\n`,(0,e.jsxs)(n.ol,{children:[`\n`,(0,e.jsxs)(n.li,{children:[`\n`,(0,e.jsxs)(n.p,{children:[\"Click \",(0,e.jsx)(n.strong,{children:'\"+\"'}),\" icon in bottom left to create a new state\"]}),`\n`]}),`\n`,(0,e.jsxs)(n.li,{children:[`\n`,(0,e.jsx)(n.p,{children:'Fill in the state name with \"bye\"'}),`\n`]}),`\n`,(0,e.jsxs)(n.li,{children:[`\n`,(0,e.jsxs)(n.p,{children:[\"Turn on toggle \",(0,e.jsx)(n.strong,{children:\"End State\"})]}),`\n`]}),`\n`,(0,e.jsxs)(n.li,{children:[`\n`,(0,e.jsxs)(n.p,{children:[\"Click \",(0,e.jsx)(n.strong,{children:'\"Add action\",'}),\" then click \\u201C+\\u201D to create a new action\"]}),`\n`]}),`\n`,(0,e.jsxs)(n.li,{children:[`\n`,(0,e.jsx)(n.p,{children:'Choose Text, then fill in the action name with \"bye\".'}),`\n`]}),`\n`,(0,e.jsxs)(n.li,{children:[`\n`,(0,e.jsxs)(n.p,{children:[\"Click \",(0,e.jsx)(n.strong,{children:\"Add Variant\"}),\" button\"]}),`\n`]}),`\n`,(0,e.jsxs)(n.li,{children:[`\n`,(0,e.jsx)(n.p,{children:\"Next, fill in the Text with:\"}),`\n`]}),`\n`]}),`\n`,(0,e.jsx)(n.pre,{children:(0,e.jsx)(n.code,{className:\"code-highlight\",children:(0,e.jsx)(n.span,{className:\"code-line\",children:`Terima kasih sudah menghubungi Bank ABC \\u{1F60A}\n`})})}),`\n`,(0,e.jsxs)(n.ol,{start:\"8\",children:[`\n`,(0,e.jsxs)(n.li,{children:[\"Click \",(0,e.jsx)(n.strong,{children:\"Create\"}),\" to finalize\"]}),`\n`]}),`\n`,(0,e.jsxs)(n.h3,{id:\"objective-connect-transition-between-confirmstate-to-backtomenu-and-bye-state\",children:[(0,e.jsx)(n.a,{className:\"anchor\",href:\"#objective-connect-transition-between-confirmstate-to-backtomenu-and-bye-state\",children:(0,e.jsx)(n.span,{className:\"icon icon-link\"})}),\"Objective: Connect transition between confirmState to backToMenu and bye state\"]}),`\n`,(0,e.jsxs)(n.ol,{children:[`\n`,(0,e.jsxs)(n.li,{children:[`\n`,(0,e.jsx)(n.p,{children:'Pull transition line which starts from \"confirmState\" to \\u201CbackToMenu\\u201D'}),`\n`]}),`\n`,(0,e.jsxs)(n.li,{children:[`\n`,(0,e.jsxs)(n.p,{children:[\"Fill in the \",(0,e.jsx)(n.strong,{children:\"Condition\"}),\" field:\"]}),`\n`]}),`\n`]}),`\n`,(0,e.jsx)(n.pre,{children:(0,e.jsx)(n.code,{className:\"code-highlight\",children:(0,e.jsx)(n.span,{className:\"code-line\",children:`content == \"1\"\n`})})}),`\n`,(0,e.jsxs)(n.ol,{start:\"4\",children:[`\n`,(0,e.jsxs)(n.li,{children:[`\n`,(0,e.jsx)(n.p,{children:\"Click Save\"}),`\n`]}),`\n`,(0,e.jsxs)(n.li,{children:[`\n`,(0,e.jsx)(n.p,{children:'Next, pull transition line which start from \"confirmState\" to \\u201Cbye\\u201D'}),`\n`]}),`\n`,(0,e.jsxs)(n.li,{children:[`\n`,(0,e.jsxs)(n.p,{children:[\"Fill in the \",(0,e.jsx)(n.strong,{children:\"Condition\"}),\" field:\"]}),`\n`]}),`\n`]}),`\n`,(0,e.jsx)(n.pre,{children:(0,e.jsx)(n.code,{className:\"code-highlight\",children:(0,e.jsx)(n.span,{className:\"code-line\",children:`content == \"2\"\n`})})}),`\n`,(0,e.jsxs)(n.ol,{start:\"7\",children:[`\n`,(0,e.jsx)(n.li,{children:\"Click Save\"}),`\n`]}),`\n`,(0,e.jsxs)(n.h2,{id:\"create-fallback-intent\",children:[(0,e.jsx)(n.a,{className:\"anchor\",href:\"#create-fallback-intent\",children:(0,e.jsx)(n.span,{className:\"icon icon-link\"})}),\"Create Fallback Intent\"]}),`\n`,(0,e.jsxs)(n.ol,{children:[`\n`,(0,e.jsxs)(n.li,{children:[`\n`,(0,e.jsx)(n.p,{children:\"Click the Intent tab which is placed next to the Conversation Flows sidebar.\"}),`\n`]}),`\n`,(0,e.jsxs)(n.li,{children:[`\n`,(0,e.jsxs)(n.p,{children:[\"Click \",(0,e.jsx)(n.strong,{children:\"Create Intent\"}),\" button\"]}),`\n`]}),`\n`,(0,e.jsxs)(n.li,{children:[`\n`,(0,e.jsx)(n.p,{children:'Fill in the intent as follows. We set up the intent into \"As Fallback\", which means the intent will be executed as fallback. It becomes a new layer of fallback in Handover flow, before literally fallback-ed to fallback flow.'}),`\n`]}),`\n`]}),`\n`,(0,e.jsx)(a,{caption:{title:\"Figure 10.\",description:'Create intent for being \"guard\" before fallback flow'},src:\"/assets/images/tutorials/ig-handover/image_10.webp\",alt:\"Simple Handover\",naturalHeight:452,naturalWidth:1150}),`\n`,(0,e.jsxs)(n.ol,{start:\"4\",children:[`\n`,(0,e.jsx)(n.li,{children:\"Click Create to finalize\"}),`\n`]}),`\n`,(0,e.jsxs)(n.h2,{id:\"finalize-your-new-bot\",children:[(0,e.jsx)(n.a,{className:\"anchor\",href:\"#finalize-your-new-bot\",children:(0,e.jsx)(n.span,{className:\"icon icon-link\"})}),\"Finalize Your New Bot\"]}),`\n`,(0,e.jsxs)(n.h3,{id:\"objective-publish-your-bot-to-save-the-chatbot-flow\",children:[(0,e.jsx)(n.a,{className:\"anchor\",href:\"#objective-publish-your-bot-to-save-the-chatbot-flow\",children:(0,e.jsx)(n.span,{className:\"icon icon-link\"})}),\"Objective: Publish your bot to save the chatbot flow\"]}),`\n`,(0,e.jsxs)(n.ol,{children:[`\n`,(0,e.jsxs)(n.li,{children:[`\n`,(0,e.jsxs)(n.p,{children:[\"Click on the \",(0,e.jsx)(n.strong,{children:'\"Publish\"'}),\" button which is placed on top right corner\"]}),`\n`]}),`\n`,(0,e.jsxs)(n.li,{children:[`\n`,(0,e.jsxs)(n.p,{children:[\"Fill in the \",(0,e.jsx)(n.strong,{children:\"changelog\"}),'. You can input \"Initial version\" in the changelog']}),`\n`]}),`\n`,(0,e.jsxs)(n.li,{children:[`\n`,(0,e.jsxs)(n.p,{children:[\"Click \",(0,e.jsx)(n.strong,{children:\"Publish\"}),\" to save the changelog. Lastly, your final chatbot flow will be like this:\"]}),`\n`]}),`\n`]}),`\n`,(0,e.jsx)(a,{caption:{title:\"Figure 11.\",description:\"Final conversation flow\"},src:\"/assets/images/tutorials/ig-handover/image_11.webp\",alt:\"Simple Handover\",naturalHeight:748,naturalWidth:2048}),`\n`,(0,e.jsxs)(n.h3,{id:\"objective-testing-your-bot-in-emulator\",children:[(0,e.jsx)(n.a,{className:\"anchor\",href:\"#objective-testing-your-bot-in-emulator\",children:(0,e.jsx)(n.span,{className:\"icon icon-link\"})}),\"Objective: Testing your bot in emulator\"]}),`\n`,(0,e.jsxs)(n.ol,{children:[`\n`,(0,e.jsxs)(n.li,{children:[`\n`,(0,e.jsxs)(n.p,{children:[\"On the bottom of your right screen, there is a small button named \",(0,e.jsx)(n.strong,{children:'\"Test Chatbot\".'}),\" Click the \",(0,e.jsx)(n.strong,{children:\"button\"}),\" to start.\"]}),`\n`]}),`\n`,(0,e.jsxs)(n.li,{children:[`\n`,(0,e.jsx)(n.p,{children:'You can try to test your bot by inputting a message in the text bot. Say \"hi\" to your bot. If it succeeds, your bot will reply as follows'}),`\n`]}),`\n`]}),`\n`,(0,e.jsx)(a,{caption:{title:\"Figure 12.\",description:'Testing your bot by typing \"hai\"'},src:\"/assets/images/tutorials/ig-handover/image_12.webp\",alt:\"Simple Handover\",naturalHeight:1042,naturalWidth:2048}),`\n`,(0,e.jsx)(a,{caption:{title:\"Figure 13.\",description:\"Testing another action response, this example is for text action\"},src:\"/assets/images/tutorials/ig-handover/image_13.webp\",alt:\"Simple Handover\",naturalHeight:1140,naturalWidth:2048}),`\n`,(0,e.jsxs)(n.ol,{start:\"3\",children:[`\n`,(0,e.jsxs)(n.li,{children:[\"If you want to \",(0,e.jsx)(n.strong,{children:\"restart\"}),\" the session, click refresh icon which is placed at the bottom\"]}),`\n`]}),`\n`,(0,e.jsxs)(n.h3,{id:\"objective-deploy-your-bot\",children:[(0,e.jsx)(n.a,{className:\"anchor\",href:\"#objective-deploy-your-bot\",children:(0,e.jsx)(n.span,{className:\"icon icon-link\"})}),\"Objective: Deploy your bot\"]}),`\n`,(0,e.jsxs)(n.h4,{id:\"create-new-deployment\",children:[(0,e.jsx)(n.a,{className:\"anchor\",href:\"#create-new-deployment\",children:(0,e.jsx)(n.span,{className:\"icon icon-link\"})}),\"Create new deployment\"]}),`\n`,(0,e.jsxs)(n.ol,{children:[`\n`,(0,e.jsxs)(n.li,{children:[`\n`,(0,e.jsxs)(n.p,{children:[\"Go to the \",(0,e.jsx)(n.strong,{children:'\"Deploy\"'}),\" menu in the left sidebar\"]}),`\n`]}),`\n`,(0,e.jsxs)(n.li,{children:[`\n`,(0,e.jsxs)(n.p,{children:[\"On this page, click on the \",(0,e.jsx)(n.strong,{children:'\"New Deployment\"'}),\" button which is placed in the top right corner. If you successfully clicked, it will show a create deployment drawer\"]}),`\n`]}),`\n`,(0,e.jsxs)(n.li,{children:[`\n`,(0,e.jsx)(n.p,{children:\"Choose any deployment version you want to deploy and fill in the changelog. Or you can simply follow this screenshot\"}),`\n`]}),`\n`]}),`\n`,(0,e.jsx)(a,{caption:{title:\"Figure 14.\",description:\"Create new deployment\"},src:\"/assets/images/tutorials/ig-handover/image_14.webp\",alt:\"Simple Handover\",naturalHeight:1890,naturalWidth:1338}),`\n`,(0,e.jsxs)(n.ol,{start:\"4\",children:[`\n`,(0,e.jsxs)(n.li,{children:[\"Click \",(0,e.jsx)(n.strong,{children:\"Submit\"}),\" to finish the deployment\"]}),`\n`]}),`\n`,(0,e.jsxs)(n.h4,{id:\"create-a-new-environment-as-prerequisites-to-deploy-the-bot-to-channel\",children:[(0,e.jsx)(n.a,{className:\"anchor\",href:\"#create-a-new-environment-as-prerequisites-to-deploy-the-bot-to-channel\",children:(0,e.jsx)(n.span,{className:\"icon icon-link\"})}),\"Create a new environment as prerequisites to deploy the bot to channel\"]}),`\n`,(0,e.jsxs)(n.ol,{children:[`\n`,(0,e.jsxs)(n.li,{children:[\"Go to the \",(0,e.jsx)(n.strong,{children:\"Environment\"}),' menu which is placed under the current menu (\"Overview\"). If you successfully entered the Environment menu, you will see a page like this. These 3 environments represent that your chatbot will be tested in development or staging first before go live as in Production stage.']}),`\n`]}),`\n`,(0,e.jsx)(a,{caption:{title:\"Figure 15.\",description:\"Set up environment, then set up Omnichat channel\"},src:\"/assets/images/tutorials/ig-handover/image_15.webp\",alt:\"Simple Handover\",naturalHeight:647,naturalWidth:2048}),`\n`,(0,e.jsxs)(n.ol,{start:\"2\",children:[`\n`,(0,e.jsxs)(n.li,{children:[`\n`,(0,e.jsxs)(n.p,{children:[\"Click the \",(0,e.jsx)(n.strong,{children:\"Create Environment\"}),\" button in the Development environment and you will see a drawer to create a new environment\"]}),`\n`]}),`\n`,(0,e.jsxs)(n.li,{children:[`\n`,(0,e.jsxs)(n.p,{children:[\"Choose the \",(0,e.jsx)(n.strong,{children:\"development version\"}),\" you want to (in this tutorial we will use the 1.0.0 version)\"]}),`\n`]}),`\n`,(0,e.jsxs)(n.li,{children:[`\n`,(0,e.jsxs)(n.p,{children:[\"Fill in the \",(0,e.jsx)(n.strong,{children:\"environment URL\"}),\". This environment URL will be useful if you use our CMS feature, \",(0,e.jsx)(n.a,{href:\"https://docs.kata.ai/cms-studio/about/'\",children:\"learn more about CMS\"}),\".\"]}),`\n`]}),`\n`,(0,e.jsxs)(n.li,{children:[`\n`,(0,e.jsxs)(n.p,{children:[\"Click \",(0,e.jsx)(n.strong,{children:\"Create\"}),\" to finalize\"]}),`\n`]}),`\n`,(0,e.jsxs)(n.li,{children:[`\n`,(0,e.jsxs)(n.p,{children:[\"You will notice the button is changed into the Create \",(0,e.jsx)(n.strong,{children:\"Channel\"}),\" button.\"]}),`\n`]}),`\n`]}),`\n`,(0,e.jsxs)(n.p,{children:[\"In this step, you will need an Omnichat \",(0,e.jsx)(\"a\",{href:\"https://kata-omnichat.kata.ai\",target:\"_blank\",children:(0,e.jsx)(n.a,{href:\"https://omnichat.kata.ai\",children:\"https://omnichat.kata.ai\"})}),\" account and an Omnichat inbox to deploy the bot. Let\\u2019s get started!\"]}),`\n`,(0,e.jsxs)(n.h2,{id:\"create-inbox-in-omnichat\",children:[(0,e.jsx)(n.a,{className:\"anchor\",href:\"#create-inbox-in-omnichat\",children:(0,e.jsx)(n.span,{className:\"icon icon-link\"})}),\"Create Inbox in Omnichat\"]}),`\n`,(0,e.jsx)(n.p,{children:\"Follow these tutorials in Omnichat to continue:\"}),`\n`,(0,e.jsxs)(n.ol,{children:[`\n`,(0,e.jsxs)(n.li,{children:[`\n`,(0,e.jsxs)(n.p,{children:[\"Register a new Omnichat account in Omnichat. Learn more about how to \",(0,e.jsx)(n.a,{href:\"/kata-omnichat/getting-started/register-your-account-first\",children:\"register account in Omnichat\"})]}),`\n`]}),`\n`,(0,e.jsxs)(n.li,{children:[`\n`,(0,e.jsxs)(n.p,{children:[\"Create a new channel inbox. Learn more about \",(0,e.jsx)(n.a,{href:\"/kata-omnichat/getting-started/connect-your-instagram-messaging-inbox\",children:\"create inbox in Omnichat\"})]}),`\n`,(0,e.jsxs)(n.ol,{children:[`\n`,(0,e.jsxs)(n.li,{children:[`\n`,(0,e.jsxs)(n.p,{children:[\"For IGDM chatbot: Section \",(0,e.jsx)(n.strong,{children:\"How to Set Up > Connect to Instagram Messaging\"})]}),`\n`]}),`\n`,(0,e.jsxs)(n.li,{children:[`\n`,(0,e.jsxs)(n.p,{children:[\"For WA chatbot: Section \",(0,e.jsx)(n.strong,{children:\"How to Set Up > Connect to Whatsapp Messaging\"})]}),`\n`]}),`\n`]}),`\n`]}),`\n`]}),`\n`,(0,e.jsxs)(n.h2,{id:\"create-agent-bot-in-omnichat\",children:[(0,e.jsx)(n.a,{className:\"anchor\",href:\"#create-agent-bot-in-omnichat\",children:(0,e.jsx)(n.span,{className:\"icon icon-link\"})}),\"Create Agent Bot in Omnichat\"]}),`\n`,(0,e.jsxs)(n.p,{children:[\"Follow the tutorial in Omnichat to continue. Continue to \",(0,e.jsx)(n.a,{href:\"/kata-omnichat/configure-your-agent-chatbot/setup-agent-bot-in-kata-omnichat\",children:\"create agent bot\"}),\".\"]}),`\n`,(0,e.jsxs)(n.h3,{id:\"connect-bot-to-omnichat\",children:[(0,e.jsx)(n.a,{className:\"anchor\",href:\"#connect-bot-to-omnichat\",children:(0,e.jsx)(n.span,{className:\"icon icon-link\"})}),\"Connect Bot to Omnichat\"]}),`\n`,(0,e.jsxs)(n.ol,{children:[`\n`,(0,e.jsx)(n.li,{children:\"If you succeed to follow the above tutorials, you will see an access token generated in Omnichat that needs to be pasted into the Platform. The screenshot below\"}),`\n`]}),`\n`,(0,e.jsx)(a,{caption:{title:\"Figure 16.\",description:\"Create agent bot\"},src:\"/assets/images/tutorials/ig-handover/image_16.webp\",alt:\"Simple Handover\",naturalHeight:967,naturalWidth:2048}),`\n`,(0,e.jsxs)(n.ol,{start:\"2\",children:[`\n`,(0,e.jsxs)(n.li,{children:[`\n`,(0,e.jsxs)(n.p,{children:[\"Next, open the Kata Platform URL \",(0,e.jsx)(\"a\",{href:\"https://platform.kata.ai\",target:\"_blank\",children:(0,e.jsx)(n.a,{href:\"https://platform.kata.ai\",children:\"https://platform.kata.ai\"})}),\" and do login\"]}),`\n`]}),`\n`,(0,e.jsxs)(n.li,{children:[`\n`,(0,e.jsx)(n.p,{children:\"Click your project that already had a chatbot and deployed\"}),`\n`]}),`\n`,(0,e.jsxs)(n.li,{children:[`\n`,(0,e.jsx)(n.p,{children:\"Then, go to the menu: Deploy > Environment. You will see this screen.\"}),`\n`]}),`\n`]}),`\n`,(0,e.jsx)(a,{caption:{title:\"Figure 17.\",description:'Click button \"Create channel\" to continue copying access token from Omnichat'},src:\"/assets/images/tutorials/ig-handover/image_17.webp\",alt:\"Simple Handover\",naturalHeight:695,naturalWidth:2048}),`\n`,(0,e.jsxs)(n.ol,{start:\"5\",children:[`\n`,(0,e.jsxs)(n.li,{children:[`\n`,(0,e.jsx)(n.p,{children:'Click \"+\" Create Channel\\u201D button in channel table list and drawer to set up the channel will be shown'}),`\n`]}),`\n`,(0,e.jsxs)(n.li,{children:[`\n`,(0,e.jsx)(n.p,{children:\"Choose Omnichat in Channel Type\"}),`\n`]}),`\n`,(0,e.jsxs)(n.li,{children:[`\n`,(0,e.jsx)(n.p,{children:\"In the Access Token field, paste your access token that was generated from the Omnichat inbox.\"}),`\n`]}),`\n`,(0,e.jsxs)(n.li,{children:[`\n`,(0,e.jsx)(n.p,{children:\"Click Save to deploy your bot\"}),`\n`]}),`\n`,(0,e.jsxs)(n.li,{children:[`\n`,(0,e.jsx)(n.p,{children:\"Few steps to the final \\u2728 A created channel will generate a webhook URL. Copy the webhook URL in the Platform to Omnichat.\"}),`\n`]}),`\n`]}),`\n`,(0,e.jsxs)(n.h3,{id:\"finalize-agent-bot-in-omnichat\",children:[(0,e.jsx)(n.a,{className:\"anchor\",href:\"#finalize-agent-bot-in-omnichat\",children:(0,e.jsx)(n.span,{className:\"icon icon-link\"})}),\"Finalize Agent Bot in Omnichat\"]}),`\n`,(0,e.jsxs)(n.ol,{children:[`\n`,(0,e.jsxs)(n.li,{children:[`\n`,(0,e.jsxs)(n.p,{children:[\"Go back to Omnichat \",(0,e.jsx)(\"a\",{href:\"https://kata-omnichat.kata.ai\",target:\"_blank\",children:(0,e.jsx)(n.a,{href:\"https://omnichat.kata.ai\",children:\"https://omnichat.kata.ai\"})}),\" and do login\"]}),`\n`]}),`\n`,(0,e.jsxs)(n.li,{children:[`\n`,(0,e.jsx)(n.p,{children:\"Go to menu: Settings > Integrations > Agent Bot. You will see this screen and information that you\\u2019re still in the first step to finalize\"}),`\n`]}),`\n`]}),`\n`,(0,e.jsx)(a,{caption:{title:\"Figure 18.\",description:\"Edit the agent bot to paste webhook URL from Kata Platform\"},src:\"/assets/images/tutorials/ig-handover/image_18.webp\",alt:\"Simple Handover\",naturalHeight:1078,naturalWidth:2048}),`\n`,(0,e.jsxs)(n.ol,{start:\"3\",children:[`\n`,(0,e.jsxs)(n.li,{children:[`\n`,(0,e.jsx)(n.p,{children:'Click \"Edit\" button in the agent bot configuration'}),`\n`]}),`\n`,(0,e.jsxs)(n.li,{children:[`\n`,(0,e.jsx)(n.p,{children:\"A drawer will appear to fill in the Platform webhook URL. Paste your chatbot webhook URL\"}),`\n`]}),`\n`,(0,e.jsxs)(n.li,{children:[`\n`,(0,e.jsx)(n.p,{children:\"Click Update and you will be redirected to agent bot list\"}),`\n`]}),`\n`,(0,e.jsxs)(n.li,{children:[`\n`,(0,e.jsx)(n.p,{children:\"Lastly, turn on the toggle in Activate Agent Bot. Your chatbot is already connected to the Omnichat inbox and ready to use!\"}),`\n`]}),`\n`]}),`\n`,(0,e.jsxs)(n.h2,{id:\"update-instagram-bot-to-use-ice-breaker\",children:[(0,e.jsx)(n.a,{className:\"anchor\",href:\"#update-instagram-bot-to-use-ice-breaker\",children:(0,e.jsx)(n.span,{className:\"icon icon-link\"})}),\"Update Instagram Bot to Use Ice Breaker\"]}),`\n`,(0,e.jsxs)(n.p,{children:[\"Ice Breaker is useful for first-time users can understand the available menu or topics in your Instagram bot. To use Ice Breaker, we need to create an Instagram inbox as a prerequisite. Learn more about \",(0,e.jsx)(n.a,{href:\"/channels/instagram-messaging/#sending-ice-breaker-reply\",children:\"Ice Breaker\"}),\".\"]}),`\n`,(0,e.jsx)(n.p,{children:\"Also, you need to successfully finish the Instagram bot until connect to agent bot Omnichat. Go back to the first step.\"}),`\n`,(0,e.jsx)(n.p,{children:\"Before we jump to the tutorial, here is the general conversation flow for using Ice Breaker.\"}),`\n`,(0,e.jsxs)(m,{children:[(0,e.jsx)(g,{children:(0,e.jsxs)(p,{children:[(0,e.jsx)(o,{children:\"Scenario Flow \"}),(0,e.jsx)(o,{children:(0,e.jsxs)(n.p,{children:[\"Details \",(0,e.jsx)(\"br\",{}),`\n(Each row represents 1 bubble message)`]})}),(0,e.jsx)(o,{children:\"Component Details \"})]})}),(0,e.jsx)(u,{children:(0,e.jsxs)(b,{children:[(0,e.jsx)(s,{children:(0,e.jsx)(n.p,{children:`First time end-users chat the brand's Instagram DM, then it will show Ice Breaker. Learn more about Ice Breaker.\nIt will not show when using Instagram Story Mention or Instagram Story Reply.`})}),(0,e.jsxs)(s,{children:[(0,e.jsx)(n.p,{children:\"Show ice breaker\"}),(0,e.jsx)(\"br\",{}),(0,e.jsx)(n.p,{children:\"FAQ\"}),(0,e.jsx)(\"br\",{}),(0,e.jsxs)(n.p,{children:[\"Promo \",(0,e.jsx)(\"br\",{}),`\nLokasi `,(0,e.jsx)(\"br\",{}),`\nBerbicara dengan CS`]})]}),(0,e.jsx)(s,{children:\"-\"})]})})]}),`\n`,(0,e.jsxs)(n.h3,{id:\"objective-create-ice-breaker-in-your-instagram-inbox\",children:[(0,e.jsx)(n.a,{className:\"anchor\",href:\"#objective-create-ice-breaker-in-your-instagram-inbox\",children:(0,e.jsx)(n.span,{className:\"icon icon-link\"})}),\"Objective: Create Ice Breaker in your Instagram inbox\"]}),`\n`,(0,e.jsxs)(n.p,{children:[\"Follow the tutorial on \",(0,e.jsx)(n.a,{href:\"/tutorials/how-to-use-instagram-messaging-automation-in-your-project\",children:\"how to set up Ice Breaker in Instagram Inbox\"}),\".\"]}),`\n`,(0,e.jsxs)(n.h3,{id:\"objective-create-intent-to-trigger-bot-response-if-end-users-click-all-ice-breaker\",children:[(0,e.jsx)(n.a,{className:\"anchor\",href:\"#objective-create-intent-to-trigger-bot-response-if-end-users-click-all-ice-breaker\",children:(0,e.jsx)(n.span,{className:\"icon icon-link\"})}),\"Objective: Create intent to trigger bot response if end-users click all Ice Breaker\"]}),`\n`,(0,e.jsxs)(n.h4,{id:\"create-intent-for-faq-menu\",children:[(0,e.jsx)(n.a,{className:\"anchor\",href:\"#create-intent-for-faq-menu\",children:(0,e.jsx)(n.span,{className:\"icon icon-link\"})}),\"Create intent for FAQ menu\"]}),`\n`,(0,e.jsxs)(n.ol,{children:[`\n`,(0,e.jsxs)(n.li,{children:[`\n`,(0,e.jsx)(n.p,{children:\"Click the Intent tab which is placed next to the Conversation Flows sidebar.\"}),`\n`]}),`\n`,(0,e.jsxs)(n.li,{children:[`\n`,(0,e.jsxs)(n.p,{children:[\"Click \",(0,e.jsx)(n.strong,{children:\"Create Intent\"}),\" button\"]}),`\n`]}),`\n`,(0,e.jsxs)(n.li,{children:[`\n`,(0,e.jsx)(n.p,{children:'Fill in the intent as follows. This intent will trigger the FAQ state to show FAQ response when end-user click \"FAQ\" in Ice Breaker feature'}),`\n`]}),`\n`]}),`\n`,(0,e.jsx)(a,{caption:{title:\"Figure 19.\",description:\"Edit the agent bot to paste webhook URL from Kata Platform\"},src:\"/assets/images/tutorials/ig-handover/image_19.webp\",alt:\"Simple Handover\",naturalHeight:1244,naturalWidth:1942}),`\n`,(0,e.jsxs)(n.ol,{start:\"4\",children:[`\n`,(0,e.jsxs)(n.li,{children:[\"Then, click \",(0,e.jsx)(n.strong,{children:\"Create\"}),\".\"]}),`\n`]}),`\n`,(0,e.jsxs)(n.h4,{id:\"create-intent-for-promo-menu\",children:[(0,e.jsx)(n.a,{className:\"anchor\",href:\"#create-intent-for-promo-menu\",children:(0,e.jsx)(n.span,{className:\"icon icon-link\"})}),\"Create intent for Promo menu\"]}),`\n`,(0,e.jsxs)(n.ol,{children:[`\n`,(0,e.jsxs)(n.li,{children:[`\n`,(0,e.jsx)(n.p,{children:\"Click the Intent tab which is placed next to the Conversation Flows sidebar.\"}),`\n`]}),`\n`,(0,e.jsxs)(n.li,{children:[`\n`,(0,e.jsxs)(n.p,{children:[\"Click \",(0,e.jsx)(n.strong,{children:\"Create Intent\"}),\" button\"]}),`\n`]}),`\n`,(0,e.jsxs)(n.li,{children:[`\n`,(0,e.jsx)(n.p,{children:'Fill in the intent as follows. This intent will trigger the promo state to show promo response when end-user click \"Promo\" in Ice Breaker feature'}),`\n`]}),`\n`]}),`\n`,(0,e.jsx)(a,{caption:{title:\"Figure 20.\",description:\"Create intent for triggering Promo state when user click Ice Breaker with Promo item\"},src:\"/assets/images/tutorials/ig-handover/image_20.webp\",alt:\"Simple Handover\",naturalHeight:1234,naturalWidth:1682}),`\n`,(0,e.jsxs)(n.ol,{start:\"4\",children:[`\n`,(0,e.jsxs)(n.li,{children:[\"Then, click \",(0,e.jsx)(n.strong,{children:\"Create\"}),\".\"]}),`\n`]}),`\n`,(0,e.jsxs)(n.h4,{id:\"create-intent-for-lokasi-menu\",children:[(0,e.jsx)(n.a,{className:\"anchor\",href:\"#create-intent-for-lokasi-menu\",children:(0,e.jsx)(n.span,{className:\"icon icon-link\"})}),'Create intent for \"Lokasi\" menu']}),`\n`,(0,e.jsxs)(n.ol,{children:[`\n`,(0,e.jsxs)(n.li,{children:[`\n`,(0,e.jsx)(n.p,{children:\"Click the Intent tab which is placed next to the Conversation Flows sidebar.\"}),`\n`]}),`\n`,(0,e.jsxs)(n.li,{children:[`\n`,(0,e.jsxs)(n.p,{children:[\"Click \",(0,e.jsx)(n.strong,{children:\"Create Intent\"}),\" button\"]}),`\n`]}),`\n`,(0,e.jsxs)(n.li,{children:[`\n`,(0,e.jsx)(n.p,{children:'Fill in the intent as follows. This intent will trigger the location state to show location response when end-user click \"Lokasi`\" in Ice Breaker feature'}),`\n`]}),`\n`]}),`\n`,(0,e.jsx)(a,{caption:{title:\"Figure 21.\",description:\"Create intent for triggering Lokasi state when user click Ice Breaker with Location item\"},src:\"/assets/images/tutorials/ig-handover/image_21.webp\",alt:\"Simple Handover\",naturalHeight:782,naturalWidth:1622}),`\n`,(0,e.jsxs)(n.ol,{start:\"4\",children:[`\n`,(0,e.jsxs)(n.li,{children:[\"Then, click \",(0,e.jsx)(n.strong,{children:\"Create\"}),\".\"]}),`\n`]}),`\n`,(0,e.jsxs)(n.h4,{id:\"create-intent-for-berbicara-dengan-cs-menu\",children:[(0,e.jsx)(n.a,{className:\"anchor\",href:\"#create-intent-for-berbicara-dengan-cs-menu\",children:(0,e.jsx)(n.span,{className:\"icon icon-link\"})}),'Create intent for \"Berbicara dengan CS\" menu']}),`\n`,(0,e.jsxs)(n.ol,{children:[`\n`,(0,e.jsxs)(n.li,{children:[`\n`,(0,e.jsx)(n.p,{children:\"Click the Intent tab which is placed next to the Conversation Flows sidebar.\"}),`\n`]}),`\n`,(0,e.jsxs)(n.li,{children:[`\n`,(0,e.jsxs)(n.p,{children:[\"Click \",(0,e.jsx)(n.strong,{children:\"Create Intent\"}),\" button\"]}),`\n`]}),`\n`,(0,e.jsxs)(n.li,{children:[`\n`,(0,e.jsx)(n.p,{children:'Fill in the intent as follows. This intent will trigger the handover state to handover end-user to human agent when end-user click \"Berbicara dengan CS\" in Ice Breaker feature'}),`\n`]}),`\n`]}),`\n`,(0,e.jsx)(a,{caption:{title:\"Figure 22.\",description:\"Create intent for triggering CS state item\"},src:\"/assets/images/tutorials/ig-handover/image_22.webp\",alt:\"Simple Handover\",naturalHeight:860,naturalWidth:1512}),`\n`,(0,e.jsxs)(n.ol,{start:\"4\",children:[`\n`,(0,e.jsxs)(n.li,{children:[\"Then, click \",(0,e.jsx)(n.strong,{children:\"Create\"}),\".\"]}),`\n`]}),`\n`,(0,e.jsxs)(n.h3,{id:\"objective-create-transition-for-mapping-bot-responses-after-end-users-clicked-the-ice-breaker\",children:[(0,e.jsx)(n.a,{className:\"anchor\",href:\"#objective-create-transition-for-mapping-bot-responses-after-end-users-clicked-the-ice-breaker\",children:(0,e.jsx)(n.span,{className:\"icon icon-link\"})}),\"Objective: Create transition for mapping bot responses after end-users clicked the Ice Breaker\"]}),`\n`,(0,e.jsxs)(n.h4,{id:\"connect-init-to-faqstate-to-trigger-faq-response-after-end-users-clicked-faq-in-ice-breaker\",children:[(0,e.jsx)(n.a,{className:\"anchor\",href:\"#connect-init-to-faqstate-to-trigger-faq-response-after-end-users-clicked-faq-in-ice-breaker\",children:(0,e.jsx)(n.span,{className:\"icon icon-link\"})}),'Connect \"init\" to \\u201CfaqState\\u201D to trigger FAQ response after end-users clicked \\u201CFAQ\\u201D in Ice Breaker']}),`\n`,(0,e.jsxs)(n.ol,{children:[`\n`,(0,e.jsxs)(n.li,{children:[`\n`,(0,e.jsx)(n.p,{children:'Pull transition line from \"init\" to \\u201CfaqState\\u201D.'}),`\n`]}),`\n`,(0,e.jsxs)(n.li,{children:[`\n`,(0,e.jsx)(n.p,{children:\"Create transition drawer will show.\"}),`\n`]}),`\n`,(0,e.jsxs)(n.li,{children:[`\n`,(0,e.jsx)(n.p,{children:\"Fill in condition as follow:\"}),`\n`]}),`\n`]}),`\n`,(0,e.jsx)(n.pre,{children:(0,e.jsx)(n.code,{className:\"code-highlight\",children:(0,e.jsx)(n.span,{className:\"code-line\",children:`intent == \"faqIceBreaker\"\n`})})}),`\n`,(0,e.jsxs)(n.ol,{start:\"4\",children:[`\n`,(0,e.jsx)(n.li,{children:\"Click Create\"}),`\n`]}),`\n`,(0,e.jsxs)(n.h4,{id:\"connect-init-to-carouselstate-to-trigger-generic-template-carousel-response-after-end-users-clicked-promo-in-ice-breaker\",children:[(0,e.jsx)(n.a,{className:\"anchor\",href:\"#connect-init-to-carouselstate-to-trigger-generic-template-carousel-response-after-end-users-clicked-promo-in-ice-breaker\",children:(0,e.jsx)(n.span,{className:\"icon icon-link\"})}),'Connect \"init\" to \\u201CcarouselState\\u201D to trigger generic template (\\u201Ccarousel\\u201D) response after end-users clicked \\u201CPromo\\u201D in Ice Breaker']}),`\n`,(0,e.jsxs)(n.ol,{children:[`\n`,(0,e.jsxs)(n.li,{children:[`\n`,(0,e.jsx)(n.p,{children:'Pull transition line from \"init\" to \\u201CcarouselState\\u201D.'}),`\n`]}),`\n`,(0,e.jsxs)(n.li,{children:[`\n`,(0,e.jsx)(n.p,{children:\"Create transition drawer will show.\"}),`\n`]}),`\n`,(0,e.jsxs)(n.li,{children:[`\n`,(0,e.jsx)(n.p,{children:\"Fill in condition as follow:\"}),`\n`]}),`\n`]}),`\n`,(0,e.jsx)(n.pre,{children:(0,e.jsx)(n.code,{className:\"code-highlight\",children:(0,e.jsx)(n.span,{className:\"code-line\",children:`intent == \"promoIceBreaker\"\n`})})}),`\n`,(0,e.jsxs)(n.ol,{start:\"4\",children:[`\n`,(0,e.jsx)(n.li,{children:\"Click Create\"}),`\n`]}),`\n`,(0,e.jsxs)(n.h4,{id:\"connect-init-to-carouselstate-to-trigger-text-response-after-end-users-clicked-lokasi-in-ice-breaker\",children:[(0,e.jsx)(n.a,{className:\"anchor\",href:\"#connect-init-to-carouselstate-to-trigger-text-response-after-end-users-clicked-lokasi-in-ice-breaker\",children:(0,e.jsx)(n.span,{className:\"icon icon-link\"})}),'Connect \"init\" to \\u201CcarouselState\\u201D to trigger text response after end-users clicked \\u201CLokasi\\u201D in Ice Breaker']}),`\n`,(0,e.jsxs)(n.ol,{children:[`\n`,(0,e.jsxs)(n.li,{children:[`\n`,(0,e.jsx)(n.p,{children:'Pull transition line from \"init\" to \\u201ClocationState\\u201D.'}),`\n`]}),`\n`,(0,e.jsxs)(n.li,{children:[`\n`,(0,e.jsx)(n.p,{children:\"Create transition drawer will show.\"}),`\n`]}),`\n`,(0,e.jsxs)(n.li,{children:[`\n`,(0,e.jsx)(n.p,{children:\"Fill in condition as follow:\"}),`\n`]}),`\n`]}),`\n`,(0,e.jsx)(n.pre,{children:(0,e.jsx)(n.code,{className:\"code-highlight\",children:(0,e.jsx)(n.span,{className:\"code-line\",children:`intent == \"locationIceBreaker\"\n`})})}),`\n`,(0,e.jsxs)(n.ol,{start:\"4\",children:[`\n`,(0,e.jsx)(n.li,{children:\"Click Create\"}),`\n`]}),`\n`,(0,e.jsxs)(n.h4,{id:\"connect-init-to-handoverstate-to-trigger-handover-to-human-agents-after-end-users-clicked-berbicara-dengan-cs-in-ice-breaker\",children:[(0,e.jsx)(n.a,{className:\"anchor\",href:\"#connect-init-to-handoverstate-to-trigger-handover-to-human-agents-after-end-users-clicked-berbicara-dengan-cs-in-ice-breaker\",children:(0,e.jsx)(n.span,{className:\"icon icon-link\"})}),'Connect \"init\" to \\u201ChandoverState\\u201D to trigger handover to human agents after end-users clicked \\u201CBerbicara dengan CS\\u201D in Ice Breaker']}),`\n`,(0,e.jsxs)(n.ol,{children:[`\n`,(0,e.jsxs)(n.li,{children:[`\n`,(0,e.jsx)(n.p,{children:'Pull transition line from \"init\" to \\u201ChandoverState\\u201D.'}),`\n`]}),`\n`,(0,e.jsxs)(n.li,{children:[`\n`,(0,e.jsx)(n.p,{children:\"Create transition drawer will show.\"}),`\n`]}),`\n`,(0,e.jsxs)(n.li,{children:[`\n`,(0,e.jsx)(n.p,{children:\"Fill in condition as follow:\"}),`\n`]}),`\n`]}),`\n`,(0,e.jsx)(n.pre,{children:(0,e.jsx)(n.code,{className:\"code-highlight\",children:(0,e.jsx)(n.span,{className:\"code-line\",children:`intent == \"csIceBreaker\"\n`})})}),`\n`,(0,e.jsxs)(n.ol,{start:\"4\",children:[`\n`,(0,e.jsx)(n.li,{children:\"Click Create\"}),`\n`]}),`\n`,(0,e.jsxs)(n.h3,{id:\"objective-publish-updated-bot-and-deploy-to-omnichat-again\",children:[(0,e.jsx)(n.a,{className:\"anchor\",href:\"#objective-publish-updated-bot-and-deploy-to-omnichat-again\",children:(0,e.jsx)(n.span,{className:\"icon icon-link\"})}),\"Objective: Publish updated bot and deploy to Omnichat again\"]}),`\n`,(0,e.jsxs)(n.p,{children:[\"Follow the tutorial to \",(0,e.jsx)(n.a,{href:\"/tutorial/create-igdm-bot-handover-from-chatbot-to-agent/#finalize-your-new-bot\",children:\"finalize your bot\"}),\".\"]})]})}}var H=B;function c(t,i){throw new Error(\"Expected \"+(i?\"component\":\"object\")+\" `\"+t+\"` to be defined: you likely forgot to import, pass, or provide it.\")}return F(q);})();\n;return Component;"},"_id":"tutorials/create-igdm-bot-handover-from-chatbot-to-agent.mdx","_raw":{"sourceFilePath":"tutorials/create-igdm-bot-handover-from-chatbot-to-agent.mdx","sourceFileName":"create-igdm-bot-handover-from-chatbot-to-agent.mdx","sourceFileDir":"tutorials","contentType":"mdx","flattenedPath":"tutorials/create-igdm-bot-handover-from-chatbot-to-agent"},"type":"Tutorials","slug":["create-igdm-bot-handover-from-chatbot-to-agent"],"excerpt":"\nKata Platform "},{"layout":"tutorial","id":"create-simple-bot-handover-from-chatbot-to-agent","imgSpot":"/assets/images/tutorials/spot-simple-handover.webp","product":"kata-platform","title":"Create Simple Bot Handover from Chatbot to Agent Tutorial","date":"2018-11-11T07:00:00+07:00","prev":"create-igdm-bot-handover-from-chatbot-to-agent","body":{"raw":"\nKata Platform ([platform.kata.ai](www.platform.kata.ai)) is a platform to create chatbots and train them with Natural Language Processing (NLP). You can create any chatbots for any use-cases, such as FAQ, campaign, customer service, handover to human agents, and more.\n\nIn this tutorial, we will create a chatbot that is able to handoff conversations to human agents, also known as \"Agent Handover''. We will use the Kata Omnichat dashboard to connect chatbots with human agents. Check this [documentation](/kata-omnichat) for Kata Omnichat explanation.\n\n<YoutubeEmbedWrapper>\n  <YoutubeEmbed\n    id=\"dAHnoTX4BUE\"\n    params=\"v=dAHnoTX4BUE\"\n    title=\" Create Simple Bot Handover from Chatbot to Agent Tutorial\"\n  />\n</YoutubeEmbedWrapper>\n\n## Simple Chatbot Flow\n\nBefore we jump into the tutorial, let’s see the scenario for the conversation. We will create a chatbot using _keywords_ which when customers enter \"1\" to end the conversation or “2” to do the handover.\n\n### Conversation Flow Table\n\n<Table>\n  <TableHead>\n    <TableHeadRow>\n      <TableHeadCell>Scenario Flow </TableHeadCell>\n      <TableHeadCell>\n        Details <br />\n        (Each row represents 1 bubble message)\n      </TableHeadCell>\n    </TableHeadRow>\n  </TableHead>\n  <TableBody>\n    <TableBodyRow>\n      <TableBodyCell>Greetings</TableBodyCell>\n      <TableBodyCell>\n        Halo, selamat datang di layanan CS Bank ABC 😊 <br />\n        <br />\n        Apakah ingin dihubungkan ke CS Bank ABC yang sedang available? <br />\n        <br />\n        Ya -- lanjut\n        <br />\n        Tidak -- end session\n        <br />\n        <br />\n        💡 Cukup ketik angka pilihannya, ya\n      </TableBodyCell>\n    </TableBodyRow>\n    <TableBodyRow>\n      <TableBodyCell>End conversation if customer typing \"2\" </TableBodyCell>\n      <TableBodyCell>Terima kasih sudah menghubungi Bank ABC 😊 </TableBodyCell>\n    </TableBodyRow>\n    <TableBodyRow>\n      <TableBodyCell>Customer typing “1” and chatbot request handover to agent</TableBodyCell>\n      <TableBodyCell>Mohon menunggu, ya. Sedang kami hubungkan ke CS Bank ABC yang tersedia! 😊 </TableBodyCell>\n    </TableBodyRow>\n    <TableBodyRow>\n      <TableBodyCell>End session after handover done</TableBodyCell>\n      <TableBodyCell>Terima kasih sudah menghubungi Bank ABC 😊 </TableBodyCell>\n    </TableBodyRow>\n  </TableBody>\n</Table>\n\n## Create Project\n\n### Objective: Register your new account and login to the Platform\n\n1. Go to <a href=\"https://platform.kata.ai\" target=\"_blank\">https://platform.kata.ai</a> and click **Sign Up** to create new account\n\n2. Input required fields in sign up page: **Username, email address, role and captcha**\n\n3. Go to your registered email’s inbox. You will receive an email to verify your account and input your password\n\n4. When you click the **Confirm Email** button in the verification email, you will be redirected to setup password. Insert your password and confirm the password.\n\n5. You will be redirected to the Login **Page**. Input your username and password to continue.\n\n### Objective: Create new chatbot project\n\n#### Login to Kata Platform and create project\n\n1. Open your browser, then open the URL <a href=\"https://platform.kata.ai/login\" target=\"_blank\">https://platform.kata.ai/login</a> and enter your username & password.\n\n2. Click **\"Login\"** to continue.\n\n3. Click on **\"Create Project\"** and fill in the form. Each project contains one bot design, one NL, and one CMS.\n\n# Create Greetings Flow\n\n### Objective: Define a flow\n\n#### Create a flow name \"Handover\". We will use 1 flow for this simple bot\n\n1. Click **\"Create Flow\"** button in current screen\n\n2. Create flow \"Handover\", other fields are left blank. Then, click **Create**.\n\n### Objective: Create greetings state to define how to respond\n\n#### Create \"init\" state\n\n1. Click \"+\" icon in bottom right to create new state\n\n2. Create state \"init\" and click toggle to turn on “Initial State” and other fields are left blank. Then, click Create.\n\n#### Create \"greetings\" as bot response to show keywords menu\n\n1. Create another state by clicking the **\"+\"** icon in the bottom right to create a new state named “greetings”\n\n2. Click **\"Add action\"**, then click **“+”** in the action box to create a new action\n\n3. When all actions available are shown, then choose \"Text\"\n\n4. Input action name \"greetings\"\n\n5. Next, click the **Add Variant** button to fill in with this text:\n\n```\nHalo, selamat datang di layanan CS Bank ABC 😊\\n\\n Apakah ingin dihubungkan ke CS Bank ABC yang sedang available?\\n\\n1. Ya\\n2. Tidak\\n\\n💡 Cukup ketik angka pilihannya, ya\n```\n\n6. Click **Create Action**\n\n7. To finalize the state creation, click **Create** in state drawer\n\n### Objective: Catch end-user’s message when greet the bot\n\n#### Create \"greetings\" keywords to build understanding in chatbots when end-user’s greet the bot. We will use the NLUs feature to create the keywords.\n\n1. Go to the menu **\"NLUs\"** which is placed under the “Conversation Flows” menu. Your screen will be switched to create NLUs\n\n2. Click **Create NLU**\n\n3. Then, fill in the fields as follow\n\n```\nNLU Name: greetings\nNLU Type: Keyword\n```\n\n4. Next, click **\"Add Keyword\"** to define any words to trigger the bot. Fill in the main keyword as follow\n\n```\nMain keyword: hi\n```\n\n5. Add a new word by pressing \"enter\" on your keyboard. Every time you write a new word, press “enter” on your keyboard to save the word. Add these words\n\n<FigureImage\n  src=\"/assets/images/tutorials/simple-handover/image_1.webp\"\n  alt=\"Simple Handover\"\n  caption={{ title: 'Figure 1.', description: 'Add more keywords for greetings' }}\n  naturalHeight={272}\n  naturalWidth={818}\n/>\n\n6. Click **\"Create\"** to save the NLUs\n\n#### Create \"greetings\" intent to catch user’s input\n\n1. Click the Intent tab which is placed next to the Conversation Flows sidebar.\n\n2. Click **Create Intent** button\n\n3. Fill in the intent as follows. The choice of \"Intent type\" is text, which means it will catch incoming messages with text only. On classifier, use “greetings” NLUs that we’ve created in previous step to connect the intent with create keywords for greetings\n\n<FigureImage\n  caption={{ title: 'Figure 2.', description: 'Create intent and create mapping with greetings keyword' }}\n  src=\"/assets/images/tutorials/simple-handover/image_2.webp\"\n  alt=\"Simple Handover\"\n  naturalHeight={1496}\n  naturalWidth={990}\n/>\n\n4. Then, click **Create**.\n\n### Objective: Connect \"init\" and “greetings” states by creating a transition\n\n#### Create a transition to connect \"_init_\" and “_greetings_” states. The transition will define in which condition the greetings state, including the actions’ state, will be executed.\n\n1. Pull a line from the \"init\" state and drag it to the “greetings” state. If you succeed, then it will show a **Create Transition** drawer\n\n2. Fill in the transition as follow\n\n<FigureImage\n  caption={{ title: 'Figure 3.', description: 'Create transition' }}\n  src=\"/assets/images/tutorials/simple-handover/image_3.webp\"\n  alt=\"Simple Handover\"\n  naturalHeight={834}\n  naturalWidth={930}\n/>\n\n3. Click **\"Create Transition\"**\n\n## Catch End-user’s Typing when Choosing Menu\n\n### Objective: Catch end-user’s message when choosing menu by typing \"1\" or “2”\n\n#### Create \"menu\" keywords\n\n1. Go to the menu **\"NLUs\"** which is placed under the “Conversation Flows” menu. Your screen will be switched to create NLUs\n\n2. Click **Create NLU**\n\n3. Then, fill in the fields as follow\n\n```\nNLU Name: menu\nNLU Type: Keyword\n```\n\n4. Next, click **\"Add Keyword\"** to define any words to trigger the bot. Fill in the main keyword as follow\n\n```\nMain keyword: satu\n```\n\n5. Add a new word by pressing \"enter\" on your keyboard. Every time you write a new word, press “enter” on your keyboard to save the word. Add these words. “satu” and “dua” as the main keywords mean they define what your end-users will be inputted when choose menu\n\n<FigureImage\n  caption={{\n    title: 'Figure 4.',\n    description: 'Create keywords to identify input from chatbot users when choosing menu',\n  }}\n  src=\"/assets/images/tutorials/simple-handover/image_4.webp\"\n  alt=\"Simple Handover\"\n  naturalHeight={1264}\n  naturalWidth={960}\n/>\n\n6. Click **\"Create\"** to save the NLUs\n\n#### Create an intent \"menu\" to catch the end-user's input\n\n1. Click the Intent tab which is placed next to the Conversation Flows sidebar.\n\n2. Click **Create Intent** button\n\n3. Fill in the intent as follows. This intent will catch the end-user's input after typing \"1\" or “2”. Adding a classifier with “menu” to define this intent will be executed whenever a sentence has the “menu” keyword. Add attributes and choose NLU “menu”, because we have 2 main keywords that need to be understood by the intent to execute the handover path or end conversation path.\n\n<FigureImage\n  caption={{ title: 'Figure 5.', description: 'Create intent for showing main menu and mapping from created keywords' }}\n  src=\"/assets/images/tutorials/simple-handover/image_5.webp\"\n  alt=\"Simple Handover\"\n  naturalHeight={1484}\n  naturalWidth={722}\n/>\n\n4. Then, click **Create**.\n\n## Create Handover to Human Agent Flow\n\n### Objective: Create a flow that end-user can request handover to human agents by using Handover API\n\n#### Create handover state\n\n1. Click **\"+\"** icon in bottom right to create new state\n\n2. Fill in the state name with \"handover\" and activate toggle “End state”\n\n#### Create bot response to inform end-user that the handover request has been received and waiting for agents to reply\n\n1. Click **\"+\"** in action box to create new action\n\n2. When all actions available are shown, then choose \"Text\"\n\n3. Input action name \"waitForAgent\"\n\n4. Next, click the **Add Variant** button to fill in with this text:\n\n```\nMohon menunggu, ya. Sedang kami hubungkan ke CS Bank ABC yang tersedia! 😊\n```\n\n5. Click **Create Action**\n\n#### Use Handover API to send handover request to Omnichat\n\n1. Create another action by clicking **\"Add action\"**\n\n2. Click **\"+\"** in action box to create new action\n\n3. Fill in action name with \"handover\"\n\n4. When all actions available are shown, then choose \"API\"\n\n5. Choose **Handover API**\n\n6. Click **Create Action** button\n\n7. To finalize this step when creating a new state, click the **Create** button in the state drawer\n\n#### Create a transition to connect \"greetings\" and “handover” states\n\n1. Pull a line from the \"greetings\" state and drag it to the “handover” state. If you succeed, then it will show a **Create Transitio**n drawer\n\n2. Fill in the transition as follows. This condition means if the end-user's keyword is identified as \"menu\" _and_ they are typing “1”, then it will show the “handover” state including the actions’ state.\n\n<FigureImage\n  caption={{\n    title: 'Figure 6.',\n    description: `Create transition and mapping if chatbot users choose \"1\", then execute handover state`,\n  }}\n  src=\"/assets/images/tutorials/simple-handover/image_6.webp\"\n  alt=\"Simple Handover\"\n  naturalHeight={604}\n  naturalWidth={712}\n/>\n\n3. Click **Create**\n\n## Create End Conversation Flow\n\n### Objective: Create a flow that end-user doesn’t want to handover to agent and end the conversation\n\n#### Create \"end\" state to cancel handover agent and finish the conversation\n\n1. Click **\"+\"** icon in bottom left to create new state\n\n2. Fill in the state name with \"end\" and click toggle “End state” to set the state as the end of the flow.\n\n3. Click **\"Add action\",** then click “+” to create new action\n\n4. Choose Text, then fill in the action name with \"end\".\n\n5. Next, click the **\"Add Variant\"** button and input the following text:\n\n```\nTerima kasih sudah menghubungi Bank ABC 😊\n```\n\n6. Click **Create** to finalize\n\n#### Create a transition to connect \"greetings\" and “end” states\n\n1. Pull a line from the \"greetings\" state and drag it to the “end” state. If you succeed, then it will show a Create Transition drawer\n\n2. Fill in the transition as follows. This condition means if the end-user's keyword is identified as \"menu\" _and_ they are typing “2”, then it will execute the “end” state\n\n<FigureImage\n  caption={{\n    title: 'Figure 7.',\n    description: `Create transition and mapping if chatbot users choose \"2\", then execute end conversation`,\n  }}\n  src=\"/assets/images/tutorials/simple-handover/image_7.webp\"\n  alt=\"Simple Handover\"\n  naturalHeight={630}\n  naturalWidth={704}\n/>\n\n3. Click **Create**\n\n## Finalize Your New Bot\n\n### Objective: Publish your bot to save the chatbot flow\n\n1. Click on the **\"Publish\"** button which is placed on top right corner\n\n2. Fill in the **change log**. You can input \"Initial version\" in the change log\n\n3. Click **Publish** to save the change log. Lastly, your final chatbot flow will be like this:\n\n<FigureImage\n  caption={{ title: 'Figure 8.', description: `Final conversation flow` }}\n  src=\"/assets/images/tutorials/simple-handover/image_8.webp\"\n  alt=\"Simple Handover\"\n  naturalHeight={634}\n  naturalWidth={2048}\n/>\n\n### Objective: Testing your bot in emulator\n\n1. On the bottom of your right screen, there is a small button named **\"Test NLU\".** Click the **button** to start.\n\n2. You can try to test your bot by inputting a message in the text bot. Say \"hi\" to your bot. If it succeeds, your bot will reply as follows\n\n<FigureImage\n  caption={{ title: 'Figure 9.', description: `Testing your bot in emulator by typing \"hi\"` }}\n  src=\"/assets/images/tutorials/simple-handover/image_9.webp\"\n  alt=\"Simple Handover\"\n  naturalHeight={1192}\n  naturalWidth={1914}\n/>\n\n<FigureImage\n  caption={{ title: 'Figure 10.', description: `Testing bot by typing \"1\" or \"2\"` }}\n  src=\"/assets/images/tutorials/simple-handover/image_10.webp\"\n  alt=\"Simple Handover\"\n  naturalHeight={1148}\n  naturalWidth={1878}\n/>\n\n3. If you want to **restart** the session, click refresh icon which is placed at the bottom\n\n### Objective: Deploy your bot\n\n#### Create new deployment\n\n1. Go to the **\"Deploy\"** menu in the left sidebar\n\n2. In this page, click on the **\"New Deployment\"** button which is placed in the top right corner. If you successfully clicked, it will show a create deployment drawer\n\n3. Choose any deployment version you want to deploy and fill in the change log. Or you can simply follow this screenshot\n\n<FigureImage\n  caption={{ title: 'Figure 11.', description: `Create new deployment` }}\n  src=\"/assets/images/tutorials/simple-handover/image_11.webp\"\n  alt=\"Simple Handover\"\n  naturalHeight={1890}\n  naturalWidth={1338}\n/>\n\n4. Click **Submit** to finish the deployment\n\n#### Create new environment as prerequisites to deploy the bot to channel\n\n1. Go to the **Environment** menu which is placed under the current menu (\"Overview\"). If you successfully entered the Environment menu, you will see a page like this. These 3 environments represent that your chatbot will be tested in development or staging first, before go live as in Production stage\n\n<FigureImage\n  caption={{ title: 'Figure 12.', description: `Set up environment` }}\n  src=\"/assets/images/tutorials/simple-handover/image_12.webp\"\n  alt=\"Simple Handover\"\n  naturalHeight={647}\n  naturalWidth={2048}\n/>\n\n2. Click the **Create Environment** button in the Development environment and you will see a drawer to create new environment\n\n3. Choose the **development version** you want to (in this tutorial we will use the 1.0.0 version)\n\n4. Fill in the **environment URL**. This environment URL will be useful if you use our CMS feature, [learn more about CMS](https://docs.kata.ai/cms-studio/about/').\n\n5. Click **Create** to finalize\n\n6. You will notice the button is changed into the Create **Channel** button.\n\nIn this step, you will need an Omnichat <a href=\"https://kata-omnichat.kata.ai\" target=\"_blank\">https://omnichat.kata.ai</a> account and Omnichat inbox to deploy the bot. Let’s get started!\n\n## Create Inbox in Omnichat\n\nFollow these tutorials in Omnichat to continue:\n\n1. Register a new Omnichat account in Omnichat. Section [**How to Set Up**](/kata-omnichat/getting-started/register-your-account-first)\n\n2. Create a new channel inbox.\n\n   - For IGDM chatbot: Section [**How to Set Up > Connect to Instagram Messaging**](/kata-omnichat/getting-started/connect-your-instagram-messaging-inbox)\n\n   - For WA chatbot: Section [**How to Set Up > Connect to Whatsapp Messaging**](/kata-omnichat/getting-started/connect-your-waba-inbox)\n\n## Create Agent Bot in Omnichat\n\nFollow the tutorial below in Omnichat to continue: Section **How to Set Up Agent Bot**\n\n## Connect Bot to Omnichat\n\n1. If you succeed to follow the above tutorials, you will see an access token generated in Omnichat that needs to be pasted into the Platform. The screenshot below\n\n<FigureImage\n  caption={{ title: 'Figure 13.', description: `Create new agent bot` }}\n  src=\"/assets/images/tutorials/simple-handover/image_13.webp\"\n  alt=\"Simple Handover\"\n  naturalHeight={1078}\n  naturalWidth={2048}\n/>\n\n2. Next, open the Kata Platform URL <a href=\"https://platform.kata.ai\" target=\"_blank\">https://platform.kata.ai</a> and do login\n\n3. Click your project that already had a chatbot and deployed\n\n4. Then, go to the menu: Deploy > Environment. You will see this screen.\n\n<FigureImage\n  caption={{ title: 'Figure 14.', description: `Set up channel again to paste access token from Omnichat` }}\n  src=\"/assets/images/tutorials/simple-handover/image_14.webp\"\n  alt=\"Simple Handover\"\n  naturalHeight={695}\n  naturalWidth={2048}\n/>\n\n5. Click Create Channel button to start connect and you will see an empty channel table\n\n6. Click \"+ Create Channel\" button in channel table list and drawer to set up the channel will be shown\n\n7. Choose Omnichat in Channel Type\n\n8. In the Access Token field, paste your access token that was generated from the Omnichat inbox.\n\n9. Click Save to deploy your bot\n\n10. Few steps to the final ✨ A created channel will generate a webhook URL. Copy the webhook URL in the Platform to Omnichat.\n\n## Finalize Agent Bot in Omnichat\n\n1. Go back to Omnichat <a href=\"https://kata-omnichat.kata.ai\" target=\"_blank\">https://omnichat.kata.ai</a> and do login\n\n2. Go to menu: Settings > Integrations > Agent Bot. You will see this screen and information that you’re still in first step to finalize\n\n<FigureImage\n  caption={{ title: 'Figure 15.', description: `Edit agent bot to paste webhook URL from Platform` }}\n  src=\"/assets/images/tutorials/simple-handover/image_15.webp\"\n  alt=\"Simple Handover\"\n  naturalHeight={1078}\n  naturalWidth={2048}\n/>\n\n3. Click \"Edit\" button in the agent bot configuration\n\n4. A drawer will appear to fill in the Platform webhook URL. Paste your chatbot webhook URL\n\n5. Click Update and you will be redirected to agent bot list\n\n6. Lastly, turn on the toggle in Activate Agent Bot. Your chatbot is already connected to the Omnichat inbox and ready to use!\n\n<FigureImage\n  caption={{ title: 'Figure 16.', description: `Activate agent bot and final step` }}\n  src=\"/assets/images/tutorials/simple-handover/image_16.webp\"\n  alt=\"Simple Handover\"\n  naturalHeight={1078}\n  naturalWidth={2048}\n/>\n\n## Final Demo\n\nWe provide video tutorials and interaction demos for agent bot Omnichat features. Check these out:\n\n- Create simple bot handover video tutorial\n\n<YoutubeEmbedWrapper>\n  <YoutubeEmbed id=\"pbqou7Wr4Tc\" params=\"v=pbqou7Wr4Tc\" title=\"Create simple bot handover video tutorial\" />\n</YoutubeEmbedWrapper>\n\n- Chatbot interaction with end-user and handover to human agent\n","code":"var Component=(()=>{var y=Object.create;var s=Object.defineProperty;var C=Object.getOwnPropertyDescriptor;var N=Object.getOwnPropertyNames;var T=Object.getPrototypeOf,j=Object.prototype.hasOwnProperty;var b=t=>s(t,\"__esModule\",{value:!0});var H=(t,i)=>()=>(i||t((i={exports:{}}).exports,i),i.exports),F=(t,i)=>{for(var r in i)s(t,r,{get:i[r],enumerable:!0})},f=(t,i,r,n)=>{if(i&&typeof i==\"object\"||typeof i==\"function\")for(let l of N(i))!j.call(t,l)&&(r||l!==\"default\")&&s(t,l,{get:()=>i[l],enumerable:!(n=C(i,l))||n.enumerable});return t},A=(t,i)=>f(b(s(t!=null?y(T(t)):{},\"default\",!i&&t&&t.__esModule?{get:()=>t.default,enumerable:!0}:{value:t,enumerable:!0})),t),x=(t=>(i,r)=>t&&t.get(i)||(r=f(b({}),i,1),t&&t.set(i,r),r))(typeof WeakMap!=\"undefined\"?new WeakMap:0);var v=H((I,k)=>{k.exports=_jsx_runtime});var L={};F(L,{default:()=>B,frontmatter:()=>S});var e=A(v()),S={layout:\"tutorial\",id:\"create-simple-bot-handover-from-chatbot-to-agent\",imgSpot:\"/assets/images/tutorials/spot-simple-handover.webp\",title:\"Create Simple Bot Handover from Chatbot to Agent Tutorial\",product:\"kata-platform\",prev:\"create-igdm-bot-handover-from-chatbot-to-agent\",date:\"2018-11-11T07:00:00+07:00\"};function O(t={}){let{wrapper:i}=t.components||{};return i?(0,e.jsx)(i,Object.assign({},t,{children:(0,e.jsx)(r,{})})):r();function r(){let n=Object.assign({p:\"p\",a:\"a\",h2:\"h2\",span:\"span\",em:\"em\",h3:\"h3\",ol:\"ol\",li:\"li\",strong:\"strong\",h4:\"h4\",h1:\"h1\",pre:\"pre\",code:\"code\",ul:\"ul\"},t.components),{YoutubeEmbedWrapper:l,YoutubeEmbed:d,Table:g,TableHead:u,TableHeadRow:m,TableHeadCell:p,TableBody:w,TableBodyRow:h,TableBodyCell:c,FigureImage:a}=n;return a||o(\"FigureImage\",!0),g||o(\"Table\",!0),w||o(\"TableBody\",!0),c||o(\"TableBodyCell\",!0),h||o(\"TableBodyRow\",!0),u||o(\"TableHead\",!0),p||o(\"TableHeadCell\",!0),m||o(\"TableHeadRow\",!0),d||o(\"YoutubeEmbed\",!0),l||o(\"YoutubeEmbedWrapper\",!0),(0,e.jsxs)(e.Fragment,{children:[(0,e.jsxs)(n.p,{children:[\"Kata Platform (\",(0,e.jsx)(n.a,{href:\"www.platform.kata.ai\",children:\"platform.kata.ai\"}),\") is a platform to create chatbots and train them with Natural Language Processing (NLP). You can create any chatbots for any use-cases, such as FAQ, campaign, customer service, handover to human agents, and more.\"]}),`\n`,(0,e.jsxs)(n.p,{children:[`In this tutorial, we will create a chatbot that is able to handoff conversations to human agents, also known as \"Agent Handover''. We will use the Kata Omnichat dashboard to connect chatbots with human agents. Check this `,(0,e.jsx)(n.a,{href:\"/kata-omnichat\",children:\"documentation\"}),\" for Kata Omnichat explanation.\"]}),`\n`,(0,e.jsx)(l,{children:(0,e.jsx)(d,{id:\"dAHnoTX4BUE\",params:\"v=dAHnoTX4BUE\",title:\" Create Simple Bot Handover from Chatbot to Agent Tutorial\"})}),`\n`,(0,e.jsxs)(n.h2,{id:\"simple-chatbot-flow\",children:[(0,e.jsx)(n.a,{className:\"anchor\",href:\"#simple-chatbot-flow\",children:(0,e.jsx)(n.span,{className:\"icon icon-link\"})}),\"Simple Chatbot Flow\"]}),`\n`,(0,e.jsxs)(n.p,{children:[\"Before we jump into the tutorial, let\\u2019s see the scenario for the conversation. We will create a chatbot using \",(0,e.jsx)(n.em,{children:\"keywords\"}),' which when customers enter \"1\" to end the conversation or \\u201C2\\u201D to do the handover.']}),`\n`,(0,e.jsxs)(n.h3,{id:\"conversation-flow-table\",children:[(0,e.jsx)(n.a,{className:\"anchor\",href:\"#conversation-flow-table\",children:(0,e.jsx)(n.span,{className:\"icon icon-link\"})}),\"Conversation Flow Table\"]}),`\n`,(0,e.jsxs)(g,{children:[(0,e.jsx)(u,{children:(0,e.jsxs)(m,{children:[(0,e.jsx)(p,{children:\"Scenario Flow \"}),(0,e.jsx)(p,{children:(0,e.jsxs)(n.p,{children:[\"Details \",(0,e.jsx)(\"br\",{}),`\n(Each row represents 1 bubble message)`]})})]})}),(0,e.jsxs)(w,{children:[(0,e.jsxs)(h,{children:[(0,e.jsx)(c,{children:\"Greetings\"}),(0,e.jsxs)(c,{children:[(0,e.jsxs)(n.p,{children:[\"Halo, selamat datang di layanan CS Bank ABC \\u{1F60A} \",(0,e.jsx)(\"br\",{})]}),(0,e.jsx)(\"br\",{}),(0,e.jsxs)(n.p,{children:[\"Apakah ingin dihubungkan ke CS Bank ABC yang sedang available? \",(0,e.jsx)(\"br\",{})]}),(0,e.jsx)(\"br\",{}),(0,e.jsx)(n.p,{children:\"Ya -- lanjut\"}),(0,e.jsx)(\"br\",{}),(0,e.jsx)(n.p,{children:\"Tidak -- end session\"}),(0,e.jsx)(\"br\",{}),(0,e.jsx)(\"br\",{}),(0,e.jsx)(n.p,{children:\"\\u{1F4A1} Cukup ketik angka pilihannya, ya\"})]})]}),(0,e.jsxs)(h,{children:[(0,e.jsx)(c,{children:'End conversation if customer typing \"2\" '}),`\n`,(0,e.jsx)(c,{children:\"Terima kasih sudah menghubungi Bank ABC \\u{1F60A} \"})]}),(0,e.jsxs)(h,{children:[(0,e.jsx)(c,{children:\"Customer typing \\u201C1\\u201D and chatbot request handover to agent\"}),`\n`,(0,e.jsx)(c,{children:\"Mohon menunggu, ya. Sedang kami hubungkan ke CS Bank ABC yang tersedia! \\u{1F60A} \"})]}),(0,e.jsxs)(h,{children:[(0,e.jsx)(c,{children:\"End session after handover done\"}),`\n`,(0,e.jsx)(c,{children:\"Terima kasih sudah menghubungi Bank ABC \\u{1F60A} \"})]})]})]}),`\n`,(0,e.jsxs)(n.h2,{id:\"create-project\",children:[(0,e.jsx)(n.a,{className:\"anchor\",href:\"#create-project\",children:(0,e.jsx)(n.span,{className:\"icon icon-link\"})}),\"Create Project\"]}),`\n`,(0,e.jsxs)(n.h3,{id:\"objective-register-your-new-account-and-login-to-the-platform\",children:[(0,e.jsx)(n.a,{className:\"anchor\",href:\"#objective-register-your-new-account-and-login-to-the-platform\",children:(0,e.jsx)(n.span,{className:\"icon icon-link\"})}),\"Objective: Register your new account and login to the Platform\"]}),`\n`,(0,e.jsxs)(n.ol,{children:[`\n`,(0,e.jsxs)(n.li,{children:[`\n`,(0,e.jsxs)(n.p,{children:[\"Go to \",(0,e.jsx)(\"a\",{href:\"https://platform.kata.ai\",target:\"_blank\",children:(0,e.jsx)(n.a,{href:\"https://platform.kata.ai\",children:\"https://platform.kata.ai\"})}),\" and click \",(0,e.jsx)(n.strong,{children:\"Sign Up\"}),\" to create new account\"]}),`\n`]}),`\n`,(0,e.jsxs)(n.li,{children:[`\n`,(0,e.jsxs)(n.p,{children:[\"Input required fields in sign up page: \",(0,e.jsx)(n.strong,{children:\"Username, email address, role and captcha\"})]}),`\n`]}),`\n`,(0,e.jsxs)(n.li,{children:[`\n`,(0,e.jsx)(n.p,{children:\"Go to your registered email\\u2019s inbox. You will receive an email to verify your account and input your password\"}),`\n`]}),`\n`,(0,e.jsxs)(n.li,{children:[`\n`,(0,e.jsxs)(n.p,{children:[\"When you click the \",(0,e.jsx)(n.strong,{children:\"Confirm Email\"}),\" button in the verification email, you will be redirected to setup password. Insert your password and confirm the password.\"]}),`\n`]}),`\n`,(0,e.jsxs)(n.li,{children:[`\n`,(0,e.jsxs)(n.p,{children:[\"You will be redirected to the Login \",(0,e.jsx)(n.strong,{children:\"Page\"}),\". Input your username and password to continue.\"]}),`\n`]}),`\n`]}),`\n`,(0,e.jsxs)(n.h3,{id:\"objective-create-new-chatbot-project\",children:[(0,e.jsx)(n.a,{className:\"anchor\",href:\"#objective-create-new-chatbot-project\",children:(0,e.jsx)(n.span,{className:\"icon icon-link\"})}),\"Objective: Create new chatbot project\"]}),`\n`,(0,e.jsxs)(n.h4,{id:\"login-to-kata-platform-and-create-project\",children:[(0,e.jsx)(n.a,{className:\"anchor\",href:\"#login-to-kata-platform-and-create-project\",children:(0,e.jsx)(n.span,{className:\"icon icon-link\"})}),\"Login to Kata Platform and create project\"]}),`\n`,(0,e.jsxs)(n.ol,{children:[`\n`,(0,e.jsxs)(n.li,{children:[`\n`,(0,e.jsxs)(n.p,{children:[\"Open your browser, then open the URL \",(0,e.jsx)(\"a\",{href:\"https://platform.kata.ai/login\",target:\"_blank\",children:(0,e.jsx)(n.a,{href:\"https://platform.kata.ai/login\",children:\"https://platform.kata.ai/login\"})}),\" and enter your username & password.\"]}),`\n`]}),`\n`,(0,e.jsxs)(n.li,{children:[`\n`,(0,e.jsxs)(n.p,{children:[\"Click \",(0,e.jsx)(n.strong,{children:'\"Login\"'}),\" to continue.\"]}),`\n`]}),`\n`,(0,e.jsxs)(n.li,{children:[`\n`,(0,e.jsxs)(n.p,{children:[\"Click on \",(0,e.jsx)(n.strong,{children:'\"Create Project\"'}),\" and fill in the form. Each project contains one bot design, one NL, and one CMS.\"]}),`\n`]}),`\n`]}),`\n`,(0,e.jsxs)(n.h1,{id:\"create-greetings-flow\",children:[(0,e.jsx)(n.a,{className:\"anchor\",href:\"#create-greetings-flow\",children:(0,e.jsx)(n.span,{className:\"icon icon-link\"})}),\"Create Greetings Flow\"]}),`\n`,(0,e.jsxs)(n.h3,{id:\"objective-define-a-flow\",children:[(0,e.jsx)(n.a,{className:\"anchor\",href:\"#objective-define-a-flow\",children:(0,e.jsx)(n.span,{className:\"icon icon-link\"})}),\"Objective: Define a flow\"]}),`\n`,(0,e.jsxs)(n.h4,{id:\"create-a-flow-name-handover-we-will-use-1-flow-for-this-simple-bot\",children:[(0,e.jsx)(n.a,{className:\"anchor\",href:\"#create-a-flow-name-handover-we-will-use-1-flow-for-this-simple-bot\",children:(0,e.jsx)(n.span,{className:\"icon icon-link\"})}),'Create a flow name \"Handover\". We will use 1 flow for this simple bot']}),`\n`,(0,e.jsxs)(n.ol,{children:[`\n`,(0,e.jsxs)(n.li,{children:[`\n`,(0,e.jsxs)(n.p,{children:[\"Click \",(0,e.jsx)(n.strong,{children:'\"Create Flow\"'}),\" button in current screen\"]}),`\n`]}),`\n`,(0,e.jsxs)(n.li,{children:[`\n`,(0,e.jsxs)(n.p,{children:['Create flow \"Handover\", other fields are left blank. Then, click ',(0,e.jsx)(n.strong,{children:\"Create\"}),\".\"]}),`\n`]}),`\n`]}),`\n`,(0,e.jsxs)(n.h3,{id:\"objective-create-greetings-state-to-define-how-to-respond\",children:[(0,e.jsx)(n.a,{className:\"anchor\",href:\"#objective-create-greetings-state-to-define-how-to-respond\",children:(0,e.jsx)(n.span,{className:\"icon icon-link\"})}),\"Objective: Create greetings state to define how to respond\"]}),`\n`,(0,e.jsxs)(n.h4,{id:\"create-init-state\",children:[(0,e.jsx)(n.a,{className:\"anchor\",href:\"#create-init-state\",children:(0,e.jsx)(n.span,{className:\"icon icon-link\"})}),'Create \"init\" state']}),`\n`,(0,e.jsxs)(n.ol,{children:[`\n`,(0,e.jsxs)(n.li,{children:[`\n`,(0,e.jsx)(n.p,{children:'Click \"+\" icon in bottom right to create new state'}),`\n`]}),`\n`,(0,e.jsxs)(n.li,{children:[`\n`,(0,e.jsx)(n.p,{children:'Create state \"init\" and click toggle to turn on \\u201CInitial State\\u201D and other fields are left blank. Then, click Create.'}),`\n`]}),`\n`]}),`\n`,(0,e.jsxs)(n.h4,{id:\"create-greetings-as-bot-response-to-show-keywords-menu\",children:[(0,e.jsx)(n.a,{className:\"anchor\",href:\"#create-greetings-as-bot-response-to-show-keywords-menu\",children:(0,e.jsx)(n.span,{className:\"icon icon-link\"})}),'Create \"greetings\" as bot response to show keywords menu']}),`\n`,(0,e.jsxs)(n.ol,{children:[`\n`,(0,e.jsxs)(n.li,{children:[`\n`,(0,e.jsxs)(n.p,{children:[\"Create another state by clicking the \",(0,e.jsx)(n.strong,{children:'\"+\"'}),\" icon in the bottom right to create a new state named \\u201Cgreetings\\u201D\"]}),`\n`]}),`\n`,(0,e.jsxs)(n.li,{children:[`\n`,(0,e.jsxs)(n.p,{children:[\"Click \",(0,e.jsx)(n.strong,{children:'\"Add action\"'}),\", then click \",(0,e.jsx)(n.strong,{children:\"\\u201C+\\u201D\"}),\" in the action box to create a new action\"]}),`\n`]}),`\n`,(0,e.jsxs)(n.li,{children:[`\n`,(0,e.jsx)(n.p,{children:'When all actions available are shown, then choose \"Text\"'}),`\n`]}),`\n`,(0,e.jsxs)(n.li,{children:[`\n`,(0,e.jsx)(n.p,{children:'Input action name \"greetings\"'}),`\n`]}),`\n`,(0,e.jsxs)(n.li,{children:[`\n`,(0,e.jsxs)(n.p,{children:[\"Next, click the \",(0,e.jsx)(n.strong,{children:\"Add Variant\"}),\" button to fill in with this text:\"]}),`\n`]}),`\n`]}),`\n`,(0,e.jsx)(n.pre,{children:(0,e.jsx)(n.code,{className:\"code-highlight\",children:(0,e.jsx)(n.span,{className:\"code-line\",children:`Halo, selamat datang di layanan CS Bank ABC \\u{1F60A}\\\\n\\\\n Apakah ingin dihubungkan ke CS Bank ABC yang sedang available?\\\\n\\\\n1. Ya\\\\n2. Tidak\\\\n\\\\n\\u{1F4A1} Cukup ketik angka pilihannya, ya\n`})})}),`\n`,(0,e.jsxs)(n.ol,{start:\"6\",children:[`\n`,(0,e.jsxs)(n.li,{children:[`\n`,(0,e.jsxs)(n.p,{children:[\"Click \",(0,e.jsx)(n.strong,{children:\"Create Action\"})]}),`\n`]}),`\n`,(0,e.jsxs)(n.li,{children:[`\n`,(0,e.jsxs)(n.p,{children:[\"To finalize the state creation, click \",(0,e.jsx)(n.strong,{children:\"Create\"}),\" in state drawer\"]}),`\n`]}),`\n`]}),`\n`,(0,e.jsxs)(n.h3,{id:\"objective-catch-end-users-message-when-greet-the-bot\",children:[(0,e.jsx)(n.a,{className:\"anchor\",href:\"#objective-catch-end-users-message-when-greet-the-bot\",children:(0,e.jsx)(n.span,{className:\"icon icon-link\"})}),\"Objective: Catch end-user\\u2019s message when greet the bot\"]}),`\n`,(0,e.jsxs)(n.h4,{id:\"create-greetings-keywords-to-build-understanding-in-chatbots-when-end-users-greet-the-bot-we-will-use-the-nlus-feature-to-create-the-keywords\",children:[(0,e.jsx)(n.a,{className:\"anchor\",href:\"#create-greetings-keywords-to-build-understanding-in-chatbots-when-end-users-greet-the-bot-we-will-use-the-nlus-feature-to-create-the-keywords\",children:(0,e.jsx)(n.span,{className:\"icon icon-link\"})}),'Create \"greetings\" keywords to build understanding in chatbots when end-user\\u2019s greet the bot. We will use the NLUs feature to create the keywords.']}),`\n`,(0,e.jsxs)(n.ol,{children:[`\n`,(0,e.jsxs)(n.li,{children:[`\n`,(0,e.jsxs)(n.p,{children:[\"Go to the menu \",(0,e.jsx)(n.strong,{children:'\"NLUs\"'}),\" which is placed under the \\u201CConversation Flows\\u201D menu. Your screen will be switched to create NLUs\"]}),`\n`]}),`\n`,(0,e.jsxs)(n.li,{children:[`\n`,(0,e.jsxs)(n.p,{children:[\"Click \",(0,e.jsx)(n.strong,{children:\"Create NLU\"})]}),`\n`]}),`\n`,(0,e.jsxs)(n.li,{children:[`\n`,(0,e.jsx)(n.p,{children:\"Then, fill in the fields as follow\"}),`\n`]}),`\n`]}),`\n`,(0,e.jsx)(n.pre,{children:(0,e.jsxs)(n.code,{className:\"code-highlight\",children:[(0,e.jsx)(n.span,{className:\"code-line\",children:`NLU Name: greetings\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`NLU Type: Keyword\n`})]})}),`\n`,(0,e.jsxs)(n.ol,{start:\"4\",children:[`\n`,(0,e.jsxs)(n.li,{children:[\"Next, click \",(0,e.jsx)(n.strong,{children:'\"Add Keyword\"'}),\" to define any words to trigger the bot. Fill in the main keyword as follow\"]}),`\n`]}),`\n`,(0,e.jsx)(n.pre,{children:(0,e.jsx)(n.code,{className:\"code-highlight\",children:(0,e.jsx)(n.span,{className:\"code-line\",children:`Main keyword: hi\n`})})}),`\n`,(0,e.jsxs)(n.ol,{start:\"5\",children:[`\n`,(0,e.jsx)(n.li,{children:'Add a new word by pressing \"enter\" on your keyboard. Every time you write a new word, press \\u201Center\\u201D on your keyboard to save the word. Add these words'}),`\n`]}),`\n`,(0,e.jsx)(a,{src:\"/assets/images/tutorials/simple-handover/image_1.webp\",alt:\"Simple Handover\",caption:{title:\"Figure 1.\",description:\"Add more keywords for greetings\"},naturalHeight:272,naturalWidth:818}),`\n`,(0,e.jsxs)(n.ol,{start:\"6\",children:[`\n`,(0,e.jsxs)(n.li,{children:[\"Click \",(0,e.jsx)(n.strong,{children:'\"Create\"'}),\" to save the NLUs\"]}),`\n`]}),`\n`,(0,e.jsxs)(n.h4,{id:\"create-greetings-intent-to-catch-users-input\",children:[(0,e.jsx)(n.a,{className:\"anchor\",href:\"#create-greetings-intent-to-catch-users-input\",children:(0,e.jsx)(n.span,{className:\"icon icon-link\"})}),'Create \"greetings\" intent to catch user\\u2019s input']}),`\n`,(0,e.jsxs)(n.ol,{children:[`\n`,(0,e.jsxs)(n.li,{children:[`\n`,(0,e.jsx)(n.p,{children:\"Click the Intent tab which is placed next to the Conversation Flows sidebar.\"}),`\n`]}),`\n`,(0,e.jsxs)(n.li,{children:[`\n`,(0,e.jsxs)(n.p,{children:[\"Click \",(0,e.jsx)(n.strong,{children:\"Create Intent\"}),\" button\"]}),`\n`]}),`\n`,(0,e.jsxs)(n.li,{children:[`\n`,(0,e.jsx)(n.p,{children:'Fill in the intent as follows. The choice of \"Intent type\" is text, which means it will catch incoming messages with text only. On classifier, use \\u201Cgreetings\\u201D NLUs that we\\u2019ve created in previous step to connect the intent with create keywords for greetings'}),`\n`]}),`\n`]}),`\n`,(0,e.jsx)(a,{caption:{title:\"Figure 2.\",description:\"Create intent and create mapping with greetings keyword\"},src:\"/assets/images/tutorials/simple-handover/image_2.webp\",alt:\"Simple Handover\",naturalHeight:1496,naturalWidth:990}),`\n`,(0,e.jsxs)(n.ol,{start:\"4\",children:[`\n`,(0,e.jsxs)(n.li,{children:[\"Then, click \",(0,e.jsx)(n.strong,{children:\"Create\"}),\".\"]}),`\n`]}),`\n`,(0,e.jsxs)(n.h3,{id:\"objective-connect-init-and-greetings-states-by-creating-a-transition\",children:[(0,e.jsx)(n.a,{className:\"anchor\",href:\"#objective-connect-init-and-greetings-states-by-creating-a-transition\",children:(0,e.jsx)(n.span,{className:\"icon icon-link\"})}),'Objective: Connect \"init\" and \\u201Cgreetings\\u201D states by creating a transition']}),`\n`,(0,e.jsxs)(n.h4,{id:\"create-a-transition-to-connect-init-and-greetings-states-the-transition-will-define-in-which-condition-the-greetings-state-including-the-actions-state-will-be-executed\",children:[(0,e.jsx)(n.a,{className:\"anchor\",href:\"#create-a-transition-to-connect-init-and-greetings-states-the-transition-will-define-in-which-condition-the-greetings-state-including-the-actions-state-will-be-executed\",children:(0,e.jsx)(n.span,{className:\"icon icon-link\"})}),'Create a transition to connect \"',(0,e.jsx)(n.em,{children:\"init\"}),'\" and \\u201C',(0,e.jsx)(n.em,{children:\"greetings\"}),\"\\u201D states. The transition will define in which condition the greetings state, including the actions\\u2019 state, will be executed.\"]}),`\n`,(0,e.jsxs)(n.ol,{children:[`\n`,(0,e.jsxs)(n.li,{children:[`\n`,(0,e.jsxs)(n.p,{children:['Pull a line from the \"init\" state and drag it to the \\u201Cgreetings\\u201D state. If you succeed, then it will show a ',(0,e.jsx)(n.strong,{children:\"Create Transition\"}),\" drawer\"]}),`\n`]}),`\n`,(0,e.jsxs)(n.li,{children:[`\n`,(0,e.jsx)(n.p,{children:\"Fill in the transition as follow\"}),`\n`]}),`\n`]}),`\n`,(0,e.jsx)(a,{caption:{title:\"Figure 3.\",description:\"Create transition\"},src:\"/assets/images/tutorials/simple-handover/image_3.webp\",alt:\"Simple Handover\",naturalHeight:834,naturalWidth:930}),`\n`,(0,e.jsxs)(n.ol,{start:\"3\",children:[`\n`,(0,e.jsxs)(n.li,{children:[\"Click \",(0,e.jsx)(n.strong,{children:'\"Create Transition\"'})]}),`\n`]}),`\n`,(0,e.jsxs)(n.h2,{id:\"catch-end-users-typing-when-choosing-menu\",children:[(0,e.jsx)(n.a,{className:\"anchor\",href:\"#catch-end-users-typing-when-choosing-menu\",children:(0,e.jsx)(n.span,{className:\"icon icon-link\"})}),\"Catch End-user\\u2019s Typing when Choosing Menu\"]}),`\n`,(0,e.jsxs)(n.h3,{id:\"objective-catch-end-users-message-when-choosing-menu-by-typing-1-or-2\",children:[(0,e.jsx)(n.a,{className:\"anchor\",href:\"#objective-catch-end-users-message-when-choosing-menu-by-typing-1-or-2\",children:(0,e.jsx)(n.span,{className:\"icon icon-link\"})}),'Objective: Catch end-user\\u2019s message when choosing menu by typing \"1\" or \\u201C2\\u201D']}),`\n`,(0,e.jsxs)(n.h4,{id:\"create-menu-keywords\",children:[(0,e.jsx)(n.a,{className:\"anchor\",href:\"#create-menu-keywords\",children:(0,e.jsx)(n.span,{className:\"icon icon-link\"})}),'Create \"menu\" keywords']}),`\n`,(0,e.jsxs)(n.ol,{children:[`\n`,(0,e.jsxs)(n.li,{children:[`\n`,(0,e.jsxs)(n.p,{children:[\"Go to the menu \",(0,e.jsx)(n.strong,{children:'\"NLUs\"'}),\" which is placed under the \\u201CConversation Flows\\u201D menu. Your screen will be switched to create NLUs\"]}),`\n`]}),`\n`,(0,e.jsxs)(n.li,{children:[`\n`,(0,e.jsxs)(n.p,{children:[\"Click \",(0,e.jsx)(n.strong,{children:\"Create NLU\"})]}),`\n`]}),`\n`,(0,e.jsxs)(n.li,{children:[`\n`,(0,e.jsx)(n.p,{children:\"Then, fill in the fields as follow\"}),`\n`]}),`\n`]}),`\n`,(0,e.jsx)(n.pre,{children:(0,e.jsxs)(n.code,{className:\"code-highlight\",children:[(0,e.jsx)(n.span,{className:\"code-line\",children:`NLU Name: menu\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`NLU Type: Keyword\n`})]})}),`\n`,(0,e.jsxs)(n.ol,{start:\"4\",children:[`\n`,(0,e.jsxs)(n.li,{children:[\"Next, click \",(0,e.jsx)(n.strong,{children:'\"Add Keyword\"'}),\" to define any words to trigger the bot. Fill in the main keyword as follow\"]}),`\n`]}),`\n`,(0,e.jsx)(n.pre,{children:(0,e.jsx)(n.code,{className:\"code-highlight\",children:(0,e.jsx)(n.span,{className:\"code-line\",children:`Main keyword: satu\n`})})}),`\n`,(0,e.jsxs)(n.ol,{start:\"5\",children:[`\n`,(0,e.jsx)(n.li,{children:'Add a new word by pressing \"enter\" on your keyboard. Every time you write a new word, press \\u201Center\\u201D on your keyboard to save the word. Add these words. \\u201Csatu\\u201D and \\u201Cdua\\u201D as the main keywords mean they define what your end-users will be inputted when choose menu'}),`\n`]}),`\n`,(0,e.jsx)(a,{caption:{title:\"Figure 4.\",description:\"Create keywords to identify input from chatbot users when choosing menu\"},src:\"/assets/images/tutorials/simple-handover/image_4.webp\",alt:\"Simple Handover\",naturalHeight:1264,naturalWidth:960}),`\n`,(0,e.jsxs)(n.ol,{start:\"6\",children:[`\n`,(0,e.jsxs)(n.li,{children:[\"Click \",(0,e.jsx)(n.strong,{children:'\"Create\"'}),\" to save the NLUs\"]}),`\n`]}),`\n`,(0,e.jsxs)(n.h4,{id:\"create-an-intent-menu-to-catch-the-end-users-input\",children:[(0,e.jsx)(n.a,{className:\"anchor\",href:\"#create-an-intent-menu-to-catch-the-end-users-input\",children:(0,e.jsx)(n.span,{className:\"icon icon-link\"})}),`Create an intent \"menu\" to catch the end-user's input`]}),`\n`,(0,e.jsxs)(n.ol,{children:[`\n`,(0,e.jsxs)(n.li,{children:[`\n`,(0,e.jsx)(n.p,{children:\"Click the Intent tab which is placed next to the Conversation Flows sidebar.\"}),`\n`]}),`\n`,(0,e.jsxs)(n.li,{children:[`\n`,(0,e.jsxs)(n.p,{children:[\"Click \",(0,e.jsx)(n.strong,{children:\"Create Intent\"}),\" button\"]}),`\n`]}),`\n`,(0,e.jsxs)(n.li,{children:[`\n`,(0,e.jsx)(n.p,{children:`Fill in the intent as follows. This intent will catch the end-user's input after typing \"1\" or \\u201C2\\u201D. Adding a classifier with \\u201Cmenu\\u201D to define this intent will be executed whenever a sentence has the \\u201Cmenu\\u201D keyword. Add attributes and choose NLU \\u201Cmenu\\u201D, because we have 2 main keywords that need to be understood by the intent to execute the handover path or end conversation path.`}),`\n`]}),`\n`]}),`\n`,(0,e.jsx)(a,{caption:{title:\"Figure 5.\",description:\"Create intent for showing main menu and mapping from created keywords\"},src:\"/assets/images/tutorials/simple-handover/image_5.webp\",alt:\"Simple Handover\",naturalHeight:1484,naturalWidth:722}),`\n`,(0,e.jsxs)(n.ol,{start:\"4\",children:[`\n`,(0,e.jsxs)(n.li,{children:[\"Then, click \",(0,e.jsx)(n.strong,{children:\"Create\"}),\".\"]}),`\n`]}),`\n`,(0,e.jsxs)(n.h2,{id:\"create-handover-to-human-agent-flow\",children:[(0,e.jsx)(n.a,{className:\"anchor\",href:\"#create-handover-to-human-agent-flow\",children:(0,e.jsx)(n.span,{className:\"icon icon-link\"})}),\"Create Handover to Human Agent Flow\"]}),`\n`,(0,e.jsxs)(n.h3,{id:\"objective-create-a-flow-that-end-user-can-request-handover-to-human-agents-by-using-handover-api\",children:[(0,e.jsx)(n.a,{className:\"anchor\",href:\"#objective-create-a-flow-that-end-user-can-request-handover-to-human-agents-by-using-handover-api\",children:(0,e.jsx)(n.span,{className:\"icon icon-link\"})}),\"Objective: Create a flow that end-user can request handover to human agents by using Handover API\"]}),`\n`,(0,e.jsxs)(n.h4,{id:\"create-handover-state\",children:[(0,e.jsx)(n.a,{className:\"anchor\",href:\"#create-handover-state\",children:(0,e.jsx)(n.span,{className:\"icon icon-link\"})}),\"Create handover state\"]}),`\n`,(0,e.jsxs)(n.ol,{children:[`\n`,(0,e.jsxs)(n.li,{children:[`\n`,(0,e.jsxs)(n.p,{children:[\"Click \",(0,e.jsx)(n.strong,{children:'\"+\"'}),\" icon in bottom right to create new state\"]}),`\n`]}),`\n`,(0,e.jsxs)(n.li,{children:[`\n`,(0,e.jsx)(n.p,{children:'Fill in the state name with \"handover\" and activate toggle \\u201CEnd state\\u201D'}),`\n`]}),`\n`]}),`\n`,(0,e.jsxs)(n.h4,{id:\"create-bot-response-to-inform-end-user-that-the-handover-request-has-been-received-and-waiting-for-agents-to-reply\",children:[(0,e.jsx)(n.a,{className:\"anchor\",href:\"#create-bot-response-to-inform-end-user-that-the-handover-request-has-been-received-and-waiting-for-agents-to-reply\",children:(0,e.jsx)(n.span,{className:\"icon icon-link\"})}),\"Create bot response to inform end-user that the handover request has been received and waiting for agents to reply\"]}),`\n`,(0,e.jsxs)(n.ol,{children:[`\n`,(0,e.jsxs)(n.li,{children:[`\n`,(0,e.jsxs)(n.p,{children:[\"Click \",(0,e.jsx)(n.strong,{children:'\"+\"'}),\" in action box to create new action\"]}),`\n`]}),`\n`,(0,e.jsxs)(n.li,{children:[`\n`,(0,e.jsx)(n.p,{children:'When all actions available are shown, then choose \"Text\"'}),`\n`]}),`\n`,(0,e.jsxs)(n.li,{children:[`\n`,(0,e.jsx)(n.p,{children:'Input action name \"waitForAgent\"'}),`\n`]}),`\n`,(0,e.jsxs)(n.li,{children:[`\n`,(0,e.jsxs)(n.p,{children:[\"Next, click the \",(0,e.jsx)(n.strong,{children:\"Add Variant\"}),\" button to fill in with this text:\"]}),`\n`]}),`\n`]}),`\n`,(0,e.jsx)(n.pre,{children:(0,e.jsx)(n.code,{className:\"code-highlight\",children:(0,e.jsx)(n.span,{className:\"code-line\",children:`Mohon menunggu, ya. Sedang kami hubungkan ke CS Bank ABC yang tersedia! \\u{1F60A}\n`})})}),`\n`,(0,e.jsxs)(n.ol,{start:\"5\",children:[`\n`,(0,e.jsxs)(n.li,{children:[\"Click \",(0,e.jsx)(n.strong,{children:\"Create Action\"})]}),`\n`]}),`\n`,(0,e.jsxs)(n.h4,{id:\"use-handover-api-to-send-handover-request-to-omnichat\",children:[(0,e.jsx)(n.a,{className:\"anchor\",href:\"#use-handover-api-to-send-handover-request-to-omnichat\",children:(0,e.jsx)(n.span,{className:\"icon icon-link\"})}),\"Use Handover API to send handover request to Omnichat\"]}),`\n`,(0,e.jsxs)(n.ol,{children:[`\n`,(0,e.jsxs)(n.li,{children:[`\n`,(0,e.jsxs)(n.p,{children:[\"Create another action by clicking \",(0,e.jsx)(n.strong,{children:'\"Add action\"'})]}),`\n`]}),`\n`,(0,e.jsxs)(n.li,{children:[`\n`,(0,e.jsxs)(n.p,{children:[\"Click \",(0,e.jsx)(n.strong,{children:'\"+\"'}),\" in action box to create new action\"]}),`\n`]}),`\n`,(0,e.jsxs)(n.li,{children:[`\n`,(0,e.jsx)(n.p,{children:'Fill in action name with \"handover\"'}),`\n`]}),`\n`,(0,e.jsxs)(n.li,{children:[`\n`,(0,e.jsx)(n.p,{children:'When all actions available are shown, then choose \"API\"'}),`\n`]}),`\n`,(0,e.jsxs)(n.li,{children:[`\n`,(0,e.jsxs)(n.p,{children:[\"Choose \",(0,e.jsx)(n.strong,{children:\"Handover API\"})]}),`\n`]}),`\n`,(0,e.jsxs)(n.li,{children:[`\n`,(0,e.jsxs)(n.p,{children:[\"Click \",(0,e.jsx)(n.strong,{children:\"Create Action\"}),\" button\"]}),`\n`]}),`\n`,(0,e.jsxs)(n.li,{children:[`\n`,(0,e.jsxs)(n.p,{children:[\"To finalize this step when creating a new state, click the \",(0,e.jsx)(n.strong,{children:\"Create\"}),\" button in the state drawer\"]}),`\n`]}),`\n`]}),`\n`,(0,e.jsxs)(n.h4,{id:\"create-a-transition-to-connect-greetings-and-handover-states\",children:[(0,e.jsx)(n.a,{className:\"anchor\",href:\"#create-a-transition-to-connect-greetings-and-handover-states\",children:(0,e.jsx)(n.span,{className:\"icon icon-link\"})}),'Create a transition to connect \"greetings\" and \\u201Chandover\\u201D states']}),`\n`,(0,e.jsxs)(n.ol,{children:[`\n`,(0,e.jsxs)(n.li,{children:[`\n`,(0,e.jsxs)(n.p,{children:['Pull a line from the \"greetings\" state and drag it to the \\u201Chandover\\u201D state. If you succeed, then it will show a ',(0,e.jsx)(n.strong,{children:\"Create Transitio\"}),\"n drawer\"]}),`\n`]}),`\n`,(0,e.jsxs)(n.li,{children:[`\n`,(0,e.jsxs)(n.p,{children:[`Fill in the transition as follows. This condition means if the end-user's keyword is identified as \"menu\" `,(0,e.jsx)(n.em,{children:\"and\"}),\" they are typing \\u201C1\\u201D, then it will show the \\u201Chandover\\u201D state including the actions\\u2019 state.\"]}),`\n`]}),`\n`]}),`\n`,(0,e.jsx)(a,{caption:{title:\"Figure 6.\",description:'Create transition and mapping if chatbot users choose \"1\", then execute handover state'},src:\"/assets/images/tutorials/simple-handover/image_6.webp\",alt:\"Simple Handover\",naturalHeight:604,naturalWidth:712}),`\n`,(0,e.jsxs)(n.ol,{start:\"3\",children:[`\n`,(0,e.jsxs)(n.li,{children:[\"Click \",(0,e.jsx)(n.strong,{children:\"Create\"})]}),`\n`]}),`\n`,(0,e.jsxs)(n.h2,{id:\"create-end-conversation-flow\",children:[(0,e.jsx)(n.a,{className:\"anchor\",href:\"#create-end-conversation-flow\",children:(0,e.jsx)(n.span,{className:\"icon icon-link\"})}),\"Create End Conversation Flow\"]}),`\n`,(0,e.jsxs)(n.h3,{id:\"objective-create-a-flow-that-end-user-doesnt-want-to-handover-to-agent-and-end-the-conversation\",children:[(0,e.jsx)(n.a,{className:\"anchor\",href:\"#objective-create-a-flow-that-end-user-doesnt-want-to-handover-to-agent-and-end-the-conversation\",children:(0,e.jsx)(n.span,{className:\"icon icon-link\"})}),\"Objective: Create a flow that end-user doesn\\u2019t want to handover to agent and end the conversation\"]}),`\n`,(0,e.jsxs)(n.h4,{id:\"create-end-state-to-cancel-handover-agent-and-finish-the-conversation\",children:[(0,e.jsx)(n.a,{className:\"anchor\",href:\"#create-end-state-to-cancel-handover-agent-and-finish-the-conversation\",children:(0,e.jsx)(n.span,{className:\"icon icon-link\"})}),'Create \"end\" state to cancel handover agent and finish the conversation']}),`\n`,(0,e.jsxs)(n.ol,{children:[`\n`,(0,e.jsxs)(n.li,{children:[`\n`,(0,e.jsxs)(n.p,{children:[\"Click \",(0,e.jsx)(n.strong,{children:'\"+\"'}),\" icon in bottom left to create new state\"]}),`\n`]}),`\n`,(0,e.jsxs)(n.li,{children:[`\n`,(0,e.jsx)(n.p,{children:'Fill in the state name with \"end\" and click toggle \\u201CEnd state\\u201D to set the state as the end of the flow.'}),`\n`]}),`\n`,(0,e.jsxs)(n.li,{children:[`\n`,(0,e.jsxs)(n.p,{children:[\"Click \",(0,e.jsx)(n.strong,{children:'\"Add action\",'}),\" then click \\u201C+\\u201D to create new action\"]}),`\n`]}),`\n`,(0,e.jsxs)(n.li,{children:[`\n`,(0,e.jsx)(n.p,{children:'Choose Text, then fill in the action name with \"end\".'}),`\n`]}),`\n`,(0,e.jsxs)(n.li,{children:[`\n`,(0,e.jsxs)(n.p,{children:[\"Next, click the \",(0,e.jsx)(n.strong,{children:'\"Add Variant\"'}),\" button and input the following text:\"]}),`\n`]}),`\n`]}),`\n`,(0,e.jsx)(n.pre,{children:(0,e.jsx)(n.code,{className:\"code-highlight\",children:(0,e.jsx)(n.span,{className:\"code-line\",children:`Terima kasih sudah menghubungi Bank ABC \\u{1F60A}\n`})})}),`\n`,(0,e.jsxs)(n.ol,{start:\"6\",children:[`\n`,(0,e.jsxs)(n.li,{children:[\"Click \",(0,e.jsx)(n.strong,{children:\"Create\"}),\" to finalize\"]}),`\n`]}),`\n`,(0,e.jsxs)(n.h4,{id:\"create-a-transition-to-connect-greetings-and-end-states\",children:[(0,e.jsx)(n.a,{className:\"anchor\",href:\"#create-a-transition-to-connect-greetings-and-end-states\",children:(0,e.jsx)(n.span,{className:\"icon icon-link\"})}),'Create a transition to connect \"greetings\" and \\u201Cend\\u201D states']}),`\n`,(0,e.jsxs)(n.ol,{children:[`\n`,(0,e.jsxs)(n.li,{children:[`\n`,(0,e.jsx)(n.p,{children:'Pull a line from the \"greetings\" state and drag it to the \\u201Cend\\u201D state. If you succeed, then it will show a Create Transition drawer'}),`\n`]}),`\n`,(0,e.jsxs)(n.li,{children:[`\n`,(0,e.jsxs)(n.p,{children:[`Fill in the transition as follows. This condition means if the end-user's keyword is identified as \"menu\" `,(0,e.jsx)(n.em,{children:\"and\"}),\" they are typing \\u201C2\\u201D, then it will execute the \\u201Cend\\u201D state\"]}),`\n`]}),`\n`]}),`\n`,(0,e.jsx)(a,{caption:{title:\"Figure 7.\",description:'Create transition and mapping if chatbot users choose \"2\", then execute end conversation'},src:\"/assets/images/tutorials/simple-handover/image_7.webp\",alt:\"Simple Handover\",naturalHeight:630,naturalWidth:704}),`\n`,(0,e.jsxs)(n.ol,{start:\"3\",children:[`\n`,(0,e.jsxs)(n.li,{children:[\"Click \",(0,e.jsx)(n.strong,{children:\"Create\"})]}),`\n`]}),`\n`,(0,e.jsxs)(n.h2,{id:\"finalize-your-new-bot\",children:[(0,e.jsx)(n.a,{className:\"anchor\",href:\"#finalize-your-new-bot\",children:(0,e.jsx)(n.span,{className:\"icon icon-link\"})}),\"Finalize Your New Bot\"]}),`\n`,(0,e.jsxs)(n.h3,{id:\"objective-publish-your-bot-to-save-the-chatbot-flow\",children:[(0,e.jsx)(n.a,{className:\"anchor\",href:\"#objective-publish-your-bot-to-save-the-chatbot-flow\",children:(0,e.jsx)(n.span,{className:\"icon icon-link\"})}),\"Objective: Publish your bot to save the chatbot flow\"]}),`\n`,(0,e.jsxs)(n.ol,{children:[`\n`,(0,e.jsxs)(n.li,{children:[`\n`,(0,e.jsxs)(n.p,{children:[\"Click on the \",(0,e.jsx)(n.strong,{children:'\"Publish\"'}),\" button which is placed on top right corner\"]}),`\n`]}),`\n`,(0,e.jsxs)(n.li,{children:[`\n`,(0,e.jsxs)(n.p,{children:[\"Fill in the \",(0,e.jsx)(n.strong,{children:\"change log\"}),'. You can input \"Initial version\" in the change log']}),`\n`]}),`\n`,(0,e.jsxs)(n.li,{children:[`\n`,(0,e.jsxs)(n.p,{children:[\"Click \",(0,e.jsx)(n.strong,{children:\"Publish\"}),\" to save the change log. Lastly, your final chatbot flow will be like this:\"]}),`\n`]}),`\n`]}),`\n`,(0,e.jsx)(a,{caption:{title:\"Figure 8.\",description:\"Final conversation flow\"},src:\"/assets/images/tutorials/simple-handover/image_8.webp\",alt:\"Simple Handover\",naturalHeight:634,naturalWidth:2048}),`\n`,(0,e.jsxs)(n.h3,{id:\"objective-testing-your-bot-in-emulator\",children:[(0,e.jsx)(n.a,{className:\"anchor\",href:\"#objective-testing-your-bot-in-emulator\",children:(0,e.jsx)(n.span,{className:\"icon icon-link\"})}),\"Objective: Testing your bot in emulator\"]}),`\n`,(0,e.jsxs)(n.ol,{children:[`\n`,(0,e.jsxs)(n.li,{children:[`\n`,(0,e.jsxs)(n.p,{children:[\"On the bottom of your right screen, there is a small button named \",(0,e.jsx)(n.strong,{children:'\"Test NLU\".'}),\" Click the \",(0,e.jsx)(n.strong,{children:\"button\"}),\" to start.\"]}),`\n`]}),`\n`,(0,e.jsxs)(n.li,{children:[`\n`,(0,e.jsx)(n.p,{children:'You can try to test your bot by inputting a message in the text bot. Say \"hi\" to your bot. If it succeeds, your bot will reply as follows'}),`\n`]}),`\n`]}),`\n`,(0,e.jsx)(a,{caption:{title:\"Figure 9.\",description:'Testing your bot in emulator by typing \"hi\"'},src:\"/assets/images/tutorials/simple-handover/image_9.webp\",alt:\"Simple Handover\",naturalHeight:1192,naturalWidth:1914}),`\n`,(0,e.jsx)(a,{caption:{title:\"Figure 10.\",description:'Testing bot by typing \"1\" or \"2\"'},src:\"/assets/images/tutorials/simple-handover/image_10.webp\",alt:\"Simple Handover\",naturalHeight:1148,naturalWidth:1878}),`\n`,(0,e.jsxs)(n.ol,{start:\"3\",children:[`\n`,(0,e.jsxs)(n.li,{children:[\"If you want to \",(0,e.jsx)(n.strong,{children:\"restart\"}),\" the session, click refresh icon which is placed at the bottom\"]}),`\n`]}),`\n`,(0,e.jsxs)(n.h3,{id:\"objective-deploy-your-bot\",children:[(0,e.jsx)(n.a,{className:\"anchor\",href:\"#objective-deploy-your-bot\",children:(0,e.jsx)(n.span,{className:\"icon icon-link\"})}),\"Objective: Deploy your bot\"]}),`\n`,(0,e.jsxs)(n.h4,{id:\"create-new-deployment\",children:[(0,e.jsx)(n.a,{className:\"anchor\",href:\"#create-new-deployment\",children:(0,e.jsx)(n.span,{className:\"icon icon-link\"})}),\"Create new deployment\"]}),`\n`,(0,e.jsxs)(n.ol,{children:[`\n`,(0,e.jsxs)(n.li,{children:[`\n`,(0,e.jsxs)(n.p,{children:[\"Go to the \",(0,e.jsx)(n.strong,{children:'\"Deploy\"'}),\" menu in the left sidebar\"]}),`\n`]}),`\n`,(0,e.jsxs)(n.li,{children:[`\n`,(0,e.jsxs)(n.p,{children:[\"In this page, click on the \",(0,e.jsx)(n.strong,{children:'\"New Deployment\"'}),\" button which is placed in the top right corner. If you successfully clicked, it will show a create deployment drawer\"]}),`\n`]}),`\n`,(0,e.jsxs)(n.li,{children:[`\n`,(0,e.jsx)(n.p,{children:\"Choose any deployment version you want to deploy and fill in the change log. Or you can simply follow this screenshot\"}),`\n`]}),`\n`]}),`\n`,(0,e.jsx)(a,{caption:{title:\"Figure 11.\",description:\"Create new deployment\"},src:\"/assets/images/tutorials/simple-handover/image_11.webp\",alt:\"Simple Handover\",naturalHeight:1890,naturalWidth:1338}),`\n`,(0,e.jsxs)(n.ol,{start:\"4\",children:[`\n`,(0,e.jsxs)(n.li,{children:[\"Click \",(0,e.jsx)(n.strong,{children:\"Submit\"}),\" to finish the deployment\"]}),`\n`]}),`\n`,(0,e.jsxs)(n.h4,{id:\"create-new-environment-as-prerequisites-to-deploy-the-bot-to-channel\",children:[(0,e.jsx)(n.a,{className:\"anchor\",href:\"#create-new-environment-as-prerequisites-to-deploy-the-bot-to-channel\",children:(0,e.jsx)(n.span,{className:\"icon icon-link\"})}),\"Create new environment as prerequisites to deploy the bot to channel\"]}),`\n`,(0,e.jsxs)(n.ol,{children:[`\n`,(0,e.jsxs)(n.li,{children:[\"Go to the \",(0,e.jsx)(n.strong,{children:\"Environment\"}),' menu which is placed under the current menu (\"Overview\"). If you successfully entered the Environment menu, you will see a page like this. These 3 environments represent that your chatbot will be tested in development or staging first, before go live as in Production stage']}),`\n`]}),`\n`,(0,e.jsx)(a,{caption:{title:\"Figure 12.\",description:\"Set up environment\"},src:\"/assets/images/tutorials/simple-handover/image_12.webp\",alt:\"Simple Handover\",naturalHeight:647,naturalWidth:2048}),`\n`,(0,e.jsxs)(n.ol,{start:\"2\",children:[`\n`,(0,e.jsxs)(n.li,{children:[`\n`,(0,e.jsxs)(n.p,{children:[\"Click the \",(0,e.jsx)(n.strong,{children:\"Create Environment\"}),\" button in the Development environment and you will see a drawer to create new environment\"]}),`\n`]}),`\n`,(0,e.jsxs)(n.li,{children:[`\n`,(0,e.jsxs)(n.p,{children:[\"Choose the \",(0,e.jsx)(n.strong,{children:\"development version\"}),\" you want to (in this tutorial we will use the 1.0.0 version)\"]}),`\n`]}),`\n`,(0,e.jsxs)(n.li,{children:[`\n`,(0,e.jsxs)(n.p,{children:[\"Fill in the \",(0,e.jsx)(n.strong,{children:\"environment URL\"}),\". This environment URL will be useful if you use our CMS feature, \",(0,e.jsx)(n.a,{href:\"https://docs.kata.ai/cms-studio/about/'\",children:\"learn more about CMS\"}),\".\"]}),`\n`]}),`\n`,(0,e.jsxs)(n.li,{children:[`\n`,(0,e.jsxs)(n.p,{children:[\"Click \",(0,e.jsx)(n.strong,{children:\"Create\"}),\" to finalize\"]}),`\n`]}),`\n`,(0,e.jsxs)(n.li,{children:[`\n`,(0,e.jsxs)(n.p,{children:[\"You will notice the button is changed into the Create \",(0,e.jsx)(n.strong,{children:\"Channel\"}),\" button.\"]}),`\n`]}),`\n`]}),`\n`,(0,e.jsxs)(n.p,{children:[\"In this step, you will need an Omnichat \",(0,e.jsx)(\"a\",{href:\"https://kata-omnichat.kata.ai\",target:\"_blank\",children:(0,e.jsx)(n.a,{href:\"https://omnichat.kata.ai\",children:\"https://omnichat.kata.ai\"})}),\" account and Omnichat inbox to deploy the bot. Let\\u2019s get started!\"]}),`\n`,(0,e.jsxs)(n.h2,{id:\"create-inbox-in-omnichat\",children:[(0,e.jsx)(n.a,{className:\"anchor\",href:\"#create-inbox-in-omnichat\",children:(0,e.jsx)(n.span,{className:\"icon icon-link\"})}),\"Create Inbox in Omnichat\"]}),`\n`,(0,e.jsx)(n.p,{children:\"Follow these tutorials in Omnichat to continue:\"}),`\n`,(0,e.jsxs)(n.ol,{children:[`\n`,(0,e.jsxs)(n.li,{children:[`\n`,(0,e.jsxs)(n.p,{children:[\"Register a new Omnichat account in Omnichat. Section \",(0,e.jsx)(n.a,{href:\"/kata-omnichat/getting-started/register-your-account-first\",children:(0,e.jsx)(n.strong,{children:\"How to Set Up\"})})]}),`\n`]}),`\n`,(0,e.jsxs)(n.li,{children:[`\n`,(0,e.jsx)(n.p,{children:\"Create a new channel inbox.\"}),`\n`,(0,e.jsxs)(n.ul,{children:[`\n`,(0,e.jsxs)(n.li,{children:[`\n`,(0,e.jsxs)(n.p,{children:[\"For IGDM chatbot: Section \",(0,e.jsx)(n.a,{href:\"/kata-omnichat/getting-started/connect-your-instagram-messaging-inbox\",children:(0,e.jsx)(n.strong,{children:\"How to Set Up > Connect to Instagram Messaging\"})})]}),`\n`]}),`\n`,(0,e.jsxs)(n.li,{children:[`\n`,(0,e.jsxs)(n.p,{children:[\"For WA chatbot: Section \",(0,e.jsx)(n.a,{href:\"/kata-omnichat/getting-started/connect-your-waba-inbox\",children:(0,e.jsx)(n.strong,{children:\"How to Set Up > Connect to Whatsapp Messaging\"})})]}),`\n`]}),`\n`]}),`\n`]}),`\n`]}),`\n`,(0,e.jsxs)(n.h2,{id:\"create-agent-bot-in-omnichat\",children:[(0,e.jsx)(n.a,{className:\"anchor\",href:\"#create-agent-bot-in-omnichat\",children:(0,e.jsx)(n.span,{className:\"icon icon-link\"})}),\"Create Agent Bot in Omnichat\"]}),`\n`,(0,e.jsxs)(n.p,{children:[\"Follow the tutorial below in Omnichat to continue: Section \",(0,e.jsx)(n.strong,{children:\"How to Set Up Agent Bot\"})]}),`\n`,(0,e.jsxs)(n.h2,{id:\"connect-bot-to-omnichat\",children:[(0,e.jsx)(n.a,{className:\"anchor\",href:\"#connect-bot-to-omnichat\",children:(0,e.jsx)(n.span,{className:\"icon icon-link\"})}),\"Connect Bot to Omnichat\"]}),`\n`,(0,e.jsxs)(n.ol,{children:[`\n`,(0,e.jsx)(n.li,{children:\"If you succeed to follow the above tutorials, you will see an access token generated in Omnichat that needs to be pasted into the Platform. The screenshot below\"}),`\n`]}),`\n`,(0,e.jsx)(a,{caption:{title:\"Figure 13.\",description:\"Create new agent bot\"},src:\"/assets/images/tutorials/simple-handover/image_13.webp\",alt:\"Simple Handover\",naturalHeight:1078,naturalWidth:2048}),`\n`,(0,e.jsxs)(n.ol,{start:\"2\",children:[`\n`,(0,e.jsxs)(n.li,{children:[`\n`,(0,e.jsxs)(n.p,{children:[\"Next, open the Kata Platform URL \",(0,e.jsx)(\"a\",{href:\"https://platform.kata.ai\",target:\"_blank\",children:(0,e.jsx)(n.a,{href:\"https://platform.kata.ai\",children:\"https://platform.kata.ai\"})}),\" and do login\"]}),`\n`]}),`\n`,(0,e.jsxs)(n.li,{children:[`\n`,(0,e.jsx)(n.p,{children:\"Click your project that already had a chatbot and deployed\"}),`\n`]}),`\n`,(0,e.jsxs)(n.li,{children:[`\n`,(0,e.jsx)(n.p,{children:\"Then, go to the menu: Deploy > Environment. You will see this screen.\"}),`\n`]}),`\n`]}),`\n`,(0,e.jsx)(a,{caption:{title:\"Figure 14.\",description:\"Set up channel again to paste access token from Omnichat\"},src:\"/assets/images/tutorials/simple-handover/image_14.webp\",alt:\"Simple Handover\",naturalHeight:695,naturalWidth:2048}),`\n`,(0,e.jsxs)(n.ol,{start:\"5\",children:[`\n`,(0,e.jsxs)(n.li,{children:[`\n`,(0,e.jsx)(n.p,{children:\"Click Create Channel button to start connect and you will see an empty channel table\"}),`\n`]}),`\n`,(0,e.jsxs)(n.li,{children:[`\n`,(0,e.jsx)(n.p,{children:'Click \"+ Create Channel\" button in channel table list and drawer to set up the channel will be shown'}),`\n`]}),`\n`,(0,e.jsxs)(n.li,{children:[`\n`,(0,e.jsx)(n.p,{children:\"Choose Omnichat in Channel Type\"}),`\n`]}),`\n`,(0,e.jsxs)(n.li,{children:[`\n`,(0,e.jsx)(n.p,{children:\"In the Access Token field, paste your access token that was generated from the Omnichat inbox.\"}),`\n`]}),`\n`,(0,e.jsxs)(n.li,{children:[`\n`,(0,e.jsx)(n.p,{children:\"Click Save to deploy your bot\"}),`\n`]}),`\n`,(0,e.jsxs)(n.li,{children:[`\n`,(0,e.jsx)(n.p,{children:\"Few steps to the final \\u2728 A created channel will generate a webhook URL. Copy the webhook URL in the Platform to Omnichat.\"}),`\n`]}),`\n`]}),`\n`,(0,e.jsxs)(n.h2,{id:\"finalize-agent-bot-in-omnichat\",children:[(0,e.jsx)(n.a,{className:\"anchor\",href:\"#finalize-agent-bot-in-omnichat\",children:(0,e.jsx)(n.span,{className:\"icon icon-link\"})}),\"Finalize Agent Bot in Omnichat\"]}),`\n`,(0,e.jsxs)(n.ol,{children:[`\n`,(0,e.jsxs)(n.li,{children:[`\n`,(0,e.jsxs)(n.p,{children:[\"Go back to Omnichat \",(0,e.jsx)(\"a\",{href:\"https://kata-omnichat.kata.ai\",target:\"_blank\",children:(0,e.jsx)(n.a,{href:\"https://omnichat.kata.ai\",children:\"https://omnichat.kata.ai\"})}),\" and do login\"]}),`\n`]}),`\n`,(0,e.jsxs)(n.li,{children:[`\n`,(0,e.jsx)(n.p,{children:\"Go to menu: Settings > Integrations > Agent Bot. You will see this screen and information that you\\u2019re still in first step to finalize\"}),`\n`]}),`\n`]}),`\n`,(0,e.jsx)(a,{caption:{title:\"Figure 15.\",description:\"Edit agent bot to paste webhook URL from Platform\"},src:\"/assets/images/tutorials/simple-handover/image_15.webp\",alt:\"Simple Handover\",naturalHeight:1078,naturalWidth:2048}),`\n`,(0,e.jsxs)(n.ol,{start:\"3\",children:[`\n`,(0,e.jsxs)(n.li,{children:[`\n`,(0,e.jsx)(n.p,{children:'Click \"Edit\" button in the agent bot configuration'}),`\n`]}),`\n`,(0,e.jsxs)(n.li,{children:[`\n`,(0,e.jsx)(n.p,{children:\"A drawer will appear to fill in the Platform webhook URL. Paste your chatbot webhook URL\"}),`\n`]}),`\n`,(0,e.jsxs)(n.li,{children:[`\n`,(0,e.jsx)(n.p,{children:\"Click Update and you will be redirected to agent bot list\"}),`\n`]}),`\n`,(0,e.jsxs)(n.li,{children:[`\n`,(0,e.jsx)(n.p,{children:\"Lastly, turn on the toggle in Activate Agent Bot. Your chatbot is already connected to the Omnichat inbox and ready to use!\"}),`\n`]}),`\n`]}),`\n`,(0,e.jsx)(a,{caption:{title:\"Figure 16.\",description:\"Activate agent bot and final step\"},src:\"/assets/images/tutorials/simple-handover/image_16.webp\",alt:\"Simple Handover\",naturalHeight:1078,naturalWidth:2048}),`\n`,(0,e.jsxs)(n.h2,{id:\"final-demo\",children:[(0,e.jsx)(n.a,{className:\"anchor\",href:\"#final-demo\",children:(0,e.jsx)(n.span,{className:\"icon icon-link\"})}),\"Final Demo\"]}),`\n`,(0,e.jsx)(n.p,{children:\"We provide video tutorials and interaction demos for agent bot Omnichat features. Check these out:\"}),`\n`,(0,e.jsxs)(n.ul,{children:[`\n`,(0,e.jsx)(n.li,{children:\"Create simple bot handover video tutorial\"}),`\n`]}),`\n`,(0,e.jsx)(l,{children:(0,e.jsx)(d,{id:\"pbqou7Wr4Tc\",params:\"v=pbqou7Wr4Tc\",title:\"Create simple bot handover video tutorial\"})}),`\n`,(0,e.jsxs)(n.ul,{children:[`\n`,(0,e.jsx)(n.li,{children:\"Chatbot interaction with end-user and handover to human agent\"}),`\n`]})]})}}var B=O;function o(t,i){throw new Error(\"Expected \"+(i?\"component\":\"object\")+\" `\"+t+\"` to be defined: you likely forgot to import, pass, or provide it.\")}return x(L);})();\n;return Component;"},"_id":"tutorials/create-simple-bot-handover-from-chatbot-to-agent.mdx","_raw":{"sourceFilePath":"tutorials/create-simple-bot-handover-from-chatbot-to-agent.mdx","sourceFileName":"create-simple-bot-handover-from-chatbot-to-agent.mdx","sourceFileDir":"tutorials","contentType":"mdx","flattenedPath":"tutorials/create-simple-bot-handover-from-chatbot-to-agent"},"type":"Tutorials","slug":["create-simple-bot-handover-from-chatbot-to-agent"],"excerpt":"\nKata Platform ([platform.kata"},{"layout":"tutorial","id":"hello-world","imgSpot":"/assets/images/tutorials/spot-hello-world.webp","product":"kata-platform","title":"Creating a Simple Hello World Chatbot","date":"2018-06-06T07:00:00+07:00","next":"bot-studio-tutorial","body":{"raw":"\n## Create a Project\n\nFirst login/sign up to <a href=\"https://platform.kata.ai/login\" target=\"_blank\">https://platform.kata.ai/login</a>\n\nAnd click on “Create Project” and fill in the form. Each project contains one bot design, one NL, and one CMS.\nYou will be directed to this page.\n\n<FigureImage src=\"/assets/images/tutorials/bot-hw/bot-hw1.webp\" alt=\"bhw-1\" naturalHeight={355} naturalWidth={723} />\n\n### Noted\n\nYou can try bot in Menu Test Chatbot (in the bottom right corner).\n\n<FigureImage\n  src=\"/assets/images/tutorials/bot-hw/bot-hw1test.webp\"\n  alt=\"bhw-1test\"\n  naturalHeight={526}\n  naturalWidth={556}\n/>\n\n## Create a Hello Flow\n\n### Create Flow\n\nYou may find a flow that is created automatically by the system or default flow. We will add a new flow called `helloFlow`. Set flow to active, and persistent.\n\n<FigureImage src=\"/assets/images/tutorials/bot-hw/bot-hw2.webp\" alt=\"bhw-2\" naturalHeight={626} naturalWidth={479} />\n\nIt will be shown like this.\n\n<FigureImage src=\"/assets/images/tutorials/bot-hw/bot-hw3.webp\" alt=\"bhw-3\" naturalHeight={370} naturalWidth={457} />\n\n### Create keyword NLU for helloFlow\n\nIn this step, we will define the NLU (Natural Language Understanding) to trigger order flow. NLU is used to translate user inputs into data that machine can understand. There are many types of NLU, but the type that we will use in this particular flow is called keyword. To define the NLU, go to NLUs menu and create.\n\nWe will name it hello_NLU\n\n<FigureImage src=\"/assets/images/tutorials/bot-hw/bot-hw4.webp\" alt=\"bhw-4\" naturalHeight={624} naturalWidth={469} />\n\nIt will be shown like this.\n\n<FigureImage src=\"/assets/images/tutorials/bot-hw/bot-hw5.webp\" alt=\"bhw-5\" naturalHeight={348} naturalWidth={735} />\n\n### Create Intent\n\nGo back to Conversation flow menu and choose intent. Click on “+” button in Conversation Flow menu. Set the Intent name to `helloIntent` and choose option as initial.\nAdd a classifier and choose NLU that we create. We are gonna match it with `helloWorld` (keyword in NLU).\n\n<FigureImage src=\"/assets/images/tutorials/bot-hw/bot-hw6.webp\" alt=\"bhw-6\" naturalHeight={623} naturalWidth={462} />\n\n<FigureImage src=\"/assets/images/tutorials/bot-hw/bot-hw7.webp\" alt=\"bhw-7\" naturalHeight={307} naturalWidth={848} />\n\n## Create action for showing Hello World\n\n### Create State\n\nChoose a states and click on \"+\" button. We will create a initial state. Set name to `init` and choose Initial State, and click create.\n\n<FigureImage src=\"/assets/images/tutorials/bot-hw/bot-hw8.webp\" alt=\"bhw-8\" naturalHeight={618} naturalWidth={457} />\n\nWe will create another state for showing the response in our bot. Choose action to text.\n\n<FigureImage src=\"/assets/images/tutorials/bot-hw/bot-hw9.webp\" alt=\"bhw-9\" naturalHeight={552} naturalWidth={470} />\n\nAdd text response to Hello World!.\n\n<FigureImage src=\"/assets/images/tutorials/bot-hw/bot-hw10.webp\" alt=\"bhw-10\" naturalHeight={537} naturalWidth={458} />\n\nAction should be shown like this.\n\n<FigureImage src=\"/assets/images/tutorials/bot-hw/bot-hw11.webp\" alt=\"bhw-11\" naturalHeight={620} naturalWidth={474} />\n\n### Create Transation\n\nNow, we will create a transition between two states that we have created before.\n\nClick the green dot on `init` state, and a connector line will appear. Connect that line to `hello` state. If you do it right, a Create Transition form will appear.\n\n<FigureImage src=\"/assets/images/tutorials/bot-hw/bot-hw12.webp\" alt=\"bhw-12\" naturalHeight={185} naturalWidth={357} />\n\nSet the condition to `intent=='helloIntent'` and click Create.\n\n<FigureImage src=\"/assets/images/tutorials/bot-hw/bot-hw13.webp\" alt=\"bhw-13\" naturalHeight={615} naturalWidth={468} />\n\n## Testing\n\nBefore this step don't forget to **Publish** your change. And then try your bot in Test Chatbot menu. Try to enter keyword that you define in NLU.\n\nViola! You have succeed build your first bot!\n\n<FigureImage src=\"/assets/images/tutorials/bot-hw/bot-hw14.webp\" alt=\"bhw-14\" naturalHeight={524} naturalWidth={555} />\n","code":"var Component=(()=>{var d=Object.create;var r=Object.defineProperty;var w=Object.getOwnPropertyDescriptor;var u=Object.getOwnPropertyNames;var b=Object.getPrototypeOf,p=Object.prototype.hasOwnProperty;var l=a=>r(a,\"__esModule\",{value:!0});var g=(a,n)=>()=>(n||a((n={exports:{}}).exports,n),n.exports),m=(a,n)=>{for(var i in n)r(a,i,{get:n[i],enumerable:!0})},s=(a,n,i,e)=>{if(n&&typeof n==\"object\"||typeof n==\"function\")for(let o of u(n))!p.call(a,o)&&(i||o!==\"default\")&&r(a,o,{get:()=>n[o],enumerable:!(e=w(n,o))||e.enumerable});return a},f=(a,n)=>s(l(r(a!=null?d(b(a)):{},\"default\",!n&&a&&a.__esModule?{get:()=>a.default,enumerable:!0}:{value:a,enumerable:!0})),a),N=(a=>(n,i)=>a&&a.get(n)||(i=s(l({}),n,1),a&&a.set(n,i),i))(typeof WeakMap!=\"undefined\"?new WeakMap:0);var c=g((j,h)=>{h.exports=_jsx_runtime});var H={};m(H,{default:()=>C,frontmatter:()=>k});var t=f(c()),k={layout:\"tutorial\",id:\"hello-world\",title:\"Creating a Simple Hello World Chatbot\",imgSpot:\"/assets/images/tutorials/spot-hello-world.webp\",product:\"kata-platform\",next:\"bot-studio-tutorial\",date:\"2018-06-06T07:00:00+07:00\"};function y(a={}){let{wrapper:n}=a.components||{};return n?(0,t.jsx)(n,Object.assign({},a,{children:(0,t.jsx)(i,{})})):i();function i(){let e=Object.assign({h2:\"h2\",a:\"a\",span:\"span\",p:\"p\",h3:\"h3\",code:\"code\",strong:\"strong\"},a.components),{FigureImage:o}=e;return o||W(\"FigureImage\",!0),(0,t.jsxs)(t.Fragment,{children:[(0,t.jsxs)(e.h2,{id:\"create-a-project\",children:[(0,t.jsx)(e.a,{className:\"anchor\",href:\"#create-a-project\",children:(0,t.jsx)(e.span,{className:\"icon icon-link\"})}),\"Create a Project\"]}),`\n`,(0,t.jsxs)(e.p,{children:[\"First login/sign up to \",(0,t.jsx)(\"a\",{href:\"https://platform.kata.ai/login\",target:\"_blank\",children:(0,t.jsx)(e.a,{href:\"https://platform.kata.ai/login\",children:\"https://platform.kata.ai/login\"})})]}),`\n`,(0,t.jsx)(e.p,{children:`And click on \\u201CCreate Project\\u201D and fill in the form. Each project contains one bot design, one NL, and one CMS.\nYou will be directed to this page.`}),`\n`,(0,t.jsx)(o,{src:\"/assets/images/tutorials/bot-hw/bot-hw1.webp\",alt:\"bhw-1\",naturalHeight:355,naturalWidth:723}),`\n`,(0,t.jsxs)(e.h3,{id:\"noted\",children:[(0,t.jsx)(e.a,{className:\"anchor\",href:\"#noted\",children:(0,t.jsx)(e.span,{className:\"icon icon-link\"})}),\"Noted\"]}),`\n`,(0,t.jsx)(e.p,{children:\"You can try bot in Menu Test Chatbot (in the bottom right corner).\"}),`\n`,(0,t.jsx)(o,{src:\"/assets/images/tutorials/bot-hw/bot-hw1test.webp\",alt:\"bhw-1test\",naturalHeight:526,naturalWidth:556}),`\n`,(0,t.jsxs)(e.h2,{id:\"create-a-hello-flow\",children:[(0,t.jsx)(e.a,{className:\"anchor\",href:\"#create-a-hello-flow\",children:(0,t.jsx)(e.span,{className:\"icon icon-link\"})}),\"Create a Hello Flow\"]}),`\n`,(0,t.jsxs)(e.h3,{id:\"create-flow\",children:[(0,t.jsx)(e.a,{className:\"anchor\",href:\"#create-flow\",children:(0,t.jsx)(e.span,{className:\"icon icon-link\"})}),\"Create Flow\"]}),`\n`,(0,t.jsxs)(e.p,{children:[\"You may find a flow that is created automatically by the system or default flow. We will add a new flow called \",(0,t.jsx)(e.code,{children:\"helloFlow\"}),\". Set flow to active, and persistent.\"]}),`\n`,(0,t.jsx)(o,{src:\"/assets/images/tutorials/bot-hw/bot-hw2.webp\",alt:\"bhw-2\",naturalHeight:626,naturalWidth:479}),`\n`,(0,t.jsx)(e.p,{children:\"It will be shown like this.\"}),`\n`,(0,t.jsx)(o,{src:\"/assets/images/tutorials/bot-hw/bot-hw3.webp\",alt:\"bhw-3\",naturalHeight:370,naturalWidth:457}),`\n`,(0,t.jsxs)(e.h3,{id:\"create-keyword-nlu-for-helloflow\",children:[(0,t.jsx)(e.a,{className:\"anchor\",href:\"#create-keyword-nlu-for-helloflow\",children:(0,t.jsx)(e.span,{className:\"icon icon-link\"})}),\"Create keyword NLU for helloFlow\"]}),`\n`,(0,t.jsx)(e.p,{children:\"In this step, we will define the NLU (Natural Language Understanding) to trigger order flow. NLU is used to translate user inputs into data that machine can understand. There are many types of NLU, but the type that we will use in this particular flow is called keyword. To define the NLU, go to NLUs menu and create.\"}),`\n`,(0,t.jsx)(e.p,{children:\"We will name it hello_NLU\"}),`\n`,(0,t.jsx)(o,{src:\"/assets/images/tutorials/bot-hw/bot-hw4.webp\",alt:\"bhw-4\",naturalHeight:624,naturalWidth:469}),`\n`,(0,t.jsx)(e.p,{children:\"It will be shown like this.\"}),`\n`,(0,t.jsx)(o,{src:\"/assets/images/tutorials/bot-hw/bot-hw5.webp\",alt:\"bhw-5\",naturalHeight:348,naturalWidth:735}),`\n`,(0,t.jsxs)(e.h3,{id:\"create-intent\",children:[(0,t.jsx)(e.a,{className:\"anchor\",href:\"#create-intent\",children:(0,t.jsx)(e.span,{className:\"icon icon-link\"})}),\"Create Intent\"]}),`\n`,(0,t.jsxs)(e.p,{children:[\"Go back to Conversation flow menu and choose intent. Click on \\u201C+\\u201D button in Conversation Flow menu. Set the Intent name to \",(0,t.jsx)(e.code,{children:\"helloIntent\"}),` and choose option as initial.\nAdd a classifier and choose NLU that we create. We are gonna match it with `,(0,t.jsx)(e.code,{children:\"helloWorld\"}),\" (keyword in NLU).\"]}),`\n`,(0,t.jsx)(o,{src:\"/assets/images/tutorials/bot-hw/bot-hw6.webp\",alt:\"bhw-6\",naturalHeight:623,naturalWidth:462}),`\n`,(0,t.jsx)(o,{src:\"/assets/images/tutorials/bot-hw/bot-hw7.webp\",alt:\"bhw-7\",naturalHeight:307,naturalWidth:848}),`\n`,(0,t.jsxs)(e.h2,{id:\"create-action-for-showing-hello-world\",children:[(0,t.jsx)(e.a,{className:\"anchor\",href:\"#create-action-for-showing-hello-world\",children:(0,t.jsx)(e.span,{className:\"icon icon-link\"})}),\"Create action for showing Hello World\"]}),`\n`,(0,t.jsxs)(e.h3,{id:\"create-state\",children:[(0,t.jsx)(e.a,{className:\"anchor\",href:\"#create-state\",children:(0,t.jsx)(e.span,{className:\"icon icon-link\"})}),\"Create State\"]}),`\n`,(0,t.jsxs)(e.p,{children:['Choose a states and click on \"+\" button. We will create a initial state. Set name to ',(0,t.jsx)(e.code,{children:\"init\"}),\" and choose Initial State, and click create.\"]}),`\n`,(0,t.jsx)(o,{src:\"/assets/images/tutorials/bot-hw/bot-hw8.webp\",alt:\"bhw-8\",naturalHeight:618,naturalWidth:457}),`\n`,(0,t.jsx)(e.p,{children:\"We will create another state for showing the response in our bot. Choose action to text.\"}),`\n`,(0,t.jsx)(o,{src:\"/assets/images/tutorials/bot-hw/bot-hw9.webp\",alt:\"bhw-9\",naturalHeight:552,naturalWidth:470}),`\n`,(0,t.jsx)(e.p,{children:\"Add text response to Hello World!.\"}),`\n`,(0,t.jsx)(o,{src:\"/assets/images/tutorials/bot-hw/bot-hw10.webp\",alt:\"bhw-10\",naturalHeight:537,naturalWidth:458}),`\n`,(0,t.jsx)(e.p,{children:\"Action should be shown like this.\"}),`\n`,(0,t.jsx)(o,{src:\"/assets/images/tutorials/bot-hw/bot-hw11.webp\",alt:\"bhw-11\",naturalHeight:620,naturalWidth:474}),`\n`,(0,t.jsxs)(e.h3,{id:\"create-transation\",children:[(0,t.jsx)(e.a,{className:\"anchor\",href:\"#create-transation\",children:(0,t.jsx)(e.span,{className:\"icon icon-link\"})}),\"Create Transation\"]}),`\n`,(0,t.jsx)(e.p,{children:\"Now, we will create a transition between two states that we have created before.\"}),`\n`,(0,t.jsxs)(e.p,{children:[\"Click the green dot on \",(0,t.jsx)(e.code,{children:\"init\"}),\" state, and a connector line will appear. Connect that line to \",(0,t.jsx)(e.code,{children:\"hello\"}),\" state. If you do it right, a Create Transition form will appear.\"]}),`\n`,(0,t.jsx)(o,{src:\"/assets/images/tutorials/bot-hw/bot-hw12.webp\",alt:\"bhw-12\",naturalHeight:185,naturalWidth:357}),`\n`,(0,t.jsxs)(e.p,{children:[\"Set the condition to \",(0,t.jsx)(e.code,{children:\"intent=='helloIntent'\"}),\" and click Create.\"]}),`\n`,(0,t.jsx)(o,{src:\"/assets/images/tutorials/bot-hw/bot-hw13.webp\",alt:\"bhw-13\",naturalHeight:615,naturalWidth:468}),`\n`,(0,t.jsxs)(e.h2,{id:\"testing\",children:[(0,t.jsx)(e.a,{className:\"anchor\",href:\"#testing\",children:(0,t.jsx)(e.span,{className:\"icon icon-link\"})}),\"Testing\"]}),`\n`,(0,t.jsxs)(e.p,{children:[\"Before this step don't forget to \",(0,t.jsx)(e.strong,{children:\"Publish\"}),\" your change. And then try your bot in Test Chatbot menu. Try to enter keyword that you define in NLU.\"]}),`\n`,(0,t.jsx)(e.p,{children:\"Viola! You have succeed build your first bot!\"}),`\n`,(0,t.jsx)(o,{src:\"/assets/images/tutorials/bot-hw/bot-hw14.webp\",alt:\"bhw-14\",naturalHeight:524,naturalWidth:555})]})}}var C=y;function W(a,n){throw new Error(\"Expected \"+(n?\"component\":\"object\")+\" `\"+a+\"` to be defined: you likely forgot to import, pass, or provide it.\")}return N(H);})();\n;return Component;"},"_id":"tutorials/hello-world.mdx","_raw":{"sourceFilePath":"tutorials/hello-world.mdx","sourceFileName":"hello-world.mdx","sourceFileDir":"tutorials","contentType":"mdx","flattenedPath":"tutorials/hello-world"},"type":"Tutorials","slug":["hello-world"],"excerpt":"\n## Create a Project\n\nFirst login/sign up to "},{"layout":"tutorial","id":"how-to-deploy-your-chatbot-to-line","imgSpot":"/assets/images/tutorials/spot-line.webp","product":"kata-platform","title":"How to deploy your chatbot to LINE","date":"2022-01-17T07:00:00+07:00","body":{"raw":"\nLINE is a free messaging platform and is famous in Indonesia. This messaging platform supports various interactive action types such as carousel, button, Image Map, and many more.\n\nThis tutorial will learn how to deploy your chatbot to LINE. Let’s start.\n\n## Create a deployment\n\nDeployment is a step to merge all Revisions in Flow, NLU, and CMS so that you can integrate bots into the channel. Before starting channel integration, chatbots must at least have 1 deployment.\n\n1. In the sidebar, choose the **Deploy** menu. Then, select **Overview**.\n\n<FigureImage\n  caption={{ title: 'Figure 1.', description: `Deploy menu interface` }}\n  src=\"/assets/images/tutorials/how-to-deploy-your-chatbot-to-line/image1.webp\"\n  alt=\"How to deploy your chatbot to LINE\"\n  naturalHeight={511}\n  naturalWidth={1600}\n/>\n\n2. Click the **New Deployment** button. Then it will show a form on the right screen.\n\n3. Choose the deployment version. In the Kata Platform, there are 3 deployment versions which are:\n\n- Major to deploy significant changes, such as change chatbot use-case.\n\n- Minor to deploy medium changes, such as adding new features in your chatbot.\n\n- Patch to deploy small changes, such as change copy in action.\n\n<FigureImage\n  caption={{ title: 'Figure 2.', description: ` Create a new deployment` }}\n  src=\"/assets/images/tutorials/how-to-deploy-your-chatbot-to-line/image2.webp\"\n  alt=\"How to deploy your chatbot to LINE\"\n  naturalHeight={855}\n  naturalWidth={1600}\n/>\n\n4. Then, click the **Submit** button. If deployment is successful, then the interface will be shown like this.\n\n<FigureImage\n  caption={{ title: 'Figure 3.', description: `Deployment has been created.` }}\n  src=\"/assets/images/tutorials/how-to-deploy-your-chatbot-to-line/image3.webp\"\n  alt=\"How to deploy your chatbot to LINE\"\n  naturalHeight={533}\n  naturalWidth={1600}\n/>\n\nThe step after creating a deployment is to create an environment. An environment is a zone in computer science that provides a place to run integrated applications. For example, Kata Platform has 3 environments: development, staging, and production.\n\n1. Choose the menu **Deploy**, then choose **Environment**.\n\n<FigureImage\n  caption={{ title: 'Figure 4.', description: `Environment interface.` }}\n  src=\"/assets/images/tutorials/how-to-deploy-your-chatbot-to-line/image4.webp\"\n  alt=\"How to deploy your chatbot to LINE\"\n  naturalHeight={507}\n  naturalWidth={1600}\n/>\n\n2. In this step, you will create a Development environment. Click the button **Create Environment** in the **Development** card.\n\n3. Fill in the environment, then click **Create**.\n\n<FigureImage\n  caption={{ title: 'Figure 5.', description: `Create an environment interface.` }}\n  src=\"/assets/images/tutorials/how-to-deploy-your-chatbot-to-line/image5.webp\"\n  alt=\"How to deploy your chatbot to LINE\"\n  naturalHeight={1008}\n  naturalWidth={1600}\n/>\n\n## Integration to a channel\n\nThis step will create a chatbot integration with the Telegram messaging platform. Telegram is a free messaging platform to deploy chatbots with a simple setup.\n\n1. In the **Deploy > Environment**, click the **Create Channel** button.\n\n<FigureImage\n  caption={{ title: 'Figure 6.', description: `Button deploys channel in a Development environment.` }}\n  src=\"/assets/images/tutorials/how-to-deploy-your-chatbot-to-line/image6.webp\"\n  alt=\"How to deploy your chatbot to LINE\"\n  naturalHeight={694}\n  naturalWidth={1594}\n/>\n\n2. You will redirect to the **Create Channel** page. Click the **“+ Create Channel”** button to create a new channel.\n\n3. Fill in the channel name and choose type as LINE.\n\n4. To fill in the Bot User OAuth Access Token field, we must set up a chatbot in Telegram first. The next step is to open your Telegram application and log in.\n\nBefore you start, you need a LINE account already registered and logged in to your application.\n\n### Registration to LINE Developer console and setup\n\n1. Create a LINE account. To sign up for a LINE developer account, you have to have a LINE account by [installing a LINE application, either desktop or mobile app](https://line.me/en/download).\n\n2. After you successfully registered, sign in to [https://developers.line.biz/en/](https://developers.line.biz/en/)\n\n3. In the LINE Developer Console, click **Log In**.\n\n<FigureImage\n  caption={{ title: 'Figure 7.', description: `LINE developer dashboard.` }}\n  src=\"/assets/images/tutorials/how-to-deploy-your-chatbot-to-line/image7.webp\"\n  alt=\"How to deploy your chatbot to LINE\"\n  naturalHeight={822}\n  naturalWidth={1600}\n/>\n\n4. Next, click on **Login with LINE**.\n\n<FigureImage\n  caption={{ title: 'Figure 8.', description: `Log in with LINE` }}\n  src=\"/assets/images/tutorials/how-to-deploy-your-chatbot-to-line/image8.webp\"\n  alt=\"How to deploy your chatbot to LINE\"\n  naturalHeight={1134}\n  naturalWidth={1054}\n/>\n\n5. Enter your email and password. After you successfully log in, you will be redirected to the provider list dashboard.\n\n<FigureImage\n  caption={{ title: 'Figure 9.', description: `Provider list.` }}\n  src=\"/assets/images/tutorials/how-to-deploy-your-chatbot-to-line/image9.webp\"\n  alt=\"How to deploy your chatbot to LINE\"\n  naturalHeight={811}\n  naturalWidth={1600}\n/>\n\n6. Next, click **“Create New Provider”**. Fill in the provider name.\n\n7. Click **Confirm** to continue.\n\n8. Your new provider has been created.\n\n<FigureImage\n  caption={{ title: 'Figure 10.', description: `New provider.` }}\n  src=\"/assets/images/tutorials/how-to-deploy-your-chatbot-to-line/image10.webp\"\n  alt=\"How to deploy your chatbot to LINE\"\n  naturalHeight={550}\n  naturalWidth={1600}\n/>\n\n9. Next, set up the channel in the Messaging API by clicking **Create Channel** on Messaging API.\n\n<FigureImage\n  caption={{ title: 'Figure 11.', description: `Create channel.` }}\n  src=\"/assets/images/tutorials/how-to-deploy-your-chatbot-to-line/image11.webp\"\n  alt=\"How to deploy your chatbot to LINE\"\n  naturalHeight={818}\n  naturalWidth={1600}\n/>\n\n10. Fill in your LINE bot detail.\n\n11. Next, you have to choose the **Developer Trial as Plan**.\n\n<FigureImage\n  caption={{ title: 'Figure 12.', description: `hoose developer trial option` }}\n  src=\"/assets/images/tutorials/how-to-deploy-your-chatbot-to-line/image12.webp\"\n  alt=\"How to deploy your chatbot to LINE\"\n  naturalHeight={351}\n  naturalWidth={1600}\n/>\n\n12. Finally, click **Create**. The successfully created channel will look like this.\n\n<FigureImage\n  caption={{ title: 'Figure 13.', description: `New channel.` }}\n  src=\"/assets/images/tutorials/how-to-deploy-your-chatbot-to-line/image13.webp\"\n  alt=\"How to deploy your chatbot to LINE\"\n  naturalHeight={1012}\n  naturalWidth={1176}\n/>\n\n### Integrate LINE to your chatbot\n\n1. Click on the created channel to fill in the Channel Access Token\n\n2. Click **“Issue”** in the Messaging Settings section.\n\n<FigureImage\n  caption={{ title: 'Figure 14.', description: `Issue access token.` }}\n  src=\"/assets/images/tutorials/how-to-deploy-your-chatbot-to-line/image14.webp\"\n  alt=\"How to deploy your chatbot to LINE\"\n  naturalHeight={638}\n  naturalWidth={1600}\n/>\n\n3. Then, a dialog will show. Click on **Issue** to continue.\n\n4. Finally, copy the **Channel Access Token** below and paste it on the Create Channel form in the Kata Platform.\n\n<FigureImage\n  caption={{ title: 'Figure 15.', description: `Show Channel Access Token.` }}\n  src=\"/assets/images/tutorials/how-to-deploy-your-chatbot-to-line/image15.webp\"\n  alt=\"How to deploy your chatbot to LINE\"\n  naturalHeight={223}\n  naturalWidth={1600}\n/>\n\n5. Go back to Kata Platform, then paste the Channel Access Token.\n\n<FigureImage\n  caption={{ title: 'Figure 16.', description: `Paste Channel Access Token.` }}\n  src=\"/assets/images/tutorials/how-to-deploy-your-chatbot-to-line/image16.webp\"\n  alt=\"How to deploy your chatbot to LINE\"\n  naturalHeight={964}\n  naturalWidth={740}\n/>\n\n6. Next, you will fill in the Channel Secret field. Then, in Basic Information, copy Channel Secret from LINE to the Kata Platform.\n\n<FigureImage\n  caption={{ title: 'Figure 17.', description: `Copy Channel Secret.` }}\n  src=\"/assets/images/tutorials/how-to-deploy-your-chatbot-to-line/image17.webp\"\n  alt=\"How to deploy your chatbot to LINE\"\n  naturalHeight={891}\n  naturalWidth={1600}\n/>\n\n7. Go back to the Kata Platform, then paste the Channel Secret.\n\n<FigureImage\n  caption={{ title: 'Figure 18.', description: `All fields are filled in.` }}\n  src=\"/assets/images/tutorials/how-to-deploy-your-chatbot-to-line/image18.webp\"\n  alt=\"How to deploy your chatbot to LINE\"\n  naturalHeight={996}\n  naturalWidth={766}\n/>\n\n8. Click **“Create”** to generate a webhook URL from the Kata Platform.\n\nAfter the webhook URL is generated, go to Messaging Settings in the LINE developer console to enable webhook.\n\n9. Enable the webhook by clicking on **Enable** in the **“Use Webhooks”** section, placed above the Webhook URL field.\n\n<FigureImage\n  caption={{ title: 'Figure 19.', description: `Enable webhook.` }}\n  src=\"/assets/images/tutorials/how-to-deploy-your-chatbot-to-line/image19.webp\"\n  alt=\"How to deploy your chatbot to LINE\"\n  naturalHeight={383}\n  naturalWidth={1600}\n/>\n\n10. Click **“Update,”** then paste the webhook URL to the LINE developer console.\n\n<FigureImage\n  caption={{ title: 'Figure 20.', description: `Paste webhook from Kata Platform.` }}\n  src=\"/assets/images/tutorials/how-to-deploy-your-chatbot-to-line/image20.webp\"\n  alt=\"How to deploy your chatbot to LINE\"\n  naturalHeight={506}\n  naturalWidth={1600}\n/>\n\n11. Click **“Update”**, then click **“Verify”**.\n\n12. Next, disable auto-reply messages and greeting messages by following figure 21.\n\n<FigureImage\n  caption={{ title: 'Figure 21.', description: `Disable auto-reply and greeting messages.` }}\n  src=\"/assets/images/tutorials/how-to-deploy-your-chatbot-to-line/image21.webp\"\n  alt=\"How to deploy your chatbot to LINE\"\n  naturalHeight={484}\n  naturalWidth={1600}\n/>\n\n13. Congratulations, you have successfully deployed your bot to LINE Messenger.\n\n14. Next, test your bot by scanning the QR code.\n\nIt is the end of the guidance. If you find it difficult to follow, you can contact [support@kata.ai](mailto:support@kata.ai). Thank you.\n","code":"var Component=(()=>{var d=Object.create;var a=Object.defineProperty;var p=Object.getOwnPropertyDescriptor;var u=Object.getOwnPropertyNames;var g=Object.getPrototypeOf,y=Object.prototype.hasOwnProperty;var r=n=>a(n,\"__esModule\",{value:!0});var m=(n,i)=>()=>(i||n((i={exports:{}}).exports,i),i.exports),b=(n,i)=>{for(var l in i)a(n,l,{get:i[l],enumerable:!0})},s=(n,i,l,t)=>{if(i&&typeof i==\"object\"||typeof i==\"function\")for(let o of u(i))!y.call(n,o)&&(l||o!==\"default\")&&a(n,o,{get:()=>i[o],enumerable:!(t=p(i,o))||t.enumerable});return n},w=(n,i)=>s(r(a(n!=null?d(g(n)):{},\"default\",!i&&n&&n.__esModule?{get:()=>n.default,enumerable:!0}:{value:n,enumerable:!0})),n),f=(n=>(i,l)=>n&&n.get(i)||(l=s(r({}),i,1),n&&n.set(i,l),l))(typeof WeakMap!=\"undefined\"?new WeakMap:0);var h=m((C,c)=>{c.exports=_jsx_runtime});var L={};b(L,{default:()=>k,frontmatter:()=>I});var e=w(h()),I={layout:\"tutorial\",id:\"how-to-deploy-your-chatbot-to-line\",imgSpot:\"/assets/images/tutorials/spot-line.webp\",product:\"kata-platform\",title:\"How to deploy your chatbot to LINE\",date:\"2022-01-17T07:00:00+07:00\"};function N(n={}){let{wrapper:i}=n.components||{};return i?(0,e.jsx)(i,Object.assign({},n,{children:(0,e.jsx)(l,{})})):l();function l(){let t=Object.assign({p:\"p\",h2:\"h2\",a:\"a\",span:\"span\",ol:\"ol\",li:\"li\",strong:\"strong\",ul:\"ul\",h3:\"h3\"},n.components),{FigureImage:o}=t;return o||E(\"FigureImage\",!0),(0,e.jsxs)(e.Fragment,{children:[(0,e.jsx)(t.p,{children:\"LINE is a free messaging platform and is famous in Indonesia. This messaging platform supports various interactive action types such as carousel, button, Image Map, and many more.\"}),`\n`,(0,e.jsx)(t.p,{children:\"This tutorial will learn how to deploy your chatbot to LINE. Let\\u2019s start.\"}),`\n`,(0,e.jsxs)(t.h2,{id:\"create-a-deployment\",children:[(0,e.jsx)(t.a,{className:\"anchor\",href:\"#create-a-deployment\",children:(0,e.jsx)(t.span,{className:\"icon icon-link\"})}),\"Create a deployment\"]}),`\n`,(0,e.jsx)(t.p,{children:\"Deployment is a step to merge all Revisions in Flow, NLU, and CMS so that you can integrate bots into the channel. Before starting channel integration, chatbots must at least have 1 deployment.\"}),`\n`,(0,e.jsxs)(t.ol,{children:[`\n`,(0,e.jsxs)(t.li,{children:[\"In the sidebar, choose the \",(0,e.jsx)(t.strong,{children:\"Deploy\"}),\" menu. Then, select \",(0,e.jsx)(t.strong,{children:\"Overview\"}),\".\"]}),`\n`]}),`\n`,(0,e.jsx)(o,{caption:{title:\"Figure 1.\",description:\"Deploy menu interface\"},src:\"/assets/images/tutorials/how-to-deploy-your-chatbot-to-line/image1.webp\",alt:\"How to deploy your chatbot to LINE\",naturalHeight:511,naturalWidth:1600}),`\n`,(0,e.jsxs)(t.ol,{start:\"2\",children:[`\n`,(0,e.jsxs)(t.li,{children:[`\n`,(0,e.jsxs)(t.p,{children:[\"Click the \",(0,e.jsx)(t.strong,{children:\"New Deployment\"}),\" button. Then it will show a form on the right screen.\"]}),`\n`]}),`\n`,(0,e.jsxs)(t.li,{children:[`\n`,(0,e.jsx)(t.p,{children:\"Choose the deployment version. In the Kata Platform, there are 3 deployment versions which are:\"}),`\n`]}),`\n`]}),`\n`,(0,e.jsxs)(t.ul,{children:[`\n`,(0,e.jsxs)(t.li,{children:[`\n`,(0,e.jsx)(t.p,{children:\"Major to deploy significant changes, such as change chatbot use-case.\"}),`\n`]}),`\n`,(0,e.jsxs)(t.li,{children:[`\n`,(0,e.jsx)(t.p,{children:\"Minor to deploy medium changes, such as adding new features in your chatbot.\"}),`\n`]}),`\n`,(0,e.jsxs)(t.li,{children:[`\n`,(0,e.jsx)(t.p,{children:\"Patch to deploy small changes, such as change copy in action.\"}),`\n`]}),`\n`]}),`\n`,(0,e.jsx)(o,{caption:{title:\"Figure 2.\",description:\" Create a new deployment\"},src:\"/assets/images/tutorials/how-to-deploy-your-chatbot-to-line/image2.webp\",alt:\"How to deploy your chatbot to LINE\",naturalHeight:855,naturalWidth:1600}),`\n`,(0,e.jsxs)(t.ol,{start:\"4\",children:[`\n`,(0,e.jsxs)(t.li,{children:[\"Then, click the \",(0,e.jsx)(t.strong,{children:\"Submit\"}),\" button. If deployment is successful, then the interface will be shown like this.\"]}),`\n`]}),`\n`,(0,e.jsx)(o,{caption:{title:\"Figure 3.\",description:\"Deployment has been created.\"},src:\"/assets/images/tutorials/how-to-deploy-your-chatbot-to-line/image3.webp\",alt:\"How to deploy your chatbot to LINE\",naturalHeight:533,naturalWidth:1600}),`\n`,(0,e.jsx)(t.p,{children:\"The step after creating a deployment is to create an environment. An environment is a zone in computer science that provides a place to run integrated applications. For example, Kata Platform has 3 environments: development, staging, and production.\"}),`\n`,(0,e.jsxs)(t.ol,{children:[`\n`,(0,e.jsxs)(t.li,{children:[\"Choose the menu \",(0,e.jsx)(t.strong,{children:\"Deploy\"}),\", then choose \",(0,e.jsx)(t.strong,{children:\"Environment\"}),\".\"]}),`\n`]}),`\n`,(0,e.jsx)(o,{caption:{title:\"Figure 4.\",description:\"Environment interface.\"},src:\"/assets/images/tutorials/how-to-deploy-your-chatbot-to-line/image4.webp\",alt:\"How to deploy your chatbot to LINE\",naturalHeight:507,naturalWidth:1600}),`\n`,(0,e.jsxs)(t.ol,{start:\"2\",children:[`\n`,(0,e.jsxs)(t.li,{children:[`\n`,(0,e.jsxs)(t.p,{children:[\"In this step, you will create a Development environment. Click the button \",(0,e.jsx)(t.strong,{children:\"Create Environment\"}),\" in the \",(0,e.jsx)(t.strong,{children:\"Development\"}),\" card.\"]}),`\n`]}),`\n`,(0,e.jsxs)(t.li,{children:[`\n`,(0,e.jsxs)(t.p,{children:[\"Fill in the environment, then click \",(0,e.jsx)(t.strong,{children:\"Create\"}),\".\"]}),`\n`]}),`\n`]}),`\n`,(0,e.jsx)(o,{caption:{title:\"Figure 5.\",description:\"Create an environment interface.\"},src:\"/assets/images/tutorials/how-to-deploy-your-chatbot-to-line/image5.webp\",alt:\"How to deploy your chatbot to LINE\",naturalHeight:1008,naturalWidth:1600}),`\n`,(0,e.jsxs)(t.h2,{id:\"integration-to-a-channel\",children:[(0,e.jsx)(t.a,{className:\"anchor\",href:\"#integration-to-a-channel\",children:(0,e.jsx)(t.span,{className:\"icon icon-link\"})}),\"Integration to a channel\"]}),`\n`,(0,e.jsx)(t.p,{children:\"This step will create a chatbot integration with the Telegram messaging platform. Telegram is a free messaging platform to deploy chatbots with a simple setup.\"}),`\n`,(0,e.jsxs)(t.ol,{children:[`\n`,(0,e.jsxs)(t.li,{children:[\"In the \",(0,e.jsx)(t.strong,{children:\"Deploy > Environment\"}),\", click the \",(0,e.jsx)(t.strong,{children:\"Create Channel\"}),\" button.\"]}),`\n`]}),`\n`,(0,e.jsx)(o,{caption:{title:\"Figure 6.\",description:\"Button deploys channel in a Development environment.\"},src:\"/assets/images/tutorials/how-to-deploy-your-chatbot-to-line/image6.webp\",alt:\"How to deploy your chatbot to LINE\",naturalHeight:694,naturalWidth:1594}),`\n`,(0,e.jsxs)(t.ol,{start:\"2\",children:[`\n`,(0,e.jsxs)(t.li,{children:[`\n`,(0,e.jsxs)(t.p,{children:[\"You will redirect to the \",(0,e.jsx)(t.strong,{children:\"Create Channel\"}),\" page. Click the \",(0,e.jsx)(t.strong,{children:\"\\u201C+ Create Channel\\u201D\"}),\" button to create a new channel.\"]}),`\n`]}),`\n`,(0,e.jsxs)(t.li,{children:[`\n`,(0,e.jsx)(t.p,{children:\"Fill in the channel name and choose type as LINE.\"}),`\n`]}),`\n`,(0,e.jsxs)(t.li,{children:[`\n`,(0,e.jsx)(t.p,{children:\"To fill in the Bot User OAuth Access Token field, we must set up a chatbot in Telegram first. The next step is to open your Telegram application and log in.\"}),`\n`]}),`\n`]}),`\n`,(0,e.jsx)(t.p,{children:\"Before you start, you need a LINE account already registered and logged in to your application.\"}),`\n`,(0,e.jsxs)(t.h3,{id:\"registration-to-line-developer-console-and-setup\",children:[(0,e.jsx)(t.a,{className:\"anchor\",href:\"#registration-to-line-developer-console-and-setup\",children:(0,e.jsx)(t.span,{className:\"icon icon-link\"})}),\"Registration to LINE Developer console and setup\"]}),`\n`,(0,e.jsxs)(t.ol,{children:[`\n`,(0,e.jsxs)(t.li,{children:[`\n`,(0,e.jsxs)(t.p,{children:[\"Create a LINE account. To sign up for a LINE developer account, you have to have a LINE account by \",(0,e.jsx)(t.a,{href:\"https://line.me/en/download\",children:\"installing a LINE application, either desktop or mobile app\"}),\".\"]}),`\n`]}),`\n`,(0,e.jsxs)(t.li,{children:[`\n`,(0,e.jsxs)(t.p,{children:[\"After you successfully registered, sign in to \",(0,e.jsx)(t.a,{href:\"https://developers.line.biz/en/\",children:\"https://developers.line.biz/en/\"})]}),`\n`]}),`\n`,(0,e.jsxs)(t.li,{children:[`\n`,(0,e.jsxs)(t.p,{children:[\"In the LINE Developer Console, click \",(0,e.jsx)(t.strong,{children:\"Log In\"}),\".\"]}),`\n`]}),`\n`]}),`\n`,(0,e.jsx)(o,{caption:{title:\"Figure 7.\",description:\"LINE developer dashboard.\"},src:\"/assets/images/tutorials/how-to-deploy-your-chatbot-to-line/image7.webp\",alt:\"How to deploy your chatbot to LINE\",naturalHeight:822,naturalWidth:1600}),`\n`,(0,e.jsxs)(t.ol,{start:\"4\",children:[`\n`,(0,e.jsxs)(t.li,{children:[\"Next, click on \",(0,e.jsx)(t.strong,{children:\"Login with LINE\"}),\".\"]}),`\n`]}),`\n`,(0,e.jsx)(o,{caption:{title:\"Figure 8.\",description:\"Log in with LINE\"},src:\"/assets/images/tutorials/how-to-deploy-your-chatbot-to-line/image8.webp\",alt:\"How to deploy your chatbot to LINE\",naturalHeight:1134,naturalWidth:1054}),`\n`,(0,e.jsxs)(t.ol,{start:\"5\",children:[`\n`,(0,e.jsx)(t.li,{children:\"Enter your email and password. After you successfully log in, you will be redirected to the provider list dashboard.\"}),`\n`]}),`\n`,(0,e.jsx)(o,{caption:{title:\"Figure 9.\",description:\"Provider list.\"},src:\"/assets/images/tutorials/how-to-deploy-your-chatbot-to-line/image9.webp\",alt:\"How to deploy your chatbot to LINE\",naturalHeight:811,naturalWidth:1600}),`\n`,(0,e.jsxs)(t.ol,{start:\"6\",children:[`\n`,(0,e.jsxs)(t.li,{children:[`\n`,(0,e.jsxs)(t.p,{children:[\"Next, click \",(0,e.jsx)(t.strong,{children:\"\\u201CCreate New Provider\\u201D\"}),\". Fill in the provider name.\"]}),`\n`]}),`\n`,(0,e.jsxs)(t.li,{children:[`\n`,(0,e.jsxs)(t.p,{children:[\"Click \",(0,e.jsx)(t.strong,{children:\"Confirm\"}),\" to continue.\"]}),`\n`]}),`\n`,(0,e.jsxs)(t.li,{children:[`\n`,(0,e.jsx)(t.p,{children:\"Your new provider has been created.\"}),`\n`]}),`\n`]}),`\n`,(0,e.jsx)(o,{caption:{title:\"Figure 10.\",description:\"New provider.\"},src:\"/assets/images/tutorials/how-to-deploy-your-chatbot-to-line/image10.webp\",alt:\"How to deploy your chatbot to LINE\",naturalHeight:550,naturalWidth:1600}),`\n`,(0,e.jsxs)(t.ol,{start:\"9\",children:[`\n`,(0,e.jsxs)(t.li,{children:[\"Next, set up the channel in the Messaging API by clicking \",(0,e.jsx)(t.strong,{children:\"Create Channel\"}),\" on Messaging API.\"]}),`\n`]}),`\n`,(0,e.jsx)(o,{caption:{title:\"Figure 11.\",description:\"Create channel.\"},src:\"/assets/images/tutorials/how-to-deploy-your-chatbot-to-line/image11.webp\",alt:\"How to deploy your chatbot to LINE\",naturalHeight:818,naturalWidth:1600}),`\n`,(0,e.jsxs)(t.ol,{start:\"10\",children:[`\n`,(0,e.jsxs)(t.li,{children:[`\n`,(0,e.jsx)(t.p,{children:\"Fill in your LINE bot detail.\"}),`\n`]}),`\n`,(0,e.jsxs)(t.li,{children:[`\n`,(0,e.jsxs)(t.p,{children:[\"Next, you have to choose the \",(0,e.jsx)(t.strong,{children:\"Developer Trial as Plan\"}),\".\"]}),`\n`]}),`\n`]}),`\n`,(0,e.jsx)(o,{caption:{title:\"Figure 12.\",description:\"hoose developer trial option\"},src:\"/assets/images/tutorials/how-to-deploy-your-chatbot-to-line/image12.webp\",alt:\"How to deploy your chatbot to LINE\",naturalHeight:351,naturalWidth:1600}),`\n`,(0,e.jsxs)(t.ol,{start:\"12\",children:[`\n`,(0,e.jsxs)(t.li,{children:[\"Finally, click \",(0,e.jsx)(t.strong,{children:\"Create\"}),\". The successfully created channel will look like this.\"]}),`\n`]}),`\n`,(0,e.jsx)(o,{caption:{title:\"Figure 13.\",description:\"New channel.\"},src:\"/assets/images/tutorials/how-to-deploy-your-chatbot-to-line/image13.webp\",alt:\"How to deploy your chatbot to LINE\",naturalHeight:1012,naturalWidth:1176}),`\n`,(0,e.jsxs)(t.h3,{id:\"integrate-line-to-your-chatbot\",children:[(0,e.jsx)(t.a,{className:\"anchor\",href:\"#integrate-line-to-your-chatbot\",children:(0,e.jsx)(t.span,{className:\"icon icon-link\"})}),\"Integrate LINE to your chatbot\"]}),`\n`,(0,e.jsxs)(t.ol,{children:[`\n`,(0,e.jsxs)(t.li,{children:[`\n`,(0,e.jsx)(t.p,{children:\"Click on the created channel to fill in the Channel Access Token\"}),`\n`]}),`\n`,(0,e.jsxs)(t.li,{children:[`\n`,(0,e.jsxs)(t.p,{children:[\"Click \",(0,e.jsx)(t.strong,{children:\"\\u201CIssue\\u201D\"}),\" in the Messaging Settings section.\"]}),`\n`]}),`\n`]}),`\n`,(0,e.jsx)(o,{caption:{title:\"Figure 14.\",description:\"Issue access token.\"},src:\"/assets/images/tutorials/how-to-deploy-your-chatbot-to-line/image14.webp\",alt:\"How to deploy your chatbot to LINE\",naturalHeight:638,naturalWidth:1600}),`\n`,(0,e.jsxs)(t.ol,{start:\"3\",children:[`\n`,(0,e.jsxs)(t.li,{children:[`\n`,(0,e.jsxs)(t.p,{children:[\"Then, a dialog will show. Click on \",(0,e.jsx)(t.strong,{children:\"Issue\"}),\" to continue.\"]}),`\n`]}),`\n`,(0,e.jsxs)(t.li,{children:[`\n`,(0,e.jsxs)(t.p,{children:[\"Finally, copy the \",(0,e.jsx)(t.strong,{children:\"Channel Access Token\"}),\" below and paste it on the Create Channel form in the Kata Platform.\"]}),`\n`]}),`\n`]}),`\n`,(0,e.jsx)(o,{caption:{title:\"Figure 15.\",description:\"Show Channel Access Token.\"},src:\"/assets/images/tutorials/how-to-deploy-your-chatbot-to-line/image15.webp\",alt:\"How to deploy your chatbot to LINE\",naturalHeight:223,naturalWidth:1600}),`\n`,(0,e.jsxs)(t.ol,{start:\"5\",children:[`\n`,(0,e.jsx)(t.li,{children:\"Go back to Kata Platform, then paste the Channel Access Token.\"}),`\n`]}),`\n`,(0,e.jsx)(o,{caption:{title:\"Figure 16.\",description:\"Paste Channel Access Token.\"},src:\"/assets/images/tutorials/how-to-deploy-your-chatbot-to-line/image16.webp\",alt:\"How to deploy your chatbot to LINE\",naturalHeight:964,naturalWidth:740}),`\n`,(0,e.jsxs)(t.ol,{start:\"6\",children:[`\n`,(0,e.jsx)(t.li,{children:\"Next, you will fill in the Channel Secret field. Then, in Basic Information, copy Channel Secret from LINE to the Kata Platform.\"}),`\n`]}),`\n`,(0,e.jsx)(o,{caption:{title:\"Figure 17.\",description:\"Copy Channel Secret.\"},src:\"/assets/images/tutorials/how-to-deploy-your-chatbot-to-line/image17.webp\",alt:\"How to deploy your chatbot to LINE\",naturalHeight:891,naturalWidth:1600}),`\n`,(0,e.jsxs)(t.ol,{start:\"7\",children:[`\n`,(0,e.jsx)(t.li,{children:\"Go back to the Kata Platform, then paste the Channel Secret.\"}),`\n`]}),`\n`,(0,e.jsx)(o,{caption:{title:\"Figure 18.\",description:\"All fields are filled in.\"},src:\"/assets/images/tutorials/how-to-deploy-your-chatbot-to-line/image18.webp\",alt:\"How to deploy your chatbot to LINE\",naturalHeight:996,naturalWidth:766}),`\n`,(0,e.jsxs)(t.ol,{start:\"8\",children:[`\n`,(0,e.jsxs)(t.li,{children:[\"Click \",(0,e.jsx)(t.strong,{children:\"\\u201CCreate\\u201D\"}),\" to generate a webhook URL from the Kata Platform.\"]}),`\n`]}),`\n`,(0,e.jsx)(t.p,{children:\"After the webhook URL is generated, go to Messaging Settings in the LINE developer console to enable webhook.\"}),`\n`,(0,e.jsxs)(t.ol,{start:\"9\",children:[`\n`,(0,e.jsxs)(t.li,{children:[\"Enable the webhook by clicking on \",(0,e.jsx)(t.strong,{children:\"Enable\"}),\" in the \",(0,e.jsx)(t.strong,{children:\"\\u201CUse Webhooks\\u201D\"}),\" section, placed above the Webhook URL field.\"]}),`\n`]}),`\n`,(0,e.jsx)(o,{caption:{title:\"Figure 19.\",description:\"Enable webhook.\"},src:\"/assets/images/tutorials/how-to-deploy-your-chatbot-to-line/image19.webp\",alt:\"How to deploy your chatbot to LINE\",naturalHeight:383,naturalWidth:1600}),`\n`,(0,e.jsxs)(t.ol,{start:\"10\",children:[`\n`,(0,e.jsxs)(t.li,{children:[\"Click \",(0,e.jsx)(t.strong,{children:\"\\u201CUpdate,\\u201D\"}),\" then paste the webhook URL to the LINE developer console.\"]}),`\n`]}),`\n`,(0,e.jsx)(o,{caption:{title:\"Figure 20.\",description:\"Paste webhook from Kata Platform.\"},src:\"/assets/images/tutorials/how-to-deploy-your-chatbot-to-line/image20.webp\",alt:\"How to deploy your chatbot to LINE\",naturalHeight:506,naturalWidth:1600}),`\n`,(0,e.jsxs)(t.ol,{start:\"11\",children:[`\n`,(0,e.jsxs)(t.li,{children:[`\n`,(0,e.jsxs)(t.p,{children:[\"Click \",(0,e.jsx)(t.strong,{children:\"\\u201CUpdate\\u201D\"}),\", then click \",(0,e.jsx)(t.strong,{children:\"\\u201CVerify\\u201D\"}),\".\"]}),`\n`]}),`\n`,(0,e.jsxs)(t.li,{children:[`\n`,(0,e.jsx)(t.p,{children:\"Next, disable auto-reply messages and greeting messages by following figure 21.\"}),`\n`]}),`\n`]}),`\n`,(0,e.jsx)(o,{caption:{title:\"Figure 21.\",description:\"Disable auto-reply and greeting messages.\"},src:\"/assets/images/tutorials/how-to-deploy-your-chatbot-to-line/image21.webp\",alt:\"How to deploy your chatbot to LINE\",naturalHeight:484,naturalWidth:1600}),`\n`,(0,e.jsxs)(t.ol,{start:\"13\",children:[`\n`,(0,e.jsxs)(t.li,{children:[`\n`,(0,e.jsx)(t.p,{children:\"Congratulations, you have successfully deployed your bot to LINE Messenger.\"}),`\n`]}),`\n`,(0,e.jsxs)(t.li,{children:[`\n`,(0,e.jsx)(t.p,{children:\"Next, test your bot by scanning the QR code.\"}),`\n`]}),`\n`]}),`\n`,(0,e.jsxs)(t.p,{children:[\"It is the end of the guidance. If you find it difficult to follow, you can contact \",(0,e.jsx)(t.a,{href:\"mailto:support@kata.ai\",children:\"support@kata.ai\"}),\". Thank you.\"]})]})}}var k=N;function E(n,i){throw new Error(\"Expected \"+(i?\"component\":\"object\")+\" `\"+n+\"` to be defined: you likely forgot to import, pass, or provide it.\")}return f(L);})();\n;return Component;"},"_id":"tutorials/how-to-deploy-your-chatbot-to-line.mdx","_raw":{"sourceFilePath":"tutorials/how-to-deploy-your-chatbot-to-line.mdx","sourceFileName":"how-to-deploy-your-chatbot-to-line.mdx","sourceFileDir":"tutorials","contentType":"mdx","flattenedPath":"tutorials/how-to-deploy-your-chatbot-to-line"},"type":"Tutorials","slug":["how-to-deploy-your-chatbot-to-line"],"excerpt":"\nLINE is a free messaging platform and is famous in Indonesia. This messaging platform supports various interactive action types such as carousel, button, Image Map, and many more"},{"layout":"tutorial","id":"how-to-deploy-your-chatbot-using-twitter","imgSpot":"/assets/images/tutorials/spot-twitter.webp","product":"kata-platform","title":"How to deploy your chatbot using Twitter","date":"2021-08-26T07:00:00+07:00","body":{"raw":"\nTwitter is a trending social media for most countries, so Twitter chatbots will be a great opportunity to join the trend ✨ In this tutorial, you will learn how to deploy the bot to the Twitter direct message channel. So, let’s get started.\n\n## Deploy your chatbot\n\n1. Click **Deploy** menu in the left sidebar\n2. On the Deploy page, click on the **New Deployment** button in the top right corner. It will open up the Create Deployment menu.\n3. Choose any deployment version you want to deploy and fill in the changelog.\n\n<FigureImage\n  caption={{ title: 'Figure 1.', description: `Create a new deployment` }}\n  src=\"/assets/images/tutorials/how-to-deploy-your-chatbot-using-twitter/image1.webp\"\n  alt=\"How to deploy your chatbot to Twitter\"\n  naturalHeight={1600}\n  naturalWidth={1133}\n/>\n\n1. Click **Submit** to finish the deployment\n\nIf you already have an environment created, skip these steps.\n\n1. Go to the **Deployments > Environment** menu.\n\n<FigureImage\n  caption={{ title: 'Figure 2.', description: `Set up environment, then set up Twitter channel` }}\n  src=\"/assets/images/tutorials/how-to-deploy-your-chatbot-using-twitter/image2.webp\"\n  alt=\"How to deploy your chatbot to Twitter\"\n  naturalHeight={505}\n  naturalWidth={1600}\n/>\n\n2. Click the **Create Environment** button in any environment. You will see a drawer to create a new environment.\n3. Choose the **development version** you want (in this tutorial, we use the 1.0.0 version)\n4. Fill in the **environment URL**. This environment URL is used for CMS. Learn more about CMS.\n5. Click **Create** to create the environment.\n6. Created environment now has a **Create Channel** button.\n\nContinue to choose Twitter as a chatbot channel.\n\n1. Click the **Create Channel** button to start adding channels to the environment. It will open up the Channel menu within the environment.\n2. Click the ”**+ Create Channel**” button in the channel table list. A menu to set up the channel will be shown.\n3. Choose **Twitter** in Channel Type.\n\n<FigureImage\n  caption={{ title: 'Figure 3.', description: `Create Twitter channel` }}\n  src=\"/assets/images/tutorials/how-to-deploy-your-chatbot-using-twitter/image3.webp\"\n  alt=\"How to deploy your chatbot to Twitter\"\n  naturalHeight={1218}\n  naturalWidth={1600}\n/>\n\n<Table>\n  <TableHead>\n    <TableHeadRow>\n      <TableHeadCell>Field Name</TableHeadCell>\n      <TableHeadCell>Functionality</TableHeadCell>\n      <TableHeadCell>Limitation</TableHeadCell>\n    </TableHeadRow>\n  </TableHead>\n  <TableBody>\n    <TableBodyRow>\n      <TableBodyCell>Name</TableBodyCell>\n      <TableBodyCell>Your channel name</TableBodyCell>\n      <TableBodyCell>\n        Max. 30 characters must contain only alphanumeric characters (A-Z, a-z, 0-9), `-`, and `_`.\n      </TableBodyCell>\n    </TableBodyRow>\n    <TableBodyRow>\n      <TableBodyCell>Access Token</TableBodyCell>\n      <TableBodyCell>-</TableBodyCell>\n      <TableBodyCell>-</TableBodyCell>\n    </TableBodyRow>\n    <TableBodyRow>\n      <TableBodyCell>Access Token Secret</TableBodyCell>\n      <TableBodyCell>- </TableBodyCell>\n      <TableBodyCell>-</TableBodyCell>\n    </TableBodyRow>\n    <TableBodyRow>\n      <TableBodyCell>Consumer Key (API Key)</TableBodyCell>\n      <TableBodyCell>- </TableBodyCell>\n      <TableBodyCell>-</TableBodyCell>\n    </TableBodyRow>\n    <TableBodyRow>\n      <TableBodyCell>Consumer Secret (API Secret)</TableBodyCell>\n      <TableBodyCell>- </TableBodyCell>\n      <TableBodyCell>-</TableBodyCell>\n    </TableBodyRow>\n  </TableBody>\n</Table>\n\n## How to collect API secret key, access token, and access token secret\n\n1. To deploy your bot on Twitter, you need to register for a developer account. Go to <a href=\"https://developer.twitter.com\" target=\"_blank\"><span>http</span>s://developer.twitter.com</a>.\n2. Continue to sign up by following the instructions.\n3. Then, log in to the Twitter Developer Page. You will see the homepage.\n4. Click on **Create An App** tab, then your page will be shown like this:\n\n<FigureImage\n  caption={{ title: 'Figure 4.', description: ` Create an app page.` }}\n  src=\"/assets/images/tutorials/how-to-deploy-your-chatbot-using-twitter/image4.webp\"\n  alt=\"How to deploy your chatbot to Twitter\"\n  naturalHeight={600}\n  naturalWidth={741}\n/>\n\n5. Fill the form then click on **Create** button\n6. Then, go to the **Keys and tokens** tab. Click the **Regenerate** button to generate an API key, API secret key, access token, and access token secret. Here is an example.\n\n<FigureImage\n  caption={{ title: 'Figure 5.', description: `Generate access token and access token secret` }}\n  src=\"/assets/images/tutorials/how-to-deploy-your-chatbot-using-twitter/image5.webp\"\n  alt=\"How to deploy your chatbot to Twitter\"\n  naturalHeight={378}\n  naturalWidth={757}\n/>\n\n7. Then, go to the **Permissions** tab. In this tab, change access permissions to **Read, write, and Direct Message**.\n\n<FigureImage\n  caption={{ title: 'Figure 6.', description: `Access permissions changed to Read, write and Direct Messages` }}\n  src=\"/assets/images/tutorials/how-to-deploy-your-chatbot-using-twitter/image6.webp\"\n  alt=\"How to deploy your chatbot to Twitter\"\n  naturalHeight={273}\n  naturalWidth={750}\n/>\n\n8. Go to the **Dev environments**(<a href=\"https://developer.twitter.com/en/account/environments\" target=\"_blank\"><span>http</span>s://developer.twitter.com/en/account/environments</a>), then click the button **Set up dev environment** to begin.\n\n<FigureImage\n  caption={{ title: 'Figure 7.', description: `Set up dev environment` }}\n  src=\"/assets/images/tutorials/how-to-deploy-your-chatbot-using-twitter/image7.webp\"\n  alt=\"How to deploy your chatbot to Twitter\"\n  naturalHeight={429}\n  naturalWidth={934}\n/>\n\nNext step is to paste the API key, API secret key, access token, and access token secret from Twitter to the Kata Platform.\n\n1. Go back to the Key and Tokens tab, copy all fields.\n2. After copied, go back to Kata Platform (<a href=\"https://platform.kata.ai\" target=\"_blank\"><span>http</span>s://platform.kata.ai</a>)\n3. Paste the API key, API secret key, access token, and access token secret there. Here is the example:\n\n<FigureImage\n  caption={{ title: 'Figure 8.', description: `Paste API key, API secret key, access token, and access token secret` }}\n  src=\"/assets/images/tutorials/how-to-deploy-your-chatbot-using-twitter/image8.webp\"\n  alt=\"How to deploy your chatbot to Twitter\"\n  naturalHeight={1287}\n  naturalWidth={1600}\n/>\n\n4. Click **Create** to generate the webhook. You can see a webhook URL from the generated channel.\n5. Click the **copy** icon to copy the webhook URL.\n\n<FigureImage\n  caption={{ title: 'Figure 9.', description: `Copy webhook URL` }}\n  src=\"/assets/images/tutorials/how-to-deploy-your-chatbot-using-twitter/image9.webp\"\n  alt=\"How to deploy your chatbot to Twitter\"\n  naturalHeight={282}\n  naturalWidth={1600}\n/>\n\n## Finalize Twitter Direct Message Set Up\n\n1. Clone this repository: <a href=\"https://github.com/twitterdev/account-activity-dashboard\" target=\"_blank\"><span>http</span>s://github.com/twitterdev/account-activity-dashboard</a>\n2. Install Node.js dependencies using **npm install** command.\n3. Create a new **config.json** file based on **config.sample.json** & **.env** file based on **env.template** and fill in your Twitter keys, tokens and webhook environment name. Twitter keys and access tokens are found on your app page on Apps Dashboard (<a href=\"https://developer.twitter.com/apps\" target=\"_blank\"><span>http</span>s://developer.twitter.com/apps</a>). The basic auth properties can be anything you want, and are used for simple password protection to access the configuration UI. Environment name is found on the Dev Environment (<a href=\"https://developer.twitter.com/en/account/environments\" target=\"_blank\"><span>http</span>s://developer.twitter.com/en/account/environments</a>) page. Make sure you have access to the Account Activity API.\n4. Revisit your developer.twitter.com Apps Settings page, and add the following URL values as whitelisted Callback URLs:\n\n```\nhttp://your.app.domain/callbacks/addsub\nhttp://your.app.domain/callbacks/removesub\n```\n\n5. Run locally using **npm start** command\n6. Open <a href=\"http://your.app.domain/webhook\" target=\"_blank\"><span>htt</span>p://your.app.domain/webhook</a>. If it succeeds, username and password are inserted with basic auth properties that you have defined before.\n7. Paste webhook from Kata Platform to Create or Update Webhook. Click **Create/Update** to continue.\n\n<FigureImage\n  caption={{ title: 'Figure 10.', description: `Paste webhook URL from Kata Platform` }}\n  src=\"/assets/images/tutorials/how-to-deploy-your-chatbot-using-twitter/image10.webp\"\n  alt=\"How to deploy your chatbot to Twitter\"\n  naturalHeight={324}\n  naturalWidth={828}\n/>\n\n8. Next, open <a href=\"http://your.app.domain/subscriptions\" target=\"_blank\"><span>htt</span>p://your.app.domain/subscriptions</a>.\n9. Then, click **Add** to add a user subscription. Login with the same account that you set to become the bot.\n\n<FigureImage\n  caption={{ title: 'Figure 11.', description: `Manage subscription page` }}\n  src=\"/assets/images/tutorials/how-to-deploy-your-chatbot-using-twitter/image11.webp\"\n  alt=\"How to deploy your chatbot to Twitter\"\n  naturalHeight={346}\n  naturalWidth={1091}\n/>\n\n10. Finally, create a direct message to the bot account.\n\n<FigureImage\n  caption={{ title: 'Figure 12.', description: `Chatbot successfully deployed` }}\n  src=\"/assets/images/tutorials/how-to-deploy-your-chatbot-using-twitter/image12.webp\"\n  alt=\"How to deploy your chatbot to Twitter\"\n  naturalHeight={509}\n  naturalWidth={725}\n/>\n\nThis is the end of the guidance, you can contact support@kata.ai if you have any difficulties when implementing this.\n","code":"var Component=(()=>{var k=Object.create;var h=Object.defineProperty;var f=Object.getOwnPropertyDescriptor;var v=Object.getOwnPropertyNames;var T=Object.getPrototypeOf,C=Object.prototype.hasOwnProperty;var m=n=>h(n,\"__esModule\",{value:!0});var H=(n,o)=>()=>(o||n((o={exports:{}}).exports,o),o.exports),A=(n,o)=>{for(var a in o)h(n,a,{get:o[a],enumerable:!0})},w=(n,o,a,t)=>{if(o&&typeof o==\"object\"||typeof o==\"function\")for(let i of v(o))!C.call(n,i)&&(a||i!==\"default\")&&h(n,i,{get:()=>o[i],enumerable:!(t=f(o,i))||t.enumerable});return n},F=(n,o)=>w(m(h(n!=null?k(T(n)):{},\"default\",!o&&n&&n.__esModule?{get:()=>n.default,enumerable:!0}:{value:n,enumerable:!0})),n),I=(n=>(o,a)=>n&&n.get(o)||(a=w(m({}),o,1),n&&n.set(o,a),a))(typeof WeakMap!=\"undefined\"?new WeakMap:0);var b=H((N,y)=>{y.exports=_jsx_runtime});var x={};A(x,{default:()=>_,frontmatter:()=>P});var e=F(b()),P={layout:\"tutorial\",title:\"How to deploy your chatbot using Twitter\",id:\"how-to-deploy-your-chatbot-using-twitter\",product:\"kata-platform\",imgSpot:\"/assets/images/tutorials/spot-twitter.webp\",date:\"2021-08-26T07:00:00+07:00\"};function R(n={}){let{wrapper:o}=n.components||{};return o?(0,e.jsx)(o,Object.assign({},n,{children:(0,e.jsx)(a,{})})):a();function a(){let t=Object.assign({p:\"p\",h2:\"h2\",a:\"a\",span:\"span\",ol:\"ol\",li:\"li\",strong:\"strong\",code:\"code\",pre:\"pre\"},n.components),{FigureImage:i,Table:d,TableHead:p,TableHeadRow:u,TableHeadCell:s,TableBody:g,TableBodyRow:c,TableBodyCell:r}=t;return i||l(\"FigureImage\",!0),d||l(\"Table\",!0),g||l(\"TableBody\",!0),r||l(\"TableBodyCell\",!0),c||l(\"TableBodyRow\",!0),p||l(\"TableHead\",!0),s||l(\"TableHeadCell\",!0),u||l(\"TableHeadRow\",!0),(0,e.jsxs)(e.Fragment,{children:[(0,e.jsx)(t.p,{children:\"Twitter is a trending social media for most countries, so Twitter chatbots will be a great opportunity to join the trend \\u2728 In this tutorial, you will learn how to deploy the bot to the Twitter direct message channel. So, let\\u2019s get started.\"}),`\n`,(0,e.jsxs)(t.h2,{id:\"deploy-your-chatbot\",children:[(0,e.jsx)(t.a,{className:\"anchor\",href:\"#deploy-your-chatbot\",children:(0,e.jsx)(t.span,{className:\"icon icon-link\"})}),\"Deploy your chatbot\"]}),`\n`,(0,e.jsxs)(t.ol,{children:[`\n`,(0,e.jsxs)(t.li,{children:[\"Click \",(0,e.jsx)(t.strong,{children:\"Deploy\"}),\" menu in the left sidebar\"]}),`\n`,(0,e.jsxs)(t.li,{children:[\"On the Deploy page, click on the \",(0,e.jsx)(t.strong,{children:\"New Deployment\"}),\" button in the top right corner. It will open up the Create Deployment menu.\"]}),`\n`,(0,e.jsx)(t.li,{children:\"Choose any deployment version you want to deploy and fill in the changelog.\"}),`\n`]}),`\n`,(0,e.jsx)(i,{caption:{title:\"Figure 1.\",description:\"Create a new deployment\"},src:\"/assets/images/tutorials/how-to-deploy-your-chatbot-using-twitter/image1.webp\",alt:\"How to deploy your chatbot to Twitter\",naturalHeight:1600,naturalWidth:1133}),`\n`,(0,e.jsxs)(t.ol,{children:[`\n`,(0,e.jsxs)(t.li,{children:[\"Click \",(0,e.jsx)(t.strong,{children:\"Submit\"}),\" to finish the deployment\"]}),`\n`]}),`\n`,(0,e.jsx)(t.p,{children:\"If you already have an environment created, skip these steps.\"}),`\n`,(0,e.jsxs)(t.ol,{children:[`\n`,(0,e.jsxs)(t.li,{children:[\"Go to the \",(0,e.jsx)(t.strong,{children:\"Deployments > Environment\"}),\" menu.\"]}),`\n`]}),`\n`,(0,e.jsx)(i,{caption:{title:\"Figure 2.\",description:\"Set up environment, then set up Twitter channel\"},src:\"/assets/images/tutorials/how-to-deploy-your-chatbot-using-twitter/image2.webp\",alt:\"How to deploy your chatbot to Twitter\",naturalHeight:505,naturalWidth:1600}),`\n`,(0,e.jsxs)(t.ol,{start:\"2\",children:[`\n`,(0,e.jsxs)(t.li,{children:[\"Click the \",(0,e.jsx)(t.strong,{children:\"Create Environment\"}),\" button in any environment. You will see a drawer to create a new environment.\"]}),`\n`,(0,e.jsxs)(t.li,{children:[\"Choose the \",(0,e.jsx)(t.strong,{children:\"development version\"}),\" you want (in this tutorial, we use the 1.0.0 version)\"]}),`\n`,(0,e.jsxs)(t.li,{children:[\"Fill in the \",(0,e.jsx)(t.strong,{children:\"environment URL\"}),\". This environment URL is used for CMS. Learn more about CMS.\"]}),`\n`,(0,e.jsxs)(t.li,{children:[\"Click \",(0,e.jsx)(t.strong,{children:\"Create\"}),\" to create the environment.\"]}),`\n`,(0,e.jsxs)(t.li,{children:[\"Created environment now has a \",(0,e.jsx)(t.strong,{children:\"Create Channel\"}),\" button.\"]}),`\n`]}),`\n`,(0,e.jsx)(t.p,{children:\"Continue to choose Twitter as a chatbot channel.\"}),`\n`,(0,e.jsxs)(t.ol,{children:[`\n`,(0,e.jsxs)(t.li,{children:[\"Click the \",(0,e.jsx)(t.strong,{children:\"Create Channel\"}),\" button to start adding channels to the environment. It will open up the Channel menu within the environment.\"]}),`\n`,(0,e.jsxs)(t.li,{children:[\"Click the \\u201D\",(0,e.jsx)(t.strong,{children:\"+ Create Channel\"}),\"\\u201D button in the channel table list. A menu to set up the channel will be shown.\"]}),`\n`,(0,e.jsxs)(t.li,{children:[\"Choose \",(0,e.jsx)(t.strong,{children:\"Twitter\"}),\" in Channel Type.\"]}),`\n`]}),`\n`,(0,e.jsx)(i,{caption:{title:\"Figure 3.\",description:\"Create Twitter channel\"},src:\"/assets/images/tutorials/how-to-deploy-your-chatbot-using-twitter/image3.webp\",alt:\"How to deploy your chatbot to Twitter\",naturalHeight:1218,naturalWidth:1600}),`\n`,(0,e.jsxs)(d,{children:[(0,e.jsx)(p,{children:(0,e.jsxs)(u,{children:[(0,e.jsx)(s,{children:\"Field Name\"}),`\n`,(0,e.jsx)(s,{children:\"Functionality\"}),`\n`,(0,e.jsx)(s,{children:\"Limitation\"})]})}),(0,e.jsxs)(g,{children:[(0,e.jsxs)(c,{children:[(0,e.jsx)(r,{children:\"Name\"}),`\n`,(0,e.jsx)(r,{children:\"Your channel name\"}),(0,e.jsx)(r,{children:(0,e.jsxs)(t.p,{children:[\"Max. 30 characters must contain only alphanumeric characters (A-Z, a-z, 0-9), \",(0,e.jsx)(t.code,{children:\"-\"}),\", and \",(0,e.jsx)(t.code,{children:\"_\"}),\".\"]})})]}),(0,e.jsxs)(c,{children:[(0,e.jsx)(r,{children:\"Access Token\"}),`\n`,(0,e.jsx)(r,{children:\"-\"}),`\n`,(0,e.jsx)(r,{children:\"-\"})]}),(0,e.jsxs)(c,{children:[(0,e.jsx)(r,{children:\"Access Token Secret\"}),`\n`,(0,e.jsx)(r,{children:\"- \"}),`\n`,(0,e.jsx)(r,{children:\"-\"})]}),(0,e.jsxs)(c,{children:[(0,e.jsx)(r,{children:\"Consumer Key (API Key)\"}),`\n`,(0,e.jsx)(r,{children:\"- \"}),`\n`,(0,e.jsx)(r,{children:\"-\"})]}),(0,e.jsxs)(c,{children:[(0,e.jsx)(r,{children:\"Consumer Secret (API Secret)\"}),`\n`,(0,e.jsx)(r,{children:\"- \"}),`\n`,(0,e.jsx)(r,{children:\"-\"})]})]})]}),`\n`,(0,e.jsxs)(t.h2,{id:\"how-to-collect-api-secret-key-access-token-and-access-token-secret\",children:[(0,e.jsx)(t.a,{className:\"anchor\",href:\"#how-to-collect-api-secret-key-access-token-and-access-token-secret\",children:(0,e.jsx)(t.span,{className:\"icon icon-link\"})}),\"How to collect API secret key, access token, and access token secret\"]}),`\n`,(0,e.jsxs)(t.ol,{children:[`\n`,(0,e.jsxs)(t.li,{children:[\"To deploy your bot on Twitter, you need to register for a developer account. Go to \",(0,e.jsxs)(\"a\",{href:\"https://developer.twitter.com\",target:\"_blank\",children:[(0,e.jsx)(\"span\",{children:\"http\"}),\"s://developer.twitter.com\"]}),\".\"]}),`\n`,(0,e.jsx)(t.li,{children:\"Continue to sign up by following the instructions.\"}),`\n`,(0,e.jsx)(t.li,{children:\"Then, log in to the Twitter Developer Page. You will see the homepage.\"}),`\n`,(0,e.jsxs)(t.li,{children:[\"Click on \",(0,e.jsx)(t.strong,{children:\"Create An App\"}),\" tab, then your page will be shown like this:\"]}),`\n`]}),`\n`,(0,e.jsx)(i,{caption:{title:\"Figure 4.\",description:\" Create an app page.\"},src:\"/assets/images/tutorials/how-to-deploy-your-chatbot-using-twitter/image4.webp\",alt:\"How to deploy your chatbot to Twitter\",naturalHeight:600,naturalWidth:741}),`\n`,(0,e.jsxs)(t.ol,{start:\"5\",children:[`\n`,(0,e.jsxs)(t.li,{children:[\"Fill the form then click on \",(0,e.jsx)(t.strong,{children:\"Create\"}),\" button\"]}),`\n`,(0,e.jsxs)(t.li,{children:[\"Then, go to the \",(0,e.jsx)(t.strong,{children:\"Keys and tokens\"}),\" tab. Click the \",(0,e.jsx)(t.strong,{children:\"Regenerate\"}),\" button to generate an API key, API secret key, access token, and access token secret. Here is an example.\"]}),`\n`]}),`\n`,(0,e.jsx)(i,{caption:{title:\"Figure 5.\",description:\"Generate access token and access token secret\"},src:\"/assets/images/tutorials/how-to-deploy-your-chatbot-using-twitter/image5.webp\",alt:\"How to deploy your chatbot to Twitter\",naturalHeight:378,naturalWidth:757}),`\n`,(0,e.jsxs)(t.ol,{start:\"7\",children:[`\n`,(0,e.jsxs)(t.li,{children:[\"Then, go to the \",(0,e.jsx)(t.strong,{children:\"Permissions\"}),\" tab. In this tab, change access permissions to \",(0,e.jsx)(t.strong,{children:\"Read, write, and Direct Message\"}),\".\"]}),`\n`]}),`\n`,(0,e.jsx)(i,{caption:{title:\"Figure 6.\",description:\"Access permissions changed to Read, write and Direct Messages\"},src:\"/assets/images/tutorials/how-to-deploy-your-chatbot-using-twitter/image6.webp\",alt:\"How to deploy your chatbot to Twitter\",naturalHeight:273,naturalWidth:750}),`\n`,(0,e.jsxs)(t.ol,{start:\"8\",children:[`\n`,(0,e.jsxs)(t.li,{children:[\"Go to the \",(0,e.jsx)(t.strong,{children:\"Dev environments\"}),\"(\",(0,e.jsxs)(\"a\",{href:\"https://developer.twitter.com/en/account/environments\",target:\"_blank\",children:[(0,e.jsx)(\"span\",{children:\"http\"}),\"s://developer.twitter.com/en/account/environments\"]}),\"), then click the button \",(0,e.jsx)(t.strong,{children:\"Set up dev environment\"}),\" to begin.\"]}),`\n`]}),`\n`,(0,e.jsx)(i,{caption:{title:\"Figure 7.\",description:\"Set up dev environment\"},src:\"/assets/images/tutorials/how-to-deploy-your-chatbot-using-twitter/image7.webp\",alt:\"How to deploy your chatbot to Twitter\",naturalHeight:429,naturalWidth:934}),`\n`,(0,e.jsx)(t.p,{children:\"Next step is to paste the API key, API secret key, access token, and access token secret from Twitter to the Kata Platform.\"}),`\n`,(0,e.jsxs)(t.ol,{children:[`\n`,(0,e.jsx)(t.li,{children:\"Go back to the Key and Tokens tab, copy all fields.\"}),`\n`,(0,e.jsxs)(t.li,{children:[\"After copied, go back to Kata Platform (\",(0,e.jsxs)(\"a\",{href:\"https://platform.kata.ai\",target:\"_blank\",children:[(0,e.jsx)(\"span\",{children:\"http\"}),\"s://platform.kata.ai\"]}),\")\"]}),`\n`,(0,e.jsx)(t.li,{children:\"Paste the API key, API secret key, access token, and access token secret there. Here is the example:\"}),`\n`]}),`\n`,(0,e.jsx)(i,{caption:{title:\"Figure 8.\",description:\"Paste API key, API secret key, access token, and access token secret\"},src:\"/assets/images/tutorials/how-to-deploy-your-chatbot-using-twitter/image8.webp\",alt:\"How to deploy your chatbot to Twitter\",naturalHeight:1287,naturalWidth:1600}),`\n`,(0,e.jsxs)(t.ol,{start:\"4\",children:[`\n`,(0,e.jsxs)(t.li,{children:[\"Click \",(0,e.jsx)(t.strong,{children:\"Create\"}),\" to generate the webhook. You can see a webhook URL from the generated channel.\"]}),`\n`,(0,e.jsxs)(t.li,{children:[\"Click the \",(0,e.jsx)(t.strong,{children:\"copy\"}),\" icon to copy the webhook URL.\"]}),`\n`]}),`\n`,(0,e.jsx)(i,{caption:{title:\"Figure 9.\",description:\"Copy webhook URL\"},src:\"/assets/images/tutorials/how-to-deploy-your-chatbot-using-twitter/image9.webp\",alt:\"How to deploy your chatbot to Twitter\",naturalHeight:282,naturalWidth:1600}),`\n`,(0,e.jsxs)(t.h2,{id:\"finalize-twitter-direct-message-set-up\",children:[(0,e.jsx)(t.a,{className:\"anchor\",href:\"#finalize-twitter-direct-message-set-up\",children:(0,e.jsx)(t.span,{className:\"icon icon-link\"})}),\"Finalize Twitter Direct Message Set Up\"]}),`\n`,(0,e.jsxs)(t.ol,{children:[`\n`,(0,e.jsxs)(t.li,{children:[\"Clone this repository: \",(0,e.jsxs)(\"a\",{href:\"https://github.com/twitterdev/account-activity-dashboard\",target:\"_blank\",children:[(0,e.jsx)(\"span\",{children:\"http\"}),\"s://github.com/twitterdev/account-activity-dashboard\"]})]}),`\n`,(0,e.jsxs)(t.li,{children:[\"Install Node.js dependencies using \",(0,e.jsx)(t.strong,{children:\"npm install\"}),\" command.\"]}),`\n`,(0,e.jsxs)(t.li,{children:[\"Create a new \",(0,e.jsx)(t.strong,{children:\"config.json\"}),\" file based on \",(0,e.jsx)(t.strong,{children:\"config.sample.json\"}),\" & \",(0,e.jsx)(t.strong,{children:\".env\"}),\" file based on \",(0,e.jsx)(t.strong,{children:\"env.template\"}),\" and fill in your Twitter keys, tokens and webhook environment name. Twitter keys and access tokens are found on your app page on Apps Dashboard (\",(0,e.jsxs)(\"a\",{href:\"https://developer.twitter.com/apps\",target:\"_blank\",children:[(0,e.jsx)(\"span\",{children:\"http\"}),\"s://developer.twitter.com/apps\"]}),\"). The basic auth properties can be anything you want, and are used for simple password protection to access the configuration UI. Environment name is found on the Dev Environment (\",(0,e.jsxs)(\"a\",{href:\"https://developer.twitter.com/en/account/environments\",target:\"_blank\",children:[(0,e.jsx)(\"span\",{children:\"http\"}),\"s://developer.twitter.com/en/account/environments\"]}),\") page. Make sure you have access to the Account Activity API.\"]}),`\n`,(0,e.jsx)(t.li,{children:\"Revisit your developer.twitter.com Apps Settings page, and add the following URL values as whitelisted Callback URLs:\"}),`\n`]}),`\n`,(0,e.jsx)(t.pre,{children:(0,e.jsxs)(t.code,{className:\"code-highlight\",children:[(0,e.jsx)(t.span,{className:\"code-line\",children:`http://your.app.domain/callbacks/addsub\n`}),(0,e.jsx)(t.span,{className:\"code-line\",children:`http://your.app.domain/callbacks/removesub\n`})]})}),`\n`,(0,e.jsxs)(t.ol,{start:\"5\",children:[`\n`,(0,e.jsxs)(t.li,{children:[\"Run locally using \",(0,e.jsx)(t.strong,{children:\"npm start\"}),\" command\"]}),`\n`,(0,e.jsxs)(t.li,{children:[\"Open \",(0,e.jsxs)(\"a\",{href:\"http://your.app.domain/webhook\",target:\"_blank\",children:[(0,e.jsx)(\"span\",{children:\"htt\"}),\"p://your.app.domain/webhook\"]}),\". If it succeeds, username and password are inserted with basic auth properties that you have defined before.\"]}),`\n`,(0,e.jsxs)(t.li,{children:[\"Paste webhook from Kata Platform to Create or Update Webhook. Click \",(0,e.jsx)(t.strong,{children:\"Create/Update\"}),\" to continue.\"]}),`\n`]}),`\n`,(0,e.jsx)(i,{caption:{title:\"Figure 10.\",description:\"Paste webhook URL from Kata Platform\"},src:\"/assets/images/tutorials/how-to-deploy-your-chatbot-using-twitter/image10.webp\",alt:\"How to deploy your chatbot to Twitter\",naturalHeight:324,naturalWidth:828}),`\n`,(0,e.jsxs)(t.ol,{start:\"8\",children:[`\n`,(0,e.jsxs)(t.li,{children:[\"Next, open \",(0,e.jsxs)(\"a\",{href:\"http://your.app.domain/subscriptions\",target:\"_blank\",children:[(0,e.jsx)(\"span\",{children:\"htt\"}),\"p://your.app.domain/subscriptions\"]}),\".\"]}),`\n`,(0,e.jsxs)(t.li,{children:[\"Then, click \",(0,e.jsx)(t.strong,{children:\"Add\"}),\" to add a user subscription. Login with the same account that you set to become the bot.\"]}),`\n`]}),`\n`,(0,e.jsx)(i,{caption:{title:\"Figure 11.\",description:\"Manage subscription page\"},src:\"/assets/images/tutorials/how-to-deploy-your-chatbot-using-twitter/image11.webp\",alt:\"How to deploy your chatbot to Twitter\",naturalHeight:346,naturalWidth:1091}),`\n`,(0,e.jsxs)(t.ol,{start:\"10\",children:[`\n`,(0,e.jsx)(t.li,{children:\"Finally, create a direct message to the bot account.\"}),`\n`]}),`\n`,(0,e.jsx)(i,{caption:{title:\"Figure 12.\",description:\"Chatbot successfully deployed\"},src:\"/assets/images/tutorials/how-to-deploy-your-chatbot-using-twitter/image12.webp\",alt:\"How to deploy your chatbot to Twitter\",naturalHeight:509,naturalWidth:725}),`\n`,(0,e.jsxs)(t.p,{children:[\"This is the end of the guidance, you can contact \",(0,e.jsx)(t.a,{href:\"mailto:support@kata.ai\",children:\"support@kata.ai\"}),\" if you have any difficulties when implementing this.\"]})]})}}var _=R;function l(n,o){throw new Error(\"Expected \"+(o?\"component\":\"object\")+\" `\"+n+\"` to be defined: you likely forgot to import, pass, or provide it.\")}return I(x);})();\n;return Component;"},"_id":"tutorials/how-to-deploy-your-chatbot-using-twitter.mdx","_raw":{"sourceFilePath":"tutorials/how-to-deploy-your-chatbot-using-twitter.mdx","sourceFileName":"how-to-deploy-your-chatbot-using-twitter.mdx","sourceFileDir":"tutorials","contentType":"mdx","flattenedPath":"tutorials/how-to-deploy-your-chatbot-using-twitter"},"type":"Tutorials","slug":["how-to-deploy-your-chatbot-using-twitter"],"excerpt":"\nTwitter is a trending social media for most countries, so Twitter chatbots will be a great opportunity to join the trend ✨ In this tutorial, you will learn how to deploy the bot to the Twitter direct message channel. So, let’s get started"}]},"__N_SSG":true}